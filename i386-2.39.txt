


Gadgets
=======


0x000478c0: aaa; aas; stc; call dword ptr [eax - 0x18]; 
0x0018aebb: aaa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013f41d: aaa; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0010bdc4: aaa; add esp, 0x74; pop ebx; pop esi; ret; 
0x0007cae8: aaa; call dword ptr [ebx + 0xc]; 
0x000bcb04: aaa; call ebx; 
0x000bca5e: aaa; call esi; 
0x000a0cd0: aaa; clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0017fe75: aaa; clc; jmp dword ptr [esi - 0x70]; 
0x0018ab63: aaa; cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001895e3: aaa; dec esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001713c1: aaa; in al, dx; call dword ptr [eax - 0x73]; 
0x0010fa5e: aaa; int1; jmp dword ptr [ebp - 0x75]; 
0x00115c58: aaa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001159b8: aaa; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00089620: aaa; pop ebx; pop esi; pop edi; ret; 
0x00149ede: aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0006f595: aaa; ret; 
0x00166fb5: aaa; retf; cld; jmp dword ptr [esi - 0x70]; 
0x0018cfe3: aaa; sbb dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005d71f: aaa; sbb eax, 0xec838b00; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00132e08: aaa; sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x001603d4: aaa; std; dec dword ptr [ebp - 0x63b2b7a]; call dword ptr [eax - 0x73]; 
0x0016f9c8: aaa; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0008e171: aaa; test byte ptr [edx + 0x80], 0x10; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x00088c59: aaa; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000f4cb9: aad 0; add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000dbf5e: aad 0; add byte ptr [eax], al; add byte ptr [ecx], ch; shr byte ptr [ecx], 1; ret; 
0x0010301e: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000351fc: aad 0x3d; stc; call dword ptr [eax + 0x53]; 
0x001425bc: aad 0x3d; stc; call dword ptr [eax + 0x56]; 
0x0012ccf0: aad 0x64; stc; call dword ptr [eax - 1]; 
0x0012cc7d: aad 0x64; stc; call dword ptr [edx + 0x50]; 
0x00162723: aad 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00162723: aad 0x72; stc; call dword ptr [eax + 0x6a]; or al, ch; and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x00162823: aad 0x72; stc; call dword ptr [eax - 0x18]; 
0x00162777: aad 0x72; stc; jmp dword ptr [ebp - 0x75]; 
0x0012d30a: aad 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005e639: aad 0x83; ret 0x101; 
0x000a54e2: aad 0x83; ret 0x3801; 
0x0012c9fd: aad 0x83; ret 0x8901; 
0x000f3ee4: aad 0x89; fnstcw word ptr [ecx]; ret; 
0x00094302: aad 0x89; ret 0xe083; 
0x0004a03b: aad 0x89; ret; 
0x0007a770: aad 0x96; cli; jmp dword ptr [esi - 0x70]; 
0x00120e70: aad 0xc7; add eax, 0xc0c68100; call dword ptr [eax]; 
0x00185a17: aad 0xe0; cli; jmp dword ptr [esi - 0x70]; 
0x000e4de0: aad 0xe9; ret; 
0x0014e1f9: aad 0xf1; call dword ptr [eax - 0x18]; 
0x0015d249: aad 0xf2; call dword ptr [eax - 1]; 
0x000a29df: aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001583e7: aad 0xf; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000a243c: aad 0xf; xchg ebp, eax; ret 0xd789; 
0x00056736: aad 0xfd; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x00056755: aad 0xfd; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0005679f: aad 0xfd; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x6790779]; call dword ptr [eax - 0x73]; 
0x00073947: aad 3; cld; dec dword ptr [ebp - 0x683b37a]; call dword ptr [eax - 0x73]; 
0x0010ac9e: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123dfe: aam 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xd0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d1dc8: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000a750b: aam 0x31; fucomi st(3); or al, 0x83; ret; 
0x0004106a: aam 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0008e830: aam 0x3a; add byte ptr [eax], al; ret; 
0x00093f29: aam 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007e31f: aam 0x52; push ebx; push esi; call eax; 
0x000e1b35: aam 0x56; call eax; 
0x0011f19c: aam 0x62; stc; call dword ptr [edx + 0x50]; 
0x001619ef: aam 0x71; stc; call dword ptr [eax + 0x51]; 
0x0015ef71: aam 0x71; stc; call dword ptr [eax + 0x55]; 
0x0016126b: aam 0x71; stc; call dword ptr [eax + 0x57]; 
0x00030366: aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x000a8e39: aam 0x83; ret 0x3901; 
0x000a8793: aam 0x83; ret 0xf01; 
0x00059553: aam 0x83; ret; 
0x000477a1: aam 0x86; stc; call dword ptr [eax - 0x18]; 
0x00027867: aam 0x89; ret; 
0x000428c3: aam 0x8a; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x000a7444: aam 0x8b; dec ebp; sal byte ptr [ecx], 1; fucomi st(3); adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x0002750b: aam 0x8d; xchg al, cl; jle 0x2750a; call dword ptr [eax - 0x73]; 
0x0002753b: aam 0x8d; xchg al, cl; jle 0x2753a; call dword ptr [eax - 0x73]; 
0x00077878: aam 0x91; stc; jmp dword ptr [ebp - 0x75]; 
0x0008e224: aam 0x93; stc; call dword ptr [eax - 0x18]; 
0x0008e224: aam 0x93; stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x0008f98f: aam 0x94; stc; call dword ptr [eax - 0x18]; 
0x0008f98f: aam 0x94; stc; call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 6], eax; jmp dword ptr [esi - 0x70]; 
0x001085fc: aam 0xb0; stc; call dword ptr [eax - 0x73]; 
0x00115bc1: aam 0xb1; stc; call dword ptr [eax - 0x18]; 
0x0014121f: aam 0xbc; stc; call dword ptr [eax - 0x73]; 
0x000b404e: aam 0xbd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00160369: aam 0xc4; stc; call dword ptr [eax - 0x73]; 
0x00167318: aam 0xc7; cld; jmp dword ptr [esi - 0x70]; 
0x00147148: aam 0xcb; out dx, al; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x00155d12: aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x000d21eb: aam 0xf; lahf; ret; 
0x000760f9: aam 0xfa; jmp dword ptr [esi - 0x70]; 
0x001766c2: aam 0xfb; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x6367f7a]; call dword ptr [eax - 0x73]; 
0x00056838: aam 0xfd; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x001901db: aam 0xfe; inc dword ptr [ecx + 0x3eb7ac3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00067faa: aam 0xff; dec dword ptr [ecx - 0x5ab6b]; call dword ptr [edx + 0x52]; 
0x00169953: aam 0xff; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0003cf00: aam 1; add byte ptr [eax], al; ret; 
0x000cbd9b: aam 1; ret 0x1689; 
0x000cbb21: aam 1; ret 0x5389; 
0x0018a6db: aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010b051: aas; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00102465: aas; add byte ptr [eax], al; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x0008a9a0: aas; add byte ptr [eax], al; ja 0x8a9b0; ret; 
0x0019da92: aas; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x001024ae: aas; add byte ptr [eax], al; push eax; call 0x893c0; call dword ptr [esi]; 
0x000c646d: aas; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0019da32: aas; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000f1f30: aas; jne 0xf1f49; mov eax, 1; ret; 
0x0003d058: aas; mov ebx, dword ptr [esp + 4]; mov eax, 0xb1; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b44bd: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0010957a: aas; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000b2c03: aas; rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008d07d: aas; ret; 
0x0019767d: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000234cf: aas; stc; call dword ptr [eax + 0x52]; 
0x00047080: aas; stc; call dword ptr [eax - 0x18]; 
0x0004792a: aas; stc; call dword ptr [eax - 0x18]; in eax, dx; ret; 
0x000579a0: aas; stc; call dword ptr [eax - 0x18]; ja 0x5796a; std; jmp dword ptr [esi - 0x70]; 
0x00045015: aas; stc; call dword ptr [eax - 0x73]; 
0x000e830f: aas; stc; call dword ptr [eax - 0x77]; 
0x0005df8e: aas; stc; call dword ptr [ecx + 0x53]; 
0x000500cc: aas; stc; call dword ptr [edi + 0x6a]; 
0x00139a2e: aas; stc; call dword ptr [edx - 0x46]; 
0x000574f6: aas; stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5748d; ret 0x40c7; 
0x0008e82f: adc ah, 0x3a; add byte ptr [eax], al; ret; 
0x00093f28: adc ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016126a: adc ah, 0x71; stc; call dword ptr [eax + 0x57]; 
0x0003ceff: adc ah, 1; add byte ptr [eax], al; ret; 
0x00041f2c: adc ah, ah; adc eax, 0x18c48300; pop ebx; ret; 
0x0015516f: adc ah, al; stc; call dword ptr [eax - 0x73]; 
0x0015557c: adc ah, bl; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00199a72: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000a01bb: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a01de: adc al, 0; add byte ptr [eax - 0x73], dl; xchg esp, ebx; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00101b4d: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0009b611: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0004e8fb: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000e8861: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8861: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x00102d17: adc al, 0; add byte ptr [eax], al; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102dbb: adc al, 0; add byte ptr [eax], al; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00103037: adc al, 0; add byte ptr [eax], al; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00104ee5: adc al, 0; add byte ptr [eax], al; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x00109b98: adc al, 0; add byte ptr [eax], al; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x00115250: adc al, 0; add byte ptr [eax], al; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x00117825: adc al, 0; add byte ptr [eax], al; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a5: adc al, 0; add byte ptr [eax], al; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x00118f58: adc al, 0; add byte ptr [eax], al; jne 0x118f69; add esp, 0x1c; ret; 
0x0011a661: adc al, 0; add byte ptr [eax], al; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0011b1da: adc al, 0; add byte ptr [eax], al; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0011b5f8: adc al, 0; add byte ptr [eax], al; jne 0x11b602; add esp, 0x1c; ret; 
0x0011c08e: adc al, 0; add byte ptr [eax], al; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0011cce9: adc al, 0; add byte ptr [eax], al; jne 0x11ccf3; add esp, 0x1c; ret; 
0x0012181b: adc al, 0; add byte ptr [eax], al; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218cb: adc al, 0; add byte ptr [eax], al; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x0012336e: adc al, 0; add byte ptr [eax], al; jne 0x123387; add esp, 0x3c; ret; 
0x0012380d: adc al, 0; add byte ptr [eax], al; jne 0x123817; add esp, 0x1c; ret; 
0x00127500: adc al, 0; add byte ptr [eax], al; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x00127625: adc al, 0; add byte ptr [eax], al; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a5: adc al, 0; add byte ptr [eax], al; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x001279a0: adc al, 0; add byte ptr [eax], al; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286b0: adc al, 0; add byte ptr [eax], al; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287c9: adc al, 0; add byte ptr [eax], al; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128835: adc al, 0; add byte ptr [eax], al; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x001288c0: adc al, 0; add byte ptr [eax], al; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x001289c3: adc al, 0; add byte ptr [eax], al; jne 0x1289d4; add esp, 0x7c; ret; 
0x00133375: adc al, 0; add byte ptr [eax], al; jne 0x133385; add esp, 0x2c; ret; 
0x00134585: adc al, 0; add byte ptr [eax], al; jne 0x134595; add esp, 0x2c; ret; 
0x0013e99f: adc al, 0; add byte ptr [eax], al; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9fb: adc al, 0; add byte ptr [eax], al; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea4a: adc al, 0; add byte ptr [eax], al; jne 0x13ea54; add esp, 0x1c; ret; 
0x0014080e: adc al, 0; add byte ptr [eax], al; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408ae: adc al, 0; add byte ptr [eax], al; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x0014096e: adc al, 0; add byte ptr [eax], al; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a0e: adc al, 0; add byte ptr [eax], al; jne 0x140a3d; add esp, 0x11c; ret; 
0x00140ee6: adc al, 0; add byte ptr [eax], al; jne 0x140f2c; add esp, 0x1c; ret; 
0x00144838: adc al, 0; add byte ptr [eax], al; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cb9: adc al, 0; add byte ptr [eax], al; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x0014c5ec: adc al, 0; add byte ptr [eax], al; jne 0x14c5f6; add esp, 0x1c; ret; 
0x001643ec: adc al, 0; add byte ptr [eax], al; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x0016a26f: adc al, 0; add byte ptr [eax], al; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4c4: adc al, 0; add byte ptr [eax], al; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d5ee: adc al, 0; add byte ptr [eax], al; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d68e: adc al, 0; add byte ptr [eax], al; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0016d9de: adc al, 0; add byte ptr [eax], al; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da57: adc al, 0; add byte ptr [eax], al; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x0016e8db: adc al, 0; add byte ptr [eax], al; jne 0x16e8e5; add esp, 0x4c; ret; 
0x0016e94b: adc al, 0; add byte ptr [eax], al; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9bb: adc al, 0; add byte ptr [eax], al; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea2b: adc al, 0; add byte ptr [eax], al; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea8e: adc al, 0; add byte ptr [eax], al; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaee: adc al, 0; add byte ptr [eax], al; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb5b: adc al, 0; add byte ptr [eax], al; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebdb: adc al, 0; add byte ptr [eax], al; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016f0b9: adc al, 0; add byte ptr [eax], al; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f108: adc al, 0; add byte ptr [eax], al; jne 0x16f13c; add esp, 0x1c; ret; 
0x00170822: adc al, 0; add byte ptr [eax], al; jne 0x17082c; add esp, 0x2c; ret; 
0x001708d3: adc al, 0; add byte ptr [eax], al; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709c3: adc al, 0; add byte ptr [eax], al; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c7a: adc al, 0; add byte ptr [eax], al; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d0a: adc al, 0; add byte ptr [eax], al; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170db9: adc al, 0; add byte ptr [eax], al; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e3e: adc al, 0; add byte ptr [eax], al; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ed0: adc al, 0; add byte ptr [eax], al; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x0017170a: adc al, 0; add byte ptr [eax], al; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x0017179a: adc al, 0; add byte ptr [eax], al; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x0017182a: adc al, 0; add byte ptr [eax], al; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718ba: adc al, 0; add byte ptr [eax], al; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171fb2: adc al, 0; add byte ptr [eax], al; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x00172012: adc al, 0; add byte ptr [eax], al; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x0017207b: adc al, 0; add byte ptr [eax], al; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x0017212b: adc al, 0; add byte ptr [eax], al; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177107: adc al, 0; add byte ptr [eax], al; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00178c93: adc al, 0; add byte ptr [eax], al; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d0b: adc al, 0; add byte ptr [eax], al; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017ab0f: adc al, 0; add byte ptr [eax], al; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x0017d273: adc al, 0; add byte ptr [eax], al; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800d9: adc al, 0; add byte ptr [eax], al; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185d85: adc al, 0; add byte ptr [eax], al; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x001860fd: adc al, 0; add byte ptr [eax], al; jne 0x186107; add esp, 0x2c; ret; 
0x0002554f: adc al, 0; add byte ptr [eax], al; jne 0x25559; add esp, 0x1c; ret; 
0x0003af78: adc al, 0; add byte ptr [eax], al; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd2b: adc al, 0; add byte ptr [eax], al; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003c7ec: adc al, 0; add byte ptr [eax], al; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003c992: adc al, 0; add byte ptr [eax], al; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003cd90: adc al, 0; add byte ptr [eax], al; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d394: adc al, 0; add byte ptr [eax], al; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d414: adc al, 0; add byte ptr [eax], al; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d49c: adc al, 0; add byte ptr [eax], al; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0003e75e: adc al, 0; add byte ptr [eax], al; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e881: adc al, 0; add byte ptr [eax], al; jne 0x3e88b; add esp, 0x1c; ret; 
0x0003fa61: adc al, 0; add byte ptr [eax], al; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc7e: adc al, 0; add byte ptr [eax], al; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003fe3c: adc al, 0; add byte ptr [eax], al; jne 0x3fe46; add esp, 0x2c; ret; 
0x0003ff4e: adc al, 0; add byte ptr [eax], al; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffd1: adc al, 0; add byte ptr [eax], al; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f2d: adc al, 0; add byte ptr [eax], al; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000504bc: adc al, 0; add byte ptr [eax], al; jne 0x504c6; add esp, 0x2c; ret; 
0x000577f8: adc al, 0; add byte ptr [eax], al; jne 0x5780f; add esp, 0x1c; ret; 
0x0005bea6: adc al, 0; add byte ptr [eax], al; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x0005dcfc: adc al, 0; add byte ptr [eax], al; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x0005dd83: adc al, 0; add byte ptr [eax], al; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x00081842: adc al, 0; add byte ptr [eax], al; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x0008c7fe: adc al, 0; add byte ptr [eax], al; jne 0x8c808; add esp, 0x2c; ret; 
0x0009126a: adc al, 0; add byte ptr [eax], al; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912fa: adc al, 0; add byte ptr [eax], al; jne 0x91304; add esp, 0x2c; ret; 
0x000925ce: adc al, 0; add byte ptr [eax], al; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a4e: adc al, 0; add byte ptr [eax], al; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f5a: adc al, 0; add byte ptr [eax], al; jne 0x92f64; add esp, 0x2c; ret; 
0x000933ba: adc al, 0; add byte ptr [eax], al; jne 0x933c4; add esp, 0x2c; ret; 
0x00096226: adc al, 0; add byte ptr [eax], al; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x000964b5: adc al, 0; add byte ptr [eax], al; jne 0x964d7; add esp, 0x2c; ret; 
0x00096721: adc al, 0; add byte ptr [eax], al; jne 0x96747; add esp, 0x2c; ret; 
0x00096981: adc al, 0; add byte ptr [eax], al; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x000986a9: adc al, 0; add byte ptr [eax], al; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099d11: adc al, 0; add byte ptr [eax], al; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x0009a2df: adc al, 0; add byte ptr [eax], al; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x000bf52e: adc al, 0; add byte ptr [eax], al; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d2d3c: adc al, 0; add byte ptr [eax], al; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d2dbe: adc al, 0; add byte ptr [eax], al; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000d2e09: adc al, 0; add byte ptr [eax], al; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d2e69: adc al, 0; add byte ptr [eax], al; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x000d3e7f: adc al, 0; add byte ptr [eax], al; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x000d4115: adc al, 0; add byte ptr [eax], al; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000d44b9: adc al, 0; add byte ptr [eax], al; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000dd152: adc al, 0; add byte ptr [eax], al; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df492: adc al, 0; add byte ptr [eax], al; jne 0xdf49c; add esp, 0x1c; ret; 
0x000df606: adc al, 0; add byte ptr [eax], al; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df825: adc al, 0; add byte ptr [eax], al; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x000e09cb: adc al, 0; add byte ptr [eax], al; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0a27: adc al, 0; add byte ptr [eax], al; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000e0ad1: adc al, 0; add byte ptr [eax], al; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000e7891: adc al, 0; add byte ptr [eax], al; jne 0xe78a7; add esp, 0x1c; ret; 
0x000e8b48: adc al, 0; add byte ptr [eax], al; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4c8: adc al, 0; add byte ptr [eax], al; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec228: adc al, 0; add byte ptr [eax], al; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb28: adc al, 0; add byte ptr [eax], al; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef878: adc al, 0; add byte ptr [eax], al; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x000e14c3: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010c1e9: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0006f542: adc al, 0; add byte ptr [ebx - 0x78f0ef08], al; imul edi, dword ptr [edi], 0; add byte ptr [ecx], al; ret; 
0x0016cf67: adc al, 0; add byte ptr [ecx - 0x197c7239], cl; jae 0x16cf6a; call dword ptr [ecx + 0x6a]; 
0x0003cf17: adc al, 0; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef7: adc al, 0; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x00034537: adc al, 0; add eax, 0x1fc8fb; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034517: adc al, 0; add eax, 0x1fc91b; mov eax, dword ptr [eax + 0x1c8]; add eax, dword ptr gs:[0]; ret; 
0x000344f7: adc al, 0; add eax, 0x1fc93b; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0002f477: adc al, 0; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x0002f429: adc al, 0; mov dword ptr [esp], esi; call ebx; 
0x00167b7b: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x167b70; pop ebx; ret; 
0x0012b9fa: adc al, 0x11; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0015e7cd: adc al, 0x18; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x000345a6: adc al, 0x18; pop ebx; pop esi; ret; 
0x0005219d: adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000e00bd: adc al, 0x24; mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dffe3: adc al, 0x24; mov esi, dword ptr [esp + 8]; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0017d63e: adc al, 0x24; ret; 
0x00163f54: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0012c82c: adc al, 0x29; ret 0x478b; 
0x00128944: adc al, 0x29; ret 0xca39; 
0x0014573f: adc al, 0x29; ret; 
0x0007f4d7: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x0012cfe9: adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00097679: adc al, 0x39; or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00089a83: adc al, 0x39; ret 0x1074; 
0x0003189d: adc al, 0x39; ret 0x4d0f; 
0x00168afc: adc al, 0x39; ret 0x4e0f; 
0x001a3891: adc al, 0x39; ret 0x840f; 
0x000f5afe: adc al, 0x39; ret; 
0x00097649: adc al, 0x39; sal dword ptr [ebp - 0xe], cl; pop ebx; ret; 
0x0008afe8: adc al, 0x3c; add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x0009ab07: adc al, 0x3c; add byte ptr [eax], al; ret; 
0x0012c380: adc al, 0x42; and edx, 0x1000; mov eax, edx; ret; 
0x0012b9fe: adc al, 0x42; and edx, 0x100; mov eax, edx; ret; 
0x0012c280: adc al, 0x42; and edx, 0x2000; mov eax, edx; ret; 
0x0012c080: adc al, 0x42; and edx, 0x200; mov eax, edx; ret; 
0x0012c180: adc al, 0x42; and edx, 0x4000; mov eax, edx; ret; 
0x0012be80: adc al, 0x42; and edx, 0x400; mov eax, edx; ret; 
0x0012c100: adc al, 0x42; and edx, 0x8000; mov eax, edx; ret; 
0x0012bf00: adc al, 0x42; and edx, 1; mov eax, edx; ret; 
0x0012bf80: adc al, 0x42; and edx, 2; mov eax, edx; ret; 
0x0012c200: adc al, 0x42; and edx, 4; mov eax, edx; ret; 
0x0012be00: adc al, 0x42; and edx, 8; mov eax, edx; ret; 
0x00111463: adc al, 0x50; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00111a56: adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00111dfb: adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00111cd2: adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0005c004: adc al, 0x50; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00163a8e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x00163a8e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x000e8b5e: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x00164b1c: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x00164702: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0016ec79: adc al, 0x53; call dword ptr [eax]; 
0x0014a5a8: adc al, 0x55; call edi; 
0x00163dd9: adc al, 0x56; call dword ptr [eax + 4]; 
0x000885c4: adc al, 0x56; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00104994: adc al, 0x58; stc; call dword ptr [eax - 0x18]; 
0x00104994: adc al, 0x58; stc; call dword ptr [eax - 0x18]; xor bl, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000bb28f: adc al, 0x5b; cmovb eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0012a712: adc al, 0x5b; pop edi; ret; 
0x0003e7de: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0003fb9a: adc al, 0x5b; pop esi; pop edi; ret; 
0x0002fd68: adc al, 0x5b; pop esi; ret; 
0x0007b586: adc al, 0x5e; pop edi; jmp eax; 
0x001160d2: adc al, 0x5e; pop edi; ret; 
0x000ba162: adc al, 0x5f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3343: adc al, 0x5f; pop esi; pop ebx; ret; 
0x0010a6d6: adc al, 0x6a; add al, 0x8d; or byte ptr [edx + 0x59], 0xf9; call dword ptr [eax + 0x53]; 
0x00102e56: adc al, 0x6a; add byte ptr [edx], ch; call 0x102e20; add esp, 0x1c; ret; 
0x00178c20: adc al, 0x6a; add cl, byte ptr [ebp - 0x689d680]; call dword ptr [eax - 0x18]; 
0x000d4635: adc al, 0x6b; ret; 
0x0014ad03: adc al, 0x6d; stc; call dword ptr [eax + 0x53]; 
0x001664d7: adc al, 0x72; ret 0x4889; 
0x00179e27: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x001698e9: adc al, 0x74; stc; call dword ptr [eax - 0x73]; 
0x0017c2e7: adc al, 0x75; push es; pop ebx; ret; 
0x0014dc24: adc al, 0x81; les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00106da0: adc al, 0x81; les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0017d682: adc al, 0x81; setne al; movzx eax, al; ret; 
0x0008a88b: adc al, 0x83; clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00153e7a: adc al, 0x83; in al, dx; add al, 0x89; ret; 
0x000ee0d4: adc al, 0x83; in al, dx; or al, 0x89; test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x000d7ab1: adc al, 0x83; jle 0xd7ac5; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x00165485: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00081847: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00166ecf: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002df6c: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0004e936: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000751e3: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00080c17: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00056b3a: adc al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00094604: adc al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a352d: adc al, 0x83; ret 0x8301; 
0x0002a3f3: adc al, 0x83; ret; 
0x0013c53b: adc al, 0x85; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xdb85; 
0x0017a37d: adc al, 0x85; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x0007a7af: adc al, 0x88; sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00073df0: adc al, 0x89; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0013fec3: adc al, 0x89; call 0x5d735d25; ret; 
0x00171b60: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x0009b3b8: adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001273b5: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000dfaca: adc al, 0x89; inc esp; and al, 0x18; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00171037: adc al, 0x89; je 0x17105f; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0010d5fc: adc al, 0x89; jl 0x10d624; adc al, 0x89; ret; 
0x0010ef2c: adc al, 0x89; jl 0x10ef54; adc al, 0x89; ret; 
0x0011085c: adc al, 0x89; jl 0x110884; adc al, 0x89; ret; 
0x0003be3f: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0011db40: adc al, 0x89; push esi; or al, 0x8d; xchg ebx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x0008784c: adc al, 0x89; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00128591: adc al, 0x89; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00056a4e: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00170a71: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00046c60: adc al, 0x89; ret 0x1b8; 
0x000f4684: adc al, 0x89; ret 0x478b; 
0x0013c809: adc al, 0x89; ret 0x789; 
0x00138176: adc al, 0x89; ret 0x998b; 
0x0008e3b7: adc al, 0x89; ret 0xa165; 
0x0013b86b: adc al, 0x89; ret 0xc085; 
0x00147046: adc al, 0x89; ret 0xc985; 
0x0017f6f9: adc al, 0x89; ret 0xca29; 
0x000f57c4: adc al, 0x89; ret 0xd839; 
0x001a0815: adc al, 0x89; ret 0xe283; 
0x000fef64: adc al, 0x89; ret 0xf889; 
0x00039dc9: adc al, 0x89; ret; 
0x0013e380: adc al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000fe506: adc al, 0x8b; adc bh, dh; ret 0x30f; 
0x0013b62a: adc al, 0x8b; add byte ptr [ebx - 0x68f0f008], al; ret; 
0x00116ad9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bc9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126ca9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc39: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5c9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab69: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00126809: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0014696f: adc al, 0x8b; dec esp; ret 0x3904; 
0x00057081: adc al, 0x8b; inc eax; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x00165482: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00091d5b: adc al, 0x8b; inc ebx; or al, 0x89; ret 0xe281; 
0x00024cb2: adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x000dfc0a: adc al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00127a97: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001283e7: adc al, 0x8b; inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ba496: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000b7010: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0006cf04: adc al, 0x8b; mov word ptr [edi - 0x726d4], es; add ecx, ebx; jmp ecx; 
0x00183b71: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x00120ed2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011835b: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b702: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115322: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126da2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a22: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126aa2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00126842: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126c02: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a62: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00126932: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c72: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00121942: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac02: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125c6f: adc al, 0x8b; pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001182db: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009975d: adc al, 0x8b; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000d997a: adc al, 0x8b; push eax; adc dh, dh; ret; 
0x0008359b: adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00039dfa: adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0017f59b: adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x00115921: adc al, 0x8b; push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0005da5a: adc al, 0x8b; push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00185f32: adc al, 0x8b; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129102: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00100946: adc al, 0x8b; push esp; ret; 
0x001393cb: adc al, 0x8d; adc bl, 0x68; stc; call dword ptr [eax + 0x6a]; 
0x00139566: adc al, 0x8d; adc byte ptr [eax - 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000386b7: adc al, 0x8d; adc byte ptr [edx], 0x3e; stc; call dword ptr [eax - 1]; 
0x00154602: adc al, 0x8d; adc byte ptr [esi], 0x6f; stc; call dword ptr [eax - 1]; 
0x00162720: adc al, 0x8d; adc ch, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x000be123: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x0013918c: adc al, 0x8d; add byte ptr [edx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x00024831: adc al, 0x8d; add ch, 0x68; stc; call dword ptr [eax - 1]; 
0x001529d2: adc al, 0x8d; and bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00162b10: adc al, 0x8d; and bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0013943c: adc al, 0x8d; and byte ptr [esi + 0x68], 0xf9; call dword ptr [eax + 0x6a]; 
0x0015ed80: adc al, 0x8d; and cl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x00163340: adc al, 0x8d; cmp ah, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0015f570: adc al, 0x8d; cmp dl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x000dfac6: adc al, 0x8d; dec esp; and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000950e4: adc al, 0x8d; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001620e0: adc al, 0x8d; or cl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0007a3eb: adc al, 0x8d; pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00160410: adc al, 0x8d; sbb byte ptr [eax + 0x72], 0xf9; call dword ptr [eax + 0x6a]; 
0x00139398: adc al, 0x8d; sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x55]; 
0x00111d40: adc al, 0x8d; sbb byte ptr [edx + 0x59], 0xf9; call dword ptr [eax - 0x18]; 
0x00152c36: adc al, 0x8d; sbb dl, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00152b31: adc al, 0x8d; sub bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x0009c370: adc al, 0x8d; sub byte ptr [ecx + ecx], 0; add byte ptr [ecx], bh; ret; 
0x001616f0: adc al, 0x8d; sub byte ptr [edx + esi*2 + 0x6a50fff9], 4; call 0x14bb50; add esp, 0x1c; ret; 
0x0015f200: adc al, 0x8d; sub dh, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x0014ac28: adc al, 0x8d; sub ebx, 0x6c; stc; call dword ptr [eax + 0x56]; 
0x0003971b: adc al, 0x8d; test dword ptr [ebp + 0x3e], eax; stc; call dword ptr [eax + 0x53]; 
0x0009c7ad: adc al, 0x8d; xchg al, al; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x001396c1: adc al, 0x8d; xchg dword ptr [ebp + 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x000e85aa: adc al, 0x8d; xchg dword ptr [edi + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00152739: adc al, 0x8d; xchg eax, esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x0011f199: adc al, 0x8d; xchg ecx, eax; aam 0x62; stc; call dword ptr [edx + 0x50]; 
0x0015508c: adc al, 0x8d; xchg ecx, eax; cmp byte ptr [edi - 7], ch; call dword ptr [edx + 0x50]; 
0x000e84ce: adc al, 0x8d; xchg edi, ecx; push esi; stc; call dword ptr [eax - 0x73]; 
0x00154535: adc al, 0x8d; xchg esi, eax; daa; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x00162de0: adc al, 0x8d; xor al, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00024862: adc al, 0x8d; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0008cf33: adc al, 0x93; stc; call dword ptr [eax - 0x18]; 
0x0016a1d8: adc al, 0x99; cld; jmp dword ptr [esi - 0x70]; 
0x0016a1d8: adc al, 0x99; cld; jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x000e85ad: adc al, 0xaf; stc; call dword ptr [eax - 0x73]; 
0x00171cfe: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0008937c: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000df773: adc al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125366: adc al, 0xb; cmp edx, 0x26; je 0x1253c3; pop ebx; pop esi; ret; 
0x00128bff: adc al, 0xbb; or eax, 0x8b000000; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x000d2eae: adc al, 0xde; jmp 0xdd314b92; add al, 0x24; add esp, 0xc; ret; 
0x0009221c: adc al, 0xe6; call dword ptr [eax + 0x56]; 
0x000f70b2: adc al, 0xe8; mov eax, 0x83ffffd9; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00147a83: adc al, 0xe8; movzx ebp, bp; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00147b83: adc al, 0xe8; movzx ebp, ch; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00176f37: adc al, 0xe8; push ebx; ret 0xffea; 
0x000f1da8: adc al, 0xe8; ret 0xfb32; 
0x000f36c7: adc al, 0xe8; ret; 
0x001569f8: adc al, 0xe9; mov dword ptr [0xe8fffffe], eax; in eax, dx; sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x000f5b09: adc al, 0xeb; jge 0x830f8185; ret; 
0x0008868e: adc al, 0xeb; ret 0x5ae8; 
0x001181c5: adc al, 0xf6; ret 0x7540; 
0x000d913f: adc al, 0xf; inc edx; ret 0x4c80; 
0x000bb267: adc al, 0xf; inc edx; ret 0x5e5b; 
0x0010c29e: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001a3737: adc al, 0xf; test dword ptr [esi - 0x76fffff9], edx; ret 0x6c8d; 
0x000d1dc5: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000f29eb: adc al, 0xf; xchg dword ptr [eax - 0x74ffffff], esi; mov esp, 0xf905c086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x001a4474: adc al, 0xf; xchg ebp, eax; ret 0xc208; 
0x0016876c: adc al, 0xf; xchg edx, eax; ret 0xd284; 
0x0013638b: adc al, 0xf; xchg esp, eax; ret; 
0x0018c1c9: adc al, 0xff; inc dword ptr [ecx + 0x4274cc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c213: adc al, 0xff; inc dword ptr [ecx + 0x42882c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00123b86: adc al, 0xff; je 0x123bae; sbb byte ptr [edx], ch; call 0x123dd0; add esp, 0x1c; ret; 
0x001604e0: adc al, 0xff; je 0x160508; and al, 0x89; ret; 
0x00164249: adc al, 0xff; je 0x164271; adc al, 0xff; je 0x164275; je 0x1642a3; call dword ptr [ecx]; 
0x0016424d: adc al, 0xff; je 0x164275; je 0x1642a3; call dword ptr [ecx]; 
0x00178bf0: adc al, 0xff; je 0x178c18; sbb byte ptr [ebp - 0x689d680], cl; call dword ptr [eax - 0x18]; 
0x00024cae: adc al, 0xff; je 0x24cd6; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003e82a: adc al, 0xff; je 0x3e852; sbb byte ptr [eax + 0x50], dl; call 0x3e8a0; add esp, 0x1c; ret; 
0x00078b18: adc al, 0xff; jne 0x78b28; push esi; call dword ptr [ebx + 0x2c]; 
0x00139186: adc al, 0xff; xor byte ptr [ebx - 0x72ebdbbc], cl; add byte ptr [edx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x001080ee: adc al, 1; add byte ptr [eax], al; add cl, ch; ret 0xffeb; 
0x0003cf74: adc al, 1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0003c5da: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0003cf1f: adc al, 1; add byte ptr [eax], al; ret; 
0x000a5615: adc al, 1; cmp edx, ebx; je 0xa5610; pop ebx; ret; 
0x0017197d: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000df4bc: adc al, 1; je 0xdf4c8; add esp, 0xc; ret; 
0x000df5ac: adc al, 1; je 0xdf5b8; add esp, 0xc; ret; 
0x000f3f02: adc al, 1; ret 0xd089; 
0x0012ec4d: adc al, 1; ret; 
0x0018f3d5: adc al, 1; retf 0xc801; call 0x17d639; add ebx, 0x3f979; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3f5: adc al, 1; retf 0xc801; call 0x17d639; add ebx, 0x40799; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00089acc: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000898cd: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014c16a: adc al, 3; add byte ptr [ecx + 0xe4cc7c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0018d4cb: adc al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00171cda: adc al, 4; mov eax, 1; ret; 
0x00176b52: adc al, 5; add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x000a8f21: adc al, 6; jne 0xa8f10; pop ebx; pop esi; pop edi; ret; 
0x00140f8f: adc al, 8; pop ebx; mov eax, edx; ret; 
0x0012a011: adc al, 9; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0004e5a8: adc al, 9; ret 0x874; 
0x001a4250: adc al, 9; ret; 
0x0007d7da: adc al, byte ptr [eax + eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0018d62b: adc al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009c7bd: adc al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, al; push ecx; stc; call dword ptr [eax - 0x18]; 
0x000a3fea: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001158ea: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ed185: adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x4977b]; call dword ptr [eax - 0x75]; 
0x000358ec: adc al, byte ptr [eax]; add byte ptr [ecx - 0x8b7b], cl; call dword ptr [eax - 0x73]; 
0x0003c018: adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x0006618d: adc al, byte ptr [eax]; add dh, al; test dword ptr [edx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x0010abdd: adc al, byte ptr [eax]; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010ac4d: adc al, byte ptr [eax]; push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00109915: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00102c03: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c6c8: adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0005ea1d: adc al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001a29fe: adc al, byte ptr [ebx - 0x1f7cfe10]; add dword ptr [ecx - 0x16fbdbbc], ecx; ret; 
0x000b3bca: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d2a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b973d: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b258a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26ea: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3bea: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d4a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25aa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b270a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c0a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d6a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25ca: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b272a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a99: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d8a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2479: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b274a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af412: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab032: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000af452: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab072: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af472: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab092: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af1c2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000af402: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b0fed: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a02a2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9583: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbfd: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000adc27: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000ab022: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3d22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b26e2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3d42: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b2702: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3d62: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b2722: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3d82: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2742: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af492: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000ab0b2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f2: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00036b56: adc al, byte ptr [edx*4 + 0x853c8d]; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbbc], cl; push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x000b6e92: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2e5: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e82: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31b2: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ed184: adc al, byte ptr gs:[eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x4977b]; call dword ptr [eax - 0x75]; 
0x000b4d73: adc al, ch; fmul dword ptr [eax - 0x3e7efff4]; mov bh, 0xb1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d57: adc al, ch; hlt; mov byte ptr [eax + eax], cl; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010364a: adc al, ch; jmp 0x81103df0; ret; 
0x0014c87a: adc al, ch; mov ecx, 0x8100030d; ret; 
0x0013597a: adc al, ch; mov ecx, 0x8100047c; ret; 
0x000e0b7a: adc al, ch; mov ecx, 0x810009ca; ret; 
0x000a507a: adc al, ch; mov ecx, 0x81000d85; ret; 
0x0007e67a: adc al, ch; mov ecx, 0x81000fef; ret; 
0x00122571: adc al, ch; ret 0x5b0; 
0x001138d0: adc al, ch; ret 0xf0f8; 
0x00061927: adc al, ch; ret; 
0x0015538a: adc al, ch; test eax, 0x81000282; ret; 
0x000bb4b5: adc al, dh; ret; 
0x000e7fc2: adc bh, 0x3d; stc; call dword ptr [eax - 0x75]; 
0x0011aa95: adc bh, 0x59; stc; call dword ptr [eax - 0x18]; 
0x001325e4: adc bh, 0x66; stc; call dword ptr [eax - 0x18]; 
0x00186157: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000a1e4d: adc bh, al; call dword ptr [ebp - 1]; 
0x00140730: adc bh, al; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00126f8d: adc bh, bh; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x0018c5a5: adc bh, bh; inc dword ptr [ecx + 0x42370c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c3d8: adc bh, bh; inc dword ptr [ecx + 0x4253dc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00143374: adc bh, bh; je 0x14339c; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x00163dd5: adc bh, bh; je 0x163dfd; adc al, 0x56; call dword ptr [eax + 4]; 
0x000de01c: adc bh, bh; je 0xde044; sub al, 0x29; ret; 
0x00031e96: adc bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0014f5e3: adc bh, bh; xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x000a018c: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x0009df50: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x000386ba: adc bh, byte ptr [esi]; stc; call dword ptr [eax - 1]; 
0x0010880f: adc bh, cl; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000253dd: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x000f6efc: adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x000fe508: adc bh, dh; ret 0x30f; 
0x00140a35: adc bh, dh; rol cl, 1; call 0xe8dbf55d; scasb al, byte ptr es:[edi]; xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x001393cd: adc bl, 0x68; stc; call dword ptr [eax + 0x6a]; 
0x0003a794: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003a713: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003a789: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0011f50d: adc bl, byte ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000b49c2: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0019938d: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x00088db8: adc bl, ch; fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x00134a65: adc bl, ch; mov al, 0xe8; xor eax, 0xffffffff; dec dword ptr [ebp - 0x6470779]; call dword ptr [eax - 0x73]; 
0x0016481e: adc bl, ch; mov al, byte ptr [0xfcf2cae8]; jmp dword ptr [esi - 0x70]; 
0x0016d34c: adc bl, ch; rcl dword ptr [eax - 0x74f3137d], 0x50; add al, 0x50; call dword ptr [edx + 0x10]; 
0x000254d5: adc bl, ch; ret 0x13e8; 
0x000ffea0: adc bl, ch; ret 0x48e8; 
0x00094042: adc bl, ch; ret 0x768d; 
0x000f40b3: adc bl, ch; ret 0x8d2e; 
0x0008513b: adc bl, ch; ret 0x9066; 
0x0008964f: adc bl, ch; ret 0xb68d; 
0x000869f5: adc bl, ch; ret; 
0x0014b73b: adc bl, ch; ror byte ptr [ebp - 0x63e6b70], 1; call dword ptr [edx - 0x73]; 
0x000a0c1d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00171cbe: adc bl, ch; shr eax, cl; sub bl, byte ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x000b6fe6: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6fa7: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7168: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7068: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001326b5: adc byte ptr [0x3ff], bh; ja 0x1326c4; sar eax, 5; add esp, 0xc; ret; 
0x0003b997: adc byte ptr [0x80000000], ah; ret; 
0x00025566: adc byte ptr [0xb8cb0500], 0x20; add byte ptr [ebx + 0xa080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00120ed6: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x0011835f: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011825b: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0010b706: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x00115326: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x00126da6: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x00126a26: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x00126aa6: adc byte ptr [eax + 0x1ad], bh; call dword ptr gs:[0x10]; 
0x00126846: adc byte ptr [eax + 0x1af], bh; call dword ptr gs:[0x10]; 
0x00124588: adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00126c06: adc byte ptr [eax + 0x1b8], bh; call dword ptr gs:[0x10]; 
0x00126a66: adc byte ptr [eax + 0x1ba], bh; call dword ptr gs:[0x10]; 
0x001181db: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0012383f: adc byte ptr [eax + 0x3e], bh; call dword ptr gs:[0x10]; 
0x000ba493: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b700d: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000ba517: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b7091: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000a8e33: adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x000b4aa4: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b3340: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000b33c4: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000b34c4: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x0003453f: adc byte ptr [eax + 0x65000000], 3; add eax, 0; ret; 
0x0011ea6f: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0014a5a1: adc byte ptr [eax + 0x6a], dl; add bh, bh; je 0x14a5cc; adc al, 0x55; call edi; 
0x00126936: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x00126c76: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x00121946: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x0011e7a6: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x0011ac06: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x00089b0c: adc byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0009223b: adc byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008bc66: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c5c0: adc byte ptr [eax + 0xf0], bh; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008cb0e: adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000df4d8: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x0011ae02: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x00076ea3: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00166df0: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00129cef: adc byte ptr [eax + 1], bh; ret; 
0x00058531: adc byte ptr [eax + eax*8 + 0x5d8b2a74], al; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0010adfd: adc byte ptr [eax + eax*8 - 0x137c1f8b], al; or al, 0x8d; xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0009492e: adc byte ptr [eax + eax*8 - 0x3fcef28c], al; add esp, 8; pop ebx; ret; 
0x001190da: adc byte ptr [eax + eax], 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0018d824: adc byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00024ea0: adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x00088a37: adc byte ptr [eax - 0x3f000000], 0xe8; or eax, dword ptr [ebx - 0x7d76fe20]; test al, 0x1a; add byte ptr [eax], al; ret; 
0x00139568: adc byte ptr [eax - 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x00088476: adc byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + esi*2 - 0x1b], bh; call dword ptr [eax - 0x18]; 
0x0017c922: adc byte ptr [eax - 0x73], dl; xchg dword ptr [edx + ebp*4], ebp; hlt; call dword ptr [eax - 0x18]; 
0x0005f557: adc byte ptr [eax - 0x74], 0xf9; call dword ptr [eax - 0x18]; 
0x00116e26: adc byte ptr [eax - 0x74acffef], ah; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000954be: adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x00094741: adc byte ptr [eax - 0x76f48aff], ch; ret 0xca83; 
0x000bc68e: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00134ff2: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013e6ac: adc byte ptr [eax], 0x83; stc; call dword ptr [eax - 0x18]; 
0x00074093: adc byte ptr [eax], 0x8e; stc; call dword ptr [eax - 0x73]; 
0x0008ad0c: adc byte ptr [eax], ah; je 0x8ad20; add esp, 4; pop ebx; pop esi; ret; 
0x000bb4e5: adc byte ptr [eax], ah; ret; 
0x0005783c: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x0017b8ac: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x18eb; 
0x00085bde: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00094651: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00117f7e: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00094520: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000426b6: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000df66c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -0x26; jne 0xdf681; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010abf0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac60: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b060: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x001152e0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x00115820: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00115efe: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x00116b1c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x00117230: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x0011775c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c8c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x00119260: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192b0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0d0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x00122600: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x001249cc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x00125070: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001251e7: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001252f0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x001263b0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x00126670: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x0003c3e1: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0005da10: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990dc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x0009a134: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x000d425e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x00102cb8: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0016571a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00165652: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016566a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0003c3a2: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0011772e: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x000f2ce0: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x00117c5e: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000e2e55: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000893de: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000934d9: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00042054: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0019f16b: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0009628c: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008a676: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0011d3b5: adc byte ptr [eax], al; add byte ptr [ebp - 0x69f8b7d], cl; call dword ptr [edx + 0x52]; 
0x0011d39b: adc byte ptr [eax], al; add byte ptr [ebp - 0x69faf7d], cl; call dword ptr [ecx + 0x51]; 
0x0009e376: adc byte ptr [eax], al; add byte ptr [ebp - 0x6af1b7f], cl; call dword ptr [eax - 0x73]; 
0x0002714b: adc byte ptr [eax], al; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x001151c2: adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e342c: adc byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00197fbe: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00107415: adc byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x0017e46a: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0005e36a: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0010d5d8: adc byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x0002814a: adc byte ptr [eax], al; add byte ptr [edx + 0x50], dl; call 0x92320; add esp, 0x1c; ret; 
0x00076742: adc byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000bb99b: adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b2b47: adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2a20: adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001251dd: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001251dd: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x0012b2dc: adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0012639d: adc byte ptr [eax], al; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012665d: adc byte ptr [eax], al; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001252dd: adc byte ptr [eax], al; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012505d: adc byte ptr [eax], al; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001249bd: adc byte ptr [eax], al; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120e78: adc byte ptr [eax], al; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00122643: adc byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0018f124: adc byte ptr [eax], bh; ret 0x840f; 
0x0016577d: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0014031f: adc byte ptr [eax], cl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x001151c1: adc byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000bb4d5: adc byte ptr [eax], dl; ret; 
0x0012d9b3: adc byte ptr [ebp + 0x2444c7d2], al; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0011d117: adc byte ptr [ebp + 0x28840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x000840ed: adc byte ptr [ebp + 0x292678c0], al; ret; 
0x000be40a: adc byte ptr [ebp + 0x29d975db], al; ret; 
0x00089d42: adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0012c8bf: adc byte ptr [ebp + 0x39010544], cl; ret; 
0x00103755: adc byte ptr [ebp + 0x391678db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000bfc09: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x000bfb90: adc byte ptr [ebp + 0x391b74db], al; ret; 
0x0011f5cf: adc byte ptr [ebp + 0x391c74c0], al; ret; 
0x0014c1c6: adc byte ptr [ebp + 0x39840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; test byte ptr [ebp - 7], ch; call dword ptr [eax - 0x73]; 
0x0011d14d: adc byte ptr [ebp + 0x3a840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x00073d52: adc byte ptr [ebp + 0x47899804], cl; add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0008198f: adc byte ptr [ebp + 0x4889014a], cl; add al, 0xf; mov dh, 2; ret; 
0x001665e1: adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0011d2f9: adc byte ptr [ebp + 0x55840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a09f7d], cl; call dword ptr [edx + 0x52]; 
0x000778e4: adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x00082f04: adc byte ptr [ebp + 0x5b0774c0], al; pop esi; pop edi; ret; 
0x0003644c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x001553ba: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x00137580: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x00075a40: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00122541: adc byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x000b499d: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000b49bf: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000b49fd: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000b4a81: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000b4b91: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0014c1a6: adc byte ptr [ebp + 0x71840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; sub dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x0011d132: adc byte ptr [ebp + 0x75840fc0], al; add al, 0; add byte ptr [ebx - 0x7c72f714], al; jp 0x11d19d; stc; call dword ptr [eax + 0x55]; 
0x0011d395: adc byte ptr [ebp + 0x77840fc0], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x69faf7d], cl; call dword ptr [ecx + 0x51]; 
0x000d57aa: adc byte ptr [ebp + 0x7d840fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; out 0x38, eax; stc; call dword ptr [eax + 0x57]; 
0x0011d25b: adc byte ptr [ebp + 0xd840fc0], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; add ebx, dword ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x0008e178: adc byte ptr [ebp + 0xd], dh; xor eax, eax; add esp, 0xc; ret; 
0x0011d3af: adc byte ptr [ebp + 0xe840fc0], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x69f8b7d], cl; call dword ptr [edx + 0x52]; 
0x0012e26c: adc byte ptr [ebp + 0xf078bc0], al; xchg esp, eax; ret 0xc085; 
0x00147ef0: adc byte ptr [ebp + 0xf0974c0], al; lahf; ret; 
0x00088d8c: adc byte ptr [ebp + 0xf0f75d2], al; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x00040e75: adc byte ptr [ebp + 0xff089c0], al; dec eax; ret 0x9387; 
0x00094c00: adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x001642ab: adc byte ptr [ebp - 0x167a8b40], al; ret 0xfffe; 
0x000fbc8e: adc byte ptr [ebp - 0x167bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00099e96: adc byte ptr [ebp - 0x1967137d], cl; call dword ptr [eax - 0x73]; 
0x0008ecea: adc byte ptr [ebp - 0x1a225380], cl; call dword ptr [eax - 0x73]; 
0x000b17a3: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0002ffa2: adc byte ptr [ebp - 0x2011037d], cl; call dword ptr [eax - 1]; 
0x000cf6b8: adc byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x48]; 
0x000556af: adc byte ptr [ebp - 0x35f363], cl; call dword ptr [eax - 0x48]; 
0x0015ea36: adc byte ptr [ebp - 0x367bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0016641c: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011d19e: adc byte ptr [ebp - 0x3e7bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6a38f7d], cl; call dword ptr [eax + 0x55]; 
0x00165eb4: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0014d231: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x00032ae0: adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x0017791c: adc byte ptr [ebp - 0x4c7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x56]; 
0x000bd7a2: adc byte ptr [ebp - 0x536d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0011d2df: adc byte ptr [ebp - 0x557bf040], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6a0d57d], cl; call dword ptr [ecx + 0x51]; 
0x0016ce30: adc byte ptr [ebp - 0x587bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0011c88c: adc byte ptr [ebp - 0x5b7bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x17aff314], al; ret 0xf621; 
0x0011d44b: adc byte ptr [ebp - 0x5c7bf040], al; or al, 0; add byte ptr [ebp - 0x69dec7d], cl; call dword ptr [ecx + 0x51]; 
0x0014faaa: adc byte ptr [ebp - 0x63d8f80], cl; call dword ptr [eax - 0x18]; 
0x001085f9: adc byte ptr [ebp - 0x64f2b79], cl; call dword ptr [eax - 0x73]; 
0x0010741b: adc byte ptr [ebp - 0x64f3779], cl; call dword ptr [eax + 0x68]; 
0x001070ff: adc byte ptr [ebp - 0x64f3779], cl; call dword ptr [eax - 0x73]; 
0x00108462: adc byte ptr [ebp - 0x64f5379], cl; call dword ptr [eax - 0x73]; 
0x000dad49: adc byte ptr [ebp - 0x6529b7d], cl; call dword ptr [eax - 0x73]; 
0x000907d0: adc byte ptr [ebp - 0x66d7f80], cl; call dword ptr [eax - 0x18]; 
0x00045005: adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x00172348: adc byte ptr [ebp - 0x68aca7a], cl; call dword ptr [eax - 0x73]; 
0x0016d1b9: adc byte ptr [ebp - 0x68bd579], cl; call dword ptr [eax - 0x73]; 
0x001706ee: adc byte ptr [ebp - 0x68c1979], cl; call dword ptr [eax - 0x73]; 
0x00171196: adc byte ptr [ebp - 0x68c197d], cl; call dword ptr [eax - 0x73]; 
0x0014af66: adc byte ptr [ebp - 0x692c268], cl; call dword ptr [ebx - 0x73]; 
0x001743a5: adc byte ptr [ebp - 0x6949b79], cl; call dword ptr [eax - 0x18]; 
0x000248cd: adc byte ptr [ebp - 0x696cf80], cl; call dword ptr [eax - 0x18]; 
0x00024889: adc byte ptr [ebp - 0x696db80], cl; call dword ptr [eax - 0x18]; 
0x000248ff: adc byte ptr [ebp - 0x696e980], cl; call dword ptr [eax - 0x18]; 
0x000248ae: adc byte ptr [ebp - 0x696f780], cl; call dword ptr [eax - 0x18]; 
0x0013946a: adc byte ptr [ebp - 0x6971a80], cl; call dword ptr [eax + 0x6a]; 
0x0014fa60: adc byte ptr [ebp - 0x6bb6f7d], cl; call dword ptr [eax - 0x18]; 
0x0014fa60: adc byte ptr [ebp - 0x6bb6f7d], cl; call dword ptr [eax - 0x18]; ret; 
0x0005cf95: adc byte ptr [ebp - 0x6be357b], cl; call dword ptr [ecx + 0x50]; 
0x00139a2a: adc byte ptr [ebp - 0x6c04d6a], cl; call dword ptr [edx - 0x46]; 
0x0011f16d: adc byte ptr [ebp - 0x6c3a56f], cl; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0014b069: adc byte ptr [ebp - 0x6c71879], cl; call dword ptr [eax + 0x53]; 
0x001196b8: adc byte ptr [ebp - 0x6c7af040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbbc], cl; ret; 
0x0016403a: adc byte ptr [ebp - 0x6e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00094fe9: adc byte ptr [ebp - 0x72bd8b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0016d082: adc byte ptr [ebp - 0x737af040], al; jns 0x16d075; dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x00164abb: adc byte ptr [ebp - 0x74728b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0014d257: adc byte ptr [ebp - 0x74c38b25], al; add eax, dword ptr [ebp - 0x72c98b40]; mov dl, 0x6c; ret 0xfff9; 
0x00125338: adc byte ptr [ebp - 0x74cc8b2e], al; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000f23fa: adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax + 0x53]; 
0x001716f3: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00170c63: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x0019ee9d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x000e0577: adc byte ptr [ebp - 0x74f88b2e], al; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00034617: adc byte ptr [ebp - 0x76238a40], al; ret; 
0x00177ed1: adc byte ptr [ebp - 0x76358a40], al; ret 0x838b; 
0x0014b95c: adc byte ptr [ebp - 0x76dc8b40], al; ret 0x488d; 
0x000359f4: adc byte ptr [ebp - 0x76dffcbc], cl; jecxz 0x35985; shl dword ptr [0xfffff000], 0x29; ret; 
0x00129d37: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x0013b85f: adc byte ptr [ebp - 0x7777f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x00119ddf: adc byte ptr [ebp - 0x777bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001337af: adc byte ptr [ebp - 0x777bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00197fb7: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00192eb3: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000aca4c: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x000379f0: adc byte ptr [ebp - 0x7b380], cl; call dword ptr [eax - 0x75]; 
0x00057073: adc byte ptr [ebp - 0x7b72bffc], cl; or dword ptr [ebp + eax*8 + 0x4489fff8], 0x408b1424; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x00157fe3: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f186: adc byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0003f67b: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025fec: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00167d57: adc byte ptr [ebp - 0x7c208b40], al; in al, dx; or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x00167049: adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x000be475: adc byte ptr [ebp - 0x7c298a25], al; les ecx, ptr [ecx + ebp]; ret; 
0x00164883: adc byte ptr [ebp - 0x7c388b40], al; ret; 
0x00027f6b: adc byte ptr [ebp - 0x7c478a40], al; in al, dx; or al, 0x8d; test eax, edi; cmp cl, bh; call dword ptr [edi - 1]; 
0x00163c74: adc byte ptr [ebp - 0x7c4d8b40], al; in al, dx; or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x001655f8: adc byte ptr [ebp - 0x7c578b40], al; ret; 
0x00164f63: adc byte ptr [ebp - 0x7c5b8b40], al; in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00165449: adc byte ptr [ebp - 0x7c5e8b40], al; ret; 
0x000f2417: adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000f4ff3: adc byte ptr [ebp - 0x7c978b40], al; in al, dx; or byte ptr [ebp - 0x6a8777d], cl; call dword ptr [eax + 0x55]; 
0x000f50d8: adc byte ptr [ebp - 0x7c998b40], al; in al, dx; or byte ptr [ebp - 0x6b1567d], cl; call dword ptr [eax + 0x55]; 
0x0016b12b: adc byte ptr [ebp - 0x7c9f8a40], al; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x001446ef: adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00143c8f: adc byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0012327d: adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x0016aaa7: adc byte ptr [ebp - 0x7cc28b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016f9c4: adc byte ptr [ebp - 0x7cc88b40], al; in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00152749: adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6af6079], cl; call dword ptr [eax + 0x56]; 
0x0011b652: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x00167e12: adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x0017a2a4: adc byte ptr [ebp - 0x7cd88b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x000331f4: adc byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x67cf77b], cl; call dword ptr [eax + 0x56]; 
0x0012dd70: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x001320ab: adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0016707c: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x0014d21a: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x6ac667f], cl; call dword ptr [eax + 0x52]; 
0x0010addd: adc byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001232ed: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x0005e5d6: adc byte ptr [ebp - 0x7cf28a40], al; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0003c0b7: adc byte ptr [ebp - 0x7cf38a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0017c658: adc byte ptr [ebp - 0x7cf48a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00041498: adc byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0017d7c1: adc byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0017703a: adc byte ptr [ebp - 0x7cf68740], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001654aa: adc byte ptr [ebp - 0x7cf68a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00157c72: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x001331f2: adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001279f3: adc byte ptr [ebp - 0x7cf78740], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0003c366: adc byte ptr [ebp - 0x7cfa8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000a744b: adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000d5202: adc byte ptr [ebp - 0x7fcf8a40], al; add byte ptr ds:[edi], cl; test byte ptr [eax - 0x7d000000], ah; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x0011d465: adc byte ptr [ebp - 0xa7bf040], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d987d], cl; call dword ptr [edx + 0x52]; 
0x00163bd2: adc byte ptr [ebp - 0xcd3537d], cl; call dword ptr [eax - 0x73]; 
0x00157aa2: adc byte ptr [ebp - 0xd93d37d], cl; call dword ptr [eax - 0x73]; 
0x00027b4c: adc byte ptr [ebp - 0xe7bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x000a0c4d: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa0c48; xor eax, eax; ret; 
0x0016dab8: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00043812: adc byte ptr [ebx + 0x110244c], cl; ret 0x62e9; 
0x0012ec49: adc byte ptr [ebx + 0x1142474], cl; ret; 
0x000deca0: adc byte ptr [ebx + 0x1342444], cl; jl 0xdeccc; add al, 0x89; ret 0xfa29; 
0x000465af: adc byte ptr [ebx + 0x1489fc50], cl; mov eax, 0x3904e883; ret; 
0x000e1113: adc byte ptr [ebx + 0x177f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0011a495: adc byte ptr [ebx + 0x1a483], cl; add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x000920bf: adc byte ptr [ebx + 0x1b7501fa], al; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0016656b: adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e109d: adc byte ptr [ebx + 0x1d7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000e0ecc: adc byte ptr [ebx + 0x1e7f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040d53: adc byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0017728a: adc byte ptr [ebx + 0x207f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0008e341: adc byte ptr [ebx + 0x217f01fa], al; add esp, 0x18; pop ebx; ret; 
0x001774b0: adc byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x001771fe: adc byte ptr [ebx + 0x247f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00087eae: adc byte ptr [ebx + 0x2890853], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0015178e: adc byte ptr [ebx + 0x311c2454], cl; dec dword ptr [ebx + 0x392c244c]; ret; 
0x000e144d: adc byte ptr [ebx + 0x390c245c], cl; ret 0x470f; 
0x000f421f: adc byte ptr [ebx + 0x39202454], cl; ret; 
0x0003e753: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e876: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0016d1a5: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0006ac9f: adc byte ptr [ebx + 0x468b0456], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016e0ac: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0014bb2e: adc byte ptr [ebx + 0x47f01fa], al; ret; 
0x0017fe24: adc byte ptr [ebx + 0x4c48303], cl; pop ebx; pop esi; jmp eax; 
0x0016dabd: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0007d83e: adc byte ptr [ebx + 0x525004ec], al; push esi; call ecx; 
0x001716f7: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 0x24]; 
0x00170c67: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 4]; 
0x0009c265: adc byte ptr [ebx + 0x574fff8], al; add esp, 0xc; ret; 
0x000bb322: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000ba248: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0017c2e0: adc byte ptr [ebx + 0x5c8b0038], al; and al, 0x14; jne 0x17c2f0; pop ebx; ret; 
0x000b6e15: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0007cf45: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00039a8c: adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000260e8: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00025077: adc byte ptr [ebx + 0x5e5b04c4], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0008346d: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0009baf3: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0003a9c6: adc byte ptr [ebx + 0x5e5b18c4], al; pop edi; ret; 
0x0002767f: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000879a5: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x0009f003: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00082ad0: adc byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0002a701: adc byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; jmp eax; 
0x0002d00a: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00165b7e: adc byte ptr [ebx + 0x5e], bl; jmp eax; 
0x00033c05: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002f6f6: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00096f2e: adc byte ptr [ebx + 0x5e], bl; ret; 
0x0016f0b1: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0003e756: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e879: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x00025547: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x00123805: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001800d1: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x0003fa59: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc76: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff46: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffc9: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x000d2db6: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd14a: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df48a: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x0017081a: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0013336d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x0013457d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x001860f5: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003fe34: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b4: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7f6: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x000912f2: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c6: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a46: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f52: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b2: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x0016e943: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea23: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea86: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eae6: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb53: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016e8d3: adc byte ptr [ebx + 0x653c2454], cl; sub edx, dword ptr [0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x001037da: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0010df67: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f897: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0009c620: adc byte ptr [ebx + 0x6808ec], al; add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; add byte ptr [eax - 0x62], 0xf9; call dword ptr [eax - 0x18]; 
0x000249e6: adc byte ptr [ebx + 0x73], 0xf9; call dword ptr [eax - 0x18]; 
0x0011a7a3: adc byte ptr [ebx + 0x74c08500], cl; inc esi; call eax; 
0x001a4246: adc byte ptr [ebx + 0x90c245c], cl; ret; 
0x00160e52: adc byte ptr [ebx + 0xb91856], cl; add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0x489; 
0x00171db9: adc byte ptr [ebx + 0xc], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0009232d: adc byte ptr [ebx + 0xd7402e2], al; xor eax, eax; ret; 
0x0008f1c7: adc byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x001a4274: adc byte ptr [ebx + 0xf1c247c], cl; xchg ebp, eax; ret 0x7c39; 
0x0016e42f: adc byte ptr [ebx + 5], bl; nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0016e4bf: adc byte ptr [ebx + 5], bl; xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0008cf32: adc byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0011c122: adc byte ptr [ebx + esi*4 - 7], 0xff; call 0x11be10; test eax, eax; je 0x11c138; add esp, 0xc; ret; 
0x00131926: adc byte ptr [ebx - 0x11b73], cl; call dword ptr [eax - 0x73]; 
0x0003f62d: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x001774ed: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x0015dcfd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x0005ce44: adc byte ptr [ebx - 0x17af0007], al; ret 0xfd7c; 
0x000fb4cd: adc byte ptr [ebx - 0x17cbdbbc], cl; mov ecx, 0x8bffffc1; jl 0xfb4fe; adc al, 0x89; ret; 
0x00074f67: adc byte ptr [ebx - 0x19d75474], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0017a4c3: adc byte ptr [ebx - 0x2776cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00165d96: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x00165f3a: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00046065: adc byte ptr [ebx - 0x2d16ff26], al; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000ce3c1: adc byte ptr [ebx - 0x361f7b], al; call dword ptr [eax]; 
0x000cdf9c: adc byte ptr [ebx - 0x362b43], cl; dec dword ptr [edi]; xchg esp, eax; ret 0xf883; 
0x000cdf95: adc byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x00056107: adc byte ptr [ebx - 0x365f63], cl; call dword ptr [edi - 1]; 
0x0007cf42: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x001646fc: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00141ea0: adc byte ptr [ebx - 0x3b7cfe18], al; add al, 0x5b; pop esi; ret; 
0x0003f00f: adc byte ptr [ebx - 0x3efbdbac], cl; jmp 0xfd6751d; xchg ebp, eax; ret 0xd121; 
0x00163b86: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x163b97; sub esp, 0xc; push esi; call eax; 
0x00164058: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x164069; sub esp, 0xc; push esi; call eax; 
0x00164f83: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x164f94; sub esp, 0xc; push edi; call eax; 
0x001695a9: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1695ba; sub esp, 0xc; push esi; call eax; 
0x0016ac8e: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16ac9f; sub esp, 0xc; push edi; call eax; 
0x0016c017: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16c028; sub esp, 0xc; push ebp; call eax; 
0x0009229b: adc byte ptr [ebx - 0x3f7af7bd], cl; je 0x922b5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a0c4f: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0xa0c48; xor eax, eax; ret; 
0x0012daf2: adc byte ptr [ebx - 0x3f7c2bb3], cl; sbb al, 0x89; out 0x89, al; ret; 
0x0008a2ca: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00096e96: adc byte ptr [ebx - 0x3fe6fe08], al; pop ebx; pop esi; pop edi; ret; 
0x0011cc3d: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012680d: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011e5cd: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ab6d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126bcd: adc byte ptr [ebx - 0x47f3dba4], cl; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116add: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073817: adc byte ptr [ebx - 0x4f763], cl; call dword ptr [edx - 0x77]; 
0x00040bfc: adc byte ptr [ebx - 0x50f0fb14], al; ret; 
0x0004572f: adc byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x001415c4: adc byte ptr [ebx - 0x6272f314], al; fldcw word ptr [edx - 7]; call dword ptr [ebx - 0x18]; 
0x0009524d: adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0015ec96: adc byte ptr [ebx - 0x6bf00008], al; ret 0xede9; 
0x00076f8b: adc byte ptr [ebx - 0x6bf00008], al; ret; 
0x00171f55: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000b6db9: adc byte ptr [ebx - 0x7017ef40], al; push 0xc181000c; mov dl, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba0b9: adc byte ptr [ebx - 0x7017ef40], al; xor eax, 0xc181000c; xor bl, byte ptr [edi + 0x10]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012ef15: adc byte ptr [ebx - 0x72affb14], al; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0017f594: adc byte ptr [ebx - 0x74dfdb8c], cl; inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x00083594: adc byte ptr [ebx - 0x74dfdba4], cl; inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00099759: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00091d57: adc byte ptr [ebx - 0x74ebdbb4], cl; inc ebx; or al, 0x89; ret 0xe281; 
0x00126e94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126964: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115854: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117794: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117264: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b094: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b04: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126874: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad84: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b64: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119974: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b04: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126784: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c84: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115294: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8884: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e904: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e624: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00170fde: adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x0017103b: adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007b582: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0007b6e2: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0008335c: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00127b58: adc byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127427: adc byte ptr [ebx - 0x76c3dbbc], cl; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00116043: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0005fe73: adc byte ptr [ebx - 0x76e7dbac], cl; ret; 
0x00176ce2: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x408d; 
0x00090018: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x0003f95a: adc byte ptr [ebx - 0x76f7dbb4], cl; ret 0xc085; 
0x00030562: adc byte ptr [ebx - 0x76fbdb94], cl; ret 0x2deb; 
0x0006abc5: adc byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x00103949: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007c017: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000ad303: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0011ad56: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6a6076a], cl; call dword ptr [edx - 0x77]; 
0x0011ad75: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6a6046a], cl; call dword ptr [edx - 0x77]; 
0x00178b0b: adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x68a104a], cl; call dword ptr [esi + 0x53]; 
0x000e6704: adc byte ptr [ebx - 0x7bf00008], al; ret 0xfff7; 
0x00134704: adc byte ptr [ebx - 0x7c16f33c], al; mov bh, cl; dec dword ptr [ebp - 0x4417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x001619e9: adc byte ptr [ebx - 0x7c72f714], al; aam 0x71; stc; call dword ptr [eax + 0x51]; 
0x0017908b: adc byte ptr [ebx - 0x7c72f714], al; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x50]; 
0x0012eccb: adc byte ptr [ebx - 0x7ce7dbb4], cl; ret; 
0x0005d945: adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x0003c482: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0004229e: adc byte ptr [ebx - 0x7d], bl; rol byte ptr [ecx], 0x5e; pop edi; ret; 
0x00058e31: adc byte ptr [ebx - 0x876b], cl; inc dword ptr [ecx]; ret 0x5589; 
0x0013d2c8: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000eb20d: adc byte ptr [ebx], 0x57; stc; call dword ptr [eax - 0x18]; 
0x000796e0: adc byte ptr [ebx], bh; push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x0012a8b7: adc byte ptr [ebx], bh; xor dword ptr [eax + 0x47], 0xb730000; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x0016669a: adc byte ptr [ebx], ch; inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0003c5d7: adc byte ptr [ecx + 0x114c4], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x0017ec7d: adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0012a677: adc byte ptr [ecx + 0x3ccb3], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00164c37: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000ba577: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b70d4: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000ba5a7: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b70f4: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x000813a7: adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000b4b14: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0007a5d5: adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x000e119b: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000e033c: adc byte ptr [ecx + 0x4f8b184e], cl; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x0008000c: adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00171721: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x20]; 
0x001708f9: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x0007a3f1: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x000878ab: adc byte ptr [ecx + 0x5b0c244c], cl; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00079552: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0017d429: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x000588d8: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x000a0cea: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x0007fd68: adc byte ptr [ecx + 0x5e5b0450], cl; ret; 
0x000d502b: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x00096fa7: adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x00096f2b: adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x0003fb97: adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x00058150: adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x000b3404: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000b3424: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x0017b2d3: adc byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x001355d3: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x000bf46f: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00143024: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00095346: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x001a127f: adc byte ptr [ecx + 0x74891134], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x0007e576: adc byte ptr [ecx + 0x74c085c7], cl; jae 0x7e501; in al, dx; or al, 0x8d; sub dword ptr [eax - 4], -1; call dword ptr [eax - 0x73]; 
0x0014cfbd: adc byte ptr [ecx + 0x75c08503], cl; ret; 
0x0005e337: adc byte ptr [ecx + 0x78c085c3], cl; cmp al, byte ptr [ebx - 0x7972f714]; push ss; inc edx; stc; call dword ptr [eax + 0x53]; 
0x00058026: adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x0013813f: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0017cfde: adc byte ptr [ecx + 0xfc085d8], cl; inc esp; ret 0x178b; 
0x0018a58a: adc byte ptr [ecx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011985a: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x0006051e: adc byte ptr [ecx - 0x16cfdba4], cl; mov esi, 0xe8ffffe9; ret; 
0x00133f5f: adc byte ptr [ecx - 0x16f3dbb4], cl; cmpsd dword ptr [esi], dword ptr es:[edi]; loope 0x133f5a; jmp dword ptr [esi - 0x70]; 
0x00133fbf: adc byte ptr [ecx - 0x16f3dbb4], cl; ja 0x133f87; hlt; jmp dword ptr [esi - 0x70]; 
0x00171b55: adc byte ptr [ecx - 0x337672e8], cl; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x000ce806: adc byte ptr [ecx - 0x366b43], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x363743], cl; call dword ptr [eax]; 
0x00051a41: adc byte ptr [ecx - 0x3f7c77ec], cl; add al, 0x39; ret; 
0x00057842: adc byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x00128584: adc byte ptr [ecx - 0x47dbdbbc], cl; add byte ptr [eax], al; add byte ptr [ecx - 0x76ebdb8c], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00121c3d: adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013a29f: adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ee56e: adc byte ptr [ecx - 0x49f7b], cl; inc dword ptr [ecx]; ror byte ptr [ecx - 0x4977b], 1; inc dword ptr [ecx]; ret; 
0x00062549: adc byte ptr [ecx - 0x5a373], cl; dec dword ptr [ecx - 0x5934b]; dec dword ptr [ecx - 0x5f343]; jmp dword ptr [ebp - 0x5f]; 
0x00076458: adc byte ptr [ecx - 0x74f3dbb4], cl; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000c43e3: adc byte ptr [ecx - 0x76b7dbb4], cl; je 0xc440f; sub byte ptr [ecx], bh; ret 0x840f; 
0x000db478: adc byte ptr [ecx - 0x76cfdbbc], cl; ret 0x4c8b; 
0x0012d4d1: adc byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x00090a3a: adc byte ptr [ecx - 0x76efdbac], cl; ret 0xc74; 
0x000db5f8: adc byte ptr [ecx - 0x76efdbbc], cl; ret 0x448b; 
0x00185970: adc byte ptr [ecx - 0x76f7dbbc], cl; fcomp dword ptr [ebx - 0x17]; adc eax, ebp; clc; jmp dword ptr [esi - 0x70]; 
0x001859a0: adc byte ptr [ecx - 0x76f7dbbc], cl; fcomp dword ptr [ebx - 0x17]; add edx, esi; clc; jmp dword ptr [esi - 0x70]; 
0x00045a75: adc byte ptr [ecx - 0x76fbdbb4], cl; jl 0x45aa1; sub byte ptr [ecx], bh; ret 0x840f; 
0x00126fe0: adc byte ptr [ecx - 0x7a3fce3e], cl; sal byte ptr [esp + edi - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x64afb79], cl; call dword ptr [eax + 0x55]; 
0x001a6169: adc byte ptr [ecx - 0x7c347603], cl; ret; 
0x000a080f: adc byte ptr [ecx - 0x7c3fcef0], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x0007d01e: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x00058953: adc byte ptr [ecx - 0xa343], cl; dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x00164ac9: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x164ae1; push ebx; call dword ptr [esi + 0x14]; 
0x001a02df: adc byte ptr [ecx - 0xc3fce3e], cl; bsf edx, edx; add eax, edx; ret; 
0x00032916: adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005885b: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x00082442: adc byte ptr [ecx], ah; ret 0xfa83; 
0x0016e7c5: adc byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x0010ab9a: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001405ee: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0010abbe: adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000ba876: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0007cbe6: adc byte ptr [ecx], al; ret 0x562b; 
0x00043816: adc byte ptr [ecx], al; ret 0x62e9; 
0x000bb085: adc byte ptr [ecx], al; ret 0x67c; 
0x0013ed6a: adc byte ptr [ecx], al; ret 0xb5e9; 
0x00045493: adc byte ptr [ecx], al; ret 0xd389; 
0x0008b822: adc byte ptr [ecx], al; ret 0xd889; 
0x00079e3e: adc byte ptr [ecx], al; ret; 
0x0018c4d6: adc byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x424f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c3d1: adc byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x4253d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a4c6: adc byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x44288; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a3c1: adc byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x442cd; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001884c6: adc byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x46008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001883c1: adc byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x4604d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a6547: adc byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x001664d2: adc byte ptr [ecx], al; sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x0016875c: adc byte ptr [ecx], bh; fimul word ptr [edi]; xchg edx, eax; ret 0xf339; 
0x001028d7: adc byte ptr [ecx], bh; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0012d5a0: adc byte ptr [ecx], bh; jl 0x12d5c8; sbb al, 0xf; xchg esp, eax; ret; 
0x0008359e: adc byte ptr [ecx], bh; ret 0x2773; 
0x0017f59e: adc byte ptr [ecx], bh; ret 0x4d72; 
0x00148935: adc byte ptr [ecx], bh; ret 0x5e74; 
0x0009e73c: adc byte ptr [ecx], bh; ret 0x820f; 
0x000639b9: adc byte ptr [ecx], bh; ret 0x840f; 
0x0009dc22: adc byte ptr [ecx], bh; ret 0x850f; 
0x000fa6f6: adc byte ptr [ecx], bh; ret 0x8d0f; 
0x00024fbf: adc byte ptr [ecx], bh; ret; 
0x000be51d: adc byte ptr [ecx], bh; sal dword ptr [ebp + 0x10], 1; ret; 
0x0007b9bf: adc byte ptr [ecx], bh; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000810d9: adc byte ptr [ecx], bl; ret 0xc889; 
0x0008b1a0: adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; ret 0x4975; 
0x000a0d19: adc byte ptr [ecx], ch; ret 0x408b; 
0x000f61c5: adc byte ptr [ecx], ch; ret 0x5c8d; 
0x00040fe0: adc byte ptr [ecx], ch; ret 0xc269; 
0x000a2325: adc byte ptr [ecx], ch; ret 0xc8d; 
0x0019e069: adc byte ptr [ecx], ch; ret 0xe183; 
0x00038401: adc byte ptr [ecx], ch; ret; 
0x000dc3ea: adc byte ptr [ecx], ch; sar byte ptr [ecx], 1; ret; 
0x000c061c: adc byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012f87d: adc byte ptr [ecx], cl; ret; 
0x00077ee3: adc byte ptr [ecx], dh; call ptr [ebx + 0x5e]; mov eax, edi; pop edi; ret; 
0x000a6b32: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0007bab3: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00167363: adc byte ptr [ecx], dh; ret; 
0x0012d00e: adc byte ptr [ecx], dh; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00166447: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x001306fc: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x000f25ab: adc byte ptr [edi + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x000b106f: adc byte ptr [edi + 0x5b], bl; ret; 
0x000b32bd: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a984a: adc byte ptr [edi + 0x5e], bl; ret; 
0x000fcb4f: adc byte ptr [edi + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00028204: adc byte ptr [edi - 7], bh; call dword ptr [eax - 0x18]; 
0x0018c177: adc byte ptr [edi], cl; adc byte ptr [edx + 0x64], 0xfa; jmp dword ptr [esi - 0x70]; 
0x0018f3b7: adc byte ptr [edi], cl; adc byte ptr [edx], 0x32; cli; jmp dword ptr [esi - 0x70]; 
0x001876c7: adc byte ptr [edi], cl; add byte ptr [edx], 0xaf; cli; jmp dword ptr [esi - 0x70]; 
0x001903a7: adc byte ptr [edi], cl; and byte ptr [edx], 0x22; cli; jmp dword ptr [esi - 0x70]; 
0x001873a7: adc byte ptr [edi], cl; and byte ptr [edx], 0xb2; cli; jmp dword ptr [esi - 0x70]; 
0x001879e7: adc byte ptr [edi], cl; and dl, 0xab; cli; jmp dword ptr [esi - 0x70]; 
0x0019ef6d: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000a94b3: adc byte ptr [edi], cl; inc edi; ret 0x5350; 
0x000a5063: adc byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00061a0b: adc byte ptr [edi], cl; mov dh, 0x14; and al, 0x89; ret; 
0x000a6b22: adc byte ptr [edi], cl; mov esi, 0x5f5e5bc2; pop ebp; ret; 
0x000bada2: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000b4068: adc byte ptr [edi], cl; mov esp, 0x95e0e8d2; or al, 0; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a38: adc byte ptr [edi], cl; mov esp, 0xac10e8d2; or al, 0; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00175b33: adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x0019df3d: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00103f5e: adc byte ptr [edi], cl; test byte ptr [eax], bh; add al, 0; add dh, dh; ret 0xf20; 
0x0019ec6e: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x000b44e0: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b2e6d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0019eef2: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000aca4f: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x001a379f: adc byte ptr [edi], cl; test dword ptr [edx - 0x76fffff9], edx; ret 0x6c8d; 
0x0019edd2: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000d1db0: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b0e40: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0019d1cb: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0019ab43: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001996bc: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x0004480b: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00046de9: adc byte ptr [edi], cl; xchg edx, eax; ret 0xd120; 
0x000c10fd: adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x00135aab: adc byte ptr [edi], cl; xchg esp, eax; ret; 
0x0018a197: adc byte ptr [edi], cl; xor byte ptr [edx], 0x84; cli; jmp dword ptr [esi - 0x70]; 
0x00188197: adc byte ptr [edi], cl; xor byte ptr [edx], 0xa4; cli; jmp dword ptr [esi - 0x70]; 
0x00186797: adc byte ptr [edi], cl; xor byte ptr [edx], 0xbe; cli; jmp dword ptr [esi - 0x70]; 
0x0018e3d7: adc byte ptr [edi], cl; xor dl, 0x41; cli; jmp dword ptr [esi - 0x70]; 
0x0018d20a: adc byte ptr [edi], dl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00170d99: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x00170dd1: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x001714b7: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x0016a47b: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x00170af9: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x00170a9e: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x000e45be: adc byte ptr [edx + 0x56], 0xf9; call dword ptr [eax - 0x18]; 
0x001356dd: adc byte ptr [edx + 0x56], dl; call eax; 
0x00135611: adc byte ptr [edx + 0x57], dl; call eax; 
0x0018c179: adc byte ptr [edx + 0x64], 0xfa; jmp dword ptr [esi - 0x70]; 
0x0008b36a: adc byte ptr [edx + 0x7fffffff], bh; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0003d876: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x4abd0; add esp, 0x1c; ret; 
0x0011c718: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00076416: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x00034b66: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x34b10; add esp, 0x1c; ret; 
0x00034b46: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34b10; add esp, 0x1c; ret; 
0x00151306: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x000898cc: adc byte ptr [edx + eax], 0; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00086e9f: adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00086ecb: adc byte ptr [edx + ebx], 0; cmp eax, 1; jg 0x86ee0; ret; 
0x00086ee4: adc byte ptr [edx + ebx], 0; push eax; call 0x893c0; add esp, 0x1c; ret; 
0x0014882f: adc byte ptr [edx - 0x17af0007], 0x57; xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x00091803: adc byte ptr [edx - 0x17af0007], 0x83; idiv dh; jmp dword ptr [ebp - 0x39]; 
0x000a2637: adc byte ptr [edx - 0x18], dl; ret 0xf80a; 
0x001645b2: adc byte ptr [edx - 0x73], dl; xchg esi, eax; dec esp; add ah, dh; call dword ptr [edx - 0x73]; 
0x00031f39: adc byte ptr [edx - 1], 0xff; jmp dword ptr [esi - 0x70]; 
0x0018f3b9: adc byte ptr [edx], 0x32; cli; jmp dword ptr [esi - 0x70]; 
0x000386b9: adc byte ptr [edx], 0x3e; stc; call dword ptr [eax - 1]; 
0x0018c70a: adc byte ptr [edx], ah; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00104e66: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0x105380; add esp, 0x1c; ret; 
0x0003d256: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d1e0; add esp, 0x1c; ret; 
0x000791d6: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x00163ed0: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0007b6e6: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0013d332: adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00199a87: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00196d43: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0019db6a: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0019db82: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bad3d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000f5645: adc byte ptr [esi + ecx - 0x77], dh; ret 0xef89; 
0x000ba548: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b70b5: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000b4ac5: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b33e5: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017bc51: adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00024901: adc byte ptr [esi], 0x69; stc; call dword ptr [eax - 0x18]; 
0x00154604: adc byte ptr [esi], 0x6f; stc; call dword ptr [eax - 1]; 
0x0016edaa: adc byte ptr [esi], ch; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0018900a: adc byte ptr [esp + eax], dl; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b423d: adc byte ptr [esp + ecx + 0x5fc18100], dl; mov esp, 0xc030010; cdq; jmp ecx; 
0x000b2a3d: adc byte ptr [esp + ecx + 0x7fc18100], ch; rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009e375: adc byte ptr fs:[eax], al; add byte ptr [ebp - 0x6af1b7f], cl; call dword ptr [eax - 0x73]; 
0x000351fb: adc ch, 0x3d; stc; call dword ptr [eax + 0x53]; 
0x00162722: adc ch, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00162722: adc ch, 0x72; stc; call dword ptr [eax + 0x6a]; or al, ch; and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x00162822: adc ch, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00162776: adc ch, 0x72; stc; jmp dword ptr [ebp - 0x75]; 
0x00145571: adc ch, byte ptr [ecx]; ret 0xd101; 
0x00068638: adc ch, cl; ret 0xfffc; 
0x00107c9d: adc cl, bh; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000b2dea: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000819cd: adc cl, byte ptr [ebp + 0x4889014a]; add al, 0xf; mov dh, 2; ret; 
0x0013b6c9: adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00160903: adc cl, byte ptr [ebp - 0x7cffd98c]; ret; 
0x000a2985: adc cl, byte ptr [ebp - 0x957637e]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0xab; call 0xc24e3997; ret; 
0x000a5da5: adc cl, byte ptr [ebp - 0x9a5f37e]; inc dword ptr [eax - 0x6d72fd1b]; cmp al, 0xa8; call 0xc24e6db7; ret; 
0x000a33b5: adc cl, byte ptr [ebp - 0x9cad37e]; inc dword ptr [eax - 0x6d72fd1b]; cld; cmpsb byte ptr [esi], byte ptr es:[edi]; call 0xc24e43c7; ret; 
0x000a5e65: adc cl, byte ptr [ebp - 0x9e4f37e]; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe786; inc esp; ret 0x66c3; 
0x00094e9d: adc cl, byte ptr [ebx + 0x144a3908]; je 0x94eb0; ret; 
0x00129ced: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x0009b3b5: adc cl, byte ptr [ecx + 0x4b891459]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000af336: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af496: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf56: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0b6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d6: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f6: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x001665b2: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x001700fa: adc cl, byte ptr [edx - 0x14]; call dword ptr [eax - 0x73]; 
0x000b6f16: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d0ba6: adc cl, ch; insb byte ptr es:[edi], dx; jmp 0xd0baa; dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x0017a909: adc cl, ch; mov eax, 0x90fffffe; mov dword ptr [esp + 8], ecx; call eax; 
0x0009ade3: adc cl, ch; push 0x8dffffff; xchg byte ptr [eax + ebp*4], bl; stc; call dword ptr [eax - 0x73]; 
0x000868e0: adc cl, ch; ret 0xfffe; 
0x00161c0e: adc cl, ch; ret; 
0x00024928: adc cl, ch; sbb eax, 0x8d001156; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [edi + 0x57]; 
0x0005667a: adc cl, ch; xor eax, 0xffffffff; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x00169716: adc dh, al; stc; call dword ptr [eax - 0x73]; 
0x0015812c: adc dh, bl; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001467a5: adc dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0012890c: adc dh, byte ptr [edi + 0xa]; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x0018f3ba: adc dh, byte ptr [edx]; cli; jmp dword ptr [esi - 0x70]; 
0x0005816c: adc dh, dh; add ah, byte ptr [eax]; je 0x58180; add esp, 0xc; ret; 
0x00073b7c: adc dh, dh; add ah, byte ptr [eax]; je 0x73b90; add esp, 0xc; ret; 
0x00127406: adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00085df6: adc dh, dh; push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009f4ef: adc dh, dh; ret 0xf04; 
0x0014b0d9: adc dh, dh; ret 0xf20; 
0x000d997d: adc dh, dh; ret; 
0x0019b0fe: adc dh, dl; jmp dword ptr [esi - 0x70]; 
0x00161519: adc dl, 0xc9; stc; jmp dword ptr [esi - 0x77]; 
0x0009aa43: adc dl, byte ptr [eax + 0x32c9089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa73: adc dl, byte ptr [eax + 0x3309089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aaa3: adc dl, byte ptr [eax + 0x3349089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a813: adc dl, byte ptr [eax + 0x3389089]; add byte ptr [eax], al; ret; 
0x0009a7f3: adc dl, byte ptr [eax + 0x33c9089]; add byte ptr [eax], al; ret; 
0x0009aad3: adc dl, byte ptr [eax + 0x3509089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a8a3: adc dl, byte ptr [eax + 0x3749089]; add byte ptr [eax], al; ret; 
0x0009ab03: adc dl, byte ptr [eax + 0x3c149089]; add byte ptr [eax], al; ret; 
0x0002ed0a: adc dl, byte ptr [eax]; add al, ch; fisttp qword ptr [ebp + 0x10]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0019a563: adc dl, dh; call dword ptr [ebx - 0x18]; 
0x0014fa62: adc dword ptr [eax + 0x50fff944], -0x18; ret; 
0x0011d39f: adc dword ptr [eax + 0x60], -7; call dword ptr [ecx + 0x51]; 
0x0018d78b: adc dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00104993: adc dword ptr [eax + ebx*2], -7; call dword ptr [eax - 0x18]; 
0x00104993: adc dword ptr [eax + ebx*2], -7; call dword ptr [eax - 0x18]; xor bl, 0xf2; jmp dword ptr [esi - 0x70]; 
0x00167b7c: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x167b70; pop ebx; ret; 
0x0016a001: adc dword ptr [eax - 0x3a], -7; call dword ptr [edx + 0x6a]; 
0x001236b7: adc dword ptr [eax - 0x4c], -7; call dword ptr [eax - 0x18]; 
0x00104d72: adc dword ptr [eax - 0x50], -7; call dword ptr [eax - 0x73]; 
0x00102fc1: adc dword ptr [eax - 1], edi; jmp 0x102f69; call 0x133af0; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000e2ec1: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005da91: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; ret; 
0x00099789: adc dword ptr [eax - 1], edi; pop ebx; pop esi; ret; 
0x0003c401: adc dword ptr [eax - 1], edi; pop ebx; ret; 
0x00024e80: adc dword ptr [eax - 1], edi; ret; 
0x00169715: adc dword ptr [eax], -0x3a; stc; call dword ptr [eax - 0x73]; 
0x00090404: adc dword ptr [eax], -0x6c; stc; call dword ptr [eax - 0x18]; 
0x0005d292: adc dword ptr [eax], -0x7d; stc; call dword ptr [eax - 0x18]; 
0x000a5141: adc dword ptr [eax], -0x7d; stc; call dword ptr [edx + 0x50]; 
0x001790b6: adc dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000319c1: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x0003195b: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x000e23b0: adc dword ptr [eax], eax; and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0011b9bd: adc dword ptr [eax], eax; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x11b9cd; ret; 
0x001374fc: adc dword ptr [eax], eax; pop ebx; ret; 
0x00115eed: adc dword ptr [eax], eax; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00116b0d: adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00119b7d: adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011774d: adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011924d: adc dword ptr [eax], eax; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00117c7d: adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001152cd: adc dword ptr [eax], eax; push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116a83: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116e28: adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0007e335: adc dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x000f543a: adc dword ptr [ebp - 0x737af001], eax; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00165f1f: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x00166a23: adc dword ptr [ebx + 0x29342454], ecx; ret 0xfa01; 
0x0008896e: adc dword ptr [ebx + 0x54890450], ecx; and al, 4; jmp dword ptr [eax]; 
0x0014cf47: adc dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0009e9ae: adc dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x001714e2: adc dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x001171be: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0010c7c5: adc dword ptr [ebx + 0x5e5b60c4], eax; pop edi; ret; 
0x00137603: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00080ca1: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x00146a79: adc dword ptr [ebx + 0x6b], -7; call dword ptr [eax - 0x73]; 
0x00052a3c: adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x0016484e: adc dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x00199a1e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x199a29; neg eax; ret; 
0x0003eab3: adc dword ptr [ebx - 0x70f0fe06], eax; mov bl, 0; add byte ptr [eax], al; call eax; 
0x000da948: adc dword ptr [ebx - 0x7cf3dbbc], ecx; ret; 
0x0011d455: adc dword ptr [ebx], 0x62; stc; call dword ptr [ecx + 0x51]; 
0x000bbf72: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0003c906: adc dword ptr [ecx + 0x120c4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015c421: adc dword ptr [ecx + 0x71], -7; call dword ptr [eax - 0x18]; 
0x0015c5c2: adc dword ptr [ecx + 0x71], -7; call dword ptr [eax - 0x73]; 
0x001701fb: adc dword ptr [ecx - 0x14], ecx; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x00092ae4: adc dword ptr [ecx - 0x7cfbee84], ecx; ret 0x3908; 
0x00052a39: adc dword ptr [ecx - 0x7cfbee8c], ecx; ret 0x3908; 
0x0011f6c2: adc dword ptr [ecx - 0x7cfbee94], ecx; ret 0x3908; 
0x0008fba5: adc dword ptr [ecx - 0x7cfbeea4], ecx; ret 0x3908; 
0x000e884a: adc dword ptr [ecx], -0x3a; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x00028006: adc dword ptr [ecx], eax; ret 0xc083; 
0x0009c2b4: adc dword ptr [ecx], edi; ret 0x1d73; 
0x000b49a0: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0004053b: adc dword ptr [edi - 0x3b7cfff9], esi; cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0012b9fb: adc dword ptr [edi], ecx; mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x00047906: adc dword ptr [edi], edi; stc; call dword ptr [eax - 0x18]; 
0x000e3b44: adc dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x000959dd: adc dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x00089acb: adc dword ptr [edx + eax], 0x10000; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00084793: adc dword ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0017e402: adc dword ptr [edx - 7], eax; call dword ptr [eax + 0x6a]; 
0x000aceb1: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x00188824: adc dword ptr [esi - 1], ecx; inc dword ptr [ecx + 0x45bf0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00178d22: adc dword ptr [esi], edx; add byte ptr [eax], al; add bl, ch; fucomi st(0); ret 0xfbad; 
0x001698e8: adc dword ptr [esp + esi*2], -7; call dword ptr [eax - 0x73]; 
0x000bbf71: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0014957e: adc eax, -0x40; stc; call dword ptr [eax - 0x73]; 
0x001485a2: adc eax, -0x41; stc; call dword ptr [eax - 0x18]; 
0x0017d728: adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00140ca0: adc eax, 0; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x000df66b: adc eax, 0x10; cmp eax, -0x26; jne 0xdf681; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010abef: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac5f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b05f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x001152df: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x0011581f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00115efd: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x00116b1b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x0011722f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x0011775b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c8b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x0011925f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192af: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0cf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x001225ff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x001249cb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x0012506f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001251e6: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001252ef: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x001263af: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x0012666f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x0003c3e0: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0005da0f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990db: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x0009a133: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x000d425d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x00102cb7: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003c3a1: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0011772d: adc eax, 0x10; mov ebx, edx; ret; 
0x000f2cdf: adc eax, 0x10; neg eax; pop ebx; ret; 
0x00117c5d: adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000e2e54: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000893dd: adc eax, 0x10; pop ebx; pop esi; ret; 
0x00136172: adc eax, 0x10; pop ebx; ret; 
0x0009628b: adc eax, 0x10; ret; 
0x0004229a: adc eax, 0x10c48300; pop ebx; add eax, 1; pop esi; pop edi; ret; 
0x00042693: adc eax, 0x10c48300; pop ebx; pop esi; pop edi; ret; 
0x00102d16: adc eax, 0x14; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102dba: adc eax, 0x14; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00103036: adc eax, 0x14; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00104ee4: adc eax, 0x14; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x00109b97: adc eax, 0x14; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x0011524f: adc eax, 0x14; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x00117824: adc eax, 0x14; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a4: adc eax, 0x14; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x00118f57: adc eax, 0x14; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b1d9: adc eax, 0x14; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0011b5f7: adc eax, 0x14; jne 0x11b602; add esp, 0x1c; ret; 
0x0011c08d: adc eax, 0x14; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0011cce8: adc eax, 0x14; jne 0x11ccf3; add esp, 0x1c; ret; 
0x0012181a: adc eax, 0x14; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218ca: adc eax, 0x14; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x0012336d: adc eax, 0x14; jne 0x123387; add esp, 0x3c; ret; 
0x0012380c: adc eax, 0x14; jne 0x123817; add esp, 0x1c; ret; 
0x001274ff: adc eax, 0x14; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x00127624: adc eax, 0x14; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a4: adc eax, 0x14; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x0012799f: adc eax, 0x14; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286af: adc eax, 0x14; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287c8: adc eax, 0x14; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128834: adc eax, 0x14; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x001288bf: adc eax, 0x14; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x001289c2: adc eax, 0x14; jne 0x1289d4; add esp, 0x7c; ret; 
0x00133374: adc eax, 0x14; jne 0x133385; add esp, 0x2c; ret; 
0x00134584: adc eax, 0x14; jne 0x134595; add esp, 0x2c; ret; 
0x0013e99e: adc eax, 0x14; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9fa: adc eax, 0x14; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea49: adc eax, 0x14; jne 0x13ea54; add esp, 0x1c; ret; 
0x0014080d: adc eax, 0x14; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408ad: adc eax, 0x14; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x0014096d: adc eax, 0x14; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a0d: adc eax, 0x14; jne 0x140a3d; add esp, 0x11c; ret; 
0x00140ee5: adc eax, 0x14; jne 0x140f2c; add esp, 0x1c; ret; 
0x00144837: adc eax, 0x14; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cb8: adc eax, 0x14; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x001643eb: adc eax, 0x14; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x0016a26e: adc eax, 0x14; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4c3: adc eax, 0x14; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d5ed: adc eax, 0x14; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d68d: adc eax, 0x14; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0016d9dd: adc eax, 0x14; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da56: adc eax, 0x14; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x0016e8da: adc eax, 0x14; jne 0x16e8e5; add esp, 0x4c; ret; 
0x001708d2: adc eax, 0x14; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709c2: adc eax, 0x14; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c79: adc eax, 0x14; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d09: adc eax, 0x14; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170db8: adc eax, 0x14; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e3d: adc eax, 0x14; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ecf: adc eax, 0x14; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x00171709: adc eax, 0x14; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x00171799: adc eax, 0x14; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x00171829: adc eax, 0x14; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718b9: adc eax, 0x14; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171fb1: adc eax, 0x14; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x00172011: adc eax, 0x14; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x0017207a: adc eax, 0x14; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x0017212a: adc eax, 0x14; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177106: adc eax, 0x14; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00178c92: adc eax, 0x14; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d0a: adc eax, 0x14; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017ab0e: adc eax, 0x14; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x0017d272: adc eax, 0x14; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800d8: adc eax, 0x14; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185d84: adc eax, 0x14; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x001860fc: adc eax, 0x14; jne 0x186107; add esp, 0x2c; ret; 
0x0003c7eb: adc eax, 0x14; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003c991: adc eax, 0x14; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003cd8f: adc eax, 0x14; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d393: adc eax, 0x14; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d413: adc eax, 0x14; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d49b: adc eax, 0x14; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0003fa60: adc eax, 0x14; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc7d: adc eax, 0x14; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003fe3b: adc eax, 0x14; jne 0x3fe46; add esp, 0x2c; ret; 
0x0003ff4d: adc eax, 0x14; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffd0: adc eax, 0x14; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f2c: adc eax, 0x14; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000504bb: adc eax, 0x14; jne 0x504c6; add esp, 0x2c; ret; 
0x000577f7: adc eax, 0x14; jne 0x5780f; add esp, 0x1c; ret; 
0x0005dcfb: adc eax, 0x14; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x0005dd82: adc eax, 0x14; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x0008c7fd: adc eax, 0x14; jne 0x8c808; add esp, 0x2c; ret; 
0x00091269: adc eax, 0x14; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912f9: adc eax, 0x14; jne 0x91304; add esp, 0x2c; ret; 
0x000925cd: adc eax, 0x14; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a4d: adc eax, 0x14; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f59: adc eax, 0x14; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b9: adc eax, 0x14; jne 0x933c4; add esp, 0x2c; ret; 
0x00096225: adc eax, 0x14; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x000964b4: adc eax, 0x14; jne 0x964d7; add esp, 0x2c; ret; 
0x00096720: adc eax, 0x14; jne 0x96747; add esp, 0x2c; ret; 
0x00096980: adc eax, 0x14; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x000986a8: adc eax, 0x14; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099d10: adc eax, 0x14; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x0009a2de: adc eax, 0x14; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x000bf52d: adc eax, 0x14; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d2d3b: adc eax, 0x14; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d2dbd: adc eax, 0x14; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000d2e08: adc eax, 0x14; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d2e68: adc eax, 0x14; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x000d4114: adc eax, 0x14; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000d44b8: adc eax, 0x14; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000dd151: adc eax, 0x14; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df491: adc eax, 0x14; jne 0xdf49c; add esp, 0x1c; ret; 
0x000df605: adc eax, 0x14; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df824: adc eax, 0x14; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x000e09ca: adc eax, 0x14; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0a26: adc eax, 0x14; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000e0ad0: adc eax, 0x14; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000e7890: adc eax, 0x14; jne 0xe78a7; add esp, 0x1c; ret; 
0x000e8b47: adc eax, 0x14; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4c7: adc eax, 0x14; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec227: adc eax, 0x14; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb27: adc eax, 0x14; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef877: adc eax, 0x14; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x0011993a: adc eax, 0x14ba; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x00024b6a: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x0004204c: adc eax, 0x18c48300; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00041fba: adc eax, 0x18c48300; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004201e: adc eax, 0x18c48300; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00041f8c: adc eax, 0x18c48300; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00041e9c: adc eax, 0x18c48300; pop ebx; ret; 
0x0002703e: adc eax, 0x241c8900; call edi; 
0x000260cb: adc eax, 0x241c8900; call esi; 
0x0002623e: adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268d8: adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x000bab1a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x00186a85: adc eax, 0x3000475; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00120934: adc eax, 0x39000000; ret 0x4e0f; 
0x0017193a: adc eax, 0x4189c229; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x0014823f: adc eax, 0x4e248e89; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x0007a9a8: adc eax, 0x5b20c483; pop esi; pop edi; ret; 
0x000d2d41: adc eax, 0x5b28c483; ret; 
0x00127031: adc eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x000d64b6: adc eax, 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x000f2149: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000ad1c8: adc eax, 0x5bfffffe; ret; 
0x0015e7b0: adc eax, 0x5ed0895b; pop edi; ret; 
0x0008faa0: adc eax, 0x68; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0002ea54: adc eax, 0x73d33900; sbb dword ptr [ebx - 0x7cf3dbac], ecx; ret 0x8301; 
0x00088810: adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00088847: adc eax, 0x78; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00089253: adc eax, 0x78; pop ebx; ret; 
0x000888cb: adc eax, 0x7c; pop ebx; ret; 
0x0015c320: adc eax, 0x81000213; ret; 
0x00159420: adc eax, 0x81000242; ret; 
0x00156a20: adc eax, 0x8100026c; ret; 
0x0014a620: adc eax, 0x81000330; ret; 
0x0018a220: adc eax, 0x81ffff34; ret; 
0x00188220: adc eax, 0x81ffff54; ret; 
0x0007651a: adc eax, 0x824448b; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000a8f6c: adc eax, 0x8300768d; ret 0x8b20; 
0x0002ec29: adc eax, 0x83d08904; ret 0x3901; 
0x000a2d2c: adc eax, 0x83e87401; ret 0x8b01; 
0x000414c7: adc eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00025f3b: adc eax, 0x86f0300; mov dword ptr [esp], ebp; call esi; 
0x0008a7c6: adc eax, 0x8908418b; ret; 
0x000e0c4a: adc eax, 0x89535600; ret; 
0x000eadb7: adc eax, 0x8dffffed; inc edi; call dword ptr [edi - 0x75]; 
0x0003c7f1: adc eax, 0x98c481; add byte ptr [eax], al; pop ebx; ret; 
0x00026077: adc eax, 0xadbb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026057: adc eax, 0xaddb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00067227: adc eax, 0xb60f0000; shr cl, 0xe2; sar bh, cl; call dword ptr [eax - 0x73]; 
0x0008a028: adc eax, 0xb85b0000; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00025567: adc eax, 0xb8cb0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x0004df30: adc eax, 0xba000002; pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5652; 
0x00024ee7: adc eax, 0xbf4b0500; and byte ptr [eax], al; lea eax, [eax - 0x681f0]; ret; 
0x00024ec7: adc eax, 0xbf6b0500; and byte ptr [eax], al; lea eax, [eax - 0x681e8]; ret; 
0x00197b1e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00024ba7: adc eax, 0xc28b0500; and byte ptr [eax], al; mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x001331ed: adc eax, 0xc483fffe; adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0014c0bb: adc eax, 0xc6810003; jbe 0x14c10f; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x000d1d4a: adc eax, 0xf390e8b; jne 0xd1ea0; pop edi; pop esi; ret; 
0x0018d564: adc eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009e97d: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x18]; 
0x00197d6e: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001070f9: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00153277: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x74fbdb84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x000ba34c: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ed9: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba36c: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ef9: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2e9: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e86: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f2bdd: adc eax, dword ptr [eax]; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xf2bf0; ret; 
0x000ba32d: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6eba: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba38e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f1b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3ae: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f3b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3ce: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f5b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008aa01: adc eax, dword ptr [ebp - 0x74cd8b2e]; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0016418f: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00025d6a: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00166fa0: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0016de68: adc eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0012492a: adc eax, dword ptr [ebx + eax*4]; ret 0x3908; 
0x0009a849: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1ca2b5a; mov dword ptr [edx + 0x368], eax; ret; 
0x00027036: adc eax, dword ptr [ebx - 0x17a8f314]; inc eax; cmp edx, dword ptr [0x241c8900]; call edi; 
0x000260c3: adc eax, dword ptr [ebx - 0x17a9f314]; mov bl, 0x4a; adc eax, 0x241c8900; call esi; 
0x0019fc0c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0004df2a: adc eax, dword ptr [ebx - 0x7bf0e008]; adc eax, 0xba000002; pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5652; 
0x000acf26: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000acf36: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000acf46: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000acf56: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000acee2: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000acf02: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf12: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000acef2: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf22: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000acf32: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf42: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf52: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000aced2: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x000a0a83: adc eax, dword ptr [ecx]; ret 0x1089; 
0x000b35a6: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b35b6: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000b3542: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000b4896: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b31c9: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b3209: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b3229: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b31ea: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b35a2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b324b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b35b2: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b326b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b328b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b31b6: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000b3bcf: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d2f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b9742: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b258f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b26ef: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b3bef: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d4f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b9762: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25af: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b270f: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b3c0f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d6f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b9782: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25cf: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b272f: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b3a9e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d8f: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b247e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b274f: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b210b: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af1c6: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000af406: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b0ff1: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000b6809: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b6829: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af2d9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000af419: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aaef9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab039: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b9952: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000af319: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af459: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aaf39: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab079: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af209: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000af479: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b1029: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000acc39: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae49: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000adbb2: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000ab099: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6849: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b6869: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001a02a6: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9587: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc01: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae06: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000adc2b: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000ab026: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000af2fa: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000af43a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aaf1a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab05a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af33b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af49b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf5b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af35b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000aaf7b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af37b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000aaf9b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000adb5e: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000ab0fb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b1066: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b95da: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc76: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000b672a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b3bc6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b2586: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26e6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3be6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d46: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b2706: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d66: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25c6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b2726: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a95: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d86: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2475: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b2746: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0018a21e: adc eax, ebp; adc eax, 0x81ffff34; ret; 
0x0018821e: adc eax, ebp; adc eax, 0x81ffff54; ret; 
0x00185979: adc eax, ebp; clc; jmp dword ptr [esi - 0x70]; 
0x000574fc: adc eax, edi; add byte ptr [edi], ch; jbe 0x5748d; ret 0x40c7; 
0x0012cc7c: adc ebp, 0x64; stc; call dword ptr [edx + 0x50]; 
0x00081d8d: adc ebp, ebx; ret; 
0x000cd112: adc ebp, edx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ba4b2: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b702f: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4d2: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b704f: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b49e0: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d1e8c: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000b335f: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000b4a5f: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b337f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00155c6f: adc ebx, ebp; ret 0xb68d; 
0x00032257: adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00032257: adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; mov esi, 0xf600001a; ret 0xf03; 
0x00166b8e: adc ecx, 0x65; stc; call dword ptr [eax + 0x6a]; 
0x000624f8: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x000ba392: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f1f: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3b2: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f3f: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3d2: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f5f: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011f47b: adc ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000b4553: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x00035df3: adc ecx, dword ptr [ebp - 0x7affd98c]; sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x001379bb: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0008b4e1: adc ecx, dword ptr [ecx + 0x3e8c1d0]; je 0x8b518; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006d7c9: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x000e1c49: adc ecx, dword ptr [ecx - 0x16fbdbbc]; insd dword ptr es:[edi], dx; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x000e1c79: adc ecx, dword ptr [ecx - 0x16fbdbbc]; pop ebp; dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x0007ffd9: adc ecx, dword ptr [ecx - 0x3b7cfbad]; add al, 0x5b; pop esi; ret; 
0x00124927: adc ecx, dword ptr [ecx - 0x7cfbec84]; ret 0x3908; 
0x001a7516: adc ecx, dword ptr [ecx - 0x7cfbec8c]; ret 0x3908; 
0x000b492f: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b324f: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b326f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000b328f: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000425bc: adc ecx, dword ptr [edi]; mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x0013d0e0: adc ecx, dword ptr [edi]; mov edi, 0x39fe5e4c; sar dword ptr [eax], 0xf; dec edi; ret; 
0x000b4556: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000af33f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af49f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000aaf5f: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000ab0bf: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000af35f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4bf: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000aaf7f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000ab0df: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000af37f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4df: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000aaf9f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000adb62: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000ab0ff: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b106a: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b99ae: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b95de: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc7a: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000b672e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0013736e: adc ecx, eax; call 0x1fbf678; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00040cf5: adc ecx, eax; jmp 0x40d09; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x000c0c07: adc ecx, edi; dec dword ptr [ebx + 0x24448903]; cmp al, 0x89; ret 0xc483; 
0x0011a6c5: adc edi, 0x3d; stc; call dword ptr [eax + 0x6a]; 
0x0009f41d: adc edi, 0x52; stc; call dword ptr [eax - 0x18]; 
0x00138b6f: adc edi, dword ptr [ecx]; ret 0x840f; 
0x0018c4dd: adc edi, edi; inc dword ptr [ecx + 0x424f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c2d2: adc edi, edi; inc dword ptr [ecx + 0x42703c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003fbd3: adc edx, 0; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000253e1: adc edx, 0; neg edx; ret; 
0x00119b5e: adc edx, 0; ret; 
0x000ba515: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b708f: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba575: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70d2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5a5: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70f2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4f2: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b706f: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba546: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70b3: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a361e: adc edx, dword ptr [eax - 0x7cf549f1]; ret 0x8b01; 
0x000b4a7f: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b33c2: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b3402: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b3422: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b33e3: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b339f: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000eb20e: adc edx, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x00088648: adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x000bf4cd: adc edx, ebp; push esi; inc ecx; jnp 0xbf4d8; cmove eax, edx; ret; 
0x00095597: adc esi, dword ptr [ebp + 0xe]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000958df: adc esi, dword ptr [ebp + 0xe]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000e884b: adc esi, eax; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x0007d022: adc esi, esi; ret 0x7502; 
0x000777cc: adc esi, esi; ret 0x7520; 
0x0007cf7e: adc esi, esi; ret 0xf08; 
0x00133067: adc esi, esi; ret 0xf20; 
0x00115bc0: adc esp, -0x4f; stc; call dword ptr [eax - 0x18]; 
0x0008e223: adc esp, -0x6d; stc; call dword ptr [eax - 0x18]; 
0x0008e223: adc esp, -0x6d; stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x001619ee: adc esp, 0x71; stc; call dword ptr [eax + 0x51]; 
0x001623ab: adc esp, 0x71; stc; call dword ptr [eax + 0x57]; 
0x001882c7: adc esp, dword ptr [edx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011d456: adc esp, dword ptr [edx - 7]; call dword ptr [ecx + 0x51]; 
0x0017d792: adc esp, ebp; jmp dword ptr [esi - 0x70]; 
0x001475f0: add ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x000f6d0a: add ah, 0xf2; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000bc8b7: add ah, 1; add byte ptr [eax], al; ret; 
0x00100957: add ah, bh; dec dword ptr [ecx]; retf 0x5489; ret; 
0x00073cee: add ah, bh; jmp dword ptr [esi - 0x70]; 
0x0005816e: add ah, byte ptr [eax]; je 0x58180; add esp, 0xc; ret; 
0x00073b7e: add ah, byte ptr [eax]; je 0x73b90; add esp, 0xc; ret; 
0x0012d3b0: add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013f2ca: add ah, byte ptr [ecx]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0004eef3: add ah, byte ptr [edx]; add byte ptr [eax], al; add cl, ch; ret; 
0x000b3bc7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b2587: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26e7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3be7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d47: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b2707: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d67: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25c7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b2727: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a96: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d87: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2476: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b2747: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af33c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af49c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000aaf5c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000ab0bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000af35c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000aaf7c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000ab0dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000af37c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000aaf9c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000adb5f: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000ab0fc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b1067: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b95db: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc77: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000b672b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0014337c: add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x000bbcf0: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bbd59: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000af3e3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000ab003: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b3165: add ah, byte ptr [esi - 0x77]; js 0x5e6a33c5; pop ebx; ret; 
0x0003cccd: add ah, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00124428: add ah, byte ptr [esi]; je 0x124456; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000f278f: add ah, byte ptr [esi]; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x000f28ef: add ah, byte ptr [esi]; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00081245: add ah, ch; call dword ptr [eax - 0x73]; 
0x001645b7: add ah, dh; call dword ptr [edx - 0x73]; 
0x000e244f: add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x0009dcc9: add al, 0; add bl, ch; ret 0x9066; 
0x0008cf06: add al, 0; add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x0008cdaf: add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000e3e26: add al, 0; add byte ptr [eax - 0x73], dl; and esp, 0xffffffad; stc; call dword ptr [eax - 0x18]; 
0x00159459: add al, 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x5e], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x00146534: add al, 0; add byte ptr [eax - 0x73], dl; cmp eax, -0x43; stc; call dword ptr [eax - 0x18]; 
0x0015a92b: add al, 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0; add byte ptr [eax - 0x73], dl; cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x000c3492: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000c34b5: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], al; aas; stc; call dword ptr [eax - 0x18]; 
0x00047969: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0004798c: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], eax; aas; stc; call dword ptr [eax - 0x18]; 
0x0009afc8: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0008aa90: add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x001a1277: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1073; 
0x001a0f53: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1473; 
0x001a6aea: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1673; 
0x001a6e2f: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1873; 
0x0011f6b3: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x00052a2e: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe73; 
0x0007ddfb: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0010bca0: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0017b5a0: add al, 0; add byte ptr [eax], al; add cl, ch; ret; 
0x0013541f: add al, 0; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x000427b8: add al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0017d335: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00099f67: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00023002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00117ba8: add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0019f08e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000d2101: add al, 0; add byte ptr [eax], al; ret; 
0x0011bf73: add al, 0; add byte ptr [ebp - 0x6a5d680], cl; jmp dword ptr [ebp - 0x75]; 
0x000e633a: add al, 0; add byte ptr [ebp - 0x7cffe2b4], cl; ret; 
0x000be74f: add al, 0; add byte ptr [ebx + 0x391c2444], cl; ror dword ptr [edi], 0x85; ret 2; 
0x000a0542: add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0013d6a9: add al, 0; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x0016b406: add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0002345d: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000575b2: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x00103fa3: add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x001147f7: add al, 0; add byte ptr [ebx - 0x47cfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00178191: add al, 0; add byte ptr [ebx - 0x4c72f714], al; out dx, eax; jne 0x178195; call dword ptr [esi + 0x57]; 
0x000c19ba: add al, 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x0011d138: add al, 0; add byte ptr [ebx - 0x7c72f714], al; jp 0x11d19d; stc; call dword ptr [eax + 0x55]; 
0x001434e4: add al, 0; add byte ptr [ecx - 0x39f3db94], cl; inc esp; and al, 0x3b; add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x00121d9f: add al, 0; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x00121d9f: add al, 0; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; ret 0xf3bd; 
0x0014f500: add al, 0; add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0014f50b: add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0013174c: add al, 0; add byte ptr [ecx], al; call eax; 
0x000a3957: add al, 0; add byte ptr [ecx], al; ret; 
0x0013d67b: add al, 0; add byte ptr [ecx], bh; ret 0x1988; 
0x0016eef4: add al, 0; add byte ptr [ecx], bh; ret 0x4e0f; 
0x001347af: add al, 0; add byte ptr [ecx], ch; ret 0xc031; 
0x000b312b: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012d6bf: add al, 0; add byte ptr [edx], al; call eax; 
0x0007d7db: add al, 0; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00103f62: add al, 0; add dh, dh; ret 0xf20; 
0x00103f6b: add al, 0; add dh, dh; ret 0xf80; 
0x00135417: add al, 0; add eax, 0xfba1b; mov eax, dword ptr [eax + 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x001867c9: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001881c3: add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188228: add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0003cf57: add al, 0; je 0x3cf70; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1d4], ecx; ret; 
0x000a59d6: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a5916: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0003c453: add al, 0; mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e78aa: add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e78aa: add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000e4d36: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0002f47f: add al, 0x10; add byte ptr [eax], al; ret; 
0x00183bb8: add al, 0x11; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0014cf46: add al, 0x11; add esp, 4; pop ebx; pop esi; ret; 
0x0005da90: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00099788: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c400: add al, 0x11; mov eax, 0xffffffff; pop ebx; ret; 
0x00024e7f: add al, 0x11; mov eax, 0xffffffff; ret; 
0x00178d21: add al, 0x11; push ss; add byte ptr [eax], al; add bl, ch; fucomi st(0); ret 0xfbad; 
0x0009a323: add al, 0x1b; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x74]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000476b4: add al, 0x1f; add byte ptr [eax], al; add cl, ch; dec edx; in eax, 0xff; call dword ptr [eax + 0x31]; 
0x000316da: add al, 0x21; fidiv dword ptr [ecx]; fld xword ptr [ecx]; ror byte ptr [ecx - 0x1c76b], 1; dec dword ptr [ecx - 0x1c37b]; call dword ptr [ebx + 0x52]; 
0x00060987: add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00060937: add al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00051e24: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x0005212a: add al, 0x24; add esp, 0xc; ret; 
0x0003ace3: add al, 0x24; add esp, 4; ret; 
0x0003aa33: add al, 0x24; add esp, 8; ret; 
0x0016d1ac: add al, 0x24; call dword ptr [edx + 0x10]; 
0x0014f56b: add al, 0x24; call eax; 
0x0009a6df: add al, 0x24; call esi; 
0x0005215d: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00033747: add al, 0x24; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x7f4]; test eax, eax; je 0x33759; call eax; 
0x0003ac4a: add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000dfe2c: add al, 0x24; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0012737b: add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001280fb: add al, 0x24; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128036: add al, 0x24; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00050611: add al, 0x24; ret; 
0x00158678: add al, 0x25; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x00074068: add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x0013f8f4: add al, 0x29; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0005a7dc: add al, 0x29; fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x00073d58: add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0017b6dd: add al, 0x29; ret 0x448b; 
0x000830d7: add al, 0x29; ret 0x5052; 
0x00169b86: add al, 0x29; ret 0xd285; 
0x0017b4c4: add al, 0x29; ret 0xea39; 
0x0007d11c: add al, 0x29; ret 0xfac1; 
0x000de431: add al, 0x29; ret; 
0x000db813: add al, 0x29; retf 0x490f; ret 0x348d; 
0x000dcc22: add al, 0x29; retf 0x490f; ret 0xc101; 
0x000ed868: add al, 0x29; ror byte ptr [ecx - 0x49b7b], 1; call dword ptr [eax + 0x6a]; 
0x0012d1b3: add al, 0x2b; inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00034da0: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017ce73: add al, 0x2b; inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x0016defe: add al, 0x30; add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00079ee9: add al, 0x31; pop esi; pop edi; pop ebp; ret; 
0x00041384: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00086ad7: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00167352: add al, 0x31; ret 0xd889; 
0x000dfaad: add al, 0x31; ret; 
0x0014bb27: add al, 0x31; rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x14bb38; ret; 
0x000a32b2: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xcf4], dl; ret; 
0x000a3282: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe14], dl; ret; 
0x00129cd7: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x129ce8; ret; 
0x000d2147: add al, 0x31; ror byte ptr [ebx + 0x75c9850a], 0x22; ret; 
0x000d6fea: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00104012: add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0002324e: add al, 0x31; sar byte ptr [ebx + 1], cl; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0013f41c: add al, 0x37; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a558e: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x000a554a: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000e500e: add al, 0x39; pop esp; xchg dword ptr [esp + esi*2], eax; jmp 0xe504f; ret 0x850f; 
0x000a4463: add al, 0x39; ret 0x1c74; 
0x001022c3: add al, 0x39; ret 0x2574; 
0x000a4854: add al, 0x39; ret 0x2f74; 
0x000d491a: add al, 0x39; ret 0x45c7; 
0x0008e76a: add al, 0x39; ret 0x6b72; 
0x000fb220: add al, 0x39; ret 0x6b75; 
0x0002be19: add al, 0x39; ret 0x840f; 
0x001a3968: add al, 0x39; ret 0x850f; 
0x001a0ea7: add al, 0x39; ret 0x8c0f; 
0x000cc319: add al, 0x39; ret 0x8f0f; 
0x0017b2bf: add al, 0x39; ret 0xc919; 
0x000c2844: add al, 0x39; ret 0xee72; 
0x0011b564: add al, 0x39; ret 0xf372; 
0x000f76e4: add al, 0x39; ret 0xf775; 
0x0002a63c: add al, 0x39; ret; 
0x00087429: add al, 0x39; retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000be52d: add al, 0x39; retf 0x474; test edx, edx; jne 0xbe528; ret; 
0x000a94ad: add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x000f3087: add al, 0x3b; push ebx; add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0002fe0a: add al, 0x3b; stc; call dword ptr [eax - 1]; 
0x000f1f2e: add al, 0x3c; aas; jne 0xf1f49; mov eax, 1; ret; 
0x000a0862: add al, 0x3c; add byte ptr [eax], al; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x00153f4c: add al, 0x3c; jg 0x153f5f; inc esp; ret 0x8489; 
0x00137582: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x001703e5: add al, 0x41; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000f5444: add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000341b4: add al, 0x50; and eax, 0x1000; ret; 
0x00034184: add al, 0x50; and eax, 0x100; ret; 
0x00034154: add al, 0x50; and eax, 0x2000; ret; 
0x00034094: add al, 0x50; and eax, 0x200; ret; 
0x000340f4: add al, 0x50; and eax, 0x4000; ret; 
0x00034004: add al, 0x50; and eax, 0x400; ret; 
0x000340c4: add al, 0x50; and eax, 0x8000; ret; 
0x00034064: add al, 0x50; and eax, 0x800; ret; 
0x00034264: add al, 0x50; and eax, 1; ret; 
0x00034034: add al, 0x50; and eax, 2; ret; 
0x00034124: add al, 0x50; and eax, 4; ret; 
0x00033fd4: add al, 0x50; and eax, 8; ret; 
0x00164195: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016433e: add al, 0x50; call dword ptr [edx + 0x10]; 
0x0016d23a: add al, 0x50; call dword ptr [edx + 0x14]; 
0x0014c0f5: add al, 0x50; call edi; 
0x001711e3: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x171050; add esp, 0x1c; ret; 
0x0007a8cd: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d6d0; add esp, 0x1c; ret; 
0x00024d41: add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x00170fb8: add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00171015: add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x0007d841: add al, 0x50; push edx; push esi; call ecx; 
0x00131cac: add al, 0x50; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x001226f9: add al, 0x51; push 3; push ebx; call edx; 
0x0017ec23: add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0016b40b: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00083a3a: add al, 0x51; push eax; push esi; call edx; 
0x0016e0a4: add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x001716fa: add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00170c6a: add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x0007e1df: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00084642: add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x001663fd: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016643c: add al, 0x52; push ebx; call dword ptr [eax]; 
0x001645d8: add al, 0x53; call dword ptr [eax + 0x10]; 
0x001647a4: add al, 0x53; call dword ptr [eax]; 
0x000764a7: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000843e1: add al, 0x53; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebp + 0x38]; 
0x00073f37: add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0007892f: add al, 0x53; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00078896: add al, 0x53; push edi; push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x001710a4: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x000415a3: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000781d6: add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00081c90: add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00079d81: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024dfa: add al, 0x56; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00081e10: add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0016a465: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00077962: add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007a0d8: add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0016e0b2: add al, 0x57; call dword ptr [eax + 0x10]; 
0x001226a1: add al, 0x57; push 0; push ebx; call esi; 
0x001226b5: add al, 0x57; push 1; push ebx; call esi; 
0x001226c8: add al, 0x57; push 2; push ebx; call esi; 
0x00076809: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00164af8: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007cf48: add al, 0x5b; pop esi; jmp eax; 
0x00140504: add al, 0x5b; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00039a8f: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00057f51: add al, 0x5b; pop esi; pop edi; ret; 
0x00025ff3: add al, 0x5b; pop esi; ret; 
0x0002507a: add al, 0x5b; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0003c3eb: add al, 0x5b; ret; 
0x001990bb: add al, 0x5d; pop ebx; ret; 
0x001990c2: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0008a91b: add al, 0x5e; pop edi; ret; 
0x0018e960: add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ca5a: add al, 0x5f; call 0x17d639; add ebx, 0x41eb7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa0a: add al, 0x5f; call 0x17d639; add ebx, 0x43c87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188a0a: add al, 0x5f; call 0x17d639; add ebx, 0x45a07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012d228: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000913b5: add al, 0x5f; pop ebp; ret; 
0x000b0fc3: add al, 0x5f; pop ebx; ret; 
0x000b3189: add al, 0x5f; pop esi; pop ebx; ret; 
0x000af29c: add al, 0x5f; ret; 
0x00117c5a: add al, 0x65; call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x00088844: add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x000d7d6b: add al, 0x66; cmp esi, 0x840f0400; add byte ptr [eax + eax], bl; add dh, dh; ret; 
0x00103917: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000af2a7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000af3e7: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b966a: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaed7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000ab007: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b3b69: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b3cc9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b2529: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b2689: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00135448: add al, 0x66; rol eax, 8; ret; 
0x000778e2: add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x00086789: add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x2c]; 
0x00139392: add al, 0x6a; add dword ptr [ebx - 0x72ebdbbc], ecx; sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x55]; 
0x0012fac2: add al, 0x6a; add eax, 0x655c978d; stc; call dword ptr [edx + 0x50]; 
0x0012ffd5: add al, 0x6a; add eax, 0x6592808d; stc; call dword ptr [eax - 0x75]; 
0x0012f68a: add al, 0x6a; add eax, 0x65b3808d; stc; call dword ptr [eax - 0x75]; 
0x00131b46: add al, 0x6a; add eax, 0x7d4c868d; stc; call dword ptr [eax - 0x75]; 
0x0013e6c8: add al, 0x6a; add eax, 0x8d8134ff; adc byte ptr [eax], 0x83; stc; call dword ptr [eax - 0x18]; 
0x00101aa0: add al, 0x6a; add eax, 0xac03848d; or bh, cl; call dword ptr [eax - 0x73]; 
0x000e7dbe: add al, 0x6a; add eax, 0xae4c838d; stc; call dword ptr [eax - 0x73]; 
0x0012f730: add al, 0x6a; add eax, 0xb720808d; stc; call dword ptr [eax - 0x75]; 
0x001303e8: add al, 0x6a; add eax, 0xb758808d; stc; call dword ptr [eax + 0x6a]; 
0x001707c7: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001707c7: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x001722ff: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x000386b1: add al, 0x6a; or ecx, dword ptr [ebx - 0x72ebdbbc]; adc byte ptr [edx], 0x3e; stc; call dword ptr [eax - 1]; 
0x000796e3: add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x0009821e: add al, 0x74; fmul dword ptr [ebp - 0x667e779]; call dword ptr [eax - 0x73]; 
0x000e5012: add al, 0x74; jmp 0xe504f; ret 0x850f; 
0x000f2ccd: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003f76b: add al, 0x74; ret 0xffb8; 
0x000f308a: add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00148bce: add al, 0x74; xchg byte ptr [ebx - 0x7e7253b3], cl; and al, al; stc; call dword ptr [eax - 0x73]; 
0x000cd08d: add al, 0x75; daa; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x0019d033: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x00131c29: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x001a2834: add al, 0x75; in eax, 0x8b; je 0x1a285e; or byte ptr [ecx + 0x244c8bcb], cl; and al, 0x83; ret; 
0x0019ae0b: add al, 0x76; ret; 
0x0010df65: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f895: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x000f9c5b: add al, 0x7c; ret 0x9066; 
0x000342e9: add al, 0x7f; setbe al; ret; 
0x00045322: add al, 0x80; cli; jo 0x452b0; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x00129cdc: add al, 0x80; cmp dword ptr [eax], eax; je 0x129ce8; ret; 
0x0008b138: add al, 0x80; int1; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0009ab32: add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x00137d07: add al, 0x80; js 0x137d0d; add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000daf1f: add al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000c11fe: add al, 0x81; ret 0; 
0x000818f7: add al, 0x83; and bh, cl; ret; 
0x00088a22: add al, 0x83; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x00096fc0: add al, 0x83; cmp dword ptr [edx], eax; je 0x96f82; pop ebx; pop esi; ret; 
0x00164ac2: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00058f26: add al, 0x83; in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00085788: add al, 0x83; in al, dx; or byte ptr [ebp + 0x56500159], cl; call dword ptr [edi + 0xc]; 
0x001623a6: add al, 0x83; in al, dx; or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x57]; 
0x0016d508: add al, 0x83; in al, dx; or byte ptr [ecx - 0x72540c29], cl; sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x001658d2: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00171cd7: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x0008f933: add al, 0x83; inc edx; add al, 1; add esp, 0xc; ret; 
0x000a0240: add al, 0x83; jmp 0x1ea854b; cmovne eax, ecx; pop ebx; ret; 
0x00034da3: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00170932: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0002522b: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00140f8a: add al, 0x83; les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0002fcfd: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000a13bf: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0005a957: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000861bc: add al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00074639: add al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0003e7db: add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000744d9: add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x001646ff: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0019144d: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0018e34d: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x000c0d06: add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x000bc1ac: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000bc1af: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0008a8a3: add al, 0x83; pushal; or bl, bh; xor eax, eax; ret; 
0x0016a9c4: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00041054: add al, 0x83; ret 0x3904; 
0x00052a3d: add al, 0x83; ret 0x3908; 
0x00137ae4: add al, 0x83; ret 0x8108; 
0x0002f05e: add al, 0x83; ret 0x8301; 
0x00059002: add al, 0x83; ret 0x8304; 
0x000d21da: add al, 0x83; ret 0x8310; 
0x000bbe83: add al, 0x83; ret 0x8404; 
0x00051672: add al, 0x83; ret 0x8501; 
0x000c04b2: add al, 0x83; ret 0x8504; 
0x00130655: add al, 0x83; ret 0x8518; 
0x00137758: add al, 0x83; ret 0x8802; 
0x00044fc3: add al, 0x83; ret 0x8901; 
0x0002c92f: add al, 0x83; ret 0x8904; 
0x0008bb43: add al, 0x83; ret 0x8b04; 
0x000511ad: add al, 0x83; ret 0x8d04; 
0x001a5e3c: add al, 0x83; ret 0xc104; 
0x001a382c: add al, 0x83; ret 0xd104; 
0x001a352d: add al, 0x83; ret 0xd304; 
0x000f7c02: add al, 0x83; ret 0xe804; 
0x0006f329: add al, 0x83; ret 0xeb04; 
0x001668e8: add al, 0x83; ret 0xf04; 
0x00030d53: add al, 0x83; ret; 
0x000be52a: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xbe536; test edx, edx; jne 0xbe528; ret; 
0x00029194: add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a8f67: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000f6eff: add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0014705c: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x00163a88: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x163aa3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000d2175: add al, 0x85; leave; jne 0xd2158; add eax, 1; ret; 
0x00026ce2: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x000e613d: add al, 0x85; ror byte ptr [edi], 0x84; ret 3; 
0x0009d660: add al, 0x85; ror byte ptr [edi], cl; test byte ptr [edi - 0x72fffffd], cl; pop edx; or dh, dh; ret; 
0x0009207b: add al, 0x85; sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0012319f: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x001231c3: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x001481e2: add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00141b84: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000d2269: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000be531: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x00042087: add al, 0x85; sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x0011e553: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0013b377: add al, 0x85; sal byte ptr [esp + ecx - 0x17], 0x2f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00093f22: add al, 0x85; sar byte ptr [eax + 9], 0x89; adc ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x000df8c7: add al, 0x85; sar byte ptr [ecx + 0x74], cl; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000f3b91: add al, 0x85; test byte ptr [edi], -0x7c; mov edx, 0x89000000; ret; 
0x0014bb2c: add al, 0x87; adc byte ptr [ebx + 0x47f01fa], al; ret; 
0x0004706c: add al, 0x87; stc; call dword ptr [eax - 0x73]; 
0x000bbf6f: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000aaec6: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000af296: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0002aebf: add al, 0x88; inc esp; sbb eax, 0x83028b00; ret; 
0x00058480: add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005219b: add al, 0x89; adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000bcb9c: add al, 0x89; adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0006d7c7: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0016d1aa: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x00089492: add al, 0x89; add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000a59e7: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000c6510: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000997e1: add al, 0x89; call 0x89f1c981; ret; 
0x000b964c: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000aaec9: add al, 0x89; clc; pop edi; ret; 
0x0003d0fd: add al, 0x89; cli; mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0ad: add al, 0x89; cli; mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00112275: add al, 0x89; dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x11faf36d], cl; call dword ptr [edx - 0x73]; 
0x00171642: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017161e: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016638e: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001663b2: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00165d99: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013769e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008871c: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00091dd2: add al, 0x89; fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x00166568: add al, 0x89; inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00103306: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0007d01b: add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x000b2427: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b2666: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b26c6: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b3c96: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x00056a48: add al, 0x89; inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00073b65: add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00082eae: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00045a79: add al, 0x89; jl 0x45aa1; sub byte ptr [ecx], bh; ret 0x840f; 
0x000b3184: add al, 0x89; js 0x5e6a35e3; pop ebx; ret; 
0x0012802c: add al, 0x89; loope 0x127fb9; ret 0x448b; 
0x00103975: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010394d: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000ba28a: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6e44: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0007b5b2: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000b3195: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0007a3ee: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00112278: add al, 0x89; push eax; or byte ptr [ebp - 0x11faf36d], cl; call dword ptr [edx - 0x73]; 
0x001665e4: add al, 0x89; push ebx; adc bl, ch; ret; 
0x0012cefd: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0016a3e0: add al, 0x89; push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0008887c: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0008887c: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; lea esi, cs:[esi]; ret; 
0x000a58dc: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0014aede: add al, 0x89; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00170e02: add al, 0x89; ret 0x18b; 
0x00030566: add al, 0x89; ret 0x2deb; 
0x000dd851: add al, 0x89; ret 0x448b; 
0x0003f565: add al, 0x89; ret 0x8d8d; 
0x0005d69c: add al, 0x89; ret 0xda29; 
0x0012294c: add al, 0x89; ret 0xe083; 
0x00098273: add al, 0x89; ret 0xe281; 
0x0009711a: add al, 0x89; ret 0xe283; 
0x0011d4d5: add al, 0x89; ret 0xeac1; 
0x001a0307: add al, 0x89; ret 0xead1; 
0x0009d19c: add al, 0x89; ret 0xf089; 
0x000deca8: add al, 0x89; ret 0xfa29; 
0x0003ad2f: add al, 0x89; ret 0xff25; 
0x0003f582: add al, 0x89; ret; 
0x000ad11b: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xacfe1; pop ebx; ret; 
0x0003d687: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x00058546: add al, 0x89; stc; call dword ptr [eax - 0x73]; 
0x000b2669: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b2509: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0003cc7d: add al, 0x8a; setne al; movzx eax, al; ret; 
0x0008cb0c: add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0009aa41: add al, 0x8b; adc dl, byte ptr [eax + 0x32c9089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa71: add al, 0x8b; adc dl, byte ptr [eax + 0x3309089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aaa1: add al, 0x8b; adc dl, byte ptr [eax + 0x3349089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a811: add al, 0x8b; adc dl, byte ptr [eax + 0x3389089]; add byte ptr [eax], al; ret; 
0x0009a7f1: add al, 0x8b; adc dl, byte ptr [eax + 0x33c9089]; add byte ptr [eax], al; ret; 
0x0009aad1: add al, 0x8b; adc dl, byte ptr [eax + 0x3509089]; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a8a1: add al, 0x8b; adc dl, byte ptr [eax + 0x3749089]; add byte ptr [eax], al; ret; 
0x0009ab01: add al, 0x8b; adc dl, byte ptr [eax + 0x3c149089]; add byte ptr [eax], al; ret; 
0x00088646: add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x0017d1db: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00080bc7: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x0009a832: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x9a840; ret; 
0x00080b77: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x0009a872: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0x9a880; ret; 
0x0009aa02: add al, 0x8b; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00094977: add al, 0x8b; add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03a4c0d; ret; 
0x00034291: add al, 0x8b; add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000342c1: add al, 0x8b; add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0007b139: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00081907: add al, 0x8b; add cl, al; call 0x1e89c14; ret; 
0x00081927: add al, 0x8b; add cl, al; call 0x1e89c35; ret; 
0x000b9632: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000b6782: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x00127ca0: add al, 0x8b; dec esp; and al, 8; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000311a9: add al, 0x8b; dec esp; ret; 
0x0003449b: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0017d1f7: add al, 0x8b; inc eax; dec esp; ret; 
0x00118a87: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x00131e32: add al, 0x8b; inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0017d297: add al, 0x8b; inc eax; pop eax; ret; 
0x0017d227: add al, 0x8b; inc eax; pop esp; ret; 
0x0017d217: add al, 0x8b; inc eax; push eax; ret; 
0x0017d2a7: add al, 0x8b; inc eax; push esp; ret; 
0x0016f8d3: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x00058538: add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x00088329: add al, 0x8b; inc ebx; or bh, bh; je 0x88354; xor byte ptr [edx + 0x51], dl; call eax; 
0x001041c2: add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0011b7a1: add al, 0x8b; inc ecx; or al, 0x39; fmul dword ptr [edi]; dec edi; ret; 
0x000b26c9: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b2569: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000b3ce9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b26a9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0016e0a1: add al, 0x8b; inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0016605a: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16606e; push edi; call dword ptr [eax + 0x10]; 
0x00087467: add al, 0x8b; inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0012e8d4: add al, 0x8b; inc esi; adc al, 0x83; ret; 
0x0006aca2: add al, 0x8b; inc esi; or byte ptr [ecx], bh; ret 0x840f; 
0x0012797d: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012756c: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ba2ae: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0003ad4e: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008a4ba: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000b6e5b: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00033cf1: add al, 0x8b; inc esp; nop; inc eax; ret; 
0x00139a26: add al, 0x8b; je 0x139a4e; adc byte ptr [ebp - 0x6c04d6a], cl; call dword ptr [edx - 0x46]; 
0x0004538c: add al, 0x8b; je 0x453b4; cmp byte ptr [ecx], al; ret 0xf229; 
0x0005865b: add al, 0x8b; je 0x58683; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x00039df6: add al, 0x8b; jl 0x39e1e; adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x000750f0: add al, 0x8b; jl 0x75118; xor cl, ch; ret 0xfffe; 
0x00131d8f: add al, 0x8b; jns 0x131d9b; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x000fdd5c: add al, 0x8b; mov ah, 0x97; or al, 9; stc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0004682a: add al, 0x8b; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x0015327d: add al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00031281: add al, 0x8b; push edi; or byte ptr [ecx], al; ret 0xd139; 
0x0009a972: add al, 0x8b; push edx; or al, 0x83; ret; 
0x0009aff2: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00170fb5: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00171012: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x00183b6d: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00164b18: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00101f7a: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00171cf7: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0010abb7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d207: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001721df: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008a797: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103927: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0011b3f0: add al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00086a47: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b7: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f67: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001481d1: add al, 0x8b; sub byte ptr [eax], 0x4e; add byte ptr [eax], al; test eax, eax; jne 0x1481e7; ret; 
0x00168b7f: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000e4b84: add al, 0x8b; xor byte ptr [ecx], bh; ret 0x840f; 
0x00148658: add al, 0x8b; xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0016dc9e: add al, 0x8d; cmp dword ptr [eax], -0x39; stc; call dword ptr [ebp + 0x57]; 
0x0016db72: add al, 0x8d; cmp dword ptr [eax], -0x39; stc; call dword ptr [esi - 1]; 
0x0005166b: add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0017171d: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001708f5: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00051186: add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x000af299: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000a598c: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000b3a4a: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000b3c99: add al, 0x8d; inc edx; pop es; ret; 
0x000423b8: add al, 0x8d; inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x00137d43: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x00166399: add al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0010a6d8: add al, 0x8d; or byte ptr [edx + 0x59], 0xf9; call dword ptr [eax + 0x53]; 
0x0017ce76: add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x000423d7: add al, 0x8d; push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x001714b3: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016a477: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170af5: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a9a: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00170d95: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00170dcd: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x001710e9: add al, 0x8d; push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x0017149d: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00170a85: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00170e1a: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x000d3cda: add al, 0x8d; sbb dword ptr [eax + 0x5000003d], -0x73; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x00103bf6: add al, 0x8d; test al, 0xc; xor ch, ch; call dword ptr [ebp + 0x6a]; 
0x00025742: add al, 0x8d; xchg byte ptr [esi + edi*2 - 7], bh; call dword ptr [eax - 0x73]; 
0x00082d56: add al, 0x8d; xchg dword ptr [edx + edx*4 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0007bd44: add al, 0x8d; xchg eax, ebp; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x000a5d6d: add al, 0x8d; xchg edx, eax; dec esp; mov edi, 0x450ffff6; ret 0x66c3; 
0x000a3e0d: add al, 0x8d; xchg edx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x000a294d: add al, 0x8d; xchg edx, eax; jl 0xa291e; idiv bh; cmovne eax, edx; ret; 
0x000a325d: add al, 0x8d; xchg edx, eax; mov ecx, ds; idiv bh; cmovne eax, edx; ret; 
0x000574f2: add al, 0x8d; xchg edx, eax; ret; 
0x00148725: add al, 0x8d; xchg esp, ebx; ja 0x14871c; call dword ptr [ebx + 0x50]; 
0x0017d1bd: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x0017d1dd: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000341f7: add al, 0x90; ret; 
0x0005885d: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000960e5: add al, 0x97; stc; call dword ptr [eax - 0x18]; 
0x000be125: add al, 0x98; pop ebx; pop esi; ret; 
0x0003e70b: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0003cbc9: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x0009e983: add al, 0xa4; stc; call dword ptr [eax - 0x18]; 
0x000934d3: add al, 0xa8; add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x0008eddf: add al, 0xa8; add dword ptr [esp + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00126fee: add al, 0xb5; stc; call dword ptr [eax + 0x55]; 
0x0012b1e6: add al, 0xb5; stc; call dword ptr [eax - 0x18]; 
0x00163d32: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0017ac4f: add al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x00073c9a: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00171cdb: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000f2be2: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xf2bf0; ret; 
0x00117725: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117725: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00102e29: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125b75: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125b75: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00126b99: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117f77: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000e78e9: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001219b5: add al, 0xb8; jae 0x1219b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126cd5: add al, 0xb8; je 0x126cd9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126e39: add al, 0xb8; jge 0x126e3e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126e65: add al, 0xb8; jle 0x126e6a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120f09: add al, 0xb8; jmp 0x120f0d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001266d5: add al, 0xb8; jno 0x1266d9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121509: add al, 0xb8; jns 0x12150d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00104e25: add al, 0xb8; jp 0x104e29; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008ab77: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00125515: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125515: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0003d05c: add al, 0xb8; mov cl, 0; add byte ptr [eax], al; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00126b39: add al, 0xb8; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003cfe2: add al, 0xb8; movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010ac25: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df8e6: add al, 0xb8; or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010be19: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008a85b: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x000998e2: add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e2475: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b025: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8835: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b475: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001266f9: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00119a35: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012965b: add al, 0xb; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x0008be8b: add al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001488a9: add al, 0xbd; sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x00051e21: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x0007ba72: add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0003f013: add al, 0xc1; jmp 0xfd6751d; xchg ebp, eax; ret 0xd121; 
0x00061105: add al, 0xc6; add byte ptr [0xfff792e9], ah; jmp dword ptr [esi - 0x70]; 
0x000a5937: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0003a591: add al, 0xd9; loope 0x3a58b; les eax, ptr [edx]; je 0x3a59b; fchs; ret; 
0x0003a8f1: add al, 0xd9; loope 0x3a8eb; les eax, ptr [edx]; je 0x3a8fb; fchs; ret; 
0x0003acde: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003a717: add al, 0xd9; std; fstp st(1); ret; 
0x000521a2: add al, 0xdb; sub al, 0x24; add esp, 0x1c; ret; 
0x00052128: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00041ef8: add al, 0xe4; adc eax, 0x18c48300; pop ebx; ret; 
0x000304a2: add al, 0xe8; call 0x840303d5; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016a0cf: add al, 0xe9; dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000e1c4d: add al, 0xe9; insd dword ptr es:[edi], dx; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x000e1c7d: add al, 0xe9; pop ebp; dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000e123d: add al, 0xe9; popfd; push edi; cld; jmp dword ptr [esi - 0x70]; 
0x000e4bc0: add al, 0xe9; ret 0xfffe; 
0x001a2a08: add al, 0xe9; ret; 
0x001511e4: add al, 0xe9; retf 0xfffe; dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x0007c39d: add al, 0xe9; sub eax, 0x2effffeb; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x00041501: add al, 0xe9; test eax, 0x2effffe2; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a2648: add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0006ceff: add al, 0xe; mov dword ptr [esp + 0x14], ebp; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0007bd3e: add al, 0xeb; mov dword ptr [ebx - 0x72fbdb84], ecx; xchg eax, ebp; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x00023efd: add al, 0xeb; ret 0xebe8; 
0x0002400d: add al, 0xeb; ret; 
0x000944f3: add al, 0xf0; dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x00152860: add al, 0xf2; call dword ptr [eax + 0x6a]; 
0x00080ba7: add al, 0xf6; add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x00122e82: add al, 0xf6; ret 0x7401; 
0x0009df64: add al, 0xf6; ret; 
0x0008e2d9: add al, 0xf7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000bc1b2: add al, 0xf7; ret 0; 
0x00153280: add al, 0xf7; ret 0xfffd; 
0x000fa8b7: add al, 0xf7; ret; 
0x0002956f: add al, 0xf; inc ebp; ret 0x4489; 
0x000a5f33: add al, 0xf; inc esp; ret 0x66c3; 
0x000a284d: add al, 0xf; inc esp; ret 0xc083; 
0x001037d7: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000341b1: add al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034181: add al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034151: add al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034091: add al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000340f1: add al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034001: add al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000340c1: add al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034061: add al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034261: add al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x00034031: add al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x00034121: add al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x00033fd1: add al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x000856ea: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x00085525: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00085ef5: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0012ce80: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x00167003: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00081995: add al, 0xf; mov dh, 2; ret; 
0x000d3588: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00199547: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00039e00: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x00040bff: add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x000d7d70: add al, 0xf; test byte ptr [eax], al; sbb al, 0; add dh, dh; ret; 
0x00153334: add al, 0xf; test byte ptr [ebp - 0x7d000000], bl; ret 0x8014; 
0x0019e564: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0019ee0b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000d1d65: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0017d31d: add al, 0xf; test dword ptr [edi + 0x77], edi; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x000ac97b: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b42fc: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005105b: add al, 0xf; xchg edx, eax; ret 0x789; 
0x00051189: add al, 0xf; xchg edx, eax; ret; 
0x0014d81e: add al, 0xf; xchg esp, eax; ret 0x448b; 
0x0005786e: add al, 0xf; xchg esp, eax; ret 0x48b; 
0x00130be2: add al, 0xf; xchg esp, eax; ret; 
0x000961b1: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00082cea: add al, 0xfa; jmp dword ptr [ebp - 0x75]; 
0x001663ba: add al, 0xff; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x00088880: add al, 0xff; and byte ptr [esi], ch; lea esi, [esi]; ret; 
0x0018d205: add al, 0xff; inc dword ptr [ecx + 0x41710c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d13e: add al, 0xff; inc dword ptr [ecx + 0x417d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016640f: add al, 0xff; je 0x166437; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016645d: add al, 0xff; je 0x166485; sbb al, 0x53; call dword ptr [eax]; 
0x00076501: add al, 0xff; je 0x76529; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00081eb9: add al, 0xff; je 0x81ee1; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00159e61: add al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00078b15: add al, 0xff; jne 0x78b2d; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00079c7a: add al, 0xff; jne 0x79c62; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0017be01: add al, 0xff; push dword ptr ss:[ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017adcb: add al, 0xff; push dword ptr ss:[ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017164a: add al, 0xff; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000d2f20: add al, 0xff; xor al, ch; js 0xd2f4b; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0015a88e: add al, 0xff; xor byte ptr [ebp - 0x68f627a], cl; call dword ptr [eax + 0x6a]; 
0x0011a990: add al, 0xff; xor byte ptr [ebp - 0x691457d], cl; call dword ptr [eax + 0x6a]; 
0x0011a7f8: add al, 0xff; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax + 0x6a]; 
0x0017ea95: add al, 0xff; xor byte ptr [esi - 0x18], dl; jb 0x17ea37; out dx, eax; jmp dword ptr [ecx]; 
0x000e0d86: add al, 1; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0009a407: add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00140ca6: add al, 1; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x0009a475: add al, 1; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000d1d98: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000bc7b9: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x0008f936: add al, 1; add esp, 0xc; ret; 
0x00057642: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001220c5: add al, 1; fcom dword ptr [eax - 0x73]; xchg byte ptr [ebx + 0x63], cl; stc; call dword ptr [eax + 0x57]; 
0x0009a127: add al, 1; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a19c: add al, 1; fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003422f: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000341ef: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0012ba9a: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0012b95a: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0012b6da: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0012b81a: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0012b45a: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0012b77a: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0012b4fa: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0012b59a: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0012b8ba: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0012b3ba: add al, 1; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00119bae: add al, 1; or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0002587e: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0007ea96: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0010df86: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003cb25: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x001666a0: add al, 1; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000cbcba: add al, 1; ret 0x5689; 
0x000f8fc3: add al, 1; ret 0x5c8b; 
0x000f907b: add al, 1; ret 0x7c80; 
0x001666e7: add al, 1; ret 0xc129; 
0x000c0d0c: add al, 1; ret; 
0x001a032a: add al, 1; shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000e0d2e: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011b486: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0003cccc: add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003a841: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003adff: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000328dc: add al, 2; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033cec: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342bc: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003428c: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000341ac: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003417c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003414c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003408c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340ec: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033ffc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340bc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003405c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003425c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003402c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003411c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fcc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0009593e: add al, 2; or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x000e348e: add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0003cbde: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c11e: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011ce96: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007669d: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009fa4e: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00140cac: add al, 2; ret; 
0x0018e71c: add al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006c07d: add al, 6; mov ecx, dword ptr [edi + eax*4 - 0x72754]; add ecx, ebx; jmp ecx; 
0x00081d87: add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x00080b7b: add al, 8; add byte ptr [eax], al; ret; 
0x0003faff: add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x0018d997: add al, 8; pop edi; call 0x17d639; add ebx, 0x40f79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b897: add al, 8; pop edi; call 0x17d639; add ebx, 0x42df9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189897: add al, 8; pop edi; call 0x17d639; add ebx, 0x44b79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137e3c: add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013813b: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00089494: add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000f4d0a: add al, bh; jmp dword ptr [esi + 0xb]; 
0x000e38a1: add al, byte ptr [0x244c8b00]; or byte ptr [ebp - 0x651db7f], cl; call dword ptr [eax - 0x73]; 
0x000b30fa: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x000e895c: add al, byte ptr [eax + eax*8 - 0x2dce1e8b]; pop ebx; mov eax, edx; ret; 
0x0013d6a8: add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x0013d67a: add al, byte ptr [eax + eax]; add byte ptr [ecx], bh; ret 0x1988; 
0x000e36be: add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x00165f8f: add al, byte ptr [eax]; add al, ch; mov byte ptr [0x81000176], al; ret; 
0x000bb98f: add al, byte ptr [eax]; add al, ch; mov byte ptr [0x81000c1c], al; ret; 
0x001476bb: add al, byte ptr [eax]; add bl, ch; fisttp dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax], 0xbf; stc; call dword ptr [eax - 0x73]; 
0x0019d22f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0019d21e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0008da61: add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x0008cb5c: add al, byte ptr [eax]; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0019d1c7: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000b1138: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0019d1d8: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019d1e9: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000cb89b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x54], -7; call dword ptr [eax - 0x18]; 
0x0014b873: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; 
0x0002872b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000d6bb9: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x54; stc; call dword ptr [eax - 0x18]; 
0x00090e73: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; test ecx, esi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0005a85e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, al; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0009c6a8: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, al; popfd; stc; call dword ptr [eax - 0x18]; 
0x0005a77f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, ch; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x000c33e3: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg bh, bh; push esp; stc; call dword ptr [eax - 0x18]; 
0x0009c6ee: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x63], al; stc; call dword ptr [eax - 0x18]; 
0x0005a839: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; mov bh, cl; call dword ptr [eax - 0x18]; 
0x0009c6cb: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; sahf; stc; call dword ptr [eax - 0x18]; 
0x0009c711: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x00111e4b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x59], ah; stc; call dword ptr [eax - 0x18]; 
0x00028edb: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00028d4c: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00028de3: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x3a], ah; stc; call dword ptr [eax - 0x18]; 
0x00111e7b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x59], bh; stc; call dword ptr [eax - 0x18]; 
0x0009adf8: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], cl; push ecx; stc; call dword ptr [eax - 0x18]; 
0x0008f618: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg cl, dh; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0008dfe2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edx*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x00029387: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x0002943d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x000293b9: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x3a], esp; stc; call dword ptr [eax - 0x18]; 
0x00047827: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, ebx; stc; call dword ptr [eax - 0x18]; 
0x000c9b56: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edi, edi; push esp; stc; call dword ptr [eax - 0x18]; 
0x001476d3: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x0009039e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ecx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x00089934: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0007e760: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016c216: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016b846: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00168ba9: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00169796: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017d341: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00041c16: add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x0009224f: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073fae: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x000415ab: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012a0d2: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001290fb: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0008d933: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008cda3: add al, byte ptr [eax]; add byte ptr [eax], al; mov esi, 8; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00041be6: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cc7: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00165b67: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000d20e1: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x0011c0f7: add al, byte ptr [eax]; add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000e0d30: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011b488: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x00103c73: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eef7: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00104077: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00089314: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089383: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008cb56: add al, byte ptr [eax]; add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001042a3: add al, byte ptr [eax]; add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x001304ab: add al, byte ptr [eax]; add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x00096113: add al, byte ptr [eax]; add byte ptr [ebp - 0x19ad637d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009611f: add al, byte ptr [eax]; add byte ptr [ebp - 0x19af037d], cl; call dword ptr [ecx + 0x50]; 
0x00147698: add al, byte ptr [eax]; add byte ptr [ebp - 0x6941d7e], cl; call dword ptr [eax - 0x73]; 
0x00097574: add al, byte ptr [eax]; add byte ptr [ebp - 0x6af977f], cl; call dword ptr [eax - 0x73]; 
0x0002ea4b: add al, byte ptr [eax]; add byte ptr [ebp - 0x72ffe2bc], cl; dec esp; adc eax, 0x73d33900; sbb dword ptr [ebx - 0x7cf3dbac], ecx; ret 0x8301; 
0x00051b7d: add al, byte ptr [eax]; add byte ptr [ebx + 0x29282454], cl; ret 0x5489; 
0x00144f6b: add al, byte ptr [eax]; add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00081ff3: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000cb74a: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db455], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0005add8: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003d610: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00086784: add al, byte ptr [eax]; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x00075805: add al, byte ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0010484d: add al, byte ptr [eax]; add byte ptr [ebx + 0xc509384], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00119f81: add al, byte ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x00095e83: add al, byte ptr [eax]; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0002d5a7: add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002a744: add al, byte ptr [eax]; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2a749; call dword ptr [eax - 0x73]; 
0x000f9436: add al, byte ptr [eax]; add byte ptr [ebx - 0x74f3dbbc], cl; je 0xf9464; add al, 0x83; ret; 
0x00138ea3: add al, byte ptr [eax]; add byte ptr [ebx - 0x7bf0fe19], al; mov eax, dword ptr [0x83000002]; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x000d57b0: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; out 0x38, eax; stc; call dword ptr [eax + 0x57]; 
0x001233e6: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop esi; arpl cx, di; call dword ptr [eax + 0x56]; 
0x00152074: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cd7db84], cl; ret 0x8301; 
0x0007cadf: add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x00145737: add al, byte ptr [eax]; add byte ptr [ecx + 0x24748beb], cl; adc al, 0x29; ret; 
0x00087e7c: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000345a2: add al, byte ptr [eax]; add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00089acd: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000898ce: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0013197d: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x000bab23: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0004dfe4: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00160e58: add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0x489; 
0x000acce7: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0009210a: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x00145676: add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0017bc4b: add al, byte ptr [eax]; add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0005b6bb: add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x0017f87c: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x0005afbd: add al, byte ptr [eax]; add dh, dh; ret 0xf50; 
0x0009f506: add al, byte ptr [eax]; add dh, dh; ret; 
0x0009ab3c: add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0005d941: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0014f565: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0014f6e2: add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x000574d9: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0005db90: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x00137d0a: add al, byte ptr [eax]; jne 0x137d18; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00158513: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x00157bde: add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000a58c1: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0010b46d: add al, byte ptr [eax]; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00137b53: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a58f7: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0007fda6: add al, byte ptr [eax]; pop ebx; ret; 
0x0016996f: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00079eb1: add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0008a4e1: add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0013743e: add al, byte ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x00087eb3: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0012ab76: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00079e8a: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0008b9bc: add al, byte ptr [ebx + 0xe7403f8]; pop ebx; pop esi; pop edi; ret; 
0x000a023f: add al, byte ptr [ebx + eax*4]; jmp 0x1ea854b; cmovne eax, ecx; pop ebx; ret; 
0x0008a5a3: add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0017a383: add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x000d6fd5: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000384f9: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000c1b3f: add al, byte ptr [ecx]; ret 0x448b; 
0x0002f7fb: add al, byte ptr [ecx]; ret 0x9539; 
0x000dbdda: add al, byte ptr [ecx]; ret 0xc889; 
0x00045e37: add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x0004ca07: add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29742454], 1; ret; 
0x00059ad2: add al, byte ptr [ecx]; ror byte ptr [ecx - 0xab4b], 1; dec dword ptr [ebx - 0x974b]; dec dword ptr [edi]; xchg edx, eax; ret 0xf883; 
0x00073cc8: add al, byte ptr [edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000d2074: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xd20a0; ret; 
0x0019d22e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0009c6a7: add al, byte ptr ds:[eax]; add byte ptr [eax - 0x73], dl; xchg al, al; popfd; stc; call dword ptr [eax - 0x18]; 
0x00145736: add al, byte ptr ds:[eax]; add byte ptr [ecx + 0x24748beb], cl; adc al, 0x29; ret; 
0x00158512: add al, byte ptr es:[eax]; mov dword ptr [esp], ebp; call edi; 
0x00129819: add al, ch; add eax, 0x15c58100; jbe 0x129834; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00155f4f: add al, ch; cmp edx, edx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0002ed0d: add al, ch; fisttp qword ptr [ebp + 0x10]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0016d84f: add al, ch; imul esp, dword ptr [eax - 0x137c0009], 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0013405f: add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00134487: add al, ch; inc ebx; loope 0x13448b; jmp dword ptr [esi - 0x70]; 
0x0013b41f: add al, ch; jae 0x13b4a0; out dx, al; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0005d107: add al, ch; jecxz 0x5d108; std; jmp ptr [ecx]; ret; 
0x00155d0f: add al, ch; jnp 0x155ce7; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0016b7f0: add al, ch; lcall 0x18c4, 0x83ffeb79; pop ebx; ret; 
0x000df5c0: add al, ch; ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x00138cd0: add al, ch; mov bh, bl; cli; jmp dword ptr [esi - 0x3f]; 
0x00138cd0: add al, ch; mov bh, bl; cli; jmp dword ptr [esi - 0x3f]; ret; 
0x00165f91: add al, ch; mov byte ptr [0x81000176], al; ret; 
0x000bb991: add al, ch; mov byte ptr [0x81000c1c], al; ret; 
0x001222ce: add al, ch; mov word ptr [ebp - 4], fs; call dword ptr [eax - 0x73]; 
0x0002755a: add al, ch; nop; lds edx, ptr [eax]; add byte ptr [ebp - 0x6813779], cl; call dword ptr [eax - 0x73]; 
0x0016b7b8: add al, ch; or byte ptr [ebp - 0x3b7c0010], 0x18; pop ebx; ret; 
0x0016d75f: add al, ch; pop ebx; mov eax, dword ptr [0xec83fff7]; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x000f47ef: add al, ch; pop esp; mov cs, word ptr [eax]; add byte ptr [ecx + 0x13c63fc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x001771cb: add al, ch; push 0x81000064; ret; 
0x0014817a: add al, ch; pushal; pushal; hlt; dec dword ptr [ebp - 0x640077b]; call dword ptr [eax - 0x73]; 
0x0011cbc8: add al, ch; ret 0xf065; 
0x00139378: add al, ch; ret 0xf3b1; 
0x001518a8: add al, ch; ret 0xf537; 
0x000a15c8: add al, ch; ret 0xf96b; 
0x001224f8: add al, ch; ret 0xfe87; 
0x000972c8: add al, ch; ret 0xff42; 
0x000a16c7: add al, ch; ret; 
0x0008e219: add al, ch; sar dword ptr [esi], 1; add byte ptr [ebx - 0x7c72f314], al; aam 0x93; stc; call dword ptr [eax - 0x18]; 
0x0011aadf: add al, ch; sti; fcomi st(6); dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x000f9eef: add al, ch; sti; test al, 0xff; dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x000f2295: add al, ch; stosb byte ptr es:[edi], al; mov bl, 8; add byte ptr [ecx + 0x13eb99c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000b2b1f: add al, ch; sub al, 0xab; or al, 0; add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008ef2f: add al, ch; sub ebx, dword ptr [ecx + 0x4d8b0005]; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000a15c3: add al, ch; xchg dword ptr [eax + 3], eax; add al, ch; ret 0xf96b; 
0x0006d1e5: add al, ch; xchg ebp, eax; ret; 
0x0018a1cf: add al, ch; xor al, 0xff; inc dword ptr [ecx + 0x44683c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00079eae: add al, cl; stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x00088d46: add al, dh; cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009f5ad: add al, dh; dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009fbf4: add al, dh; dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b225: add al, dh; dec dword ptr [edi]; inc esp; ret 0xff31; 
0x0009f242: add al, dh; dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000a59b5: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00086e9d: add bh, al; adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00060985: add bh, al; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00060935: add bh, al; add al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0007ea94: add bh, al; add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0010df84: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003cb23: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003ccca: add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x000e348c: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0003c11c: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011ce94: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007e75e: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001656e7: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0009eb1f: add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000744aa: add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000522cc: add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00178de1: add bh, al; add ebp, dword ptr [edi]; jbe 0x178d6c; in al, dx; add al, 0x83; ret; 
0x000779cd: add bh, al; and byte ptr [eax], 0x1a; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0009a6fd: add bh, al; cmp byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x001a0f50: add bh, al; inc ebx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1473; 
0x00124919: add bh, al; inc ebx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe73; 
0x001a1274: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1073; 
0x001a6ae7: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1673; 
0x001a6e2c: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1873; 
0x0011f6b0: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x00052a2b: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe73; 
0x0009afc5: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0010bc9d: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001513bf: add bh, al; inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00160fd2: add bh, al; inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00086b7e: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00085118: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0006bcd2: add bh, al; inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006ce07: add bh, al; inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00061b2f: add bh, al; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006077a: add bh, al; inc esp; and al, 0x28; add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x00060ab3: add bh, al; inc esp; and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00061a9f: add bh, al; inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006bfe9: add bh, al; inc esp; and al, 0x34; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006ce27: add bh, al; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00061acf: add bh, al; inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006ce17: add bh, al; inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00099524: add bh, al; inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00061479: add bh, al; inc esp; and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00086f21: add bh, al; sbb byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0014cae1: add bh, al; sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0014c9d1: add bh, al; sbb dword ptr [eax], 0x7f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0014ca59: add bh, al; sbb eax, 0x6e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x000ed007: add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0006f4f7: add bh, al; test dword ptr [ebx + edi*8 - 1], ecx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; 
0x0008689a: add bh, al; xchg byte ptr [edx + ebx], dl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x000993fd: add bh, al; xor byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; ret; 
0x000bb952: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000bb7ae: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x00143a62: add bh, bh; dec dword ptr [ebx - 0x72dfdba4]; and esp, 0xffffffbd; stc; call dword ptr [eax - 0x73]; 
0x0018d625: add bh, bh; inc dword ptr [ecx + 0x412f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d55e: add bh, bh; inc dword ptr [ecx + 0x413b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d3fe: add bh, bh; inc dword ptr [ecx + 0x41517c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d365: add bh, bh; inc dword ptr [ecx + 0x415b0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003e6c5: add bh, bh; jae 0x3e6cd; call eax; 
0x00104e68: add bh, bh; je 0x104e90; sbb byte ptr [edx - 1], ch; call 0x105380; add esp, 0x1c; ret; 
0x00111dfe: add bh, bh; je 0x111e26; xor bh, bh; jbe 0x111e12; call dword ptr [esi + 0x24]; 
0x00112f1e: add bh, bh; je 0x112f46; xor bh, bh; jbe 0x112f32; call dword ptr [esi + 0x24]; 
0x0011404e: add bh, bh; je 0x114076; xor bh, bh; jbe 0x114062; call dword ptr [esi + 0x24]; 
0x00139ece: add bh, bh; je 0x139ef6; sub al, 0xe8; clc; or al, 0xf1; jmp dword ptr [esi - 0x77]; 
0x0014a5a4: add bh, bh; je 0x14a5cc; adc al, 0x55; call edi; 
0x001549f0: add bh, bh; je 0x154a18; push eax; push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0016eda0: add bh, bh; je 0x16edc8; sbb al, 0x53; call eax; 
0x0017be06: add bh, bh; je 0x17be2e; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00034b20: add bh, bh; je 0x34b48; sub al, 0xff; je 0x34b4c; sub al, 0xe8; ret 0xc; 
0x000d386c: add bh, bh; je 0xd3894; lea eax, fs:[esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3a99: add bh, bh; je 0xd3ac1; push dword ptr fs:[esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3c57: add bh, bh; je 0xd3c7f; lea eax, fs:[esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0003af20: add bh, bh; jg 0x3aea5; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x00159bef: add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0007e31c: add bh, bh; jne 0x7e2f4; push edx; push ebx; push esi; call eax; 
0x000a0fdb: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x657a380], cl; call dword ptr [eax + 0x68]; 
0x00094f14: add bh, bh; pop edi; pop ebp; ret; 
0x00094f52: add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x000f28f9: add bh, bh; ret; 
0x0003308d: add bh, bh; xor al, 2; push dword ptr [esp + 0x1c]; call 0x330a0; add esp, 0x1c; ret; 
0x000a50dd: add bh, bh; xor al, 2; push dword ptr [esp + 0x1c]; call 0xa50f0; add esp, 0x1c; ret; 
0x0005db61: add bh, bh; xor al, ch; mov bh, 0x49; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011a4a1: add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x0005cdb4: add bh, byte ptr [eax + 1]; ret; 
0x00137a05: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x00059f40: add bh, byte ptr [ecx]; ret 0x8c0f; 
0x00137533: add bh, byte ptr [ecx]; ret 0xf072; 
0x00104d09: add bh, byte ptr [ecx]; ror byte ptr [edi], 1; dec edi; ret 0xd4e9; 
0x00136368: add bh, byte ptr [ecx]; ror dword ptr [edi], 0x82; ret; 
0x00179231: add bh, byte ptr [edi + 0xc]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0009f5a6: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009fbed: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b21e: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x0009f23b: add bh, dh; fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000dfd1f: add bh, dh; fiadd dword ptr [ebx + 0x450fdafb]; ret 0x548b; 
0x000942fa: add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00090dcf: add bh, dh; ret 0; 
0x000bb3d5: add bh, dh; ret 0x3f; 
0x00186878: add bh, dh; ret 0xf; 
0x000bbde1: add bh, dh; ret 3; 
0x001a525e: add bh, dh; ret; 
0x000df65f: add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e885b: add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000e886b: add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000e78cb: add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000e78bb: add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x00183aaa: add bl, bh; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x6508b79]; call dword ptr [eax - 0x73]; 
0x000a5818: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0007b5b6: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00087430: add bl, byte ptr [ebx + 0x5e]; ret; 
0x00032ada: add bl, byte ptr [ebx - 0x3b7cfff8]; adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x0013057e: add bl, byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x00107db0: add bl, byte ptr [ecx - 7]; call dword ptr [eax + 0x6a]; 
0x0016b57d: add bl, byte ptr [ecx - 7]; call dword ptr [edi + 0x56]; 
0x0015f446: add bl, byte ptr [edi + 0x5d]; mov eax, edx; ret; 
0x000b316b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0018e840: add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00079f25: add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x0007b736: add bl, byte ptr [esi + 0x5f]; ret; 
0x001a00c7: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x001476bd: add bl, ch; fisttp dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax], 0xbf; stc; call dword ptr [eax - 0x73]; 
0x00164984: add bl, ch; fucomi st(0); int1; cld; jmp dword ptr [esi - 0x70]; 
0x00178d26: add bl, ch; fucomi st(0); ret 0xfbad; 
0x00167314: add bl, ch; fucomp st(0); aam 0xc7; cld; jmp dword ptr [esi - 0x70]; 
0x00178ca6: add bl, ch; jecxz 0x178c92; inc edx; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x0013783a: add bl, ch; mov ecx, dword ptr [ebp - 0x646077a]; call dword ptr [eax - 0x73]; 
0x00098af2: add bl, ch; mov esi, 0x8d887d8b; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax + 0x68]; 
0x001718f2: add bl, ch; mov esi, 0xfc21f6e8; jmp dword ptr [esi - 0x70]; 
0x000e2445: add bl, ch; or dword ptr [esi], ebp; lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0009dccb: add bl, ch; ret 0x9066; 
0x0008b090: add bl, ch; ret; 
0x000a09f9: add bl, ch; xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x001a02ef: add bl, dh; bsf edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x000af23f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000aae7f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000ab10f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b6f6f: add bl, dh; movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba62f: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b716c: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5cf: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b710c: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5ef: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b712c: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba60f: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b714c: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b35bf: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000b35cf: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x0012b2d8: add byte ptr [0x105b5b], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0009aaf8: add byte ptr [0x19633b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x0009a808: add byte ptr [0x19662b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a6f8: add byte ptr [0x19673b], al; mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x000993f8: add byte ptr [0x197a3b], al; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008f9e8: add byte ptr [0x1a144b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x0008f9c8: add byte ptr [0x1a146b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9a8: add byte ptr [0x1a148b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x0008e828: add byte ptr [0x1a260b], al; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x000889f8: add byte ptr [0x1a843b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x000889d8: add byte ptr [0x1a845b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889b8: add byte ptr [0x1a847b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x00088998: add byte ptr [0x1a849b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x00086d88: add byte ptr [0x1aa0ab], al; mov eax, dword ptr [eax + 0xe4c]; ret; 
0x0003cf18: add byte ptr [0x1f3f1b], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef8: add byte ptr [0x1f3f3b], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x00034538: add byte ptr [0x1fc8fb], al; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034518: add byte ptr [0x1fc91b], al; mov eax, dword ptr [eax + 0x1c8]; add eax, dword ptr gs:[0]; ret; 
0x000344f8: add byte ptr [0x1fc93b], al; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0019da4f: add byte ptr [0x1ff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00080bc9: add byte ptr [0x200], ah; ret; 
0x0002f478: add byte ptr [0x2019bb], al; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x00026078: add byte ptr [0x20adbb], al; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026058: add byte ptr [0x20addb], al; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00025568: add byte ptr [0x20b8cb], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024ee8: add byte ptr [0x20bf4b], al; lea eax, [eax - 0x681f0]; ret; 
0x00024ec8: add byte ptr [0x20bf6b], al; lea eax, [eax - 0x681e8]; ret; 
0x00024ba8: add byte ptr [0x20c28b], al; mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x0009a834: add byte ptr [0x3fc], bh; jbe 0x9a840; ret; 
0x00080b79: add byte ptr [0x804], ah; ret; 
0x00168bac: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009972a: add byte ptr [0xc4830000], 0x2c; ret; 
0x00055d00: add byte ptr [0xd2310000], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00091f8d: add byte ptr [0xf000dff], ah; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00135418: add byte ptr [0xfba1b], al; mov eax, dword ptr [eax + 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x0019d96a: add byte ptr [0xff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00061107: add byte ptr [0xfff792e9], ah; jmp dword ptr [esi - 0x70]; 
0x0019d9a1: add byte ptr [0xfff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d9da: add byte ptr [0xffff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0009a874: add byte ptr [0xffff], bh; jbe 0x9a880; ret; 
0x0011e94d: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x00102c18: add byte ptr [0xfffff000], bh; ja 0x102c28; pop ebx; pop esi; ret; 
0x00109926: add byte ptr [0xfffff000], bh; ja 0x109938; pop ebx; pop esi; ret; 
0x0010abf3: add byte ptr [0xfffff000], bh; ja 0x10ac00; pop ebx; ret; 
0x0010ac63: add byte ptr [0xfffff000], bh; ja 0x10ac70; pop ebx; ret; 
0x0010aced: add byte ptr [0xfffff000], bh; ja 0x10ad40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010af71: add byte ptr [0xfffff000], bh; ja 0x10afc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b063: add byte ptr [0xfffff000], bh; ja 0x10b070; pop ebx; ret; 
0x0010c6d9: add byte ptr [0xfffff000], bh; ja 0x10c6e8; pop ebx; pop esi; ret; 
0x001152e3: add byte ptr [0xfffff000], bh; ja 0x1152f0; pop ebx; ret; 
0x00115823: add byte ptr [0xfffff000], bh; ja 0x115830; pop ebx; ret; 
0x00115f01: add byte ptr [0xfffff000], bh; ja 0x115f10; pop ebx; ret; 
0x00116a98: add byte ptr [0xfffff000], bh; ja 0x116aa8; pop ebx; pop esi; ret; 
0x00116b1f: add byte ptr [0xfffff000], bh; ja 0x116b30; pop ebx; ret; 
0x00116b7d: add byte ptr [0xfffff000], bh; ja 0x116b90; pop ebx; pop esi; pop edi; ret; 
0x00116bdd: add byte ptr [0xfffff000], bh; ja 0x116bf0; pop ebx; pop esi; pop edi; ret; 
0x00116e39: add byte ptr [0xfffff000], bh; ja 0x116e48; pop ebx; pop esi; ret; 
0x00117233: add byte ptr [0xfffff000], bh; ja 0x117240; pop ebx; ret; 
0x0011775f: add byte ptr [0xfffff000], bh; ja 0x117770; pop ebx; ret; 
0x00117c8f: add byte ptr [0xfffff000], bh; ja 0x117ca0; pop ebx; ret; 
0x001181ef: add byte ptr [0xfffff000], bh; ja 0x118210; pop ebx; pop esi; pop edi; ret; 
0x0011826c: add byte ptr [0xfffff000], bh; ja 0x118290; pop ebx; pop esi; pop edi; ret; 
0x001182ee: add byte ptr [0xfffff000], bh; ja 0x118310; pop ebx; pop esi; pop edi; ret; 
0x0011836b: add byte ptr [0xfffff000], bh; ja 0x118390; pop ebx; pop esi; pop edi; ret; 
0x00118438: add byte ptr [0xfffff000], bh; ja 0x118448; pop ebx; pop esi; ret; 
0x001187f8: add byte ptr [0xfffff000], bh; ja 0x118808; pop ebx; pop esi; ret; 
0x00119263: add byte ptr [0xfffff000], bh; ja 0x119270; pop ebx; ret; 
0x001192b3: add byte ptr [0xfffff000], bh; ja 0x1192c0; pop ebx; ret; 
0x001193c9: add byte ptr [0xfffff000], bh; ja 0x1193d8; pop ebx; pop esi; pop edi; ret; 
0x00119429: add byte ptr [0xfffff000], bh; ja 0x119438; pop ebx; pop esi; pop edi; ret; 
0x0011aacd: add byte ptr [0xfffff000], bh; ja 0x11ab20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b01d: add byte ptr [0xfffff000], bh; ja 0x11b070; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b0d3: add byte ptr [0xfffff000], bh; ja 0x11b0e0; pop ebx; ret; 
0x0011b128: add byte ptr [0xfffff000], bh; ja 0x11b138; pop ebx; pop esi; ret; 
0x0011e588: add byte ptr [0xfffff000], bh; ja 0x11e598; pop ebx; pop esi; ret; 
0x00120e8a: add byte ptr [0xfffff000], bh; ja 0x120e98; pop ebx; pop esi; ret; 
0x00122603: add byte ptr [0xfffff000], bh; ja 0x122610; pop ebx; ret; 
0x00122658: add byte ptr [0xfffff000], bh; ja 0x122668; pop ebx; pop esi; ret; 
0x001249cf: add byte ptr [0xfffff000], bh; ja 0x1249e0; pop ebx; ret; 
0x00125073: add byte ptr [0xfffff000], bh; ja 0x125080; pop ebx; ret; 
0x001251ea: add byte ptr [0xfffff000], bh; ja 0x1251f8; ret; 
0x001252f3: add byte ptr [0xfffff000], bh; ja 0x125300; pop ebx; ret; 
0x001255b2: add byte ptr [0xfffff000], bh; ja 0x1255d8; pop ebx; pop esi; pop edi; ret; 
0x0012585d: add byte ptr [0xfffff000], bh; ja 0x125870; pop ebx; pop esi; pop edi; ret; 
0x00125b3d: add byte ptr [0xfffff000], bh; ja 0x125b50; pop ebx; pop esi; pop edi; ret; 
0x00125c7e: add byte ptr [0xfffff000], bh; ja 0x125c90; pop ebx; pop esi; pop edi; ret; 
0x001263b3: add byte ptr [0xfffff000], bh; ja 0x1263c0; pop ebx; ret; 
0x00126673: add byte ptr [0xfffff000], bh; ja 0x126680; pop ebx; ret; 
0x00183bf9: add byte ptr [0xfffff000], bh; ja 0x183c08; pop ebx; pop esi; ret; 
0x0003c3e4: add byte ptr [0xfffff000], bh; ja 0x3c3f0; pop ebx; ret; 
0x0003c442: add byte ptr [0xfffff000], bh; ja 0x3c490; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005da13: add byte ptr [0xfffff000], bh; ja 0x5da20; pop ebx; ret; 
0x0005da6d: add byte ptr [0xfffff000], bh; ja 0x5da80; pop ebx; pop esi; pop edi; ret; 
0x000898e0: add byte ptr [0xfffff000], bh; ja 0x898f0; pop ebx; pop esi; pop edi; ret; 
0x000922f3: add byte ptr [0xfffff000], bh; ja 0x92300; pop ebx; pop esi; pop edi; ret; 
0x000990df: add byte ptr [0xfffff000], bh; ja 0x990f0; pop ebx; ret; 
0x00099768: add byte ptr [0xfffff000], bh; ja 0x99778; pop ebx; pop esi; ret; 
0x0009a137: add byte ptr [0xfffff000], bh; ja 0x9a148; pop ebx; ret; 
0x000d4261: add byte ptr [0xfffff000], bh; ja 0xd4270; pop ebx; ret; 
0x000e1462: add byte ptr [0xfffff000], bh; ja 0xe1470; pop ebx; pop esi; ret; 
0x000f2c38: add byte ptr [0xfffff000], bh; ja 0xf2c80; add esp, 0x18; pop ebx; ret; 
0x00102cbb: add byte ptr [0xfffff001], bh; jae 0x24e60; ret; 
0x00137e4f: add byte ptr [0xffffff], ah; ret; 
0x000fc2c5: add byte ptr [bx], cl; inc ebp; ret 0x4489; 
0x0016e3ae: add byte ptr [eax + 0x108838b], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0009464f: add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000dfd68: add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001a028e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acece: add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x00099448: add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00124527: add byte ptr [eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x001251de: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x001251de: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001250e1: add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x0010b57d: add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0010b376: add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000df76e: add byte ptr [eax + 0x14244c8d], dl; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0008aa9f: add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008c98f: add byte ptr [eax + 0x16], bh; ret; 
0x000a95bd: add byte ptr [eax + 0x176850f], 0; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x0008cf08: add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x000b673f: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b677f: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000dfcf0: add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00170fee: add byte ptr [eax + 0x1b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0016497e: add byte ptr [eax + 0x1b8], dl; add bl, ch; fucomi st(0); int1; cld; jmp dword ptr [esi - 0x70]; 
0x0010b507: add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00117f6e: add byte ptr [eax + 0x20245c8b], dl; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000ba21f: add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x000af38e: add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000b3c1e: add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x0012cc77: add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x00118cef: add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x0009a87f: add byte ptr [eax + 0x3708289], dl; add byte ptr [eax], al; ret; 
0x0008a86e: add byte ptr [eax + 0x40084983], dl; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000f2867: add byte ptr [eax + 0x40], bh; ret; 
0x00061a1e: add byte ptr [eax + 0x442444c7], dl; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000ba40d: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b6f87: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x0009b1dd: add byte ptr [eax + 0x51], 0xf9; call dword ptr [eax - 0x18]; 
0x0016a9cd: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016a9cd: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x001550f5: add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x00165185: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00165be8: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016528b: add byte ptr [eax + 0x5a], bl; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000b34df: add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x001239be: add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0010b46e: add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000b350e: add byte ptr [eax + 0x5e5f1789], dl; pop ebx; ret; 
0x0008a893: add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000b34fe: add byte ptr [eax + 0x5fff5789], dl; pop esi; pop ebx; ret; 
0x000af39e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000aafbe: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0011eb6a: add byte ptr [eax + 0x6a0000], al; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0013b14e: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [edi - 0x18]; 
0x0008535e: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x001265ff: add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012527f: add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00125006: add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00104ff9: add byte ptr [eax + 0x72], bh; call dword ptr gs:[0x10]; 
0x0017df7f: add byte ptr [eax + 0x7500017d], al; ret 0x448b; 
0x001291c9: add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00128cb2: add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0018e2fe: add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x0019d231: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0019d220: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0019d20f: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0003f6d9: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000f264d: add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0012a17f: add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0008da63: add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x0008cb5e: add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0003c22c: add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d6: add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0008cdb1: add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00103b27: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00094394: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0019f135: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0008ef5f: add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x0019f0c8: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019f12b: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0008f558: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902c8: add byte ptr [eax + 0xf0], bh; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00097f66: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091427: add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091cb4: add byte ptr [eax + 0xf0], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009249c: add byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b3d7: add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0017fede: add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001413ee: add byte ptr [eax + 0xf23fa80], dl; xchg ebp, eax; ret; 
0x000b67ef: add byte ptr [eax + 0xf66087a], cl; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008cf9a: add byte ptr [eax + 0xf], al; test byte ptr [eax + 0x31000000], dl; sar byte ptr [eax + 0xf0], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008f45c: add byte ptr [eax + 0xf], al; test byte ptr [ecx - 0x74000003], ah; je 0x8f48b; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x000d208f: add byte ptr [eax + 0xfe580f5], cl; je 0xd20b0; add eax, 2; ret; 
0x000f272f: add byte ptr [eax + 0xfffa], bh; pop ebx; ret; 
0x000962f7: add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x0005828f: add byte ptr [eax + 1], bh; add esp, 4; pop ebx; pop esi; ret; 
0x0019292f: add byte ptr [eax + 1], bh; ja 0x192939; neg eax; ret; 
0x0019956f: add byte ptr [eax + 1], bh; ja 0x199579; neg eax; ret; 
0x000d1ecf: add byte ptr [eax + 1], bh; jg 0xd1ed9; neg eax; ret; 
0x0016df00: add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x000a0c5f: add byte ptr [eax + 1], bh; ret; 
0x00041c9f: add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x0017d33f: add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x0008e867: add byte ptr [eax + 3], bh; ret; 
0x0019f08c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x00188c1a: add byte ptr [eax + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019f0e5: add byte ptr [eax + 8], bh; pop edi; ret; 
0x0019f95f: add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x00135579: add byte ptr [eax + eax], 0x81; ret; 
0x00135416: add byte ptr [eax + eax], 5; sbb edi, dword ptr [edx - 0x7f74fff1]; rol byte ptr [eax], 0; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00159458: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x5e], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x0015a92a: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0; add byte ptr [eax - 0x73], dl; cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x001434e3: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x39f3db94], cl; inc esp; and al, 0x3b; add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x00121d9e: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x00121d9e: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; ret 0xf3bd; 
0x0016eef3: add byte ptr [eax + eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x001347ae: add byte ptr [eax + eax], al; add byte ptr [ecx], ch; ret 0xc031; 
0x00103f6a: add byte ptr [eax + eax], al; add dh, dh; ret 0xf80; 
0x000d7d73: add byte ptr [eax + eax], bl; add dh, dh; ret; 
0x0013789e: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001656e9: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00118255: add byte ptr [eax + ebp - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00118355: add byte ptr [eax + ebp - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0014c524: add byte ptr [eax - 0x12b7b], cl; call dword ptr [edx - 0x18]; 
0x00043564: add byte ptr [eax - 0x16bfdbac], cl; ret 0xfff8; 
0x0019d1c9: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00154a42: add byte ptr [eax - 0x18], dl; aaa; ret; 
0x0011cd46: add byte ptr [eax - 0x18], dl; add eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000333b5: add byte ptr [eax - 0x18], dl; hlt; ret; 
0x00121c00: add byte ptr [eax - 0x18], dl; mov ecx, 0x83fff677; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00114691: add byte ptr [eax - 0x18], dl; sub byte ptr [edx], dh; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000cf60f: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x00055612: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365f63], cl; call dword ptr [eax - 1]; 
0x0013451e: add byte ptr [eax - 0x1f5418], dl; jmp dword ptr [esi - 0x70]; 
0x000b0d62: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0019d1da: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0012c104: add byte ptr [eax - 0x2f770000], al; ret; 
0x0019d1eb: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00119b58: add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x00091d94: add byte ptr [eax - 0x3b7c3fcf], dl; add al, 0x5b; pop esi; ret; 
0x000fbb2e: add byte ptr [eax - 0x3e7cfc75], dl; add al, 0x83; ret; 
0x0019984e: add byte ptr [eax - 0x3fcea0a2], dl; pop ebp; ret; 
0x0019d5ce: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x0019f859: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0005ca2e: add byte ptr [eax - 0x43242623], dl; and al, 0x80; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x0002f46e: add byte ptr [eax - 0x4e1f00d], dl; call 0x17d641; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x0008568e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x00086dae: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00163cde: add byte ptr [eax - 0x4e1f00d], dl; ret; 
0x00171d2e: add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000d6577: add byte ptr [eax - 0x54], ch; ret 0xf0; 
0x0009c62e: add byte ptr [eax - 0x62], 0xf9; call dword ptr [eax - 0x18]; 
0x000bad6e: add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0011ad3e: add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x000eb20a: add byte ptr [eax - 0x73], dl; adc byte ptr [ebx], 0x57; stc; call dword ptr [eax - 0x18]; 
0x00090401: add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x6c; stc; call dword ptr [eax - 0x18]; 
0x0014859f: add byte ptr [eax - 0x73], dl; adc eax, -0x41; stc; call dword ptr [eax - 0x18]; 
0x00032254: add byte ptr [eax - 0x73], dl; adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00032254: add byte ptr [eax - 0x73], dl; adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; mov esi, 0xf600001a; ret 0xf03; 
0x0009f41a: add byte ptr [eax - 0x73], dl; adc edi, 0x52; stc; call dword ptr [eax - 0x18]; 
0x001475ed: add byte ptr [eax - 0x73], dl; add ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x000cb89d: add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x54], -7; call dword ptr [eax - 0x18]; 
0x0014b875: add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; 
0x0014b875: add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x00159520: add byte ptr [eax - 0x73], dl; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0002872d: add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000870e7: add byte ptr [eax - 0x73], dl; and ebx, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x000e3e28: add byte ptr [eax - 0x73], dl; and esp, 0xffffffad; stc; call dword ptr [eax - 0x18]; 
0x0007cd73: add byte ptr [eax - 0x73], dl; cmp bh, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x000be0e1: add byte ptr [eax - 0x73], dl; cmp byte ptr [edx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x00159462: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x0015945b: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax - 0x5e], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x00159be4: add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + ecx*4 - 0x17af000e], 0x6e; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x000d61b1: add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x00156a62: add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + ebx*2], -0xe; call dword ptr [eax - 0x18]; 
0x00146536: add byte ptr [eax - 0x73], dl; cmp eax, -0x43; stc; call dword ptr [eax - 0x18]; 
0x00172b46: add byte ptr [eax - 0x73], dl; cmp edi, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x0015a934: add byte ptr [eax - 0x73], dl; cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x0016555c: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x0005777f: add byte ptr [eax - 0x73], dl; or ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x000be0be: add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x0015c417: add byte ptr [eax - 0x73], dl; or dword ptr [eax + ecx*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0014d3a9: add byte ptr [eax - 0x73], dl; or dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0014d3b0: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x00135067: add byte ptr [eax - 0x73], dl; or dword ptr [esi + 0x67], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0015249b: add byte ptr [eax - 0x73], dl; or esp, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00159ca7: add byte ptr [eax - 0x73], dl; or esp, 0xffffff86; int1; call dword ptr [eax - 0x73]; 
0x001596cc: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x00173e74: add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x72], -7; call dword ptr [eax + 0x6a]; 
0x000903d9: add byte ptr [eax - 0x73], dl; sbb ebx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x000dad5b: add byte ptr [eax - 0x73], dl; sbb esi, 0x55; stc; call dword ptr [eax - 0x18]; 
0x000be09b: add byte ptr [eax - 0x73], dl; sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x0015a92d: add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0; add byte ptr [eax - 0x73], dl; cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x000d3ce0: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x00141a6b: add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x0015c354: add byte ptr [eax - 0x73], dl; sub dword ptr [edi + esi*4], -0xe; call dword ptr [eax - 0x18]; 
0x00159527: add byte ptr [eax - 0x73], dl; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0015c014: add byte ptr [eax - 0x73], dl; sub esp, -0x4d; bnd call dword ptr [eax - 0x18]; 
0x0015c014: add byte ptr [eax - 0x73], dl; sub esp, -0x4d; bnd call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x000d6bbb: add byte ptr [eax - 0x73], dl; sub esp, -0x54; stc; call dword ptr [eax - 0x18]; 
0x0009d49c: add byte ptr [eax - 0x73], dl; sub esp, -0x61; stc; call dword ptr [eax - 0x18]; 
0x00156b27: add byte ptr [eax - 0x73], dl; sub esp, -0x7c; int1; call dword ptr [eax - 0x73]; 
0x0009f069: add byte ptr [eax - 0x73], dl; test dword ptr [eax], ebx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00090fa5: add byte ptr [eax - 0x73], dl; test dword ptr [eax], edx; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0009efe7: add byte ptr [eax - 0x73], dl; test dword ptr [ebp - 7], esi; call dword ptr [eax - 0x18]; 
0x0013d260: add byte ptr [eax - 0x73], dl; test dword ptr [esi + 0x69], ebp; stc; call dword ptr [eax - 0x18]; 
0x00090ec5: add byte ptr [eax - 0x73], dl; test dword ptr [esp + edx*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0009114f: add byte ptr [eax - 0x73], dl; test ebx, ebx; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0009114f: add byte ptr [eax - 0x73], dl; test ebx, ebx; dec edi; stc; call dword ptr [eax - 0x18]; ret; 
0x00090e75: add byte ptr [eax - 0x73], dl; test ecx, esi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000c3408: add byte ptr [eax - 0x73], dl; xchg ah, dl; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0005a860: add byte ptr [eax - 0x73], dl; xchg al, al; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0009c6aa: add byte ptr [eax - 0x73], dl; xchg al, al; popfd; stc; call dword ptr [eax - 0x18]; 
0x0009c7bf: add byte ptr [eax - 0x73], dl; xchg al, al; push ecx; stc; call dword ptr [eax - 0x18]; 
0x001522b5: add byte ptr [eax - 0x73], dl; xchg al, bh; ret 0xfff9; 
0x0005a781: add byte ptr [eax - 0x73], dl; xchg al, ch; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x000c33e5: add byte ptr [eax - 0x73], dl; xchg bh, bh; push esp; stc; call dword ptr [eax - 0x18]; 
0x0002751d: add byte ptr [eax - 0x73], dl; xchg bl, bl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0008f67b: add byte ptr [eax - 0x73], dl; xchg bl, bl; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000c3471: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x3f], ch; stc; call dword ptr [eax - 0x18]; 
0x0008e05e: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x4f], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c506: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c38e: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0009c6f0: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x63], al; stc; call dword ptr [eax - 0x18]; 
0x000c34da: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x7b], ch; stc; call dword ptr [eax - 0x18]; 
0x001098e3: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000c3494: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0005a83b: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; mov bh, cl; call dword ptr [eax - 0x18]; 
0x0009c6cd: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], cl; sahf; stc; call dword ptr [eax - 0x18]; 
0x000c354a: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dh; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0008f642: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dl; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00173f20: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x72], bl; stc; call dword ptr [eax + 0x6a]; 
0x0009c713: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x000c24ef: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], dl; stc; call dword ptr [eax - 0x18]; 
0x00111e4d: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x59], ah; stc; call dword ptr [eax - 0x18]; 
0x00152315: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + eax*8 - 7], ah; call dword ptr [eax - 0x18]; 
0x00152349: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + eax*8], bh; stc; call dword ptr [eax - 0x18]; 
0x000c3504: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], dl; aas; stc; call dword ptr [eax - 0x18]; 
0x00154989: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x6f], al; stc; call dword ptr [eax - 0x18]; 
0x00028edd: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00028d4e: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x000c33c2: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi], bl; stc; call dword ptr [eax - 0x18]; 
0x000c34b7: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], al; aas; stc; call dword ptr [eax - 0x18]; 
0x000c356d: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], dh; aas; stc; call dword ptr [eax - 0x18]; 
0x00028de5: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x3a], ah; stc; call dword ptr [eax - 0x18]; 
0x0008e03c: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x4f], dh; stc; call dword ptr [eax - 0x18]; 
0x00111e7d: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x59], bh; stc; call dword ptr [eax - 0x18]; 
0x00109665: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], cl; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0009adfa: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], cl; push ecx; stc; call dword ptr [eax - 0x18]; 
0x000c3527: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x3f], bh; stc; call dword ptr [eax - 0x18]; 
0x000c3590: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + eax*4 - 0x17af0007], cl; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x001603e8: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x0008f479: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + edx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0009e97f: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x18]; 
0x0005a88a: add byte ptr [eax - 0x73], dl; xchg cl, ah; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0008f61a: add byte ptr [eax - 0x73], dl; xchg cl, dh; dec edi; stc; call dword ptr [eax - 0x18]; 
0x001761dd: add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1761dd; call dword ptr [eax - 0x18]; 
0x001766dc: add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1766dc; call dword ptr [eax - 0x18]; 
0x0002754d: add byte ptr [eax - 0x73], dl; xchg dh, cl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0005a8af: add byte ptr [eax - 0x73], dl; xchg dh, cl; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000c344e: add byte ptr [eax - 0x73], dl; xchg dh, dh; stc; call dword ptr [eax - 0x18]; 
0x000478df: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x3f], ebp; stc; call dword ptr [eax - 0x18]; 
0x00147d30: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6c], esp; stc; call dword ptr [eax - 0x18]; 
0x0002aa19: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002ab80: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x00147161: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x42], ebx; stc; call dword ptr [eax - 0x18]; 
0x0012ee5d: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x4a], ebx; stc; call dword ptr [eax - 0x18]; 
0x00047876: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x7b], ebp; stc; call dword ptr [eax - 0x18]; 
0x0002ab5d: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebx; stc; call dword ptr [eax - 0x18]; 
0x000a01bd: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00047948: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0004796b: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0004796b: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x001732cc: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + 0x72], ebx; stc; call dword ptr [eax + 0x6a]; 
0x001757bc: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x31fff972], esp; call dword ptr [eax + 0x6a]; 
0x0004707b: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x00030e54: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edi - 7], ecx; call dword ptr [eax - 0x18]; 
0x0008dfe4: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edx*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x00082d68: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], edi; dec esi; stc; call dword ptr [eax - 0x18]; 
0x000ee870: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], edx; push edi; stc; call dword ptr [eax - 0x18]; 
0x00047902: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], edx; aas; stc; call dword ptr [eax - 0x18]; 
0x0012ee3a: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], esp; stc; call dword ptr [eax - 0x18]; 
0x00147d4f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x00147d4f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; ret; 
0x0014b545: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6d], ebx; stc; call dword ptr [eax - 0x18]; 
0x00029389: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x0002943f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x000477c0: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi], ebx; stc; call dword ptr [eax - 0x18]; 
0x000976f5: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x00096dbd: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0004798e: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], eax; aas; stc; call dword ptr [eax - 0x18]; 
0x000478bc: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], esi; aas; stc; call dword ptr [eax - 0x18]; 
0x000293bb: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x3a], esp; stc; call dword ptr [eax - 0x18]; 
0x0014b522: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4f], esp; stc; call dword ptr [eax - 0x18]; 
0x0007344f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + eax*2 - 0x17af0007], edx; ret; 
0x0009f99a: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ecx; push ebx; stc; call dword ptr [eax - 0x18]; 
0x0002a08a: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x3a], ecx; stc; call dword ptr [eax - 0x18]; 
0x000477e3: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x3f], edi; stc; call dword ptr [eax - 0x18]; 
0x0008e080: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x4f], edi; stc; call dword ptr [eax - 0x18]; 
0x0012edf4: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*4], esi; stc; call dword ptr [eax - 0x18]; 
0x00092217: add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + edx - 0x1a], ebx; call dword ptr [eax + 0x56]; 
0x0009ed3f: add byte ptr [eax - 0x73], dl; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x00047829: add byte ptr [eax - 0x73], dl; xchg eax, ebx; stc; call dword ptr [eax - 0x18]; 
0x00098b6c: add byte ptr [eax - 0x73], dl; xchg eax, edi; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00108599: add byte ptr [eax - 0x73], dl; xchg ebp, esp; pop eax; stc; call dword ptr [eax - 0x18]; 
0x0007bd56: add byte ptr [eax - 0x73], dl; xchg ebx, esp; dec ebp; stc; call dword ptr [eax - 0x18]; 
0x00091705: add byte ptr [eax - 0x73], dl; xchg ecx, esi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000c9b58: add byte ptr [eax - 0x73], dl; xchg edi, edi; push esp; stc; call dword ptr [eax - 0x18]; 
0x00091833: add byte ptr [eax - 0x73], dl; xchg edx, ebp; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00174843: add byte ptr [eax - 0x73], dl; xchg edx, ebx; jb 0x174843; call dword ptr [eax + 0x6a]; 
0x0015517e: add byte ptr [eax - 0x73], dl; xchg edx, edi; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x001725f5: add byte ptr [eax - 0x73], dl; xchg esi, ecx; jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x00047899: add byte ptr [eax - 0x73], dl; xchg esi, esi; stc; call dword ptr [eax - 0x18]; 
0x000a01e0: add byte ptr [eax - 0x73], dl; xchg esp, ebx; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0002aacc: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2aacc; call dword ptr [eax - 0x18]; 
0x0002b73b: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2b73b; call dword ptr [eax - 0x18]; 
0x0002ce2a: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ce2a; call dword ptr [eax - 0x18]; 
0x0002d929: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2d929; call dword ptr [eax - 0x18]; 
0x0002e207: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2e207; call dword ptr [eax - 0x18]; 
0x0002ed00: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ed00; call dword ptr [eax - 0x18]; 
0x001551b5: add byte ptr [eax - 0x73], dl; xchg esp, ebx; ret; 
0x0004779d: add byte ptr [eax - 0x73], dl; xchg esp, edx; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x001476d5: add byte ptr [eax - 0x73], dl; xor ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x000903a0: add byte ptr [eax - 0x73], dl; xor ecx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x0007689e: add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0009a96e: add byte ptr [eax - 0x74fb9575], dl; push edx; or al, 0x83; ret; 
0x0012dcfe: add byte ptr [eax - 0x75], dl; inc ebp; mov esp, 0x64ee808d; stc; call dword ptr [eax - 1]; 
0x000d3877: add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x00154a79: add byte ptr [eax - 0x75], dl; jl 0x154aa2; sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x00089940: add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000aceae: add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x000505f7: add byte ptr [eax - 0x76fffe85], al; fidiv dword ptr [ebp + ebx*8 - 0x7d]; ret 0x8001; 
0x0008f9f5: add byte ptr [eax - 0x76fffffe], 0x10; ret; 
0x000a95bb: add byte ptr [eax - 0x7af07f80], 0x76; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x000d9503: add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x000923ff: add byte ptr [eax - 0x7c308bfc], ch; in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00041cf4: add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x000bd3b3: add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x000c828e: add byte ptr [eax - 0x7cfbac75], dl; ret; 
0x000ea2be: add byte ptr [eax - 0x7cfe397d], dl; ret 0x8801; 
0x001521c3: add byte ptr [eax - 0x7cff8973], al; ret 0xd101; 
0x0009454c: add byte ptr [eax - 0x7d000000], 0xe0; cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00132e8e: add byte ptr [eax - 0x8c418], dl; jmp dword ptr [esi - 0x70]; 
0x00059083: add byte ptr [eax - 0xd343], al; jmp dword ptr [esi + 0xf]; 
0x0013330e: add byte ptr [eax - 0xd4418], dl; jmp dword ptr [esi - 0x70]; 
0x00094e2f: add byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00025883: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000e3472: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00118c33: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003c183: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbe3: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c123: add byte ptr [eax - 1], bh; ret; 
0x00025da9: add byte ptr [eax - 1], dl; jae 0x25db2; call edi; 
0x0017d78a: add byte ptr [eax - 1], dl; je 0x17d7b3; sbb al, 0xe8; mov edx, dword ptr [ecx]; in al, dx; jmp dword ptr [esi - 0x70]; 
0x0002ad83: add byte ptr [eax - 1], dl; je 0x2adac; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002bac7: add byte ptr [eax - 1], dl; je 0x2baf0; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002d073: add byte ptr [eax - 1], dl; je 0x2d09c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e443: add byte ptr [eax - 1], dl; je 0x2e46c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x001a7fb8: add byte ptr [eax], 0; add bh, dh; ret 0; 
0x001a525b: add byte ptr [eax], 0; add bh, dh; ret; 
0x0008993d: add byte ptr [eax], 0; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0002d070: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2d09c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e440: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2e46c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0008e174: add byte ptr [eax], 0; add byte ptr [eax], dl; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x00085b83: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x85b80; ret; 
0x0005ed03: add byte ptr [eax], 0; add byte ptr [ecx + 0x3910247c], cl; ret; 
0x00104fea: add byte ptr [eax], 0; add byte ptr [ecx - 0xfbbf017], cl; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000d3540: add byte ptr [eax], 0; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x00137aec: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0008930f: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0005ca35: add byte ptr [eax], 0; add cl, ch; ret 0xfff9; 
0x001a6774: add byte ptr [eax], 0; add cl, ch; ret 0xfffc; 
0x001a58f7: add byte ptr [eax], 0; add dh, dh; ret 0x7407; 
0x000f49c4: add byte ptr [eax], 0; add dh, dh; ret 0x7420; 
0x000f80b1: add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x000f8205: add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x0007f569: add byte ptr [eax], 0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012c105: add byte ptr [eax], 0; mov eax, edx; ret; 
0x0011eb6b: add byte ptr [eax], 0; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x000340c8: add byte ptr [eax], 0; ret; 
0x0005777c: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; or ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x0012c284: add byte ptr [eax], ah; add byte ptr [eax], al; mov eax, edx; ret; 
0x00034157: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x0008e176: add byte ptr [eax], al; adc byte ptr [ebp + 0xd], dh; xor eax, eax; add esp, 0xc; ret; 
0x000e244d: add byte ptr [eax], al; add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a5d6b: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; dec esp; mov edi, 0x450ffff6; ret 0x66c3; 
0x000a3e0b: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x00137e3a: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00138139: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00145674: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00129817: add byte ptr [eax], al; add al, ch; add eax, 0x15c58100; jbe 0x129834; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0016b7ee: add byte ptr [eax], al; add al, ch; lcall 0x18c4, 0x83ffeb79; pop ebx; ret; 
0x001771c9: add byte ptr [eax], al; add al, ch; push 0x81000064; ret; 
0x0014c8c5: add byte ptr [eax], al; add al, ch; ret; 
0x0006d1e3: add byte ptr [eax], al; add al, ch; xchg ebp, eax; ret; 
0x00086e9b: add byte ptr [eax], al; add bh, al; adc byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00060983: add byte ptr [eax], al; add bh, al; add al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00060933: add byte ptr [eax], al; add bh, al; add al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0003ccc8: add byte ptr [eax], al; add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0009eb1d: add byte ptr [eax], al; add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000744a8: add byte ptr [eax], al; add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000522ca: add byte ptr [eax], al; add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00086f1f: add byte ptr [eax], al; add bh, al; sbb byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0014cadf: add byte ptr [eax], al; add bh, al; sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0016ed9e: add byte ptr [eax], al; add bh, bh; je 0x16edc8; sbb al, 0x53; call eax; 
0x000d3a97: add byte ptr [eax], al; add bh, bh; je 0xd3ac1; push dword ptr fs:[esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0009f5a4: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009fbeb: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b21c: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000dfd1d: add byte ptr [eax], al; add bh, dh; fiadd dword ptr [ebx + 0x450fdafb]; ret 0x548b; 
0x00090dcd: add byte ptr [eax], al; add bh, dh; ret 0; 
0x000bb3d3: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001a525c: add byte ptr [eax], al; add bh, dh; ret; 
0x000e8859: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000e8869: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000e78c9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000e78b9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x00164982: add byte ptr [eax], al; add bl, ch; fucomi st(0); int1; cld; jmp dword ptr [esi - 0x70]; 
0x00178d24: add byte ptr [eax], al; add bl, ch; fucomi st(0); ret 0xfbad; 
0x00167312: add byte ptr [eax], al; add bl, ch; fucomp st(0); aam 0xc7; cld; jmp dword ptr [esi - 0x70]; 
0x00137838: add byte ptr [eax], al; add bl, ch; mov ecx, dword ptr [ebp - 0x646077a]; call dword ptr [eax - 0x73]; 
0x00098af0: add byte ptr [eax], al; add bl, ch; mov esi, 0x8d887d8b; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax + 0x68]; 
0x001718f0: add byte ptr [eax], al; add bl, ch; mov esi, 0xfc21f6e8; jmp dword ptr [esi - 0x70]; 
0x000bfad3: add byte ptr [eax], al; add bl, ch; ret; 
0x001a02bd: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00168baa: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0019d968: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d99f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d9d8: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00102c16: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x102c28; pop ebx; pop esi; ret; 
0x00109924: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x109938; pop ebx; pop esi; ret; 
0x0010abf1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10ac00; pop ebx; ret; 
0x0010ac61: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10ac70; pop ebx; ret; 
0x0010b061: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10b070; pop ebx; ret; 
0x0010c6d7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10c6e8; pop ebx; pop esi; ret; 
0x001152e1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1152f0; pop ebx; ret; 
0x00115821: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x115830; pop ebx; ret; 
0x00115eff: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x115f10; pop ebx; ret; 
0x00116a96: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116aa8; pop ebx; pop esi; ret; 
0x00116b1d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116b30; pop ebx; ret; 
0x00116e37: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116e48; pop ebx; pop esi; ret; 
0x00117231: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x117240; pop ebx; ret; 
0x0011775d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x117770; pop ebx; ret; 
0x00117c8d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x117ca0; pop ebx; ret; 
0x00118436: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x118448; pop ebx; pop esi; ret; 
0x001187f6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x118808; pop ebx; pop esi; ret; 
0x00119261: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x119270; pop ebx; ret; 
0x001192b1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1192c0; pop ebx; ret; 
0x0011b0d1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11b0e0; pop ebx; ret; 
0x0011b126: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11b138; pop ebx; pop esi; ret; 
0x0011e586: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11e598; pop ebx; pop esi; ret; 
0x00120e88: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120e98; pop ebx; pop esi; ret; 
0x00122601: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x122610; pop ebx; ret; 
0x00122656: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x122668; pop ebx; pop esi; ret; 
0x001249cd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1249e0; pop ebx; ret; 
0x00125071: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x125080; pop ebx; ret; 
0x001251e8: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1251f8; ret; 
0x001252f1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x125300; pop ebx; ret; 
0x001263b1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1263c0; pop ebx; ret; 
0x00126671: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x126680; pop ebx; ret; 
0x00183bf7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x183c08; pop ebx; pop esi; ret; 
0x0003c3e2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x3c3f0; pop ebx; ret; 
0x0005da11: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x5da20; pop ebx; ret; 
0x000990dd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x990f0; pop ebx; ret; 
0x00099766: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x99778; pop ebx; pop esi; ret; 
0x0009a135: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9a148; pop ebx; ret; 
0x000d425f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xd4270; pop ebx; ret; 
0x000e1460: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xe1470; pop ebx; pop esi; ret; 
0x000f2c36: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf2c80; add esp, 0x18; pop ebx; ret; 
0x00102cb9: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x24e60; ret; 
0x00137e4d: add byte ptr [eax], al; add byte ptr [0xffffff], ah; ret; 
0x000dfd66: add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001a028c: add byte ptr [eax], al; add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acecc: add byte ptr [eax], al; add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x00099446: add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001250df: add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x0010b57b: add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0010b374: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000df76c: add byte ptr [eax], al; add byte ptr [eax + 0x14244c8d], dl; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0017fe65: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00092065: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x000dfcee: add byte ptr [eax], al; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010b505: add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000ba21d: add byte ptr [eax], al; add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x000af38c: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000b3c1c: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x0012cc75: add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x0008a86c: add byte ptr [eax], al; add byte ptr [eax + 0x40084983], dl; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00061a1c: add byte ptr [eax], al; add byte ptr [eax + 0x442444c7], dl; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0008a891: add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000af39c: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000aafbc: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0013b14c: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [edi - 0x18]; 
0x0008535c: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x001265fd: add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012527d: add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00125004: add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00104ff7: add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; call dword ptr gs:[0x10]; 
0x00128cb0: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0018e2fc: add byte ptr [eax], al; add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x0019d20d: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0003f6d7: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x0012a17d: add byte ptr [eax], al; add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00103b25: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00094392: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0019f133: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0008ef5d: add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x0019f0c6: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019f129: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0008f556: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902c6: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00097f64: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091cb2: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017fedc: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001413ec: add byte ptr [eax], al; add byte ptr [eax + 0xf23fa80], dl; xchg ebp, eax; ret; 
0x000d208d: add byte ptr [eax], al; add byte ptr [eax + 0xfe580f5], cl; je 0xd20b0; add eax, 2; ret; 
0x000f272d: add byte ptr [eax], al; add byte ptr [eax + 0xfffa], bh; pop ebx; ret; 
0x000962f5: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x0005828d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 4; pop ebx; pop esi; ret; 
0x000a0c5d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0019f08a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0019f0e3: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x00043562: add byte ptr [eax], al; add byte ptr [eax - 0x16bfdbac], cl; ret 0xfff8; 
0x000333b3: add byte ptr [eax], al; add byte ptr [eax - 0x18], dl; hlt; ret; 
0x000cf60d: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x00055610: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365f63], cl; call dword ptr [eax - 1]; 
0x0013451c: add byte ptr [eax], al; add byte ptr [eax - 0x1f5418], dl; jmp dword ptr [esi - 0x70]; 
0x00119b56: add byte ptr [eax], al; add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x000fbb2c: add byte ptr [eax], al; add byte ptr [eax - 0x3e7cfc75], dl; add al, 0x83; ret; 
0x0019f857: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0005ca2c: add byte ptr [eax], al; add byte ptr [eax - 0x43242623], dl; and al, 0x80; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x0008568c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x00086dac: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00163cdc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; ret; 
0x00171d2c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000bad6c: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0011ad3c: add byte ptr [eax], al; add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x00032252: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x000870e5: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x000be0df: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp byte ptr [edx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x000be0bc: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x000be099: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x001603e6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x001761db: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1761dd; call dword ptr [eax - 0x18]; 
0x001766da: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1766dc; call dword ptr [eax - 0x18]; 
0x00147d2e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6c], esp; stc; call dword ptr [eax - 0x18]; 
0x00147d4d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x00147d4d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; ret; 
0x000976f3: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x00096dbb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0014b520: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4f], esp; stc; call dword ptr [eax - 0x18]; 
0x00092215: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + edx - 0x1a], ebx; call dword ptr [eax + 0x56]; 
0x00098b6a: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg eax, edi; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x0007bd54: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ebx, esp; dec ebp; stc; call dword ptr [eax - 0x18]; 
0x0007689c: add byte ptr [eax], al; add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0009a96c: add byte ptr [eax], al; add byte ptr [eax - 0x74fb9575], dl; push edx; or al, 0x83; ret; 
0x000d3875: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x00154a77: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; jl 0x154aa2; sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x0008993e: add byte ptr [eax], al; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000aceac: add byte ptr [eax], al; add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x000d9501: add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x00041cf2: add byte ptr [eax], al; add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x000bd3b1: add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x000c828c: add byte ptr [eax], al; add byte ptr [eax - 0x7cfbac75], dl; ret; 
0x000ea2bc: add byte ptr [eax], al; add byte ptr [eax - 0x7cfe397d], dl; ret 0x8801; 
0x001521c1: add byte ptr [eax], al; add byte ptr [eax - 0x7cff8973], al; ret 0xd101; 
0x00132e8c: add byte ptr [eax], al; add byte ptr [eax - 0x8c418], dl; jmp dword ptr [esi - 0x70]; 
0x0013330c: add byte ptr [eax], al; add byte ptr [eax - 0xd4418], dl; jmp dword ptr [esi - 0x70]; 
0x00094e2d: add byte ptr [eax], al; add byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00025881: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00118c31: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003c181: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbe1: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c121: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002bac5: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2baf0; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002d071: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2d09c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e441: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2e46c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00186159: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0007aafa: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6df7d], cl; call dword ptr [eax - 0x73]; 
0x0004715c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x0002ffb9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00084796: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00103b32: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014c94e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002300a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0009a702: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x0014bfc6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00081898: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a34], 0; ret; 
0x0009eb54: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00089499: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00165e2b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000779d2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007aafc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6df7d], cl; call dword ptr [eax - 0x73]; 
0x001477fc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000d569d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0014cca5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009eb55: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014b859: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00089936: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000868a0: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x0009b734: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x96486], cl; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x0009eb21: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0004715e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x00086ec5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1a5482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000d491f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00165e2c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0019f17c: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x0019e67c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x19e6d0; lea eax, [ecx + 0xa]; ret; 
0x0019e68c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x19e6d0; lea eax, [ecx + 0xb]; ret; 
0x0019e69c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x19e6d0; lea eax, [ecx + 0xd]; ret; 
0x0019e6ac: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x19e6d0; lea eax, [ecx + 0xe]; ret; 
0x0019e6bc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x19e6d0; lea eax, [ecx + 0xf]; ret; 
0x0019e60c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 1; jl 0x19e6d0; lea eax, [ecx + 1]; ret; 
0x0019e65c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x19e6d0; lea eax, [ecx + 7]; ret; 
0x0019e66c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x19e6d0; lea eax, [ecx + 9]; ret; 
0x000922ae: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000744ad: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002ffbb: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002603c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0014b844: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x000911fc: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005873c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00084798: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0005e5e4: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00137e4c: add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000bad5c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bb4bc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bad7c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bad4c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bb4dc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bb02c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb03c: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x001881cc: add byte ptr [eax], al; add byte ptr [eax], al; call 0x17d639; add ebx, 0x46403; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008ac30: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014c950: add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00093bdb: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; ret; 
0x000a2515: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000e8997: add byte ptr [eax], al; add byte ptr [eax], al; cmove edx, eax; mov eax, edx; ret; 
0x0009767f: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000cd0c3: add byte ptr [eax], al; add byte ptr [eax], al; cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x0009208c: add byte ptr [eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x920a0; mov eax, 0x16; ret; 
0x00086d3c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017083c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x00086d6c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; ret; 
0x00085d8c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000e244c: add byte ptr [eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0002300c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00060989: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006077f: add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x00199d73: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19a4f0; pop ebx; ret; 
0x00199bac: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19a506; pop ebx; ret; 
0x0019b46b: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19b6b0; pop ebx; ret; 
0x0019cb25: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19cd50; pop ebx; ret; 
0x0019cbe2: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19cd70; pop ebx; ret; 
0x0019f94c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0019fbcc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x00125f24: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00102a2c: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0019f175: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d20a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a08a9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00163ab9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00088dc9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00085d85: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x0019e428: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e438: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e448: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e458: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e468: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x0019e3c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3f8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e408: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f946: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e418: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019d419: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019d429: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d439: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019d449: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019d459: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019d398: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x0019d3a9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x0019d3b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x0019d3c9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x0019d3d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x0019d3e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x0019d3f9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x0019d409: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0019d879: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019d869: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019d859: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019d849: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019d8e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0019d8d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0019d8c9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0019fbd9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0019d8b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019d8a9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0019d899: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0019d889: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x0019d388: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x0019ea88: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaa8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eab8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea28: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea48: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea58: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea78: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000ace56: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0019f919: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000ace68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x0019d469: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d20b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0019d057: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x0019f987: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea17: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d20c7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000ace47: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000baae7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000b6dfc: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ace5c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008a668: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00073fa7: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00086f1e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1a5c], 0; ret; 
0x0009a704: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x0008aa91: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0014bfc8: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00085c30: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00101f95: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00093b2a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00146702: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00101f8e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00085c37: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0008a66f: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00165721: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016e19c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0003cb0a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00165664: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x001656fc: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016570c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0005783d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000acebc: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000ace8c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0008189a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00086e9a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a54], 0; ret; 
0x0017d729: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00057720: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x00060982: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp], 0; jmp eax; 
0x0017fe64: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00092064: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x001265fc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012527c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003f6d6: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012a17c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0008ef5c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000f272c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xfffa; pop ebx; ret; 
0x0018615a: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000962f4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000a0c5c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x00140ca1: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x00163eca: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001a027c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00170874: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0019f02c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0019f97c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b99bc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0019df4c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008cf6c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000adaec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x000d6e2c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00124ffc: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0008ac24: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000975e5: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3b8c]; mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00125744: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0008b140: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00091cac: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001a02bc: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acefc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf0c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000aceec: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf1c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0013814c: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, dl; ret; 
0x0019288c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000bb4ca: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb01a: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008568b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x00163aaa: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x00171d2b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000df76b: add byte ptr [eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00094eaa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00061a1b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008a77b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000f270b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x00080d7a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20da: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0008e19a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d20ea: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d20fa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d210a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d211a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d212a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0013622b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0014c75b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000acecb: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0019b36a: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x00131cbb: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0004150b: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0007b4d3: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0009eb56: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008949b: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00199a2c: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0003fcfd: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00116064: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000b2c3c: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0010bca1: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000b717c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0019fb0c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0016f9a6: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00165e2d: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00025577: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00085f7c: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00164a9c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0009600c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov esi, dword ptr [eax + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000a0bd4: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x000a0c8c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00086ec6: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1a54], eax; cmp eax, 1; jg 0x86ee0; ret; 
0x000e059c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00179e34: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0019a86c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000bb16c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0003cb10: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012d16c: add byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0018e61d: add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0008e175: add byte ptr [eax], al; add byte ptr [eax], dl; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x0003c5d3: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x00178c94: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x000e7892: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x1c; ret; 
0x001714de: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000577f9: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x0019a4da: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0016da58: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x0016d5ef: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0012336f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x3c; ret; 
0x00094600: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00081843: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x000d2d3d: add byte ptr [eax], al; add byte ptr [ebp + 0x15], dh; add esp, 0x28; pop ebx; ret; 
0x0003c7ed: add byte ptr [eax], al; add byte ptr [ebp + 0x15], dh; add esp, 0x98; pop ebx; ret; 
0x0016d541: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0007fca4: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x001157d2: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0013e9a0: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0010c549: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000e8b49: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x000d44ba: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x38; pop ebx; ret; 
0x00116c9f: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005bea7: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x78; pop ebx; ret; 
0x000d1eca: add byte ptr [eax], al; add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0011c08f: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x1018; pop ebx; ret; 
0x0009a7b7: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00170dba: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000964b6: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x2c; ret; 
0x000575aa: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00127626: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x00096982: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x18; pop ebx; ret; 
0x000d6d04: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00096722: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x2c; ret; 
0x001197e5: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008b06c: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00119542: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00121773: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001279a1: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x00127501: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x0013621c: add byte ptr [eax], al; add byte ptr [ebp + 0x24], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003cd91: add byte ptr [eax], al; add byte ptr [ebp + 0x25], dh; add esp, 0x128; pop ebx; ret; 
0x0019f176: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x00170836: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x00085d86: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x0019b396: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bf52f: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x000d6c6c: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00140a0f: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x0003c05c: add byte ptr [eax], al; add byte ptr [ebp + 0x2a], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003d496: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0019cd40: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0016f109: add byte ptr [eax], al; add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x00177108: add byte ptr [eax], al; add byte ptr [ebp + 0x2f], dh; add esp, 0x18; pop ebx; ret; 
0x00170e3f: add byte ptr [eax], al; add byte ptr [ebp + 0x30], dh; add esp, 0x18; pop ebx; ret; 
0x0017738e: add byte ptr [eax], al; add byte ptr [ebp + 0x31], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001649e1: add byte ptr [eax], al; add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003c993: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x28; pop ebx; ret; 
0x0017182b: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x18; pop ebx; ret; 
0x00095649: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000965bc: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00170c7b: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x18; pop ebx; ret; 
0x000df607: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x0010bdc0: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00040f2e: add byte ptr [eax], al; add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x0009afca: add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0019b66e: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000d701a: add byte ptr [eax], al; add byte ptr [ebp + 0x3e6c8a], cl; add byte ptr [ebp - 0x15df736e], cl; call dword ptr [ecx + 0x52]; 
0x00170ed1: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x18; pop ebx; ret; 
0x000d4116: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x28; pop ebx; ret; 
0x0010bf58: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0014080f: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x00140ee7: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x1c; ret; 
0x0007d016: add byte ptr [eax], al; add byte ptr [ebp + 0x41890442], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x0008826e: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000f222c: add byte ptr [eax], al; add byte ptr [ebp + 0x43], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0010ab42: add byte ptr [eax], al; add byte ptr [ebp + 0x44], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0019a4a6: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0008cda9: add byte ptr [eax], al; add byte ptr [ebp + 0x47488], cl; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0019d3ca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x0019fbda: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x0019d8aa: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x0019d86a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x0019d43a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x0019d84a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x0019d45a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x0019d3ea: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x0019d89a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x0019d8ca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x0019d8ba: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x0014096f: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x0003c6ca: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00088100: add byte ptr [eax], al; add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0017a345: add byte ptr [eax], al; add byte ptr [ebp + 0x4a], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000956eb: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00096227: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x38; pop ebx; ret; 
0x00102d18: add byte ptr [eax], al; add byte ptr [ebp + 0x4c], dh; add esp, 0x28; pop ebx; ret; 
0x00096b00: add byte ptr [eax], al; add byte ptr [ebp + 0x4d], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0016d231: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0013560b: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x001356d7: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x00102ec1: add byte ptr [eax], al; add byte ptr [ebp + 0x53], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010a83f: add byte ptr [eax], al; add byte ptr [ebp + 0x53], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001150f0: add byte ptr [eax], al; add byte ptr [ebp + 0x56], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0017f757: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000e23d8: add byte ptr [eax], al; add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00117f5c: add byte ptr [eax], al; add byte ptr [ebp + 0x58], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00102dbc: add byte ptr [eax], al; add byte ptr [ebp + 0x58], dh; add esp, 0x28; pop ebx; ret; 
0x0014fd94: add byte ptr [eax], al; add byte ptr [ebp + 0x5a978dc0], al; cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x001408af: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x00117c5f: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000d41cf: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001708d4: add byte ptr [eax], al; add byte ptr [ebp + 0x60], dh; add esp, 0x18; pop ebx; ret; 
0x000ace69: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x001356fb: add byte ptr [eax], al; add byte ptr [ebp + 0x6a], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016a270: add byte ptr [eax], al; add byte ptr [ebp + 0x73], dh; add esp, 0x18; pop ebx; ret; 
0x000d4912: add byte ptr [eax], al; add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x0007b336: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0003c234: add byte ptr [eax], al; add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00133376: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x0019d207: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00118f59: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x001289c4: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x0016d4c5: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x0010c755: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116f15: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x0004256a: add byte ptr [eax], al; add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x000a08aa: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; ret; 
0x00163aba: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 1; ret; 
0x00088dca: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x00086d9a: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; xor eax, eax; ret; 
0x00025571: add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00025550: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003fe3d: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0016e8dc: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x0003bd2c: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0009126b: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x0009a2e0: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000d2e6a: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x0005dd84: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x00088ae5: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001160cb: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop esi; pop edi; ret; 
0x0003d23c: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b26c: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00171ef2: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000d71da: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000e0b5d: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x38; mov eax, edx; pop ebx; ret; 
0x0003d49d: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x00171fb3: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x00115251: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x00144839: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x0005dcfd: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0011a662: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000e09cc: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003af79: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x0005274e: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a0405: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003c76e: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0019b6a2: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x000942fe: add byte ptr [eax], al; add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x000a94a5: add byte ptr [eax], al; add byte ptr [ebp - 0x137c00ba], cl; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x00024b90: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x00056625: add byte ptr [eax], al; add byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x73]; 
0x000d0c14: add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x0019f91a: add byte ptr [eax], al; add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x0007fd9e: add byte ptr [eax], al; add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x0011c0f8: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x0019d46a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x00124fc8: add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a14e9: add byte ptr [eax], al; add byte ptr [ebp - 0x6575f80], cl; call dword ptr [eax + 0x68]; 
0x000a0fe0: add byte ptr [eax], al; add byte ptr [ebp - 0x657a380], cl; call dword ptr [eax + 0x68]; 
0x0006c12f: add byte ptr [eax], al; add byte ptr [ebp - 0x67c1fb6], cl; pop edx; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x00146c14: add byte ptr [eax], al; add byte ptr [ebp - 0x6941d7d], cl; call dword ptr [eax - 0x73]; 
0x0005cf0d: add byte ptr [eax], al; add byte ptr [ebp - 0x6973f7b], cl; call dword ptr [ebx + 0x50]; 
0x00033e1a: add byte ptr [eax], al; add byte ptr [ebp - 0x69a897d], cl; call dword ptr [esi - 1]; 
0x000398f4: add byte ptr [eax], al; add byte ptr [ebp - 0x6aa9655], cl; inc dword ptr [ebx - 0x7c72f314]; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00098b01: add byte ptr [eax], al; add byte ptr [ebp - 0x6af3579], cl; call dword ptr [eax - 0x73]; 
0x000905cb: add byte ptr [eax], al; add byte ptr [ebp - 0x6b0397a], cl; call dword ptr [eax - 0x73]; 
0x0008f7f1: add byte ptr [eax], al; add byte ptr [ebp - 0x6b0417a], cl; call dword ptr [eax - 0x73]; 
0x0007aafe: add byte ptr [eax], al; add byte ptr [ebp - 0x6df7d], cl; call dword ptr [eax - 0x73]; 
0x0008eeab: add byte ptr [eax], al; add byte ptr [ebp - 0x7152372], cl; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019e409: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x0019e459: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x0019e3f9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x0019eab9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x0019ea59: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x0019d389: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x0007d598: add byte ptr [eax], al; add byte ptr [ebp - 0x73371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x001218a6: add byte ptr [eax], al; add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001217f6: add byte ptr [eax], al; add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00102d96: add byte ptr [eax], al; add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00103012: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cf2: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00102f4b: add byte ptr [eax], al; add byte ptr [ebp - 0x74d18a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102e9b: add byte ptr [eax], al; add byte ptr [ebp - 0x74d18a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0011b007: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aab7: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010acd7: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017d723: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x000df67e: add byte ptr [eax], al; add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0009444c: add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x00098215: add byte ptr [eax], al; add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x667e779]; call dword ptr [eax - 0x73]; 
0x000ad29d: add byte ptr [eax], al; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x00127000: add byte ptr [eax], al; add byte ptr [ebp - 0x7ce18b2e], al; in al, dx; or byte ptr [ebp - 0x64b1379], cl; call dword ptr [eax + 0x55]; 
0x0009dc99: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x00199039: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x0018e729: add byte ptr [eax], al; add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x001721d4: add byte ptr [eax], al; add byte ptr [ebp - 0x8f36e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0007b33c: add byte ptr [eax], al; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0019cff9: add byte ptr [eax], al; add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x0016f2a5: add byte ptr [eax], al; add byte ptr [ebp - 0xc1a037d], cl; call dword ptr [eax - 0x73]; 
0x00169865: add byte ptr [eax], al; add byte ptr [ebp - 0xc74137d], cl; call dword ptr [eax - 0x73]; 
0x0015285a: add byte ptr [eax], al; add byte ptr [ebp - 0xdfb4379], cl; call dword ptr [eax + 0x6a]; 
0x00152d56: add byte ptr [eax], al; add byte ptr [ebp - 0xdfb437d], cl; call dword ptr [eax + 0x6a]; 
0x00102cb2: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00117728: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x0013616d: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x00096286: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00145e46: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x000950d9: add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0007a04d: add byte ptr [eax], al; add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0010cfac: add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x0011b4b0: add byte ptr [eax], al; add byte ptr [ebx + 0x10c80], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x000e23ac: add byte ptr [eax], al; add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00033ce2: add byte ptr [eax], al; add byte ptr [ebx + 0x16c80], cl; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000328d2: add byte ptr [eax], al; add byte ptr [ebx + 0x16c80], cl; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x001298e8: add byte ptr [eax], al; add byte ptr [ebx + 0x18], bh; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0016e43d: add byte ptr [eax], al; add byte ptr [ebx + 0x18c83], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016e4cd: add byte ptr [eax], al; add byte ptr [ebx + 0x19883], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0019dfed: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019f00d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019e6ad: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0010c3d8: add byte ptr [eax], al; add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000dcc1c: add byte ptr [eax], al; add byte ptr [ebx + 0x29042474], cl; retf 0x490f; ret 0xc101; 
0x000db80d: add byte ptr [eax], al; add byte ptr [ebx + 0x2904247c], cl; retf 0x490f; ret 0x348d; 
0x0011993d: add byte ptr [eax], al; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x0019dfdd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019effd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019e69d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x0008df02: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d934: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x001265c3: add byte ptr [eax], al; add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00125243: add byte ptr [eax], al; add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000a354d: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0012d59a: add byte ptr [eax], al; add byte ptr [ebx + 0x3910247c], cl; jl 0x12d5c8; sbb al, 0xf; xchg esp, eax; ret; 
0x000c9746: add byte ptr [eax], al; add byte ptr [ebx + 0x39302444], cl; ret; 
0x0019dfcd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019efed: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019e68d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0012a205: add byte ptr [eax], al; add byte ptr [ebx + 0x3d096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001020cc: add byte ptr [eax], al; add byte ptr [ebx + 0x3fac93], cl; add byte ptr [ecx], bh; ret 0x850f; 
0x00075eb0: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4850], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000001; ret; 
0x00081ace: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396574c9], al; ret; 
0x000795ae: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x397574c9], al; ret; 
0x0007ecb5: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x4a840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007678d: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x2d7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00079bae: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add eax, 0x39000001; ret; 
0x0008097e: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, 0x39000001; ret; 
0x0007e402: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; jmp 0x3907e418; ret; 
0x0007efae: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebp, 0x39000000; ret; 
0x0007824b: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x394874c9], al; ret; 
0x00166455: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x166485; sbb al, 0x53; call dword ptr [eax]; 
0x0016ee5c: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x16ee8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00164a9d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0004153f: add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x000a053c: add byte ptr [eax], al; add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x000cc310: add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x000ccc7f: add byte ptr [eax], al; add byte ptr [ebx + 0x48db455], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x0013064d: add byte ptr [eax], al; add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x0019dfbd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x0019efdd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0019e67d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00170875: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00169797: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016c217: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016b847: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0014d815: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0016ccb7: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0009afed: add byte ptr [eax], al; add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00125c28: add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000341a8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034178: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034148: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034088: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340e8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033ff8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340b8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034058: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034258: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034028: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034118: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fc8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00076a65: add byte ptr [eax], al; add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0007892a: add byte ptr [eax], al; add byte ptr [ebx + 0x575304ec], al; push esi; call dword ptr [eax + 0x2c]; 
0x0019dfad: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x0019efcd: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0019e66d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x000770ad: add byte ptr [eax], al; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0002603d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007460b: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000744ae: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0009a1e1: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x001153d1: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0016453c: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00164677: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000ccea3: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001051d0: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x00116aeb: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000d1f24: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000f9f02: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x00148262: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00131e5d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x001a0947: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00024f6c: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00076ea6: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00073c9d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00041e30: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; sub eax, ecx; ret; 
0x0019f02d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0012a70d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x0014b845: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0013d32d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003c6d2: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000f2cd6: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x0004249a: add byte ptr [eax], al; add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x00163ecb: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0019df9d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x0019efbd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0019e65d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x0009a6b1: add byte ptr [eax], al; add byte ptr [ebx + 0x6c8b28ec], al; and al, 0x3c; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0009600d: add byte ptr [eax], al; add byte ptr [ebx + 0x708b0cec], al; or al, 0xff; jo 0x9601d; call dword ptr [eax]; 
0x0013e8d4: add byte ptr [eax], al; add byte ptr [ebx + 0x7422373c], al; ret; 
0x00081eb4: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00163dff: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00078b10: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x78b28; push esi; call dword ptr [ebx + 0x2c]; 
0x0016c548: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x00089938: add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x00124ffd: add byte ptr [eax], al; add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00057966: add byte ptr [eax], al; add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x0003422b: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000341eb: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0011a79e: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e0: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x11a988; call eax; 
0x001250d8: add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0015f7c0: add byte ptr [eax], al; add byte ptr [ebx + 0xa080], cl; add byte ptr [ebx + 0xf0b023c], al; xchg ebp, eax; ret 0xc483; 
0x001549ab: add byte ptr [eax], al; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x0014bbf6: add byte ptr [eax], al; add byte ptr [ebx + 0xa085], cl; add byte ptr [ecx], dh; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x00118d10: add byte ptr [eax], al; add byte ptr [ebx + 0xa0bd], cl; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010b23c: add byte ptr [eax], al; add byte ptr [ebx + 0xa4248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0008a85e: add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0010b243: add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010b24a: add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019dffd: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019f01d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0009208d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x0019e6bd: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x0010b574: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b4fe: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00128a0a: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000df66d: add byte ptr [eax], al; add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00141cb4: add byte ptr [eax], al; add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x00123dff: add byte ptr [eax], al; add byte ptr [ebx + 0xd0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00128cb5: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00128cfc: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0010119d: add byte ptr [eax], al; add byte ptr [ebx + 0xf00903c], al; test dword ptr [edx - 0x7c000005], esi; ret 0x8301; 
0x0015f432: add byte ptr [eax], al; add byte ptr [ebx + 0xf0b023c], al; xchg ebp, eax; ret 0xc483; 
0x0017f38d: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0008d92f: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00103c6f: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eef3: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00104073: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00185fbb: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x0016b04f: add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x0016ce36: add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0017f331: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00164040: add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0010407f: add byte ptr [eax], al; add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x001a2daa: add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x000868a2: add byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x000819dd: add byte ptr [eax], al; add byte ptr [ebx - 0x17afe714], al; mov bh, 0x39; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cbfbc: add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0005d130: add byte ptr [eax], al; add byte ptr [ebx - 0x24917e1], cl; std; jmp ptr [ecx]; ret; 
0x001196e3: add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0008ea49: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00170a6c: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0011c71b: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0014aed9: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x000ff9b6: add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x00054f68: add byte ptr [eax], al; add byte ptr [ebx - 0x36374b], cl; call dword ptr [edi - 1]; 
0x000cfb28: add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000ce0d0: add byte ptr [eax], al; add byte ptr [ebx - 0x367b43], cl; dec dword ptr [ebx - 0x35ff73]; dec dword ptr [ecx - 0x47bb7226]; add al, 0x81; ret 0; 
0x000f48ed: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0005053f: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000260e3: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00058ffd: add byte ptr [eax], al; add byte ptr [ebx - 0x3d7cfbb6], cl; add al, 0x83; ret; 
0x00085b84: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x85b80; ret; 
0x00088902: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x88910; ret; 
0x0005e5e5: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0003fe7c: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0008a92b: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop esi; pop edi; ret; 
0x001613d6: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0c7ec], cl; ret; 
0x001789dd: add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; nop; leave; stc; call dword ptr [edi + 0x56]; 
0x00177960: add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; out dx, eax; jne 0x177964; call dword ptr [edi + 0x56]; 
0x000ede60: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ea80c: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x57]; 
0x000ea48f: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x0003c3d2: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00106835: add byte ptr [eax], al; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; and byte ptr [edi - 7], dl; call dword ptr [eax - 0x18]; 
0x0010b8d9: add byte ptr [eax], al; add byte ptr [ebx - 0x479fdba4], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e9c2c: add byte ptr [eax], al; add byte ptr [ebx - 0x48b43], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [esi - 0x75]; 
0x00138ad3: add byte ptr [eax], al; add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x0012a015: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x00177922: add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x56]; 
0x00092f9f: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x00092389: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00124540: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf00808], al; ret 0x940f; 
0x000c5a0e: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xef39; 
0x00049fea: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xf539; 
0x00158173: add byte ptr [eax], al; add byte ptr [ebx - 0x6e72f714], al; hlt; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x00076310: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001354ca: add byte ptr [eax], al; add byte ptr [ebx - 0x7172fb14], al; test byte ptr [edi - 7], ah; dec dword ptr [ebp - 0x698707a]; call dword ptr [ecx - 0x77]; 
0x0016eea5: add byte ptr [eax], al; add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000dfb88: add byte ptr [eax], al; add byte ptr [ebx - 0x72afdba4], cl; dec esp; and al, 0x1c; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0004c965: add byte ptr [eax], al; add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x00028d36: add byte ptr [eax], al; add byte ptr [ebx - 0x72bbdb8c], cl; xchg ah, ch; jp 0x28d3b; call dword ptr [eax - 0x73]; 
0x00045d95: add byte ptr [eax], al; add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x00049005: add byte ptr [eax], al; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x0009b4c2: add byte ptr [eax], al; add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x00124738: add byte ptr [eax], al; add byte ptr [ebx - 0x72ffcabc], cl; push eax; jmp 0xf1441c9; xchg edi, eax; ret 0xf883; 
0x0019e60d: add byte ptr [eax], al; add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x00125745: add byte ptr [eax], al; add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d6e2d: add byte ptr [eax], al; add byte ptr [ebx - 0x749fdba4], cl; push esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000c2904: add byte ptr [eax], al; add byte ptr [ebx - 0x74b7dbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x000c8f04: add byte ptr [eax], al; add byte ptr [ebx - 0x74c3dbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x00185f2c: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001290fc: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00125062: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0005da02: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00036b5d: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbbc], cl; push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x0004d3b4: add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x00046824: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x0004d88f: add byte ptr [eax], al; add byte ptr [ebx - 0x76bfdb8c], cl; ret; 
0x00046dfb: add byte ptr [eax], al; add byte ptr [ebx - 0x76cfdb8c], cl; ret; 
0x001369a3: add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret; 
0x0013b865: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0014739d: add byte ptr [eax], al; add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x00088ec8: add byte ptr [eax], al; add byte ptr [ebx - 0x76efdbac], cl; ret; 
0x0002c2ea: add byte ptr [eax], al; add byte ptr [ebx - 0x76f3db84], cl; ret 0xfa29; 
0x000dd84b: add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdb8c], cl; ret 0x448b; 
0x000dd993: add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x001196be: add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbbc], cl; ret; 
0x000aadcd: add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x00171ad0: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000f4cbb: add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0003f763: add byte ptr [eax], al; add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xffb8; 
0x000e3715: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; push edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x0003076d: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; xor edi, dword ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0015ee93: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; loope 0x15ef0e; stc; call dword ptr [eax - 0x18]; 
0x00138255: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; out 0x38, eax; stc; call dword ptr [eax + 0x53]; 
0x000d5c5e: add byte ptr [eax], al; add byte ptr [ebx - 0x7acbdbbc], cl; ror byte ptr [edi], 0x84; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00171f29: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0014d214: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6ac667f], cl; call dword ptr [eax + 0x52]; 
0x0019f0d0: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000a079d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x0016b575: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; add bl, byte ptr [ecx - 7]; call dword ptr [edi + 0x56]; 
0x000e5625: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; push edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x0016e29d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec esp; sal ebx, cl; call dword ptr [eax - 0x73]; 
0x000d520d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; pop eax; push ebp; stc; call dword ptr [eax + 0x56]; 
0x0009c14c: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb14], al; mov cl, 0x51; stc; call dword ptr [eax + 0x56]; 
0x0004d3bf: add byte ptr [eax], al; add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x000c8f0f: add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x0004682f: add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c290f: add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00105e65: add byte ptr [eax], al; add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x0015ea3c: add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0002918e: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0008bb3d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8b04; 
0x0014d115: add byte ptr [eax], al; add byte ptr [ebx - 0x7f72f314], al; dec esp; ret 0xfff9; 
0x00058e4d: add byte ptr [eax], al; add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x00058b8d: add byte ptr [eax], al; add byte ptr [ebx - 0x934b], cl; dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0x7401; 
0x0013b1ad: add byte ptr [eax], al; add byte ptr [ebx - 0x9363], cl; dec dword ptr [ebp + 0x48d4904]; ret; 
0x00076804: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x76816; push esi; call dword ptr [ebx + 0x1c]; 
0x000a0b20: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa0b4e; call eax; 
0x0017ec1e: add byte ptr [eax], al; add byte ptr [ebx - 0xaefb14], al; je 0x17ec4c; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x00175dbd: add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000a0c8d: add byte ptr [eax], al; add byte ptr [ebx - 0xaff714], al; jae 0xa0cbb; call edx; 
0x000bc88e: add byte ptr [eax], al; add byte ptr [ebx - 0xcbb7d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000a5ff3: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00060c3d: add byte ptr [eax], al; add byte ptr [ebx], al; or al, 0x86; jmp ecx; 
0x0015332f: add byte ptr [eax], al; add byte ptr [ebx], bh; inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], bl; ret 0x8014; 
0x0016b53c: add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0015334d: add byte ptr [eax], al; add byte ptr [ebx], bh; or dh, byte ptr [esp + ecx*8 - 0x7d]; ret 0x8014; 
0x00128cba: add byte ptr [eax], al; add byte ptr [ecx + 0x100baf7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117f7a: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00089c73: add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e14c4: add byte ptr [eax], al; add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010c1ea: add byte ptr [eax], al; add byte ptr [ecx + 0x18c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0009c16f: add byte ptr [eax], al; add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000f2773: add byte ptr [eax], al; add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xf27e0; ret; 
0x000564d4: add byte ptr [eax], al; add byte ptr [ecx + 0x29c789f2], cl; ret 0xb589; 
0x001273f7: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17c7dba4], 0xd7; adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001283a7: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x27; add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00127a67: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x67; or al, 0xf6; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00126f79: add byte ptr [eax], al; add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg eax, eax; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00027b24: add byte ptr [eax], al; add byte ptr [ecx + 0x31342454], cl; ror byte ptr [ebp - 0x6c71869], cl; call dword ptr [edx + 0x50]; 
0x0008e3bd: add byte ptr [eax], al; add byte ptr [ecx + 0x31582444], cl; rcl byte ptr [edx - 0x18], 0x44; ret 0xffff; 
0x0016d4fc: add byte ptr [eax], al; add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x000acebd: add byte ptr [eax], al; add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x00118ff0: add byte ptr [eax], al; add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d768: add byte ptr [eax], al; add byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0005ed04: add byte ptr [eax], al; add byte ptr [ecx + 0x3910247c], cl; ret; 
0x00069c84: add byte ptr [eax], al; add byte ptr [ecx + 0x3918246c], cl; ret; 
0x00120fe5: add byte ptr [eax], al; add byte ptr [ecx + 0x39d8f7f8], cl; ret; 
0x0008a99a: add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x000ffcaf: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x00127377: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001280f7: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0005783e: add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x00091066: add byte ptr [eax], al; add byte ptr [ecx + 0x45789fb], cl; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0002785f: add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x0016ea7c: add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00118d16: add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118fb5: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009b613: add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x00076460: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000b427d: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000766a0: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0008f55b: add byte ptr [eax], al; add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902cb: add byte ptr [eax], al; add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x0012452f: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x00092199: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008930b: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000887b1: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00089ad1: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0017a9c3: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008cff1: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009223e: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fd3b: add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0003b4ac: add byte ptr [eax], al; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x0009b736: add byte ptr [eax], al; add byte ptr [ecx + 0x96486], cl; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x0003c45b: add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e23d3: add byte ptr [eax], al; add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000917bd: add byte ptr [eax], al; add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0003c434: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0009142a: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x00051352: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00128c64: add byte ptr [eax], al; add byte ptr [ecx - 0x10019], al; jmp dword ptr [ebp - 0x5f]; 
0x0016af33: add byte ptr [eax], al; add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x0006abec: add byte ptr [eax], al; add byte ptr [ecx - 0x16abdbbc], cl; ret; 
0x001569f2: add byte ptr [eax], al; add byte ptr [ecx - 0x16ebdba4], cl; mov dword ptr [0xe8fffffe], eax; in eax, dx; sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x000c5ea4: add byte ptr [eax], al; add byte ptr [ecx - 0x207bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0008faa2: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x000917c2: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcefbad], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x001a66c9: add byte ptr [eax], al; add byte ptr [ecx - 0x2ef3dba4], cl; call 0x891f2959; ret; 
0x0009237c: add byte ptr [eax], al; add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00054dda: add byte ptr [eax], al; add byte ptr [ecx - 0x36274b], cl; dec dword ptr [edi]; dec edi; ret 0xff31; 
0x000ce38c: add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; call dword ptr [eax - 0x75]; 
0x00053fdc: add byte ptr [eax], al; add byte ptr [ecx - 0x36576b], cl; call dword ptr [eax - 0x75]; 
0x000cf94c: add byte ptr [eax], al; add byte ptr [ecx - 0x365f43], cl; jmp ptr [ecx]; ret 0x3b8; 
0x000cf986: add byte ptr [eax], al; add byte ptr [ecx - 0x365f4b], cl; dec dword ptr [ecx - 0x366f7b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0xff31; 
0x001719fb: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x001719bb: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x0014cf42: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x00057653: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x000934c3: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x0008aa92: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x00128b5f: add byte ptr [eax], al; add byte ptr [ecx - 0x44e7dba4], cl; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c4146: add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x0003d2e2: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006fe80: add byte ptr [eax], al; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0006f4ff: add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; 
0x0006f4ff: add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; ret 0xbc3; 
0x000c11f6: add byte ptr [eax], al; add byte ptr [ecx - 0x4fbb7226], cl; add al, 0x81; ret 0; 
0x00066c63: add byte ptr [eax], al; add byte ptr [ecx - 0x5976b], cl; call dword ptr [ebx - 0x75]; 
0x00088812: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8881c; add byte ptr [eax], al; ret; 
0x00088849: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9af3b0], cl; js 0x88853; add byte ptr [eax], al; ret; 
0x00123f10: add byte ptr [eax], al; add byte ptr [ecx - 0x7487dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00088808: add byte ptr [eax], al; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00170a44: add byte ptr [eax], al; add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x316f74c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00088725: add byte ptr [eax], al; add byte ptr [ecx - 0x7611142d], cl; ret 0xcceb; 
0x001488ac: add byte ptr [eax], al; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x001549b1: add byte ptr [eax], al; add byte ptr [ecx - 0x76297631], cl; ret; 
0x000d3536: add byte ptr [eax], al; add byte ptr [ecx - 0x762c763f], cl; mov esp, 0x8024; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x0006036d: add byte ptr [eax], al; add byte ptr [ecx - 0x76afdbbc], cl; ret; 
0x0015499f: add byte ptr [eax], al; add byte ptr [ecx - 0x76e3db84], cl; fisttp qword ptr [ebx + 0xc090]; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x00040a9e: add byte ptr [eax], al; add byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0012858b: add byte ptr [eax], al; add byte ptr [ecx - 0x76ebdb8c], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0009b465: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x000c5363: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdbac], cl; ret 0xf129; 
0x0008e3f8: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x0003f43b: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x00168baf: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0003f3fb: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x00128026: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x127fb9; ret 0x448b; 
0x00027b52: add byte ptr [eax], al; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x000de39a: add byte ptr [eax], al; add byte ptr [ecx - 0x7aefdb94], cl; fisttp dword ptr [edi]; dec edi; ret; 
0x0017d030: add byte ptr [eax], al; add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x00167f0a: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x68d057d], cl; call dword ptr [eax - 1]; 
0x0002c1b2: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x0003fcfe: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013ac30: add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x001045f4: add byte ptr [eax], al; add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00175c26: add byte ptr [eax], al; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x5f]; 
0x00104feb: add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003e6bf: add byte ptr [eax], al; add byte ptr [ecx - 0xffc2ac], cl; jae 0x3e6cd; call eax; 
0x000bc3a9: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000bc5e6: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x0008a915: add byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x000ba7d1: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x00136aa2: add byte ptr [eax], al; add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x00136c8f: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0x420f; 
0x0009b8aa: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x0017b8ae: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x18eb; 
0x000f9547: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x000a36a5: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000d3541: add byte ptr [eax], al; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x001a1279: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1073; 
0x001a0f55: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1473; 
0x001a6aec: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1673; 
0x001a6e31: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1873; 
0x00092ac5: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x2473; 
0x00027a98: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x0004a771: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000d4af4: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x470f; 
0x0011a023: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00093724: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6574; 
0x00092fa8: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6974; 
0x0009261b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x7e74; 
0x0013b69b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0011f6b5: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x000622b5: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00091ab7: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x850f; 
0x0014898b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xa875; 
0x000a3486: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a351b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x00052a30: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe73; 
0x00111f79: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xf72; 
0x0002b9e3: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0012ac58: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x0014b97d: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x00104bf2: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xe8e9; 
0x00047727: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0015180c: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x001371a5: add byte ptr [eax], al; add byte ptr [ecx], bh; sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x000d3be2: add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000f3ee0: add byte ptr [eax], al; add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x000f8001: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9eeb; 
0x000a8294: add byte ptr [eax], al; add byte ptr [ecx], ch; inc ebp; les ecx, ptr [ebx - 0x7bf03bbb]; ret; 
0x000cc7d3: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x00054da9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000db259: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000de75b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x000dc095: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x0009d0cc: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x48d; 
0x0004a637: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x00047160: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x0004df36: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5652; 
0x00045bd8: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x850f; 
0x000cb754: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000d9bbf: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000252b6: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc189; 
0x000d4691: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000475f8: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f297: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd089; 
0x000fecc8: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd101; 
0x000d7924: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x00132216: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd189; 
0x000a6da7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd301; 
0x000a7c75: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd601; 
0x000a4365: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd701; 
0x000de3fe: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd729; 
0x001a0d7a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe2c1; 
0x0005659f: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf329; 
0x000db1d3: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x00046158: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000dbf60: add byte ptr [eax], al; add byte ptr [ecx], ch; shr byte ptr [ecx], 1; ret; 
0x000938bb: add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x0014bbfc: add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x0008cf64: add byte ptr [eax], al; add byte ptr [ecx], dh; fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x001608fd: add byte ptr [eax], al; add byte ptr [ecx], dh; fucomi st(3); adc cl, byte ptr [ebp - 0x7cffd98c]; ret; 
0x00092243: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ab7a: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009fa51: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0009fb28: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00052329: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6df0fe07], cl; ret 0xff19; 
0x00103c74: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f3dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008eef8: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00044aef: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xf3b0bf7], cl; xchg ebp, eax; ret 0xe083; 
0x0008ebe7: add byte ptr [eax], al; add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008a513: add byte ptr [eax], al; add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x0008cf9f: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [eax + 0xf0], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008cef9: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x00104078: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00089b05: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ebp - 0xf47efa8], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008c211: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ebx + 0x1ba241c], 0; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0004f7d3: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ebx - 0x74dbdbac], -0x64; ret 0x8d2c; 
0x00091a29: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00086ec7: add byte ptr [eax], al; add byte ptr [edi + 0x1a5482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003eaaf: add byte ptr [eax], al; add byte ptr [edi + 0x1fa8311], al; jg 0x3eb70; call eax; 
0x0002510f: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x0014c85c: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; ret; 
0x000b2c3d: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d1db4: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00116065: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d1ed2: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x00196822: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00194172: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0019a882: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00192932: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0019b388: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x0019b6b3: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000d1ea2: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x00024b5d: add byte ptr [eax], al; add byte ptr [edi + edx - 0x73], dh; nop; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x000deeaf: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x0006a5cd: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x9489; 
0x0013d0ea: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret; 
0x0009777f: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003ddf1: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x000decb1: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0x4489; 
0x0011ea2c: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x00097680: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x0008a896: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000f2798: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x90c3; 
0x000d4921: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00093bdc: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x2ec3; 
0x001160bd: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x548b; 
0x000943b1: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x0009aa23: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ror dword ptr [eax + 0x3c1882], 0; ret; 
0x00137aed: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x000d2b87: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x000be1e8: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000c01b6: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x44c7; 
0x00042616: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000a2516: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x00176bb9: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x00041cc8: add byte ptr [eax], al; add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00060bb3: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x44; sub al, ah; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00101712: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x001375d5: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0013814d: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00041be7: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x000ba984: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000bad5d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000b6d6d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00041c7a: add byte ptr [eax], al; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00103d2d: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [edx - 0x7d000000], bh; jmp dword ptr [esi]; 
0x0019a2ad: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00199bad: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019b5ea: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0019a358: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0019a178: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x00199c48: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x00199fa2: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00199d74: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00199e7c: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0019b55e: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00164671: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x000409df: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0xa000000], ecx; ret 0xf03; 
0x00199df1: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x001153cb: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], esp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019a55d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], ebp; adc dl, dh; call dword ptr [ebx - 0x18]; 
0x0019436d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], ebx; jb 0x194367; call dword ptr [ebx - 0x18]; 
0x0019aa5d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], ecx; or al, 0xf2; call dword ptr [ebx - 0x18]; 
0x001051ca: add byte ptr [eax], al; add byte ptr [edi], cl; test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x00104979: add byte ptr [eax], al; add byte ptr [edi], cl; test ebp, ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x64f837d], cl; call dword ptr [eax - 0x73]; 
0x0019687d: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ebp; dec ebp; bnd call dword ptr [ebx - 0x18]; 
0x00085be0: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x000643c3: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x98e9; 
0x00063860: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xbd8b; 
0x000be868: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xf039; 
0x0012d9bb: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0007df2a: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x0007585f: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00075849: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x000e8cba: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xf8c1; 
0x0019b1df: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f27e8: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00163e38: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000f26c8: add byte ptr [eax], al; add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x0008b141: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000f26f1: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x0009249f: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000936c7: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009082a: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009288f: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009397d: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b96e: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000f2683: add byte ptr [eax], al; add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000f2650: add byte ptr [eax], al; add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x000898d2: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0017a9c8: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091cad: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008cff6: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0014825d: add byte ptr [eax], al; add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x000893cc: add byte ptr [eax], al; add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008bc69: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091a24: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba45: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089b00: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b3da: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c5: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092931: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089310: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008937f: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012a157: add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0008808d: add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x000bbdf0: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x00142974: add byte ptr [eax], al; add byte ptr [edx], al; add byte ptr [eax], al; add cl, ch; idiv bh; jmp dword ptr [ebp - 0x75]; 
0x0016f9a7: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00083e5d: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00165e2e: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00050c72: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000acefd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf0d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000aceed: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf1d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0019b0ad: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x34]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0018686d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000bac6f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000baf48: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000baf6d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x0008df0d: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0008cda4: add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0003c22f: add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00023253: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0003c2d9: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003d05f: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x00138b75: add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0x6608; 
0x00153ae0: add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000bb4cb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb01b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0017d1eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00163aab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x000aafab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00094eab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [eax + 4], edx; ret; 
0x0008aceb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x00080d7b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20db: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x0008e19b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; add esp, 0xc; ret; 
0x000d20eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d20fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d210b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d211b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d212b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x0017163b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x001663ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008a9ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x000df69b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000af4eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000acedb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0019b36b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x000e1b2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f310b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; pop esi; ret; 
0x0009c27b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x00047bec: add byte ptr [eax], al; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0019d058: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x0019f988: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019ea18: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000d20c8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x000ace48: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x000baae8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x000a0864: add byte ptr [eax], al; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x00088a39: add byte ptr [eax], al; add cl, al; call 0x1e90d4d; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x0009df4b: add byte ptr [eax], al; add cl, al; call 0xfda1866; inc edi; ret 0xc083; 
0x0009e16f: add byte ptr [eax], al; add cl, al; call 0xfda1a8a; inc edi; ret 0xc083; 
0x000a0187: add byte ptr [eax], al; add cl, al; call 0xfda3aa2; inc edi; ret 0x508d; 
0x000765ea: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x00024b6c: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x00123540: add byte ptr [eax], al; add cl, al; ret 0xf009; 
0x000c20dd: add byte ptr [eax], al; add cl, ch; cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x000476b6: add byte ptr [eax], al; add cl, ch; dec edx; in eax, 0xff; call dword ptr [eax + 0x31]; 
0x00142978: add byte ptr [eax], al; add cl, ch; idiv bh; jmp dword ptr [ebp - 0x75]; 
0x00144574: add byte ptr [eax], al; add cl, ch; imul edi, ebp, -1; jmp dword ptr [ebp - 0x5f]; 
0x00070234: add byte ptr [eax], al; add cl, ch; pop ds; jmp 0x7023a; dec dword ptr [ebx - 0x4f743]; jmp dword ptr [ebp - 0x75]; 
0x001080f0: add byte ptr [eax], al; add cl, ch; ret 0xffeb; 
0x0005ca36: add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x000337f0: add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x0008ffc3: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x000321f5: add byte ptr [eax], al; add cl, ch; ret; 
0x0013e18f: add byte ptr [eax], al; add cl, ch; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0006cd86: add byte ptr [eax], al; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x0006cd86: add byte ptr [eax], al; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x000df40f: add byte ptr [eax], al; add cl, ch; xchg ebp, eax; out 0xff, eax; call dword ptr [eax + 0x57]; 
0x000c3284: add byte ptr [eax], al; add cl, ch; xchg edx, eax; jecxz 0xc328a; call dword ptr [eax + 0x31]; 
0x0012c9f5: add byte ptr [eax], al; add dh, al; inc edx; jmp dword ptr [eax]; 
0x000f5440: add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0019e386: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x19e420; lea eax, [ecx + 8]; ret; 
0x0019e3af: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x19e450; lea eax, [ecx + 0xc]; ret; 
0x001a58f8: add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x000761ed: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0019c7eb: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x000b510d: add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x000f80b2: add byte ptr [eax], al; add dh, dh; ret 0x7540; 
0x00095069: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000409e5: add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0019eecc: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x0019f85f: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0019edcd: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x0019eef6: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x000f8206: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x000d9810: add byte ptr [eax], al; add dh, dh; ret; 
0x0002325f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00089ace: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000898cf: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009aa4f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x001334ab: add byte ptr [eax], al; add dword ptr [ebp - 0xaa0236e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00086e2c: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0008a916: add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0014b063: add byte ptr [eax], al; add dword ptr [ebx - 0x72efdb84], ecx; xchg edi, esp; cmp cl, bh; call dword ptr [eax + 0x53]; 
0x0016c218: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016b848: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00168bab: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0019ee10: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x0019ee39: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x0019f17e: add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x0019edc3: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x0019ede9: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x00169798: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012a41d: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00025572: add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x000ba7d2: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x001a02f7: add byte ptr [eax], al; add eax, edx; ret; 
0x00060c3e: add byte ptr [eax], al; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0019e4ac: add byte ptr [eax], al; add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x0019e67e: add byte ptr [eax], al; add edx, 0xa; jl 0x19e6d0; lea eax, [ecx + 0xa]; ret; 
0x0019e68e: add byte ptr [eax], al; add edx, 0xb; jl 0x19e6d0; lea eax, [ecx + 0xb]; ret; 
0x0019e5f9: add byte ptr [eax], al; add edx, 0xc; jl 0x19e6d0; lea eax, [ecx + 0xc]; ret; 
0x0019e69e: add byte ptr [eax], al; add edx, 0xd; jl 0x19e6d0; lea eax, [ecx + 0xd]; ret; 
0x0019e6ae: add byte ptr [eax], al; add edx, 0xe; jl 0x19e6d0; lea eax, [ecx + 0xe]; ret; 
0x0019e6be: add byte ptr [eax], al; add edx, 0xf; jl 0x19e6d0; lea eax, [ecx + 0xf]; ret; 
0x0019e60e: add byte ptr [eax], al; add edx, 1; jl 0x19e6d0; lea eax, [ecx + 1]; ret; 
0x0013e77a: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0019e596: add byte ptr [eax], al; add edx, 4; jl 0x19e6d0; lea eax, [ecx + 4]; ret; 
0x0019e65e: add byte ptr [eax], al; add edx, 7; jl 0x19e6d0; lea eax, [ecx + 7]; ret; 
0x0019e5cf: add byte ptr [eax], al; add edx, 8; jl 0x19e6d0; lea eax, [ecx + 8]; ret; 
0x0019e66e: add byte ptr [eax], al; add edx, 9; jl 0x19e6d0; lea eax, [ecx + 9]; ret; 
0x0003fcab: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000260e4: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000922b0: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000df4d4: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0011a79f: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e1: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11a988; call eax; 
0x00025862: add byte ptr [eax], al; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0007460c: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013d32e: add byte ptr [eax], al; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000be11f: add byte ptr [eax], al; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x00170a6d: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0012a70e: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x000744af: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041540: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x001196e4: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0002ffbd: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00033098: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008afea: add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x00157adb: add byte ptr [eax], al; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0007def7: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001153d2: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x00119f82: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00034b2c: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0016453d: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00164678: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x000bca06: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x001051d1: add byte ptr [eax], al; add esp, 0x64; pop ebx; pop esi; ret; 
0x00104eed: add byte ptr [eax], al; add esp, 0x68; pop ebx; ret; 
0x0008ade6: add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x0012e390: add byte ptr [eax], al; add esp, 0xc; push eax; push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012f552: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e173: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005818a: add byte ptr [eax], al; add esp, 0xc; ret; 
0x00051e29: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x000955d2: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0008ea4a: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014aeda: add byte ptr [eax], al; add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x000a5ff4: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0002603e: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0014b846: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x0003fe7d: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008a92c: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop esi; pop edi; ret; 
0x000911fe: add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005873e: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0011c71c: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003ae03: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0005e5e6: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012a8c4: add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0009454f: add byte ptr [eax], al; and eax, 0x39; cmp eax, 8; je 0x9455a; ret; 
0x0019d938: add byte ptr [eax], al; and eax, 0xf; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d969: add byte ptr [eax], al; and eax, 0xff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d9a0: add byte ptr [eax], al; and eax, 0xfff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d9d9: add byte ptr [eax], al; and eax, 0xffff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0011e94c: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x00137e4e: add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x0019d9ee: add byte ptr [eax], al; and eax, 1; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000344dd: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000bad5e: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bb4be: add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bad7e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bad4e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bb4de: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000ba08e: add byte ptr [eax], al; bsf edx, edx; call 0x17d651; add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d8e: add byte ptr [eax], al; bsf edx, edx; call 0x17d651; add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba903: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000bb02e: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb03e: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00041c18: add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000959d5: add byte ptr [eax], al; call 0x1029a0; mov dword ptr [ebx + 0x294], eax; add esp, 0x18; pop ebx; ret; 
0x00164386: add byte ptr [eax], al; call 0x11b5c0; mov dword ptr [ebx + 0xa60c], eax; add esp, 8; pop ebx; ret; 
0x0002ff80: add byte ptr [eax], al; call 0x1231b0; add esp, 0x1c; ret; 
0x0018a1ce: add byte ptr [eax], al; call 0x17d639; add ebx, 0x44683; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881ce: add byte ptr [eax], al; call 0x17d639; add ebx, 0x46403; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00186fd6: add byte ptr [eax], al; call 0x17d639; add ebx, 0x4723b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186e3e: add byte ptr [eax], al; call 0x17d639; add ebx, 0x47353; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186964: add byte ptr [eax], al; call 0x17d639; add ebx, 0x4762d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001867be: add byte ptr [eax], al; call 0x17d639; add ebx, 0x47753; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000b2b1e: add byte ptr [eax], al; call 0x17d651; add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a180f: add byte ptr [eax], al; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000381b3: add byte ptr [eax], al; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0011ee96: add byte ptr [eax], al; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x00157a76: add byte ptr [eax], al; call 0x23198; mov dword ptr [ebx + 0xa200], eax; add esp, 0x18; pop ebx; ret; 
0x00050650: add byte ptr [eax], al; call 0x50610; jmp eax; 
0x0009928b: add byte ptr [eax], al; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x00164f71: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x0017ab6d: add byte ptr [eax], al; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x000a0a08: add byte ptr [eax], al; call dword ptr [eax]; 
0x00023263: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001251e2: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x0003c3dc: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0009a12f: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x00102cb3: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003c39d: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00117729: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e2e50: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0013616e: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00096287: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0003eabb: add byte ptr [eax], al; call eax; 
0x0017d80f: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x001023c0: add byte ptr [eax], al; call ecx; 
0x0014c952: add byte ptr [eax], al; call esi; 
0x0009aa24: add byte ptr [eax], al; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x00093bdd: add byte ptr [eax], al; cmova eax, edx; ret; 
0x000e1298: add byte ptr [eax], al; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00137aee: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x00094522: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000f2656: add byte ptr [eax], al; cmove eax, edx; pop ebx; ret; 
0x00042617: add byte ptr [eax], al; cmove eax, edx; ret; 
0x000e8999: add byte ptr [eax], al; cmove edx, eax; mov eax, edx; ret; 
0x001050f7: add byte ptr [eax], al; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0008a897: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00073adf: add byte ptr [eax], al; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011ea2d: add byte ptr [eax], al; cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000cd0c5: add byte ptr [eax], al; cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x000b0d61: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x0019f12a: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x19f1b2; mov eax, 0xc; pop edi; ret; 
0x00199c42: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cc98: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x00024b8b: add byte ptr [eax], al; cmp dword ptr [ecx + 0x94], edx; jne 0x24b62; ret; 
0x000f2bfb: add byte ptr [eax], al; cmp dword ptr [ecx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000f278b: add byte ptr [eax], al; cmp dword ptr [edx + eax], 0x26; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x000f28eb: add byte ptr [eax], al; cmp dword ptr [edx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000df66e: add byte ptr [eax], al; cmp eax, -0x26; jne 0xdf681; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00102c17: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x102c28; pop ebx; pop esi; ret; 
0x00109925: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x109938; pop ebx; pop esi; ret; 
0x0010abf2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac62: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b062: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x0010c6d8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10c6e8; pop ebx; pop esi; ret; 
0x001152e2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x00115822: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00115f00: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x00116a97: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116aa8; pop ebx; pop esi; ret; 
0x00116b1e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x00116e38: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116e48; pop ebx; pop esi; ret; 
0x00117232: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x0011775e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c8e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x00118437: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x118448; pop ebx; pop esi; ret; 
0x001187f7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x118808; pop ebx; pop esi; ret; 
0x00119262: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192b2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0d2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x0011b127: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11b138; pop ebx; pop esi; ret; 
0x0011e587: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11e598; pop ebx; pop esi; ret; 
0x00120e89: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120e98; pop ebx; pop esi; ret; 
0x00122602: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x00122657: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122668; pop ebx; pop esi; ret; 
0x001249ce: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x00125072: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001251e9: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001252f2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x001263b2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x00126672: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x00183bf8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x183c08; pop ebx; pop esi; ret; 
0x0003c3e3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0005da12: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990de: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x00099767: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x99778; pop ebx; pop esi; ret; 
0x0009a136: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x000d4260: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x000e1461: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xe1470; pop ebx; pop esi; ret; 
0x000f2c37: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf2c80; add esp, 0x18; pop ebx; ret; 
0x00102cba: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00102466: add byte ptr [eax], al; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x00121be6: add byte ptr [eax], al; cmp eax, 1; jg 0x121bf8; add esp, 8; pop ebx; ret; 
0x0014cbfc: add byte ptr [eax], al; cmp eax, 1; jg 0x14cc28; add esp, 8; pop ebx; ret; 
0x0017717f: add byte ptr [eax], al; cmp eax, 1; jg 0x1771a8; add esp, 8; pop ebx; ret; 
0x001772ff: add byte ptr [eax], al; cmp eax, 1; jg 0x177328; add esp, 8; pop ebx; ret; 
0x00086ece: add byte ptr [eax], al; cmp eax, 1; jg 0x86ee0; ret; 
0x000d5455: add byte ptr [eax], al; cmp eax, 1; jg 0xd5480; add esp, 8; pop ebx; ret; 
0x0012372a: add byte ptr [eax], al; cmp ecx, 1; jg 0x123760; add esp, 8; pop ebx; ret; 
0x00125244: add byte ptr [eax], al; cmp edi, 1; je 0x125280; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001265c4: add byte ptr [eax], al; cmp edi, 1; je 0x126600; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0008a99b: add byte ptr [eax], al; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x000f2774: add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x0009208e: add byte ptr [eax], al; cmp edx, 1; je 0x920a0; mov eax, 0x16; ret; 
0x0005d8f0: add byte ptr [eax], al; cmp edx, 1; jg 0x5d930; add esp, 0x18; pop ebx; ret; 
0x0008a85f: add byte ptr [eax], al; cmp edx, 2; jbe 0x8a870; ret; 
0x0012ac59: add byte ptr [eax], al; cmp edx, ecx; jb 0x12ac63; cmp ecx, edx; sbb eax, eax; ret; 
0x0017ace5: add byte ptr [eax], al; cmp edx, ecx; jb 0x17acef; cmp ecx, edx; sbb eax, eax; ret; 
0x0014b97e: add byte ptr [eax], al; cmp edx, ecx; jne 0x14b970; add esp, 8; pop ebx; ret; 
0x0014c93d: add byte ptr [eax], al; das; je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0014cad5: add byte ptr [eax], al; das; je 0x14cb3e; mov byte ptr [ebx + 0x5ea8], 0; mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0014cb5d: add byte ptr [eax], al; das; je 0x14cbc6; mov byte ptr [ebx + 0x4e68], 0; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x000993ee: add byte ptr [eax], al; endbr32; call 0x17d641; add eax, 0x197a3b; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x00024ebe: add byte ptr [eax], al; endbr32; call 0x17d641; add eax, 0x20bf6b; lea eax, [eax - 0x681e8]; ret; 
0x00086d3e: add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017083e: add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0018614e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00171dfe: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00086d6e: add byte ptr [eax], al; endbr32; ret; 
0x00085d8e: add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000e244e: add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x000bb7ad: add byte ptr [eax], al; inc dword ptr [eax]; je 0xbb7b4; inc eax; pop edi; ret; 
0x000920c8: add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003c193: add byte ptr [eax], al; int 0x80; 
0x00104e44: add byte ptr [eax], al; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x001326b9: add byte ptr [eax], al; ja 0x1326c4; sar eax, 5; add esp, 0xc; ret; 
0x0017db28: add byte ptr [eax], al; ja 0x17dd10; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0017f142: add byte ptr [eax], al; ja 0x17f220; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0017f28b: add byte ptr [eax], al; ja 0x17f2a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00192933: add byte ptr [eax], al; ja 0x192939; neg eax; ret; 
0x00194173: add byte ptr [eax], al; ja 0x194179; neg eax; pop ebp; ret; 
0x00196823: add byte ptr [eax], al; ja 0x196829; neg eax; add esp, 4; pop ebx; ret; 
0x00199573: add byte ptr [eax], al; ja 0x199579; neg eax; ret; 
0x00199863: add byte ptr [eax], al; ja 0x199869; neg eax; pop ebp; ret; 
0x00199a23: add byte ptr [eax], al; ja 0x199a29; neg eax; ret; 
0x0019a50a: add byte ptr [eax], al; ja 0x19a510; neg eax; ret; 
0x0019a883: add byte ptr [eax], al; ja 0x19a889; neg eax; pop edi; pop ebx; ret; 
0x0019b6fb: add byte ptr [eax], al; ja 0x19b701; neg eax; ret; 
0x0019cd74: add byte ptr [eax], al; ja 0x19cd7a; neg eax; ret; 
0x0017d3be: add byte ptr [eax], al; ja 0x24aa8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00075d53: add byte ptr [eax], al; ja 0x75e50; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078ab8: add byte ptr [eax], al; ja 0x78c01; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007b11f: add byte ptr [eax], al; ja 0x7b158; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007b8e1: add byte ptr [eax], al; ja 0x7b910; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007ecfd: add byte ptr [eax], al; ja 0x7ef30; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000805e1: add byte ptr [eax], al; ja 0x807d0; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00081a23: add byte ptr [eax], al; ja 0x81a50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000825a6: add byte ptr [eax], al; ja 0x826d0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008273c: add byte ptr [eax], al; ja 0x82780; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00085625: add byte ptr [eax], al; ja 0x85680; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000856cf: add byte ptr [eax], al; ja 0x856f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000859a7: add byte ptr [eax], al; ja 0x85a58; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00085e92: add byte ptr [eax], al; ja 0x85ec0; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0008a9a1: add byte ptr [eax], al; ja 0x8a9b0; ret; 
0x0012a8bc: add byte ptr [eax], al; jae 0x12a8cb; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x0009a838: add byte ptr [eax], al; jbe 0x9a840; ret; 
0x0009a878: add byte ptr [eax], al; jbe 0x9a880; ret; 
0x0007ea77: add byte ptr [eax], al; je 0x7ea88; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x7ea88; ret; 
0x000f2904: add byte ptr [eax], al; je 0xf292a; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x0019b389: add byte ptr [eax], al; jg 0x19b390; neg eax; ret; 
0x0019b6b4: add byte ptr [eax], al; jg 0x19b6c0; neg eax; ret; 
0x0019f7b4: add byte ptr [eax], al; jg 0x19f7c0; neg eax; ret; 
0x000d1ea3: add byte ptr [eax], al; jg 0xd1eb0; neg eax; pop edi; pop esi; ret; 
0x000d1ed3: add byte ptr [eax], al; jg 0xd1ed9; neg eax; ret; 
0x00061af7: add byte ptr [eax], al; jmp 0x60858; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0006cd87: add byte ptr [eax], al; jmp 0x6ba4f; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x000a09f8: add byte ptr [eax], al; jmp 0xa0992; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x000e2444: add byte ptr [eax], al; jmp 0xe2451; lea esi, cs:[esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0002300e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00023004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00025085: add byte ptr [eax], al; jmp eax; 
0x00060aba: add byte ptr [eax], al; jmp ebx; 
0x00060781: add byte ptr [eax], al; jmp ecx; 
0x00102d19: add byte ptr [eax], al; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102dbd: add byte ptr [eax], al; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00102ec2: add byte ptr [eax], al; jne 0x102f19; add esp, 0x24; pop ebx; pop esi; ret; 
0x00102f72: add byte ptr [eax], al; jne 0x102fc9; add esp, 0x24; pop ebx; pop esi; ret; 
0x00103039: add byte ptr [eax], al; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00104ee7: add byte ptr [eax], al; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x001051cb: add byte ptr [eax], al; jne 0x105293; add esp, 0x64; pop ebx; pop esi; ret; 
0x00109b9a: add byte ptr [eax], al; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x0010a840: add byte ptr [eax], al; jne 0x10a897; add esp, 0x34; pop ebx; pop esi; ret; 
0x0010ab43: add byte ptr [eax], al; jne 0x10ab8b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010bdc1: add byte ptr [eax], al; jne 0x10bdfc; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010bf59: add byte ptr [eax], al; jne 0x10bf9b; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010c54a: add byte ptr [eax], al; jne 0x10c566; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010c756: add byte ptr [eax], al; jne 0x10c767; add esp, 0x54; pop ebx; pop esi; ret; 
0x001150f1: add byte ptr [eax], al; jne 0x11514b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00115252: add byte ptr [eax], al; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x001153cc: add byte ptr [eax], al; jne 0x11547b; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011550c: add byte ptr [eax], al; jne 0x1155bb; add esp, 0x24; pop ebx; pop esi; ret; 
0x001157d3: add byte ptr [eax], al; jne 0x1157ee; add esp, 0x74; pop ebx; pop esi; ret; 
0x001160cc: add byte ptr [eax], al; jne 0x1160d6; add esp, 0x14; pop esi; pop edi; ret; 
0x0011698e: add byte ptr [eax], al; jne 0x116998; add esp, 0x24; pop ebx; pop esi; ret; 
0x00116ca0: add byte ptr [eax], al; jne 0x116cbe; add esp, 0x74; pop ebx; pop esi; ret; 
0x00116eb6: add byte ptr [eax], al; jne 0x116ec7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116f16: add byte ptr [eax], al; jne 0x116f27; add esp, 0x64; pop ebx; pop esi; ret; 
0x00117827: add byte ptr [eax], al; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a7: add byte ptr [eax], al; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x00117f5d: add byte ptr [eax], al; jne 0x117fb9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011800d: add byte ptr [eax], al; jne 0x118069; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118f5a: add byte ptr [eax], al; jne 0x118f69; add esp, 0x1c; ret; 
0x00119543: add byte ptr [eax], al; jne 0x119569; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011963b: add byte ptr [eax], al; jne 0x119661; add esp, 0x54; pop ebx; pop esi; ret; 
0x001196de: add byte ptr [eax], al; jne 0x11976c; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x001197e6: add byte ptr [eax], al; jne 0x11980b; add esp, 0x14; pop ebx; pop esi; ret; 
0x001198af: add byte ptr [eax], al; jne 0x1198c0; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011a663: add byte ptr [eax], al; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0011b1dc: add byte ptr [eax], al; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0011b26d: add byte ptr [eax], al; jne 0x11b277; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011b300: add byte ptr [eax], al; jne 0x11b30a; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011b5fa: add byte ptr [eax], al; jne 0x11b602; add esp, 0x1c; ret; 
0x0011c090: add byte ptr [eax], al; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0011cceb: add byte ptr [eax], al; jne 0x11ccf3; add esp, 0x1c; ret; 
0x0011e851: add byte ptr [eax], al; jne 0x11e85b; add esp, 0x34; pop ebx; pop esi; ret; 
0x00121774: add byte ptr [eax], al; jne 0x12179b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012181d: add byte ptr [eax], al; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218cd: add byte ptr [eax], al; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x00123370: add byte ptr [eax], al; jne 0x123387; add esp, 0x3c; ret; 
0x0012380f: add byte ptr [eax], al; jne 0x123817; add esp, 0x1c; ret; 
0x0012391e: add byte ptr [eax], al; jne 0x123928; add esp, 0x34; pop ebx; pop esi; ret; 
0x00127502: add byte ptr [eax], al; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x00127627: add byte ptr [eax], al; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a7: add byte ptr [eax], al; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x001279a2: add byte ptr [eax], al; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286b2: add byte ptr [eax], al; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287cb: add byte ptr [eax], al; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128837: add byte ptr [eax], al; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x001288c2: add byte ptr [eax], al; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x001289c5: add byte ptr [eax], al; jne 0x1289d4; add esp, 0x7c; ret; 
0x001304ac: add byte ptr [eax], al; jne 0x1304e0; pop ebx; pop esi; pop edi; ret; 
0x00133377: add byte ptr [eax], al; jne 0x133385; add esp, 0x2c; ret; 
0x00134587: add byte ptr [eax], al; jne 0x134595; add esp, 0x2c; ret; 
0x001356fc: add byte ptr [eax], al; jne 0x13576a; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013621d: add byte ptr [eax], al; jne 0x136245; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013e9a1: add byte ptr [eax], al; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9fd: add byte ptr [eax], al; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea4c: add byte ptr [eax], al; jne 0x13ea54; add esp, 0x1c; ret; 
0x00140810: add byte ptr [eax], al; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408b0: add byte ptr [eax], al; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x00140970: add byte ptr [eax], al; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a10: add byte ptr [eax], al; jne 0x140a3d; add esp, 0x11c; ret; 
0x00140ee8: add byte ptr [eax], al; jne 0x140f2c; add esp, 0x1c; ret; 
0x0014483a: add byte ptr [eax], al; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cbb: add byte ptr [eax], al; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x0014c5ee: add byte ptr [eax], al; jne 0x14c5f6; add esp, 0x1c; ret; 
0x001643ee: add byte ptr [eax], al; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x00164672: add byte ptr [eax], al; jne 0x164713; add esp, 0x34; pop ebx; pop esi; ret; 
0x001649e2: add byte ptr [eax], al; jne 0x164a19; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016698f: add byte ptr [eax], al; jne 0x1669c6; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016a271: add byte ptr [eax], al; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4c6: add byte ptr [eax], al; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d542: add byte ptr [eax], al; jne 0x16d55c; add esp, 0x74; pop ebx; pop edi; ret; 
0x0016d5f0: add byte ptr [eax], al; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d690: add byte ptr [eax], al; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0016d9e0: add byte ptr [eax], al; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da59: add byte ptr [eax], al; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x0016e8dd: add byte ptr [eax], al; jne 0x16e8e5; add esp, 0x4c; ret; 
0x0016e94d: add byte ptr [eax], al; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9bd: add byte ptr [eax], al; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea2d: add byte ptr [eax], al; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea90: add byte ptr [eax], al; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaf0: add byte ptr [eax], al; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb5d: add byte ptr [eax], al; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebdd: add byte ptr [eax], al; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016efbf: add byte ptr [eax], al; jne 0x16efcc; add esp, 0x94; pop ebx; pop edi; ret; 
0x0016f0bb: add byte ptr [eax], al; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f10a: add byte ptr [eax], al; jne 0x16f13c; add esp, 0x1c; ret; 
0x00170824: add byte ptr [eax], al; jne 0x17082c; add esp, 0x2c; ret; 
0x001708d5: add byte ptr [eax], al; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709c5: add byte ptr [eax], al; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c7c: add byte ptr [eax], al; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d0c: add byte ptr [eax], al; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170dbb: add byte ptr [eax], al; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e40: add byte ptr [eax], al; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ed2: add byte ptr [eax], al; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x001714df: add byte ptr [eax], al; jne 0x1714f4; add esp, 0x14; pop ebx; pop esi; ret; 
0x001715cf: add byte ptr [eax], al; jne 0x1715e4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017170c: add byte ptr [eax], al; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x0017179c: add byte ptr [eax], al; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x0017182c: add byte ptr [eax], al; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718bc: add byte ptr [eax], al; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171ef3: add byte ptr [eax], al; jne 0x171efd; add esp, 0x54; pop ebx; pop esi; ret; 
0x00171fb4: add byte ptr [eax], al; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x00172014: add byte ptr [eax], al; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x0017207d: add byte ptr [eax], al; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x0017212d: add byte ptr [eax], al; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177109: add byte ptr [eax], al; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x0017738f: add byte ptr [eax], al; jne 0x1773c4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017741f: add byte ptr [eax], al; jne 0x177454; add esp, 0x14; pop ebx; pop esi; ret; 
0x00178c95: add byte ptr [eax], al; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d0d: add byte ptr [eax], al; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017a346: add byte ptr [eax], al; jne 0x17a394; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0017ab11: add byte ptr [eax], al; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x0017d275: add byte ptr [eax], al; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800db: add byte ptr [eax], al; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185a0c: add byte ptr [eax], al; jne 0x185a16; add esp, 0x14; pop esi; pop edi; ret; 
0x00185d87: add byte ptr [eax], al; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x00185e20: add byte ptr [eax], al; jne 0x185e2a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00185e9a: add byte ptr [eax], al; jne 0x185ea4; add esp, 0x14; pop ebx; pop esi; ret; 
0x001860ff: add byte ptr [eax], al; jne 0x186107; add esp, 0x2c; ret; 
0x00199d75: add byte ptr [eax], al; jne 0x19a4f0; pop ebx; ret; 
0x00199bae: add byte ptr [eax], al; jne 0x19a506; pop ebx; ret; 
0x0019b46d: add byte ptr [eax], al; jne 0x19b6b0; pop ebx; ret; 
0x0019cb27: add byte ptr [eax], al; jne 0x19cd50; pop ebx; ret; 
0x0019cbe4: add byte ptr [eax], al; jne 0x19cd70; pop ebx; ret; 
0x0019d96e: add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00024b91: add byte ptr [eax], al; jne 0x24b62; ret; 
0x00025551: add byte ptr [eax], al; jne 0x25559; add esp, 0x1c; ret; 
0x0003af7a: add byte ptr [eax], al; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd2d: add byte ptr [eax], al; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003c05d: add byte ptr [eax], al; jne 0x3c08b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003c5d4: add byte ptr [eax], al; jne 0x3c5e8; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c654: add byte ptr [eax], al; jne 0x3c668; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c6cb: add byte ptr [eax], al; jne 0x3c716; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c76f: add byte ptr [eax], al; jne 0x3c77c; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c7ee: add byte ptr [eax], al; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003c994: add byte ptr [eax], al; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003cd92: add byte ptr [eax], al; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d23d: add byte ptr [eax], al; jne 0x3d247; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d396: add byte ptr [eax], al; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d416: add byte ptr [eax], al; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d49e: add byte ptr [eax], al; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0003e760: add byte ptr [eax], al; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e883: add byte ptr [eax], al; jne 0x3e88b; add esp, 0x1c; ret; 
0x0003fa63: add byte ptr [eax], al; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc80: add byte ptr [eax], al; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003fe3e: add byte ptr [eax], al; jne 0x3fe46; add esp, 0x2c; ret; 
0x0003ff50: add byte ptr [eax], al; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffd3: add byte ptr [eax], al; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f2f: add byte ptr [eax], al; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000504be: add byte ptr [eax], al; jne 0x504c6; add esp, 0x2c; ret; 
0x0005274f: add byte ptr [eax], al; jne 0x5275c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000527dd: add byte ptr [eax], al; jne 0x527ea; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00056906: add byte ptr [eax], al; jne 0x56913; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000575ab: add byte ptr [eax], al; jne 0x575cb; add esp, 0x434; pop ebx; pop esi; ret; 
0x000577fa: add byte ptr [eax], al; jne 0x5780f; add esp, 0x1c; ret; 
0x0005bea8: add byte ptr [eax], al; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x0005dcfe: add byte ptr [eax], al; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x0005dd85: add byte ptr [eax], al; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x00078efc: add byte ptr [eax], al; jne 0x78f06; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007fca5: add byte ptr [eax], al; jne 0x7fcbf; add esp, 0x824; pop ebx; pop esi; ret; 
0x00081844: add byte ptr [eax], al; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x00086a76: add byte ptr [eax], al; jne 0x86a88; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00087f98: add byte ptr [eax], al; jne 0x87fa2; add esp, 0x24; pop ebx; pop esi; ret; 
0x00088101: add byte ptr [eax], al; jne 0x8814d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008826f: add byte ptr [eax], al; jne 0x882b5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00088ae6: add byte ptr [eax], al; jne 0x88af0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008b06d: add byte ptr [eax], al; jne 0x8b093; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008c800: add byte ptr [eax], al; jne 0x8c808; add esp, 0x2c; ret; 
0x0008eb76: add byte ptr [eax], al; jne 0x8eba8; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ee54: add byte ptr [eax], al; jne 0x8ee60; xor eax, eax; pop ebx; ret; 
0x0008fa63: add byte ptr [eax], al; jne 0x8fa6d; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009126c: add byte ptr [eax], al; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912fc: add byte ptr [eax], al; jne 0x91304; add esp, 0x2c; ret; 
0x000925d0: add byte ptr [eax], al; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a50: add byte ptr [eax], al; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f5c: add byte ptr [eax], al; jne 0x92f64; add esp, 0x2c; ret; 
0x000933bc: add byte ptr [eax], al; jne 0x933c4; add esp, 0x2c; ret; 
0x00094601: add byte ptr [eax], al; jne 0x94619; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009564a: add byte ptr [eax], al; jne 0x95683; add esp, 0x24; pop ebx; pop esi; ret; 
0x000956ec: add byte ptr [eax], al; jne 0x9573b; add esp, 0x124; pop ebx; pop esi; ret; 
0x00096228: add byte ptr [eax], al; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x000964b7: add byte ptr [eax], al; jne 0x964d7; add esp, 0x2c; ret; 
0x000965bd: add byte ptr [eax], al; jne 0x965f7; add esp, 0x14; pop ebx; pop esi; ret; 
0x00096723: add byte ptr [eax], al; jne 0x96747; add esp, 0x2c; ret; 
0x00096983: add byte ptr [eax], al; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x00096b01: add byte ptr [eax], al; jne 0x96b52; add esp, 0x124; pop ebx; pop esi; ret; 
0x00096bbc: add byte ptr [eax], al; jne 0x96c0b; add esp, 0x124; pop ebx; pop esi; ret; 
0x000986ab: add byte ptr [eax], al; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099a55: add byte ptr [eax], al; jne 0x99a5f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00099d13: add byte ptr [eax], al; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x0009a2e1: add byte ptr [eax], al; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x0009a7b8: add byte ptr [eax], al; jne 0x9a7d7; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000a0406: add byte ptr [eax], al; jne 0xa0413; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000bf530: add byte ptr [eax], al; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d1006: add byte ptr [eax], al; jne 0xd1013; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d108f: add byte ptr [eax], al; jne 0xd109c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d111d: add byte ptr [eax], al; jne 0xd112a; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d2d3e: add byte ptr [eax], al; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d2dc0: add byte ptr [eax], al; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000d2e0b: add byte ptr [eax], al; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d2e6b: add byte ptr [eax], al; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x000d3e81: add byte ptr [eax], al; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x000d4117: add byte ptr [eax], al; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000d41d0: add byte ptr [eax], al; jne 0xd4233; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d44bb: add byte ptr [eax], al; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000d6c6d: add byte ptr [eax], al; jne 0xd6c99; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d6d05: add byte ptr [eax], al; jne 0xd6d29; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d71db: add byte ptr [eax], al; jne 0xd71e6; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000dd154: add byte ptr [eax], al; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df494: add byte ptr [eax], al; jne 0xdf49c; add esp, 0x1c; ret; 
0x000df608: add byte ptr [eax], al; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df827: add byte ptr [eax], al; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x000e09cd: add byte ptr [eax], al; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0a29: add byte ptr [eax], al; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000e0ad3: add byte ptr [eax], al; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000e0b5e: add byte ptr [eax], al; jne 0xe0b69; add esp, 0x38; mov eax, edx; pop ebx; ret; 
0x000e7893: add byte ptr [eax], al; jne 0xe78a7; add esp, 0x1c; ret; 
0x000e8b4a: add byte ptr [eax], al; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4ca: add byte ptr [eax], al; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec22a: add byte ptr [eax], al; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb2a: add byte ptr [eax], al; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef87a: add byte ptr [eax], al; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x000f222d: add byte ptr [eax], al; jne 0xf2274; add esp, 0x34; pop ebx; pop esi; ret; 
0x000328a9: add byte ptr [eax], al; lea eax, [eax + 0x11ac]; ret; 
0x0019ef49: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0019ef72: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x0019ef87: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x0019ef97: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x0019eedf: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x0019efa7: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0019ef12: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00051e1e: add byte ptr [eax], al; lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x0019e3b9: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x0019e617: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0019e627: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x0019e637: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x0019e366: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x0019e647: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x0019e390: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0019d2e4: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d29e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019df67: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x0019df77: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x0019d241: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x0019df87: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x0019d1fb: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0019d7c1: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019d7e6: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019d839: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x0019d810: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x0019e9e0: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x0019ea09: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x0019e993: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x0019e9b6: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x001550ed: add byte ptr [eax], al; lea eax, [esp + 0x994]; push eax; push esi; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x0017a9ce: add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000e23d9: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cd48: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cdaa: add byte ptr [eax], al; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0016e192: add byte ptr [eax], al; lea ecx, [eax + 0xa76c]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000e3422: add byte ptr [eax], al; lea ecx, [ebp - 0x6c3a6]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0006c130: add byte ptr [eax], al; lea ecx, [edx - 0x20]; cmp ecx, 0x5a; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x0008eeac: add byte ptr [eax], al; lea ecx, [esi - 0x71524]; mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0016d232: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00125f26: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00124fc9: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00102a2e: add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001721d5: add byte ptr [eax], al; lea edx, [edx - 0x8f4]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008cb57: add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0013560c: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d8: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00099e06: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010c3e0: add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003c235: add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0019f177: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d20aa: add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x00085e3a: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000a08ab: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00163abb: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00171d0b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00088dcb: add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00085d87: add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x0019e42a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e43a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e44a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e45a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e46a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x0019e3ca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3da: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3ea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3fa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e40a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f948: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e41a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019d41b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019d42b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d43b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019d44b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019d45b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019d39a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x0019d3ab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x0019d3bb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x0019d3cb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x0019d3db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x0019d3eb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x0019d3fb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x0019d40b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0019d87b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019d86b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019d85b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019d84b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019d8eb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0019d8db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0019d8cb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0019fbdb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0019d8bb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019d8ab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0019d89b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0019d88b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x0019d38a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x0019ea8a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea9a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaaa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eaba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea2a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea3a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea4a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea5a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea6a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea7a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b6df8: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ace58: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000ace9a: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0019292a: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x192939; neg eax; ret; 
0x000d1ecb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xd1ed9; neg eax; ret; 
0x001a0278: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0019f91b: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000ace7b: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ace6a: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000ab10b: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00030ec2: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0019fb08: add byte ptr [eax], al; lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x0019d46b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d20ba: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0019d059: add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x0017d289: add byte ptr [eax], al; lea esi, cs:[esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0019f989: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea19: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0019f1f0: add byte ptr [eax], al; lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x00199569: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ja 0x199579; neg eax; ret; 
0x000d20c9: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000ace49: add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000d1eb9: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000baae9: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00088d45: add byte ptr [eax], al; lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009f5ac: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009fbf3: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b224: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x0009f241: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000af25e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000aae9e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0003fafc: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000ba21e: add byte ptr [eax], al; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6dfe: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ace5e: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0009b69a: add byte ptr [eax], al; mov byte ptr [esi + 0x3c04], 1; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x0008d5f9: add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x000d208e: add byte ptr [eax], al; mov ch, dh; and ch, 0xf; je 0xd20b0; add eax, 2; ret; 
0x0008a66a: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00073fa9: add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00073fb0: add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x00086f20: add byte ptr [eax], al; mov dword ptr [eax + 0x1a5c], 0; ret; 
0x00088809: add byte ptr [eax], al; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00088813: add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0009aa49: add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a706: add byte ptr [eax], al; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x0008a663: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0004158b: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x000975f3: add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008884a: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x001719fc: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x001719bc: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0008aa93: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0014bfca: add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0014bfd0: add byte ptr [eax], al; mov dword ptr [eax + 0xfc], edx; ret; 
0x001466fd: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00085c32: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0016571c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00101f97: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00093b2c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x001378a1: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00165654: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001656aa: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016566c: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016567f: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00146704: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00101f90: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00085c39: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0008a671: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005858c: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0016565b: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00168b84: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0008faa3: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000345a3: add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x0016e19e: add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0003cb0c: add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00165666: add byte ptr [eax], al; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x001656fe: add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016570e: add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x00087e7d: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0005783f: add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008f9f8: add byte ptr [eax], al; mov dword ptr [eax], edx; ret; 
0x00023259: add byte ptr [eax], al; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0003e6c0: add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0014cb68: add byte ptr [eax], al; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x0014cae0: add byte ptr [eax], al; mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0014ca58: add byte ptr [eax], al; mov dword ptr [ebx + 0x6ed8], 0; call esi; 
0x0014c9d0: add byte ptr [eax], al; mov dword ptr [ebx + 0x7f18], 0; call esi; 
0x0014c948: add byte ptr [eax], al; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0013e773: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0017a11e: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x00087ed0: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000917c3: add byte ptr [eax], al; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0017a171: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017a6fa: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00171943: add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x0016b912: add byte ptr [eax], al; mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0003cb22: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010df83: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x0007ea93: add byte ptr [eax], al; mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x0014cf43: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00024e7c: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000744a9: add byte ptr [eax], al; mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012436e: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x000acebe: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000ace8e: add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000779cc: add byte ptr [eax], al; mov dword ptr [edx + 0x1a20], 0; ret; 
0x0008189c: add byte ptr [eax], al; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00086e9c: add byte ptr [eax], al; mov dword ptr [edx + 0x1a54], 0; ret; 
0x000934c4: add byte ptr [eax], al; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000975ed: add byte ptr [eax], al; mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0010bc9c: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x00057654: add byte ptr [eax], al; mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0011ce93: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x00132f7b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c11b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0017d72b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003ccc9: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0007e75d: add byte ptr [eax], al; mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x00057722: add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x0008e85e: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e8698: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003fd06: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00160fd1: add byte ptr [eax], al; mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00085117: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00086b7d: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x001513be: add byte ptr [eax], al; mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00163686: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0011c059: add byte ptr [eax], al; mov dword ptr [esp + 0x100c], eax; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000e14c5: add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0006c13c: add byte ptr [eax], al; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x0012858c: add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x0006bcd1: add byte ptr [eax], al; mov dword ptr [esp + 0x18], 1; jmp eax; 
0x001291be: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128b60: add byte ptr [eax], al; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0011933a: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c1eb: add byte ptr [eax], al; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0009447e: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00094489: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003d2e3: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00061b2e: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 1; jmp ebx; 
0x00060779: add byte ptr [eax], al; mov dword ptr [esp + 0x28], 0; jmp ecx; 
0x00097ab3: add byte ptr [eax], al; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00060ab2: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], 1; jmp ebx; 
0x00099f5d: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0006c262: add byte ptr [eax], al; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x0006bfe8: add byte ptr [eax], al; mov dword ptr [esp + 0x34], 0; jmp eax; 
0x0006ce26: add byte ptr [eax], al; mov dword ptr [esp + 0x34], 1; jmp ebx; 
0x00061ace: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], 1; jmp ebx; 
0x0006ce16: add byte ptr [eax], al; mov dword ptr [esp + 0x40], 1; jmp ebx; 
0x0016b400: add byte ptr [eax], al; mov dword ptr [esp + 0x434], edx; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00061478: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x00099523: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x00123f11: add byte ptr [eax], al; mov dword ptr [esp + 0x78], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00123f1b: add byte ptr [eax], al; mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00103b2b: add byte ptr [eax], al; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000a0abc: add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00076560: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x00076560: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00168bb0: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00076461: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00060984: add byte ptr [eax], al; mov dword ptr [esp], 0; jmp eax; 
0x00060934: add byte ptr [eax], al; mov dword ptr [esp], 1; jmp eax; 
0x00127378: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001280f8: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b6e0e: add byte ptr [eax], al; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000dfd67: add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00099447: add byte ptr [eax], al; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001250e0: add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010b57c: add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b375: add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0017fe66: add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x00092066: add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0008cf07: add byte ptr [eax], al; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000dfcef: add byte ptr [eax], al; mov eax, 0x197; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010b506: add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00118cee: add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0008a892: add byte ptr [eax], al; mov eax, 0x5f; cmovne eax, edx; ret; 
0x001265fe: add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012527e: add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00125005: add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00104ff8: add byte ptr [eax], al; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x001291c8: add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128cb1: add byte ptr [eax], al; mov eax, 0x75; mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0003f6d8: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f264c: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0012a17e: add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0008da62: add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0008cb5d: add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003c22b: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d5: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0008cdb0: add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00103b26: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00094393: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0019f134: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x0008ef5e: add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0008f557: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902c7: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00097f65: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091426: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091cb3: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017fedd: add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f272e: add byte ptr [eax], al; mov eax, 0xfffa; pop ebx; ret; 
0x00025882: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00118c32: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003c182: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cbe2: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c122: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000962f6: add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x0005828e: add byte ptr [eax], al; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000a0c5e: add byte ptr [eax], al; mov eax, 1; ret; 
0x0019f08b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x0019f0e4: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x0011b4b1: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x000328d3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x16c]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033ce3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x16c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00140ca3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x000bc8b4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000bc8c4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000bc8d4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000bc8e4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000bc8f4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000bc904: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000bc914: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000bc924: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000bc934: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000bc944: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000bc954: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000bc8a4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0012b2e2: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x0011b4b7: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00165e95: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00088903: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x00050540: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00085b85: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x85b80; ret; 
0x0017a4f7: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3bc]; test eax, eax; je 0x17a510; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00088a34: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x0003ccc3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xa0]; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0011b9c3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x11b9cd; ret; 
0x0016c549: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x0016958c: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000805e7: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00163ecc: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00164041: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016e43e: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x18c]; pop ebx; pop esi; pop edi; ret; 
0x0016e4ce: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x198]; pop ebx; pop esi; pop edi; ret; 
0x0017d71e: add byte ptr [eax], al; mov eax, dword ptr [ecx + 0xa0]; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003422c: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000341ec: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000af18e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000aadce: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x001a027e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0016c003: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00094549: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x9455a; ret; 
0x00170876: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x000328d9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033ce9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000341a9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034179: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034149: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034089: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340e9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033ff9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340b9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034059: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034259: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034029: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034119: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fc9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00140ca9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x00089a56: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000f48ee: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0016ce37: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push edi; call dword ptr [eax + 0x10]; 
0x0012ac2a: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x12aad0; add esp, 4; ret; 
0x00163b6e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0019f02e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0010381c: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0016e198: add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x00119e4a: add byte ptr [eax], al; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0013fe0c: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003cf77: add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b99be: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b427e: add byte ptr [eax], al; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x0019df4e: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008cf6e: add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x001777dd: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00148244: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x000adaee: add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x00187e2f: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00080b6b: add byte ptr [eax], al; mov eax, edx; ret; 
0x0005e36b: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00176b54: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x00118d1c: add byte ptr [eax], al; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e23ad: add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x001298e9: add byte ptr [eax], al; mov ebx, 0x18; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x00125c29: add byte ptr [eax], al; mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00128a0b: add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00128cb6: add byte ptr [eax], al; mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00128cfd: add byte ptr [eax], al; mov ebx, 0xe; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x001181e2: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001159c0: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115ac3: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008d930: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00103c70: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eef4: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00104074: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00185fbc: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012452b: add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012a016: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00129fa5: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0009a06e: add byte ptr [eax], al; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0005032d: add byte ptr [eax], al; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00115929: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00125400: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125174: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001147f8: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000dfa41: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00099ad0: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000997fd: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000dfb89: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010b8da: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b854: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x001261c6: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00126256: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x000d6e2e: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00124ffe: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e342d: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x00123e00: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xd0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003cfdd: add byte ptr [eax], al; mov ebx, dword ptr [esp + 4]; mov eax, 0x1a5; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00127c9b: add byte ptr [eax], al; mov ebx, dword ptr [esp + 4]; mov ecx, dword ptr [esp + 8]; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000990d3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f2cd7: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00089141: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c3d3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115ef3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00089c74: add byte ptr [eax], al; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008f55c: add byte ptr [eax], al; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008cffc: add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00091067: add byte ptr [eax], al; mov ebx, edi; mov dword ptr [edi + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902cc: add byte ptr [eax], al; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0012156f: add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0003c3a4: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00117730: add byte ptr [eax], al; mov ebx, edx; ret; 
0x00099e0f: add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117f7b: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00118d17: add byte ptr [eax], al; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118fb6: add byte ptr [eax], al; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124530: add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0009219a: add byte ptr [eax], al; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008930c: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000887b2: add byte ptr [eax], al; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00089ad2: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0017a9c4: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008cff2: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009223f: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fd3c: add byte ptr [eax], al; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000e23d4: add byte ptr [eax], al; mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00104018: add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000bc3aa: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x000917be: add byte ptr [eax], al; mov ecx, 7; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0003c435: add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0009142b: add byte ptr [eax], al; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00076311: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0006bc8b: add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x00104080: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0012a0d4: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0008ac26: add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0006c027: add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x727d4]; add ecx, ebx; jmp ecx; 
0x0006c457: add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x728d4]; add ecx, ebx; jmp ecx; 
0x000975e7: add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3b8c]; mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00125063: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00185f2d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001290fd: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00097aaa: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00116750: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116824: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00116868: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00125746: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000dfcf4: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dfd6c: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010b23d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xa4]; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00115602: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0005da03: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d4253: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0008df03: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d935: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00104fec: add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000df8cf: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000dffec: add byte ptr [eax], al; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00091cb8: add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00127c0b: add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0009944c: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010babb: add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010b85d: add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00116759: add byte ptr [eax], al; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00118d11: add byte ptr [eax], al; mov edi, dword ptr [ebp + 0xa0]; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001297d1: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00118ff1: add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011f8a7: add byte ptr [eax], al; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00128cbb: add byte ptr [eax], al; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x000f27d1: add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f27e9: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x000f26c9: add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x0008b142: add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000f26f2: add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000924a0: add byte ptr [eax], al; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000936c8: add byte ptr [eax], al; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009082b: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092890: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009397e: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b96f: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000f2684: add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f2651: add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000898d3: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0017a9c9: add byte ptr [eax], al; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091cae: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008cff7: add byte ptr [eax], al; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00118fec: add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014825e: add byte ptr [eax], al; mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x000893cd: add byte ptr [eax], al; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008bc6a: add byte ptr [eax], al; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091a25: add byte ptr [eax], al; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba46: add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089b01: add byte ptr [eax], al; mov edx, 1; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b3db: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c6: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092932: add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089311: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089380: add byte ptr [eax], al; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012a158: add byte ptr [eax], al; mov edx, 8; call dword ptr gs:[0x10]; 
0x0016b407: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00101336: add byte ptr [eax], al; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x001251fd: add byte ptr [eax], al; mov edx, dword ptr [edx + 0xa0]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00128c03: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00171f2a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x171f40; add esp, 0xc; ret; 
0x0017209a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x1720b0; add esp, 0xc; ret; 
0x001029e2: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003f87a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00125ed2: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f2d24: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00117184: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001052cc: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00128b03: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0010b244: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010b575: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b4ff: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00127ca8: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0017d724: add byte ptr [eax], al; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003c45c: add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c2df: add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000dfe9d: add byte ptr [eax], al; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0003cfeb: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d6f53: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x0008df0e: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008cda5: add byte ptr [eax], al; mov esi, 8; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0003c230: add byte ptr [eax], al; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00023254: add byte ptr [eax], al; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0003c2da: add byte ptr [eax], al; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003cfe6: add byte ptr [eax], al; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010c3d9: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00128a10: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000df6d3: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099add: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x001250d9: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xa0]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010b24b: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010b50b: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0009980a: add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0009a32e: add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0008f385: add byte ptr [eax], al; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00126121: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x0008cfa7: add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008fd41: add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0011913b: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000a58e6: add byte ptr [eax], al; mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x001a02be: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b6f6e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b35ce: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000acefe: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf0e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000aceee: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf1e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b353e: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b354e: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000af1be: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000aadfe: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00060bb4: add byte ptr [eax], al; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000613c2: add byte ptr [eax], al; movzx eax, byte ptr [eax + ebp - 0x20]; mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x0006135a: add byte ptr [eax], al; movzx eax, byte ptr [eax + ebp - 0x20]; mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x0008534e: add byte ptr [eax], al; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013814e: add byte ptr [eax], al; movzx eax, dl; ret; 
0x00194057: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019288e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00194077: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x00194097: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001940b7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001940d7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x00194037: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00041be8: add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cc9: add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0003c3fb: add byte ptr [eax], al; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00125203: add byte ptr [eax], al; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00024e74: add byte ptr [eax], al; neg eax; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000f2ce2: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x00087955: add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000bad6d: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bb4cc: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb01c: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008568d: add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x00086dad: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1ec: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00163aac: add byte ptr [eax], al; nop; endbr32; ret; 
0x00171d2d: add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000cd0ad: add byte ptr [eax], al; nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000cd09d: add byte ptr [eax], al; nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000df76d: add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000330ed: add byte ptr [eax], al; nop; lea edx, [ecx - 0x6c3a6]; mov eax, edx; pop ebx; ret; 
0x000af38d: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000aafac: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000af39d: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000aafbd: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00094eac: add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x000acead: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00061a1d: add byte ptr [eax], al; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008a77d: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000f270d: add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x00080d7c: add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20dc: add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0008e19c: add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d20ec: add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d20fc: add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d210c: add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d211c: add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d212c: add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0017163c: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x001663ac: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008a9ac: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0013622d: add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0014c75d: add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000df69c: add byte ptr [eax], al; nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000af4ec: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000acedc: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000acecd: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001a028d: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008a86d: add byte ptr [eax], al; nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0019b36c: add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x000e1b2c: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f310c: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; pop esi; ret; 
0x00131cbd: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0004150d: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000a56fd: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000df65e: add byte ptr [eax], al; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008f1cd: add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00138143: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00137e41: add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x2ec3; 
0x000929af: add byte ptr [eax], al; or byte ptr [edi], 0x85; ret 0xfffc; 
0x0010baa2: add byte ptr [eax], al; or byte ptr [edi], 0xa3; ret 0xdc73; 
0x00041cf3: add byte ptr [eax], al; or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000bc519: add byte ptr [eax], al; or cl, cl; jne 0xbc521; xor eax, eax; ret; 
0x00128d0b: add byte ptr [eax], al; or dh, 1; call dword ptr gs:[0x10]; 
0x0005cdae: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008bba6: add byte ptr [eax], al; or edx, 2; call dword ptr gs:[0x10]; 
0x000bac96: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000baf6e: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00117c60: add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000f2689: add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x000e2e57: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003f6e4: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; xor eax, eax; ret; 
0x00089f49: add byte ptr [eax], al; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x000739e2: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0019b6ae: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x19b6c0; neg eax; ret; 
0x00171ad1: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00058910: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0017f38e: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0003c5dc: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x00116aec: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000d1f25: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x000f9f03: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x00148263: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x00131e5e: add byte ptr [eax], al; pop ebx; pop esi; pop ebp; ret; 
0x001a0948: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002345e: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c90b: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00024c16: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00041e31: add byte ptr [eax], al; pop ebx; pop esi; sub eax, ecx; ret; 
0x0003c7f6: add byte ptr [eax], al; pop ebx; ret; 
0x00041f96: add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0011993e: add byte ptr [eax], al; pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x00170ffe: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00199a2e: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0003fcff: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00116066: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x00025110: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x0014c85d: add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x000ac980: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b2c3e: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d1d53: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0019f090: add byte ptr [eax], al; pop edi; ret; 
0x00163e39: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00050c73: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000b717e: add byte ptr [eax], al; pop esi; ret; 
0x000bba10: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x0019fb0e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0011eb6c: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0017f87d: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x0016f9a8: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00083e5e: add byte ptr [eax], al; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0007d5af: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00165e2f: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001701aa: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x16fee0; add esp, 0x1c; ret; 
0x0007db52: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083be3: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007d929: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00057dd0: add byte ptr [eax], al; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x00057aef: add byte ptr [eax], al; push dword ptr [eax]; call 0x62520; add esp, 0x1c; ret; 
0x0007a84f: add byte ptr [eax], al; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8b0: add byte ptr [eax], al; push dword ptr [eax]; call 0x6d7f0; add esp, 0x1c; ret; 
0x00131c5a: add byte ptr [eax], al; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x130450; add esp, 0x1c; ret; 
0x00168e4f: add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0003308c: add byte ptr [eax], al; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x330a0; add esp, 0x1c; ret; 
0x000a50dc: add byte ptr [eax], al; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xa50f0; add esp, 0x1c; ret; 
0x0007d6ef: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x001585c3: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00163ee8: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0017aba5: add byte ptr [eax], al; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x001701af: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x16fee0; add esp, 0x1c; ret; 
0x0008a41a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x8a340; add esp, 0x18; pop ebx; ret; 
0x0008a73e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x8a680; add esp, 0x1c; ret; 
0x00093c0a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x93bb0; add esp, 0x18; pop ebx; ret; 
0x00133698: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x00134748: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x0007f8aa: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x787f0; add esp, 0x1c; ret; 
0x0016ed9f: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x00168e55: add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00168e71: add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x001549ef: add byte ptr [eax], al; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x000d3c56: add byte ptr [eax], al; push dword ptr [esp + 0x64]; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d386b: add byte ptr [eax], al; push dword ptr [esp + 0x64]; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3a98: add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x00083ad8: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0017f751: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0011cd45: add byte ptr [eax], al; push eax; call 0x11ce50; add esp, 0x1c; ret; 
0x00086ee7: add byte ptr [eax], al; push eax; call 0x893c0; add esp, 0x1c; ret; 
0x001024af: add byte ptr [eax], al; push eax; call 0x893c0; call dword ptr [esi]; 
0x00093dd5: add byte ptr [eax], al; push eax; call 0x8a290; add esp, 0x1c; ret; 
0x0014c4aa: add byte ptr [eax], al; push eax; call edx; 
0x000d3876: add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0011cd15: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x11cd60; add esp, 0x1c; ret; 
0x00134cb5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x134cd0; add esp, 0x1c; ret; 
0x00135015: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x135030; add esp, 0x1c; ret; 
0x0003fb35: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x3fb50; add esp, 0x1c; ret; 
0x00041b85: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x41ba0; add esp, 0x1c; ret; 
0x0002ad82: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002bac6: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x0002d072: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0016a9cc: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016a9cc: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x001550f4: add byte ptr [eax], al; push eax; push esi; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x0003b4b4: add byte ptr [eax], al; push eax; ret; 
0x0017f758: add byte ptr [eax], al; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0016ccb8: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x000893d2: add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016ea7d: add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x001580ee: add byte ptr [eax], al; push edx; call eax; 
0x0002814b: add byte ptr [eax], al; push edx; push eax; call 0x92320; add esp, 0x1c; ret; 
0x00165e51: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x0007b31c: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00131e28: add byte ptr [eax], al; push esi; call eax; 
0x00165250: add byte ptr [eax], al; push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00104d03: add byte ptr [eax], al; pushal; add cl, al; call 0xfe0860f; dec edi; ret 0xd4e9; 
0x00024b76: add byte ptr [eax], al; ret; 
0x00137e3b: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0013813a: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00024c0d: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; pop ebx; pop esi; ret; 
0x00024b6d: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x0014c4a0: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00169989: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000f28b8: add byte ptr [eax], al; setne al; ret; 
0x0017c984: add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00088a3a: add byte ptr [eax], al; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x001799dc: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x001038b7: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0011a65c: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x000bc469: add byte ptr [eax], al; sub eax, edx; ret; 
0x00085f7e: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0007b9ce: add byte ptr [eax], al; sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00057967: add byte ptr [eax], al; sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0003a55c: add byte ptr [eax], al; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0019ef69: add byte ptr [eax], al; sub edi, 0x10; jb 0x19f030; lea eax, [eax + 0xf]; pop edi; ret; 
0x0019efde: add byte ptr [eax], al; sub edi, 0xa; jb 0x19f030; lea eax, [eax + 9]; pop edi; ret; 
0x0019efee: add byte ptr [eax], al; sub edi, 0xb; jb 0x19f030; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019effe: add byte ptr [eax], al; sub edi, 0xd; jb 0x19f030; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019f00e: add byte ptr [eax], al; sub edi, 0xe; jb 0x19f030; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019f01e: add byte ptr [eax], al; sub edi, 0xf; jb 0x19f030; lea eax, [eax + 0xe]; pop edi; ret; 
0x0019ef7e: add byte ptr [eax], al; sub edi, 2; jb 0x19f030; lea eax, [eax + 1]; pop edi; ret; 
0x0019eed6: add byte ptr [eax], al; sub edi, 4; jb 0x19f030; lea eax, [eax + 3]; pop edi; ret; 
0x0019efbe: add byte ptr [eax], al; sub edi, 7; jb 0x19f030; lea eax, [eax + 6]; pop edi; ret; 
0x0019ef09: add byte ptr [eax], al; sub edi, 8; jb 0x19f030; lea eax, [eax + 7]; pop edi; ret; 
0x0019efce: add byte ptr [eax], al; sub edi, 9; jb 0x19f030; lea eax, [eax + 8]; pop edi; ret; 
0x0019df39: add byte ptr [eax], al; sub edx, 0x10; jb 0x19e010; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019dfbe: add byte ptr [eax], al; sub edx, 0xa; jb 0x19e010; lea eax, [edi + 9]; pop edi; ret; 
0x0019dfce: add byte ptr [eax], al; sub edx, 0xb; jb 0x19e010; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019df10: add byte ptr [eax], al; sub edx, 0xc; jb 0x19e010; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019dfde: add byte ptr [eax], al; sub edx, 0xd; jb 0x19e010; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019dfee: add byte ptr [eax], al; sub edx, 0xe; jb 0x19e010; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019dffe: add byte ptr [eax], al; sub edx, 0xf; jb 0x19e010; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019dea5: add byte ptr [eax], al; sub edx, 4; jb 0x19e010; lea eax, [edi + 3]; pop edi; ret; 
0x0019df9e: add byte ptr [eax], al; sub edx, 7; jb 0x19e010; lea eax, [edi + 6]; pop edi; ret; 
0x0019ded6: add byte ptr [eax], al; sub edx, 8; jb 0x19e010; lea eax, [edi + 7]; pop edi; ret; 
0x0019dfae: add byte ptr [eax], al; sub edx, 9; jb 0x19e010; lea eax, [edi + 8]; pop edi; ret; 
0x0011c089: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x00140809: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408a9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x00140969: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a09: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x140a3d; add esp, 0x11c; ret; 
0x0003c7e7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003cd8b: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d38f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d40f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d497: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0005dcf7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x000e09c6: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0acc: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000819de: add byte ptr [eax], al; sub esp, 0x18; push eax; call 0x853a0; add esp, 0x1c; ret; 
0x0009a6b2: add byte ptr [eax], al; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0016c5aa: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x000ec7ee: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000efe3e: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00163e19: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00164a9e: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0009600e: add byte ptr [eax], al; sub esp, 0xc; mov esi, dword ptr [eax + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00089eda: add byte ptr [eax], al; sub esp, 0xc; push 0; call 0x894b0; add esp, 0x1c; ret; 
0x0016602c: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000825ac: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00158671: add byte ptr [eax], al; sub esp, 0xc; push edi; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x00169592: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000859ad: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00075d59: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078abe: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0017f148: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000a0bd6: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x00086785: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x0007a04e: add byte ptr [eax], al; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00078b11: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0012d6b3: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x24]; push 0; push 0x2000004; call eax; 
0x00081eb5: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x000843dd: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebp + 0x38]; 
0x0007892b: add byte ptr [eax], al; sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x0017ec1f: add byte ptr [eax], al; sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00076805: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000781d2: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00082301: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000837c4: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00081ff4: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007d470: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075672: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0017f708: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0016bac0: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00168e68: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016a41a: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00166456: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016ee5d: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x001657d7: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0007cae0: add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x00165e9b: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003e406: add byte ptr [eax], al; sub esp, 8; push 0; push edx; call eax; 
0x00075806: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00163e00: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0003e9d7: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0xc]; push dword ptr [esp + 0x3c]; call eax; 
0x000a0c8e: add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0016eea6: add byte ptr [eax], al; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x000a0b21: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0019d830: add byte ptr [eax], al; test ah, 0x20; jne 0x19d8d0; lea eax, [edi - 4]; pop edi; ret; 
0x0019e3b0: add byte ptr [eax], al; test ah, 0x20; jne 0x19e450; lea eax, [ecx + 0xc]; ret; 
0x0019d374: add byte ptr [eax], al; test ah, 0x40; jne 0x19d460; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019dd30: add byte ptr [eax], al; test ah, 0x40; jne 0x19de70; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019ea00: add byte ptr [eax], al; test ah, 0x40; jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x0019d807: add byte ptr [eax], al; test ah, 2; jne 0x19d8a0; lea eax, [edi - 8]; pop edi; ret; 
0x0019e387: add byte ptr [eax], al; test ah, 2; jne 0x19e420; lea eax, [ecx + 8]; ret; 
0x0019dd07: add byte ptr [eax], al; test ah, 4; jne 0x19de40; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019e9d7: add byte ptr [eax], al; test ah, 4; jne 0x19ea90; lea eax, [edx + 0xb]; ret; 
0x0019d7de: add byte ptr [eax], al; test al, 0x20; jne 0x19d870; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019e35e: add byte ptr [eax], al; test al, 0x20; jne 0x19e3f0; lea eax, [ecx + 4]; ret; 
0x0019d322: add byte ptr [eax], al; test al, 0x40; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x0019dcde: add byte ptr [eax], al; test al, 0x40; jne 0x19de10; lea eax, [edi + 7]; pop edi; ret; 
0x0019e9ae: add byte ptr [eax], al; test al, 0x40; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0019faf3: add byte ptr [eax], al; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019d7b9: add byte ptr [eax], al; test al, 2; jne 0x19d840; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019e1d9: add byte ptr [eax], al; test al, 2; jne 0x19e3c0; mov eax, ecx; ret; 
0x0019dcbb: add byte ptr [eax], al; test al, 4; jne 0x19dde0; lea eax, [edi + 3]; pop edi; ret; 
0x0019e98b: add byte ptr [eax], al; test al, 4; jne 0x19ea30; lea eax, [edx + 3]; ret; 
0x0019ee07: add byte ptr [eax], al; test dh, 4; jne 0x19f1ad; add eax, 0xb; pop edi; ret; 
0x0019d1f2: add byte ptr [eax], al; test dl, 0x40; jne 0x19d470; lea eax, [edi + 7]; pop edi; ret; 
0x0019ede0: add byte ptr [eax], al; test dl, 0x40; jne 0x19f199; add eax, 7; pop edi; ret; 
0x0019f860: add byte ptr [eax], al; test dl, 0xf; jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x0019d238: add byte ptr [eax], al; test dl, 4; jne 0x19d470; lea eax, [edi + 3]; pop edi; ret; 
0x0019edba: add byte ptr [eax], al; test dl, 4; jne 0x19f185; add eax, 3; pop edi; ret; 
0x0011c0f9: add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0013b352: add byte ptr [eax], al; test eax, eax; je 0x13b360; add eax, 0x10; jmp 0x13a9b0; ret; 
0x001466d4: add byte ptr [eax], al; test eax, eax; je 0x1466e0; add esp, 0x18; pop ebx; ret; 
0x00164377: add byte ptr [eax], al; test eax, eax; je 0x164388; add esp, 8; pop ebx; ret; 
0x0017a4fd: add byte ptr [eax], al; test eax, eax; je 0x17a510; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00076556: add byte ptr [eax], al; test eax, eax; je 0x76570; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x000779de: add byte ptr [eax], al; test eax, eax; je 0x779f0; sub eax, 1; mov dword ptr [edx + 0x1a24], eax; ret; 
0x000818ae: add byte ptr [eax], al; test eax, eax; je 0x818c0; sub eax, 1; mov dword ptr [edx + 0x1a38], eax; ret; 
0x00086eae: add byte ptr [eax], al; test eax, eax; je 0x86ec0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00102cf3: add byte ptr [eax], al; test eax, eax; jne 0x102d28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00102d97: add byte ptr [eax], al; test eax, eax; jne 0x102dd0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00102e9c: add byte ptr [eax], al; test eax, eax; jne 0x102ed0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00102f4c: add byte ptr [eax], al; test eax, eax; jne 0x102f80; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00103013: add byte ptr [eax], al; test eax, eax; jne 0x103048; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010acd8: add byte ptr [eax], al; test eax, eax; jne 0x10ad00; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011aab8: add byte ptr [eax], al; test eax, eax; jne 0x11aae0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011b008: add byte ptr [eax], al; test eax, eax; jne 0x11b030; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x001217f7: add byte ptr [eax], al; test eax, eax; jne 0x121830; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x001218a7: add byte ptr [eax], al; test eax, eax; jne 0x1218e0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001481d6: add byte ptr [eax], al; test eax, eax; jne 0x1481e7; ret; 
0x00097666: add byte ptr [eax], al; test eax, eax; jne 0x97677; ret; 
0x000f2c27: add byte ptr [eax], al; test eax, eax; jne 0xf2c48; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00167ba2: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0007fd9f: add byte ptr [eax], al; test ecx, ecx; je 0x7fda8; mov byte ptr [edx], 0; pop ebx; ret; 
0x0009ab23: add byte ptr [eax], al; test ecx, ecx; jne 0x9ab30; add esp, 8; pop ebx; ret; 
0x000f2be6: add byte ptr [eax], al; test ecx, ecx; js 0xf2bf0; ret; 
0x00024bb2: add byte ptr [eax], al; test edx, edx; je 0x24bb9; ret; 
0x0004256b: add byte ptr [eax], al; test edx, edx; je 0x42577; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004258b: add byte ptr [eax], al; test edx, edx; je 0x42597; bsr eax, edx; xor eax, 0x1f; ret; 
0x0003eab0: add byte ptr [eax], al; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x00086ec8: add byte ptr [eax], al; xchg dword ptr [edx + 0x1a54], eax; cmp eax, 1; jg 0x86ee0; ret; 
0x000920a3: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x0008ab0c: add byte ptr [eax], al; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008bc6f: add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094e2e: add byte ptr [eax], al; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x001448c6: add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000e059e: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011c060: add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010c1f2: add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000e14cc: add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0009fa52: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0011b48a: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0019a86e: add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000d1d32: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000bad0e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0009fb29: add byte ptr [eax], al; xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x0008a514: add byte ptr [eax], al; xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003cb12: add byte ptr [eax], al; xor eax, eax; ret; 
0x00040cfd: add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x0008cf65: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00103b1d: add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00024cda: add byte ptr [eax], al; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00094517: add byte ptr [eax], al; xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x0008f37e: add byte ptr [eax], al; xor ecx, ecx; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0004249b: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x424a8; bsr eax, edx; xor eax, 0x1f; ret; 
0x000424bb: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x424c8; bsr eax, edx; xor eax, 0x1f; ret; 
0x0003d6b5: add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008ebe8: add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008cfa0: add byte ptr [eax], al; xor edx, edx; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00103c75: add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eef9: add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00097d59: add byte ptr [eax], al; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008cefa: add byte ptr [eax], al; xor edx, edx; mov esi, 0x53053053; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x00104079: add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0012d16e: add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00041ca3: add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x0003f739: add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00091a2a: add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089316: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089b06: add byte ptr [eax], al; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b641: add byte ptr [eax], al; xor esi, esi; lea ebx, [ebp + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000887b7: add byte ptr [eax], al; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008c5c4: add byte ptr [eax], al; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008be84: add byte ptr [eax], al; xor esi, esi; mov ebx, dword ptr [esp + 4]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c212: add byte ptr [eax], al; xor esi, esi; mov ebx, dword ptr [esp]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b3e0: add byte ptr [eax], al; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1cb: add byte ptr [eax], al; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00128d02: add byte ptr [eax], al; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0017fee2: add byte ptr [eax], al; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00092244: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ab7b: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089385: add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00092937: add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018e61f: add byte ptr [eax], bh; ret 0x840f; 
0x00151b19: add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x00199c43: add byte ptr [eax], bh; std; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cc99: add byte ptr [eax], bh; std; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x001245f0: add byte ptr [eax], ch; add byte ptr [ecx], al; add byte ptr [ebp - 0x69bed62], cl; call dword ptr [ebx - 0x18]; 
0x00034067: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x0009c626: add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; add byte ptr [eax - 0x62], 0xf9; call dword ptr [eax - 0x18]; 
0x000bc51a: add byte ptr [eax], cl; leave; jne 0xbc521; xor eax, eax; ret; 
0x00080ba9: add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x0018b69a: add byte ptr [eax], dh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012c384: add byte ptr [eax], dl; add byte ptr [eax], al; mov eax, edx; ret; 
0x000e342b: add byte ptr [eax], dl; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x000341b7: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x0008e177: add byte ptr [eax], dl; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x0003c5d5: add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x00178c96: add byte ptr [ebp + 0x10], dh; add esp, 0x18; pop ebx; ret; 
0x000e7894: add byte ptr [ebp + 0x10], dh; add esp, 0x1c; ret; 
0x0003c904: add byte ptr [ebp + 0x11], dh; add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x001714e0: add byte ptr [ebp + 0x11], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000577fb: add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x0010c7c3: add byte ptr [ebp + 0x11], dh; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0019a4dc: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0016da5a: add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000cd103: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x91c64]; and ch, 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000a2983: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x95764]; and ch, 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a5de3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9a5c4]; and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a5da3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9a5f4]; and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a33b3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9cad4]; and ch, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a5e63: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9e4f4]; and ch, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x0016d5f1: add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x00123371: add byte ptr [ebp + 0x13], dh; add esp, 0x3c; ret; 
0x00094602: add byte ptr [ebp + 0x14], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00081845: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x0007a9a6: add byte ptr [ebp + 0x15], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d2d3f: add byte ptr [ebp + 0x15], dh; add esp, 0x28; pop ebx; ret; 
0x0003c7ef: add byte ptr [ebp + 0x15], dh; add esp, 0x98; pop ebx; ret; 
0x0014823d: add byte ptr [ebp + 0x15], dh; mov dword ptr [esi + 0x4e24], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x001672fe: add byte ptr [ebp + 0x16], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016d543: add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0007fca6: add byte ptr [ebp + 0x16], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x001157d4: add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0013e9a2: add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0010c54b: add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000e8b4b: add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x000b248c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000d44bc: add byte ptr [ebp + 0x19], dh; add esp, 0x38; pop ebx; ret; 
0x0003d60a: add byte ptr [ebp + 0x1a], dh; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x00116ca1: add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005bea9: add byte ptr [ebp + 0x1a], dh; add esp, 0x78; pop ebx; ret; 
0x000d1ecc: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0011c091: add byte ptr [ebp + 0x1b], dh; add esp, 0x1018; pop ebx; ret; 
0x0007fe9e: add byte ptr [ebp + 0x1b], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0009a7b9: add byte ptr [ebp + 0x1b], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00170dbc: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000964b8: add byte ptr [ebp + 0x1c], dh; add esp, 0x2c; ret; 
0x000575ac: add byte ptr [ebp + 0x1c], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00127628: add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x0016df81: add byte ptr [ebp + 0x1f], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00171c9e: add byte ptr [ebp + 0x20], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00096984: add byte ptr [ebp + 0x20], dh; add esp, 0x18; pop ebx; ret; 
0x000d6d06: add byte ptr [ebp + 0x20], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00096724: add byte ptr [ebp + 0x20], dh; add esp, 0x2c; ret; 
0x0007ff79: add byte ptr [ebp + 0x20], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x001197e7: add byte ptr [ebp + 0x21], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008cb58: add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0008b06e: add byte ptr [ebp + 0x22], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008cc62: add byte ptr [ebp + 0x22], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00119544: add byte ptr [ebp + 0x22], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00121775: add byte ptr [ebp + 0x23], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001279a3: add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x00127503: add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x00073925: add byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0013621e: add byte ptr [ebp + 0x24], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00118ef2: add byte ptr [ebp + 0x24], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003cd93: add byte ptr [ebp + 0x25], dh; add esp, 0x128; pop ebx; ret; 
0x0010bd37: add byte ptr [ebp + 0x25], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001273b0: add byte ptr [ebp + 0x26], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001296e8: add byte ptr [ebp + 0x26], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0017a2c0: add byte ptr [ebp + 0x26], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0019f178: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x00170838: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x00085d88: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x0019b398: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00124f5f: add byte ptr [ebp + 0x27], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000bf531: add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x000d6c6e: add byte ptr [ebp + 0x28], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00140a11: add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x00114747: add byte ptr [ebp + 0x29], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003c05e: add byte ptr [ebp + 0x2a], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0011c08a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0014080a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408aa: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x0014096a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a0a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x140a3d; add esp, 0x11c; ret; 
0x0003c7e8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003cd8c: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d390: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d410: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d498: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0005dcf8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x000e09c7: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0acd: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x0011a65d: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0012745b: add byte ptr [ebp + 0x2b], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0019cd42: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0002f6f1: add byte ptr [ebp + 0x2e], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017a09d: add byte ptr [ebp + 0x2e], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016f10b: add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x0008eb77: add byte ptr [ebp + 0x2e], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x0017710a: add byte ptr [ebp + 0x2f], dh; add esp, 0x18; pop ebx; ret; 
0x001042a5: add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00170e41: add byte ptr [ebp + 0x30], dh; add esp, 0x18; pop ebx; ret; 
0x000943c4: add byte ptr [ebp + 0x30], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x001304ad: add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x0005d727: add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00177390: add byte ptr [ebp + 0x31], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e0c9f: add byte ptr [ebp + 0x32], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001649e3: add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000255f0: add byte ptr [ebp + 0x33], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e01ad: add byte ptr [ebp + 0x33], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00176b4d: add byte ptr [ebp + 0x33], dh; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x0003c995: add byte ptr [ebp + 0x34], dh; add esp, 0x28; pop ebx; ret; 
0x0004471d: add byte ptr [ebp + 0x34], dh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0017182d: add byte ptr [ebp + 0x35], dh; add esp, 0x18; pop ebx; ret; 
0x0009564b: add byte ptr [ebp + 0x35], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009bf90: add byte ptr [ebp + 0x35], dh; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000965be: add byte ptr [ebp + 0x36], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00170c7d: add byte ptr [ebp + 0x36], dh; add esp, 0x18; pop ebx; ret; 
0x000948d2: add byte ptr [ebp + 0x36], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000df609: add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x0010bdc2: add byte ptr [ebp + 0x37], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0008e16f: add byte ptr [ebp + 0x37], dh; test byte ptr [edx + 0x80], 0x10; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x00088c57: add byte ptr [ebp + 0x37], dh; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0009b831: add byte ptr [ebp + 0x38], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00040f30: add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x0009afcc: add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0013e795: add byte ptr [ebp + 0x3b], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00086e12: add byte ptr [ebp + 0x3b], dh; mov dword ptr [ebx + 0x1a5c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0011b578: add byte ptr [ebp + 0x3c], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x000bdd4d: add byte ptr [ebp + 0x3cc492], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x0019b670: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000d701c: add byte ptr [ebp + 0x3e6c8a], cl; add byte ptr [ebp - 0x15df736e], cl; call dword ptr [ecx + 0x52]; 
0x00170ed3: add byte ptr [ebp + 0x3e], dh; add esp, 0x18; pop ebx; ret; 
0x000d4118: add byte ptr [ebp + 0x3e], dh; add esp, 0x28; pop ebx; ret; 
0x0010bf5a: add byte ptr [ebp + 0x3e], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000c646b: add byte ptr [ebp + 0x3f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00140811: add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x00140ee9: add byte ptr [ebp + 0x40], dh; add esp, 0x1c; ret; 
0x0007d018: add byte ptr [ebp + 0x41890442], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x00088270: add byte ptr [ebp + 0x42], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000f222e: add byte ptr [ebp + 0x43], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0010ab44: add byte ptr [ebp + 0x44], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d750: add byte ptr [ebp + 0x44], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000f7d24: add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x00137dd3: add byte ptr [ebp + 0x45], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0019a4a8: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x0008cdab: add byte ptr [ebp + 0x47488], cl; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0019d3cc: add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x0019fbdc: add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x0019d8ac: add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x0019d86c: add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x0019d43c: add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x0019d84c: add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x0019d45c: add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x0019d3ec: add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x0019d89c: add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x0019d8cc: add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x0019d8bc: add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x00140971: add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x0003c6cc: add byte ptr [ebp + 0x47], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001798d5: add byte ptr [ebp + 0x48], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00088102: add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011edfd: add byte ptr [ebp + 0x49], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011ed1c: add byte ptr [ebp + 0x4a], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017a347: add byte ptr [ebp + 0x4a], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000956ed: add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00096229: add byte ptr [ebp + 0x4b], dh; add esp, 0x38; pop ebx; ret; 
0x001172f6: add byte ptr [ebp + 0x4b], dh; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00102d1a: add byte ptr [ebp + 0x4c], dh; add esp, 0x28; pop ebx; ret; 
0x00096b02: add byte ptr [ebp + 0x4d], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00125270: add byte ptr [ebp + 0x4d], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000c362b: add byte ptr [ebp + 0x4f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016d233: add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000be266: add byte ptr [ebp + 0x5144244c], cl; push dword ptr [edi + 8]; call ebx; 
0x0013560d: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x001356d9: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x00102ec3: add byte ptr [ebp + 0x53], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010a841: add byte ptr [ebp + 0x53], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00124ff0: add byte ptr [ebp + 0x55], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001151bc: add byte ptr [ebp + 0x56], dh; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x00078e1d: add byte ptr [ebp + 0x56], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001150f2: add byte ptr [ebp + 0x56], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x000610ff: add byte ptr [ebp + 0x57890150], cl; add al, 0xc6; add byte ptr [0xfff792e9], ah; jmp dword ptr [esi - 0x70]; 
0x00078684: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x24]; 
0x0017f759: add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000e23da: add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00120136: add byte ptr [ebp + 0x58], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00117f5e: add byte ptr [ebp + 0x58], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00102dbe: add byte ptr [ebp + 0x58], dh; add esp, 0x28; pop ebx; ret; 
0x0014fd96: add byte ptr [ebp + 0x5a978dc0], al; cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000baa6b: add byte ptr [ebp + 0x5b002674], cl; pop esi; pop edi; xor eax, eax; ret; 
0x00030ec3: add byte ptr [ebp + 0x5b002674], cl; ret; 
0x00131e57: add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x001408b1: add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x0012458f: add byte ptr [ebp + 0x5e0974c0], 0x5b; jl 0x24e60; ret; 
0x000f30ff: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x00027437: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00117c61: add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000503ba: add byte ptr [ebp + 0x5f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d41d1: add byte ptr [ebp + 0x5f], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001708d6: add byte ptr [ebp + 0x60], dh; add esp, 0x18; pop ebx; ret; 
0x000c9c1b: add byte ptr [ebp + 0x61], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e1d14: add byte ptr [ebp + 0x61], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ace6b: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x001356fd: add byte ptr [ebp + 0x6a], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012158d: add byte ptr [ebp + 0x6f], dh; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00199a3b: add byte ptr [ebp + 0x72002674], cl; push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0016a272: add byte ptr [ebp + 0x73], dh; add esp, 0x18; pop ebx; ret; 
0x0016db61: add byte ptr [ebp + 0x76], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0016d31d: add byte ptr [ebp + 0x78], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x000d4914: add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x00102a1f: add byte ptr [ebp + 0x7d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00166c25: add byte ptr [ebp + 0x7f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007b338: add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0009f4e5: add byte ptr [ebp + 0x92c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x001550ee: add byte ptr [ebp + 0x9942484], cl; add byte ptr [eax], al; push eax; push esi; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x0003c236: add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016e193: add byte ptr [ebp + 0xa76c88], cl; add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x001405e9: add byte ptr [ebp + 0xa], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x000a14a5: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x00133378: add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x0014031a: add byte ptr [ebp + 0xa], dh; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00099231: add byte ptr [ebp + 0xa], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00123db9: add byte ptr [ebp + 0xa], dh; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00034aa3: add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x00137d0b: add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0019d209: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00118f5b: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x001289c6: add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x0016d4c7: add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x0010c757: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116f17: add byte ptr [ebp + 0xd], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x0003fd50: add byte ptr [ebp + 0xd], dh; add esp, 4; pop ebx; pop esi; ret; 
0x0016d95e: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00086a77: add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0004256c: add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x000ab10c: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00086d1c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000a08ac: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; ret; 
0x00163abc: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 1; ret; 
0x00171d0c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00088dcc: add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x00086d9c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; xor eax, eax; ret; 
0x000c1036: add byte ptr [ebp + 0xff889ed], al; xchg ebp, eax; ret 0x6eb; 
0x00025573: add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00025552: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003fe3f: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0016e8de: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x0003bd2e: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0009126d: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x0009a2e2: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000d2e6c: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x0005dd86: add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x00088ae7: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001160cd: add byte ptr [ebp + 6], dh; add esp, 0x14; pop esi; pop edi; ret; 
0x0003d23e: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b26e: add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00171ef4: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00126f4c: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008c8bf: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d71dc: add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0011b392: add byte ptr [ebp + 7], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e0b5f: add byte ptr [ebp + 7], dh; add esp, 0x38; mov eax, edx; pop ebx; ret; 
0x0012793c: add byte ptr [ebp + 7], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0003d49f: add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x00171fb5: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x00115253: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014483b: add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x0005dcff: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0011a664: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x0011c1d3: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e09ce: add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003af7b: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x0008ee55: add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x00052750: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a0407: add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003c770: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0019b6a4: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x00094300: add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x0012b123: add byte ptr [ebp - 0x1062337a], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x000a94a7: add byte ptr [ebp - 0x137c00ba], cl; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0016ec6c: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x000d7022: add byte ptr [ebp - 0x15df736e], cl; call dword ptr [ecx + 0x52]; 
0x0009b73e: add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x00096115: add byte ptr [ebp - 0x19ad637d], cl; jmp dword ptr [ebp - 0x5d]; 
0x00096115: add byte ptr [ebp - 0x19ad637d], cl; jmp dword ptr [ebp - 0x5d]; push eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19af037d], cl; call dword ptr [ecx + 0x50]; 
0x00096121: add byte ptr [ebp - 0x19af037d], cl; call dword ptr [ecx + 0x50]; 
0x0011ef5c: add byte ptr [ebp - 0x268afea6], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x001073b5: add byte ptr [ebp - 0x2b7bf040], al; add eax, 0x1bf0000; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00024b92: add byte ptr [ebp - 0x33], dh; ret; 
0x00056627: add byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x73]; 
0x000d0c16: add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x0019f91c: add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x0019f9ff: add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0014892f: add byte ptr [ebp - 0x387cfeba], cl; adc byte ptr [ecx], bh; ret 0x5e74; 
0x0007fda0: add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x0011c0fa: add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x00060b17: add byte ptr [ebp - 0x3e761fbe], cl; mov eax, ebx; cmp cl, 0x5a; jbe 0x61b9f; jmp eax; 
0x00167ba3: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x0019d46c: add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x000715be: add byte ptr [ebp - 0x457af025], al; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ed187: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x4977b]; call dword ptr [eax - 0x75]; 
0x00094445: add byte ptr [ebp - 0x46efdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x0010c3e1: add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099e07: add byte ptr [ebp - 0x47e7dbac], cl; add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00124fca: add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019292b: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x192939; neg eax; ret; 
0x00158b87: add byte ptr [ebp - 0x4f7af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0014d80f: add byte ptr [ebp - 0x577af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0009141f: add byte ptr [ebp - 0x57bf037], al; add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0012473e: add byte ptr [ebp - 0x57c16b0], cl; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x0016e199: add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0014cd23: add byte ptr [ebp - 0x63dcb7a], cl; call dword ptr [eax - 0x73]; 
0x00126f83: add byte ptr [ebp - 0x64b3f79], cl; call dword ptr [eax - 0x18]; 
0x00104981: add byte ptr [ebp - 0x64f837d], cl; call dword ptr [eax - 0x73]; 
0x000bda03: add byte ptr [ebp - 0x6556b79], cl; call dword ptr [eax - 0x73]; 
0x000bd76e: add byte ptr [ebp - 0x655777b], cl; call dword ptr [eax - 0x73]; 
0x000a14eb: add byte ptr [ebp - 0x6575f80], cl; call dword ptr [eax + 0x68]; 
0x000a0fe2: add byte ptr [ebp - 0x657a380], cl; call dword ptr [eax + 0x68]; 
0x0009d4ae: add byte ptr [ebp - 0x658237d], cl; call dword ptr [eax - 0x73]; 
0x0007e043: add byte ptr [ebp - 0x66df37a], cl; call dword ptr [eax - 0x73]; 
0x00058368: add byte ptr [ebp - 0x677637a], cl; call dword ptr [eax - 0x73]; 
0x0006c131: add byte ptr [ebp - 0x67c1fb6], cl; pop edx; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x000318ff: add byte ptr [ebp - 0x67de780], cl; call dword ptr [eax - 0x18]; 
0x00030e42: add byte ptr [ebp - 0x67e3f79], cl; call dword ptr [eax - 0x73]; 
0x0002755f: add byte ptr [ebp - 0x6813779], cl; call dword ptr [eax - 0x73]; 
0x00024ea5: add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x00146c16: add byte ptr [ebp - 0x6941d7d], cl; call dword ptr [eax - 0x73]; 
0x0014769a: add byte ptr [ebp - 0x6941d7e], cl; call dword ptr [eax - 0x73]; 
0x0005cf0f: add byte ptr [ebp - 0x6973f7b], cl; call dword ptr [ebx + 0x50]; 
0x0002492d: add byte ptr [ebp - 0x69a897d], cl; call dword ptr [edi + 0x57]; 
0x00033e1c: add byte ptr [ebp - 0x69a897d], cl; call dword ptr [esi - 1]; 
0x001245f5: add byte ptr [ebp - 0x69bed62], cl; call dword ptr [ebx - 0x18]; 
0x0011ded2: add byte ptr [ebp - 0x69d5b6d], cl; dec dword ptr [ecx + 0x1c938d16]; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0011d46d: add byte ptr [ebp - 0x69d987d], cl; call dword ptr [edx + 0x52]; 
0x0011d453: add byte ptr [ebp - 0x69dec7d], cl; call dword ptr [ecx + 0x51]; 
0x0011d3b7: add byte ptr [ebp - 0x69f8b7d], cl; call dword ptr [edx + 0x52]; 
0x0011d39d: add byte ptr [ebp - 0x69faf7d], cl; call dword ptr [ecx + 0x51]; 
0x0011d301: add byte ptr [ebp - 0x6a09f7d], cl; call dword ptr [edx + 0x52]; 
0x0011d2e7: add byte ptr [ebp - 0x6a0d57d], cl; call dword ptr [ecx + 0x51]; 
0x0011bf75: add byte ptr [ebp - 0x6a5d680], cl; jmp dword ptr [ebp - 0x75]; 
0x00107427: add byte ptr [ebp - 0x6a76c79], cl; call dword ptr [eax - 0x73]; 
0x000e963c: add byte ptr [ebp - 0x6a91079], cl; call dword ptr [eax - 0x73]; 
0x000398f6: add byte ptr [ebp - 0x6aa9655], cl; inc dword ptr [ebx - 0x7c72f314]; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0009f5cf: add byte ptr [ebp - 0x6af1b79], cl; call dword ptr [eax - 0x73]; 
0x0009e378: add byte ptr [ebp - 0x6af1b7f], cl; call dword ptr [eax - 0x73]; 
0x00098b03: add byte ptr [ebp - 0x6af3579], cl; call dword ptr [eax - 0x73]; 
0x00097576: add byte ptr [ebp - 0x6af977f], cl; call dword ptr [eax - 0x73]; 
0x000905cd: add byte ptr [ebp - 0x6b0397a], cl; call dword ptr [eax - 0x73]; 
0x0008f7f3: add byte ptr [ebp - 0x6b0417a], cl; call dword ptr [eax - 0x73]; 
0x0008dcd4: add byte ptr [ebp - 0x6b0f27a], cl; call dword ptr [eax - 0x73]; 
0x0008cbbb: add byte ptr [ebp - 0x6b12c79], cl; call dword ptr [eax - 0x73]; 
0x0008e000: add byte ptr [ebp - 0x6b12c7a], cl; call dword ptr [eax - 0x73]; 
0x0017e3ff: add byte ptr [ebp - 0x6bdee79], cl; call dword ptr [eax + 0x6a]; 
0x00045011: add byte ptr [ebp - 0x6c05c79], cl; call dword ptr [eax - 0x73]; 
0x0004bb93: add byte ptr [ebp - 0x6c06679], cl; call dword ptr [eax - 0x73]; 
0x0003f42f: add byte ptr [ebp - 0x6c3a57b], cl; inc dword ptr [ebp - 0x277af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x0002945c: add byte ptr [ebp - 0x6c5c579], cl; call dword ptr [eax - 0x73]; 
0x00028efa: add byte ptr [ebp - 0x6c5c57a], cl; call dword ptr [eax - 0x73]; 
0x000287a7: add byte ptr [ebp - 0x6c5c57d], cl; call dword ptr [eax - 0x73]; 
0x0005429f: add byte ptr [ebp - 0x6c7af00a], al; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x0007ab00: add byte ptr [ebp - 0x6df7d], cl; call dword ptr [eax - 0x73]; 
0x0008eead: add byte ptr [ebp - 0x7152372], cl; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019e40b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x0019e45b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x0019e3fb: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x0019eabb: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x0019ea5b: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x0019d38b: add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x0002ea4d: add byte ptr [ebp - 0x72ffe2bc], cl; dec esp; adc eax, 0x73d33900; sbb dword ptr [ebx - 0x7cf3dbac], ecx; ret 0x8301; 
0x0007d59a: add byte ptr [ebp - 0x73371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x001218a8: add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001217f8: add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00102d98: add byte ptr [ebp - 0x74cc8a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00103014: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cf4: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00102f4d: add byte ptr [ebp - 0x74d18a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102e9d: add byte ptr [ebp - 0x74d18a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0011b009: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aab9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c429: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010acd9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010af59: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0017d725: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00140c9d: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x000df680: add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x00087930: add byte ptr [ebp - 0x76ec8b40], al; dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0017a4fe: add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0009444e: add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x0009c28f: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0014c15f: add byte ptr [ebp - 0x77], dl; ret 0xe589; 
0x000b34db: add byte ptr [ebp - 0x77ffd98c], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000d5c58: add byte ptr [ebp - 0x787af040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7acbdbbc], cl; ror byte ptr [edi], 0x84; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000c19b3: add byte ptr [ebp - 0x7af0fb98], cl; wait; add al, 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x000865ee: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00098217: add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x667e779]; call dword ptr [eax - 0x73]; 
0x0013d288: add byte ptr [ebp - 0x7cbb8b40], al; in al, dx; add al, 0x89; ret; 
0x00144788: add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00143d18: add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000ad29f: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000df874: add byte ptr [ebp - 0x7cd08b40], al; in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x00035df7: add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x0017a32b: add byte ptr [ebp - 0x7cd78b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x00130b17: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x130b53; call eax; 
0x00127002: add byte ptr [ebp - 0x7ce18b2e], al; in al, dx; or byte ptr [ebp - 0x64b1379], cl; call dword ptr [eax + 0x55]; 
0x0002714d: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x0014771d: add byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00140f75: add byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0005772f: add byte ptr [ebp - 0x7cf38b40], al; call 0x448003b; ret; 
0x00164378: add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0009ab24: add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00167ce5: add byte ptr [ebp - 0x7cf98b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001466d5: add byte ptr [ebp - 0x7cf98b40], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00163dcb: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0009dc9b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x00179b3b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf604; 
0x0019903b: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x000e633c: add byte ptr [ebp - 0x7cffe2b4], cl; ret; 
0x0018e72b: add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x001721d6: add byte ptr [ebp - 0x8f36e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0007b33e: add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0019cffb: add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x000a3125: add byte ptr [ebp - 0xa94437e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001333f5: add byte ptr [ebp - 0xa94537e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a3175: add byte ptr [ebp - 0xa97637e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00133445: add byte ptr [ebp - 0xa97737e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a29b5: add byte ptr [ebp - 0xa9a837e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001333a5: add byte ptr [ebp - 0xa9a937e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0016f2a7: add byte ptr [ebp - 0xc1a037d], cl; call dword ptr [eax - 0x73]; 
0x00169867: add byte ptr [ebp - 0xc74137d], cl; call dword ptr [eax - 0x73]; 
0x0015285c: add byte ptr [ebp - 0xdfb4379], cl; call dword ptr [eax + 0x6a]; 
0x00152d58: add byte ptr [ebp - 0xdfb437d], cl; call dword ptr [eax + 0x6a]; 
0x001251e3: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x0003c3dd: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0009a130: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x00102cb4: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003c39e: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0011772a: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000e2e51: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0013616f: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x00096288: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0011cb88: add byte ptr [ebp], 0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011cc1a: add byte ptr [ebp], 0; add esp, 8; pop ebx; ret; 
0x000f26cc: add byte ptr [ebp], bh; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x00145e48: add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0011a49b: add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x000950db: add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000f9077: add byte ptr [ebx + 0x1042454], cl; ret 0x7c80; 
0x000778df: add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0005f816: add byte ptr [ebx + 0x1082454], cl; rol byte ptr [ebp + 0x71840fdb], 1; or dword ptr [eax], eax; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00163d2f: add byte ptr [ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010cfae: add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x0011b4b2: add byte ptr [ebx + 0x10c80], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0011b9be: add byte ptr [ebx + 0x10c82], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x11b9cd; ret; 
0x0018a219: add byte ptr [ebx + 0x11740fe7], al; call 0x17d639; add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00188219: add byte ptr [ebx + 0x11740fe7], al; call 0x17d639; add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000e23ae: add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000497c7: add byte ptr [ebx + 0x1489fc50], cl; mov eax, 0x3904e883; ret; 
0x000fa0da: add byte ptr [ebx + 0x148b6440], cl; mov eax, 0x840fd285; pop ds; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x00033ce4: add byte ptr [ebx + 0x16c80], cl; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000328d4: add byte ptr [ebx + 0x16c80], cl; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e317: add byte ptr [ebx + 0x17083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e550b: add byte ptr [ebx + 0x178ab84], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x001298ea: add byte ptr [ebx + 0x18], bh; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x00186f25: add byte ptr [ebx + 0x18], dh; call 0x17d639; add ebx, 0x472eb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0016e43f: add byte ptr [ebx + 0x18c83], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00146c81: add byte ptr [ebx + 0x197f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0016e4cf: add byte ptr [ebx + 0x19883], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005d721: add byte ptr [ebx + 0x19ec83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0019dfef: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019f00f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019e6af: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0014d297: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00076ea0: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010c3da: add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0019042e: add byte ptr [ebx + 0x1c740fe7], al; call 0x17d639; add ebx, 0x3eb9f; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f42e: add byte ptr [ebx + 0x1c740fe7], al; call 0x17d639; add ebx, 0x3f9df; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e44e: add byte ptr [ebx + 0x1c740fe7], al; call 0x17d639; add ebx, 0x407ff; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0003451d: add byte ptr [ebx + 0x1c880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0018c20b: add byte ptr [ebx + 0x1f740fe7], al; call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0017b073: add byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x001027b2: add byte ptr [ebx + 0x207f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00040e82: add byte ptr [ebx + 0x207f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017c3e1: add byte ptr [ebx + 0x217f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00089c6d: add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00177180: add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x0003f5f0: add byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00165e96: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00044cb9: add byte ptr [ebx + 0x24448903], cl; cmp al, 0x89; ret 0xc483; 
0x000d5456: add byte ptr [ebx + 0x247f01f8], al; add esp, 8; pop ebx; ret; 
0x0014cbfd: add byte ptr [ebx + 0x257f01f8], al; add esp, 8; pop ebx; ret; 
0x0008c90d: add byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x0005cdaf: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0013f8f0: add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000dcc1e: add byte ptr [ebx + 0x29042474], cl; retf 0x490f; ret 0xc101; 
0x000db80f: add byte ptr [ebx + 0x2904247c], cl; retf 0x490f; ret 0x348d; 
0x00051b7f: add byte ptr [ebx + 0x29282454], cl; ret 0x5489; 
0x0011993f: add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x0019dfdf: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019efff: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019e69f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x0012372b: add byte ptr [ebx + 0x2f7f01f9], al; add esp, 8; pop ebx; ret; 
0x0008df04: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d936: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x00115ef4: add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000bb2cf: add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0003fdce: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000ede58: add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ea804: add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x57]; 
0x001265c5: add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00125245: add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0017bdfe: add byte ptr [ebx + 0x36ff04ec], al; push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0008961b: add byte ptr [ebx + 0x377f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0007e76f: add byte ptr [ebx + 0x389cfe0], al; pop ebx; pop esi; pop edi; ret; 
0x0002a638: add byte ptr [ebx + 0x39042444], cl; ret; 
0x0012c727: add byte ptr [ebx + 0x390c2444], cl; ret 0x830f; 
0x0002d493: add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0012f36f: add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x0012d59c: add byte ptr [ebx + 0x3910247c], cl; jl 0x12d5c8; sbb al, 0xf; xchg esp, eax; ret; 
0x001a5bb7: add byte ptr [ebx + 0x3910247c], cl; ret 0x840f; 
0x00168af8: add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x0004f94f: add byte ptr [ebx + 0x39182444], cl; ret; 
0x000be751: add byte ptr [ebx + 0x391c2444], cl; ror dword ptr [edi], 0x85; ret 2; 
0x000a0544: add byte ptr [ebx + 0x39242444], cl; ret; 
0x000c9748: add byte ptr [ebx + 0x39302444], cl; ret; 
0x0013d6ab: add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00144f6d: add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x0005d8f1: add byte ptr [ebx + 0x397f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0019dfcf: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019efef: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019e68f: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x00102467: add byte ptr [ebx + 0x3b7f01f8], al; call dword ptr [esi]; 
0x0017a4f8: add byte ptr [ebx + 0x3bc80], cl; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0012a207: add byte ptr [ebx + 0x3d096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001020ce: add byte ptr [ebx + 0x3fac93], cl; add byte ptr [ecx], bh; ret 0x850f; 
0x0017ec77: add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x00075eb2: add byte ptr [ebx + 0x428b4850], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000001; ret; 
0x00081ad0: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396574c9], al; ret; 
0x000795b0: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x397574c9], al; ret; 
0x0007ecb7: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x4a840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0007678f: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x2d7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00076c80: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add dword ptr gs:[eax], eax; add byte ptr [ecx], bh; ret; 
0x00079bb0: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add eax, 0x39000001; ret; 
0x00080980: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, 0x39000001; ret; 
0x00078ff2: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x0007e404: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; jmp 0x3907e418; ret; 
0x0007efb0: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebp, 0x39000000; ret; 
0x0008084d: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret; 
0x0007824d: add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x394874c9], al; ret; 
0x001041bf: add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x00163dcf: add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x163dfd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016a45f: add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00166457: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x166485; sbb al, 0x53; call dword ptr [eax]; 
0x0016ec6f: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x16ec9d; adc al, 0x53; call dword ptr [eax]; 
0x0016ee5e: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x16ee8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016bac1: add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00164a9f: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00041541: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0008943e: add byte ptr [ebx + 0x4408b08], cl; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00032aa7: add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x000a053e: add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0015856d: add byte ptr [ebx + 0x448b08ec], 0x24; sub byte ptr [ebp - 0x6900b80], cl; call dword ptr [eax - 1]; 
0x0003c47f: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d942: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000cc312: add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00082302: add byte ptr [ebx + 0x448d08ec], al; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000837c5: add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00081ff5: add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007d471: add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075673: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0016c5ab: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00089a57: add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000b6e3f: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00039dc3: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00034232: add byte ptr [ebx + 0x48b2440], cl; nop; ret; 
0x000341f2: add byte ptr [ebx + 0x48b2c40], cl; nop; ret; 
0x000be120: add byte ptr [ebx + 0x48d14c4], al; cwde; pop ebx; pop esi; ret; 
0x000cc7cb: add byte ptr [ebx + 0x48db455], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000cb74c: add byte ptr [ebx + 0x48db455], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0013064f: add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x0019dfbf: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x0019efdf: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0019e67f: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00170877: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00169799: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016c219: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016b849: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0014d817: add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000d1def: add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0016b408: add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00168e8e: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00163deb: add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0016ccb9: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x00117403: add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x0009afef: add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00125c2a: add byte ptr [ebx + 0x53564d41], bh; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00163ea7: add byte ptr [ebx + 0x54890045], cl; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00033cea: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342ba: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003428a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000341aa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003417a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003414a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003408a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340ea: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033ffa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340ba: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003405a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003425a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003402a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003411a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fca: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0003fe31: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b1: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008ef34: add byte ptr [ebx + 0x548b684d], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e8b57: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0017f709: add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000ef887: add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0012e391: add byte ptr [ebx + 0x55500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012f553: add byte ptr [ebx + 0x56500cc4], al; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e174: add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00076a67: add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0007892c: add byte ptr [ebx + 0x575304ec], al; push esi; call dword ptr [eax + 0x2c]; 
0x00078893: add byte ptr [ebx + 0x575304ec], al; push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x001580c1: add byte ptr [ebx + 0x597f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0009df77: add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000ba2ea: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00123af3: add byte ptr [ebx + 0x5b108916], cl; pop esi; pop edi; ret; 
0x0019dfaf: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x0019efcf: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0019e66f: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x000f29f1: add byte ptr [ebx + 0x5c086bc], cl; stc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000770af: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000b6e87: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x0011c31f: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0002603f: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001053d5: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0003d6d7: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00042694: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000744b0: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0015e7cb: add byte ptr [ebx + 0x5e5b1814], cl; pop edi; mov eax, edx; ret; 
0x00089565: add byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00030061: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0007def8: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x001153d3: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00023529: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0016453e: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00164679: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00027c56: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000bca07: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00044a60: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000bd518: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x001051d2: add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0002efe3: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000756e2: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0008cb03: add byte ptr [ebx + 0x5e8b1845], cl; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x00116aed: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000d1f26: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000f9f04: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x00148264: add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00131e5f: add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0010b712: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x001a0949: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0002345f: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c90c: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000baa6f: add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x00024c17: add byte ptr [ebx + 0x5e], bl; ret; 
0x00041e32: add byte ptr [ebx + 0x5e], bl; sub eax, ecx; ret; 
0x0019f02f: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0012a70f: add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x0014b847: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0013d32f: add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003c5dd: add byte ptr [ebx + 0x5f], bl; ret; 
0x000f2cd8: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000aafff: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0004249c: add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x0009aa04: add byte ptr [ebx + 0x67650f8], al; ret; 
0x00094ba7: add byte ptr [ebx + 0x685504ec], al; ret 0xa00; 
0x00086786: add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x00165e9c: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0003e407: add byte ptr [ebx + 0x6a08ec], al; push edx; call eax; 
0x00075807: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00089edb: add byte ptr [ebx + 0x6a0cec], al; call 0x894b0; add esp, 0x1c; ret; 
0x00163ecd: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0019df9f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x0019efbf: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0019e65f: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x0009a6b3: add byte ptr [ebx + 0x6c8b28ec], al; and al, 0x3c; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0009600f: add byte ptr [ebx + 0x708b0cec], al; or al, 0xff; jo 0x9601d; call dword ptr [eax]; 
0x0003dc7d: add byte ptr [ebx + 0x708d04ec], al; call dword ptr [esi + 0x57]; 
0x0013e8d6: add byte ptr [ebx + 0x7422373c], al; ret; 
0x00124425: add byte ptr [ebx + 0x7426023c], al; sub bh, byte ptr [eax - 1]; add esp, 8; pop ebx; ret; 
0x000dffe1: add byte ptr [ebx + 0x748b2414], cl; and al, 8; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0012d6b4: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x24; push 0; push 0x2000004; call eax; 
0x00081eb6: add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00163e01: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0003e9d8: add byte ptr [ebx + 0x74ff08ec], al; and al, 0xc; push dword ptr [esp + 0x3c]; call eax; 
0x001585b8: add byte ptr [ebx + 0x74ff10c4], al; and al, 4; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0017e3af: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x17dad0; add esp, 0x18; pop ebx; ret; 
0x0010288f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0007f58f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x757a0; add esp, 0x18; pop ebx; ret; 
0x0011ee5f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0017c2e3: add byte ptr [ebx + 0x7514245c], cl; push es; pop ebx; ret; 
0x00078b12: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x78b28; push esi; call dword ptr [ebx + 0x2c]; 
0x0016c54a: add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x0019e64f: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x00163f35: add byte ptr [ebx + 0x7c8d08ec], al; and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00083754: add byte ptr [ebx + 0x7e39087e], cl; or al, 0xf; test bh, bl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0008993a: add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x00124fff: add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e3a33: add byte ptr [ebx + 0x8838c], cl; stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00057968: add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x0003422d: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000341ed: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000328da: add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0011a7a0: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e2: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x11a988; call eax; 
0x0003453d: add byte ptr [ebx + 0x9080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00088a35: add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e90d4d; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x000344fd: add byte ptr [ebx + 0x9880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001250da: add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003ccc4: add byte ptr [ebx + 0xa080], cl; add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002556d: add byte ptr [ebx + 0xa080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0015f7c2: add byte ptr [ebx + 0xa080], cl; add byte ptr [ebx + 0xf0b023c], al; xchg ebp, eax; ret 0xc483; 
0x001549ad: add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x0017d71f: add byte ptr [ebx + 0xa081], cl; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0014bbf8: add byte ptr [ebx + 0xa085], cl; add byte ptr [ecx], dh; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x00118d12: add byte ptr [ebx + 0xa0bd], cl; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010b23e: add byte ptr [ebx + 0xa4248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0008a860: add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0010b245: add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010b24c: add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019dfff: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019f01f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0009208f: add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x0019e6bf: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00121be7: add byte ptr [ebx + 0xb7f01f8], al; add esp, 8; pop ebx; ret; 
0x00086ecf: add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0010b576: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b500: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00128a0c: add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012a8bd: add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x0010b50c: add byte ptr [ebx + 0xbc24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e342e: add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013541d: add byte ptr [ebx + 0xc080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0010484f: add byte ptr [ebx + 0xc509384], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000df66f: add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010396c: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00033745: add byte ptr [ebx + 0xc892404], cl; mov al, 0x8b; test byte ptr [ebx - 0x7f4], dh; test eax, eax; je 0x33759; call eax; 
0x00141cb6: add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x0016d197: add byte ptr [ebx + 0xcec8303], cl; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00123e01: add byte ptr [ebx + 0xd0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00057776: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; or ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x00104a24: add byte ptr [ebx + 0xd989384], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00128cb7: add byte ptr [ebx + 0xe], bh; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00128cfe: add byte ptr [ebx + 0xe], bh; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0010119f: add byte ptr [ebx + 0xf00903c], al; test dword ptr [edx - 0x7c000005], esi; ret 0x8301; 
0x0015f434: add byte ptr [ebx + 0xf0b023c], al; xchg ebp, eax; ret 0xc483; 
0x0010c29a: add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00196d40: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000f268a: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8bc3; 
0x000f26cf: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x0017f38f: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0008d931: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00103c71: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eef5: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00104075: add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00185fbd: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x0012452c: add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00024452: add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x24427; call dword ptr [ebp - 0x38]; 
0x000e8983: add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x0016b051: add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x000805e8: add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0016c004: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016ce38: add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000830d1: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x000ee0d1: add byte ptr [ebx - 0x137cebc0], cl; or al, 0x89; test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x00164042: add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00163de8: add byte ptr [ebx - 0x137cffbb], cl; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00104081: add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x00103fa5: add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00103f95: add byte ptr [ebx - 0x14b7b], cl; inc dword ptr [ebx + 0xf000478]; mov ds, word ptr [edx]; add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00107bf9: add byte ptr [ebx - 0x14d3db84], cl; sbb dword ptr [ebx - 0x7cefdbbc], ecx; ret; 
0x000f2348: add byte ptr [ebx - 0x15637b], cl; inc dword ptr [ebx - 0x6772f714]; and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x001a2dac: add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0017fe5b: add byte ptr [ebx - 0x17], bl; push cs; lock dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00158672: add byte ptr [ebx - 0x17a8f314], al; add al, 0x25; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x00032ad4: add byte ptr [ebx - 0x17a8f314], al; add bl, byte ptr [ebx - 0x3b7cfff8]; adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x000868a4: add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x00094bf4: add byte ptr [ebx - 0x17a8f314], al; xor ah, byte ptr [eax - 0x3b7cfff8]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0010fa57: add byte ptr [ebx - 0x17adf314], al; das; aaa; int1; jmp dword ptr [ebp - 0x75]; 
0x0015dcf1: add byte ptr [ebx - 0x17adf314], al; lds esi, ptr [esi - 0x3b7c000e]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x0010e127: add byte ptr [ebx - 0x17adf314], al; pop edi; push eax; int1; jmp dword ptr [ebp - 0x75]; 
0x000819df: add byte ptr [ebx - 0x17afe714], al; mov bh, 0x39; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011c894: add byte ptr [ebx - 0x17aff314], al; ret 0xf621; 
0x000745d4: add byte ptr [ebx - 0x17cbdbac], cl; ret 0xfffc; 
0x00145dcb: add byte ptr [ebx - 0x17e3dba4], cl; ret; 
0x00075050: add byte ptr [ebx - 0x18736c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00103db6: add byte ptr [ebx - 0x18], dl; ret; 
0x00037b3b: add byte ptr [ebx - 0x1c763], cl; inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00031a8b: add byte ptr [ebx - 0x1d373], cl; dec dword ptr [ebp - 0x67e077f]; call dword ptr [eax - 0x73]; 
0x000312a6: add byte ptr [ebx - 0x1e373], cl; jmp ptr [ecx]; ret; 
0x000cbfbe: add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0005d132: add byte ptr [ebx - 0x24917e1], cl; std; jmp ptr [ecx]; ret; 
0x00024e9d: add byte ptr [ebx - 0x2497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x00025863: add byte ptr [ebx - 0x2708ef3c], al; sbb eax, eax; add esp, 0xc; ret; 
0x00119c89: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x00119f83: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x001196e5: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0014f6e3: add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x000bf46c: add byte ptr [ebx - 0x2776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011ec51: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x0008ea4b: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00089d3f: add byte ptr [ebx - 0x2d7aefab], cl; je 0x89d80; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00094979: add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03a4c0d; ret; 
0x00170a6e: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x001355d0: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011c71d: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0014aedb: add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x000ff9b8: add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000551ff: add byte ptr [ebx - 0x35ff7b], al; jmp eax; 
0x00054776: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [ebx - 0x367f43]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cfe27: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000536c6: add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00055147: add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000cec1b: add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x00054f6a: add byte ptr [ebx - 0x36374b], cl; call dword ptr [edi - 1]; 
0x000d003f: add byte ptr [ebx - 0x363f7b], al; call dword ptr [eax]; 
0x000cee8e: add byte ptr [ebx - 0x363f7b], cl; dec dword ptr [ebx - 0x363b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cfb2a: add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000ce64f: add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000d0f17: add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x000cf614: add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000ce9fe: add byte ptr [ebx - 0x365363], cl; jmp dword ptr [ebp - 0x75]; 
0x000542a7: add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x00056815: add byte ptr [ebx - 0x365f43], cl; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0005445f: add byte ptr [ebx - 0x365f43], cl; dec dword ptr [ebp - 0x7b379]; call dword ptr [eax - 0x73]; 
0x00055617: add byte ptr [ebx - 0x365f63], cl; call dword ptr [eax - 1]; 
0x000ce0d2: add byte ptr [ebx - 0x367b43], cl; dec dword ptr [ebx - 0x35ff73]; dec dword ptr [ecx - 0x47bb7226]; add al, 0x81; ret 0; 
0x0010c5cf: add byte ptr [ebx - 0x37769f3c], al; pop ebx; pop esi; pop edi; ret; 
0x0016a507: add byte ptr [ebx - 0x397cf714], al; or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0012fcd7: add byte ptr [ebx - 0x3b7c4bab], cl; or al, 0x50; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x000f48ef: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0003fdd0: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000260e5: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00165f37: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0008da52: add byte ptr [ebx - 0x3c76df20], al; jne 0x8d5be; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0004204d: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00041fbb: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004201f: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00041f8d: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00058fff: add byte ptr [ebx - 0x3d7cfbb6], cl; add al, 0x83; ret; 
0x0008b4df: add byte ptr [ebx - 0x3e2f76ed], cl; call 0x893828ed; clc; call dword ptr gs:[0x10]; 
0x0016e09b: add byte ptr [ebx - 0x3e7cf714], al; add al, 0x8b; inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x00085b86: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x85b80; ret; 
0x00088904: add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x88910; ret; 
0x0011b4b8: add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0016f183: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x16f170; add esp, 8; pop ebx; ret; 
0x0003c0b4: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c0c8; add esp, 8; pop ebx; ret; 
0x0003c363: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c370; add esp, 8; pop ebx; ret; 
0x001279f0: add byte ptr [ebx - 0x3f7aef3c], al; js 0x127a00; add esp, 8; pop ebx; ret; 
0x0011b9c4: add byte ptr [ebx - 0x3f7af3c0], cl; je 0x11b9cd; ret; 
0x0010269f: add byte ptr [ebx - 0x3f7af7bb], cl; je 0x102592; call eax; 
0x00102657: add byte ptr [ebx - 0x3f7afbbb], cl; je 0x102592; call eax; 
0x001026e7: add byte ptr [ebx - 0x3f7afbbb], cl; je 0x1025e7; call eax; 
0x001481df: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x1481ec; cmp dword ptr [eax + 8], edx; jne 0x1481e0; ret; 
0x00035a70: add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x35a03; ret; 
0x00041afe: add byte ptr [ebx - 0x3fceef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x0008e289: add byte ptr [ebx - 0x3fceef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0005e5e7: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0003fe7e: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0008a92d: add byte ptr [ebx - 0x3fcefb3c], al; pop esi; pop edi; ret; 
0x0005d368: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x1c; ret; 
0x001613d8: add byte ptr [ebx - 0x41f0c7ec], cl; ret; 
0x0013849a: add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000a560f: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0xa5610; pop ebx; ret; 
0x001869bf: add byte ptr [ebx - 0x42], dh; call 0x17d639; add ebx, 0x475d1; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001789df: add byte ptr [ebx - 0x4472f714], al; nop; leave; stc; call dword ptr [edi + 0x56]; 
0x00177962: add byte ptr [ebx - 0x4472f714], al; out dx, eax; jne 0x177964; call dword ptr [edi + 0x56]; 
0x00066364: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0006425c: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0013e54f: add byte ptr [ebx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0003c454: add byte ptr [ebx - 0x46dfdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000f1e7c: add byte ptr [ebx - 0x46f43], cl; dec dword ptr [ebp - 0x6507379]; call dword ptr [eax - 0x73]; 
0x000ede62: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ea80e: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x57]; 
0x000ea491: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x000ea76f: add byte ptr [ebx - 0x46f7b], cl; inc dword ptr [ebx - 0x7f72f314]; and byte ptr [edi - 7], dl; call dword ptr [eax - 0x18]; 
0x0003c3d4: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00106837: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; and byte ptr [edi - 7], dl; call dword ptr [eax - 0x18]; 
0x0009a46f: add byte ptr [ebx - 0x478bdbb4], cl; add al, 1; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0010b8db: add byte ptr [ebx - 0x479fdba4], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b855: add byte ptr [ebx - 0x479fdba4], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00116751: add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001147f9: add byte ptr [ebx - 0x47cfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0003cfde: add byte ptr [ebx - 0x47fbdba4], cl; movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000f2bde: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xf2bf0; ret; 
0x0019b6af: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19b6c0; neg eax; ret; 
0x0019f7af: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19f7c0; neg eax; ret; 
0x00089f4a: add byte ptr [ebx - 0x48], bl; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0010347f: add byte ptr [ebx - 0x48], bl; or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00093e4f: add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0005d9fe: add byte ptr [ebx - 0x48], dl; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010abde: add byte ptr [ebx - 0x48], dl; and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00115eee: add byte ptr [ebx - 0x48], dl; dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x001249be: add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012505e: add byte ptr [ebx - 0x48], dl; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001252de: add byte ptr [ebx - 0x48], dl; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c3ce: add byte ptr [ebx - 0x48], dl; mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011924e: add byte ptr [ebx - 0x48], dl; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011774e: add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001152ce: add byte ptr [ebx - 0x48], dl; or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012665e: add byte ptr [ebx - 0x48], dl; ret; 
0x0010ac4e: add byte ptr [ebx - 0x48], dl; sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00116b0e: add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00119b7e: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012639e: add byte ptr [ebx - 0x48], dl; xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e9c2e: add byte ptr [ebx - 0x48b43], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [esi - 0x75]; 
0x000ede00: add byte ptr [ebx - 0x48b6b], cl; inc dword ptr [ebp + 0x22850fd2]; or al, byte ptr [eax]; add byte ptr [ebx - 0x49363], cl; inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x00138ad5: add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x000ede0e: add byte ptr [ebx - 0x49363], cl; inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x00178193: add byte ptr [ebx - 0x4c72f714], al; out dx, eax; jne 0x178195; call dword ptr [esi + 0x57]; 
0x0006dc87: add byte ptr [ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006fe33: add byte ptr [ebx - 0x4fb63], cl; dec dword ptr [ebx - 0x51373]; dec dword ptr [ecx - 0x7627feff]; ret; 
0x0012a017: add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000726e1: add byte ptr [ebx - 0x51363], cl; call ecx; 
0x00070198: add byte ptr [ebx - 0x5137b], cl; call ecx; 
0x00177924: add byte ptr [ebx - 0x5472f714], al; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x56]; 
0x0007098f: add byte ptr [ebx - 0x54f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001583ac: add byte ptr [ebx - 0x57cdf3c], al; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00177287: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0008e33e: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x001771fb: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00125364: add byte ptr [ebx - 0x57cf4ec], cl; je 0x1253c3; pop ebx; pop esi; ret; 
0x000658a4: add byte ptr [ebx - 0x58b63], cl; inc dword ptr [ebx - 0x7c72f314]; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00062907: add byte ptr [ebx - 0x58b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006568c: add byte ptr [ebx - 0x5af43], cl; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x000f3692: add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x00121ca0: add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x000e956f: add byte ptr [ebx - 0x5db73], al; call dword ptr [eax]; 
0x00092fa1: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x0009238b: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000f028f: add byte ptr [ebx - 0x5eb73], al; call dword ptr [eax]; 
0x001181e3: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x001159c1: add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115ac4: add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e00bb: add byte ptr [ebx - 0x676dbec], cl; mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0013b62c: add byte ptr [ebx - 0x68f0f008], al; ret; 
0x00121c97: add byte ptr [ebx - 0x6974f7bb], cl; movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x00124542: add byte ptr [ebx - 0x6bf00808], al; ret 0x940f; 
0x000e422f: add byte ptr [ebx - 0x6bf0a308], al; ret; 
0x000c9d8f: add byte ptr [ebx - 0x6bf0fe01], al; ret 0xff83; 
0x000c5a10: add byte ptr [ebx - 0x6bf0fe05], al; ret 0xef39; 
0x00049fec: add byte ptr [ebx - 0x6bf0fe05], al; ret 0xf539; 
0x00158175: add byte ptr [ebx - 0x6e72f714], al; hlt; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x00076312: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0014676b: add byte ptr [ebx - 0x6f72f314], al; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x0009ac5b: add byte ptr [ebx - 0x6f72f314], al; or al, 0xa8; stc; call dword ptr [edx - 0x73]; 
0x001354cc: add byte ptr [ebx - 0x7172fb14], al; test byte ptr [edi - 7], ah; dec dword ptr [ebp - 0x698707a]; call dword ptr [ecx - 0x77]; 
0x0016eea7: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000dfb8a: add byte ptr [ebx - 0x72afdba4], cl; dec esp; and al, 0x1c; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0009a8bc: add byte ptr [ebx - 0x72afeb14], al; cmp byte ptr [ecx + 0x68], 0xf9; call dword ptr [eax - 0x18]; 
0x0004c967: add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x0002ecc7: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002d8cd: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d5a9: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00028d38: add byte ptr [ebx - 0x72bbdb8c], cl; xchg ah, ch; jp 0x28d3b; call dword ptr [eax - 0x73]; 
0x00028eea: add byte ptr [ebx - 0x72bbdb8c], cl; xchg ah, ch; jp 0x28eed; call dword ptr [eax + 0x68]; 
0x00028f0d: add byte ptr [ebx - 0x72bbdb8c], cl; xchg ah, ch; jp 0x28f10; call dword ptr [eax + 0x68]; 
0x00045d97: add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x0004783d: add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x0002e199: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002dfb2: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00029eeb: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e176: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; js 0x2e179; call dword ptr [eax - 0x73]; 
0x0002e1f1: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; js 0x2e1f4; call dword ptr [eax - 0x73]; 
0x00029b28: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ecx + eax*4 - 7], al; call dword ptr [eax - 0x73]; 
0x00029b4b: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x000287e2: add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000287bf: add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00049007: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x0002b69d: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0004a8c0: add byte ptr [ebx - 0x72c7db84], cl; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0002a746: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2a749; call dword ptr [eax - 0x73]; 
0x0002aa26: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2aa29; call dword ptr [eax + 0x68]; 
0x0002aa49: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2aa4c; call dword ptr [eax + 0x68]; 
0x0002aad9: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ebp; jns 0x2aadc; call dword ptr [eax - 0x73]; 
0x0002b0b0: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b0b3; call dword ptr [eax - 0x73]; 
0x0002b76b: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b76e; call dword ptr [eax - 0x73]; 
0x0002b7b1: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b7b4; call dword ptr [eax + 0x68]; 
0x001590ba: add byte ptr [ebx - 0x72c7db8c], cl; scasb al, byte ptr es:[edi]; and al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x0014abf0: add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000c34ee: add byte ptr [ebx - 0x72cbdb8c], cl; xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x001271e3: add byte ptr [ebx - 0x72dfdb94], cl; test dword ptr [ecx], esp; stc; call dword ptr [eax - 0x18]; 
0x000c03f7: add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0093: add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0008f62c: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0009b4c4: add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x000be085: add byte ptr [ebx - 0x72e3dbac], cl; sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x0010d886: add byte ptr [ebx - 0x72e3dbbc], cl; sbb byte ptr [ebx + 0x59], 0xf9; call dword ptr [eax - 0x18]; 
0x0012df7a: add byte ptr [ebx - 0x72e7dbbc], cl; nop; in al, dx; ret 0xffef; 
0x0009c36c: add byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [ecx + ecx], 0; add byte ptr [ecx], bh; ret; 
0x00107417: add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x001070fb: add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0005f24f: add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [esp + ecx*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x0008018a: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [eax], ebx; xchg edx, eax; stc; call dword ptr [eax - 0x73]; 
0x00051667: add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000574ee: add byte ptr [ebx - 0x72fbdbbc], cl; xchg edx, eax; ret; 
0x000b0fbc: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x0012473a: add byte ptr [ebx - 0x72ffcabc], cl; push eax; jmp 0xf1441c9; xchg edi, eax; ret 0xf883; 
0x0019e63f: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x0019e60f: add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0019e4ad: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00125747: add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001261c7: add byte ptr [ebx - 0x749fdba4], cl; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00126257: add byte ptr [ebx - 0x749fdba4], cl; dec esp; and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x000d6e2f: add byte ptr [ebx - 0x749fdba4], cl; push esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000c78a5: add byte ptr [ebx - 0x74a7db84], cl; mov word ptr [eax + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000c413d: add byte ptr [ebx - 0x74a7db84], cl; mov word ptr [eax], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000c11ed: add byte ptr [ebx - 0x74a7db8c], cl; mov word ptr [eax + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x4fbb7226], cl; add al, 0x81; ret 0; 
0x00128b04: add byte ptr [ebx - 0x74b7dbac], cl; je 0x128b30; push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000c2906: add byte ptr [ebx - 0x74b7dbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x000df6d4: add byte ptr [ebx - 0x74bbdb8c], cl; pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00172c70: add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4c75; 
0x00099ad1: add byte ptr [ebx - 0x74bfdba4], cl; push esp; and al, 0x48; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000997fe: add byte ptr [ebx - 0x74bfdba4], cl; push esp; and al, 0x48; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000c8f06: add byte ptr [ebx - 0x74c3dbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x00117185: add byte ptr [ebx - 0x74c7dbac], cl; jl 0x1171b1; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00125ed3: add byte ptr [ebx - 0x74cbdbac], cl; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001029e3: add byte ptr [ebx - 0x74dbdbac], cl; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d94f9: add byte ptr [ebx - 0x74e7db84], cl; mov bh, 0xe4; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x00185f2e: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001290fe: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00125064: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0012ac2b: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x12aad0; add esp, 4; ret; 
0x0005da04: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00129ce7: add byte ptr [ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000f9438: add byte ptr [ebx - 0x74f3dbbc], cl; je 0xf9464; add al, 0x83; ret; 
0x00036b5f: add byte ptr [ebx - 0x74f3dbbc], cl; push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x0004d3b6: add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x00153279: add byte ptr [ebx - 0x74fbdb84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x00127c9c: add byte ptr [ebx - 0x74fbdba4], cl; dec esp; and al, 8; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a80d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3389089]; add byte ptr [eax], al; ret; 
0x0009a7ed: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x33c9089]; add byte ptr [eax], al; ret; 
0x0009a89d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3749089]; add byte ptr [eax], al; ret; 
0x0009aafd: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3c149089]; add byte ptr [eax], al; ret; 
0x001481cd: add byte ptr [ebx - 0x74fbdbac], cl; sub byte ptr [eax], 0x4e; add byte ptr [eax], al; test eax, eax; jne 0x1481e7; ret; 
0x0009a82e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9a840; ret; 
0x0009a86e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x9a880; ret; 
0x0009a9fe: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00046826: add byte ptr [ebx - 0x74fbdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x00109916: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00099754: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c6c9: add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000dfd6d: add byte ptr [ebx - 0x768bdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x001a07cd: add byte ptr [ebx - 0x768fdbbc], cl; ret 0x6c8d; 
0x000500dc: add byte ptr [ebx - 0x76a8eb3c], al; ret; 
0x00073e72: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0004d891: add byte ptr [ebx - 0x76bfdb8c], cl; ret; 
0x00046dfd: add byte ptr [ebx - 0x76cfdb8c], cl; ret; 
0x001369a5: add byte ptr [ebx - 0x76e3db8c], cl; ret; 
0x0012e9a7: add byte ptr [ebx - 0x76e7dba4], cl; inc ebx; add al, 0x83; ret; 
0x0012e8cd: add byte ptr [ebx - 0x76e7dba4], cl; inc ebx; add al, 0x8b; inc esi; adc al, 0x83; ret; 
0x00163b6f: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00046c5c: add byte ptr [ebx - 0x76ebdbb4], cl; ret 0x1b8; 
0x0013b867: add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x001a3d2f: add byte ptr [ebx - 0x76ebdbbc], cl; ret; 
0x0014739f: add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x00088eca: add byte ptr [ebx - 0x76efdbac], cl; ret; 
0x0002c2ec: add byte ptr [ebx - 0x76f3db84], cl; ret 0xfa29; 
0x0008ef72: add byte ptr [ebx - 0x76f3dbac], cl; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000a30ea: add byte ptr [ebx - 0x76f3dbb4], cl; ret 0xf089; 
0x000dd84d: add byte ptr [ebx - 0x76fbdb8c], cl; ret 0x448b; 
0x000dd995: add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x001196c0: add byte ptr [ebx - 0x76fbdbbc], cl; ret; 
0x000acbcc: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x000aadcf: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x00095343: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0009268f: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x0008a847: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00171ad2: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000742af: add byte ptr [ebx - 0x77], dl; ret; 
0x0003f765: add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xffb8; 
0x0006ef6c: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test bl, ch; sbb dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0007fba8: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0010a96d: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x00106181: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x000e3717: add byte ptr [ebx - 0x7872f314], al; push edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x0003076f: add byte ptr [ebx - 0x7872f314], al; xor edi, dword ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0013e5f7: add byte ptr [ebx - 0x7872f714], al; ret; 
0x0006f544: add byte ptr [ebx - 0x78f0ef08], al; imul edi, dword ptr [edi], 0; add byte ptr [ecx], al; ret; 
0x0008dfad: add byte ptr [ebx - 0x7972dbcc], cl; lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x0019ec74: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0015ee95: add byte ptr [ebx - 0x7a72f314], al; loope 0x15ef0e; stc; call dword ptr [eax - 0x18]; 
0x00138257: add byte ptr [ebx - 0x7a72f714], al; out 0x38, eax; stc; call dword ptr [eax + 0x53]; 
0x00153ad6: add byte ptr [ebx - 0x7a8fdbac], cl; ror byte ptr [edi], cl; mov al, dh; add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000d5c60: add byte ptr [ebx - 0x7acbdbbc], cl; ror byte ptr [edi], 0x84; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0005f723: add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc101; 
0x00171f2b: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x00042fd2: add byte ptr [ebx - 0x7ae7dbbc], cl; sal byte ptr [ebp - 0x73], 0x45; inc byte ptr [ebx - 0x6bf00220]; ret 0xfd83; 
0x0013c537: add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xdb85; 
0x0014d216: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6ac667f], cl; call dword ptr [eax + 0x52]; 
0x000c19bc: add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x000c4261: add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x8e; ret 0xf; 
0x00034293: add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000342c3: add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x001020c5: add byte ptr [ebx - 0x7bf00008], al; xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x3fac93], cl; add byte ptr [ecx], bh; ret 0x850f; 
0x000dd611: add byte ptr [ebx - 0x7bf0b807], al; ret 0x19; 
0x000c77e3: add byte ptr [ebx - 0x7bf0d408], al; ret; 
0x000a9a37: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x0019ac04: add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0019f0d2: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00138ea5: add byte ptr [ebx - 0x7bf0fe19], al; mov eax, dword ptr [0x83000002]; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x0019a6a3: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000a079f: add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x00085d4f: add byte ptr [ebx - 0x7c72eb14], al; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x00163bcf: add byte ptr [ebx - 0x7c72ef14], al; lodsb al, byte ptr [esi]; sub al, 0xf3; call dword ptr [eax - 0x73]; 
0x00157a9f: add byte ptr [ebx - 0x7c72ef14], al; sub al, 0x6c; bnd call dword ptr [eax - 0x73]; 
0x0008e21e: add byte ptr [ebx - 0x7c72f314], al; aam 0x93; stc; call dword ptr [eax - 0x18]; 
0x0016b577: add byte ptr [ebx - 0x7c72f314], al; add bl, byte ptr [ecx - 7]; call dword ptr [edi + 0x56]; 
0x000398d4: add byte ptr [ebx - 0x7c72f314], al; cmp bh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x00140d0f: add byte ptr [ebx - 0x7c72f314], al; js 0x140d81; stc; call dword ptr [eax - 0x18]; 
0x000e5627: add byte ptr [ebx - 0x7c72f314], al; push edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x00160c18: add byte ptr [ebx - 0x7c72f314], al; sahf; jb 0x160c1a; call dword ptr [eax - 0x18]; 
0x0014c1ce: add byte ptr [ebx - 0x7c72f314], al; test byte ptr [ebp - 7], ch; call dword ptr [eax - 0x73]; 
0x0002fe04: add byte ptr [ebx - 0x7c72f714], al; add al, 0x3b; stc; call dword ptr [eax - 1]; 
0x0011d263: add byte ptr [ebx - 0x7c72f714], al; add ebx, dword ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x0011d170: add byte ptr [ebx - 0x7c72f714], al; cli; pop ebx; stc; call dword ptr [eax + 0x55]; 
0x0011d1c1: add byte ptr [ebx - 0x7c72f714], al; cmpsb byte ptr [esi], byte ptr es:[edi]; pop esp; stc; call dword ptr [eax + 0x55]; 
0x0011d18b: add byte ptr [ebx - 0x7c72f714], al; das; pop esp; stc; call dword ptr [eax + 0x55]; 
0x0016e29f: add byte ptr [ebx - 0x7c72f714], al; dec esp; sal ebx, cl; call dword ptr [eax - 0x73]; 
0x0011d248: add byte ptr [ebx - 0x7c72f714], al; iretd; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x000f53a7: add byte ptr [ebx - 0x7c72f714], al; jbe 0xf5406; stc; call dword ptr [eax + 0x55]; 
0x0011d1a6: add byte ptr [ebx - 0x7c72f714], al; jo 0x11d20a; stc; call dword ptr [eax + 0x55]; 
0x0011d13a: add byte ptr [ebx - 0x7c72f714], al; jp 0x11d19d; stc; call dword ptr [eax + 0x55]; 
0x000d5728: add byte ptr [ebx - 0x7c72f714], al; lea edx, [ebp - 7]; call dword ptr [eax + 0x57]; 
0x0011d155: add byte ptr [ebx - 0x7c72f714], al; mov bl, 0x5b; stc; call dword ptr [eax + 0x55]; 
0x000d57b2: add byte ptr [ebx - 0x7c72f714], al; out 0x38, eax; stc; call dword ptr [eax + 0x57]; 
0x0011c727: add byte ptr [ebx - 0x7c72f714], al; out 0x38, eax; stc; call dword ptr [eax - 0x73]; 
0x000d520f: add byte ptr [ebx - 0x7c72f714], al; pop eax; push ebp; stc; call dword ptr [eax + 0x56]; 
0x0011d11f: add byte ptr [ebx - 0x7c72f714], al; pop ebx; stc; call dword ptr [eax + 0x55]; 
0x001233e8: add byte ptr [ebx - 0x7c72f714], al; pop esi; arpl cx, di; call dword ptr [eax + 0x56]; 
0x0011d1f7: add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x0014c1ae: add byte ptr [ebx - 0x7c72f714], al; sub dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x0016dc9b: add byte ptr [ebx - 0x7c72fb14], al; cmp bh, al; stc; call dword ptr [ebp + 0x57]; 
0x000d3cd7: add byte ptr [ebx - 0x7c72fb14], al; cwde; cmp eax, 0x8d500000; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x0009c14e: add byte ptr [ebx - 0x7c72fb14], al; mov cl, 0x51; stc; call dword ptr [eax + 0x56]; 
0x0009534f: add byte ptr [ebx - 0x7c72fb14], al; mov word ptr [eax - 0x1a], es; call dword ptr [eax - 0x73]; 
0x00168e69: add byte ptr [ebx - 0x7c74f714], al; mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0004d3c1: add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x0004229b: add byte ptr [ebx - 0x7ca4ef3c], al; rol byte ptr [ecx], 0x5e; pop edi; ret; 
0x000c8f11: add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x00046831: add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c2911: add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00127ef6: add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x000a95c4: add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00152076: add byte ptr [ebx - 0x7cd7db84], cl; ret 0x8301; 
0x00060e7b: add byte ptr [ebx - 0x7cd7dbb4], cl; jl 0x60ea7; inc eax; or byte ptr [edi], cl; xchg esp, eax; ret; 
0x0004ce38: add byte ptr [ebx - 0x7cdfdb84], cl; ret; 
0x00105e67: add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x0004dda6: add byte ptr [ebx - 0x7ce7db84], cl; jmp dword ptr [eax]; 
0x000fa0e8: add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x000462a0: add byte ptr [ebx - 0x7cefdb84], cl; ret; 
0x0015ea3e: add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0005bb90: add byte ptr [ebx - 0x7cefdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000fbb8f: add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x000c94c2: add byte ptr [ebx - 0x7cf7db84], cl; jmp dword ptr [eax]; 
0x00029190: add byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0002c92b: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x0008bb3f: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8b04; 
0x00088a1e: add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x0008a89f: add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x0019ef0a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x000960df: add byte ptr [ebx - 0x7f72e714], al; add al, 0x97; stc; call dword ptr [eax - 0x18]; 
0x00133aff: add byte ptr [ebx - 0x7f72e714], al; or byte ptr [edi - 7], ah; call dword ptr [eax - 0x18]; 
0x001325df: add byte ptr [ebx - 0x7f72e714], al; xlatb; stc; call dword ptr [eax - 0x18]; 
0x0016271d: add byte ptr [ebx - 0x7f72eb14], al; aad 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0016333d: add byte ptr [ebx - 0x7f72eb14], al; cld; jb 0x16333f; call dword ptr [eax + 0x6a]; 
0x0015f56d: add byte ptr [ebx - 0x7f72eb14], al; cli; jno 0x15f56f; call dword ptr [eax + 0x6a]; 
0x00162b0d: add byte ptr [ebx - 0x7f72eb14], al; jecxz 0x162b87; stc; call dword ptr [eax + 0x6a]; 
0x001620dd: add byte ptr [ebx - 0x7f72eb14], al; leave; jb 0x1620df; call dword ptr [eax + 0x6a]; 
0x001616ed: add byte ptr [ebx - 0x7f72eb14], al; lodsb al, byte ptr [esi]; jb 0x1616ef; call dword ptr [eax + 0x6a]; 
0x0015ed7d: add byte ptr [ebx - 0x7f72eb14], al; loope 0x15edf6; stc; call dword ptr [eax + 0x6a]; 
0x0015f1fd: add byte ptr [ebx - 0x7f72eb14], al; out dx, al; jno 0x15f1ff; call dword ptr [eax + 0x6a]; 
0x0016040d: add byte ptr [ebx - 0x7f72eb14], al; pop eax; jb 0x16040f; call dword ptr [eax + 0x6a]; 
0x0014d117: add byte ptr [ebx - 0x7f72f314], al; dec esp; ret 0xfff9; 
0x00165f2a: add byte ptr [ebx - 0x7f], dl; ret; 
0x0005a872: add byte ptr [ebx - 0x8b4b], cl; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x00058e4f: add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x00058b8f: add byte ptr [ebx - 0x934b], cl; dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0x7401; 
0x0013b1af: add byte ptr [ebx - 0x9363], cl; dec dword ptr [ebp + 0x48d4904]; ret; 
0x0005960d: add byte ptr [ebx - 0x937b], cl; dec dword ptr [edi]; mov dh, 0x50; or al, 0x89; sal dh, 1; ret 0xf40; 
0x0007cae1: add byte ptr [ebx - 0x95f714], al; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x00076806: add byte ptr [ebx - 0xa8fb14], al; jne 0x76816; push esi; call dword ptr [ebx + 0x1c]; 
0x00076f7d: add byte ptr [ebx - 0xa8fb14], al; jne 0x76f8d; push esi; call dword ptr [ebx + 0x1c]; 
0x00078abf: add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a0b22: add byte ptr [ebx - 0xa9f714], al; jae 0xa0b4e; call eax; 
0x00024df7: add byte ptr [ebx - 0xa9fb14], al; je 0x24e23; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000781d3: add byte ptr [ebx - 0xa9fb14], al; jne 0x781e3; push edx; call dword ptr [ebx + 0x1c]; 
0x000843de: add byte ptr [ebx - 0xacfb14], al; je 0x8440a; cmp al, 0x56; call dword ptr [ebp + 0x38]; 
0x0017ec20: add byte ptr [ebx - 0xaefb14], al; je 0x17ec4c; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x00175dbf: add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000a0c8f: add byte ptr [ebx - 0xaff714], al; jae 0xa0cbb; call edx; 
0x00059118: add byte ptr [ebx - 0xc37b], cl; inc dword ptr [ebx + 0x708d0cec]; add cl, byte ptr [ecx - 0xc74b]; call dword ptr [esi - 0x18]; 
0x000bc890: add byte ptr [ebx - 0xcbb7d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00099474: add byte ptr [ebx - 0xf767f14], al; pop ebx; pop esi; pop edi; ret; 
0x00173dcd: add byte ptr [ebx - 0xf76cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00119fcf: add byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x000be4cc: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x00143021: add byte ptr [ebx - 0xf76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000a5ff5: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00106177: add byte ptr [ebx - 1], dl; je 0x1061a0; push 0x1081ee8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x000289e3: add byte ptr [ebx - 1], dl; je 0x28a0c; push dword ptr fs:[esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000290c5: add byte ptr [ebx - 1], dl; je 0x290ee; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0014161a: add byte ptr [ebx - 7], ch; call dword ptr [ebx - 0x18]; 
0x000344de: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0012a70b: add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00060c3f: add byte ptr [ebx], al; or al, 0x86; jmp ecx; 
0x000b2a21: add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2b48: add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb99c: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x001867ca: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001881c4: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188229: add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00089603: add byte ptr [ebx], al; xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x00153331: add byte ptr [ebx], bh; inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], bl; ret 0x8014; 
0x0016b53e: add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0015334f: add byte ptr [ebx], bh; or dh, byte ptr [esp + ecx*8 - 0x7d]; ret 0x8014; 
0x00086a87: add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00128cbc: add byte ptr [ecx + 0x100baf7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011c05a: add byte ptr [ecx + 0x100c2484], cl; add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000ba710: add byte ptr [ecx + 0x105963c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba205: add byte ptr [ecx + 0x105e6ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1e0: add byte ptr [ecx + 0x105e93c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1c0: add byte ptr [ecx + 0x105eb3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1a3: add byte ptr [ecx + 0x105ed0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba104: add byte ptr [ecx + 0x105eefc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba176: add byte ptr [ecx + 0x105efdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba0e6: add byte ptr [ecx + 0x105f0dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba15f: add byte ptr [ecx + 0x105f14c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba144: add byte ptr [ecx + 0x105f2fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba0c1: add byte ptr [ecx + 0x105f32c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba122: add byte ptr [ecx + 0x105f51c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba097: add byte ptr [ecx + 0x105f5cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba07e: add byte ptr [ecx + 0x105f75c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba05d: add byte ptr [ecx + 0x105f96c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba039: add byte ptr [ecx + 0x105fbac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba01b: add byte ptr [ecx + 0x105fd8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9f98: add byte ptr [ecx + 0x10605bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012981e: add byte ptr [ecx + 0x107615c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001290ee: add byte ptr [ecx + 0x107d45c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0007fd63: add byte ptr [ecx + 0x10890848], cl; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x00127ff9: add byte ptr [ecx + 0x108e3ac5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000b6de6: add byte ptr [ecx + 0x10918dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6dc1: add byte ptr [ecx + 0x1091b2c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d97: add byte ptr [ecx + 0x1091dcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d7e: add byte ptr [ecx + 0x1091f5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d5d: add byte ptr [ecx + 0x109216c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d39: add byte ptr [ecx + 0x10923ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6d1b: add byte ptr [ecx + 0x109258c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00127bc7: add byte ptr [ecx + 0x10926cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000b6cff: add byte ptr [ecx + 0x109274c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00117f7c: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00126658: add byte ptr [ecx + 0x10a7dbc2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x000b4e70: add byte ptr [ecx + 0x10b02fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4d8b: add byte ptr [ecx + 0x10b1a4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4d78: add byte ptr [ecx + 0x10b1b7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4d5c: add byte ptr [ecx + 0x10b1d3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4265: add byte ptr [ecx + 0x10bc3ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001251d8: add byte ptr [ecx + 0x10bc5bc2], al; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x000b4240: add byte ptr [ecx + 0x10bc5fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4220: add byte ptr [ecx + 0x10bc7fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4203: add byte ptr [ecx + 0x10bc9cc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4164: add byte ptr [ecx + 0x10bcbbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b41d6: add byte ptr [ecx + 0x10bcc9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b41bf: add byte ptr [ecx + 0x10bce0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b41a4: add byte ptr [ecx + 0x10bcfbc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4182: add byte ptr [ecx + 0x10bd1dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4090: add byte ptr [ecx + 0x10bd8fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b4070: add byte ptr [ecx + 0x10bdafc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b404b: add byte ptr [ecx + 0x10bdd4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001249b8: add byte ptr [ecx + 0x10c47bc2], al; add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b3770: add byte ptr [ecx + 0x10c5cfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b368b: add byte ptr [ecx + 0x10c744c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b3678: add byte ptr [ecx + 0x10c757c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b365c: add byte ptr [ecx + 0x10c773c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2c25: add byte ptr [ecx + 0x10d11ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2c00: add byte ptr [ecx + 0x10d13fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2be0: add byte ptr [ecx + 0x10d15fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2bc3: add byte ptr [ecx + 0x10d17cc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2b24: add byte ptr [ecx + 0x10d19bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2b96: add byte ptr [ecx + 0x10d1a9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2b7f: add byte ptr [ecx + 0x10d1c0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2b64: add byte ptr [ecx + 0x10d1dbc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2b42: add byte ptr [ecx + 0x10d1fdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2a60: add byte ptr [ecx + 0x10d25fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2a40: add byte ptr [ecx + 0x10d27fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2a1b: add byte ptr [ecx + 0x10d2a4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00089c75: add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011acdd: add byte ptr [ecx + 0x116156c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00119b78: add byte ptr [ecx + 0x1172bbc2], al; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00117748: add byte ptr [ecx + 0x1196ebc2], al; add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116e23: add byte ptr [ecx + 0x11a010c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116b08: add byte ptr [ecx + 0x11a32bc2], al; add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001790b2: add byte ptr [ecx + 0x11ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010c6c3: add byte ptr [ecx + 0x124770c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00109910: add byte ptr [ecx + 0x127523c6], al; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e14c6: add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000f47f4: add byte ptr [ecx + 0x13c63fc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000f229a: add byte ptr [ecx + 0x13eb99c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0014c172: add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00048435: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0017d08c: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001775d6: add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013b9cf: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010c1ec: add byte ptr [ecx + 0x18c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0009bac5: add byte ptr [ecx + 0x19536ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0009a9f8: add byte ptr [ecx + 0x19643bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0009a8b6: add byte ptr [ecx + 0x19657dc2], al; add byte ptr [ebx - 0x72afeb14], al; cmp byte ptr [ecx + 0x68], 0xf9; call dword ptr [eax - 0x18]; 
0x0009a828: add byte ptr [ecx + 0x19660bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9a840; ret; 
0x0010c3be: add byte ptr [ecx + 0x19cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00127c05: add byte ptr [ecx + 0x1a1b8cf], cl; add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00088a18: add byte ptr [ecx + 0x1a841bc2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x00085d49: add byte ptr [ecx + 0x1ab0eac3], al; add byte ptr [ebx - 0x7c72eb14], al; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x000847e7: add byte ptr [ecx + 0x1ac64cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00081e69: add byte ptr [ecx + 0x1aefcac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000dfe9e: add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dffed: add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000742a9: add byte ptr [ecx + 0x1bcb8ac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0009c171: add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x0005d71b: add byte ptr [ecx + 0x1d3718c3], al; add byte ptr [ebx + 0x19ec83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000574e8: add byte ptr [ecx + 0x1d994bc2], al; add byte ptr [ebx - 0x72fbdbbc], cl; xchg edx, eax; ret; 
0x00033115: add byte ptr [ecx + 0x1fdd1ec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000f2775: add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xf27e0; ret; 
0x001a846c: add byte ptr [ecx + 0x245c8bd9], cl; or al, 0x8b; jl 0x1a849a; and al, 0x29; ror byte ptr [ebx - 0x76cbdb8c], 1; ret 0x448b; 
0x00145739: add byte ptr [ecx + 0x24748beb], cl; adc al, 0x29; ret; 
0x00080e16: add byte ptr [ecx + 0x247c8beb], cl; or al, 0x8d; xchg dword ptr [esi + ecx*2 - 7], ebx; call dword ptr [eax + 0x56]; 
0x000e8699: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x0017a6fb: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x00165f8b: add byte ptr [ecx + 0x28cec], al; add al, ch; mov byte ptr [0x81000176], al; ret; 
0x000564d6: add byte ptr [ecx + 0x29c789f2], cl; ret 0xb589; 
0x00144cc5: add byte ptr [ecx + 0x2bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001273f9: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17c7dba4], 0xd7; adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001283a9: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x27; add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00127a69: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x67; or al, 0xf6; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00126f7b: add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg eax, eax; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00027b26: add byte ptr [ecx + 0x31342454], cl; ror byte ptr [ebp - 0x6c71869], cl; call dword ptr [edx + 0x50]; 
0x0008e3bf: add byte ptr [ecx + 0x31582444], cl; rcl byte ptr [edx - 0x18], 0x44; ret 0xffff; 
0x0016d4fe: add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x000acebf: add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x00118ff2: add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fbaad: add byte ptr [ecx + 0x388cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009d76a: add byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0005ed06: add byte ptr [ecx + 0x3910247c], cl; ret; 
0x00069c86: add byte ptr [ecx + 0x3918246c], cl; ret; 
0x00120fe7: add byte ptr [ecx + 0x39d8f7f8], cl; ret; 
0x000c5eae: add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0008a99c: add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0016b401: add byte ptr [ecx + 0x4342494], cl; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000ffcb1: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x000a59d7: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x000ba34d: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b6eda: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x000ba36d: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b6efa: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x000ba44d: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b6fca: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x000ba46d: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b6fea: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x00127379: add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001280f9: add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00157bdf: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x000408ff: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057840: add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000ace9f: add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x00091068: add byte ptr [ecx + 0x45789fb], cl; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00027861: add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x0004519e: add byte ptr [ecx + 0x45cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001440ac: add byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d5029: add byte ptr [ecx + 0x4708910], cl; pop ebx; pop esi; pop edi; ret; 
0x0006b863: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007b13b: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00087e7e: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000d7a3d: add byte ptr [ecx + 0x4c48310], cl; xor eax, eax; pop ebx; pop esi; ret; 
0x00119e4b: add byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x00060673: add byte ptr [ecx + 0x4ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007d2a4: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x0016ea7e: add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0016b913: add byte ptr [ecx + 0x51890841], cl; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00087863: add byte ptr [ecx + 0x52], dl; call 0x1799f0; add esp, 0x1c; ret; 
0x00118d18: add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118fb7: add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00073f9c: add byte ptr [ecx + 0x548b0850], cl; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00083948: add byte ptr [ecx + 0x565153f8], cl; call dword ptr [eax + 0x40]; 
0x0016ede1: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b352f: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x0009b615: add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x00076462: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0007b6de: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007b57e: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000a53b2: add byte ptr [ecx + 0x5b1789f2], cl; pop esi; pop edi; ret; 
0x00187e30: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000b377f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000a5917: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00081c27: add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00051f6a: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x000345a4: add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00051f56: add byte ptr [ecx + 0x5f5e5b16], cl; pop ebp; ret; 
0x000a1357: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x0013517a: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x001777de: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00062228: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x0013fe0d: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000e15e2: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x00039088: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x0005e36c: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0005bfb3: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x000a59fb: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000b700a: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x000bc7bb: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x0010bc87: add byte ptr [ecx + 0x7a892072], cl; and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x0008f55d: add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902cd: add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00124531: add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x00085b7f: add byte ptr [ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x85b80; ret; 
0x0009219b: add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008930d: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000887b3: add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00089ad3: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0017a9c5: add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008cff3: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000893c9: add byte ptr [ecx + 0x81], bh; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00089afd: add byte ptr [ecx + 0x81], bh; mov edx, 1; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092240: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fd3d: add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000e5c48: add byte ptr [ecx + 0x89cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00156e10: add byte ptr [ecx + 0x8bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000505e7: add byte ptr [ecx + 0x8c483da], cl; mov eax, edx; pop ebx; ret; 
0x0005ecec: add byte ptr [ecx + 0x8ecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003b4ae: add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00089609: add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x0008ade7: add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009b738: add byte ptr [ecx + 0x96486], cl; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x000be88a: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a6fb5: add byte ptr [ecx + 0x9d809c8], cl; ror byte ptr [ebx + 0x9242454], 1; ret 0x448b; 
0x00152def: add byte ptr [ecx + 0xa158b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x00077aad: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c45d: add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001775d0: add byte ptr [ecx + 0xb9863c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x00027e3b: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e23d5: add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0005b2f3: add byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00163bc9: add byte ptr [ecx + 0xcd26ac3], al; add byte ptr [ebx - 0x7c72ef14], al; lodsb al, byte ptr [esi]; sub al, 0xf3; call dword ptr [eax - 0x73]; 
0x00157a99: add byte ptr [ecx + 0xd939ac3], al; add byte ptr [ebx - 0x7c72ef14], al; sub al, 0x6c; bnd call dword ptr [eax - 0x73]; 
0x0014c16c: add byte ptr [ecx + 0xe4cc7c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014c0bd: add byte ptr [ecx + 0xe4d76c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00146567: add byte ptr [ecx + 0xea8ccc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0004456c: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013e7e7: add byte ptr [ecx + 0xf264cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00073a07: add byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x00036818: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008b2dc: add byte ptr [ecx + 0xfd231d0], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x000917bf: add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091063: add byte ptr [ecx + 7], bh; mov ebx, edi; mov dword ptr [edi + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0009209f: add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0003c436: add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0009142c: add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x000bb954: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000bb7b0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x000bc692: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00051354: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00058545: add byte ptr [ecx + ecx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00128c66: add byte ptr [ecx - 0x10019], al; jmp dword ptr [ebp - 0x5f]; 
0x0014c18e: add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx - 0x6f7c723e]; inc esp; stc; call dword ptr [eax + 0x52]; 
0x0016af19: add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00163f52: add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0016af35: add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x0014c178: add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00081d89: add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x000f22a0: add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000c2cc4: add byte ptr [ecx - 0x1628763a], cl; inc ecx; jmp 0xc2ccc; call dword ptr [eax - 1]; 
0x001775dc: add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x0006abee: add byte ptr [ecx - 0x16abdbbc], cl; ret; 
0x001569f4: add byte ptr [ecx - 0x16ebdba4], cl; mov dword ptr [0xe8fffffe], eax; in eax, dx; sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x0011022f: add byte ptr [ecx - 0x17acfbba], cl; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0010cfcf: add byte ptr [ecx - 0x17acfbba], cl; pop es; idiv dl; jmp dword ptr [esi + 3]; 
0x0010e8ff: add byte ptr [ecx - 0x17acfbba], cl; xlatb; fdiv st(2), st(0); jmp dword ptr [esi + 3]; 
0x0016cf69: add byte ptr [ecx - 0x197c7239], cl; jae 0x16cf6a; call dword ptr [ecx + 0x6a]; 
0x000c5ea6: add byte ptr [ecx - 0x207bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0008faa4: add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x000917c4: add byte ptr [ecx - 0x2dcefbad], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x001a66cb: add byte ptr [ecx - 0x2ef3dba4], cl; call 0x891f2959; ret; 
0x0012a20d: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0009237e: add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00054ddc: add byte ptr [ecx - 0x36274b], cl; dec dword ptr [edi]; dec edi; ret 0xff31; 
0x000ce38e: add byte ptr [ecx - 0x362f73], cl; call dword ptr [eax - 0x75]; 
0x00053fde: add byte ptr [ecx - 0x36576b], cl; call dword ptr [eax - 0x75]; 
0x000cf94e: add byte ptr [ecx - 0x365f43], cl; jmp ptr [ecx]; ret 0x3b8; 
0x000cf988: add byte ptr [ecx - 0x365f4b], cl; dec dword ptr [ecx - 0x366f7b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0xff31; 
0x001719fd: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x001719bd: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00099f5e: add byte ptr [ecx - 0x38d3dbac], cl; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013699f: add byte ptr [ecx - 0x39], ch; pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret; 
0x001434e6: add byte ptr [ecx - 0x39f3db94], cl; inc esp; and al, 0x3b; add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x0014cf44: add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x00087ed1: add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x00057655: add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x000934c5: add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x0008aa94: add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x00128b61: add byte ptr [ecx - 0x44e7dba4], cl; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00143b17: add byte ptr [ecx - 0x44f7b], cl; call dword ptr [edi - 0x18]; 
0x000c4148: add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x0003d2e4: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121da1: add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x00121da1: add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; ret 0xf3bd; 
0x0013a3e0: add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x0006fe82: add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0006f501: add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; 
0x0006f501: add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; ret 0xbc3; 
0x0006f5e5: add byte ptr [ecx - 0x4fb7b], cl; call dword ptr [eax - 0x18]; 
0x00129d17: add byte ptr [ecx - 0x4fb7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c11f8: add byte ptr [ecx - 0x4fbb7226], cl; add al, 0x81; ret 0; 
0x0006d8d7: add byte ptr [ecx - 0x54b4b], cl; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x5277b]; call dword ptr [eax - 0x18]; 
0x00062645: add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x00064913: add byte ptr [ecx - 0x58f7b], cl; inc dword ptr [ebx - 0x5f16fe39]; out 0xff, eax; call dword ptr [edx - 0x73]; 
0x00066c65: add byte ptr [ecx - 0x5976b], cl; call dword ptr [ebx - 0x75]; 
0x00088814: add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8881c; add byte ptr [eax], al; ret; 
0x0008884b: add byte ptr [ecx - 0x5c9af3b0], cl; js 0x88853; add byte ptr [eax], al; ret; 
0x00062621: add byte ptr [ecx - 0x60373], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0009c628: add byte ptr [ecx - 0x72dfdbbc], cl; add byte ptr [eax - 0x62], 0xf9; call dword ptr [eax - 0x18]; 
0x00160de0: add byte ptr [ecx - 0x72f3dbbc], cl; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x0009c20e: add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0009ba05: add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x00123f12: add byte ptr [ecx - 0x7487dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008880a: add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0014f502: add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0007cf3e: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00170a46: add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x316f74c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00127c0c: add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x00088727: add byte ptr [ecx - 0x7611142d], cl; ret 0xcceb; 
0x00143922: add byte ptr [ecx - 0x76167630], cl; fimul dword ptr [ebx - 0x76d3db94]; ret; 
0x000c1b33: add byte ptr [ecx - 0x76180810], cl; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x00045e2b: add byte ptr [ecx - 0x76190828], cl; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x0004c9fb: add byte ptr [ecx - 0x76190828], cl; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29742454], 1; ret; 
0x001488ae: add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x00079e97: add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x001549b3: add byte ptr [ecx - 0x76297631], cl; ret; 
0x000d3538: add byte ptr [ecx - 0x762c763f], cl; mov esp, 0x8024; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x0002be0f: add byte ptr [ecx - 0x763576fa], cl; dec byte ptr [ebx + 0x39042444]; ret 0x840f; 
0x0004d2f8: add byte ptr [ecx - 0x768fdbbc], cl; ret; 
0x00046778: add byte ptr [ecx - 0x769fdbbc], cl; ret; 
0x0006036f: add byte ptr [ecx - 0x76afdbbc], cl; ret; 
0x0004b88d: add byte ptr [ecx - 0x76c3dbbc], cl; ret 0xc483; 
0x000fb80b: add byte ptr [ecx - 0x76cbdbb4], cl; call 0x391598d7; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x6a52; 
0x0014f50d: add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001434ef: add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x0004b55d: add byte ptr [ecx - 0x76d3dbbc], cl; ret 0xe283; 
0x001549a1: add byte ptr [ecx - 0x76e3db84], cl; fisttp qword ptr [ebx + 0xc090]; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x00040aa0: add byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x00052a49: add byte ptr [ecx - 0x76e7dbbc], cl; ret 0xe283; 
0x0012858d: add byte ptr [ecx - 0x76ebdb8c], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0009b467: add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x000c5365: add byte ptr [ecx - 0x76efdbac], cl; ret 0xf129; 
0x0008e3fa: add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x0003f43d: add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x00168bb1: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0003f3fd: add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x00128028: add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x127fb9; ret 0x448b; 
0x00027b54: add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x0008f92b: add byte ptr [ecx - 0x77cf7b6], cl; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0002342f: add byte ptr [ecx - 0x7872dbfc], cl; xchg edx, eax; je 0x23431; call dword ptr [esi + 0x53]; 
0x000fbeea: add byte ptr [ecx - 0x7abbdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000de39c: add byte ptr [ecx - 0x7aefdb94], cl; fisttp dword ptr [edi]; dec edi; ret; 
0x0006d017: add byte ptr [ecx - 0x7ba7dbb4], cl; ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x0017bd3f: add byte ptr [ecx - 0x7c0f7616], cl; ret; 
0x000505fb: add byte ptr [ecx - 0x7c228b26], cl; ret 0x8001; 
0x0015ebbf: add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x0009517f: add byte ptr [ecx - 0x7ce3dbac], cl; ret; 
0x0017d032: add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x00167f0c: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x68d057d], cl; call dword ptr [eax - 1]; 
0x0002c1b4: add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x0017c157: add byte ptr [ecx - 0x7cf769b4], cl; ret 0x8d01; 
0x000fc00c: add byte ptr [ecx - 0x7cf7dbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [ecx + 0xf68245c], 1; dec esp; ret 0xb60f; 
0x001291bf: add byte ptr [ecx - 0x7ee7dbbc], cl; into; add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0003fd00: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013ac32: add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x000358ee: add byte ptr [ecx - 0x8b7b], cl; call dword ptr [eax - 0x73]; 
0x001045f6: add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f4eb: add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00163687: add byte ptr [ecx - 0xa9f3ba], cl; je 0x1636b3; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00175c28: add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x5f]; 
0x00104fed: add byte ptr [ecx - 0xfbbf017], cl; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003e6c1: add byte ptr [ecx - 0xffc2ac], cl; jae 0x3e6cd; call eax; 
0x00104019: add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000bc3ab: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0007955f: add byte ptr [ecx - 1], bh; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000a325c: add byte ptr [ecx*4 - 0x926736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a5d6c: add byte ptr [ecx*4 - 0x940b36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000972c5: add byte ptr [ecx], 0; add al, ch; ret 0xff42; 
0x001799da: add byte ptr [ecx], 0; add cl, al; jmp 0x5ebd8ce6; pop edi; ret; 
0x000bc5e8: add byte ptr [ecx], ah; ret 0x2474; 
0x000314db: add byte ptr [ecx], ah; ret; 
0x00086e43: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00089acf: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0019a55b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], ebp; adc dl, dh; call dword ptr [ebx - 0x18]; 
0x0019436b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], ebx; jb 0x194367; call dword ptr [ebx - 0x18]; 
0x0019aa5b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], ecx; or al, 0xf2; call dword ptr [ebx - 0x18]; 
0x0019687b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ebp; dec ebp; bnd call dword ptr [ebx - 0x18]; 
0x000898d0: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000344db: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00124de8: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001291c6: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012ba02: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x00124da9: add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00119139: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000bc517: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0xbc521; xor eax, eax; ret; 
0x0005cdac: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00034187: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000bc467: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x001245f3: add byte ptr [ecx], al; add byte ptr [ebp - 0x69bed62], cl; call dword ptr [ebx - 0x18]; 
0x00145dc9: add byte ptr [ecx], al; add byte ptr [ebx - 0x17e3dba4], cl; ret; 
0x00086e2d: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0008a917: add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x00130eb4: add byte ptr [ecx], al; call eax; 
0x00131460: add byte ptr [ecx], al; call ecx; 
0x0013129a: add byte ptr [ecx], al; call edx; 
0x000ba7d3: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x00136aa4: add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x00136c91: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0x420f; 
0x0009b8ac: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000cf5ac: add byte ptr [ecx], al; fild dword ptr [ebx - 0x363f7b]; call dword ptr [eax]; 
0x000bc856: add byte ptr [ecx], al; je 0xbc861; or dword ptr [eax + 0x3c70], 1; xor eax, eax; pop ebx; ret; 
0x0009b6a1: add byte ptr [ecx], al; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x000a321c: add byte ptr [ecx], al; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334ac: add byte ptr [ecx], al; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x0017b8b0: add byte ptr [ecx], al; ret 0x18eb; 
0x000f9549: add byte ptr [ecx], al; ret 0x4489; 
0x00145e4c: add byte ptr [ecx], al; ret 0x5052; 
0x000e6aa2: add byte ptr [ecx], al; ret 0xa3a; 
0x0006ef78: add byte ptr [ecx], al; ret; 
0x000c965f: add byte ptr [ecx], al; rol dword ptr [ebx - 0x7bf0e008], cl; mov dword ptr [ecx], 0x1fba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0003a77f: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000d3543: add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x000bc85f: add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x0009e2d5: add byte ptr [ecx], bh; fisttp word ptr [edi]; xchg ebp, eax; ret; 
0x001a127b: add byte ptr [ecx], bh; ret 0x1073; 
0x0013c829: add byte ptr [ecx], bh; ret 0x1274; 
0x001a0f57: add byte ptr [ecx], bh; ret 0x1473; 
0x001a6aee: add byte ptr [ecx], bh; ret 0x1673; 
0x001a6e33: add byte ptr [ecx], bh; ret 0x1873; 
0x0013d67d: add byte ptr [ecx], bh; ret 0x1988; 
0x00092ac7: add byte ptr [ecx], bh; ret 0x2473; 
0x00027a9a: add byte ptr [ecx], bh; ret 0x420f; 
0x00039f1a: add byte ptr [ecx], bh; ret 0x430f; 
0x000d4af6: add byte ptr [ecx], bh; ret 0x470f; 
0x0011a025: add byte ptr [ecx], bh; ret 0x4e0f; 
0x001469e7: add byte ptr [ecx], bh; ret 0x5473; 
0x0008960f: add byte ptr [ecx], bh; ret 0x5c72; 
0x00093726: add byte ptr [ecx], bh; ret 0x6574; 
0x00092faa: add byte ptr [ecx], bh; ret 0x6974; 
0x0009261d: add byte ptr [ecx], bh; ret 0x7e74; 
0x00083760: add byte ptr [ecx], bh; ret 0x820f; 
0x0011f6b7: add byte ptr [ecx], bh; ret 0x830f; 
0x000622b7: add byte ptr [ecx], bh; ret 0x840f; 
0x00091ab9: add byte ptr [ecx], bh; ret 0x850f; 
0x0014898d: add byte ptr [ecx], bh; ret 0xa875; 
0x000a3488: add byte ptr [ecx], bh; ret 0xc072; 
0x000a351d: add byte ptr [ecx], bh; ret 0xc372; 
0x00137523: add byte ptr [ecx], bh; ret 0xc773; 
0x00052a32: add byte ptr [ecx], bh; ret 0xe73; 
0x00152df5: add byte ptr [ecx], bh; ret 0xe74; 
0x00111f7b: add byte ptr [ecx], bh; ret 0xf72; 
0x0002b9e5: add byte ptr [ecx], bh; ret; 
0x0012ac5a: add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x0014b97f: add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x001049c5: add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xe0c1; 
0x00104bf5: add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xe8e9; 
0x00047729: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x000753f4: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x548b; 
0x0015180e: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x0016e30b: add byte ptr [ecx], bh; sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x001371a7: add byte ptr [ecx], bh; sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x0008af77: add byte ptr [ecx], bh; salc; jae 0x8afb8; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00024b8c: add byte ptr [ecx], bh; xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000d3be4: add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000f3ee2: add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x000f8003: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9eeb; 
0x000a8296: add byte ptr [ecx], ch; inc ebp; les ecx, ptr [ebx - 0x7bf03bbb]; ret; 
0x000cc7d5: add byte ptr [ecx], ch; ret 0x328b; 
0x00054dab: add byte ptr [ecx], ch; ret 0x3b8; 
0x000db25b: add byte ptr [ecx], ch; ret 0x448b; 
0x000de75d: add byte ptr [ecx], ch; ret 0x458b; 
0x000dc097: add byte ptr [ecx], ch; ret 0x468b; 
0x00160e5a: add byte ptr [ecx], ch; ret 0x489; 
0x0009d0ce: add byte ptr [ecx], ch; ret 0x48d; 
0x0004a639: add byte ptr [ecx], ch; ret 0x5152; 
0x00047162: add byte ptr [ecx], ch; ret 0x5489; 
0x0004df38: add byte ptr [ecx], ch; ret 0x5652; 
0x00045bda: add byte ptr [ecx], ch; ret 0x850f; 
0x000cb756: add byte ptr [ecx], ch; ret 0xa8b; 
0x000d9bc1: add byte ptr [ecx], ch; ret 0xbe0f; 
0x001347b1: add byte ptr [ecx], ch; ret 0xc031; 
0x000252b8: add byte ptr [ecx], ch; ret 0xc189; 
0x001a0eaf: add byte ptr [ecx], ch; ret 0xc283; 
0x000d4693: add byte ptr [ecx], ch; ret 0xc889; 
0x000475fa: add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f299: add byte ptr [ecx], ch; ret 0xd089; 
0x000fecca: add byte ptr [ecx], ch; ret 0xd101; 
0x000d7926: add byte ptr [ecx], ch; ret 0xd129; 
0x00132218: add byte ptr [ecx], ch; ret 0xd189; 
0x000a6da9: add byte ptr [ecx], ch; ret 0xd301; 
0x000a7c77: add byte ptr [ecx], ch; ret 0xd601; 
0x000a4367: add byte ptr [ecx], ch; ret 0xd701; 
0x000de400: add byte ptr [ecx], ch; ret 0xd729; 
0x000a1cbb: add byte ptr [ecx], ch; ret 0xd801; 
0x001a0d7c: add byte ptr [ecx], ch; ret 0xe2c1; 
0x000565a1: add byte ptr [ecx], ch; ret 0xf329; 
0x000db1d5: add byte ptr [ecx], ch; ret 0xf889; 
0x000727f5: add byte ptr [ecx], ch; ret 0xfa39; 
0x00028749: add byte ptr [ecx], ch; ret 0xfa83; 
0x0002a4d8: add byte ptr [ecx], ch; ret; 
0x0003a55d: add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed6685; or eax, ecx; ret; 
0x0002a447: add byte ptr [ecx], ch; ror byte ptr [ecx - 0x76fe743b], 1; ret 0xe283; 
0x000dbf62: add byte ptr [ecx], ch; shr byte ptr [ecx], 1; ret; 
0x000319c3: add byte ptr [ecx], cl; ret 0x840f; 
0x0003195d: add byte ptr [ecx], cl; ret 0x850f; 
0x00047a7a: add byte ptr [ecx], cl; ret 0x9d74; 
0x000c3672: add byte ptr [ecx], cl; ret 0x9e74; 
0x0002d85a: add byte ptr [ecx], cl; ret; 
0x0007664c: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x000938bd: add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x000cd077: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0014bbfe: add byte ptr [ecx], dh; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x0008cf66: add byte ptr [ecx], dh; fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x00122b5f: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00103b1e: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0xac2484]; add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0010c212: add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x001608ff: add byte ptr [ecx], dh; fucomi st(3); adc cl, byte ptr [ebp - 0x7cffd98c]; ret; 
0x00092245: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ab7c: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094518: add byte ptr [ecx], dh; leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x0008f37f: add byte ptr [ecx], dh; leave; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000421cf: add byte ptr [ecx], dh; leave; pop ebx; pop esi; mov eax, ecx; ret; 
0x00097d95: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0009fa53: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0009fb2a: add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x0017d7cf: add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0005232b: add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6df0fe07], cl; ret 0xff19; 
0x00151c9f: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0010245f: add byte ptr [ecx], dh; rol byte ptr [edi + 0x3f8c87], 0; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x00103c76: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f3dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008eefa: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00044af1: add byte ptr [ecx], dh; ror byte ptr [ecx + 0xf3b0bf7], cl; xchg ebp, eax; ret 0xe083; 
0x00055d03: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0008ebe9: add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008a515: add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x00041c71: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0008cfa1: add byte ptr [ecx], dh; sar byte ptr [eax + 0xf0], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008cefb: add byte ptr [ecx], dh; sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0010407a: add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0017e3fb: add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg dword ptr [ecx], edx; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x00089b07: add byte ptr [ecx], dh; test byte ptr [ebp - 0xf47efa8], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008c213: add byte ptr [ecx], dh; test byte ptr [ebx + 0x1ba241c], 0; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0004f7d5: add byte ptr [ecx], dh; test byte ptr [ebx - 0x74dbdbac], -0x64; ret 0x8d2c; 
0x0008b132: add byte ptr [ecx], dh; test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0017789f: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00091a2b: add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0017f28c: add byte ptr [edi + 0x11], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0008463d: add byte ptr [edi + 0x16], dh; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00086ec9: add byte ptr [edi + 0x1a5482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003eab1: add byte ptr [edi + 0x1fa8311], al; jg 0x3eb70; call eax; 
0x00079d7c: add byte ptr [edi + 0x21], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00083f8a: add byte ptr [edi + 0x23], dh; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x000856d0: add byte ptr [edi + 0x25], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081a24: add byte ptr [edi + 0x29], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007795d: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007a0d3: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00085e93: add byte ptr [edi + 0x2a], dh; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0007b8e2: add byte ptr [edi + 0x2b], dh; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00127fff: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0016dfb9: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0003311b: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x0007b120: add byte ptr [edi + 0x35], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00073f32: add byte ptr [edi + 0x3b], dh; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0008273d: add byte ptr [edi + 0x40], dh; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00081e0b: add byte ptr [edi + 0x42], dh; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0014a1a1: add byte ptr [edi + 0x53], dl; call edx; 
0x00083e61: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x00085626: add byte ptr [edi + 0x57], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000ac981: add byte ptr [edi + 0x5b], bl; ret; 
0x00025111: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x0014c85e: add byte ptr [edi + 0x5d], bl; ret; 
0x000b2c3f: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d1d54: add byte ptr [edi + 0x5e], bl; ret; 
0x00081c8b: add byte ptr [edi + 0x62], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00075c9a: add byte ptr [edi + 0x63], dh; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00082823: add byte ptr [edi + 0x6a], dh; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0008a9a2: add byte ptr [edi + 0xb], dh; ret; 
0x00116067: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d1ed4: add byte ptr [edi + 2], bh; neg eax; ret; 
0x001990b4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00196824: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00194174: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0019ade4: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0019a884: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00192934: add byte ptr [edi + 2], dh; neg eax; ret; 
0x0019b38a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x001326ba: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x0011675a: add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0019b6b5: add byte ptr [edi + 8], bh; neg eax; ret; 
0x0019f6c4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d1ea4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x000d7d6f: add byte ptr [edi + ecx], al; test byte ptr [eax], al; sbb al, 0; add dh, dh; ret; 
0x0014d81d: add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00024b5f: add byte ptr [edi + edx - 0x73], dh; nop; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x000960e4: add byte ptr [edi + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0019efa4: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x0019df84: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x0016ace2: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x001a3809: add byte ptr [edi - 4], 0xff; jmp dword ptr [esi - 0x70]; 
0x000c359a: add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x0016dfb6: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x000574fe: add byte ptr [edi], ch; jbe 0x5748d; ret 0x40c7; 
0x0014c93e: add byte ptr [edi], ch; je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0014cad6: add byte ptr [edi], ch; je 0x14cb3e; mov byte ptr [ebx + 0x5ea8], 0; mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0014cb5e: add byte ptr [edi], ch; je 0x14cbc6; mov byte ptr [ebx + 0x4e68], 0; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x00101114: add byte ptr [edi], cl; dec eax; ror byte ptr [eax - 0x7cd7dbac], 1; mov byte ptr [ecx], 0x83; ret; 
0x000deeb1: add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x0006a5cf: add byte ptr [edi], cl; dec ecx; ret 0x9489; 
0x0013d0ec: add byte ptr [edi], cl; dec edi; ret; 
0x00097781: add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003ddf3: add byte ptr [edi], cl; dec esi; ret; 
0x000decb3: add byte ptr [edi], cl; dec esp; ret 0x4489; 
0x0011ea2e: add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x00097682: add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000fc2c6: add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x0008a898: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000f279a: add byte ptr [edi], cl; inc ebp; ret 0x90c3; 
0x000d4923: add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00093bde: add byte ptr [edi], cl; inc edi; ret 0x2ec3; 
0x001160bf: add byte ptr [edi], cl; inc edi; ret 0x548b; 
0x000943b3: add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x0009aa25: add byte ptr [edi], cl; inc edi; ror dword ptr [eax + 0x3c1882], 0; ret; 
0x00137aef: add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x000d2b89: add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x000bcb75: add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x0009210c: add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x000bcc89: add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000bd7aa: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000c01b8: add byte ptr [edi], cl; inc esp; ret 0x44c7; 
0x00042618: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000bdd53: add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000a2518: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000f2657: add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000bcc3e: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00176bbb: add byte ptr [edi], cl; inc esp; ret; 
0x00138b66: add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f7dbbc], 1; adc edi, dword ptr [ecx]; ret 0x840f; 
0x00145678: add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0017bc4d: add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00041cca: add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0008534f: add byte ptr [edi], cl; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00199a44: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000ffc36: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00060bb5: add byte ptr [edi], cl; mov dh, 0x44; sub al, ah; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000613c3: add byte ptr [edi], cl; mov dh, 0x44; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x0006135b: add byte ptr [edi], cl; mov dh, 0x44; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x00101714: add byte ptr [edi], cl; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x001940d8: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001928cf: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x001928df: add byte ptr [edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00151c8f: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005c4f7: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x0005b6bd: add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x001375d7: add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x001533df: add byte ptr [edi], cl; mov dh, 0x5a; or dh, dh; ret; 
0x0013814f: add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00041be9: add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00194038: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019287f: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00103f9f: add byte ptr [edi], cl; mov ds, word ptr [edx]; add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x001490c1: add byte ptr [edi], cl; mov dword ptr [0x8ba172c2], eax; dec ebp; mov word ptr [ebp - 0x63fc77f], cs; call dword ptr [eax - 0x73]; 
0x00091f91: add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000bb05f: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x10]; ret; 
0x000bb04f: add byte ptr [edi], cl; mov ebp, 0x40ea83c0; add edx, eax; jl 0xbb090; add eax, ecx; ret; 
0x000ba904: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000309ed: add byte ptr [edi], cl; mov esi, 0x893a3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x0005f824: add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x000ba08f: add byte ptr [edi], cl; mov esp, 0x35b9e8d2; or al, 0; add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bad5f: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000b6d8f: add byte ptr [edi], cl; mov esp, 0x68b9e8d2; or al, 0; add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bad8f: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000b6d6f: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00045732: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0010c2fc: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00041c7c: add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000d7abb: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000cb99c: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0019abfe: add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001997af: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0019f12f: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0019f0df: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000d5209: add byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], ah; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x000905bb: add byte ptr [edi], cl; test byte ptr [ebp - 0x72000002], bh; xchg ah, al; xchg ebp, eax; stc; call dword ptr [eax + 0x68]; 
0x001994ca: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000adba2: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00103d2f: add byte ptr [edi], cl; test byte ptr [edx - 0x7d000000], bh; jmp dword ptr [esi]; 
0x0019f086: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000adb4c: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0019f0cc: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019a2af: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00199baf: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00121c91: add byte ptr [edi], cl; test dword ptr [eax], edi; add eax, 0x458b0000; or byte ptr [ebx + 0x3a496], cl; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x0019b5ec: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0019a35a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0019a17a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x00199c4a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x00199fa4: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00142534: add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esi; ret; 
0x00199d76: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00199e7e: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0019b560: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000bd32a: add byte ptr [edi], cl; test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00197fae: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00164673: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x000409e1: add byte ptr [edi], cl; test dword ptr [ecx - 0xa000000], ecx; ret 0xf03; 
0x00199df3: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00170a68: add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], ebx; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001153cd: add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], esp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001011a3: add byte ptr [edi], cl; test dword ptr [edx - 0x7c000005], esi; ret 0x8301; 
0x0019a55f: add byte ptr [edi], cl; test dword ptr [edx], ebp; adc dl, dh; call dword ptr [ebx - 0x18]; 
0x0019436f: add byte ptr [edi], cl; test dword ptr [edx], ebx; jb 0x194367; call dword ptr [ebx - 0x18]; 
0x0019436f: add byte ptr [edi], cl; test dword ptr [edx], ebx; jb 0x194367; call dword ptr [ebx - 0x18]; mov ebp, 0x81fffe92; ret; 
0x0019aa5f: add byte ptr [edi], cl; test dword ptr [edx], ecx; or al, 0xf2; call dword ptr [ebx - 0x18]; 
0x001085ef: add byte ptr [edi], cl; test dword ptr [esi + edi*8 - 1], edx; dec dword ptr [ebx - 0x72efdb84]; xchg esp, edx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x001196df: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], eax; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001051cc: add byte ptr [edi], cl; test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0010497b: add byte ptr [edi], cl; test ebp, ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x64f837d], cl; call dword ptr [eax - 0x73]; 
0x001939aa: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0019687f: add byte ptr [edi], cl; test edx, ebp; dec ebp; bnd call dword ptr [ebx - 0x18]; 
0x000cce9f: add byte ptr [edi], cl; test esp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000f2342: add byte ptr [edi], cl; xchg byte ptr [edi - 0x74ffffff], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x690da68], cl; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x00083ca0: add byte ptr [edi], cl; xchg dword ptr [0x6a000001], ebx; add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000822fc: add byte ptr [edi], cl; xchg dword ptr [0x83000001], ebx; in al, dx; or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00083e59: add byte ptr [edi], cl; xchg dword ptr [eax + 0x6a000000], edi; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x00078ab9: add byte ptr [edi], cl; xchg dword ptr [ecx + 1], eax; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000781cd: add byte ptr [edi], cl; xchg dword ptr [ecx + eax], ecx; add byte ptr [ebx - 0xa9fb14], al; jne 0x781e3; push edx; call dword ptr [ebx + 0x1c]; 
0x000859a8: add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], ebp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0017db29: add byte ptr [edi], cl; xchg eax, esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00085be2: add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00151ca7: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000643c5: add byte ptr [edi], cl; xchg ebp, eax; ret 0x98e9; 
0x00063862: add byte ptr [edi], cl; xchg ebp, eax; ret 0xbd8b; 
0x000d37d9: add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x0009240c: add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x000be86a: add byte ptr [edi], cl; xchg ebp, eax; ret 0xf039; 
0x000938c3: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000f48de: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000805e2: add byte ptr [edi], cl; xchg edi, esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000d6ff1: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x000837bf: add byte ptr [edi], cl; xchg edx, ebx; add eax, 0xec830000; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0017d3bf: add byte ptr [edi], cl; xchg edx, esp; jbe 0x17d3af; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x000d479b: add byte ptr [edi], cl; xchg esi, eax; ror byte ptr [edi], 0x96; ret 0xe0c1; 
0x0007df2c: add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x00075861: add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00075840: add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0003c01a: add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x000e8cbc: add byte ptr [edi], cl; xchg esp, eax; ret 0xf8c1; 
0x000f3e47: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0017ed75: add byte ptr [edi], cl; xchg esp, eax; sar byte ptr [ebx], 0x9e; call 0xf17ed80; xchg esp, eax; ret 0xd008; 
0x0017ee05: add byte ptr [edi], cl; xchg esp, eax; sar byte ptr [ebx], 0x9e; call 0xf17ee10; xchg esp, eax; ret 0xd008; 
0x000d5de7: add byte ptr [edi], cl; xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x000f27d2: add byte ptr [edx + 0x20], bh; cmovne eax, edx; ret; 
0x000f2905: add byte ptr [edx + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000f27ea: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0002814c: add byte ptr [edx + 0x50], dl; call 0x92320; add esp, 0x1c; ret; 
0x0007d5b2: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00163e3a: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000bca59: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000b313f: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x0011b4ad: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x001647a1: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x000f26ca: add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x0008b143: add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000f26f3: add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x000924a1: add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000936c9: add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009082c: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092891: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009397f: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b970: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00199a3f: add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0017e044: add byte ptr [edx + 0xf], dh; xchg esp, eax; ret; 
0x000f2685: add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000f2652: add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x000898d4: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0017a9ca: add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091caf: add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00080b67: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x0008cff8: add byte ptr [edx + 1], bh; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00118fed: add byte ptr [edx + 1], bh; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014825f: add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x000893ce: add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008bc6b: add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091a26: add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba47: add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089b02: add byte ptr [edx + 1], bh; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b3dc: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c7: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092933: add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007db53: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007f8c8: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x789a0; add esp, 0x1c; ret; 
0x00095468: add byte ptr [edx + 1], ch; push eax; call 0x890b0; add esp, 0x2c; ret; 
0x00089312: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089381: add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00083be4: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007d92a: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0012a159: add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x00147851: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x14787d; add esp, 0xc; ret; 
0x000aae8f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0008808f: add byte ptr [edx - 0x77], dl; ret; 
0x001993a4: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0014824f: add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x000f269c: add byte ptr [edx - 1], bh; pop ebx; cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000bbdf2: add byte ptr [edx - 9], al; ret 3; 
0x00107daf: add byte ptr [edx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x001876c9: add byte ptr [edx], 0xaf; cli; jmp dword ptr [esi - 0x70]; 
0x00168ba8: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016f2a3: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc1a037d], cl; call dword ptr [eax - 0x73]; 
0x00169863: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc74137d], cl; call dword ptr [eax - 0x73]; 
0x00142976: add byte ptr [edx], al; add byte ptr [eax], al; add cl, ch; idiv bh; jmp dword ptr [ebp - 0x75]; 
0x000345a1: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x0012c084: add byte ptr [edx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x000acddc: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00034097: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0012e17d: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x0012d57e: add byte ptr [edx], al; call dword ptr [edi + 0x14]; 
0x0012d6c1: add byte ptr [edx], al; call eax; 
0x0012d865: add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x000962ee: add byte ptr [edx], al; ret; 
0x00102e58: add byte ptr [edx], ch; call 0x102e20; add esp, 0x1c; ret; 
0x000be264: add byte ptr [edx], ch; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00083946: add byte ptr [edx], ch; mov eax, edi; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x000be262: add byte ptr [edx], ch; push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0011eb48: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x00025da5: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x000957d7: add byte ptr [edx], ch; push 1; push eax; call 0x890b0; add esp, 0x2c; ret; 
0x0016dd74: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x16dbe0; add esp, 0x10; add esp, 0xc; ret; 
0x0011eb4a: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0017f87e: add byte ptr [edx], ch; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x00034b1e: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x0008ebca: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8ec00; add esp, 0x2c; ret; 
0x00025da7: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call edi; 
0x00075ca0: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x00082e24: add byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x24]; 
0x0017eede: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x0008678b: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x2c]; 
0x00082829: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x00087861: add byte ptr [edx], ch; push ecx; push edx; call 0x1799f0; add esp, 0x1c; ret; 
0x0016f9a9: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00083e5f: add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0007d5b0: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00165e30: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0007db57: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x0007d92e: add byte ptr [edx], ch; push esi; call dword ptr [edi + 0x40]; 
0x000a1e4c: add byte ptr [edx], dl; clc; call dword ptr [ebp - 1]; 
0x000922de: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x001193b6: add byte ptr [esi + 0x53], dl; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125c69: add byte ptr [esi + 0x53], dl; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0019417f: add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x00050c74: add byte ptr [esi + 0x5f], bl; ret; 
0x0002b69a: add byte ptr [esi + 0x7c8b0000], 0x24; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0016ded8: add byte ptr [esi + 0xd], bh; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000af1bf: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000aadff: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000ab01f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000aceff: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf0f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000aceef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf1f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000acf2f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf3f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf4f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b353f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000b354f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000ba4af: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b702c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4cf: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b704c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba38f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f1c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3af: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f3c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3cf: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f5c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b708c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70cf: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ef: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4ef: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b706c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70b0: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019b0af: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x34]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000baffd: add byte ptr [esi + 0xf], ah; je 0xbb04b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0018686f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00189fbb: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000bac71: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000baf4a: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000baf6f: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x0009a839: add byte ptr [esi + 4], dh; ret; 
0x0008df0f: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0008cda6: add byte ptr [esi + 8], bh; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0003c231: add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0008d5f5: add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00023255: add byte ptr [esi + 8], bh; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0003c2db: add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003cfe7: add byte ptr [esi + 8], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000f28d1: add byte ptr [esi + edx*2 + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0013b856: add byte ptr [esi - 0x18], dl; add ebp, dword ptr [0xc483fffe]; adc byte ptr [ebp - 0x7777f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0010a967: add byte ptr [esi - 0x18], dl; inc edx; fadd dword ptr [eax]; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0014c0b7: add byte ptr [esi - 0x18], dl; mov edx, dword ptr [0xc6810003]; jbe 0x14c10f; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00138b77: add byte ptr [esi - 0x3f], ah; ret 0x6608; 
0x00153ae2: add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0005763d: add byte ptr [esi - 0x70], ah; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x001342ad: add byte ptr [esi - 0x70], ah; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00165ded: add byte ptr [esi - 0x70], ah; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000bb4cd: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb01d: add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0002604d: add byte ptr [esi - 0x70], ah; endbr32; call 0x17d641; add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x0017d1ed: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00163aad: add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x0008c8cd: add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x000b3aad: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000aafad: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00094ead: add byte ptr [esi - 0x70], ah; mov dword ptr [eax + 4], edx; ret; 
0x0008aced: add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x00102fcd: add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00080d7d: add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0019416d: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x194179; neg eax; pop ebp; ret; 
0x0019985d: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x199869; neg eax; pop ebp; ret; 
0x000d20dd: add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x0008e19d: add byte ptr [esi - 0x70], ah; mov eax, 3; add esp, 0xc; ret; 
0x000d20ed: add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d20fd: add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d210d: add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d211d: add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d212d: add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x0017163d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x001663ad: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008a9ad: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0005817d: add byte ptr [esi - 0x70], ah; mov eax, edx; call 0x57f20; mov eax, 1; add esp, 0xc; ret; 
0x00073b8d: add byte ptr [esi - 0x70], ah; mov eax, edx; call 0x738f0; mov eax, 1; add esp, 0xc; ret; 
0x000df69d: add byte ptr [esi - 0x70], ah; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00102e1d: add byte ptr [esi - 0x70], ah; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000b34ed: add byte ptr [esi - 0x70], ah; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000af4ed: add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000acedd: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0009627b: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009627b: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00092a5c: add byte ptr [esi - 0x70], ah; nop; endbr32; nop; xor eax, eax; ret; 
0x000944db: add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x000e78ab: add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e78ab: add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0019cd6d: add byte ptr [esi - 0x70], ah; pop ebx; mov eax, 1; ja 0x19cd7a; neg eax; ret; 
0x000422ad: add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019b36d: add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x000e1b2d: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f310d: add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; pop esi; ret; 
0x0009c27d: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000420ed: add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x000b6e0f: add byte ptr [esi - 0x75], ah; push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00165251: add byte ptr [esi - 0x75], dl; jl 0x16527a; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000ba42e: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6fab: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ba32e: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6ebb: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0011913c: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x0019fa67: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0019fa07: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00047bee: add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00151bfa: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00136387: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x0017afe6: add byte ptr [esi - 0x7d], dl; ret; 
0x000b2f7a: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0019d05a: add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x0017d28a: add byte ptr [esi], ch; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0019f98a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019ea1a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0019f1f1: add byte ptr [esi], ch; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0019956a: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ja 0x199579; neg eax; ret; 
0x000d20ca: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x000ace4a: add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x000d1eba: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000baaea: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x0004b3f2: add byte ptr [esi], cl; cmp eax, 0x840f0800; ret 2; 
0x000a0866: add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x0019f167: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00069577: add byte ptr ds:[eax], al; add esp, 0x1c; ret; 
0x000d5454: add byte ptr ds:[eax], al; cmp eax, 1; jg 0xd5480; add esp, 8; pop ebx; ret; 
0x000d5208: add byte ptr ds:[edi], cl; test byte ptr [eax - 0x7d000000], ah; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x0009464e: add byte ptr es:[eax + 0x10], bh; add esp, 0xc; ret; 
0x00124526: add byte ptr es:[eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0008aa9e: add byte ptr es:[eax + 0x16], bh; pop ebx; ret; 
0x000b677e: add byte ptr es:[eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000f2866: add byte ptr es:[eax + 0x40], bh; ret; 
0x000b34de: add byte ptr es:[eax + 0x5b5e5f17], cl; ret; 
0x0017df7e: add byte ptr es:[eax + 0x7500017d], al; ret 0x448b; 
0x0008b3d6: add byte ptr es:[eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0019292e: add byte ptr es:[eax + 1], bh; ja 0x192939; neg eax; ret; 
0x0019956e: add byte ptr es:[eax + 1], bh; ja 0x199579; neg eax; ret; 
0x000d20ce: add byte ptr es:[eax + 1], bh; ret; 
0x00041c9e: add byte ptr es:[eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x0019f95e: add byte ptr es:[eax + eax*8 + 0x1a80c74], al; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x000505f6: add byte ptr es:[eax - 0x76fffe85], al; fidiv dword ptr [ebp + ebx*8 - 0x7d]; ret 0x8001; 
0x00143436: add byte ptr es:[eax - 1], bh; pop ebx; pop esi; ret; 
0x0007c3a6: add byte ptr es:[eax - 1], bh; ret; 
0x0003ccce: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0019f17b: add byte ptr es:[eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x0019e67b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x19e6d0; lea eax, [ecx + 0xa]; ret; 
0x0019e68b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x19e6d0; lea eax, [ecx + 0xb]; ret; 
0x0019e69b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x19e6d0; lea eax, [ecx + 0xd]; ret; 
0x0019e6ab: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x19e6d0; lea eax, [ecx + 0xe]; ret; 
0x0019e6bb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x19e6d0; lea eax, [ecx + 0xf]; ret; 
0x0019e60b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 1; jl 0x19e6d0; lea eax, [ecx + 1]; ret; 
0x0019e65b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x19e6d0; lea eax, [ecx + 7]; ret; 
0x0019e66b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x19e6d0; lea eax, [ecx + 9]; ret; 
0x0002603b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000911fb: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005873b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0010376b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00137e4b: add byte ptr es:[eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000bad5b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bb4bb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bad7b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bb4db: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bb02b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb03b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0009208b: add byte ptr es:[eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x920a0; mov eax, 0x16; ret; 
0x0018613b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017083b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x00085d8b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000e244b: add byte ptr es:[eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00125f23: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00102a2b: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0019f174: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d20a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a08a8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00163ab8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00088dc8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00085d84: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x0019e427: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e437: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e447: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e457: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e467: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x0019e3c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3f7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e407: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f945: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e417: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019d418: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019d428: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d438: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019d448: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019d458: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019d397: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x0019d3a8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x0019d3b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x0019d3c8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x0019d3d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x0019d3e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x0019d3f8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x0019d408: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0019d878: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019d868: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019d858: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019d848: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019d8e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0019d8d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0019d8c8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0019fbd8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0019d8b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019d8a8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0019d898: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0019d888: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x0019d387: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x0019ea87: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaa7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eab7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea27: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea47: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea57: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea77: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000ace55: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0019f918: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000ace67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x0019d468: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d20b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0019d056: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x0019f986: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea16: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d20c6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000ace46: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000baae6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x001656fb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016570b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x000acebb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000ace8b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000920db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0012a17b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000962f3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x00170873: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0019f97b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b99bb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0019df4b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008cf6b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000adaeb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x001a02bb: add byte ptr es:[eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000acf0b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000aceeb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf1b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0019288b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000bb4c9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb019: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008568a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x00163aa9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x00171d2a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000df76a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00094ea9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00061a1a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008a77a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000f270a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x00080d79: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20d9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0008e199: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d20e9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d20f9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d2109: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d2119: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d2129: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0013622a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0014c75a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000aceca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0019b369: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x00131cba: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0004150a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00089343: add byte ptr es:[eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000b2c3b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b717b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0008897b: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x000a0c8b: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000e059b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00179e33: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0019a86b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000bb16b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007656b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012d16b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0005da01: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012f551: add byte ptr es:[eax], al; add esp, 0xc; push eax; push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00131e56: add byte ptr es:[ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0019f9fe: add byte ptr es:[ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00159986: add byte ptr es:[ebp - 0x4f7af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0014d80e: add byte ptr es:[ebp - 0x577af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0009c28e: add byte ptr es:[ebp - 0x77], dl; ret 0x5657; 
0x0014c15e: add byte ptr es:[ebp - 0x77], dl; ret 0xe589; 
0x00035df6: add byte ptr es:[ebp - 0x7cd58a40], al; ret; 
0x0005772e: add byte ptr es:[ebp - 0x7cf38b40], al; call 0x448003b; ret; 
0x000f9076: add byte ptr es:[ebx + 0x1042454], cl; ret 0x7c80; 
0x00163d2e: add byte ptr es:[ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0016e316: add byte ptr es:[ebx + 0x17083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014d296: add byte ptr es:[ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0004f94e: add byte ptr es:[ebx + 0x39182444], cl; ret; 
0x001041be: add byte ptr es:[ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x00163dce: add byte ptr es:[ebx + 0x438b08ec], al; adc bh, bh; je 0x163dfd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016a45e: add byte ptr es:[ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00032aa6: add byte ptr es:[ebx + 0x440f06f8], al; ret 0xc89; 
0x000d1dee: add byte ptr es:[ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000e8b56: add byte ptr es:[ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ef886: add byte ptr es:[ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0009df76: add byte ptr es:[ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x00170376: add byte ptr es:[ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000a255e: add byte ptr es:[ebx + 0x5e5b04c4], al; ret; 
0x000893b6: add byte ptr es:[ebx + 0x5e], bl; pop edi; ret; 
0x000baa6e: add byte ptr es:[ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000ba71e: add byte ptr es:[ebx + 0x5e], bl; ret; 
0x00094ba6: add byte ptr es:[ebx + 0x685504ec], al; ret 0xa00; 
0x00055146: add byte ptr es:[ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000d003e: add byte ptr es:[ebx - 0x363f7b], al; call dword ptr [eax]; 
0x0008b4de: add byte ptr es:[ebx - 0x3e2f76ed], cl; call 0x893828ed; clc; call dword ptr gs:[0x10]; 
0x0010269e: add byte ptr es:[ebx - 0x3f7af7bb], cl; je 0x102592; call eax; 
0x00102656: add byte ptr es:[ebx - 0x3f7afbbb], cl; je 0x102592; call eax; 
0x001026e6: add byte ptr es:[ebx - 0x3f7afbbb], cl; je 0x1025e7; call eax; 
0x0010a77e: add byte ptr es:[ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0013e54e: add byte ptr es:[ebx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0019f7ae: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19f7c0; neg eax; ret; 
0x0010347e: add byte ptr es:[ebx - 0x48], bl; or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0006dc86: add byte ptr es:[ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007098e: add byte ptr es:[ebx - 0x54f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e956e: add byte ptr es:[ebx - 0x5db73], al; call dword ptr [eax]; 
0x000f028e: add byte ptr es:[ebx - 0x5eb73], al; call dword ptr [eax]; 
0x000e422e: add byte ptr es:[ebx - 0x6bf0a308], al; ret; 
0x00051666: add byte ptr es:[ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00129ce6: add byte ptr es:[ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x0012e9a6: add byte ptr es:[ebx - 0x76e7dba4], cl; inc ebx; add al, 0x83; ret; 
0x001a3d2e: add byte ptr es:[ebx - 0x76ebdbbc], cl; ret; 
0x0013e5f6: add byte ptr es:[ebx - 0x7872f714], al; ret; 
0x000f53a6: add byte ptr es:[ebx - 0x7c72f714], al; jbe 0xf5406; stc; call dword ptr [eax + 0x55]; 
0x000fbb8e: add byte ptr es:[ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x00024df6: add byte ptr es:[ebx - 0xa9fb14], al; je 0x24e23; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00086a86: add byte ptr es:[ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000ace9e: add byte ptr es:[ecx + 0x4518811], cl; pop ebx; ret; 
0x000b377e: add byte ptr es:[ecx + 0x5b5e5ff8], cl; ret; 
0x00081c26: add byte ptr es:[ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00085b7e: add byte ptr es:[ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x85b80; ret; 
0x000505e6: add byte ptr es:[ecx + 0x8c483da], cl; mov eax, edx; pop ebx; ret; 
0x0009209e: add byte ptr es:[ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x00079e96: add byte ptr es:[ecx - 0x76207622], cl; ret 0xcb89; 
0x0002be0e: add byte ptr es:[ecx - 0x763576fa], cl; dec byte ptr [ebx + 0x39042444]; ret 0x840f; 
0x0017bd3e: add byte ptr es:[ecx - 0x7c0f7616], cl; ret; 
0x0015ebbe: add byte ptr es:[ecx - 0x7c2e7623], cl; ret; 
0x0017c156: add byte ptr es:[ecx - 0x7cf769b4], cl; ret 0x8d01; 
0x0007955e: add byte ptr es:[ecx - 1], bh; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x0008af76: add byte ptr es:[ecx], bh; salc; jae 0x8afb8; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0016926e: add byte ptr es:[ecx], ch; ret; 
0x000cd076: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0019b30e: add byte ptr es:[ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000421ce: add byte ptr es:[ecx], dh; leave; pop ebx; pop esi; mov eax, ecx; ret; 
0x00140286: add byte ptr es:[ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0017d7ce: add byte ptr es:[ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x00151c9e: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0017789e: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x000b34ce: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000d1eae: add byte ptr es:[edi + 0x5e], bl; ret; 
0x001928ce: add byte ptr es:[edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x001928de: add byte ptr es:[edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0005c4f6: add byte ptr es:[edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x0019287e: add byte ptr es:[edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000f3e46: add byte ptr es:[edi], cl; xchg esp, eax; ret; 
0x00199a3e: add byte ptr es:[edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000aae8e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0014824e: add byte ptr es:[edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x0019417e: add byte ptr es:[esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x000acf2e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf3e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf4e: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00136386: add byte ptr es:[esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x0011b4af: add byte ptr fs:[eax], al; add byte ptr [ebx + 0x10c80], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00118fb4: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004bd3a: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024833: add ch, 0x68; stc; call dword ptr [eax - 1]; 
0x0008123e: add ch, ah; call dword ptr [eax - 0x73]; 
0x00143a85: add ch, bh; dec dword ptr [ebx - 0x72dfdba4]; and esp, 0xffffffbd; stc; call dword ptr [eax - 0x73]; 
0x00163a68: add ch, bh; jmp dword ptr [esi - 0x70]; 
0x0007ba75: add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000c20d8: add ch, bl; test byte ptr [eax], ah; add byte ptr [eax], al; add cl, ch; cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x00165f25: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000cbfc4: add ch, byte ptr [ecx]; ret 0x28b; 
0x0006a5c2: add ch, byte ptr [ecx]; ret 0x4489; 
0x000d79b8: add ch, byte ptr [ecx]; ret 0x48d; 
0x000f99f8: add ch, byte ptr [ecx]; ret 0xec83; 
0x0007c5ab: add ch, byte ptr [ecx]; ret 0xed85; 
0x000dcbb5: add ch, byte ptr [ecx]; ret; 
0x00075c9e: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0017eedc: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00082827: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00083be6: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007d92c: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00047af0: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x000c36f0: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000c6d70: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc75d0; add esp, 0x1c; ret; 
0x00070b8a: add ch, cl; xchg edi, eax; loope 0x70b8e; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x001037ba: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00071b3a: add cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x00081909: add cl, al; call 0x1e89c14; ret; 
0x00081929: add cl, al; call 0x1e89c35; ret; 
0x00088a3b: add cl, al; call 0x1e90d4d; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x0009df4d: add cl, al; call 0xfda1866; inc edi; ret 0xc083; 
0x0009e171: add cl, al; call 0xfda1a8a; inc edi; ret 0xc083; 
0x000a0189: add cl, al; call 0xfda3aa2; inc edi; ret 0x508d; 
0x00104d06: add cl, al; call 0xfe0860f; dec edi; ret 0xd4e9; 
0x000384f6: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x001799dd: add cl, al; jmp 0x5ebd8ce6; pop edi; ret; 
0x001038b8: add cl, al; jmp 0x5fbc2bc1; ret; 
0x000765ec: add cl, al; ret 0x6509; 
0x00024b6e: add cl, al; ret 0x8909; 
0x00123542: add cl, al; ret 0xf009; 
0x0014c10a: add cl, al; ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x001496bf: add cl, al; stc; call dword ptr [eax - 0x73]; 
0x000e3a38: add cl, bh; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000bc37c: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000ba25b: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x0018700d: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x00170338: add cl, byte ptr [eax + 0x48bff42]; and al, 0x39; ret 0x3574; 
0x000ab03a: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x000aafd8: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000b9953: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000aaefa: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x000b961b: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000aaeb8: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x00137d46: add cl, byte ptr [eax]; pop ebx; ret; 
0x000bbf6b: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b0fc0: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x000b0ff2: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x000a59c5: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x000a59d9: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x000a59e9: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000a59fd: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x0008311a: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000b480b: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0005064a: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x50610; jmp eax; 
0x000cd10e: add cl, byte ptr [ebp - 0x15ec936e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a3343: add cl, byte ptr [ebp - 0x1747036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a3303: add cl, byte ptr [ebp - 0x1747936e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a3fae: add cl, byte ptr [ebp - 0x174aa36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5033: add cl, byte ptr [ebp - 0x174b336e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a3dd3: add cl, byte ptr [ebp - 0x1750636e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a298e: add cl, byte ptr [ebp - 0x1754d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5dae: add cl, byte ptr [ebp - 0x1757c36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5dee: add cl, byte ptr [ebp - 0x1758336e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a337e: add cl, byte ptr [ebp - 0x1758a36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a33be: add cl, byte ptr [ebp - 0x1759036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5e33: add cl, byte ptr [ebp - 0x1767036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5eb3: add cl, byte ptr [ebp - 0x1875c36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5e6e: add cl, byte ptr [ebp - 0x1879436e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00178c22: add cl, byte ptr [ebp - 0x689d680]; call dword ptr [eax - 0x18]; 
0x00140fe5: add cl, byte ptr [ebp - 0x6c37a7d]; call dword ptr [eax + 0x51]; 
0x000ad09a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x0015e960: add cl, byte ptr [ebx + 0x29eb8900]; ret; 
0x000b684a: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x000328dd: add cl, byte ptr [ebx + 0x54408b00]; ret; 
0x00189fbf: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000ba25e: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000b6e28: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x000964ad: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x00096719: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x000341ad: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003417d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003414d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0003408d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000340ed: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00033ffd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000340bd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0003405d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0003425d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 1; ret; 
0x0003402d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 2; ret; 
0x0003411d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 4; ret; 
0x00033fcd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 8; ret; 
0x0007c015: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x000cf705: add cl, byte ptr [ebx - 0x365363]; call dword ptr [eax + 0x6a]; 
0x000cf2ad: add cl, byte ptr [ebx - 0x365363]; dec dword ptr [ecx - 0x361f7b]; call dword ptr [edi + 0x6a]; 
0x00054bb3: add cl, byte ptr [ebx - 0x365f63]; dec dword ptr [ecx - 0x361f7b]; call dword ptr [esi + 0x6a]; 
0x00067e7b: add cl, byte ptr [ebx - 0x59f6b]; inc dword ptr [ecx]; ret 0xf9e9; 
0x0006673d: add cl, byte ptr [ebx - 0x5e76b]; inc dword ptr [ecx]; ret 0x858b; 
0x0018bf6f: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0003428d: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000342bd: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00033ced: add cl, byte ptr [ebx - 0x74fbdbac]; inc esp; nop; inc eax; ret; 
0x00058f70: add cl, byte ptr [ebx - 0x8b63]; call dword ptr [eax - 1]; 
0x0009593f: add cl, byte ptr [ebx]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000ad287: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0xacfe1; pop ebx; ret; 
0x000ad073: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0xacfe1; pop ebx; ret; 
0x000ad095: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0xacfe1; pop ebx; ret; 
0x0013ec9f: add cl, byte ptr [ecx + 0x39f329cb]; ret; 
0x000ad0bb: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xacfe1; pop ebx; ret; 
0x000b102a: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x0007e63b: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000ad0d3: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0xacfe1; pop ebx; ret; 
0x0015f38f: add cl, byte ptr [ecx + 0x5d5f5ef0]; ret; 
0x000ad157: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0xacfe1; pop ebx; ret; 
0x0008b453: add cl, byte ptr [ecx + 0xf0b8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014c1ed: add cl, byte ptr [ecx - 0x1337b]; call dword ptr [eax - 0x18]; 
0x00147c89: add cl, byte ptr [ecx - 0x2776efb5]; pop ebx; pop esi; pop edi; ret; 
0x000adbb3: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x000ab09a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x000ab07a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000ee346: add cl, byte ptr [ecx - 0x46b73]; call dword ptr [edx - 0x77]; 
0x000ed654: add cl, byte ptr [ecx - 0x4837b]; call dword ptr [edx - 0x77]; 
0x000e9fc4: add cl, byte ptr [ecx - 0x4877b]; call dword ptr [edx - 0x77]; 
0x0008b166: add cl, byte ptr [ecx - 0x76ebdbbc]; ret; 
0x000acc3a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000aae4a: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000aaf3a: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x0003fa93: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0019ff7a: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x00058e09: add cl, byte ptr [ecx - 0x8f6b]; dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x00059124: add cl, byte ptr [ecx - 0xc74b]; call dword ptr [esi - 0x18]; 
0x0006b9d7: add cl, byte ptr [ecx]; ret 0xb70f; 
0x000e8cc8: add cl, byte ptr [ecx]; ret 0xf889; 
0x0009e76b: add cl, byte ptr [ecx]; ret; 
0x000bf303: add cl, byte ptr [edi]; inc esp; ret 0x66c3; 
0x0009ac14: add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x0018a097: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007d5f5: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x0007d280: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x000ad09d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0019e56c: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0019d7bc: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019e33c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000accbd: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b42be: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0019eec8: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0019e5ca: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x0019d80b: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x0019edb5: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0012780c: add cl, byte ptr [edi]; xchg byte ptr [edi - 0x77000000], dl; ret; 
0x00030369: add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00170a55: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x0019b0b5: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0012d363: add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000c20df: add cl, ch; cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x000476b8: add cl, ch; dec edx; in eax, 0xff; call dword ptr [eax + 0x31]; 
0x0014297a: add cl, ch; idiv bh; jmp dword ptr [ebp - 0x75]; 
0x00144576: add cl, ch; imul edi, ebp, -1; jmp dword ptr [ebp - 0x5f]; 
0x00076744: add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000cf38c: add cl, ch; in eax, dx; idiv bh; dec dword ptr [ebx - 0x36537b]; call dword ptr [esi + 0x6a]; 
0x00070236: add cl, ch; pop ds; jmp 0x7023a; dec dword ptr [ebx - 0x4f743]; jmp dword ptr [ebp - 0x75]; 
0x001080f2: add cl, ch; ret 0xffeb; 
0x0005ca38: add cl, ch; ret 0xfff9; 
0x000337f2: add cl, ch; ret 0xfffc; 
0x0008ffc5: add cl, ch; ret 0xfffe; 
0x000321f7: add cl, ch; ret; 
0x0013e191: add cl, ch; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0006cd88: add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x0006cd88: add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x000df411: add cl, ch; xchg ebp, eax; out 0xff, eax; call dword ptr [eax + 0x57]; 
0x000c3286: add cl, ch; xchg edx, eax; jecxz 0xc328a; call dword ptr [eax + 0x31]; 
0x0008820a: add cl, cl; cli; call dword ptr [eax + 0x6a]; 
0x0008c8ed: add cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003fafd: add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a5997: add dh, al; add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0013bb67: add dh, al; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00024bf8: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1af66370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012c9f7: add dh, al; inc edx; jmp dword ptr [eax]; 
0x0005f580: add dh, al; inc esp; and al, 0x71; js 0x5f510; ret 0xc689; 
0x00166b88: add dh, al; stc; call dword ptr [eax - 0x73]; 
0x0006618f: add dh, al; test dword ptr [edx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x001990b6: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x0019a886: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x0019ade6: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0008998d: add dh, bh; jne 0x89931; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0018e354: add dh, bh; ret 0xf; 
0x0018e31a: add dh, bh; ret 2; 
0x001037bd: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00103735: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x001588df: add dh, byte ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x000bb4ac: add dh, byte ptr [eax]; ret; 
0x00128729: add dh, byte ptr [ebp + 0x34]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0019d02e: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x19d084; add eax, 0xb; ret; 
0x0007b312: add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0019cfe8: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x19d064; add eax, 3; ret; 
0x0014c743: add dh, byte ptr [ebp + 0xa]; mov eax, ecx; ret; 
0x0008ba38: add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x00144870: add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000f3193: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0014486a: add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00093b4a: add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0010396f: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00151bfe: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0018700b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0012df29: add dh, byte ptr [edx + ecx - 0x7d]; ret 0x8318; 
0x0008b437: add dh, byte ptr [edx + edx - 0x77]; ret 0xe283; 
0x00120116: add dh, byte ptr [esi + 0x27]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000d6fdb: add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x0008a863: add dh, byte ptr [esi + 0xa]; ret; 
0x00096fc3: add dh, byte ptr [esp + edi*4 + 0x5b]; pop esi; ret; 
0x000f5442: add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0019f96f: add dh, dh; les eax, ptr [ecx]; jne 0x19f990; lea eax, [ecx + 0xc]; ret; 
0x0019d808: add dh, dh; les eax, ptr [edx]; jne 0x19d8a0; lea eax, [edi - 8]; pop edi; ret; 
0x0019e388: add dh, dh; les eax, ptr [edx]; jne 0x19e420; lea eax, [ecx + 8]; ret; 
0x0019d831: add dh, dh; les esp, ptr [eax]; jne 0x19d8d0; lea eax, [edi - 4]; pop edi; ret; 
0x0019e3b1: add dh, dh; les esp, ptr [eax]; jne 0x19e450; lea eax, [ecx + 0xc]; ret; 
0x00076e77: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x001a58fa: add dh, dh; ret 0x7407; 
0x00059622: add dh, dh; ret 0x7410; 
0x000761ef: add dh, dh; ret 0x7420; 
0x0019c7ed: add dh, dh; ret 0x7501; 
0x000b510f: add dh, dh; ret 0x7510; 
0x0013291f: add dh, dh; ret 0x7520; 
0x000f80b4: add dh, dh; ret 0x7540; 
0x001456c3: add dh, dh; ret 0xf01; 
0x0009506b: add dh, dh; ret 0xf02; 
0x00032261: add dh, dh; ret 0xf03; 
0x000fc50b: add dh, dh; ret 0xf04; 
0x00145d9f: add dh, dh; ret 0xf08; 
0x0019f861: add dh, dh; ret 0xf0f; 
0x0019d1d1: add dh, dh; ret 0xf10; 
0x00103f64: add dh, dh; ret 0xf20; 
0x00058c6c: add dh, dh; ret 0xf40; 
0x0005981f: add dh, dh; ret 0xf50; 
0x00103f6d: add dh, dh; ret 0xf80; 
0x0008be62: add dh, dh; ret; 
0x000d7eda: add dl, 0x55; stc; call dword ptr [eax + 0x53]; 
0x0014cd36: add dl, al; stc; call dword ptr [eax - 0x18]; 
0x0008b570: add dl, byte ptr [eax + 0x5f5bc031]; ret; 
0x00118cec: add dl, byte ptr [eax + eax]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a51d7: add dl, byte ptr [eax - 0x18]; ret 0x8cb; 
0x001646f9: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x000e348f: add dl, byte ptr [esi]; add byte ptr [eax], al; add bl, ch; ret; 
0x0003c17f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbdf: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c11f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011ce97: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007669e: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009fa4f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00150229: add dl, dh; call dword ptr [eax - 1]; 
0x00104e3c: add dl, dh; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x000e0c49: add dword ptr [0x89535600], edx; ret; 
0x001407af: add dword ptr [0x8beb0574], ebp; lea esi, [esi]; xor eax, eax; ret; 
0x0009ed3c: add dword ptr [0x8d500000], ecx; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x0009962a: add dword ptr [eax + 0x115], edi; call dword ptr gs:[0x10]; 
0x00099d4b: add dword ptr [eax + 0x116], edi; call dword ptr gs:[0x10]; 
0x00171cd8: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00171cfc: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00088626: add dword ptr [eax + 0x24748903], ebp; sbb byte ptr [edi], cl; inc esp; ret 0x978b; 
0x000bc694: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x0008578e: add dword ptr [eax + 0x56], edx; call dword ptr [edi + 0xc]; 
0x000bcafb: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000b95f4: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x000bc722: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x000bc10b: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x0009048b: add dword ptr [eax + 0x5e5bc031], edx; pop edi; ret; 
0x000af251: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x000bb956: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x000a3f7b: add dword ptr [eax + 0x5f], eax; ret; 
0x000aae91: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x000934bd: add dword ptr [eax + 0x65], esi; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0004bf22: add dword ptr [eax + 0x7430ff78], eax; test dword ptr [ebx - 0x74f7dbac], 0x1402474; ret 0xf229; 
0x00045382: add dword ptr [eax + 0x7430ff78], eax; test dword ptr [ebx - 0x74fbdbac], 0x1382474; ret 0xf229; 
0x00169985: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00041c14: add dword ptr [eax + 2], edi; bsr ecx, ecx; shl eax, cl; ret; 
0x00041be4: add dword ptr [eax + 2], edi; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cc5: add dword ptr [eax + 2], edi; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00137377: add dword ptr [eax + 2], edi; ret; 
0x00147854: add dword ptr [eax + 8], 1; je 0x14787d; add esp, 0xc; ret; 
0x000f1f4f: add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x0013526a: add dword ptr [eax + eax], -0x7f; ret; 
0x000e4d35: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x00119baf: add dword ptr [eax + eax], ecx; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00118d1a: add dword ptr [eax + eax], edx; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a2d2d: add dword ptr [eax + ebp*8 - 0x7d], esi; ret 0x8b01; 
0x00044c90: add dword ptr [eax - 0x16dfdbbc], ecx; ret 0xfffc; 
0x000d61a1: add dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x000cb8a0: add dword ptr [eax - 0x54], -7; call dword ptr [eax - 0x18]; 
0x00172b42: add dword ptr [eax - 0x58], 0; add byte ptr [eax - 0x73], dl; cmp edi, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x000bf612: add dword ptr [eax - 0x6bf0d005], eax; ret; 
0x001595eb: add dword ptr [eax - 0x73], edx; sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0016c55e: add dword ptr [eax - 0x75], ebx; inc ebp; cmp al, 0x5a; push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x00166b87: add dword ptr [eax], -0x3a; stc; call dword ptr [eax - 0x73]; 
0x001496be: add dword ptr [eax], -0x3f; stc; call dword ptr [eax - 0x73]; 
0x00157a7e: add dword ptr [eax], -0x5e; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0014d3a5: add dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; or dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x00089aff: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ebp - 0xf47efa8], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001603e5: add dword ptr [eax], 0x8d500000; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x0010baa1: add dword ptr [eax], 0xa30f8000; ret 0xdc73; 
0x00092242: add dword ptr [eax], 0xf6310000; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000972c6: add dword ptr [eax], eax; add al, ch; ret 0xff42; 
0x0011a49f: add dword ptr [eax], eax; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x000bbddf: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000df65d: add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016a9cb: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016a9cb: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x001291c7: add dword ptr [eax], eax; add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x0003c22a: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d4: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00154a40: add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; aaa; ret; 
0x000b122e: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000eb208: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [ebx], 0x57; stc; call dword ptr [eax - 0x18]; 
0x000903ff: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x6c; stc; call dword ptr [eax - 0x18]; 
0x0014859d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc eax, -0x41; stc; call dword ptr [eax - 0x18]; 
0x001475eb: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x0007cd71: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x000d61af: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x000903d7: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb ebx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x00141a69: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x00090fa3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [eax], edx; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0013d25e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [esi + 0x69], ebp; stc; call dword ptr [eax - 0x18]; 
0x00090ec3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [esp + edx*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0009114d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test ebx, ebx; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0002751b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg bl, bl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0008f679: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg bl, bl; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0008e05c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x4f], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c504: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c38c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x001098e1: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0008f640: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dl; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x000c3502: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], dl; aas; stc; call dword ptr [eax - 0x18]; 
0x0008e03a: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x4f], dh; stc; call dword ptr [eax - 0x18]; 
0x00109663: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], cl; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0008f477: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + edx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0002754b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0002aa17: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002ab7e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0014715f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x42], ebx; stc; call dword ptr [eax - 0x18]; 
0x0012ee5b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x4a], ebx; stc; call dword ptr [eax - 0x18]; 
0x0002ab5b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebx; stc; call dword ptr [eax - 0x18]; 
0x00030e52: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edi - 7], ecx; call dword ptr [eax - 0x18]; 
0x00082d66: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], edi; dec esi; stc; call dword ptr [eax - 0x18]; 
0x000ee86e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], edx; push edi; stc; call dword ptr [eax - 0x18]; 
0x00047900: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], edx; aas; stc; call dword ptr [eax - 0x18]; 
0x0012ee38: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], esp; stc; call dword ptr [eax - 0x18]; 
0x0014b543: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6d], ebx; stc; call dword ptr [eax - 0x18]; 
0x0002a088: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x3a], ecx; stc; call dword ptr [eax - 0x18]; 
0x0012edf2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*4], esi; stc; call dword ptr [eax - 0x18]; 
0x00091703: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ecx, esi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00091831: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edx, ebp; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0002aaca: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2aacc; call dword ptr [eax - 0x18]; 
0x0002b739: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2b73b; call dword ptr [eax - 0x18]; 
0x0002ce28: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ce2a; call dword ptr [eax - 0x18]; 
0x0002d927: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2d929; call dword ptr [eax - 0x18]; 
0x0002e205: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2e207; call dword ptr [eax - 0x18]; 
0x0002ecfe: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ed00; call dword ptr [eax - 0x18]; 
0x00145672: add dword ptr [eax], eax; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x000744ac: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000522ce: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00060c3c: add dword ptr [eax], eax; add byte ptr [eax], al; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0013e778: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00058188: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00058291: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0011c71a: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011ae04: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00099289: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x00023261: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00192931: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x192939; neg eax; ret; 
0x00194171: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x194179; neg eax; pop ebp; ret; 
0x00199571: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x199579; neg eax; ret; 
0x00199861: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x199869; neg eax; pop ebp; ret; 
0x00199a21: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x199a29; neg eax; ret; 
0x0019a508: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19a510; neg eax; ret; 
0x0019b6f9: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19b701; neg eax; ret; 
0x0019cd72: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19cd7a; neg eax; ret; 
0x0019b387: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19b390; neg eax; ret; 
0x0019b6b2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19b6c0; neg eax; ret; 
0x0019f7b2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19f7c0; neg eax; ret; 
0x000d1ed1: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xd1ed9; neg eax; ret; 
0x00060939: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00060ab8: add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0017a9cc: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001719fa: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x001719ba: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00165659: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00171941: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x00060932: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esp], 1; jmp eax; 
0x00097f63: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091cb1: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017fedb: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0014c761: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00080b69: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x0008cffa: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00089ad0: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000bc3a8: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0006bc89: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006c025: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x727d4]; add ecx, ebx; jmp ecx; 
0x0006c455: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x728d4]; add ecx, ebx; jmp ecx; 
0x00118fef: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000898d1: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00023252: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x00060bb2: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000d1f23: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x00148261: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x00076ea5: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00073c9c: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011f4cb: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00050c71: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0016fcfe: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x000893d0: add dword ptr [eax], eax; add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016ea7b: add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0005cdb6: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00169987: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x0009a6b0: add dword ptr [eax], eax; add byte ptr [eax], al; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x000f2be4: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xf2bf0; ret; 
0x0008bc6d: add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001448c4: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x00094536: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008cf63: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024cd8: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00041ca1: add dword ptr [eax], eax; add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x00091a28: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba49: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089b04: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b63f: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; lea ebx, [ebp + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b3de: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c9: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092935: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000bc518: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0xbc521; xor eax, eax; ret; 
0x00140a08: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x140a3d; add esp, 0x11c; ret; 
0x000bdd4b: add dword ptr [eax], eax; add byte ptr [ebp + 0x3cc492], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000f7d22: add dword ptr [eax], eax; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x00086a75: add dword ptr [eax], eax; add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00034521: add dword ptr [eax], eax; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0010c3df: add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014cd21: add dword ptr [eax], eax; add byte ptr [ebp - 0x63dcb7a], cl; call dword ptr [eax - 0x73]; 
0x00024ea3: add dword ptr [eax], eax; add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x0008dcd2: add dword ptr [eax], eax; add byte ptr [ebp - 0x6b0f27a], cl; call dword ptr [eax - 0x73]; 
0x0008cbb9: add dword ptr [eax], eax; add byte ptr [ebp - 0x6b12c79], cl; call dword ptr [eax - 0x73]; 
0x0004500f: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c05c79], cl; call dword ptr [eax - 0x73]; 
0x0004bb91: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c06679], cl; call dword ptr [eax - 0x73]; 
0x0002945a: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5c579], cl; call dword ptr [eax - 0x73]; 
0x00028ef8: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5c57a], cl; call dword ptr [eax - 0x73]; 
0x000287a5: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5c57d], cl; call dword ptr [eax - 0x73]; 
0x00179b39: add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf604; 
0x000a3123: add dword ptr [eax], eax; add byte ptr [ebp - 0xa94437e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001333f3: add dword ptr [eax], eax; add byte ptr [ebp - 0xa94537e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a3173: add dword ptr [eax], eax; add byte ptr [ebp - 0xa97637e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00133443: add dword ptr [eax], eax; add byte ptr [ebp - 0xa97737e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a29b3: add dword ptr [eax], eax; add byte ptr [ebp - 0xa9a837e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001333a3: add dword ptr [eax], eax; add byte ptr [ebp - 0xa9a937e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x001251e1: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x0011a499: add dword ptr [eax], eax; add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x0005cdad: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0013f8ee: add dword ptr [eax], eax; add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x00115ef2: add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000ede56: add dword ptr [eax], eax; add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ea802: add dword ptr [eax], eax; add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x57]; 
0x0012c725: add dword ptr [eax], eax; add byte ptr [ebx + 0x390c2444], cl; ret 0x830f; 
0x0017a4f6: add dword ptr [eax], eax; add byte ptr [ebx + 0x3bc80], cl; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016babf: add dword ptr [eax], eax; add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00082300: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00075671: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000cc7c9: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db455], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x0014e73d: add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00117401: add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x00033ce8: add dword ptr [eax], eax; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000f29ef: add dword ptr [eax], eax; add byte ptr [ebx + 0x5c086bc], cl; stc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000bd32e: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007def6: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x000bca05: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003c2be: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c90a: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003c064: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003c5db: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0003e405: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push edx; call eax; 
0x0017db2d: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0012d6b2: add dword ptr [eax], eax; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x24; push 0; push 0x2000004; call eax; 
0x0003e9d6: add dword ptr [eax], eax; add byte ptr [ebx + 0x74ff08ec], al; and al, 0xc; push dword ptr [esp + 0x3c]; call eax; 
0x000328d8: add dword ptr [eax], eax; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x00088a33: add dword ptr [eax], eax; add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e90d4d; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x0010b50a: add dword ptr [eax], eax; add byte ptr [ebx + 0xbc24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c298: add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0012452a: add dword ptr [eax], eax; add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000805e6: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0016c002: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000830cf: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x001042ab: add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x000f2346: add dword ptr [eax], eax; add byte ptr [ebx - 0x15637b], cl; inc dword ptr [ebx - 0x6772f714]; and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x00158670: add dword ptr [eax], eax; add byte ptr [ebx - 0x17a8f314], al; add al, 0x25; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x00094bf2: add dword ptr [eax], eax; add byte ptr [ebx - 0x17a8f314], al; xor ah, byte ptr [eax - 0x3b7cfff8]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0011c892: add dword ptr [eax], eax; add byte ptr [ebx - 0x17aff314], al; ret 0xf621; 
0x0007504e: add dword ptr [eax], eax; add byte ptr [ebx - 0x18736c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000312a4: add dword ptr [eax], eax; add byte ptr [ebx - 0x1e373], cl; jmp ptr [ecx]; ret; 
0x000cc39e: add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000536c4: add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0011b4b6: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0011b9c2: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x11b9cd; ret; 
0x00138498: add dword ptr [eax], eax; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000f3690: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x00092d1c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001181e1: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x001159bf: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115ac2: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002dfb0: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00029ee9: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b0ae: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b0b3; call dword ptr [eax - 0x73]; 
0x0014abee: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x0009c36a: add dword ptr [eax], eax; add byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [ecx + ecx], 0; add byte ptr [ecx], bh; ret; 
0x0019e4ab: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000df6d2: add dword ptr [eax], eax; add byte ptr [ebx - 0x74bbdb8c], cl; pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00125ed1: add dword ptr [eax], eax; add byte ptr [ebx - 0x74cbdbac], cl; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001029e1: add dword ptr [eax], eax; add byte ptr [ebx - 0x74dbdbac], cl; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000dfd6b: add dword ptr [eax], eax; add byte ptr [ebx - 0x768bdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x000a30e8: add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbb4], cl; ret 0xf089; 
0x0019ec72: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0005f721: add dword ptr [eax], eax; add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc101; 
0x0013c535: add dword ptr [eax], eax; add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xdb85; 
0x0019ac02: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0019a6a1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000398d2: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; cmp bh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x00140d0d: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; js 0x140d81; stc; call dword ptr [eax - 0x18]; 
0x0014c1cc: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; test byte ptr [ebp - 7], ch; call dword ptr [eax - 0x73]; 
0x0002fe02: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; add al, 0x3b; stc; call dword ptr [eax - 1]; 
0x0014c1ac: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; sub dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x000a95c2: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x0005bb8e: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cefdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x00076f7b: add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x76f8d; push esi; call dword ptr [ebx + 0x1c]; 
0x00078abd: add dword ptr [eax], eax; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000781d1: add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x781e3; push edx; call dword ptr [ebx + 0x1c]; 
0x000843dc: add dword ptr [eax], eax; add byte ptr [ebx - 0xacfb14], al; je 0x8440a; cmp al, 0x56; call dword ptr [ebp + 0x38]; 
0x000344dc: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x000dfe9c: add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dffeb: add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c5eac: add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x001777dc: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0013fe0b: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0008ade5: add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014c18c: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx - 0x6f7c723e]; inc esp; stc; call dword ptr [eax + 0x52]; 
0x0016af17: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014c176: add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001775da: add dword ptr [eax], eax; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x00087ecf: add dword ptr [eax], eax; add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x0006d8d5: add dword ptr [eax], eax; add byte ptr [ecx - 0x54b4b], cl; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x5277b]; call dword ptr [eax - 0x18]; 
0x00062643: add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x00160dde: add dword ptr [eax], eax; add byte ptr [ecx - 0x72f3dbbc], cl; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x0009c20c: add dword ptr [eax], eax; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0009ba03: add dword ptr [eax], eax; add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x00127c0a: add dword ptr [eax], eax; add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x00143920: add dword ptr [eax], eax; add byte ptr [ecx - 0x76167630], cl; fimul dword ptr [ebx - 0x76d3db94]; ret; 
0x000a6637: add dword ptr [eax], eax; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x001337b5: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x000fbee8: add dword ptr [eax], eax; add byte ptr [ecx - 0x7abbdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000fc00a: add dword ptr [eax], eax; add byte ptr [ecx - 0x7cf7dbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [ecx + 0xf68245c], 1; dec esp; ret 0xb60f; 
0x00104017: add dword ptr [eax], eax; add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000a325a: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x926736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a5d6a: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940b36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00131a70: add dword ptr [eax], eax; add byte ptr [ecx], al; call eax; 
0x000a321a: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334aa: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x000f5c7a: add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x00039f18: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x430f; 
0x0014abe6: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x00075ec2: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0002d858: add dword ptr [eax], eax; add byte ptr [ecx], cl; ret; 
0x0010c210: add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0008f37d: add dword ptr [eax], eax; add byte ptr [ecx], dh; leave; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000ace0d: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000d1d52: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00116758: add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000ffc34: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000ba902: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000309eb: add dword ptr [eax], eax; add byte ptr [edi], cl; mov esi, 0x893a3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x0010c2fa: add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000d37d7: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x0007583e: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0007db51: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083be2: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0012d57c: add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [edi + 0x14]; 
0x0012d863: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x0019e18c: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0003cfe5: add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011913a: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x0019fa65: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0019fa05: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001799db: add dword ptr [eax], eax; add cl, al; jmp 0x5ebd8ce6; pop edi; ret; 
0x001038b6: add dword ptr [eax], eax; add cl, al; jmp 0x5fbc2bc1; ret; 
0x0019d215: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0019d226: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0019d237: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00145d9d: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x0019d1cf: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0019d1e0: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019d1f1: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0008be60: add dword ptr [eax], eax; add dh, dh; ret; 
0x000be4cb: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a2392: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0003d8c2: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00119fce: add dword ptr [eax], eax; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0005dbbe: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0005d367: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000bc7ba: add dword ptr [eax], eax; dec ecx; jne 0xbc7b8; pop esi; ret; 
0x000896b6: add dword ptr [eax], eax; inc eax; add byte ptr [eax], al; ret; 
0x0012179e: add dword ptr [eax], eax; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001239bd: add dword ptr [eax], eax; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00041592: add dword ptr [eax], eax; xor eax, eax; ret; 
0x000a2d29: add dword ptr [eax], edi; inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x000a54e5: add dword ptr [eax], edi; ret; 
0x000bb06c: add dword ptr [eax], edx; ret; 
0x000bb08c: add dword ptr [eax], esi; ret; 
0x000bb07c: add dword ptr [eax], esp; ret; 
0x0019f965: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x0019f972: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x000920c2: add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000f27e4: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x001a0232: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0014cce2: add dword ptr [ebp + 0x2b], esi; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0013747d: add dword ptr [ebp + 0x319c74d2], eax; fcomi st(6); ret 0x7401; 
0x001a021a: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0015e926: add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000c0d8d: add dword ptr [ebp + 0x390775c9], eax; ret; 
0x00044fcd: add dword ptr [ebp + 0x390775d2], eax; ret; 
0x00094389: add dword ptr [ebp + 0x4c], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0013f9e1: add dword ptr [ebp + 0x508dbf70], ecx; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0015c289: add dword ptr [ebp + 0x71], -7; call dword ptr [eax - 0x18]; 
0x000d7ab5: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0012c9f1: add dword ptr [ebp + 0xb6], ecx; add dh, al; inc edx; jmp dword ptr [eax]; 
0x00094e21: add dword ptr [ebp + 0xc], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0014d81a: add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00093415: add dword ptr [ebp + 8], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00094698: add dword ptr [ebp + ecx - 0x10], esi; sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x001265c8: add dword ptr [ebp + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00125248: add dword ptr [ebp + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000a6be2: add dword ptr [ebp - 0x13], esi; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x00050c6c: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00095813: add dword ptr [ebp - 0x19b67379], ecx; call dword ptr [ebx + 0x50]; 
0x000954a6: add dword ptr [ebp - 0x19b9e379], ecx; call dword ptr [ebp + 0x50]; 
0x0009472a: add dword ptr [ebp - 0x19c6537b], ecx; call dword ptr [ebx + 0x50]; 
0x000a1acf: add dword ptr [ebp - 0x1a], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011ef5f: add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000a0cb7: add dword ptr [ebp - 0x2a], esi; sub esp, 0xc; push eax; call edx; 
0x000934d5: add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x0009f4dd: add dword ptr [ebp - 0x357bf040], eax; add eax, dword ptr [eax]; add byte ptr [ebp + 0x92c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00042240: add dword ptr [ebp - 0x3dbaf040], eax; ret; 
0x00051058: add dword ptr [ebp - 0x6df0fbb1], ecx; ret 0x789; 
0x00122945: add dword ptr [ebp - 0x74e98740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x001376b3: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x001375db: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b2c54: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000acc98: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00130693: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011a6bc: add dword ptr [ebp - 0x7c908a0a], eax; in al, dx; or byte ptr [ebp - 0x6c2287d], cl; call dword ptr [eax + 0x6a]; 
0x000a314b: add dword ptr [ebp - 0xa0a836e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a319b: add dword ptr [ebp - 0xa1a736e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013346b: add dword ptr [ebp - 0xa1a836e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a29db: add dword ptr [ebp - 0xa2a536e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001333cb: add dword ptr [ebp - 0xa2a636e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001334ad: add dword ptr [ebp - 0xaa0236e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00034230: add dword ptr [ebx + 0x24408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x000a5c82: add dword ptr [ebx + 0x2930244c], ecx; ret; 
0x000341f0: add dword ptr [ebx + 0x2c408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x000b9a4f: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0004e80d: add dword ptr [ebx + 0x390c2444], ecx; ret; 
0x000950e1: add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000f9a1f: add dword ptr [ebx + 0x48d7451], ecx; ret 0x7880; 
0x000a1cb5: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x0016909c: add dword ptr [ebx + 0x50572048], ecx; call dword ptr [ecx + 8]; 
0x000b0d65: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00057643: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0012ab98: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x0007e820: add dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x000421b7: add dword ptr [ebx + 0x5e], ebx; mov eax, ecx; ret; 
0x000420e0: add dword ptr [ebx + 0x5e], ebx; mov eax, edx; ret; 
0x0009469f: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000a59a5: add dword ptr [ebx + 0x5e], ebx; ret; 
0x0008a918: add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0016d9d6: add dword ptr [ebx + 0x650c2454], ecx; sub edx, dword ptr [0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0003f9ee: add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x000af453: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab073: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af473: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab093: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0013e77e: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x0002fe09: add dword ptr [ebx + edi], -7; call dword ptr [eax - 1]; 
0x00130c59: add dword ptr [ebx - 0x12363], ecx; call dword ptr [esi - 0x18]; 
0x0006d2d2: add dword ptr [ebx - 0x16afdb94], ecx; sal ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0010adf4: add dword ptr [ebx - 0x18], edx; lds edx, ptr [edi - 0x3b7cffff]; adc byte ptr [eax + eax*8 - 0x137c1f8b], al; or al, 0x8d; xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0012d308: add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008c982: add dword ptr [ebx - 0x2ff60120], eax; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0016654c: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000f1f4c: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xf1f21; xor eax, eax; ret; 
0x0007f4db: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x0007e63d: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x0006f5ad: add dword ptr [ebx - 0x52b43], ecx; dec dword ptr [ecx - 0x53b63]; dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x00073840: add dword ptr [ebx - 0x52b7b], ecx; inc dword ptr [ecx]; ret; 
0x00067e44: add dword ptr [ebx - 0x5e77b], ecx; dec dword ptr [ecx - 0x5bb73]; call dword ptr [edx + 0x52]; 
0x00152f20: add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00106254: add dword ptr [ebx - 0x72bbdbbc], ecx; and byte ptr [eax + 0x38], 0xf9; call dword ptr [eax + 0x6a]; 
0x00139394: add dword ptr [ebx - 0x72ebdbbc], ecx; sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x55]; 
0x0014b065: add dword ptr [ebx - 0x72efdb84], ecx; xchg edi, esp; cmp cl, bh; call dword ptr [eax + 0x53]; 
0x00139ef6: add dword ptr [ebx - 0x72f3dbbc], ecx; sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x56]; 
0x0009cb0b: add dword ptr [ebx - 0x74f7dbbc], ecx; je 0x9cb37; or al, 0x89; pop edi; or al, 0x89; ret; 
0x0008b818: add dword ptr [ebx - 0x76f3dbac], ecx; ret; 
0x0012b9e4: add dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0013b694: add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x000be748: add dword ptr [ebx - 0x7bf00007], eax; dec esi; add al, 0; add byte ptr [ebx + 0x391c2444], cl; ror dword ptr [edi], 0x85; ret 2; 
0x000be82c: add dword ptr [ebx - 0x7cff6aa4], ecx; ret 0x3901; 
0x00127ef9: add dword ptr [ebx - 0x7d], edx; ret; 
0x00050e97: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0011d268: add dword ptr [ebx], 0x5e; stc; call dword ptr [eax + 0x55]; 
0x0017fed7: add dword ptr [ebx], 1; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f9c58: add dword ptr [ebx], edi; pop edi; add al, 0x7c; ret 0x9066; 
0x0007a7ac: add dword ptr [ecx + 0x19881472], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012c8ce: add dword ptr [ecx + 0x244c8bda], ecx; sbb al, 0x29; ret 0xca39; 
0x00040bf6: add dword ptr [ecx + 0x245489e8], ecx; adc byte ptr [ebx - 0x50f0fb14], al; ret; 
0x0014c73c: add dword ptr [ecx + 0x31], esi; leave; cmp eax, 2; jne 0x14c750; mov eax, ecx; ret; 
0x000af2c1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000af3f1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000aaee1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000ab011: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b2161: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af191: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x000af3c1: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x000da94f: add dword ptr [ecx + 0x394c245c], ecx; ret; 
0x000af3e1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000ab001: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0003520e: add dword ptr [ecx + 0x418dbc45], ecx; sbb al, 0x89; ret 0x25; 
0x000af3d1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000aaff1: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b2651: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b0fbe: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x0003e712: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000a5fdf: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x000624f6: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000adc81: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x000b9634: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x0007e7a6: add dword ptr [ecx + 0x5e5b044a], ecx; pop edi; ret; 
0x0012b628: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x000acbce: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x000aadd1: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x000a8ba6: add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000a42ae: add dword ptr [ecx + 0x9cc4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000398cc: add dword ptr [ecx + 0xb840fc6], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; cmp bh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x00061102: add dword ptr [ecx + 0xc60457], ecx; and eax, 0xfff792e9; jmp dword ptr [esi - 0x70]; 
0x000f8068: add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x0013a9c4: add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00092194: add dword ptr [ecx + ecx*2 - 0x48], esi; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x000e500d: add dword ptr [ecx + edi], 0x7404875c; jmp 0xe504f; ret 0x850f; 
0x000f30a8: add dword ptr [ecx - 0x13], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00161c0a: add dword ptr [ecx - 0x16efdbbc], ecx; ret; 
0x001a2a04: add dword ptr [ecx - 0x16fbdbbc], ecx; ret; 
0x0008195b: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0014abf7: add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000744d6: add dword ptr [ecx - 0x3b7cfbaf], ecx; adc al, 0x5b; pop esi; ret; 
0x000a2358: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x00148800: add dword ptr [ecx - 0x45548acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00097f5d: add dword ptr [ecx - 0x45618acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0016e5e5: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x00121cc7: add dword ptr [ecx - 0x48b7b], ecx; dec dword ptr [edi]; test dword ptr [edx + eax - 0x137d0000], edx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x0006490d: add dword ptr [ecx - 0x49f0fbaa], ecx; add byte ptr [ecx - 0x58f7b], cl; inc dword ptr [ebx - 0x5f16fe39]; out 0xff, eax; call dword ptr [edx - 0x73]; 
0x00070677: add dword ptr [ecx - 0x4ef43], ecx; call dword ptr [edi - 1]; 
0x00072b9f: add dword ptr [ecx - 0x5236b], ecx; dec dword ptr [ecx - 0x4ff7b]; call dword ptr [edx + 0x52]; 
0x0006e43d: add dword ptr [ecx - 0x53763], ecx; dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x000e8ffe: add dword ptr [ecx - 0x5ab73], ecx; call dword ptr [esi + 0x52]; 
0x000efd2e: add dword ptr [ecx - 0x5bb73], ecx; call dword ptr [esi + 0x52]; 
0x000bf93a: add dword ptr [ecx - 0x6ff0f7bf], ecx; ret 0x4b8b; 
0x00044918: add dword ptr [ecx - 0x74d7dbbc], ecx; add ecx, dword ptr [ecx - 0x76d3dbbc]; ret 0xe283; 
0x0004b556: add dword ptr [ecx - 0x74dfdbbc], ecx; inc ebp; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0xe283; 
0x000888c5: add dword ptr [ecx - 0x769adbbe], ecx; adc eax, 0x7c; pop ebx; ret; 
0x0008924d: add dword ptr [ecx - 0x769af7be], ecx; adc eax, 0x78; pop ebx; ret; 
0x0008b176: add dword ptr [ecx - 0x76e3dbbc], ecx; ret 0x448b; 
0x00090bd5: add dword ptr [ecx - 0x76efdbbc], ecx; ret 0xf089; 
0x0011d7c3: add dword ptr [ecx - 0x7c72e7ba], ecx; mov esp, 0x89ffe8a8; inc esi; sbb al, 0xe9; ret; 
0x0011e4f0: add dword ptr [ecx - 0x7c72f3ba], ecx; cld; mov dh, 0xe8; dec dword ptr [ecx - 0x5f16efba]; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0002af0d: add dword ptr [ecx - 0x7cbbdba4], ecx; ret; 
0x0002a3ef: add dword ptr [ecx - 0x7cebdba4], ecx; ret; 
0x0005166e: add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0005a28e: add dword ptr [ecx - 0x8773], ecx; call dword ptr [eax + 0x52]; 
0x00090108: add dword ptr [ecx], 0; add byte ptr [ecx], dh; leave; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0002c503: add dword ptr [ecx], 0x8d500000; xchg byte ptr [eax + eax*4], cl; stc; call dword ptr [eax - 0x18]; 
0x0002aa16: add dword ptr [ecx], 0x8d500000; xchg dword ptr [eax + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x00142872: add dword ptr [ecx], 0xa30f0800; ret 0x820f; 
0x0014b284: add dword ptr [ecx], 0xa30f0800; ret 0x830f; 
0x0010bd0d: add dword ptr [ecx], 0xa30f0800; ret 0x920f; 
0x0019e18b: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x001239bc: add dword ptr [ecx], eax; add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00120ed8: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a0334: add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x00066ddb: add dword ptr [ecx], eax; ret; 
0x0008c957: add dword ptr [ecx], eax; rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001a0336: add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x00059db3: add dword ptr [ecx], ebp; fdivr dword ptr [ecx]; ret 0xee7c; 
0x0013ee30: add dword ptr [ecx], ebp; ret 0x5439; 
0x0014597e: add dword ptr [ecx], ebp; ret 0x828d; 
0x00129f7a: add dword ptr [ecx], ebp; ret; 
0x00096e99: add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001a5f5e: add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x0002587f: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x0007ea97: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00122f31: add dword ptr [ecx], ecx; ret 0x1789; 
0x00122fb1: add dword ptr [ecx], ecx; ret 0x5689; 
0x000fb729: add dword ptr [ecx], ecx; ret 0xf983; 
0x0002c130: add dword ptr [ecx], ecx; ret; 
0x00119b97: add dword ptr [ecx], edi; fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x000a5616: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x0013ee98: add dword ptr [ecx], edi; fmul dword ptr [edi]; inc edx; ret; 
0x000e5002: add dword ptr [ecx], edi; ret 0x1674; 
0x00052a1e: add dword ptr [ecx], edi; ret 0x2273; 
0x001a1267: add dword ptr [ecx], edi; ret 0x2473; 
0x00056cf5: add dword ptr [ecx], edi; ret 0x2674; 
0x001a0f43: add dword ptr [ecx], edi; ret 0x2873; 
0x001a6ada: add dword ptr [ecx], edi; ret 0x2a73; 
0x0010047f: add dword ptr [ecx], edi; ret 0x2a7e; 
0x001a6e1f: add dword ptr [ecx], edi; ret 0x2c73; 
0x0011f6a3: add dword ptr [ecx], edi; ret 0x8173; 
0x000979a6: add dword ptr [ecx], edi; ret 0x830f; 
0x000ecf8f: add dword ptr [ecx], edi; ret 0x840f; 
0x00036cb2: add dword ptr [ecx], edi; ret 0x850f; 
0x000a3533: add dword ptr [ecx], edi; ret 0x872; 
0x000f8788: add dword ptr [ecx], edi; ret 0xa7e; 
0x0002bd12: add dword ptr [ecx], edi; ret 0xc73; 
0x001004a9: add dword ptr [ecx], edi; ret 0xda75; 
0x001a3020: add dword ptr [ecx], edi; ret 0xdc7f; 
0x0011b977: add dword ptr [ecx], edi; ret 0xe475; 
0x000fd582: add dword ptr [ecx], edi; ret 0xe775; 
0x000a8e3c: add dword ptr [ecx], edi; ret 0xec72; 
0x000a8d50: add dword ptr [ecx], edi; ret 0xef72; 
0x000f5b5c: add dword ptr [ecx], edi; ret 0xef7f; 
0x001a1211: add dword ptr [ecx], edi; ret 0xf37e; 
0x001a7609: add dword ptr [ecx], edi; ret 0xf67f; 
0x0002c2c9: add dword ptr [ecx], edi; ret; 
0x000fc013: add dword ptr [ecx], edi; ror byte ptr [ecx + 0xf68245c], 1; dec esp; ret 0xb60f; 
0x0005bb97: add dword ptr [ecx], edi; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000e53b9: add dword ptr [ecx], esi; call dword ptr [ebx - 0x18]; 
0x00093b7a: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008acda: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e1116: add dword ptr [edi + 0x17], edi; pop ebx; pop esi; pop edi; ret; 
0x00146c84: add dword ptr [edi + 0x19], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0008cf5f: add dword ptr [edi + 0x19], edi; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000e10a0: add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e0ecf: add dword ptr [edi + 0x1e], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040d56: add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00040e85: add dword ptr [edi + 0x20], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017728d: add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x001027b5: add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0008e344: add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0017c3e4: add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0003f5f3: add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0014b70b: add dword ptr [edi + 0x22], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00177183: add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x001583b2: add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00177201: add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00041ac9: add dword ptr [edi + 0x24], edi; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000d5459: add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x001225a1: add dword ptr [edi + 0x24], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0014cc00: add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x000e1166: add dword ptr [edi + 0x27], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001226b0: add dword ptr [edi + 0x2d], esi; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012372e: add dword ptr [edi + 0x2f], edi; add esp, 8; pop ebx; ret; 
0x0008961e: add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x0005d8f4: add dword ptr [edi + 0x39], edi; add esp, 0x18; pop ebx; ret; 
0x0005d7e3: add dword ptr [edi + 0x3a], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0010246a: add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x001224dc: add dword ptr [edi + 0x51], edi; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001580c4: add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0014c0e4: add dword ptr [edi + 0x59], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000f3403: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x000b47e6: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001020ad: add dword ptr [edi + 0x68], edi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001596eb: add dword ptr [edi + 0x70], -7; call dword ptr [eax - 0x18]; 
0x00121bea: add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x00086ed2: add dword ptr [edi + 0xb], edi; ret; 
0x00040099: add dword ptr [edi + 0xc], edi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0003e29e: add dword ptr [edi + 0xf], edi; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0018e7b0: add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0014bb31: add dword ptr [edi + 4], edi; ret; 
0x00103911: add dword ptr [edi + 9], esi; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0008a75e: add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0016cc5d: add dword ptr [edi + edx - 0x75], esi; push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0018861a: add dword ptr [edi - 0x18], ebx; sbb byte ptr [eax - 1], dl; inc dword ptr [ecx + 0x45df7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a2330: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00188eb4: add dword ptr [edi - 1], 0x60c381ff; push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00140c9b: add dword ptr [edi], ecx; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x00076e7a: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0012ba9b: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0012b95b: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0012b6db: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0012b81b: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0012b45b: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0012b77b: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0012b4fb: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 1; ret; 
0x0012b59b: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 2; ret; 
0x0012b8bb: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 4; ret; 
0x0012b3bb: add dword ptr [edi], ecx; mov bh, 4; push eax; and eax, 8; ret; 
0x0018a12f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018a007: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a5612: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0xa5610; pop ebx; ret; 
0x000a0b1c: add dword ptr [edi], ecx; test byte ptr [ebp - 0x7d000000], dh; in al, dx; or byte ptr [esi - 1], dl; jae 0xa0b4e; call eax; 
0x000f81fc: add dword ptr [edi], ecx; test byte ptr [ebx - 0x74000002], al; xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x00138ea8: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7cfffffe], ah; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x000f49c1: add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], eax; ret 0x7420; 
0x00090278: add dword ptr [edi], ecx; test dword ptr [ebp + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x39]; 
0x0019edac: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x00092bcf: add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], edx; ret 0xf283; 
0x000b2c57: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00092dcf: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000acc9b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00124744: add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x00052330: add dword ptr [edi], ecx; xchg edx, eax; ret 0xff19; 
0x001373ba: add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000c6670: add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000c5a13: add dword ptr [edi], ecx; xchg esp, eax; ret 0xef39; 
0x00049fef: add dword ptr [edi], ecx; xchg esp, eax; ret 0xf539; 
0x000c9d92: add dword ptr [edi], ecx; xchg esp, eax; ret 0xff83; 
0x00171f58: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008a88e: add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0007d2a7: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x0017f5c2: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x000af413: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab033: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0017fed9: add dword ptr [edx + 1], edi; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008f934: add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00057640: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0012a8c7: add dword ptr [edx + eax*2], 1; ret; 
0x000a2511: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000a8fc4: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x0006a2a5: add dword ptr [edx - 0x6f], edi; jecxz 0x6a2a9; jmp eax; 
0x000ba232: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000b95f2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000b6742: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x0005de9a: add dword ptr [edx - 7], eax; call dword ptr [eax + 0x6a]; 
0x0013057d: add dword ptr [edx], 0x59; stc; call dword ptr [eax + 0x57]; 
0x0016b57c: add dword ptr [edx], 0x59; stc; call dword ptr [edi + 0x56]; 
0x0017f87b: add dword ptr [edx], 0x6a0000; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x00082e22: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017effe: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007db55: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007f8ca: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x789a0; add esp, 0x1c; ret; 
0x00171dbc: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00122b3f: add dword ptr [esi + 0x1e], esi; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0014d005: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x000422a2: add dword ptr [esi + 0x5f], ebx; ret; 
0x00041c0f: add dword ptr [esi + 0xd], esi; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x000af493: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000ab0b3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f3: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000acf23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000acf33: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000acf43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000acf53: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000af1c3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000af403: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b0fee: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a02a3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9584: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbfe: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000adc28: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000ab023: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000b3d23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b26e3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3d43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b2703: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3d63: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b2723: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3d83: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2743: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0018a1d7: add dword ptr [esi + 4], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f5446: add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0019fb4b: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0006f592: add dword ptr [esi - 0x18], edx; aaa; ret; 
0x001431ac: add dword ptr [esi - 0x3f], esp; ret 0x6608; 
0x0010b46b: add dword ptr [esi - 0x766ffffe], 0x245c8bda; add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c34eb: add dword ptr [esi], eax; pop es; add byte ptr [ebx - 0x72cbdb8c], cl; xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0010df87: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003cb26: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000f26a5: add dword ptr [esi], esp; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000f2bff: add dword ptr [esi], esp; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0008ede1: add dword ptr [esp + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00076c8f: add dword ptr gs:[eax], eax; add byte ptr [ecx], bh; ret; 
0x0013d25d: add dword ptr ss:[eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [esi + 0x69], ebp; stc; call dword ptr [eax - 0x18]; 
0x001236ef: add eax, -0x4d; stc; call dword ptr [eax - 0x18]; 
0x00025576: add eax, 0; ret; 
0x0012b2d9: add eax, 0x105b5b; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000ba0ba: add eax, 0x10; call 0x17d651; add ecx, 0x105f32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6dba: add eax, 0x10; call 0x17d651; add ecx, 0x1091b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013b358: add eax, 0x10; jmp 0x13a9b0; ret; 
0x000a9848: add eax, 0x10; pop edi; pop esi; ret; 
0x0003c0b3: add eax, 0x10c48300; test eax, eax; jne 0x3c0c8; add esp, 8; pop ebx; ret; 
0x0003c362: add eax, 0x10c48300; test eax, eax; jne 0x3c370; add esp, 8; pop ebx; ret; 
0x0017f28a: add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000dc019: add eax, 0x128c06b; ret; 
0x000ba38b: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f18: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011a660: add eax, 0x14; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0014c5eb: add eax, 0x14; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016e94a: add eax, 0x14; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9ba: add eax, 0x14; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea2a: add eax, 0x14; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea8d: add eax, 0x14; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaed: add eax, 0x14; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb5a: add eax, 0x14; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebda: add eax, 0x14; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016f0b8: add eax, 0x14; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f107: add eax, 0x14; jne 0x16f13c; add esp, 0x1c; ret; 
0x00170821: add eax, 0x14; jne 0x17082c; add esp, 0x2c; ret; 
0x0003af77: add eax, 0x14; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd2a: add eax, 0x14; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003e75d: add eax, 0x14; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e880: add eax, 0x14; jne 0x3e88b; add esp, 0x1c; ret; 
0x0005bea5: add eax, 0x14; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x00081841: add eax, 0x14; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x0012981d: add eax, 0x15c58100; jbe 0x129834; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000a3f77: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00034b68: add eax, 0x182474ff; push 0; call 0x34b10; add esp, 0x1c; ret; 
0x00131df6: add eax, 0x18; call eax; 
0x00025082: add eax, 0x18; jmp eax; 
0x00135609: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d5: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e6bd: add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002510d: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x0014c85a: add eax, 0x18; pop edi; pop ebp; ret; 
0x001611f8: add eax, 0x18; push eax; call 0x160fe0; add esp, 0x2c; ret; 
0x0014c4a7: add eax, 0x18; push eax; call edx; 
0x00131e25: add eax, 0x18; push esi; call eax; 
0x0003eaad: add eax, 0x18; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x0009aaf9: add eax, 0x19633b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x0009a809: add eax, 0x19662b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a6f9: add eax, 0x19673b; mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x000993f9: add eax, 0x197a3b; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008f9e9: add eax, 0x1a144b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x0008f9c9: add eax, 0x1a146b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9a9: add eax, 0x1a148b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x0008e829: add eax, 0x1a260b; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x000889f9: add eax, 0x1a843b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x000889d9: add eax, 0x1a845b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889b9: add eax, 0x1a847b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x00088999: add eax, 0x1a849b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x00086d89: add eax, 0x1aa0ab; mov eax, dword ptr [eax + 0xe4c]; ret; 
0x001073bb: add eax, 0x1bf0000; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00034b48: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x34b10; add esp, 0x1c; ret; 
0x0016a9c5: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0003cf19: add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef9: add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x00034539: add eax, 0x1fc8fb; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034519: add eax, 0x1fc91b; mov eax, dword ptr [eax + 0x1c8]; add eax, dword ptr gs:[0]; ret; 
0x000344f9: add eax, 0x1fc93b; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0012d862: add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0002f479: add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x000ba0df: add eax, 0x20; call 0x17d651; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6ddf: add eax, 0x20; call 0x17d651; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a9855: add eax, 0x20; pop edi; pop esi; ret; 
0x00026079: add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026059: add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00025569: add eax, 0x20b8cb; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024ee9: add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x00024ec9: add eax, 0x20bf6b; lea eax, [eax - 0x681e8]; ret; 
0x00024ba9: add eax, 0x20c28b; mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x000af338: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af498: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf58: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0b8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a289c: add eax, 0x21; ret; 
0x000e38a2: add eax, 0x244c8b00; or byte ptr [ebp - 0x651db7f], cl; call dword ptr [eax - 0x73]; 
0x0008ef71: add eax, 0x24548b00; or al, 0x89; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000856ce: add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00119be0: add eax, 0x26; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00163a89: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00046bdc: add eax, 0x291ff083; ret 0x5489; 
0x00055642: add eax, 0x291ff083; ret 0x9589; 
0x00049e59: add eax, 0x291ff083; ret; 
0x000dddf0: add eax, 0x2964c76b; ret; 
0x00081a22: add eax, 0x29770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00040384: add eax, 0x29e0e183; fmul dword ptr [ebp - 0x76dff18c]; ret 0xd285; 
0x00085e91: add eax, 0x2a770000; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0007b8e0: add eax, 0x2b770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0016b5a1: add eax, 0x2c03848d; xor edi, ecx; call dword ptr [eax + 0x52]; 
0x00023528: add eax, 0x2cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000acd01: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00111cd5: add eax, 0x302474ff; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000b9f91: add eax, 0x30; call 0x17d651; add ecx, 0x10605b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6cf8: add eax, 0x30; call 0x17d651; add ecx, 0x109274; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a9862: add eax, 0x30; pop edi; pop esi; ret; 
0x0007b11e: add eax, 0x35770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000b0e44: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0016c21a: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00079bbf: add eax, 0x39000001; ret; 
0x00127ff8: add eax, 0x3ac58100; mov ss, word ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0003474e: add eax, 0x3cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000546d0: add eax, 0x3eec868d; stc; call dword ptr [eax + 0x57]; 
0x0008273b: add eax, 0x40770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000ee0cf: add eax, 0x408b0000; adc al, 0x83; in al, dx; or al, 0x89; test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x0012fab7: add eax, 0x408b078b; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x655c978d; stc; call dword ptr [edx + 0x50]; 
0x000b3bcc: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000b973f: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000fb814: add eax, 0x430fd039; shr byte ptr [ecx], 1; ret 0x6a52; 
0x00121c95: add eax, 0x458b0000; or byte ptr [ebx + 0x3a496], cl; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x001290ed: add eax, 0x45c58100; jge 0x129104; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0016b84a: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0010280c: add eax, 0x5002e0c1; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0016eadb: add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x000a0924: add eax, 0x53e5838d; stc; call dword ptr [eax - 0x73]; 
0x001940dc: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001928d3: add eax, 0x542b60f; sub eax, ecx; ret; 
0x00085624: add eax, 0x57770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00131e5c: add eax, 0x5b000000; pop esi; pop ebp; ret; 
0x00105719: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0003c36a: add eax, 0x5b08c483; ret; 
0x0003bd30: add eax, 0x5b18c483; ret; 
0x0009126f: add eax, 0x5b28c483; ret; 
0x0009a2e4: add eax, 0x5b38c483; ret; 
0x000d2e6e: add eax, 0x5b48c483; ret; 
0x0012b2d7: add eax, 0x5b5b0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000aca19: add eax, 0x5b5f0000; ret; 
0x0005dd88: add eax, 0x5b78c483; ret; 
0x0017c988: add eax, 0x5c10448d; ret; 
0x000bba0e: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x0016ede5: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0009482a: add eax, 0x5e5bc031; ret; 
0x0012bd7a: add eax, 0x5e5bd089; ret; 
0x000b3013: add eax, 0x5e5f0000; pop ebx; ret; 
0x000af341: add eax, 0x5f0c428d; ret; 
0x000b4931: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000b9744: add eax, 0x5f5bf889; ret; 
0x00131e1f: add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x0012fac4: add eax, 0x655c978d; stc; call dword ptr [edx + 0x50]; 
0x0012ffd7: add eax, 0x6592808d; stc; call dword ptr [eax - 0x75]; 
0x0012f68c: add eax, 0x65b3808d; stc; call dword ptr [eax - 0x75]; 
0x001318c6: add eax, 0x65d8808d; stc; call dword ptr [eax - 0x75]; 
0x0008ef33: add eax, 0x684d8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011a7fc: add eax, 0x68; stc; call dword ptr [eax + 0x6a]; 
0x0011a4a5: add eax, 0x68; stc; call dword ptr [eax - 1]; 
0x001603e0: add eax, 0x68fff972; add dword ptr [eax], 0x8d500000; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x000b3248: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00104ddb: add eax, 0x74f2f883; rdtsc; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000307cc: add eax, 0x75003880; mov esp, 0x8d0cec83; xchg dword ptr [edx], edi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00034aa0: add eax, 0x75003880; or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x00107d85: add eax, 0x75003f80; sbb eax, 0x8b056a57; jl 0x107db5; sbb byte ptr [ebp - 0x6a71779], cl; call dword ptr [eax - 0x73]; 
0x001481e6: add eax, 0x75085039; hlt; ret; 
0x00092542: add eax, 0x754bf883; mov al, byte ptr [0x8900558b]; ret; 
0x0013190e: add eax, 0x7d4c868d; stc; call dword ptr [eax - 0x75]; 
0x0015c230: add eax, 0x81000214; ret; 
0x00157e30: add eax, 0x81000258; ret; 
0x00150330: add eax, 0x810002d3; ret; 
0x000b4048: add eax, 0x81000c96; rcl esp, 0xbd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6f21: add eax, 0x824448b; pop esi; ret; 
0x0007e94d: add eax, 0x8301e083; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0011ebf7: add eax, 0x83fff3f4; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00119a07: add eax, 0x83ffffff; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00089c6c: add eax, 0x84e8b00; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00066c08: add eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000825a5: add eax, 0x870f0000; and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0017f32b: add eax, 0x870f0000; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x000830c9: add eax, 0x870f0000; outsb dx, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0007ecfc: add eax, 0x870f0000; sub eax, dword ptr [edx]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000859a6: add eax, 0x870f0000; test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0019efa2: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0019df82: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x0019e642: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x000e963a: add eax, 0x878d0000; out dx, eax; push esi; stc; call dword ptr [eax - 0x73]; 
0x00127376: add eax, 0x89000000; add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008b20b: add eax, 0x89038b10; ret 0xff0; 
0x0004b887: add eax, 0x8b000065; inc ebp; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0xc483; 
0x0018e9f0: add eax, 0x8b1c035f; jmp ebx; 
0x000c3406: add eax, 0x8d500000; xchg ah, dl; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000c346f: add eax, 0x8d500000; xchg byte ptr [eax + 0x3f], ch; stc; call dword ptr [eax - 0x18]; 
0x000c24ed: add eax, 0x8d500000; xchg byte ptr [ebx + 0x3f], dl; stc; call dword ptr [eax - 0x18]; 
0x000c33c0: add eax, 0x8d500000; xchg byte ptr [edi + edi], bl; stc; call dword ptr [eax - 0x18]; 
0x000c356b: add eax, 0x8d500000; xchg byte ptr [edi], dh; aas; stc; call dword ptr [eax - 0x18]; 
0x000c358e: add eax, 0x8d500000; xchg byte ptr [esi + eax*4 - 0x17af0007], cl; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x000478dd: add eax, 0x8d500000; xchg dword ptr [eax + 0x3f], ebp; stc; call dword ptr [eax - 0x18]; 
0x00047079: add eax, 0x8d500000; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x000477be: add eax, 0x8d500000; xchg dword ptr [edi + edi], ebx; stc; call dword ptr [eax - 0x18]; 
0x000478ba: add eax, 0x8d500000; xchg dword ptr [edi], esi; aas; stc; call dword ptr [eax - 0x18]; 
0x0004779b: add eax, 0x8d500000; xchg esp, edx; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0013e6ca: add eax, 0x8d8134ff; adc byte ptr [eax], 0x83; stc; call dword ptr [eax - 0x18]; 
0x0016e431: add eax, 0x90; pop esi; pop edi; ret; 
0x000b2cdc: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0016e4c1: add eax, 0x94; pop esi; pop edi; ret; 
0x000b431f: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000f7ac1: add eax, 0x9dfe283; ret 0x5388; 
0x0008cf01: add eax, 0xa0988d53; add al, 0; add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x0008f655: add eax, 0xa30f0000; ret 0x830f; 
0x00091846: add eax, 0xa30f0000; ret 0xb073; 
0x0019f1ad: add eax, 0xa; pop edi; ret; 
0x0019d084: add eax, 0xa; ret; 
0x000f2293: add eax, 0xaae80000; mov bl, 8; add byte ptr [ecx + 0x13eb99c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x00101aa2: add eax, 0xac03848d; or bh, cl; call dword ptr [eax - 0x73]; 
0x00124b28: add eax, 0xac58100; ret; 
0x00168bad: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000e7dc0: add eax, 0xae4c838d; stc; call dword ptr [eax - 0x73]; 
0x000e7efe: add eax, 0xae6c818d; stc; call dword ptr [eax - 0x73]; 
0x0005cf5a: add eax, 0xaee85051; jnp 0x5cf5e; call dword ptr [eax - 0x73]; 
0x0012fa00: add eax, 0xb6f8968d; stc; call dword ptr [edx + 0x50]; 
0x0012f732: add eax, 0xb720808d; stc; call dword ptr [eax - 0x75]; 
0x001303ea: add eax, 0xb758808d; stc; call dword ptr [eax + 0x6a]; 
0x0019ee12: add eax, 0xb; pop edi; ret; 
0x0019d036: add eax, 0xb; ret; 
0x00120e72: add eax, 0xc0c68100; call dword ptr [eax]; 
0x00198b4e: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000ba394: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0018d0a5: add eax, 0xc381ffff; jo 0x18d0c4; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d6fd0: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x0019f1b7: add eax, 0xc; pop edi; ret; 
0x0013786e: add eax, 0xc; ret; 
0x000cf3cb: add eax, 0xcf20868d; stc; call dword ptr [eax + 0x53]; 
0x00051e26: add eax, 0xd; add esp, 4; jmp eax; 
0x0019f1bc: add eax, 0xd; pop edi; ret; 
0x0019d090: add eax, 0xd; ret; 
0x000ad457: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0019f1c1: add eax, 0xe; pop edi; ret; 
0x0019d094: add eax, 0xe; ret; 
0x0016c5a9: add eax, 0xec830000; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x000837c3: add eax, 0xec830000; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0011d1a4: add eax, 0xec830000; or byte ptr [ebp - 0x6a38f7d], cl; call dword ptr [eax + 0x55]; 
0x0011d153: add eax, 0xec830000; or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x0011d11d: add eax, 0xec830000; or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x000a091d: add eax, 0xec830019; or al, 0x6a; add eax, 0x53e5838d; stc; call dword ptr [eax - 0x73]; 
0x000accfe: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b2cd9: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000b431c: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00176b53: add eax, 0xf0890000; pop ebx; pop esi; ret; 
0x0008b647: add eax, 0xf0b828; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019ee3b: add eax, 0xf; pop edi; ret; 
0x0019d04f: add eax, 0xf; ret; 
0x00135419: add eax, 0xfba1b; mov eax, dword ptr [eax + 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x001939ae: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0008684f: add eax, 0xffaf7be8; inc dword ptr [ebx + 0x6a04ec]; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x00027142: add eax, 0xffee58e8; dec dword ptr [ebx + 0x10a083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x001702c7: add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x0009a853: add eax, 1; mov dword ptr [edx + 0x368], eax; ret; 
0x000a5610: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa5610; pop ebx; ret; 
0x0019f180: add eax, 1; pop edi; ret; 
0x000422a0: add eax, 1; pop esi; pop edi; ret; 
0x00041dc0: add eax, 1; ret; 
0x000a250f: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000962d7: add eax, 2; add esp, 0xc; ret; 
0x000a5816: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019f185: add eax, 2; pop edi; ret; 
0x000d2097: add eax, 2; ret; 
0x0019edc5: add eax, 3; pop edi; ret; 
0x000d20b0: add eax, 3; ret; 
0x000be52b: add eax, 4; cmp edx, ecx; je 0xbe536; test edx, edx; jne 0xbe528; ret; 
0x0011cb83: add eax, 4; mov dword ptr [ebx + 0x4580], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0019f18f: add eax, 4; pop edi; ret; 
0x001711e1: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x171050; add esp, 0x1c; ret; 
0x0019d06c: add eax, 4; ret; 
0x000d2267: add eax, 4; test edx, edx; jne 0xd2260; mov eax, ecx; pop ebx; ret; 
0x0014bb2a: add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x14bb38; ret; 
0x0019f194: add eax, 5; pop edi; ret; 
0x0019d070: add eax, 5; ret; 
0x0019f199: add eax, 6; pop edi; ret; 
0x0019d074: add eax, 6; ret; 
0x0019edeb: add eax, 7; pop edi; ret; 
0x0019d00f: add eax, 7; ret; 
0x00169777: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016979a: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0019f1a3: add eax, 8; pop edi; ret; 
0x00151365: add eax, 8; push eax; call 0xbb960; add esp, 0x1c; ret; 
0x0019d07c: add eax, 8; ret; 
0x00137868: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0019f1a8: add eax, 9; pop edi; ret; 
0x0019d080: add eax, 9; ret; 
0x00025575: add eax, dword ptr [0]; ret; 
0x0016b8f3: add eax, dword ptr [eax + edx*4 - 0x6c990]; notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x001224f6: add eax, dword ptr [eax]; add al, ch; ret 0xfe87; 
0x00091425: add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b108f: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0009f418: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc edi, 0x52; stc; call dword ptr [eax - 0x18]; 
0x000dad59: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sbb esi, 0x55; stc; call dword ptr [eax - 0x18]; 
0x000c34d8: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x7b], ch; stc; call dword ptr [eax - 0x18]; 
0x000c3548: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dh; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0005a888: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg cl, ah; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0005a8ad: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, cl; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000c344c: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; stc; call dword ptr [eax - 0x18]; 
0x00047874: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x7b], ebp; stc; call dword ptr [eax - 0x18]; 
0x00047946: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0008e07e: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x4f], edi; stc; call dword ptr [eax - 0x18]; 
0x0015517c: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, edi; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00047897: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esi, esi; stc; call dword ptr [eax - 0x18]; 
0x000bfad1: add eax, dword ptr [eax]; add byte ptr [eax], al; add bl, ch; ret; 
0x0016f416: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012a70c: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x0008e1a1: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0012a41f: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001169fc: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df68e: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0012452e: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x001169c8: add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0008e869: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x0009f4e3: add eax, dword ptr [eax]; add byte ptr [ebp + 0x92c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0010497f: add eax, dword ptr [eax]; add byte ptr [ebp - 0x64f837d], cl; call dword ptr [eax - 0x73]; 
0x0008dffe: add eax, dword ptr [eax]; add byte ptr [ebp - 0x6b12c7a], cl; call dword ptr [eax - 0x73]; 
0x0017a4fc: add eax, dword ptr [eax]; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000e5509: add eax, dword ptr [eax]; add byte ptr [ebx + 0x178ab84], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0002a636: add eax, dword ptr [eax]; add byte ptr [ebx + 0x39042444], cl; ret; 
0x0002d491: add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0017f707: add eax, dword ptr [eax]; add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0012a67b: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005016d: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e3a31: add eax, dword ptr [eax]; add byte ptr [ebx + 0x8838c], cl; stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00104a22: add eax, dword ptr [eax]; add byte ptr [ebx + 0xd989384], cl; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00198d9e: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00062905: add eax, dword ptr [eax]; add byte ptr [ebx - 0x58b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00121c9e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x000c9d8d: add eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xff83; 
0x00160c16: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; sahf; jb 0x160c1a; call dword ptr [eax - 0x18]; 
0x000d5726: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; lea edx, [ebp - 7]; call dword ptr [eax + 0x57]; 
0x0004dda4: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7db84], cl; jmp dword ptr [eax]; 
0x000fa0e6: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x000c94c0: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf7db84], cl; jmp dword ptr [eax]; 
0x0002c929: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x0017a6f9: add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x00187e2e: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x001792d5: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0012a20b: add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00130eb2: add eax, dword ptr [eax]; add byte ptr [ecx], al; call eax; 
0x0008375e: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0006294d: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0002a445: add eax, dword ptr [eax]; add byte ptr [ecx], ch; ror byte ptr [ecx - 0x76fe743b], 1; ret 0xe283; 
0x000acc9f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001326b8: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x00138b64: add eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f7dbbc], 1; adc edi, dword ptr [ecx]; ret 0x840f; 
0x0007d928: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x0012e398: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x000839d3: add eax, dword ptr [eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0009a837: add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x00103f74: add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x0019edb9: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0019edd6: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x0019eddf: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x0018f212: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f43d: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00087e5f: add eax, dword ptr [eax]; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0011ec50: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013bb69: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x0019f085: add eax, dword ptr [eax]; je 0x19f18a; mov eax, 4; pop edi; ret; 
0x00102fcc: add eax, dword ptr [eax]; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00170a4c: add eax, dword ptr [ebp + 0x316f74c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0014d25d: add eax, dword ptr [ebp - 0x72c98b40]; mov dl, 0x6c; ret 0xfff9; 
0x00164334: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00137371: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x001658cc: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0008ba35: add eax, dword ptr [ebx + 0x57402fa]; pop ebx; pop esi; pop edi; ret; 
0x0017fe26: add eax, dword ptr [ebx + 0x5e5b04c4]; jmp eax; 
0x00076650: add eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009b626: add eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007b8f4: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x0008b95a: add eax, dword ptr [ebx + 0x87403f8]; pop ebx; pop esi; pop edi; ret; 
0x0016d199: add eax, dword ptr [ebx + 0x8b0cec]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0016daba: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00128953: add eax, dword ptr [ebx - 0x27fe031d]; pop ebx; pop esi; ret; 
0x0003e6b4: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0007b94e: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000764bb: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x00092dcc: add eax, dword ptr [ebx - 0x7af0fe06]; mov byte ptr [0x89000000], al; ret 0xf283; 
0x000a5fe1: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0011cd49: add eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016c001: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00099e0d: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0017fed8: add eax, dword ptr [ecx]; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a0b04: add eax, dword ptr [ecx]; ret 0x38b; 
0x000e0593: add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x0007b9c4: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00051e23: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00050610: add eax, dword ptr [esp]; ret; 
0x0008e07d: add eax, dword ptr cs:[eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x4f], edi; stc; call dword ptr [eax - 0x18]; 
0x000acc9e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0019b35e: add eax, dword ptr ds:[eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00025574: add eax, dword ptr gs:[0]; ret; 
0x000f48e5: add eax, eax; pop ebx; pop esi; ret; 
0x00167ff7: add eax, ebp; ret; 
0x0014c060: add eax, ebx; cmp edx, ecx; jne 0x14c030; pop ebx; pop esi; ret; 
0x0017197e: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00128957: add eax, ebx; pop ebx; pop esi; ret; 
0x00040b24: add eax, ebx; push eax; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00119b5c: add eax, ecx; adc edx, 0; ret; 
0x000ba19b: add eax, ecx; add esi, ecx; call 0x17d651; add ecx, 0x105ed0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001a039d: add eax, ecx; and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0019b419: add eax, ecx; call 0x17d639; add ebx, 0x33dbc; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b354: add eax, ecx; call 0x17d639; add ebx, 0x33e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ac9: add eax, ecx; call 0x17d639; add ebx, 0x35608; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999ba: add eax, ecx; call 0x17d639; add ebx, 0x35717; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903e5: add eax, ecx; call 0x17d639; add ebx, 0x3eb2c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f3d8: add eax, ecx; call 0x17d639; add ebx, 0x3f979; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3f8: add eax, ecx; call 0x17d639; add ebx, 0x40799; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c4d9: add eax, ecx; call 0x17d639; add ebx, 0x424f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c3d4: add eax, ecx; call 0x17d639; add ebx, 0x4253d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c1c5: add eax, ecx; call 0x17d639; add ebx, 0x4274c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a4c9: add eax, ecx; call 0x17d639; add ebx, 0x44288; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a3c4: add eax, ecx; call 0x17d639; add ebx, 0x442cd; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a1b8: add eax, ecx; call 0x17d639; add ebx, 0x444d9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001884c9: add eax, ecx; call 0x17d639; add ebx, 0x46008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001883c4: add eax, ecx; call 0x17d639; add ebx, 0x4604d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881b8: add eax, ecx; call 0x17d639; add ebx, 0x46259; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00076e74: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x0019b1ef: add eax, ecx; pop ebx; pop esi; ret; 
0x001879d4: add eax, ecx; pop ebx; ret; 
0x000ba7d6: add eax, ecx; pop edi; ret; 
0x000baac0: add eax, ecx; ret; 
0x001911e4: add eax, ecx; sfence; call 0x17d639; add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901d4: add eax, ecx; sfence; call 0x17d639; add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f204: add eax, ecx; sfence; call 0x17d639; add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e02e: add eax, ecx; sfence; call 0x17d639; add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bece: add eax, ecx; sfence; call 0x17d639; add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f2e: add eax, ecx; sfence; call 0x17d639; add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba7d4: add eax, edi; add eax, ecx; pop edi; ret; 
0x0013ac2b: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0018c2cd: add eax, edi; pop edi; call 0x17d639; add ebx, 0x42703; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a2bd: add eax, edi; pop edi; call 0x17d639; add ebx, 0x44493; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001882bd: add eax, edi; pop edi; call 0x17d639; add ebx, 0x46213; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba877: add eax, edi; pop edi; ret; 
0x00040c12: add eax, edi; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000baa56: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000bb154: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000a9846: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000a9853: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000a9860: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000bb35d: add eax, edx; add eax, ecx; ret; 
0x001a032b: add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a03a4: add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001666a1: add eax, edx; pop ebx; pop esi; ret; 
0x000a983c: add eax, edx; pop edi; pop esi; ret; 
0x000bb4c3: add eax, edx; ret; 
0x0007fda4: add eax, esi; add al, byte ptr [eax]; pop ebx; ret; 
0x0011ec4e: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00133b50: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000baa17: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0016dc98: add eax, esi; push es; add byte ptr [ebx - 0x7c72fb14], al; cmp bh, al; stc; call dword ptr [ebp + 0x57]; 
0x000311fd: add eax, esp; call dword ptr [eax + 0x6a]; 
0x0013b859: add ebp, dword ptr [0xc483fffe]; adc byte ptr [ebp - 0x7777f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0016b5a4: add ebp, dword ptr [ebx + esi]; stc; call dword ptr [eax + 0x52]; 
0x000d3b40: add ebp, dword ptr [ecx]; fimul dword ptr [ebx + 0x2944245c]; ret 0x448b; 
0x000a9052: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000bb25c: add ebp, dword ptr [ecx]; ret 0x428d; 
0x001348b1: add ebp, dword ptr [ecx]; ret 0x8166; 
0x000a7eeb: add ebp, dword ptr [ecx]; ret 0xd101; 
0x000a6fef: add ebp, dword ptr [ecx]; ret 0xd301; 
0x000ff085: add ebp, dword ptr [ecx]; ret 0xda01; 
0x0009b518: add ebp, dword ptr [ecx]; ret; 
0x00025f3d: add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00178de3: add ebp, dword ptr [edi]; jbe 0x178d6c; in al, dx; add al, 0x83; ret; 
0x00082e20: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017effc: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0017eeda: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000a8641: add ebp, ebx; jge 0x830aacbd; ret 0x3901; 
0x0008b46a: add ebp, ebx; ret; 
0x00183b48: add ebp, ecx; ret 0xf7e1; 
0x000be55d: add ebp, edx; push esi; inc ecx; jnp 0xbe568; cmove eax, edx; ret; 
0x00088d92: add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x0008124c: add ebp, esp; call dword ptr [eax - 1]; 
0x000b3684: add ebx, 0x10; call 0x17d651; add ecx, 0x10c744; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0019b420: add ebx, 0x33dbc; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b35b: add ebx, 0x33e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ad0: add ebx, 0x35608; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999c1: add ebx, 0x35717; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001913f2: add ebx, 0x3dc26; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001911ee: add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001906f9: add ebx, 0x3e81f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905ef: add ebx, 0x3e929; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001904e8: add ebx, 0x3ea30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903ec: add ebx, 0x3eb2c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901de: add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190439: add ebx, 0x3eb9f; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f6f9: add ebx, 0x3f65f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f5ef: add ebx, 0x3f769; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f4e8: add ebx, 0x3f870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f3df: add ebx, 0x3f979; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f20e: add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f439: add ebx, 0x3f9df; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f3ef: add ebx, 0x3fa69; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e719: add ebx, 0x4047f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e60f: add ebx, 0x40589; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e508: add ebx, 0x40690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3ff: add ebx, 0x40799; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e2ec: add ebx, 0x407ec; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e459: add ebx, 0x407ff; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e40f: add ebx, 0x40889; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e038: add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d99f: add ebx, 0x40f79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d981: add ebx, 0x40f97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d8e8: add ebx, 0x41030; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d821: add ebx, 0x410f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d788: add ebx, 0x41190; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d6c1: add ebx, 0x41257; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d628: add ebx, 0x412f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d561: add ebx, 0x413b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d4c8: add ebx, 0x41450; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d401: add ebx, 0x41517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d368: add ebx, 0x415b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d2a1: add ebx, 0x41677; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d208: add ebx, 0x41710; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d141: add ebx, 0x417d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d0a8: add ebx, 0x41870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cfe1: add ebx, 0x41937; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cf48: add ebx, 0x419d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ce81: add ebx, 0x41a97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cde8: add ebx, 0x41b30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cd21: add ebx, 0x41bf7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cc88: add ebx, 0x41c90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cbc1: add ebx, 0x41d57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cb28: add ebx, 0x41df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ca61: add ebx, 0x41eb7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c9c8: add ebx, 0x41f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c901: add ebx, 0x42017; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c868: add ebx, 0x420b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c7a1: add ebx, 0x42177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c708: add ebx, 0x42210; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c641: add ebx, 0x422d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c5a8: add ebx, 0x42370; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c4e0: add ebx, 0x424f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c3db: add ebx, 0x4253d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c2d5: add ebx, 0x42703; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c1cc: add ebx, 0x4274c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bed8: add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c216: add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018b89f: add ebx, 0x42df9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b881: add ebx, 0x42e17; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b7e8: add ebx, 0x42eb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b731: add ebx, 0x42f67; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b698: add ebx, 0x43000; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b5e1: add ebx, 0x430b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b548: add ebx, 0x43150; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b491: add ebx, 0x43207; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b3f8: add ebx, 0x432a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b341: add ebx, 0x43357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b2a8: add ebx, 0x433f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b1f1: add ebx, 0x434a7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b158: add ebx, 0x43540; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b0a1: add ebx, 0x435f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b008: add ebx, 0x43690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018af51: add ebx, 0x43747; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aeb8: add ebx, 0x437e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ae01: add ebx, 0x43897; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ad68: add ebx, 0x43930; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018acb1: add ebx, 0x439e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ac18: add ebx, 0x43a80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ab61: add ebx, 0x43b37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aac8: add ebx, 0x43bd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa11: add ebx, 0x43c87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a978: add ebx, 0x43d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a8c1: add ebx, 0x43dd7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a828: add ebx, 0x43e70; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a771: add ebx, 0x43f27; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a6d8: add ebx, 0x43fc0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a621: add ebx, 0x44077; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a588: add ebx, 0x44110; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a4d0: add ebx, 0x44288; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a3cb: add ebx, 0x442cd; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a2c5: add ebx, 0x44493; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a1bf: add ebx, 0x444d9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f38: add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a224: add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018a1d5: add ebx, 0x44683; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018989f: add ebx, 0x44b79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189881: add ebx, 0x44b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001897e8: add ebx, 0x44c30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189731: add ebx, 0x44ce7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189698: add ebx, 0x44d80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001895e1: add ebx, 0x44e37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189548: add ebx, 0x44ed0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189491: add ebx, 0x44f87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001893f8: add ebx, 0x45020; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189341: add ebx, 0x450d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001892a8: add ebx, 0x45170; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001891f1: add ebx, 0x45227; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189158: add ebx, 0x452c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001890a1: add ebx, 0x45377; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189008: add ebx, 0x45410; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188f51: add ebx, 0x454c7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188eb8: add ebx, 0x45560; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188e01: add ebx, 0x45617; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188d68: add ebx, 0x456b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188cb1: add ebx, 0x45767; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188c18: add ebx, 0x45800; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188b61: add ebx, 0x458b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188ac8: add ebx, 0x45950; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188a11: add ebx, 0x45a07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188978: add ebx, 0x45aa0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001888c1: add ebx, 0x45b57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188828: add ebx, 0x45bf0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188771: add ebx, 0x45ca7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001886d8: add ebx, 0x45d40; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188621: add ebx, 0x45df7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188588: add ebx, 0x45e90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001884d0: add ebx, 0x46008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001883cb: add ebx, 0x4604d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001882c5: add ebx, 0x46213; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881bf: add ebx, 0x46259; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188224: add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001881d5: add ebx, 0x46403; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00186fdd: add ebx, 0x4723b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186f2d: add ebx, 0x472eb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186e45: add ebx, 0x47353; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186a83: add ebx, 0x47515; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001869c7: add ebx, 0x475d1; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0018696b: add ebx, 0x4762d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001868ad: add ebx, 0x476eb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001867c5: add ebx, 0x47753; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00099628: add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00099d49: add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00089767: add ebx, 8; add esi, 8; push eax; call ecx; 
0x0007e774: add ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000a59c8: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000bb99d: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x001867cb: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001881c5: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018822a: add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000b31a9: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0018e8d0: add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018c8fa: add ebx, dword ptr [edi - 0x18]; cmp byte ptr [0xc381ffff], cl; pop ss; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bc2f5: add ebx, dword ptr [esi + 0x5f]; ret; 
0x0011d269: add ebx, dword ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x0008b372: add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00124380: add ebx, eax; mov ebp, esi; call ebx; 
0x00124380: add ebx, eax; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000a8f6a: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x00028c26: add ebx, ebp; ret; 
0x0009a128: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009a19d: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000af243: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000aae83: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000ab113: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000ba711: add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba206: add ecx, 0x105e6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1e1: add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1c1: add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1a4: add ecx, 0x105ed0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba105: add ecx, 0x105eef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba177: add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba0e7: add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba160: add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba145: add ecx, 0x105f2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba0c2: add ecx, 0x105f32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba123: add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba098: add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba07f: add ecx, 0x105f75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba05e: add ecx, 0x105f96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba03a: add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba01c: add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f99: add ecx, 0x10605b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6de7: add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6dc2: add ecx, 0x1091b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d98: add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d7f: add ecx, 0x1091f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d5e: add ecx, 0x109216; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d3a: add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d1c: add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d00: add ecx, 0x109274; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4e71: add ecx, 0x10b02f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d8c: add ecx, 0x10b1a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d79: add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d5d: add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4266: add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4241: add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4221: add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4204: add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4165: add ecx, 0x10bcbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b41d7: add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41c0: add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41a5: add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4183: add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4091: add ecx, 0x10bd8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4071: add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b404c: add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b3771: add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b368c: add ecx, 0x10c744; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3679: add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b365d: add ecx, 0x10c773; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2c26: add ecx, 0x10d11a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2c01: add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2be1: add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bc4: add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b25: add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2b97: add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b80: add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b65: add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b43: add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2a61: add ecx, 0x10d25f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a41: add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a1c: add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001038b3: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x001799d8: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010299a: add ecx, 0x24; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0002f4b6: add ecx, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x00103730: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00186fd2: add ecx, 0x80; call 0x17d639; add ebx, 0x4723b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186960: add ecx, 0x80; call 0x17d639; add ebx, 0x4762d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0003fd02: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000421b5: add ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x0016e09f: add ecx, 4; mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x00054dd4: add ecx, dword ptr [ebp + 0x2baff46]; add byte ptr [eax], al; add byte ptr [ecx - 0x36274b], cl; dec dword ptr [edi]; dec edi; ret 0xff31; 
0x000b4879: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x000bc2f2: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000cebaf: add ecx, dword ptr [ebp - 0x6312380]; call dword ptr [eax + 0x57]; 
0x000cf39a: add ecx, dword ptr [ebp - 0x6313380]; call dword ptr [eax + 0x57]; 
0x000acce0: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0016d2c7: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000ba2cc: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000b6e79: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x000bbf73: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x00103fed: add ecx, dword ptr [ebx + 0xc2c828c]; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000726ef: add ecx, dword ptr [ebx - 0x4ef63]; inc dword ptr [ecx]; ret; 
0x000c8759: add ecx, dword ptr [ebx - 0x72bfdbbc]; or ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x000c80cf: add ecx, dword ptr [ebx - 0x72bfdbbc]; sbb ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x000c4970: add ecx, dword ptr [ebx - 0x72c3db8c]; xchg ah, bl; into; stc; call dword ptr [eax + 0x57]; 
0x000c20e7: add ecx, dword ptr [ebx - 0x72c3dbbc]; or ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x000c1a3a: add ecx, dword ptr [ebx - 0x72c3dbbc]; sbb ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x000ba2c7: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e74: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31a4: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000af2c6: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000af3f6: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000588da: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000ad139: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x0011e529: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x00088628: add ecx, dword ptr [ecx + 0xf182474]; inc esp; ret 0x978b; 
0x000b2b49: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba717: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000b2a22: add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000d4de9: add ecx, dword ptr [ecx - 0x177cdbec]; xor byte ptr [ebx - 0x79f0f608], al; ret 0xfffe; 
0x000813a9: add ecx, dword ptr [ecx - 0x2dcefbad]; mov eax, edx; pop ebx; ret; 
0x000ab016: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x0011e550: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0x11e55a; mov dword ptr [eax], edx; ret; 
0x00044cbb: add ecx, dword ptr [ecx - 0x76c3dbbc]; ret 0xc483; 
0x0004491e: add ecx, dword ptr [ecx - 0x76d3dbbc]; ret 0xe283; 
0x00038e26: add ecx, dword ptr [ecx - 0x76e3dbbc]; ret; 
0x00170d6e: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x00170dfe: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x000b9689: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000aaee6: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000b43f9: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009375a: add ecx, dword ptr [ecx]; retf 0x850f; cmp eax, 0x89000001; ret 0xca83; 
0x0011bd5c: add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x00029040: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x00029225: add ecx, dword ptr [edi]; dec ecx; ret; 
0x00160de7: add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x00062d23: add ecx, dword ptr [edi]; mov dh, 0x58; add ecx, ebp; ret; 
0x0008b0dd: add ecx, dword ptr [edi]; test dword ptr [0x89000003], edi; ret 0xca83; 
0x000b42e1: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008bab0: add ecx, dword ptr [edi]; test dword ptr [ecx - 0x77000000], edi; ret 0xca83; 
0x000ff9ab: add ecx, dword ptr [edi]; test dword ptr [edx - 0x74000008], ecx; mov esp, 0xa024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000acce3: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00093624: add ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc231; 
0x0013b6dd: add ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x0002918a: add ecx, dword ptr [edi]; xchg edi, esi; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00060b79: add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00024d93: add ecx, dword ptr [esi]; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0009a84f: add ecx, eax; call 0x1ca2b5a; mov dword ptr [edx + 0x368], eax; ret; 
0x00093757: add ecx, eax; jmp 0xfd34061; test dword ptr [0x89000001], edi; ret 0xca83; 
0x0003a780: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003ad49: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003aaa1: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001a4b98: add ecx, ebp; cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00039690: add ecx, ebp; ret 0xfffa; 
0x0002ddef: add ecx, ebp; ret; 
0x0006104e: add ecx, ebx; jmp ecx; 
0x000e5510: add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000d3159: add ecx, edx; call ecx; 
0x000bc898: add ecx, edx; notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000a0d1f: add ecx, edx; test eax, eax; jne 0xa0d18; mov eax, ecx; ret; 
0x000b4d71: add edi, 0x10; call 0x17d651; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d55: add edi, 0x10; call 0x17d651; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3671: add edi, 0x10; call 0x17d651; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016dca9: add edi, 0x74; stc; call dword ptr [eax + 0x6a]; 
0x0008b13b: add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000fa7ac: add edi, dword ptr [ecx]; ret 0x420f; 
0x0009ca64: add edi, dword ptr [ecx]; ret; 
0x00166c3c: add edi, eax; sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00040acc: add edi, ebx; push edi; push edx; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 0x28], edx; call eax; 
0x0018ecb9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed49: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018edd9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee69: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eef9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef89: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7a9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e839: add edi, ecx; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e8c9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e959: add edi, ecx; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9e9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea79: add edi, ecx; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb09: add edi, ecx; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb99: add edi, ecx; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec29: add edi, ecx; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b41fb: add edi, ecx; add esi, ecx; call 0x17d651; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bbb: add edi, ecx; add esi, ecx; call 0x17d651; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018d4c5: add edi, edi; inc dword ptr [ecx + 0x41450c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d29e: add edi, edi; inc dword ptr [ecx + 0x41677c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00164a0c: add edi, edi; jae 0x164a18; push esi; call dword ptr [ebx + 0xc]; 
0x00111a59: add edi, edi; je 0x111a81; xor bh, bh; ja 0x111a6d; call dword ptr [edi + 0x24]; 
0x00112b79: add edi, edi; je 0x112ba1; xor bh, bh; ja 0x112b8d; call dword ptr [edi + 0x24]; 
0x00113ca9: add edi, edi; je 0x113cd1; xor bh, bh; ja 0x113cbd; call dword ptr [edi + 0x24]; 
0x00088255: add edi, edi; je 0x8827d; xor bh, bh; je 0x88281; cmp al, 0x51; call eax; 
0x00159d8b: add edi, edi; jmp dword ptr [ebp - 0x75]; 
0x0014c40a: add edi, esi; dec dword ptr [ecx - 0x7c037607]; rcr byte ptr [edx], 0x89; ret 0x25; 
0x0003c8da: add edi, esi; ret 0; 
0x00073948: add edi, esp; dec dword ptr [ebp - 0x683b37a]; call dword ptr [eax - 0x73]; 
0x0019e4ae: add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x001251d9: add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00125059: add edx, 0x10bddb; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001249b9: add edx, 0x10c47b; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00119b79: add edx, 0x1172bb; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00117c79: add edx, 0x1191bb; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00117749: add edx, 0x1196eb; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116b09: add edx, 0x11a32b; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001152c9: add edx, 0x11bb6b; push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f2bd9: add edx, 0x13e25b; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xf2bf0; ret; 
0x000d4249: add edx, 0x15cbeb; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000d6ff5: add edx, 0x16d; mov eax, edx; ret; 
0x0009a9f9: add edx, 0x19643b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a829: add edx, 0x19660b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x000990c9: add edx, 0x197d6b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00088a19: add edx, 0x1a841b; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x0003459f: add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00086a2d: add edx, 0x30; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x0019e680: add edx, 0xa; jl 0x19e6d0; lea eax, [ecx + 0xa]; ret; 
0x0019e690: add edx, 0xb; jl 0x19e6d0; lea eax, [ecx + 0xb]; ret; 
0x0019e5fb: add edx, 0xc; jl 0x19e6d0; lea eax, [ecx + 0xc]; ret; 
0x0019e6a0: add edx, 0xd; jl 0x19e6d0; lea eax, [ecx + 0xd]; ret; 
0x0019e6b0: add edx, 0xe; jl 0x19e6d0; lea eax, [ecx + 0xe]; ret; 
0x0019e6c0: add edx, 0xf; jl 0x19e6d0; lea eax, [ecx + 0xf]; ret; 
0x0019e610: add edx, 1; jl 0x19e6d0; lea eax, [ecx + 1]; ret; 
0x0013e77c: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000420de: add edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x000f1f4d: add edx, 1; test al, al; jne 0xf1f21; xor eax, eax; ret; 
0x0004223e: add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x0019e620: add edx, 2; jl 0x19e6d0; lea eax, [ecx + 2]; ret; 
0x0019e630: add edx, 3; jl 0x19e6d0; lea eax, [ecx + 3]; ret; 
0x0019e598: add edx, 4; jl 0x19e6d0; lea eax, [ecx + 4]; ret; 
0x000d2242: add edx, 4; test eax, eax; jne 0xd223c; xor edx, edx; mov eax, edx; ret; 
0x0019e640: add edx, 5; jl 0x19e6d0; lea eax, [ecx + 5]; ret; 
0x0019e650: add edx, 6; jl 0x19e6d0; lea eax, [ecx + 6]; ret; 
0x0019e660: add edx, 7; jl 0x19e6d0; lea eax, [ecx + 7]; ret; 
0x00137ae5: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x0019e5d1: add edx, 8; jl 0x19e6d0; lea eax, [ecx + 8]; ret; 
0x0019e670: add edx, 9; jl 0x19e6d0; lea eax, [ecx + 9]; ret; 
0x001243c1: add edx, dword ptr [eax + 0x28]; push edx; push dword ptr [esp + 0x30]; call 0x124320; add esp, 0x2c; ret; 
0x00131b6a: add edx, dword ptr [edx - 0x7b]; ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x86; iretd; stc; call dword ptr [eax + 0x57]; 
0x000bb056: add edx, eax; jl 0xbb090; add eax, ecx; ret; 
0x000bb066: add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x10]; ret; 
0x000bb076: add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x20]; ret; 
0x000bb086: add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x30]; ret; 
0x000baadf: add edx, eax; jmp 0xbab50; lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0014ace2: add edx, ebx; out 0x21, eax; ret; 
0x0019b417: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x33dbc; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b352: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x33e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ac7: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x35608; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999b8: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x35717; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903e3: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x3eb2c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f3d6: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x3f979; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3f6: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x40799; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c4d7: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x424f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c3d2: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x4253d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c1c3: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x4274c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a4c7: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x44288; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a3c2: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x442cd; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a1b6: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x444d9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001884c7: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x46008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001883c2: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x4604d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881b6: add edx, ecx; add eax, ecx; call 0x17d639; add ebx, 0x46259; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb9a0: add edx, ecx; add esi, ecx; jmp ebx; 
0x001867ce: add edx, ecx; jmp ebx; 
0x0018ecbb: add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed4b: add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eddb: add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee6b: add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eefb: add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef8b: add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7ab: add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e83b: add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e8cb: add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e95b: add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9eb: add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea7b: add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb0b: add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb9b: add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec2b: add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008c958: add edx, edx; and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001859a9: add edx, esi; clc; jmp dword ptr [esi - 0x70]; 
0x000ba0b7: add esi, 0x10; add eax, 0x10; call 0x17d651; add ecx, 0x105f32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6db7: add esi, 0x10; add eax, 0x10; call 0x17d651; add ecx, 0x1091b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00120e74: add esi, 0x10ffc0; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116e24: add esi, 0x11a010; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c6c4: add esi, 0x124770; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00109911: add esi, 0x127523; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00102bff: add esi, 0x12e235; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ba0dc: add esi, 0x20; add eax, 0x20; call 0x17d651; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6ddc: add esi, 0x20; add eax, 0x20; call 0x17d651; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f8e: add esi, 0x30; add eax, 0x30; call 0x17d651; add ecx, 0x10605b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6cf5: add esi, 0x30; add eax, 0x30; call 0x17d651; add ecx, 0x109274; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015ab94: add esi, 0x70; stc; call dword ptr [eax - 0x18]; 
0x0016a50b: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00164ae6: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008976a: add esi, 8; push eax; call ecx; 
0x0017d319: add esi, dword ptr [eax + ebx + 0x3c]; add al, 0xf; test dword ptr [edi + 0x77], edi; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x0008b95d: add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x00135b88: add esi, dword ptr [eax + edi*2 - 0x7d]; ret 0x8303; 
0x000f6d98: add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000bc7b5: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x0008b4e6: add esi, dword ptr [edi + ebp - 0x77]; clc; call dword ptr gs:[0x10]; 
0x000f709e: add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000923e1: add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0002fca3: add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00165b63: add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0008b9bf: add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000a2646: add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00137740: add esi, eax; mov dword ptr [edi], esi; pop ebx; pop esi; pop edi; ret; 
0x0012554b: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000ba030: add esi, ecx; bsf edx, edx; call 0x17d651; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba012: add esi, ecx; bsf edx, edx; call 0x17d651; add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d30: add esi, ecx; bsf edx, edx; call 0x17d651; add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d12: add esi, ecx; bsf edx, edx; call 0x17d651; add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4042: add esi, ecx; bsf edx, edx; call 0x17d651; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a12: add esi, ecx; bsf edx, edx; call 0x17d651; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba1da: add esi, ecx; call 0x17d651; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1ba: add esi, ecx; call 0x17d651; add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba19d: add esi, ecx; call 0x17d651; add ecx, 0x105ed0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b423a: add esi, ecx; call 0x17d651; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b421a: add esi, ecx; call 0x17d651; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41fd: add esi, ecx; call 0x17d651; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bfa: add esi, ecx; call 0x17d651; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bda: add esi, ecx; call 0x17d651; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bbd: add esi, ecx; call 0x17d651; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb9a2: add esi, ecx; jmp ebx; 
0x00040bba: add esi, edi; push esi; push edx; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x20], edx; call eax; 
0x001283b6: add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00103ebc: add esi, esi; ret 0x7404; 
0x00151da8: add esi, esi; ret 0xf01; 
0x000e18c4: add esi, esi; ret 0xf02; 
0x000fa8d7: add esi, esi; ret; 
0x000cb86e: add esp, -0x54; stc; call dword ptr [eax - 0x73]; 
0x000bc465: add esp, 0x100; sub eax, edx; ret; 
0x001151bf: add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0005dd02: add esp, 0x1018; pop ebx; ret; 
0x00133b4d: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009baf1: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003fcad: add esp, 0x10; add esp, 0xc; ret; 
0x0017a24f: add esp, 0x10; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00165f38: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013d2c6: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000260e6: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008a2c8: add esp, 0x10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0011f4c4: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00027162: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00092229: add esp, 0x10; call eax; 
0x0009c263: add esp, 0x10; cmp eax, -1; je 0x9c270; add esp, 0xc; ret; 
0x00169980: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00171f53: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0015dcbf: add esp, 0x10; cmp edx, 1; jg 0x15dce8; add esp, 0x18; pop ebx; ret; 
0x001771fc: add esp, 0x10; cmp edx, 1; jg 0x177228; add esp, 0x18; pop ebx; ret; 
0x00177288: add esp, 0x10; cmp edx, 1; jg 0x1772b0; add esp, 0x18; pop ebx; ret; 
0x00177560: add esp, 0x10; cmp edx, 1; jg 0x177588; add esp, 0x18; pop ebx; ret; 
0x0008e33f: add esp, 0x10; cmp edx, 1; jg 0x8e368; add esp, 0x18; pop ebx; ret; 
0x0010a5e3: add esp, 0x10; jmp 0x109fe6; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x00165d23: add esp, 0x10; jmp 0x165c16; call 0x133af0; endbr32; mov eax, 2; ret; 
0x0017a907: add esp, 0x10; jmp 0x17a7c7; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000a0c1b: add esp, 0x10; jmp 0xa0bbe; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000e9593: add esp, 0x10; jmp 0xe8f96; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ebf13: add esp, 0x10; jmp 0xeb916; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ecc63: add esp, 0x10; jmp 0xec676; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ef563: add esp, 0x10; jmp 0xeef76; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f02b3: add esp, 0x10; jmp 0xefcc6; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x0013757e: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0016eda8: add esp, 0x10; lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0012253f: add esp, 0x10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0014072e: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000df4d6: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0011ae00: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00076ea1: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011a7a1: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e3: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11a988; call eax; 
0x0012cf6d: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00170818: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0016e941: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea21: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea84: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eae4: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb51: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0003c480: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d943: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0016f0af: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0003e754: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e877: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0014f567: add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0014f6e4: add esp, 0x10; mov eax, ebx; call eax; 
0x000bf46d: add esp, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017b2d1: add esp, 0x10; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00095344: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001355d1: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e1199: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00143022: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00025545: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x0011c716: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013336b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x0013457b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x001860f3: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003fe32: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b2: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7f4: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x000912f0: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c4: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a44: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f50: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b0: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x0016e8d1: add esp, 0x10; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x00123803: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001800cf: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x0003fa57: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc74: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff44: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffc7: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x000d2db4: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd148: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df488: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000253db: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00025864: add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0004229c: add esp, 0x10; pop ebx; add eax, 1; pop esi; pop edi; ret; 
0x0005d6e5: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f6f4: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00118bf5: add esp, 0x10; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0013d330: add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x001585b9: add esp, 0x10; push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0014f5e1: add esp, 0x10; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00141e9e: add esp, 0x10; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0016e0aa: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016dabb: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00165886: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x001331f0: add esp, 0x10; test eax, eax; je 0x133200; add esp, 8; pop ebx; ret; 
0x00157c70: add esp, 0x10; test eax, eax; je 0x157c80; sub esp, 0xc; push esi; call eax; 
0x00158000: add esp, 0x10; test eax, eax; je 0x158010; sub esp, 0xc; push esi; call eax; 
0x001652a0: add esp, 0x10; test eax, eax; je 0x1652b0; sub esp, 0xc; push esi; call eax; 
0x00166023: add esp, 0x10; test eax, eax; je 0x16612b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00041496: add esp, 0x10; test eax, eax; je 0x414a8; add esp, 8; pop ebx; ret; 
0x0011ef0c: add esp, 0x10; test eax, eax; jne 0x11eecc; add esp, 0xc; ret; 
0x0016f184: add esp, 0x10; test eax, eax; jne 0x16f170; add esp, 8; pop ebx; ret; 
0x0003c0b5: add esp, 0x10; test eax, eax; jne 0x3c0c8; add esp, 8; pop ebx; ret; 
0x0003c364: add esp, 0x10; test eax, eax; jne 0x3c370; add esp, 8; pop ebx; ret; 
0x000f2194: add esp, 0x10; test eax, eax; jne 0xf21a0; add esp, 8; pop ebx; ret; 
0x001279f1: add esp, 0x10; test eax, eax; js 0x127a00; add esp, 8; pop ebx; ret; 
0x0014d22f: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a0be0: add esp, 0x10; test ebp, ebp; jne 0xa0b39; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x0017d7bf: add esp, 0x10; test ebx, ebx; jne 0x17d7d0; add esp, 8; pop ebx; ret; 
0x00039aff: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000f70cb: add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008e28a: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001405ec: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0003c5d8: add esp, 0x114; pop ebx; pop edi; ret; 
0x00140814: add esp, 0x118; pop ebx; ret; 
0x00140a14: add esp, 0x11c; ret; 
0x001790b3: add esp, 0x11cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c907: add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x0003c061: add esp, 0x124; pop ebx; pop esi; ret; 
0x0003cd96: add esp, 0x128; pop ebx; ret; 
0x000be121: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x001273b3: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00056a4c: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x00170a6f: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x000a14a8: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x00096e2e: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0012a710: add esp, 0x14; pop ebx; pop edi; ret; 
0x0003e7dc: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fd66: add esp, 0x14; pop ebx; pop esi; ret; 
0x001160d0: add esp, 0x14; pop esi; pop edi; ret; 
0x00164700: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00080f88: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00048436: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e13e6: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013b9d0: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00163be6: add esp, 0x18; lea eax, [ebx + 0xa5cc]; pop ebx; ret; 
0x00041542: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x001196e6: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0004204e: add esp, 0x18; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00041fbc: add esp, 0x18; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042020: add esp, 0x18; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00041f8e: add esp, 0x18; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00170933: add esp, 0x18; pop ebx; jmp eax; 
0x000a3540: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003a9c7: add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x0002456c: add esp, 0x18; pop ebx; ret; 
0x00089f8e: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x001777d9: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0011b57b: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0010c3bf: add esp, 0x19c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017950f: add esp, 0x1bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003af1a: add esp, 0x1c; and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x00124eac: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00167ba9: add esp, 0x1c; movzx eax, al; ret; 
0x00172179: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00078416: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002522c: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003af80: add esp, 0x1c; ret 4; 
0x00024588: add esp, 0x1c; ret; 
0x00183d62: add esp, 0x1c; sar eax, 0x1f; ret; 
0x0008afec: add esp, 0x20; add esp, 0xc; ret; 
0x00157add: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x001583ad: add esp, 0x20; cmp edx, 1; jg 0x1583d8; add esp, 0x18; pop ebx; ret; 
0x00134a48: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x00088347: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d3fa3: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0005e54a: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000766fe: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011ccdf: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00140edc: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x000255f3: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001a9035: add esp, 0x20; ret; 
0x0003d60d: add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0012745e: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00121590: add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00119fd0: add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x00087f56: add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x000d4590: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d241: add esp, 0x24; pop ebx; pop esi; ret; 
0x00052753: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00088105: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001861cc: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003c998: add esp, 0x28; pop ebx; ret; 
0x000d71df: add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00144cc6: add esp, 0x2bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00124eed: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00101fdc: add esp, 0x2c; movzx eax, al; ret; 
0x000879a6: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002352a: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00034b2e: add esp, 0x2c; ret; 
0x0017a4c4: add esp, 0x30; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00173dce: add esp, 0x30; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017a3fc: add esp, 0x30; pop ebx; pop esi; pop edi; jmp eax; 
0x0008cc65: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013507a: add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x0003fc2a: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000f2231: add esp, 0x34; pop ebx; pop esi; ret; 
0x00105a9d: add esp, 0x35c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fbaae: add esp, 0x388c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a040a: add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000e0b62: add esp, 0x38; mov eax, edx; pop ebx; ret; 
0x0013f7a8: add esp, 0x38; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009622c: add esp, 0x38; pop ebx; ret; 
0x001a8f74: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027c57: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00123374: add esp, 0x3c; ret; 
0x0003a6a1: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003a62f: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0011a667: add esp, 0x418; pop ebx; ret; 
0x000575af: add esp, 0x434; pop ebx; pop esi; ret; 
0x001172f9: add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00040900: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004519f: add esp, 0x45c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001440ad: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d2e6f: add esp, 0x48; pop ebx; ret; 
0x0006b864: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003b1b1: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003f0dd: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115259: add esp, 0x4c; ret; 
0x00060674: add esp, 0x4cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00176b50: add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x0011c1d6: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0010c75a: add esp, 0x54; pop ebx; pop esi; ret; 
0x0016ede2: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000286ce: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003b97e: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029ddd: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010c5d0: add esp, 0x60; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0010c7c6: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x001051d3: add esp, 0x64; pop ebx; pop esi; ret; 
0x00104eef: add esp, 0x68; pop ebx; ret; 
0x00028d0e: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002efe4: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00119c8a: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000e0ca2: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0016d546: add esp, 0x74; pop ebx; pop edi; ret; 
0x0010bdc5: add esp, 0x74; pop ebx; pop esi; ret; 
0x0005beac: add esp, 0x78; pop ebx; ret; 
0x0002b1be: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002ad1b: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001289c9: add esp, 0x7c; ret; 
0x0014031d: add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0007fca9: add esp, 0x824; pop ebx; pop esi; ret; 
0x000e7072: add esp, 0x85c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e5c49: add esp, 0x89c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00156e11: add esp, 0x8bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005eced: add esp, 0x8ec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000943c7: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0003c6cf: add esp, 0x94; pop ebx; pop edi; ret; 
0x0008ade8: add esp, 0x94; pop ebx; pop esi; ret; 
0x0003c7f2: add esp, 0x98; pop ebx; ret; 
0x001a0944: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003c552: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d4a2: add esp, 0x9c; ret; 
0x0007fea1: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x001a2f50: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000334d1: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a7bc: add esp, 0xb4; pop ebx; pop esi; ret; 
0x001a55af: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027e3c: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00087854: add esp, 0xc; jmp eax; 
0x00166015: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00034abf: add esp, 0xc; mov eax, edx; ret; 
0x000962e6: add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00050468: add esp, 0xc; movzx eax, al; ret; 
0x0007b1ac: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000a13c0: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000360ca: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00163ee1: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0012e392: add esp, 0xc; push eax; push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012d576: add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [edi + 0x14]; 
0x0012f554: add esp, 0xc; push eax; push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e175: add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0012fcdb: add esp, 0xc; push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0005bf5f: add esp, 0xc; push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0002586b: add esp, 0xc; ret; 
0x000a24f5: add esp, 0xc; test eax, eax; jne 0xa2503; ret; 
0x00057b9b: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00123dbc: add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x001150f5: add esp, 0xe4; pop ebx; pop esi; ret; 
0x000e09d1: add esp, 0xe8; pop ebx; ret; 
0x0004456d: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036819: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f48e2: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0016669e: add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x00051e2b: add esp, 4; jmp eax; 
0x00163d30: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0007b148: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00073c98: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00165d97: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0008871a: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014aedc: add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x001306ff: add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x0005d7e6: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0012ce7e: add esp, 4; movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x00167001: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x0008e2d7: add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x001990b9: add esp, 4; pop ebp; pop ebx; ret; 
0x0007cf46: add esp, 4; pop ebx; pop esi; jmp eax; 
0x00039a8d: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00025ff1: add esp, 4; pop ebx; pop esi; ret; 
0x00025078: add esp, 4; pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00196829: add esp, 4; pop ebx; ret; 
0x0008a919: add esp, 4; pop esi; pop edi; ret; 
0x0003ac4e: add esp, 4; ret; 
0x0008a646: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0003fe7f: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008a92e: add esp, 4; xor eax, eax; pop esi; pop edi; ret; 
0x00140f8b: add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00091200: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x00058740: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0011f4c7: add esp, 8; mov eax, 1; pop ebx; ret; 
0x0005e5db: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000505dd: add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082f64: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00165eba: add esp, 8; movzx eax, al; pop ebx; ret; 
0x00103762: add esp, 8; or eax, edx; pop ebx; ret; 
0x00056d10: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00027165: add esp, 8; pop ebx; ret; 
0x0003aa35: add esp, 8; ret; 
0x0003bd97: add esp, 8; xor eax, eax; pop ebx; ret; 
0x0018c2d7: add esp, dword ptr [edi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881d7: add esp, dword ptr [esp + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00115ad9: add sp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012a8c6: add word ptr [edx + eax*2], 1; ret; 
0x0014c81c: and ah, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x000bc937: and ah, 1; add byte ptr [eax], al; ret; 
0x0002342c: and ah, ah; pop es; add byte ptr [ecx - 0x7872dbfc], cl; xchg edx, eax; je 0x23431; call dword ptr [esi + 0x53]; 
0x001903aa: and ah, byte ptr [edx]; cli; jmp dword ptr [esi - 0x70]; 
0x000f264b: and al, 0; add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0007b4d2: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009d766: and al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x000337ee: and al, 0; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x00121a01: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121a01: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000c10fb: and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0010c2f8: and al, 0x10; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001879d2: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0003a9c5: and al, 0x10; add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x00165d95: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00163d22: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00134263: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008ad0b: and al, 0x10; and byte ptr [eax + edx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003b996: and al, 0x10; and eax, 0x80000000; ret; 
0x0012b319: and al, 0x10; call 0x12a720; pop edx; pop ecx; pop eax; ret; 
0x0014f560: and al, 0x10; call 0x17ab80; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0011592d: and al, 0x10; call dword ptr gs:[0x10]; 
0x0014f5f1: and al, 0x10; call edi; 
0x00119859: and al, 0x10; cmp al, 1; ret 0x1389; 
0x0017c2df: and al, 0x10; cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x17c2f0; pop ebx; ret; 
0x001326b4: and al, 0x10; cmp eax, 0x3ff; ja 0x1326c4; sar eax, 5; add esp, 0xc; ret; 
0x001028d6: and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0003a793: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003a712: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003a788: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001716f2: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00170c62: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00186156: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000a080e: and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0017d428: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000922e5: and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00128583: and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x00076457: and al, 0x10; mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x000878aa: and al, 0x10; mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00120ed5: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011835e: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011825a: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0010b705: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115325: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126da5: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a25: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126aa5: and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00126845: and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00124587: and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x00126c05: and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a65: and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012383e: and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00126935: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c75: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00121945: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a5: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac05: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0007cf41: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008784f: and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0012ac0b: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x12aad0; add esp, 4; ret; 
0x00087937: and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0017fe23: and al, 0x10; mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001716f6: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00170c66: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00127426: and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127b57: and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00093bbf: and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010991a: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e144c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00116adc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bcc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126cac: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc3c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5cc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab6c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012680c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00089404: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f1c6: and al, 0x10; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00126e93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126963: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115853: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117793: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117263: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b093: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b03: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126873: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad83: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b63: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119973: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b03: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126783: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c83: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115293: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8883: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e903: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e623: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0008b369: and al, 0x10; mov edx, 0x7fffffff; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008e2bb: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00099758: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011941b: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00127d5f: and al, 0x10; mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d19: and al, 0x10; mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x001193bd: and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125c72: and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00116042: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0005da61: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001182de: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001181da: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00170fdd: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0017103a: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0007b6e1: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007b581: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0008335b: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00165b7d: and al, 0x10; pop ebx; pop esi; jmp eax; 
0x000a1f13: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007d6f3: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0014a5a0: and al, 0x10; push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x001585c7: and al, 0x10; push ebp; call edi; 
0x0016d302: and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x00076508: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00171720: and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001708f8: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x001714b6: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016a47a: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170af8: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a9d: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00170d98: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00170dd0: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x00135610: and al, 0x10; push edx; push edi; call eax; 
0x001356dc: and al, 0x10; push edx; push esi; call eax; 
0x00163eec: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x0007d6f7: and al, 0x10; push esi; call dword ptr [ebx + 0x40]; 
0x0013bb93: and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0007d83d: and al, 0x10; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0005816b: and al, 0x10; test byte ptr [edx], 0x20; je 0x58180; add esp, 0xc; ret; 
0x00073b7b: and al, 0x10; test byte ptr [edx], 0x20; je 0x73b90; add esp, 0xc; ret; 
0x00125337: and al, 0x10; test edx, edx; je 0x125370; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0010c20e: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x00183b46: and al, 0x14; add ebp, ecx; ret 0xf7e1; 
0x00034abd: and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x00034af2: and al, 0x14; call 0x345b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x001193c1: and al, 0x14; call dword ptr gs:[0x10]; 
0x00024cb5: and al, 0x14; call eax; 
0x00033a1d: and al, 0x14; call edx; 
0x000d2ead: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0006c140: and al, 0x14; jmp ebx; 
0x0017c2e6: and al, 0x14; jne 0x17c2f0; pop ebx; ret; 
0x000dfac5: and al, 0x14; lea ecx, [esp + 0x14]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00073def: and al, 0x14; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008784b: and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000dfac9: and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00128590: and al, 0x14; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000df772: and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00127b5f: and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00102b32: and al, 0x14; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0008937b: and al, 0x14; mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00165481: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0012cf49: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00024cb1: and al, 0x14; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000dfc09: and al, 0x14; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00127a96: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001283e6: and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128bfe: and al, 0x14; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008e2bf: and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00183b70: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00120ed1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011835a: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b701: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115321: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126da1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a21: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126aa1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00126841: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126c01: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a61: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00126931: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c71: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00121941: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac01: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125c6e: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001182da: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009975c: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0006cf03: and al, 0x14; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x00116ad8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bc8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126ca8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc38: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5c8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab68: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00126808: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x001198e8: and al, 0x14; mov edx, 0xffffffff; call 0x119810; sar eax, 0x1f; add esp, 0xc; ret; 
0x00115920: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0005da59: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00185f31: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129101: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00125178: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e2e92: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011941f: and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x001666f0: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00024cad: and al, 0x14; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00164248: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0016424c: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0005c003: and al, 0x14; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0014a5a7: and al, 0x14; push ebp; call edi; 
0x0016ec78: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000e8b5d: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00164b1b: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00163dd8: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x00050322: and al, 0x14; xor eax, eax; mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x001a3966: and al, 0x18; add al, 0x39; ret 0x850f; 
0x0008fd47: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a2145: and al, 0x18; add cl, ch; ret; 
0x00060c3a: and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0006bcd5: and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00061b17: and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0010c296: and al, 0x18; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0012d860: and al, 0x18; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0016aab2: and al, 0x18; call dword ptr [eax + 0x10]; 
0x0017abad: and al, 0x18; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x00125c76: and al, 0x18; call dword ptr gs:[0x10]; 
0x0010a9b3: and al, 0x18; call eax; 
0x0008e251: and al, 0x18; cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001255a0: and al, 0x18; cmp esi, -1; je 0x1255c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000d2e8d: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00130aff: and al, 0x18; je 0x130b10; add esp, 8; pop ebx; ret; 
0x00178bf3: and al, 0x18; lea eax, [eax - 0x689d7]; push eax; call 0x115980; add esp, 0x1c; ret; 
0x00101f7d: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000a59c2: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a5902: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00040012: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00163b72: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00099e0a: and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000dfacd: and al, 0x18; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00115924: and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012742e: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008fd37: and al, 0x18; mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0017ab67: and al, 0x18; mov eax, dword ptr [eax + 0x10c]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x00057ae9: and al, 0x18; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x62520; add esp, 0x1c; ret; 
0x0007a8aa: and al, 0x18; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x6d7f0; add esp, 0x1c; ret; 
0x00057dca: and al, 0x18; mov eax, dword ptr [eax + 0xb8]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x0007a849: and al, 0x18; mov eax, dword ptr [eax + 0xb8]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x00121a5a: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012d85c: and al, 0x18; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x00128b0f: and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001028d2: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0005da5d: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000891dd: and al, 0x18; mov ebx, dword ptr [esp + 8]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00124581: and al, 0x18; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00120ecd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010b6fd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011531d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126d9d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a1d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126a9d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012683d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126bfd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a5d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012692d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c6d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012193d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e79d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011abfd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00185f35: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00124365: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00116ad4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bc4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126ca4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc34: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5c4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab64: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00126804: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012516b: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001253f7: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e2e8a: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00116046: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00129105: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011933e: and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0005f70c: and al, 0x18; or byte ptr [edi], cl; xchg esp, eax; ret; 
0x001291c2: and al, 0x18; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00115282: and al, 0x18; push -0x64; call 0x10b4c0; add esp, 0x1c; ret; 
0x0011575e: and al, 0x18; push -0x64; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00115782: and al, 0x18; push -0x64; call 0x10c1a0; add esp, 0x1c; ret; 
0x00104e91: and al, 0x18; push -1; call 0x104fa0; add esp, 0x1c; ret; 
0x00104e6b: and al, 0x18; push -1; call 0x105380; add esp, 0x1c; ret; 
0x00123b89: and al, 0x18; push 0; call 0x123dd0; add esp, 0x1c; ret; 
0x00034b6b: and al, 0x18; push 0; call 0x34b10; add esp, 0x1c; ret; 
0x000bd288: and al, 0x18; push 0; call 0xbd7c0; add esp, 0x1c; ret; 
0x0011ea4b: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0008a739: and al, 0x18; push 0x80; push dword ptr [esp + 0x1c]; call 0x8a680; add esp, 0x1c; ret; 
0x000d2ecf: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x0017aba9: and al, 0x18; push dword ptr [esp + 0x18]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x0017ab63: and al, 0x18; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x10c]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x0011527e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x10b4c0; add esp, 0x1c; ret; 
0x0011577e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x10c1a0; add esp, 0x1c; ret; 
0x00104e8d: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0x104fa0; add esp, 0x1c; ret; 
0x000bd284: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0xbd7c0; add esp, 0x1c; ret; 
0x0003e82d: and al, 0x18; push eax; push eax; call 0x3e8a0; add esp, 0x1c; ret; 
0x000741f3: and al, 0x18; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00082308: and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0009a6d2: and al, 0x18; push ebp; call 0x23190; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0014a19d: and al, 0x18; push ebp; push 0; push edi; push ebx; call edx; 
0x000df742: and al, 0x18; push ebx; call eax; 
0x0016c598: and al, 0x18; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0002fcf6: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0017f0ac: and al, 0x18; test ebx, ebx; jne 0x17f0c0; add esp, 8; pop ebx; ret; 
0x00082f3c: and al, 0x18; test ebx, ebx; jne 0x82f50; add esp, 8; pop ebx; ret; 
0x00171f2e: and al, 0x18; test edx, edx; jne 0x171f40; add esp, 0xc; ret; 
0x0017209e: and al, 0x18; test edx, edx; jne 0x1720b0; add esp, 0xc; ret; 
0x0008d671: and al, 0x18; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000779e9: and al, 0x1a; add byte ptr [eax], al; ret; 
0x0006ce0a: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006c453: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x728d4]; add ecx, ebx; jmp ecx; 
0x0014597c: and al, 0x1c; add dword ptr [ecx], ebp; ret 0x828d; 
0x00151363: and al, 0x1c; add eax, 8; push eax; call 0xbb960; add esp, 0x1c; ret; 
0x00096831: and al, 0x1c; call 0x101ff0; add esp, 0x1c; ret; 
0x00105393: and al, 0x1c; call 0x105180; add esp, 0x1c; ret; 
0x00183d5b: and al, 0x1c; call 0x10b730; add esp, 0x1c; sar eax, 0x1f; ret; 
0x0010ba51: and al, 0x1c; call 0x10ba60; add esp, 0x1c; ret; 
0x00115895: and al, 0x1c; call 0x1158d0; add esp, 0x1c; ret; 
0x0005ddd9: and al, 0x1c; call 0x115980; add esp, 0x1c; ret; 
0x0010b012: and al, 0x1c; call 0x115a80; add esp, 0x1c; ret; 
0x0011a5cb: and al, 0x1c; call 0x11a470; add esp, 0x18; pop ebx; ret; 
0x00024565: and al, 0x1c; call 0x11a4f0; add esp, 0x18; pop ebx; ret; 
0x0011cd1a: and al, 0x1c; call 0x11cd60; add esp, 0x1c; ret; 
0x001190d7: and al, 0x1c; call 0x11e560; add esp, 0x10; add esp, 0xc; ret; 
0x00118f83: and al, 0x1c; call 0x11e560; add esp, 0x1c; ret; 
0x0011eed8: and al, 0x1c; call 0x11f600; add esp, 0x10; add esp, 0xc; ret; 
0x00122364: and al, 0x1c; call 0x121c10; add esp, 0x1c; ret; 
0x0012637b: and al, 0x1c; call 0x126390; add esp, 0x1c; ret; 
0x001290d3: and al, 0x1c; call 0x129670; add esp, 0x1c; ret; 
0x00131c60: and al, 0x1c; call 0x130450; add esp, 0x1c; ret; 
0x00130620: and al, 0x1c; call 0x130500; add esp, 0x18; pop ebx; ret; 
0x00134cba: and al, 0x1c; call 0x134cd0; add esp, 0x1c; ret; 
0x0013501a: and al, 0x1c; call 0x135030; add esp, 0x1c; ret; 
0x0013978b: and al, 0x1c; call 0x138a90; add esp, 0x1c; ret; 
0x001406db: and al, 0x1c; call 0x140600; add esp, 0x1c; ret; 
0x00186185: and al, 0x1c; call 0x14d4f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001861f5: and al, 0x1c; call 0x14e3f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001864b5: and al, 0x1c; call 0x159df0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186525: and al, 0x1c; call 0x15ab30; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186655: and al, 0x1c; call 0x15c220; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186685: and al, 0x1c; call 0x15c560; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186735: and al, 0x1c; call 0x15d4c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0016dd98: and al, 0x1c; call 0x16dae0; add esp, 0x10; add esp, 0xc; ret; 
0x0016dd79: and al, 0x1c; call 0x16dbe0; add esp, 0x10; add esp, 0xc; ret; 
0x001701b3: and al, 0x1c; call 0x16fee0; add esp, 0x1c; ret; 
0x001654ef: and al, 0x1c; call 0x170f70; add esp, 0x1c; ret; 
0x001711e7: and al, 0x1c; call 0x171050; add esp, 0x1c; ret; 
0x0017e3b5: and al, 0x1c; call 0x17dad0; add esp, 0x18; pop ebx; ret; 
0x00041ec5: and al, 0x1c; call 0x1a0300; add esp, 0x18; pop ebx; ret; 
0x00041f29: and al, 0x1c; call 0x1a0340; add esp, 0x18; pop ebx; ret; 
0x000a0d53: and al, 0x1c; call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002fbe2: and al, 0x1c; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00102895: and al, 0x1c; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00024581: and al, 0x1c; call 0x2454a; add esp, 0x1c; ret; 
0x00033093: and al, 0x1c; call 0x330a0; add esp, 0x1c; ret; 
0x00034b4f: and al, 0x1c; call 0x34b10; add esp, 0x1c; ret; 
0x0003d25f: and al, 0x1c; call 0x3d1e0; add esp, 0x1c; ret; 
0x0003e0eb: and al, 0x1c; call 0x3d930; add esp, 0x1c; ret; 
0x0003e120: and al, 0x1c; call 0x3e230; add esp, 0x1c; ret; 
0x0017d75b: and al, 0x1c; call 0x3e310; add esp, 0x1c; ret; 
0x0003fb3a: and al, 0x1c; call 0x3fb50; add esp, 0x1c; ret; 
0x00041b8a: and al, 0x1c; call 0x41ba0; add esp, 0x1c; ret; 
0x0003d85b: and al, 0x1c; call 0x446a0; add esp, 0x1c; ret; 
0x0004468b: and al, 0x1c; call 0x45040; add esp, 0x1c; ret; 
0x00047abb: and al, 0x1c; call 0x482e0; add esp, 0x1c; ret; 
0x0003d87d: and al, 0x1c; call 0x4abd0; add esp, 0x1c; ret; 
0x0004b2cb: and al, 0x1c; call 0x4bbc0; add esp, 0x1c; ret; 
0x0003d8bd: and al, 0x1c; call 0x4e640; add esp, 0x1c; ret; 
0x0011eaa3: and al, 0x1c; call 0x5e000; add esp, 0x10; add esp, 0xc; ret; 
0x0011ea51: and al, 0x1c; call 0x5e000; add esp, 0x1c; ret; 
0x00057684: and al, 0x1c; call 0x62110; add esp, 0x1c; ret; 
0x000576a5: and al, 0x1c; call 0x62420; add esp, 0x1c; ret; 
0x000579c4: and al, 0x1c; call 0x62520; add esp, 0x1c; ret; 
0x00069573: and al, 0x1c; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8d5: and al, 0x1c; call 0x6d6d0; add esp, 0x1c; ret; 
0x0006d6e3: and al, 0x1c; call 0x6d7f0; add esp, 0x1c; ret; 
0x00074554: and al, 0x1c; call 0x74410; add esp, 0x1c; ret; 
0x0007f595: and al, 0x1c; call 0x757a0; add esp, 0x18; pop ebx; ret; 
0x0007641f: and al, 0x1c; call 0x76330; add esp, 0x1c; ret; 
0x000577b3: and al, 0x1c; call 0x77120; add esp, 0x1c; ret; 
0x0007f8b2: and al, 0x1c; call 0x787f0; add esp, 0x1c; ret; 
0x0007f8cf: and al, 0x1c; call 0x789a0; add esp, 0x1c; ret; 
0x0007fb3f: and al, 0x1c; call 0x7f9d0; add esp, 0x18; pop ebx; ret; 
0x000574d4: and al, 0x1c; call 0x7f9d0; add esp, 0x1c; ret; 
0x0007fcef: and al, 0x1c; call 0x7fc00; add esp, 0x18; pop ebx; ret; 
0x000575e4: and al, 0x1c; call 0x7fc00; add esp, 0x1c; ret; 
0x000801cf: and al, 0x1c; call 0x80040; add esp, 0x18; pop ebx; ret; 
0x001334f0: and al, 0x1c; call 0x80040; add esp, 0x1c; ret; 
0x000871cc: and al, 0x1c; call 0x87100; add esp, 0x18; pop ebx; ret; 
0x0008a41e: and al, 0x1c; call 0x8a340; add esp, 0x18; pop ebx; ret; 
0x0008a742: and al, 0x1c; call 0x8a680; add esp, 0x1c; ret; 
0x00091e8b: and al, 0x1c; call 0x91d40; add esp, 0x1c; ret; 
0x00093c0e: and al, 0x1c; call 0x93bb0; add esp, 0x18; pop ebx; ret; 
0x00097fab: and al, 0x1c; call 0x97790; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000996c1: and al, 0x1c; call 0x99600; add esp, 0x18; pop ebx; ret; 
0x0009911f: and al, 0x1c; call 0x99740; add esp, 0x1c; ret; 
0x000a3fe7: and al, 0x1c; call 0xa4000; add esp, 0x1c; ret; 
0x000a50e3: and al, 0x1c; call 0xa50f0; add esp, 0x1c; ret; 
0x000a694e: and al, 0x1c; call 0xa6960; add esp, 0x1c; ret; 
0x000a6b7b: and al, 0x1c; call 0xa6c40; add esp, 0x1c; ret; 
0x000a5b1d: and al, 0x1c; call 0xa9870; add esp, 0x18; pop ebx; ret; 
0x000a5a2d: and al, 0x1c; call 0xbbc50; add esp, 0x18; pop ebx; ret; 
0x000cd181: and al, 0x1c; call 0xbbd40; add esp, 0x18; pop ebx; ret; 
0x000a23bb: and al, 0x1c; call 0xbbd80; add esp, 0x18; pop ebx; ret; 
0x000a5b79: and al, 0x1c; call 0xbbdd0; add esp, 0x18; pop ebx; ret; 
0x000a5ac9: and al, 0x1c; call 0xbc300; add esp, 0x18; pop ebx; ret; 
0x001341d7: and al, 0x1c; call 0xbe130; add esp, 0x18; pop ebx; ret; 
0x000be3c3: and al, 0x1c; call 0xbe1a0; add esp, 0x1c; ret; 
0x000be597: and al, 0x1c; call 0xbe5b0; add esp, 0x1c; ret; 
0x00134477: and al, 0x1c; call 0xbfd60; add esp, 0x18; pop ebx; ret; 
0x000c05db: and al, 0x1c; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36bb: and al, 0x1c; call 0xc3e80; add esp, 0x1c; ret; 
0x000c6d3b: and al, 0x1c; call 0xc75d0; add esp, 0x1c; ret; 
0x000cb61b: and al, 0x1c; call 0xcb630; add esp, 0x1c; ret; 
0x000d22a8: and al, 0x1c; call 0xcd120; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d3ceb: and al, 0x1c; call 0xd3260; add esp, 0x18; pop ebx; ret; 
0x000e2e2f: and al, 0x1c; call 0xe2e40; add esp, 0x1c; ret; 
0x000e2eef: and al, 0x1c; call 0xe3390; add esp, 0x1c; ret; 
0x0005da65: and al, 0x1c; call dword ptr gs:[0x10]; 
0x001663f9: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00166438: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000a58d8: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000e2324: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0009a6dc: and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0012516f: and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000dfb91: and al, 0x1c; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00125fec: and al, 0x1c; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00102adc: and al, 0x1c; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001253fb: and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00097aae: and al, 0x1c; mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00094482: and al, 0x1c; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000e2e8e: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00121a56: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00061045: and al, 0x1c; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00061426: and al, 0x1c; mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x00097d6b: and al, 0x1c; mov esi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], edi; call esi; 
0x0005dac1: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x5daf0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000610da: and al, 0x1c; movzx eax, byte ptr [eax + ebp - 0x20]; mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x00084031: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x1156a0; add esp, 0x18; pop ebx; ret; 
0x0013369c: and al, 0x1c; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x0013414c: and al, 0x1c; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x00037a00: and al, 0x1c; push dword ptr [eax]; call 0xbb530; add esp, 0x1c; ret; 
0x00149edb: and al, 0x1c; push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000764ab: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x0009682d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x101ff0; add esp, 0x1c; ret; 
0x0010538f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x105180; add esp, 0x1c; ret; 
0x0011a5c7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11a470; add esp, 0x18; pop ebx; ret; 
0x00024561: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11a4f0; add esp, 0x18; pop ebx; ret; 
0x00122360: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x001290cf: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x129670; add esp, 0x1c; ret; 
0x0013061c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x130500; add esp, 0x18; pop ebx; ret; 
0x00034b4b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x34b10; add esp, 0x1c; ret; 
0x0003d25b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3d1e0; add esp, 0x1c; ret; 
0x0003e32e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3e230; add esp, 0x1c; ret; 
0x00044687: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x00047ab7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0004b2c7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x00057680: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x00057bc0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x62520; add esp, 0x1c; ret; 
0x0007a7f0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8d1: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6d6d0; add esp, 0x1c; ret; 
0x0006d6df: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6d7f0; add esp, 0x1c; ret; 
0x00074550: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x74410; add esp, 0x1c; ret; 
0x0007641b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x0007f8ae: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x787f0; add esp, 0x1c; ret; 
0x0007fb3b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x18; pop ebx; ret; 
0x000574d0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x0007fceb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x18; pop ebx; ret; 
0x000575e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x000801cb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x18; pop ebx; ret; 
0x000a6b77: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa6c40; add esp, 0x1c; ret; 
0x000a5b19: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa9870; add esp, 0x18; pop ebx; ret; 
0x000cd13d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbbc50; add esp, 0x18; pop ebx; ret; 
0x001346b6: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbbd40; add esp, 0x18; pop ebx; ret; 
0x000a5b75: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbbdd0; add esp, 0x18; pop ebx; ret; 
0x000a5ac5: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbc300; add esp, 0x18; pop ebx; ret; 
0x001341d3: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbe130; add esp, 0x18; pop ebx; ret; 
0x000be3bf: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbe1a0; add esp, 0x1c; ret; 
0x00134473: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbfd60; add esp, 0x18; pop ebx; ret; 
0x000c05d7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36b7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000c6d75: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc75d0; add esp, 0x1c; ret; 
0x000cb617: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xcb630; add esp, 0x1c; ret; 
0x000e2eeb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xe3390; add esp, 0x1c; ret; 
0x00133ff8: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x00134148: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x00096829: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x101ff0; add esp, 0x1c; ret; 
0x0010538b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x105180; add esp, 0x1c; ret; 
0x0012237b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x001290cb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129670; add esp, 0x1c; ret; 
0x0003e32a: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e230; add esp, 0x1c; ret; 
0x00044683: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x00047ab3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0004b2c3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x00057cbb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62520; add esp, 0x1c; ret; 
0x0006d6db: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d7f0; add esp, 0x1c; ret; 
0x000a6b73: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa6c40; add esp, 0x1c; ret; 
0x000be3bb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe1a0; add esp, 0x1c; ret; 
0x000c05d3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36b3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000cb613: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcb630; add esp, 0x1c; ret; 
0x00041e96: and al, 0x1c; push eax; call 0x1a0300; add esp, 0x18; pop ebx; ret; 
0x0016ee67: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00166412: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x00166460: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0016eda3: and al, 0x1c; push ebx; call eax; 
0x000df73d: and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00163e07: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0011604c: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0017081d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0008183d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x000d3e7a: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x00102d12: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102db6: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00103032: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00121816: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218c6: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x001274fb: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x001288bb: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x00133370: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x00134580: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x00144833: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cb4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x001643e7: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x0016d5e9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d689: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0017ab0a: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x001860f8: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003c98d: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003fe37: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b7: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7f9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x00091265: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912f5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a49: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f55: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x000964b0: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x0009671c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x000986a4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099d0c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x000d2d37: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d4110: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000df601: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df820: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x0009b693: and al, 0x1c; xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c04], 1; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x0016ea79: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0017d3a9: and al, 0x20; call 0x17d220; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017d3e5: and al, 0x20; call 0x17d290; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017d38d: and al, 0x20; call 0x17d2a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011ee65: and al, 0x20; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x000414c4: and al, 0x20; call 0x413e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a238d: and al, 0x20; call 0xbbcd0; add esp, 0x18; pop ebx; ret; 
0x0012517c: and al, 0x20; call dword ptr gs:[0x10]; 
0x00040b29: and al, 0x20; call eax; 
0x000d3049: and al, 0x20; call ecx; 
0x0014f8bc: and al, 0x20; lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x00117f72: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00040ad2: and al, 0x20; mov dword ptr [esp + 0x28], edx; call eax; 
0x0009448d: and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00118fb1: and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011b010: and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aac0: and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003d2e7: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003c430: and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00117f3f: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010ace0: and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017092e: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0016baa7: and al, 0x20; mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00168e49: and al, 0x20; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x000d31a3: and al, 0x20; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00128497: and al, 0x20; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124361: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00118fe7: and al, 0x20; mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0003c457: and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00121a52: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125461: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f871: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f741: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120db1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123a01: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f81: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169c1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117ba1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af60: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012548f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f89f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011f76f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120ddf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a2f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115faf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169ef: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bcf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010af87: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x001029ea: and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e2e96: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011b037: and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aae7: and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010ad07: and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00040612: and al, 0x20; push dword ptr [esi]; mov edx, dword ptr [esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001223ac: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x00132c5c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x00132ebc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x00131dbc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x0013264c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x001334ec: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x1c; ret; 
0x000d3044: and al, 0x20; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x0016d249: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0017d808: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0016d76a: and al, 0x20; push edx; push eax; call edi; 
0x001710ec: and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x0004058a: and al, 0x20; push esi; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000404cd: and al, 0x20; push esi; push dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x14]; call edx; 
0x0012d0ef: and al, 0x20; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0009a038: and al, 0x20; test ebx, ebx; js 0x9a068; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0003d6ac: and al, 0x20; test ecx, ecx; je 0x3d6d8; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0005dac5: and al, 0x20; test edi, edi; je 0x5daf0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0009f729: and al, 0x21; retf 0x488d; jmp dword ptr [ecx]; 
0x00061b32: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006c22f: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0016ead9: and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x0017fa01: and al, 0x24; call dword ptr [eax + 0x40]; 
0x000e2e9a: and al, 0x24; call dword ptr gs:[0x10]; 
0x00040c17: and al, 0x24; call eax; 
0x00137600: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x0008a5a0: and al, 0x24; mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x000dfc0d: and al, 0x24; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00040bc0: and al, 0x24; mov dword ptr [esp + 0x20], edx; call eax; 
0x001285fb: and al, 0x24; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001277d9: and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012737f: and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127980: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125465: and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f875: and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00128587: and al, 0x24; mov eax, 0x66; mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x0011f745: and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120db5: and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123a05: and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f85: and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169c5: and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117ba5: and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af64: and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x00149ee2: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00118ce4: and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001029e6: and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00125493: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011f773: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a33: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010af8b: and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0012d6ba: and al, 0x24; push 0; push 0x2000004; call eax; 
0x0014f8c5: and al, 0x24; push dword ptr [esp + 0x30]; call esi; 
0x000885c9: and al, 0x24; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00168fdb: and al, 0x24; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000c77b8: and al, 0x28; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0006077d: and al, 0x28; add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x00061b02: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006bc87: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x00165bf2: and al, 0x28; call dword ptr [eax + 0x18]; 
0x0003f87e: and al, 0x28; call dword ptr gs:[0x10]; 
0x00040ad6: and al, 0x28; call eax; 
0x00117f36: and al, 0x28; cmp ecx, 9; je 0x117f70; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00117fe6: and al, 0x28; cmp ecx, 9; je 0x118020; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012756f: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125499: and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a9: and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00050328: and al, 0x28; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00118c71: and al, 0x28; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012849f: and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00124369: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011f779: and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de9: and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a39: and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb9: and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f9: and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd9: and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x0005e28c: and al, 0x28; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0016e937: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00123365: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x001158e5: and al, 0x28; push -0x64; call 0x115900; add esp, 0x2c; ret; 
0x0005dbb3: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x00036153: and al, 0x28; push 0; call 0x360e0; add esp, 0x2c; ret; 
0x000bd8d3: and al, 0x28; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x001158e1: and al, 0x28; push dword ptr [esp + 0x28]; push -0x64; call 0x115900; add esp, 0x2c; ret; 
0x0003614f: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x360e0; add esp, 0x2c; ret; 
0x0017f883: and al, 0x28; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x000ccf4b: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0016d236: and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00168e59: and al, 0x28; push esi; call dword ptr [eax + 0xc]; 
0x0017f887: and al, 0x28; push esi; call dword ptr [ebx + 0x40]; 
0x000d6eff: and al, 0x28; test esi, esi; je 0xd6f50; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0017e531: and al, 0x29; ret; 
0x001a8476: and al, 0x29; ror byte ptr [ebx - 0x76cbdb8c], 1; ret 0x448b; 
0x00060ab6: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x001032af: and al, 0x2c; call 0x104540; add esp, 0x2c; ret; 
0x001158b9: and al, 0x2c; call 0x115900; add esp, 0x2c; ret; 
0x00119f7d: and al, 0x2c; call 0x11a280; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011a847: and al, 0x2c; call 0x11a750; add esp, 0x28; pop ebx; ret; 
0x0011a9df: and al, 0x2c; call 0x11a860; add esp, 0x28; pop ebx; ret; 
0x00120891: and al, 0x2c; call 0x120b90; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0012f0bb: and al, 0x2c; call 0x12ee90; add esp, 0x28; pop ebx; ret; 
0x00139771: and al, 0x2c; call 0x138c50; add esp, 0x2c; ret; 
0x00139897: and al, 0x2c; call 0x1397a0; add esp, 0x2c; ret; 
0x0013a01f: and al, 0x2c; call 0x139a60; add esp, 0x2c; ret; 
0x0018638d: and al, 0x2c; call 0x156c70; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0018644d: and al, 0x2c; call 0x159670; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0016e169: and al, 0x2c; call 0x16dfb0; add esp, 0x2c; ret; 
0x00157bd9: and al, 0x2c; call 0x17ab80; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0017c4e1: and al, 0x2c; call 0x17c380; add esp, 0x28; pop ebx; ret; 
0x00034b27: and al, 0x2c; call 0x357f0; add esp, 0x2c; ret; 
0x00036127: and al, 0x2c; call 0x360e0; add esp, 0x2c; ret; 
0x00040c57: and al, 0x2c; call 0x40830; add esp, 0x2c; ret; 
0x000427b5: and al, 0x2c; call 0x427c0; add esp, 0x2c; ret; 
0x0004ab81: and al, 0x2c; call 0x4ac10; add esp, 0x2c; ret; 
0x0004e5f1: and al, 0x2c; call 0x4e680; add esp, 0x2c; ret; 
0x0004ef91: and al, 0x2c; call 0x4f020; add esp, 0x2c; ret; 
0x0004f661: and al, 0x2c; call 0x4f6f0; add esp, 0x2c; ret; 
0x0007764b: and al, 0x2c; call 0x77470; add esp, 0x2c; ret; 
0x0005dbb9: and al, 0x2c; call 0x78d80; add esp, 0x2c; ret; 
0x00079f97: and al, 0x2c; call 0x79db0; add esp, 0x28; pop ebx; ret; 
0x0007a9f3: and al, 0x2c; call 0x7a910; add esp, 0x28; pop ebx; ret; 
0x0007a81b: and al, 0x2c; call 0x7a910; add esp, 0x2c; ret; 
0x0005db8b: and al, 0x2c; call 0x7fdf0; add esp, 0x2c; ret; 
0x00085d2f: and al, 0x2c; call 0x85c50; add esp, 0x28; pop ebx; ret; 
0x0008afe5: and al, 0x2c; call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x0008ebd3: and al, 0x2c; call 0x8ec00; add esp, 0x2c; ret; 
0x000996f7: and al, 0x2c; call 0x999f0; add esp, 0x2c; ret; 
0x00099727: and al, 0x2c; call 0x99cb0; add esp, 0x2c; ret; 
0x000bdd6c: and al, 0x2c; call 0xbdd80; add esp, 0x2c; ret; 
0x000c65a1: and al, 0x2c; call 0xc6630; add esp, 0x2c; ret; 
0x000c9cc1: and al, 0x2c; call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5b1: and al, 0x2c; call 0xca640; add esp, 0x2c; ret; 
0x000cace1: and al, 0x2c; call 0xcad70; add esp, 0x2c; ret; 
0x000d7a7d: and al, 0x2c; call 0xd7b80; add esp, 0x2c; ret; 
0x000dadcf: and al, 0x2c; call 0xdd110; add esp, 0x2c; ret; 
0x000dae0f: and al, 0x2c; call 0xdf450; add esp, 0x2c; ret; 
0x000e879d: and al, 0x2c; call 0xe7ff0; add esp, 0x28; pop ebx; ret; 
0x000e86d5: and al, 0x2c; call 0xe8620; add esp, 0x28; pop ebx; ret; 
0x00157be5: and al, 0x2c; call eax; 
0x0012010f: and al, 0x2c; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x120140; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00099f61: and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0010c3e4: and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001261d2: and al, 0x2c; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000d6dbf: and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00097ae2: and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001264ea: and al, 0x2c; push -0x64; call 0x115900; add esp, 0x20; add esp, 0xc; ret; 
0x001045cb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x104540; add esp, 0x2c; ret; 
0x001158b5: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x115900; add esp, 0x2c; ret; 
0x0011a843: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11a750; add esp, 0x28; pop ebx; ret; 
0x0011a9db: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11a860; add esp, 0x28; pop ebx; ret; 
0x0012f0b7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x12ee90; add esp, 0x28; pop ebx; ret; 
0x00139893: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1397a0; add esp, 0x2c; ret; 
0x0013a01b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x139a60; add esp, 0x2c; ret; 
0x0016e165: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x16dfb0; add esp, 0x2c; ret; 
0x00034b23: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x00036123: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x360e0; add esp, 0x2c; ret; 
0x00040c53: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x40830; add esp, 0x2c; ret; 
0x00043f5b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x427c0; add esp, 0x2c; ret; 
0x0004abbb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4ac10; add esp, 0x2c; ret; 
0x0004e62b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4e680; add esp, 0x2c; ret; 
0x0004efcb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4f020; add esp, 0x2c; ret; 
0x0004f69b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4f6f0; add esp, 0x2c; ret; 
0x00077647: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x77470; add esp, 0x2c; ret; 
0x00079f93: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x79db0; add esp, 0x28; pop ebx; ret; 
0x0007a9ef: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x28; pop ebx; ret; 
0x0007a817: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0005db87: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7fdf0; add esp, 0x2c; ret; 
0x00085d2b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x85c50; add esp, 0x28; pop ebx; ret; 
0x0008ebcf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8ec00; add esp, 0x2c; ret; 
0x000996f3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x999f0; add esp, 0x2c; ret; 
0x00099723: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x99cb0; add esp, 0x2c; ret; 
0x000bdd68: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xbdd80; add esp, 0x2c; ret; 
0x000c65db: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xc6630; add esp, 0x2c; ret; 
0x000c9cfb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5eb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xca640; add esp, 0x2c; ret; 
0x000cad1b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcad70; add esp, 0x2c; ret; 
0x000d7a79: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd7b80; add esp, 0x2c; ret; 
0x000dae0b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xdf450; add esp, 0x2c; ret; 
0x000e8799: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe7ff0; add esp, 0x28; pop ebx; ret; 
0x000e86d1: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe8620; add esp, 0x28; pop ebx; ret; 
0x001045c7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x104540; add esp, 0x2c; ret; 
0x0013988f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1397a0; add esp, 0x2c; ret; 
0x0013a017: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x139a60; add esp, 0x2c; ret; 
0x0016e161: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x16dfb0; add esp, 0x2c; ret; 
0x000360f3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x0003611f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x360e0; add esp, 0x2c; ret; 
0x00040c4f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x40830; add esp, 0x2c; ret; 
0x00043f57: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x427c0; add esp, 0x2c; ret; 
0x0004abb7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4ac10; add esp, 0x2c; ret; 
0x0004e627: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4e680; add esp, 0x2c; ret; 
0x0004efc7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4f020; add esp, 0x2c; ret; 
0x0004f697: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4f6f0; add esp, 0x2c; ret; 
0x00077643: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x77470; add esp, 0x2c; ret; 
0x0007a813: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0005db83: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7fdf0; add esp, 0x2c; ret; 
0x000996ef: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x999f0; add esp, 0x2c; ret; 
0x000bdd64: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xbdd80; add esp, 0x2c; ret; 
0x000c65d7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc6630; add esp, 0x2c; ret; 
0x000c9cf7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5e7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xca640; add esp, 0x2c; ret; 
0x000cad17: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcad70; add esp, 0x2c; ret; 
0x000d7a75: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd7b80; add esp, 0x2c; ret; 
0x000dae07: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdf450; add esp, 0x2c; ret; 
0x000bffd9: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000bdc29: and al, 0x2c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000880e6: and al, 0x2c; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0013976c: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x138c50; add esp, 0x2c; ret; 
0x00083f8f: and al, 0x2c; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0016e082: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x0009463d: and al, 0x2c; push edx; call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x00088420: and al, 0x2c; push edx; push ecx; push edi; call eax; 
0x00117820: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a0: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x0011b1d5: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x00123369: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x00096221: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x0009a2da: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x000d2e04: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d44b4: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000e0a22: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000c404b: and al, 0x30; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x00061aa2: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006ce53: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0003a62d: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0012d574: and al, 0x30; add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [edi + 0x14]; 
0x001243c7: and al, 0x30; call 0x124320; add esp, 0x2c; ret; 
0x0005e290: and al, 0x30; call eax; 
0x001550fa: and al, 0x30; call ecx; 
0x0014f8c9: and al, 0x30; call esi; 
0x00076504: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000d6c16: and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00128033: and al, 0x30; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001159bb: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115abe: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00119335: and al, 0x30; mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001147fc: and al, 0x30; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001218af: and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001217ff: and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00102d9f: and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00102f54: and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102ea4: and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010301b: and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cfb: and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010bab6: and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00127722: and al, 0x30; mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127868: and al, 0x30; mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f8d1: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120201: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011fbc7: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204f7: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d47: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f07: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00124da2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001052c3: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115c5b: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d61: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00125df2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126402: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f89e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fb9a: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001201ce: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204ca: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00128232: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f2d1b: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2edb: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115c97: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115d97: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00125eda: and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010baf7: and al, 0x30; mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001156ce: and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016c57e: and al, 0x30; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x00185faf: and al, 0x30; mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00129749: and al, 0x30; mov edx, dword ptr [esp + 0x38]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001159fc: and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115afc: and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00025d49: and al, 0x30; push dword ptr [ebx + 4]; call edi; 
0x00111a5c: and al, 0x30; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00111e01: and al, 0x30; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00151997: and al, 0x30; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0015199b: and al, 0x30; push dword ptr [esp + 0x3c]; call esi; 
0x00088258: and al, 0x30; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000bdea4: and al, 0x30; push ebp; call edi; 
0x00133ada: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x0008832f: and al, 0x30; push edx; push ecx; call eax; 
0x00168e75: and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x00126f7f: and al, 0x31; shr byte ptr [edx], 0x8d; xchg eax, eax; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00099f65: and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016b404: and al, 0x34; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0006bfec: and al, 0x34; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006ce2a: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006c023: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [edi + eax*4 - 0x727d4]; add ecx, ebx; jmp ecx; 
0x00152f1e: and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00128a18: and al, 0x34; call dword ptr gs:[0x10]; 
0x0002f09a: and al, 0x34; call eax; 
0x001277d5: and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00185fb3: and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0011f8d5: and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120205: and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00128a48: and al, 0x34; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011fbcb: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204fb: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d4b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f0b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00124da6: and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001052c7: and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115c5f: and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d65: and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00125df6: and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126406: and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f8a2: and al, 0x34; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fb9e: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001201d2: and al, 0x34; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204ce: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00128236: and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012772a: and al, 0x34; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129755: and al, 0x34; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f2d1f: and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2edf: and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000d6c12: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00125ed6: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00124ddb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00125e2b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012643b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012826b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0016e8c7: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00115c9b: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115d9b: and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0005e288: and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000bdea0: and al, 0x34; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x000bdfc9: and al, 0x34; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x000c036d: and al, 0x34; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0007e104: and al, 0x34; push eax; call ebx; 
0x000ccf50: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000bdb70: and al, 0x34; push eax; push ebp; call esi; 
0x0016c553: and al, 0x34; push ebx; call dword ptr [eax + 0x14]; 
0x00133e78: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x00164c2f: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00061b22: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000f2d28: and al, 0x38; call dword ptr gs:[0x10]; 
0x001549fb: and al, 0x38; call eax; 
0x0012974d: and al, 0x38; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00127a92: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127870: and al, 0x38; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001274e0: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012803a: and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f8dd: and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012020d: and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x001277dd: and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128a06: and al, 0x38; mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000f2d53: and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f13: and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0010b7d9: and al, 0x38; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00087f51: and al, 0x38; mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x001179d9: and al, 0x38; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117188: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00097adc: and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001052d0: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00105301: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00124de1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00125e31: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00126441: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00128271: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001156c8: and al, 0x38; mov esi, esp; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00085ab2: and al, 0x38; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x001607bd: and al, 0x38; push 2; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x000bffdd: and al, 0x38; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0014f8c0: and al, 0x38; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x000837cb: and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00081ffb: and al, 0x38; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00081c94: and al, 0x38; push ebp; call dword ptr [eax + 0x1c]; 
0x000bdc31: and al, 0x38; push ebp; call esi; 
0x0016c566: and al, 0x38; push ebx; call dword ptr [eax + 4]; 
0x00079d85: and al, 0x38; push edi; call dword ptr [eax + 0x1c]; 
0x0016eeae: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000bd8ce: and al, 0x38; push edx; push dword ptr [esp + 0x28]; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0017f70f: and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00168ea7: and al, 0x38; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000d1e22: and al, 0x39; dec edi; and al, 0x75; js 0xd1e88; pop esi; ret; 
0x0017033e: and al, 0x39; ret 0x3574; 
0x0017bf23: and al, 0x39; ret 0x820f; 
0x0013ff08: and al, 0x39; ret 0x977e; 
0x000a0548: and al, 0x39; ret; 
0x00141cbc: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000f5d37: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x00131c22: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x001434ed: and al, 0x3b; add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x00061ad2: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006c177: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0013dc47: and al, 0x3c; call 0x13d500; add esp, 0x3c; ret; 
0x001607c3: and al, 0x3c; call 0x1605f0; add esp, 0x3c; ret; 
0x0016cff7: and al, 0x3c; call 0x16cd00; add esp, 0x3c; ret; 
0x001052d4: and al, 0x3c; call dword ptr gs:[0x10]; 
0x0003e9e2: and al, 0x3c; call eax; 
0x0002f1ca: and al, 0x3c; call esi; 
0x00061a96: and al, 0x3c; jmp 0x60e62; lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x0009a6b9: and al, 0x3c; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0012742a: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00105305: and al, 0x3c; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00124de5: and al, 0x3c; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0009a404: and al, 0x3c; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00125e35: and al, 0x3c; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00126445: and al, 0x3c; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00128275: and al, 0x3c; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001156d2: and al, 0x3c; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0002f096: and al, 0x3c; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00117190: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00128a14: and al, 0x3c; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000bd5b4: and al, 0x3c; push dword ptr [eax]; call edi; 
0x000bdc2d: and al, 0x3c; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0013dc43: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x13d500; add esp, 0x3c; ret; 
0x001607f1: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x0016cff3: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x16cd00; add esp, 0x3c; ret; 
0x0002f1c6: and al, 0x3c; push dword ptr [esp + 0x3c]; call esi; 
0x0002f092: and al, 0x3c; push dword ptr [esp + 0x3c]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0013dc3f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x13d500; add esp, 0x3c; ret; 
0x001607ed: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x0016cfef: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x16cd00; add esp, 0x3c; ret; 
0x00084646: and al, 0x3c; push ebp; call dword ptr [esi + 0x20]; 
0x0016d3ee: and al, 0x3c; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008825c: and al, 0x3c; push ecx; call eax; 
0x000be2f6: and al, 0x3c; push ecx; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000880ea: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x000843e5: and al, 0x3c; push esi; call dword ptr [ebp + 0x38]; 
0x0016e946: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea26: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea89: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eae9: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb56: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0011524b: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x0016e8d6: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x000d2e64: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x0006ce1a: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006c1c2: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006d2d0: and al, 0x40; add dword ptr [ebx - 0x16afdb94], ecx; sal ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00024e02: and al, 0x40; call dword ptr [ebp]; 
0x0002a2b9: and al, 0x40; call eax; 
0x00024da0: and al, 0x40; call ecx; 
0x00024d49: and al, 0x40; call esi; 
0x00118e5c: and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014e198: and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00127b5b: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001283e2: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dfa45: and al, 0x40; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00089dfd: and al, 0x40; mov eax, dword ptr [ebp]; mov ebx, dword ptr [ebp + 4]; mov ecx, dword ptr [ebp + 8]; mov edx, dword ptr [ebp + 0xc]; call dword ptr gs:[0x10]; 
0x00163f3b: and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00060b70: and al, 0x40; mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000df6db: and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099b53: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009987b: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad4: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099801: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0011718c: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00060e82: and al, 0x40; or byte ptr [edi], cl; xchg esp, eax; ret; 
0x0012d0eb: and al, 0x40; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024dfe: and al, 0x40; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024d9c: and al, 0x40; push dword ptr [esp + 0x40]; call ecx; 
0x00024d45: and al, 0x40; push dword ptr [esp + 0x40]; call esi; 
0x000bcb00: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x0007d477: and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c0371: and al, 0x40; push ebp; call esi; 
0x00099527: and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006147c: and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00061a22: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0002dc26: and al, 0x44; call eax; 
0x000dfa34: and al, 0x44; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xdfaf0; mov ebx, dword ptr [esp + 0x40]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0007be63: and al, 0x44; dec dword ptr [edi]; xchg esp, eax; ret; 
0x0006cdfe: and al, 0x44; jmp 0x6c301; lea esi, [esi]; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x001283ea: and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125c24: and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x001549f7: and al, 0x44; mov eax, dword ptr [esp + 0x38]; call eax; 
0x00118e58: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000df6d7: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000be269: and al, 0x44; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0008d5f3: and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0016ae48: and al, 0x48; call dword ptr [eax + 0x10]; 
0x0016ace6: and al, 0x48; call dword ptr [eax + 0x14]; 
0x000284e5: and al, 0x48; call eax; 
0x00099b57: and al, 0x48; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009987f: and al, 0x48; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad8: and al, 0x48; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099805: and al, 0x48; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00164f1c: and al, 0x48; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000998d7: and al, 0x48; mov ebp, eax; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009991f: and al, 0x48; mov ebp, eax; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00099ba6: and al, 0x48; mov ebp, eax; mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bee: and al, 0x48; mov ebp, eax; mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00128b07: and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00078681: and al, 0x48; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0014f5ed: and al, 0x48; push dword ptr [esp + 0x10]; call edi; 
0x0014f5e9: and al, 0x48; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0016518a: and al, 0x48; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00099ae1: and al, 0x4c; call dword ptr gs:[0x10]; 
0x0016518f: and al, 0x4c; call eax; 
0x00099bac: and al, 0x4c; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf4: and al, 0x4c; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00165255: and al, 0x4c; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00088a15: and al, 0x4c; sldt word ptr [ecx + 0x1a841bc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x00148242: and al, 0x4e; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x0003c228: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d2: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000a30e6: and al, 0x50; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbb4], cl; ret 0xf089; 
0x000a6635: and al, 0x50; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x000289f3: and al, 0x50; call eax; 
0x000dfb8d: and al, 0x50; lea ecx, [esp + 0x1c]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00128b0b: and al, 0x50; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00128b57: and al, 0x50; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0006c2af: and al, 0x50; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x00129574: and al, 0x50; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00102ad4: and al, 0x50; mov esi, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001549f3: and al, 0x50; push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x000885ca: and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00102ad8: and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001167d4: and al, 0x54; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116754: and al, 0x54; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0002a2b5: and al, 0x54; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00116828: and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011686c: and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0002a2b1: and al, 0x54; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00029d62: and al, 0x54; push dword ptr [esp + 0x5c]; call edi; 
0x000bd5af: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x00152499: and al, 0x57; add byte ptr [eax - 0x73], dl; or esp, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x000c666e: and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00128493: and al, 0x58; mov dword ptr [esp + 0x20], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129578: and al, 0x58; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0002dc22: and al, 0x58; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002dc1e: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x001581ca: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000284dd: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d44: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x001581ce: and al, 0x58; push esi; call edi; 
0x00094bf0: and al, 0x59; add dword ptr [eax], eax; add byte ptr [ebx - 0x17a8f314], al; xor ah, byte ptr [eax - 0x3b7cfff8]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0011ba23: and al, 0x5a; stc; call dword ptr [eax - 0x73]; 
0x00087f58: and al, 0x5b; pop esi; jmp eax; 
0x000d4592: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0003d243: and al, 0x5b; pop esi; ret; 
0x00154a3e: and al, 0x5c; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; aaa; ret; 
0x0016525a: and al, 0x5c; call eax; 
0x00029d66: and al, 0x5c; call edi; 
0x000d3040: and al, 0x5c; mov dword ptr [esp + 0x20], ecx; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x0016e8c3: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0002ad8b: and al, 0x5c; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000284d9: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ad87: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000290cd: and al, 0x5c; push dword ptr [esp + 0x64]; call edi; 
0x000d319e: and al, 0x5c; push ebx; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0014b8f8: and al, 0x5c; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00104ee0: and al, 0x5c; sub edx, dword ptr gs:[0x14]; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x000a3955: and al, 0x60; add al, 0; add byte ptr [ecx], al; ret; 
0x0002bacf: and al, 0x60; call esi; 
0x00119486: and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000d6dbb: and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x001285f7: and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012849b: and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ebc3: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012574e: and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010b8de: and al, 0x60; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b858: and al, 0x60; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00169099: and al, 0x60; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000284e1: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x001261ca: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012625a: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00126118: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010b957: and al, 0x60; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000d6e32: and al, 0x60; mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0010b9a3: and al, 0x60; mov edx, dword ptr [esp + 8]; mov ecx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00125fe4: and al, 0x60; mov esi, dword ptr [esp + 0x64]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001179dd: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117923: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003dc79: and al, 0x60; or byte ptr [eax], al; add byte ptr [ebx + 0x708d04ec], al; call dword ptr [esi + 0x57]; 
0x000290c9: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002bacb: and al, 0x60; push dword ptr [esp + 0x60]; call esi; 
0x000289eb: and al, 0x60; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000290d1: and al, 0x64; call edi; 
0x000d3c5a: and al, 0x64; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d386f: and al, 0x64; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x00125fe8: and al, 0x64; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001261ce: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000c0259: and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000bdb6c: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012625e: and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012611c: and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0002d07b: and al, 0x64; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00119482: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012574a: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000289e7: and al, 0x64; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002d077: and al, 0x64; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000d3a9c: and al, 0x64; push dword ptr [esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000888c8: and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0012cc68: and al, 0x65; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000fc2c4: and al, 0x67; add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x000d387b: and al, 0x68; call eax; 
0x0012771e: and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000289ef: and al, 0x68; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002488c: and al, 0x69; stc; call dword ptr [eax - 0x18]; 
0x001179e1: and al, 0x6c; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117927: and al, 0x6c; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00136755: and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x00029d5d: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002dc19: and al, 0x6c; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0005bea1: and al, 0x6c; sub eax, dword ptr gs:[0x14]; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x00109b93: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x001289be: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x0005dd7e: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x000e8b43: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4c3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec223: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb23: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef873: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x00116cfc: and al, 0x70; lea edx, [esp + 8]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c59c: and al, 0x70; lea edx, [esp + 8]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000d3aa0: and al, 0x70; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0002a2ac: and al, 0x70; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x001590c1: and al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x0005f583: and al, 0x71; js 0x5f510; ret 0xc689; 
0x00118ce8: and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0009a400: and al, 0x74; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009a472: and al, 0x74; mov eax, 0x104; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009a329: and al, 0x74; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00116cf8: and al, 0x74; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c598: and al, 0x74; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000dff18: and al, 0x74; mov edx, ebp; mov edi, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dfcf8: and al, 0x74; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dfd70: and al, 0x74; mov edx, edi; call dword ptr gs:[0x10]; 
0x000dfe27: and al, 0x74; mov edx, edi; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000dfe94: and al, 0x74; mov esi, dword ptr [esp + 8]; mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfdf7: and al, 0x74; mov esi, dword ptr [esp + 8]; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00164250: and al, 0x74; push eax; call dword ptr [ecx]; 
0x0003d670: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000d1e25: and al, 0x75; js 0xd1e88; pop esi; ret; 
0x00118c6d: and al, 0x78; lea edx, [esp + 0x28]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00123f15: and al, 0x78; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002f1c1: and al, 0x78; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x00123f1f: and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001a7fb7: and al, 0x80; add byte ptr [eax], al; add bh, dh; ret 0; 
0x001a525a: and al, 0x80; add byte ptr [eax], al; add bh, dh; ret; 
0x0005ed02: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x3910247c], cl; ret; 
0x00104fe9: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000d353f: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x0005ca34: and al, 0x80; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x001a6773: and al, 0x80; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x001a58f6: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x000485b1: and al, 0x80; cli; jo 0x4853f; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x000334d0: and al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00168e89: and al, 0x83; in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x00163f55: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x00130b1b: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x130b53; call eax; 
0x000e067d: and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x00039ab2: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00085abb: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00177203: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00078415: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000e08d6: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d545b: and al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003aa34: and al, 0x83; les ecx, ptr [eax]; ret; 
0x0003f0dc: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00134ddf: and al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0007868a: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d53e7: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00118ef4: and al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00136220: and al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f9cc7: and al, 0x83; ret 0x3904; 
0x000cb595: and al, 0x83; ret; 
0x0013fc60: and al, 0x83; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0006d1e1: and al, 0x84; add byte ptr [eax], al; add al, ch; xchg ebp, eax; ret; 
0x00125002: and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00124fc6: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015e92c: and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000400dc: and al, 0x85; stc; call dword ptr [eax - 0x73]; 
0x00104ff5: and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; call dword ptr gs:[0x10]; 
0x00145e44: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x00069c82: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx + 0x3918246c], cl; ret; 
0x001173ff: and al, 0x88; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x00057f84: and al, 0x88; stc; call dword ptr [eax - 0x18]; 
0x00137601: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0008a5a1: and al, 0x89; add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00135471: and al, 0x89; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x001225a3: and al, 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x000fbe0b: and al, 0x89; div esi; ret; 
0x00127460: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0010bc8d: and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000dfc0e: and al, 0x89; inc esp; and al, 0x18; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x001285fc: and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001277da: and al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0005219e: and al, 0x89; inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00127380: and al, 0x89; inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127981: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00033748: and al, 0x89; or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x7f4]; test eax, eax; je 0x33759; call eax; 
0x00040bc1: and al, 0x89; push esp; and al, 0x20; call eax; 
0x00121592: and al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00056d41: and al, 0x89; ret 0x13eb; 
0x0009703c: and al, 0x89; ret 0x4c89; 
0x0010af8c: and al, 0x89; ret 0x8b8; 
0x00093750: and al, 0x89; ret 0xc189; 
0x00119a6d: and al, 0x89; ret 0xc483; 
0x0008f3cb: and al, 0x89; ret 0xdae9; 
0x00035f89: and al, 0x89; ret; 
0x000e00be: and al, 0x89; stc; mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0014865d: and al, 0x89; sti; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0008339c: and al, 0x8b; adc esi, esi; ret 0xf08; 
0x00034235: and al, 0x8b; add al, 0x90; ret; 
0x00052a47: and al, 0x8b; add byte ptr [ecx - 0x76e7dbbc], cl; ret 0xe283; 
0x000f4803: and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x0010139a: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x001013af: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00149ee3: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0012737c: and al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001280fc: and al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00157be2: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00128037: and al, 0x8b; inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00118ce5: and al, 0x8b; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001649a6: and al, 0x8b; je 0x1649ce; and byte ptr [ebp - 0xc04a380], cl; jmp dword ptr [ebp - 0x75]; 
0x0004037a: and al, 0x8b; je 0x403a2; sub byte ptr [ebp - 0x1c3e1fbe], cl; add eax, 0x29e0e183; fmul dword ptr [ebp - 0x76dff18c]; ret 0xd285; 
0x0004861b: and al, 0x8b; je 0x48643; cmp al, 1; ret 0xf229; 
0x000dffe4: and al, 0x8b; je 0xe000c; or byte ptr [eax + 0x197], bh; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000e006c: and al, 0x8b; je 0xe0094; or byte ptr [eax + 0x197], bh; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x001029e7: and al, 0x8b; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016e931: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0004f7db: and al, 0x8b; pushfd; ret 0x8d2c; 
0x000342c6: and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x0014f506: and al, 0x8b; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001a3386: and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x0004715a: and al, 0x8c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x001a66c7: and al, 0x8c; add byte ptr [eax], al; add byte ptr [ecx - 0x2ef3dba4], cl; call 0x891f2959; ret; 
0x00171629: and al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00147104: and al, 0x8d; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0012ede2: and al, 0x8d; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012edbf: and al, 0x8d; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0010989f: and al, 0x8d; xchg esp, edx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0014f509: and al, 0x90; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x00099444: and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0006cd84: and al, 0x90; add byte ptr [eax], al; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x001250d6: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001550f1: and al, 0x94; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x00096dc1: and al, 0x97; stc; call dword ptr [eax - 0x18]; 
0x00128c62: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x10019], al; jmp dword ptr [ebp - 0x5f]; 
0x000c78ac: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000c11f4: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x4fbb7226], cl; add al, 0x81; ret 0; 
0x0004db86: and al, 0x9c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x000c8f0d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x0004682d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c290d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x001250dd: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x00094390: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ff9b4: and al, 0xa0; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000c4144: and al, 0xa0; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000c20db: and al, 0xa0; add byte ptr [eax], al; add cl, ch; cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x0016ed9c: and al, 0xa4; add byte ptr [eax], al; add bh, bh; je 0x16edc8; sbb al, 0x53; call eax; 
0x000c9744: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx + 0x39302444], cl; ret; 
0x0010b241: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0009f5d9: and al, 0xa6; stc; call dword ptr [eax - 0x18]; 
0x0010b372: and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0010b248: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103b23: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00154a75: and al, 0xac; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; jl 0x154aa2; sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x00046df9: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x76cfdb8c], cl; ret; 
0x0004d3bd: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x00095067: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000e38aa: and al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x0010b572: and al, 0xb0; add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000d3c5e: and al, 0xb4; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x0004d88d: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x76bfdb8c], cl; ret; 
0x0009805f: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117ba6: and al, 0xb8; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b579: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0010b503: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0003d2e0: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00128588: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x76ebdb8c], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x001169c6: and al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f876: and al, 0xb8; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af65: and al, 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dfe2d: and al, 0xb8; or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00134abb: and al, 0xb8; stc; call dword ptr [eax - 0x73]; 
0x00115f86: and al, 0xb8; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0008c218: and al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000c15eb: and al, 0xba; xor eax, 0x29000000; ret 0x850f; 
0x0010c3dd: and al, 0xbc; add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00105c61: and al, 0xc0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0009ac28: and al, 0xc4; or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00171cfa: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0003f8d0: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013d383: and al, 0xc; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0003c485: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d948: and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00076521: and al, 0xc; add esp, 0x1c; ret; 
0x000a24ee: and al, 0xc; call 0xa23d0; add esp, 0xc; test eax, eax; jne 0xa2503; ret; 
0x000a0ac0: and al, 0xc; call dword ptr [edx]; 
0x000893d9: and al, 0xc; call dword ptr gs:[0x10]; 
0x0012506b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001252eb: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x0012666b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x000893d9: and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0004242d: and al, 0xc; cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x000e1450: and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0003ac47: and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003aaa9: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003ac86: and al, 0xc; fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00171464: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad1: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0008ee16: and al, 0xc; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0017d1e1: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x0008a558: and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003e70f: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0013674e: and al, 0xc; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000df6a2: and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00127726: and al, 0xc; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012786c: and al, 0xc; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a1f2: and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00116ae0: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00125f2a: and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00127d63: and al, 0xc; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012533f: and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00127d1d: and al, 0xc; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00126bd0: and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x001274e4: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d6c1a: and al, 0xc; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00126cb0: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001155fd: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00125372: and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001265cd: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012524d: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00124fcd: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000f2cd2: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011cc40: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5d0: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab70: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00093951: and al, 0xc; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009292d: and al, 0xc; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011c066: and al, 0xc; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00126810: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000a0a02: and al, 0xc; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00165b72: and al, 0xc; mov eax, dword ptr [ebx + ecx*4 - 0x118]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0003a784: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0004058f: and al, 0xc; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017add2: and al, 0xc; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0005da07: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126e97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126967: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115857: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117797: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117267: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b097: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b07: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126877: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad87: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b67: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119977: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b07: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126787: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c87: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115297: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8887: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e907: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e627: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0008ef3a: and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008ef75: and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008c5ca: and al, 0xc; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007645b: and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00129cea: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00094e9a: and al, 0xc; mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x94eb0; ret; 
0x00093bbb: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000404d2: and al, 0xc; mov edx, dword ptr [esp + 0x14]; call edx; 
0x0011f8d9: and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120209: and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00103c7b: and al, 0xc; mov esi, 8; call dword ptr gs:[0x10]; 
0x000998dd: and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099925: and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0009285f: and al, 0xc; mov esi, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003a572: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000878ae: and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000ba224: and al, 0xc; pop ebx; pop esi; ret; 
0x0019eea4: and al, 0xc; pop edi; ret; 
0x00040618: and al, 0xc; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0003e9de: and al, 0xc; push dword ptr [esp + 0x3c]; call eax; 
0x00024d98: and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x001581c6: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0017ec27: and al, 0xc; push ebx; call dword ptr [ebp + 0x3c]; 
0x00081ebc: and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x001714a0: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00171468: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad5: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a88: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000df8b7: and al, 0xc; push edx; push ebx; call eax; 
0x00170e1d: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0002b9e0: and al, 0xc; push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0005865e: and al, 0xc; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0014c5e7: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016f0b4: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f103: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x0003af73: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd26: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003e759: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e87c: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0002554a: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x00118f53: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b5f3: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11b602; add esp, 0x1c; ret; 
0x0011cce4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00123808: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x00127620: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x0012799b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286ab: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287c4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128830: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x0013e99a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9f6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea45: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13ea54; add esp, 0x1c; ret; 
0x00140ee1: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x0016a26a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4bf: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d9d9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da52: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x001708ce: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709be: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c75: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d05: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170db4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e39: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ecb: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x00171705: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x00171795: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x00171825: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718b5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171fad: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x0017200d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x00172076: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x00172126: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177102: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00178c8e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d06: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017d26e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800d4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185d80: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x0003fa5c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc79: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff49: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffcc: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f28: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000577f3: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x0009697c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x000bf529: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d2db9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd14d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df48d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000e788c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe78a7; add esp, 0x1c; ret; 
0x0017109d: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x001231be: and al, 0xc; test eax, eax; je 0x1231c8; test edx, edx; jne 0x1231d0; ret; 
0x00089408: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089408: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0003d733: and al, 0xc; xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0017f755: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00123dfd: and al, 0xd4; add byte ptr [eax], al; add byte ptr [ebx + 0xd0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003ace1: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003ac8a: and al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0006cd81: and al, 0xdb; mov esp, 0x9024; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d2e93: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x0003aa31: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x00120928: and al, 0xdf; jmp 0x8321e20c; or eax, 0xb8000001; adc eax, 0x39000000; ret 0x4e0f; 
0x0007aaf8: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6df7d], cl; call dword ptr [eax - 0x73]; 
0x000fca57: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000a14e7: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x6575f80], cl; call dword ptr [eax + 0x68]; 
0x000d3be0: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000a1e4a: and al, 0xe8; add byte ptr [edx], dl; clc; call dword ptr [ebp - 1]; 
0x0012cc66: and al, 0xe8; and al, 0x65; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f4da6: and al, 0xe8; in al, 0xe3; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009e638: and al, 0xe8; ret 0xffee; 
0x000f1888: and al, 0xe8; ret 7; 
0x00035ecf: and al, 0xe8; ret; 
0x00097d72: and al, 0xe8; sbb byte ptr [eax + edi*8 + 0x243c89ff], dh; call esi; 
0x000f4ab8: and al, 0xe8; shl dh, cl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d58df: and al, 0xe8; sti; ret 0xfffa; 
0x000a1504: and al, 0xe8; xchg cl, bh; std; jmp dword ptr [esi - 0x70]; 
0x0016b8b3: and al, 0xe8; xlatb; js 0x16b8a3; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000d3873: and al, 0xec; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x0016ccb5: and al, 0xf0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0010297c: and al, 0xf2; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010299c: and al, 0xf2; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000a0fde: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x657a380], cl; call dword ptr [eax + 0x68]; 
0x000c5a0c: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xef39; 
0x00049fe8: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xf539; 
0x0016004b: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000e20a1: and al, 0xf4; jmp dword ptr [esi - 0x70]; 
0x00142532: and al, 0xf; add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esi; ret; 
0x000fbef2: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000c241c: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0017bc47: and al, 0xf; test dword ptr [esi + 0xf000002], esp; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0003eff0: and al, 0xf; xchg ebp, eax; ret 0xca21; 
0x0009e5d9: and al, 0xf; xchg ebp, eax; ret 0xe383; 
0x000e487f: and al, 0xf; xchg esp, eax; ret 0xd309; 
0x0016719c: and al, 0xf; xchg esp, eax; ret; 
0x0009183e: and al, 0xfa; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xb073; 
0x0018b1ee: and al, 0xff; inc dword ptr [ecx + 0x434a7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b155: and al, 0xff; inc dword ptr [ecx + 0x43540c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014f5e6: and al, 0xff; je 0x14f60e; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001751f4: and al, 0xff; je 0x17521c; jo 0x175223; ret; 
0x00099294: and al, 0xff; rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x000be1e6: and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0008ade4: and al, 1; add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x0012696e: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c063: and al, 1; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000bc927: and al, 1; add byte ptr [eax], al; ret; 
0x00084ef6: and al, 1; ret 0x5689; 
0x00136a98: and al, 1; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x0008cb55: and al, 2; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000acdb8: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008b56f: and al, 2; nop; xor eax, eax; pop ebx; pop edi; ret; 
0x000a6aba: and al, 3; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0018c4e3: and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00171cd6: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00137866: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0008a8a2: and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000818f6: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000342d6: and al, 4; and eax, 0x7f; ret; 
0x00135436: and al, 4; bswap eax; ret; 
0x0009980e: and al, 4; call dword ptr gs:[0x10]; 
0x000a284c: and al, 4; cmove eax, edx; add eax, 1; ret; 
0x00137d06: and al, 4; cmp byte ptr [eax + 2], 0; jne 0x137d18; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00088a21: and al, 4; cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x0003a590: and al, 4; fabs; test ah, 2; je 0x3a59b; fchs; ret; 
0x0003a8f0: and al, 4; fabs; test ah, 2; je 0x3a8fb; fchs; ret; 
0x0003a797: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00052127: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000521a1: and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0003a716: and al, 4; fscale; fstp st(1); ret; 
0x0003a7a6: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0014d148: and al, 4; jmp 0x14c770; nop; xor eax, eax; ret; 
0x00041500: and al, 4; jmp 0x3f7b0; lea esi, cs:[esi]; nop; xor eax, eax; ret; 
0x0007c39c: and al, 4; jmp 0x7aed0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000877ac: and al, 4; jmp 0x86bb0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000eb352: and al, 4; jmp 0xa3fc0; lea esi, [esi]; xor eax, eax; ret; 
0x00171649: and al, 4; jmp dword ptr [eax + 0x20]; 
0x00171649: and al, 4; jmp dword ptr [eax + 0x20]; nop; xor eax, eax; ret; 
0x00171625: and al, 4; jmp dword ptr [eax + 0x24]; 
0x0017a505: and al, 4; jmp dword ptr [eax + 0x30]; 
0x00166395: and al, 4; jmp dword ptr [eax + 4]; 
0x0008887f: and al, 4; jmp dword ptr [eax]; 
0x001663b9: and al, 4; jmp dword ptr [eax]; lea esi, [esi]; xor eax, eax; ret; 
0x0008887f: and al, 4; jmp dword ptr [eax]; lea esi, cs:[esi]; ret; 
0x00076564: and al, 4; jmp eax; 
0x00076564: and al, 4; jmp eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00168bb8: and al, 4; jmp edx; 
0x00168bb8: and al, 4; jmp edx; lea esi, [esi]; endbr32; ret; 
0x0016b853: and al, 4; jmp edx; lea esi, cs:[esi]; nop; endbr32; ret; 
0x000423b7: and al, 4; lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000423d6: and al, 4; lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x000944f2: and al, 4; lock dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x0010394c: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00103974: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008a9b2: and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00093b26: and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000975e1: and al, 4; mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3b8c]; mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008acb6: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00094532: and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003a78c: and al, 4; mov dword ptr [eax], ecx; ret; 
0x00093b7f: and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008acdf: and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000df8e5: and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000998e1: and al, 4; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x001269b8: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126cf4: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00126d38: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e68: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001267e4: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00115f38: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126994: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00126d68: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121a24: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00126dd8: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e08: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0008a85a: and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x8a870; ret; 
0x00126e38: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00126e64: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x00099929: and al, 4; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0003cfe1: and al, 4; mov eax, 0x1a5; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x001268a8: and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b38: and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000e2474: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00126c38: and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c398: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010b024: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00119a34: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00102e28: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00117724: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00117724: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00119c04: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001217a8: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0011948a: and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00126d14: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x001219d8: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f848: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b498: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00127383: and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00123b34: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001239c4: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001266d4: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001219b4: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00126cd4: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00121508: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00104e24: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0003aba6: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00126904: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000e8834: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b474: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001266f8: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00125514: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00125514: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010be18: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000e88e4: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011ec68: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f8: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011ec94: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00102c58: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102938: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00102964: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00102984: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x001029a4: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00102a32: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00123b58: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0003d05b: and al, 4; mov eax, 0xb1; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00126728: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126758: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e8: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010ac24: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000e78e8: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00125b94: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b74: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00125b74: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00126b98: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00117f76: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00120f08: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e658: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc8: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0008ab76: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000f2be1: and al, 4; mov eax, 1; test ecx, ecx; js 0xf2bf0; ret; 
0x00147f16: and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x00171d16: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0016f8d2: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00086db6: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x0003447a: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00097660: and al, 4; mov eax, dword ptr [eax + 0x3b84]; test eax, eax; jne 0x97677; ret; 
0x0003449a: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0017d1f6: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001481d0: and al, 4; mov eax, dword ptr [eax + 0x4e28]; test eax, eax; jne 0x1481e7; ret; 
0x0017d216: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x0017d2a6: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d296: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d226: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe6: and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x00101330: and al, 4; mov eax, dword ptr [eax + 0xb4]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00118a86: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00033cf0: and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0017d1da: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00080bc6: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b76: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009a831: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x0009aa01: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a871: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9a880; ret; 
0x000342c0: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034290: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000e1656: and al, 4; mov eax, dword ptr [eax]; ret; 
0x00081906: and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00081926: and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00171916: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0012797c: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012756b: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003ad4d: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003d686: and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0003abc2: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00127c9f: and al, 4; mov ecx, dword ptr [esp + 8]; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008be8a: and al, 4; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a566: and al, 4; mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0008a496: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0008f9f0: and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x000889a0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x000889c0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x000889e0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x00088a00: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x0008f9d0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9b0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x0009aa40: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x32c], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa70: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x330], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aaa0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x334], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a810: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7f0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0009aad0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a8a0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0009ab00: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x00171cf6: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0010abb6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d206: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008a796: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103926: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00086a46: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b6: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f66: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0003d0fc: and al, 4; mov edx, edi; mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0ac: and al, 4; mov edx, edi; mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00103916: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000341b0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034180: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034150: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034090: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340f0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034000: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340c0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034060: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034260: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034030: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034120: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fd0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001037d6: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001585be: and al, 4; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00086dc6: and al, 4; ret; 
0x00135447: and al, 4; rol ax, 8; ret; 
0x0017d67c: and al, 4; sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x000886d6: and al, 4; setae al; ret; 
0x0008e1ca: and al, 4; sete al; movzx eax, al; ret; 
0x00163ead: and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00085787: and al, 4; sub esp, 8; lea ebx, [ecx + 1]; push eax; push esi; call dword ptr [edi + 0xc]; 
0x00084ad6: and al, 4; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00080b86: and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x00080ba6: and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0013b376: and al, 4; test eax, eax; je 0x13b388; jmp 0x13a9b0; lea esi, [esi]; ret; 
0x00041db7: and al, 4; test eax, eax; je 0x41dc3; bsr eax, eax; add eax, 1; ret; 
0x00041e67: and al, 4; test eax, eax; je 0x41e73; bsr eax, eax; add eax, 1; ret; 
0x00093f21: and al, 4; test eax, eax; js 0x93f30; mov dword ptr [edx + 0x3ad4], eax; xor eax, eax; ret; 
0x0009207a: and al, 4; test edx, edx; jne 0x92090; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000df8c6: and al, 4; test edx, edx; jns 0xdf940; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008b137: and al, 4; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000a3281: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa3291; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000a32b1: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa32c1; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x00129cd6: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x129ce8; ret; 
0x000d2146: and al, 4; xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd2172; ret; 
0x0002324d: and al, 4; xor edx, edx; mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0016eada: and al, 5; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00137aea: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0007fcab: and al, 8; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003be05: and al, 8; call 0x3bd80; pop ecx; pop edx; ret; 
0x0005da0b: and al, 8; call dword ptr gs:[0x10]; 
0x0010abeb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac5b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b05b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x001152db: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x0011581b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00116b17: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x0011722b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x00117757: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c87: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x0011925b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192ab: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0cb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x001225fb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x001249c7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x001263ab: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x0005da0b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990d7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x000f2cdb: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0017a912: and al, 8; call eax; 
0x000bbd23: and al, 8; cld; pop edi; ret; 
0x00099d42: and al, 8; cmp byte ptr [ebx], 0x2f; jne 0x99d90; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0008e1c6: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003ad51: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00073fa2: and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0010abba: and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d20a: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001721e2: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008a79a: and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010392a: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008a45d: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0011b3f3: and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00127d5b: and al, 8; mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d15: and al, 8; mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0014d144: and al, 8; mov dword ptr [esp + 4], eax; jmp 0x14c770; nop; xor eax, eax; ret; 
0x0007c398: and al, 8; mov dword ptr [esp + 4], eax; jmp 0x7aed0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000877a8: and al, 8; mov dword ptr [esp + 4], eax; jmp 0x86bb0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000eb34e: and al, 8; mov dword ptr [esp + 4], eax; jmp 0xa3fc0; lea esi, [esi]; xor eax, eax; ret; 
0x00168bb4: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00168bb4: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; lea esi, [esi]; endbr32; ret; 
0x00171645: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00171645: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; nop; xor eax, eax; ret; 
0x00171621: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x00166391: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001663b5: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x001663b5: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; lea esi, [esi]; xor eax, eax; ret; 
0x00116d00: and al, 8; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c5a0: and al, 8; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00126e9b: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00105309: and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012696b: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115a02: and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011585b: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011779b: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011726b: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0011682e: and al, 8; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0010ab54: and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010b09b: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00127ca3: and al, 8; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003d739: and al, 8; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008a996: and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x000dff20: and al, 8; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dffe7: and al, 8; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfe98: and al, 8; mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00116872: and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00089145: and al, 8; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00120142: and al, 8; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00126b0b: and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012687b: and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268db: and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad8b: and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b6b: and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00118e60: and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011997b: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b0b: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00127573: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001269eb: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000d6e36: and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00128a4c: and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128b5b: and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00185fb7: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001266ab: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6fb: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012678b: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267bb: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c8b: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126adb: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e4b: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011529b: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6cb: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88bb: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e888b: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac9b: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9eb: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e90b: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0010b95f: and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011e5fb: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e62b: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab9b: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000936c3: and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000935b8: and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092863: and al, 8; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093a01: and al, 8; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000891e1: and al, 8; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008a43a: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00086a4a: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1ba: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00091f8a: and al, 8; mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008c90a: and al, 8; mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00091f4a: and al, 8; mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00030f6a: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001274dc: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003aaa5: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0016f8ce: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017d1d6: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00136167: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00136167: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x001269b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126d34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e64: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00115f34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126d64: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00126dd4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x001268a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00126c34: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c394: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00102e24: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001217a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001219d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f844: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b494: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00121504: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001266f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010be14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011ec64: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00102c54: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102934: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00123b54: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00126724: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126754: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e78e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00126b94: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e654: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0003a8c2: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003c3d7: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000907a1: and al, 8; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0017c30a: and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x17c318; ret; 
0x0018bf28: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00093bb7: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008a856: and al, 8; mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x8a870; ret; 
0x0010b9a7: and al, 8; mov ecx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00129751: and al, 8; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0009232a: and al, 8; mov edx, dword ptr [eax]; and edx, 2; je 0x92340; xor eax, eax; ret; 
0x000be51a: and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xbe532; ret; 
0x0011fbcf: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204ff: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d4f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f0f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007651d: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00118f4f: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x001287c0: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x000577ef: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x00034476: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034496: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000dfdfb: and al, 8; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0008eeb6: and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009394d: and al, 8; mov esi, dword ptr [esp + 0xc]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003bf3d: and al, 8; mov esp, ecx; jmp edx; 
0x001037dd: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010df6a: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f89a: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011e96a: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0008e855: and al, 8; not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008a97a: and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00030ebc: and al, 8; pop ebx; jmp 0x32650; lea esi, [esi]; pop ebx; ret; 
0x00076465: and al, 8; pop ebx; jmp eax; 
0x00076465: and al, 8; pop ebx; jmp eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0007b9c6: and al, 8; pop ebx; ret; 
0x000bbcf9: and al, 8; pop edi; ret; 
0x000b6e04: and al, 8; pop esi; ret; 
0x00075679: and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000ef88d: and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00165bed: and al, 8; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000344e1: and al, 8; ret; 
0x00137ae0: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x0008faf4: and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009497c: and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00164a06: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00028286: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0012319a: and al, 8; test eax, eax; je 0x1231a4; test edx, edx; jne 0x1231a8; ret; 
0x001231ea: and al, 8; test eax, eax; je 0x1231f8; jmp 0x1227b0; lea esi, [esi]; ret; 
0x00123836: and al, 8; test eax, eax; jne 0x123880; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00088874: and al, 8; test edx, edx; je 0x88888; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000d4257: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00115ef7: and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000df657: and al, 8; xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008a95d: and al, 8; xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0008df07: and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d939: and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00089497: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008944b: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x001a6fbf: and al, 9; ret 0x448b; 
0x00100d4b: and al, al; call 0xfd99254; xchg esp, eax; ret 0xd020; 
0x00148bd6: and al, al; stc; call dword ptr [eax - 0x73]; 
0x00023527: and al, byte ptr [0x2cc48300]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0018c644: and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003a843: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003ae01: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00166114: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00031a89: and al, byte ptr [eax]; add byte ptr [ebx - 0x1d373], cl; dec dword ptr [ebp - 0x67e077f]; call dword ptr [eax - 0x73]; 
0x00165f28: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0003f5f5: and al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x0008b070: and al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x0008cc64: and al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x00119546: and al, byte ptr [ebx + 0x5e5b54c4]; ret; 
0x0018e35c: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x0019145c: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x000268d0: and al, byte ptr [ebx - 0x17adf314]; cmpsb byte ptr [esi], byte ptr es:[edi]; inc edx; adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0014b70d: and al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x000825aa: and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000414c5: and al, ch; adc eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x000a238e: and al, ch; cmp al, 0x99; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00107b21: and al, ch; jno 0x107adb; int1; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x000ba0e1: and al, ch; push 0x35; or al, 0; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6de1: and al, ch; push 0x68; or al, 0; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012d297: and al, ch; ret; 
0x00147038: and al, ch; shl byte ptr [edx + 0x4d8bfff5], cl; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x00106ef9: and al, ch; xchg ecx, eax; ret 0xfff1; 
0x000d7384: and bh, 0x38; stc; call dword ptr [eax + 0x53]; 
0x001529d4: and bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00061b14: and bh, al; inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0018b5de: and bh, bh; inc dword ptr [ecx + 0x430b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b545: and bh, bh; inc dword ptr [ecx + 0x43150c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b3f5: and bh, bh; inc dword ptr [ecx + 0x432a0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b33e: and bh, bh; inc dword ptr [ecx + 0x43357c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005cc83: and bh, bh; je 0x5ccab; sub al, 0xe8; ret; 
0x00040613: and bh, bh; mov edx, dword ptr ss:[esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00111467: and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0017d333: and bh, byte ptr [eax + 4]; add esp, 0xc; ret; 
0x000bfb8a: and bh, byte ptr [edi - 0x3b7cfffa]; adc byte ptr [ebp + 0x391b74db], al; ret; 
0x000818f9: and bh, cl; ret; 
0x000c211b: and bh, cl; stc; call dword ptr [eax + 0x53]; 
0x000f6efa: and bh, dh; adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0019b41d: and bh, dh; inc dword ptr [ecx + 0x33dbcc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019b358: and bh, dh; inc dword ptr [ecx + 0x33e81c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0004b44e: and bh, dh; rol byte ptr [ebp + 0xf1c2454], cl; xchg ebp, eax; ret 0xb60f; 
0x00080f85: and bh, dl; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x001903ab: and bh, dl; jmp dword ptr [esi - 0x70]; 
0x00162b12: and bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00162c12: and bl, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00162b66: and bl, 0x72; stc; jmp dword ptr [ebp - 0x75]; 
0x0005d76a: and bl, byte ptr [edx - 4]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009448e: and byte ptr [eax + 0x14f], bh; call dword ptr gs:[0x10]; 
0x0003a18e: and byte ptr [eax + 0x3544b60f], dl; dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x00118fb2: and byte ptr [eax + 0x36], bh; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010625a: and byte ptr [eax + 0x38], 0xf9; call dword ptr [eax + 0x6a]; 
0x00101111: and byte ptr [eax + 0x480f003b], al; ror byte ptr [eax - 0x7cd7dbac], 1; mov byte ptr [ecx], 0x83; ret; 
0x0002556f: and byte ptr [eax + 0x65000000], 3; add eax, 0; ret; 
0x001590b7: and byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72c7db8c], cl; scasb al, byte ptr es:[edi]; and al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x0011b011: and byte ptr [eax + 0x76], bh; call dword ptr gs:[0x10]; 
0x0011aac1: and byte ptr [eax + 0x94], bh; call dword ptr gs:[0x10]; 
0x0003d2e8: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x0003c431: and byte ptr [eax + 0xb3], bh; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00117f40: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x001893fa: and byte ptr [eax + 4], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010ace1: and byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0018c86b: and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008ad0d: and byte ptr [eax + edx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00027fa6: and byte ptr [eax - 0x18], dl; ret; 
0x0003ccc6: and byte ptr [eax - 0x39000000], 4; add ah, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00058552: and byte ptr [eax - 0x73], dl; cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; 
0x00057f9c: and byte ptr [eax - 0x73], dl; xchg ah, ch; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00123f18: and byte ptr [eax - 0x77000000], 0x44; and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000f2788: and byte ptr [eax - 0x7d000000], 0x3c; add ah, byte ptr [esi]; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x000779cf: and byte ptr [eax], 0x1a; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000ea77a: and byte ptr [eax], 0x57; stc; call dword ptr [eax - 0x18]; 
0x0002511e: and byte ptr [eax], 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0012f734: and byte ptr [eax], 0xb7; stc; call dword ptr [eax - 0x75]; 
0x000c211a: and byte ptr [eax], 0xcf; stc; call dword ptr [eax + 0x53]; 
0x0013b41d: and byte ptr [eax], al; add al, ch; jae 0x13b4a0; out dx, al; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000d7018: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3e6c8a], cl; add byte ptr [ebp - 0x15df736e], cl; call dword ptr [ecx + 0x52]; 
0x0012d9b9: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001a02f5: and byte ptr [eax], al; add byte ptr [eax], al; add eax, edx; ret; 
0x00042633: and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000f2797: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000f27e7: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x00041fc2: and byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00140e7d: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00024ecc: and byte ptr [eax], al; lea eax, [eax - 0x681e8]; ret; 
0x00024eec: and byte ptr [eax], al; lea eax, [eax - 0x681f0]; ret; 
0x0002605c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1098]; ret; 
0x0002607c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x109c]; ret; 
0x0002f47c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x0002556c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024bac: and byte ptr [eax], al; mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x00024e49: and byte ptr [eax], bh; stc; call dword ptr [eax - 1]; 
0x00031ab3: and byte ptr [eax], dl; add byte ptr [ebx - 0x1d373], cl; dec dword ptr [ebp - 0x67e077f]; call dword ptr [eax - 0x73]; 
0x0019d047: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x19d094; add eax, 0xf; ret; 
0x0014f8bd: and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x0019d007: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x19d074; add eax, 7; ret; 
0x0016ccb2: and byte ptr [ebp + 0xf0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0003e1a2: and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x00142440: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x00142630: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6c22a79], cl; call dword ptr [eax + 0x53]; 
0x0005afb7: and byte ptr [ebp - 0x377af037], al; add al, byte ptr [eax]; add dh, dh; ret 0xf50; 
0x000587fc: and byte ptr [ebp - 0x3b7c0003], dh; or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0011b4bb: and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x001663bc: and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0003d6ad: and byte ptr [ebp - 0x47d98b37], al; arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x00117f73: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00088817: and byte ptr [ebp - 0x5d], ah; jl 0x8881c; add byte ptr [eax], al; ret; 
0x001588c9: and byte ptr [ebp - 0x63bbb7f], cl; call dword ptr [eax - 0x73]; 
0x0014383b: and byte ptr [ebp - 0x6421b7d], cl; call dword ptr [eax - 0x73]; 
0x0009c62c: and byte ptr [ebp - 0x661bf80], cl; call dword ptr [eax - 0x18]; 
0x0008b8c2: and byte ptr [ebp - 0x66d7f80], cl; call dword ptr [eax - 0x18]; 
0x000249e4: and byte ptr [ebp - 0x68cac80], cl; call dword ptr [eax - 0x18]; 
0x0014f580: and byte ptr [ebp - 0x691cc80], cl; call dword ptr [eax + 0x55]; 
0x0014f545: and byte ptr [ebp - 0x691d580], cl; call dword ptr [eax + 0x55]; 
0x0013d6bb: and byte ptr [ebp - 0x6965b7d], cl; call dword ptr [eax + 0x51]; 
0x0012cbba: and byte ptr [ebp - 0x69b3080], cl; call dword ptr [eax - 1]; 
0x001270b1: and byte ptr [ebp - 0x69bc27a], cl; call dword ptr [eax - 0x18]; 
0x001271e7: and byte ptr [ebp - 0x69bde7b], cl; call dword ptr [eax - 0x18]; 
0x0013ec7d: and byte ptr [ebp - 0x6b05c7d], cl; call dword ptr [eax + 0x56]; 
0x000260f2: and byte ptr [ebp - 0x720d8b2e], al; nop; mov al, 0x7e; stc; call dword ptr [edx - 0x73]; 
0x00164780: and byte ptr [ebp - 0x76c88b40], al; ret; 
0x000b47c7: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b3124: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ca336: and byte ptr [ebp - 0x7b368], cl; call dword ptr [ebx - 0x75]; 
0x000c6a4d: and byte ptr [ebp - 0x7b368], cl; call dword ptr [ebx - 1]; 
0x000ca405: and byte ptr [ebp - 0x7b380], cl; call dword ptr [eax - 0x75]; 
0x000c6bd7: and byte ptr [ebp - 0x7b380], cl; call dword ptr [eax - 1]; 
0x0013fdd9: and byte ptr [ebp - 0x7cc58740], al; in al, dx; add al, 0x89; ret; 
0x001647aa: and byte ptr [ebp - 0x7cce8a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x001645ce: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000a2dbb: and byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x001649aa: and byte ptr [ebp - 0xc04a380], cl; jmp dword ptr [ebp - 0x75]; 
0x0015d245: and byte ptr [ebp - 0xd2a3380], cl; call dword ptr [eax - 1]; 
0x0015a7a5: and byte ptr [ebp - 0xd691380], cl; call dword ptr [eax - 1]; 
0x00150225: and byte ptr [ebp - 0xdff6380], cl; call dword ptr [eax - 1]; 
0x0014e175: and byte ptr [ebp - 0xe2fe380], cl; call dword ptr [eax - 1]; 
0x001583af: and byte ptr [ebx + 0x237f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000a09a6: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0006261b: and byte ptr [ebx + 0x3a802452], cl; add byte ptr [ecx - 0x60373], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0013f9e7: and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0016c582: and byte ptr [ebx + 0x50], dl; call dword ptr [edx + 4]; 
0x00083598: and byte ptr [ebx + 0x538b1443], cl; adc byte ptr [ecx], bh; ret 0x2773; 
0x0017f598: and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4d72; 
0x000764be: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00056d0f: and byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x0008588b: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0004144f: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00171ca0: and byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00040e87: and byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000846cb: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x0005d329: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000d6d08: and byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0007e136: and byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00050b34: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0009a582: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x00028d0d: and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; jmp eax; 
0x0002d55d: and byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x000f484b: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000255f5: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000424f9: and byte ptr [ebx + 0x5e], bl; ret; 
0x0011cce1: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00140ede: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x000b6dde: and byte ptr [ebx + 0x6ae820c0], al; push 0xc181000c; lea edx, [ecx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x000ba0de: and byte ptr [ebx + 0x6ae820c0], al; xor eax, 0xc181000c; or eax, 0x300105f; or al, 0x91; jmp ecx; 
0x0016baa8: and byte ptr [ebx + 0x73ff5043], cl; dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0008b15d: and byte ptr [ebx + 0x758d0cec], al; or cl, al; call 0x244d3a6c; adc al, 0x89; ret; 
0x000c92ee: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00141142: and byte ptr [ebx + ebx*8 - 0x77], dh; fisubr dword ptr [ecx]; ret 0x7e8b; 
0x0013143b: and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x00130e8f: and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x0009710b: and byte ptr [ebx - 0x17e3dba4], cl; imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x00134a47: and byte ptr [ebx - 0x2776df3c], al; pop ebx; pop esi; pop edi; ret 4; 
0x0012d305: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 4; pop ebx; pop esi; ret; 
0x000a922c: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000830d4: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00117ba2: and byte ptr [ebx - 0x47dbdbb4], cl; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169c2: and byte ptr [ebx - 0x47dbdbb4], cl; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f872: and byte ptr [ebx - 0x47dbdbb4], cl; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af61: and byte ptr [ebx - 0x47dbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115f82: and byte ptr [ebx - 0x47dbdbb4], cl; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0004c2e7: and byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x0004beb8: and byte ptr [ebx - 0x6bf06fec], cl; ror byte ptr [ecx - 0x7ff7db84], 0xfa; jo 0x4be50; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x000753ee: and byte ptr [ebx - 0x74c3dbbc], cl; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x548b; 
0x00083398: and byte ptr [ebx - 0x74dbdb8c], cl; adc esi, esi; ret 0xf08; 
0x00040376: and byte ptr [ebx - 0x74dbdbb4], cl; je 0x403a2; sub byte ptr [ebp - 0x1c3e1fbe], cl; add eax, 0x29e0e183; fmul dword ptr [ebp - 0x76dff18c]; ret 0xd285; 
0x00121a53: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00124362: and byte ptr [ebx - 0x74e7dba4], cl; jl 0x12438e; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00028000: and byte ptr [ebx - 0x74efdbbc], cl; adc dword ptr [ecx], eax; ret 0xc083; 
0x001a31a4: and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x00128498: and byte ptr [ebx - 0x769fdbbc], cl; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010af88: and byte ptr [ebx - 0x76dbdbb4], cl; ret 0x8b8; 
0x0009963f: and byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00122941: and byte ptr [ebx - 0x7afefbb3], al; sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x000e0679: and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x0012c69e: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000300e0: and byte ptr [ebx], 0x3b; stc; call dword ptr [eax + 0x56]; 
0x00168753: and byte ptr [ebx], al; sub dword ptr [eax - 0x75000000], 0x58; adc byte ptr [ecx], bh; fimul word ptr [edi]; xchg edx, eax; ret 0xf339; 
0x00104098: and byte ptr [ecx + 0x1876fff0], cl; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0009d0b1: and byte ptr [ecx + 0x1ea29fa], cl; ret 0x9389; 
0x0006a5b9: and byte ptr [ecx + 0x29f089c3], cl; fadd st(1); clc; add ch, byte ptr [ecx]; ret 0x4489; 
0x0010bc8a: and byte ptr [ecx + 0x4289247a], cl; sub byte ptr [esi + 0x5f], bl; ret; 
0x00118fe8: and byte ptr [ecx + 0x5409], bh; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d3fa5: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x00134a4a: and byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x00088349: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00076700: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0005e54c: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0016d24a: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x0010ad08: and byte ptr [ecx + 0x6b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011b038: and byte ptr [ecx + 0x76b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011aae8: and byte ptr [ecx + 0x94b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007ff7b: and byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007f493: and byte ptr [ecx + 0xa486], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0007e5e3: and byte ptr [ecx + 0xa496], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0003c458: and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00057aec: and byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x62520; add esp, 0x1c; ret; 
0x0007a8ad: and byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x6d7f0; add esp, 0x1c; ret; 
0x0002488b: and byte ptr [ecx + ebp*2], 0xf9; call dword ptr [eax - 0x18]; 
0x0013e392: and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00118ce1: and byte ptr [ecx - 0x74dbdbbc], cl; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d3045: and byte ptr [ecx - 0x75], dl; dec esp; and al, 0x20; call ecx; 
0x0004c63b: and byte ptr [ecx - 0x76f7dbb4], cl; jl 0x4c667; cmp byte ptr [ecx], bh; ret 0x840f; 
0x001098e7: and byte ptr [ecx - 7], bl; call dword ptr [eax - 0x18]; 
0x001098e7: and byte ptr [ecx - 7], bl; call dword ptr [eax - 0x18]; das; movsb byte ptr es:[edi], byte ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x0016ea7a: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0003c909: and byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000e23b2: and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000bb075: and byte ptr [ecx], al; ret 0x167c; 
0x000d342f: and byte ptr [ecx], al; ret 0x448b; 
0x0004c03b: and byte ptr [ecx], al; ret 0xd389; 
0x0005eb9a: and byte ptr [ecx], al; ret; 
0x000d1e0d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00031892: and byte ptr [ecx], bh; ret 0x4c0f; 
0x0005b0a1: and byte ptr [ecx], bh; ret 0x830f; 
0x000f4223: and byte ptr [ecx], bh; ret; 
0x00163b6c: and byte ptr [ecx], bl; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0017f8d6: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00083a35: and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x00057869: and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x00163f3f: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x000b34c7: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a9857: and byte ptr [edi + 0x5e], bl; ret; 
0x0014b878: and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; 
0x0014b878: and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x00188821: and byte ptr [edi - 0x18], bl; adc dword ptr [esi - 1], ecx; inc dword ptr [ecx + 0x45bf0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188eb1: and byte ptr [edi - 0x18], bl; add dword ptr [edi - 1], 0x60c381ff; push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188c11: and byte ptr [edi - 0x18], bl; and dword ptr [edx - 1], ecx; inc dword ptr [ecx + 0x45800c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b691: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff1f]; ret; 
0x00189691: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff3f]; ret; 
0x0018c861: and byte ptr [edi - 0x18], bl; ror dword ptr [0xc381ffff], 1; mov al, 0x20; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188d61: and byte ptr [edi - 0x18], bl; ror dword ptr [eax - 1], 1; inc dword ptr [ecx + 0x456b0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188971: and byte ptr [edi - 0x18], bl; ror dword ptr [edi + edi*8 - 1], 0x81; ret; 
0x0018a971: and byte ptr [edi - 0x18], bl; shr dword ptr [edi + edi*8], 0xff; add ebx, 0x43d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d201: and byte ptr [edi - 0x18], bl; xor dword ptr [edi + edi*8], eax; inc dword ptr [ecx + 0x41710c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189001: and byte ptr [edi - 0x18], bl; xor dword ptr [esi - 1], eax; inc dword ptr [ecx + 0x45410c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ea77b: and byte ptr [edi - 7], dl; call dword ptr [eax - 0x18]; 
0x00041d6d: and byte ptr [edi], cl; inc ebp; ret 0x450f; 
0x00041c84: and byte ptr [edi], cl; inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00036ecb: and byte ptr [edi], cl; inc ebx; ret 0x1c8d; 
0x000bb98b: and byte ptr [edi], cl; lea ecx, [esi]; add al, byte ptr [eax]; add al, ch; mov byte ptr [0x81000c1c], al; ret; 
0x00060c32: and byte ptr [edi], cl; mov dh, 0x44; sub al, ah; mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000badb2: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c916a: and byte ptr [edi], cl; mov ss, word ptr [esi - 0x77000000]; ret; 
0x000a1332: and byte ptr [edi], cl; nop; ret 0xdb31; 
0x0019d31d: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x0019e9a9: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0019d7e1: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0019e591: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x00103f67: and byte ptr [edi], cl; test dword ptr [eax], eax; add al, 0; add dh, dh; ret 0xf80; 
0x0019d834: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x0019e5f4: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x000d1e10: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000b47ca: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0019eddb: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x0019eefb: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x0019d1dc: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000b3127: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001a42d1: and byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x0014baf3: and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0004d87d: and byte ptr [edi], cl; xchg edx, eax; ret 0xd120; 
0x00142412: and byte ptr [edi], cl; xchg esp, eax; ret 0x93c; 
0x00101f88: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0016d76b: and byte ptr [edx + 0x50], dl; call edi; 
0x001710ed: and byte ptr [edx + 0x56], dl; call dword ptr [eax]; 
0x00032029: and byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x001903a9: and byte ptr [edx], 0x22; cli; jmp dword ptr [esi - 0x70]; 
0x001873a9: and byte ptr [edx], 0xb2; cli; jmp dword ptr [esi - 0x70]; 
0x0008da60: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0008cb5b: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003d60f: and byte ptr [edx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000779d0: and byte ptr [edx], bl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00163df1: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0012d0f0: and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013943e: and byte ptr [esi + 0x68], 0xf9; call dword ptr [eax + 0x6a]; 
0x00199a9c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000bb002: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0019e282: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010569f: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x000a0c0f: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa0c3d; call eax; 
0x0004796f: and byte ptr [esi - 0x17af0007], al; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0017164d: and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000404ce: and byte ptr [esi - 1], dl; je 0x404f7; or al, 0x8b; push esp; and al, 0x14; call edx; 
0x0004058b: and byte ptr [esi - 1], dl; je 0x405b4; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x000406b9: and byte ptr [esi - 1], dl; je 0x406e2; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0002508e: and byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00088882: and byte ptr [esi], ch; lea esi, [esi]; ret; 
0x0019ef46: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0013946c: and ch, 0x68; stc; call dword ptr [eax + 0x6a]; 
0x000d2092: and ch, 0xf; je 0xd20b0; add eax, 2; ret; 
0x000cd10c: and ch, 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000a3fac: and ch, 2; lea edx, [edx - 0x174aa4]; cmove eax, edx; ret; 
0x000a298c: and ch, 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a5dac: and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a5dec: and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a337c: and ch, 2; lea edx, [edx - 0x1758a4]; cmove eax, edx; ret; 
0x000a33bc: and ch, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a5e6c: and ch, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x00138c26: and ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x000f276c: and ch, dh; bnd jge 0xf27a0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x000f26c3: and ch, dh; mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x0015ed82: and cl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x0015edd6: and cl, 0x71; stc; jmp dword ptr [ebp - 0x75]; 
0x000d207b: and cl, 0xf; je 0xd20a0; ret; 
0x0011b00d: and cl, byte ptr [ebx - 0x47dfdba4]; jbe 0x11b015; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c42d: and cl, byte ptr [ebx - 0x47dfdba4]; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010af5d: and cl, byte ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0007cd5e: and cl, byte ptr [ebx - 0x7d7247ab]; clc; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x0017ebeb: and cl, byte ptr [ebx]; add byte ptr [ebx - 0x77], dl; ret; 
0x00102fca: and cl, byte ptr [ebx]; add eax, dword ptr [eax]; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0008742d: and cl, byte ptr [edi]; mov dh, 2; pop ebx; pop esi; ret; 
0x00044c94: and cl, ch; ret 0xfffc; 
0x001772c0: and cl, dh; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0011110c: and cl, dh; jmp dword ptr [ebp - 0x75]; 
0x000e22e1: and dh, ah; jmp dword ptr [esi - 0x70]; 
0x00081d85: and dh, al; add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x0012234b: and dh, al; jmp dword ptr [esi - 0x70]; 
0x0016a0aa: and dh, al; stc; call dword ptr [ebp + 0x6a]; 
0x000f2907: and dh, byte ptr [ecx]; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0008c8ca: and dh, byte ptr [edx + 0xa]; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x0005c790: and dh, dh; ret 0x7450; 
0x0010b3c3: and dh, dh; ret 0x7549; 
0x0014769c: and dl, 0x6b; stc; call dword ptr [eax - 0x73]; 
0x001879e9: and dl, 0xab; cli; jmp dword ptr [esi - 0x70]; 
0x000d70bb: and dl, ch; call dword ptr [eax - 0x73]; 
0x000d7026: and dl, ch; call dword ptr [ecx + 0x52]; 
0x000d7026: and dl, ch; call dword ptr [ecx + 0x52]; push eax; call 0xd3260; add esp, 0x1c; ret; 
0x00159523: and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0011d303: and dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [edx + 0x52]; 
0x0017d721: and dword ptr [eax + 0x65000000], 0x158b; add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0008da31: and dword ptr [eax + 0x9d], edi; call dword ptr gs:[0x10]; 
0x0008a8a4: and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008a765: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0018c7a4: and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014993e: and dword ptr [eax - 0x3f], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0014925e: and dword ptr [eax - 0x40], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00057f80: and dword ptr [eax - 0x73], edx; xchg byte ptr [eax + ecx*4], ah; stc; call dword ptr [eax - 0x18]; 
0x00073959: and dword ptr [eax - 0x73], edx; xchg byte ptr [ebp + ecx*4 - 7], dh; call dword ptr [eax - 0x18]; 
0x00134a7b: and dword ptr [eax - 0x73], edx; xchg dword ptr [ebx], ebp; stc; call dword ptr [eax - 0x18]; 
0x00024e48: and dword ptr [eax], 0x38; stc; call dword ptr [eax - 1]; 
0x0013a2b2: and dword ptr [eax], 0x57; stc; call dword ptr [eax - 0x18]; 
0x0012bc2e: and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000330e1: and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x00092080: and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000920d0: and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0016a0a9: and dword ptr [eax], 0xffffffc6; stc; call dword ptr [ebp + 0x6a]; 
0x000818f8: and dword ptr [eax], 0xffffffcf; ret; 
0x00089c72: and dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010abe1: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00196f8e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c425f: and dword ptr [eax], eax; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x8e; ret 0xf; 
0x00104e3b: and dword ptr [eax], eax; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x00064daf: and dword ptr [ebp + 0x42], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008f931: and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0008940c: and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0012ee3e: and dword ptr [ebp - 7], esp; call dword ptr [eax - 0x18]; 
0x0017c3e6: and dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x001197e9: and dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x00157f1e: and dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0007e215: and dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x000bd76b: and dword ptr [ebx + 7], 0x88858d00; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0007b94f: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0008b969: and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011a497: and dword ptr [ecx + eax - 0x4c750000], 0; add dword ptr [eax], eax; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x00089496: and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000e88fa: and dword ptr [ecx - 0x3b], 0xfffffff3; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0009b036: and dword ptr [ecx - 0x76f7db94], ecx; jmp 0x8b9a8272; imul ecx, dword ptr [eax], 0x830ce8c1; ret 0x8901; 
0x00104e3a: and dword ptr [ecx], 0; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x0014c73e: and dword ptr [ecx], esi; leave; cmp eax, 2; jne 0x14c750; mov eax, ecx; ret; 
0x0011d46f: and dword ptr [edi + 0x62], 0xfffffff9; call dword ptr [edx + 0x52]; 
0x0015c5c9: and dword ptr [edi + 0x71], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0015c5c9: and dword ptr [edi + 0x71], 0xfffffff9; call dword ptr [eax - 0x18]; pushfd; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x0014c93a: and dword ptr [edi + ecx*4], 0; das; je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0013a718: and dword ptr [edi], 0x75; stc; call dword ptr [esi + 0x6a]; 
0x0011eedb: and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00028730: and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008a8d7: and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x0008a8d0: and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x0017d6e0: and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0003cc28: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00188c14: and dword ptr [edx - 1], ecx; inc dword ptr [ecx + 0x45800c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019cb2b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0015d524: and dword ptr [esi + 0x50fff971], 0xffffffe8; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x00159cb1: and dword ptr [esi + 0x70], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00159e52: and dword ptr [esi + 0x70], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0016272b: and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x0011d124: and dword ptr [esi], 0x5b; stc; call dword ptr [eax + 0x55]; 
0x0007b8f5: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x00089a29: and dword ptr [esp + ecx - 0x7d], esi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000341b6: and eax, 0x1000; ret; 
0x0005cdab: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00034186: and eax, 0x100; ret; 
0x00118a8b: and eax, 0x100f; ret; 
0x0003cd95: and eax, 0x128c481; add byte ptr [eax], al; pop ebx; ret; 
0x00089fbe: and eax, 0x16; ret; 
0x0019da20: and eax, 0x1f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da50: and eax, 0x1ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da80: and eax, 0x1fff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00034156: and eax, 0x2000; ret; 
0x00034096: and eax, 0x200; ret; 
0x0008da53: and eax, 0x20; mov ebx, eax; jne 0x8d5be; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00167197: and eax, 0x247cb60f; and al, 0xf; xchg esp, eax; ret; 
0x0005e671: and eax, 0x34878d50; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0008892f: and eax, 0x39; cmp eax, 8; je 0x8893c; add esp, 8; pop ebx; ret; 
0x000892ae: and eax, 0x39; cmp eax, 8; je 0x892bb; add esp, 8; pop ebx; ret; 
0x00094551: and eax, 0x39; cmp eax, 8; je 0x9455a; ret; 
0x0019da30: and eax, 0x3f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da60: and eax, 0x3ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da90: and eax, 0x3fff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000340f6: and eax, 0x4000; ret; 
0x00034006: and eax, 0x400; ret; 
0x000856d2: and eax, 0x530cec83; call dword ptr [esi + 0x10]; 
0x0014cc02: and eax, 0x5b08c483; ret; 
0x0010bd39: and eax, 0x5b70c483; pop esi; pop edi; ret; 
0x0019da40: and eax, 0x7f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000342d8: and eax, 0x7f; ret; 
0x0019da70: and eax, 0x7ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019daa0: and eax, 0x7fff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00119b55: and eax, 0x80000000; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x0003b998: and eax, 0x80000000; ret; 
0x000340c6: and eax, 0x8000; ret; 
0x00034066: and eax, 0x800; ret; 
0x00080b7a: and eax, 0x804; ret; 
0x0014c610: and eax, 0x81000310; ret; 
0x000cb592: and eax, 0x83240401; ret; 
0x000f2354: and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x00092056: and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001061b5: and eax, 0xe8831e8b; add dword ptr [ecx], eax; ret; 
0x000b1927: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad437: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00091f8e: and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001a039f: and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a032d: and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0019d93a: and eax, 0xf; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d96b: and eax, 0xff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00061108: and eax, 0xfff792e9; jmp dword ptr [esi - 0x70]; 
0x0019d9a2: and eax, 0xfff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d9db: and eax, 0xffff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00118af0: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0011e94e: and eax, 0xfffff000; or eax, edx; ret; 
0x00137e78: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00137e50: and eax, 0xffffff; ret; 
0x00105625: and eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x0007e770: and eax, 0xffffffcf; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x00119bdd: and eax, 0xfffffff0; add eax, 0x26; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0009a84a: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x368], eax; ret; 
0x0013786b: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00165778: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00165864: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0008bb9c: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008b44c: and eax, 0xfffffffc; xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008c95a: and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0008c983: and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0007e81e: and eax, 1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a0244: and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0019fb49: and eax, 1; je 0x19fae4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019fc0d: and eax, 1; je 0x19fbf0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019d9f0: and eax, 1; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00088a3f: and eax, 1; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x000888c3: and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008924b: and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008a43f: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012b3a8: and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00131cb2: and eax, 1; pop ebx; ret; 
0x000f3401: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x00034266: and eax, 1; ret; 
0x00034036: and eax, 2; ret; 
0x00050735: and eax, 2; sub eax, 1; ret; 
0x0019da00: and eax, 3; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00091f31: and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00125553: and eax, 3; ret; 
0x00034126: and eax, 4; ret; 
0x0019da10: and eax, 7; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00033fd6: and eax, 8; ret; 
0x0012b2d6: and eax, dword ptr [0x5b5b0500]; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000c33bf: and eax, dword ptr [0x8d500000]; xchg byte ptr [edi + edi], bl; stc; call dword ptr [eax - 0x18]; 
0x000477bd: and eax, dword ptr [0x8d500000]; xchg dword ptr [edi + edi], ebx; stc; call dword ptr [eax - 0x18]; 
0x0018c5ab: and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00165e2a: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00165e94: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00165e9a: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00196d3e: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011c35f: and eax, dword ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x00121777: and eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001251e0: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001251e0: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x0003cc7c: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x000344df: and eax, dword ptr [esp + 8]; ret; 
0x0003a502: and eax, ecx; ret; 
0x000ba97f: and eax, edx; je 0xbaa60; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0003a882: and eax, edx; ret; 
0x0019e6f6: and eax, edx; test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x000a0926: and ebp, 0x53; stc; call dword ptr [eax - 0x73]; 
0x0014d483: and ebp, 0x6d; stc; call dword ptr [eax - 0x18]; 
0x001658d3: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000a4ff9: and ebp, ebp; clc; jmp dword ptr [esi - 0x70]; 
0x0007b950: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00040cf9: and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0008da2d: and ebx, 0x40; jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000870ea: and ebx, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x00128954: and ebx, 0xfffffffc; add eax, ebx; pop ebx; pop esi; ret; 
0x00122b45: and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x000a3149: and ebx, 1; lea edx, [edx - 0xa0a84]; cmovne eax, edx; pop ebx; ret; 
0x00133419: and ebx, 1; lea edx, [edx - 0xa0a94]; cmovne eax, edx; pop ebx; ret; 
0x000a3199: and ebx, 1; lea edx, [edx - 0xa1a74]; cmovne eax, edx; pop ebx; ret; 
0x00133469: and ebx, 1; lea edx, [edx - 0xa1a84]; cmovne eax, edx; pop ebx; ret; 
0x000a29d9: and ebx, 1; lea edx, [edx - 0xa2a54]; cmovne eax, edx; pop ebx; ret; 
0x001333c9: and ebx, 1; lea edx, [edx - 0xa2a64]; cmovne eax, edx; pop ebx; ret; 
0x0012b626: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0019f69c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000cf389: and ebx, dword ptr [edx + 0xd]; add cl, ch; in eax, dx; idiv bh; dec dword ptr [ebx - 0x36537b]; call dword ptr [esi + 0x6a]; 
0x00041d6b: and ecx, 0x20; cmovne eax, edx; cmovne edx, ebx; pop ebx; ret; 
0x0010297a: and ecx, 0x24; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0008f1d1: and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00090834: and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00137e38: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00138137: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00118b57: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00126e7a: and ecx, 0xffffffdf; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009aa1b: and ecx, 0xfffffff0; cmp eax, 0xb; mov eax, 8; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x00061a91: and ecx, 1; mov byte ptr [esp + 0x3c], cl; jmp 0x60e62; lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x0014aba0: and ecx, dword ptr [ebx + 0x39302444]; ret 0x840f; 
0x00037bca: and ecx, dword ptr [ebx - 0x1cb43]; dec dword ptr [ebp - 0x1f945379]; call dword ptr [eax + 0x6a]; 
0x00111e67: and ecx, dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [eax - 0x4f], dh; stc; call dword ptr [eax - 0x73]; 
0x00057f4e: and ecx, dword ptr [ecx + 0x5e5b044a]; pop edi; ret; 
0x001413f2: and ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x00177238: and ecx, esi; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000d57b7: and edi, 0x38; stc; call dword ptr [eax + 0x57]; 
0x0011c4b7: and edi, 0x38; stc; call dword ptr [eax - 0x73]; 
0x0011ac8b: and edi, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0018821a: and edi, 0xf; je 0x188230; call 0x17d639; add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018a21a: and edi, 0xf; je 0x18a230; call 0x17d639; add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018c20c: and edi, 0xf; je 0x18c230; call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e44f: and edi, 0xf; je 0x18e470; call 0x17d639; add ebx, 0x407ff; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f42f: and edi, 0xf; je 0x18f450; call 0x17d639; add ebx, 0x3f9df; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019042f: and edi, 0xf; je 0x190450; call 0x17d639; add ebx, 0x3eb9f; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000300e1: and edi, dword ptr [ebx]; stc; call dword ptr [eax + 0x56]; 
0x001379c6: and edi, dword ptr [ecx]; ret 0x4572; 
0x0018b48e: and edi, edi; inc dword ptr [ecx + 0x43207c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b2a5: and edi, edi; inc dword ptr [ecx + 0x433f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00083f8c: and edi, edi; je 0x83fb4; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008b96a: and edi, esi; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000e1c50: and edi, esp; jmp dword ptr [esi - 0x70]; 
0x0012c382: and edx, 0x1000; mov eax, edx; ret; 
0x0012ba00: and edx, 0x100; mov eax, edx; ret; 
0x0012c282: and edx, 0x2000; mov eax, edx; ret; 
0x0012c082: and edx, 0x200; mov eax, edx; ret; 
0x0012c182: and edx, 0x4000; mov eax, edx; ret; 
0x0012be82: and edx, 0x400; mov eax, edx; ret; 
0x00146c18: and edx, 0x6b; stc; call dword ptr [eax - 0x73]; 
0x0003af1d: and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0003abad: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0012c102: and edx, 0x8000; mov eax, edx; ret; 
0x00151c96: and edx, 0xf; mov eax, edx; ret; 
0x0011e948: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000bb323: and edx, 0xfffffff0; jmp 0xbb380; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00165775: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0012bca4: and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bf02: and edx, 1; mov eax, edx; ret; 
0x0012b9e2: and edx, 1; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0009232e: and edx, 2; je 0x92340; xor eax, eax; ret; 
0x0012bf82: and edx, 2; mov eax, edx; ret; 
0x0012c202: and edx, 4; mov eax, edx; ret; 
0x0012be02: and edx, 8; mov eax, edx; ret; 
0x00073d90: and edx, dword ptr [eax - 0x73]; cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; 
0x00073d90: and edx, dword ptr [eax - 0x73]; cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000740a0: and edx, dword ptr [eax - 0x73]; cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x00058423: and edx, dword ptr [eax - 0x73]; cmp dword ptr [eax - 0x78], -7; call dword ptr [eax - 0x18]; 
0x0017d681: and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0018c212: and edx, dword ptr [edi + edi*8]; inc dword ptr [ecx + 0x42882c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000d3d82: and edx, ebp; call dword ptr [eax - 0x73]; 
0x000d3ce5: and edx, ebp; call dword ptr [eax - 1]; 
0x000bb0b6: and edx, ecx; test edx, edx; je 0xbb090; bsr ecx, edx; add eax, ecx; ret; 
0x0011d353: and esi, 0x5f; stc; call dword ptr [eax + 0x55]; 
0x00171198: and esi, 0x73; stc; call dword ptr [eax - 0x73]; 
0x0016cf6d: and esi, 0x73; stc; call dword ptr [ecx + 0x6a]; 
0x0016a062: and esi, 0x73; stc; call dword ptr [edi + 0x6a]; 
0x00109913: and esi, dword ptr [ebp + 0x12]; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000391d1: and esp, 0x3efff885; jmp ecx; 
0x000e3e2b: and esp, 0xffffffad; stc; call dword ptr [eax - 0x18]; 
0x00123663: and esp, 0xffffffb3; stc; call dword ptr [eax - 0x18]; 
0x0014383d: and esp, 0xffffffbd; stc; call dword ptr [eax - 0x73]; 
0x0012459f: and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x001718f7: and esp, edi; jmp dword ptr [esi - 0x70]; 
0x001718f7: and esp, edi; jmp dword ptr [esi - 0x70]; nop; nop; endbr32; ret; 
0x00165883: arpl bp, si; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x001233ef: arpl cx, di; call dword ptr [eax + 0x56]; 
0x001220cc: arpl cx, di; call dword ptr [eax + 0x57]; 
0x001222d8: arpl cx, di; call dword ptr [eax + 0x68]; 
0x001236d5: arpl cx, di; call dword ptr [eax - 0x18]; 
0x00121d8f: arpl cx, di; call dword ptr [ebx - 1]; 
0x0014cb62: arpl si, ax; sub dword ptr [eax + 0x4e], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x0014cada: arpl si, ax; sub dword ptr [eax + 0x5e], -0x39; sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0014c942: arpl si, ax; sub dword ptr [eax - 0x71], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0019b0b3: arpl sp, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00188227: arpl word ptr [eax + eax], ax; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001747d7: arpl word ptr [eax - 0x73], dx; sub dword ptr [ebp + 0x75], -7; call dword ptr [eax - 0x18]; 
0x00141929: arpl word ptr [eax], bx; out dx, al; jmp dword ptr [ebp - 0x5f]; 
0x00149f09: arpl word ptr [ebx + 0x5e5b2cc4], ax; pop edi; pop ebp; ret; 
0x0007b314: arpl word ptr [ebx - 0x7f74f314], ax; mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x000ba713: arpl word ptr [ecx + 0x10], bx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00164448: arpl word ptr [ecx - 0x76f3dba4], cx; ret; 
0x00111e51: arpl word ptr [ecx - 7], bx; call dword ptr [eax - 0x18]; 
0x0003f8ac: arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009b698: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov byte ptr [esi + 0x3c04], 1; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x0003f878: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003d6b3: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003f737: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009aafb: arpl word ptr [ecx], bx; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3c149089]; add byte ptr [eax], al; ret; 
0x000d1e3c: arpl word ptr [edi + 0x5e], bx; ret; 
0x000bd76c: arpl word ptr [edi], ax; add byte ptr [ebp - 0x655777b], cl; call dword ptr [eax - 0x73]; 
0x000c7329: arpl word ptr [edx + 0x458bfff8], bp; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0xc483; 
0x00075c9c: arpl word ptr [edx + 2], bp; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00160b02: arpl word ptr [edx - 7], si; call dword ptr [eax - 0x18]; 
0x00152861: bnd call dword ptr [eax + 0x6a]; 
0x00156a68: bnd call dword ptr [eax - 0x18]; 
0x0015c01a: bnd call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x00159bea: bnd call dword ptr [eax - 0x18]; outsb dx, byte ptr [esi]; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001537ba: bnd call dword ptr [eax - 0x73]; 
0x0015022a: bnd call dword ptr [eax - 1]; 
0x001054ae: bnd call dword ptr [ebp + 0x57]; 
0x00194374: bnd call dword ptr [ebx - 0x18]; 
0x00194374: bnd call dword ptr [ebx - 0x18]; mov ebp, 0x81fffe92; ret; 
0x0015382b: bnd call dword ptr [edx + 0x6a]; 
0x00104dde: bnd je 0x104df0; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x00097635: bnd je 0x9764a; xor eax, eax; pop ebx; ret; 
0x000a564c: bnd je 0xa5640; pop ebx; pop esi; ret; 
0x000f276e: bnd jge 0xf27a0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x00089c6a: bnd jmp 0x89c72; add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014bd09: bnd jmp dword ptr [ebp - 0x75]; 
0x0010499c: bnd jmp dword ptr [esi - 0x70]; 
0x000b309a: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x0019f163: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x001881c2: bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00115c75: bound eax, qword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0004e554: bound eax, qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00157c56: bound eax, qword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x00145d8f: bound eax, qword ptr [ebx]; fisttp word ptr [ecx + 0x245c8bda]; sbb byte ptr [ebp - 0x687bf025], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x0019e4aa: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x00144f5c: bound ebp, qword ptr [ecx]; ret 0x8966; 
0x0008e22a: bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x00101f89: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008dcde: bound ecx, qword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0008a8d8: bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x000bf39a: bound edi, qword ptr [0xc483fff6]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00028731: bound edi, qword ptr [edx]; stc; call dword ptr [eax - 0x18]; 
0x00091e65: bound edx, qword ptr [eax - 0x73]; xchg al, bh; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0014858a: bound esi, qword ptr [ebp - 0x7c720002]; or al, al; stc; call dword ptr [eax - 0x73]; 
0x000a2849: bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x000bad60: bsf eax, eax; add eax, edi; pop edi; ret; 
0x000bb35a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000bb4c0: bsf eax, eax; add eax, edx; ret; 
0x000bad70: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bad80: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bad50: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bb4d0: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb4e0: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bb4b0: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000bac9c: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bb4a7: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x00042222: bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000a287c: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000bad90: bsf eax, eax; sub edx, eax; jbe 0xbadd0; add eax, edi; pop edi; ret; 
0x000bada3: bsf eax, eax; sub edx, eax; jbe 0xbadd0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000badb3: bsf eax, eax; sub edx, eax; jbe 0xbadd0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000badc3: bsf eax, eax; sub edx, eax; jbe 0xbadd0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004260f: bsf eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x000426af: bsf eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000a2890: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0004262d: bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000bb311: bsf ecx, ecx; add eax, ecx; ret; 
0x000baab9: bsf ecx, ecx; sub edx, ecx; jbe 0xbaaf0; add eax, ecx; ret; 
0x0004223b: bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x000a9843: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000a9850: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000a985d: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000a9839: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x001a02e5: bsf edx, edx; add eax, edx; ret; 
0x000ba090: bsf edx, edx; call 0x17d651; add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba032: bsf edx, edx; call 0x17d651; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba014: bsf edx, edx; call 0x17d651; add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d90: bsf edx, edx; call 0x17d651; add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d32: bsf edx, edx; call 0x17d651; add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d14: bsf edx, edx; call 0x17d651; add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4069: bsf edx, edx; call 0x17d651; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4044: bsf edx, edx; call 0x17d651; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a39: bsf edx, edx; call 0x17d651; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a14: bsf edx, edx; call 0x17d651; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001a02f1: bsf edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x00041dbd: bsr eax, eax; add eax, 1; ret; 
0x000baf74: bsr eax, eax; add eax, ecx; ret; 
0x000ba905: bsr eax, eax; add eax, edi; pop edi; ret; 
0x000baa53: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000bb020: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000bb030: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb040: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00041dde: bsr eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000bb080: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x30]; ret; 
0x000bb070: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x20]; ret; 
0x000bb060: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x10]; ret; 
0x000bb050: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0xbb090; add eax, ecx; ret; 
0x0004208c: bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00042161: bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042527: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042071: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042477: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042122: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000bb2b9: bsr eax, eax; xor eax, 0x1f; sar eax, 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x000424a2: bsr eax, edx; xor eax, 0x1f; ret; 
0x00041d0c: bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00041bed: bsr ecx, ecx; shl eax, cl; ret; 
0x000424f1: bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x00041cf6: bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000bb0bc: bsr ecx, edx; add eax, ecx; ret; 
0x000bb114: bsr edi, edi; add eax, edi; pop edi; ret; 
0x000bb151: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000bb160: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x00137e7f: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0016c27d: bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x00135438: bswap eax; ret; 
0x001665b3: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000321f2: btc dword ptr [ecx], eax; add byte ptr [eax], al; add cl, ch; ret; 
0x000559e6: call 0x100559b4; xchg ebp, eax; ret 0xb60f; 
0x000d02ae: call 0x100d027c; xchg ebp, eax; ret 0xb60f; 
0x000d088f: call 0x100d085d; xchg edx, eax; ret 0x8539; 
0x00101fd2: call 0x101d10; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x00096833: call 0x101ff0; add esp, 0x1c; ret; 
0x000959d7: call 0x1029a0; mov dword ptr [ebx + 0x294], eax; add esp, 0x18; pop ebx; ret; 
0x00102e5b: call 0x102e20; add esp, 0x1c; ret; 
0x001032b1: call 0x104540; add esp, 0x2c; ret; 
0x00104e95: call 0x104fa0; add esp, 0x1c; ret; 
0x00105395: call 0x105180; add esp, 0x1c; ret; 
0x00104e6f: call 0x105380; add esp, 0x1c; ret; 
0x00164f15: call 0x10acc0; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0013c6c8: call 0x10afb6; jmp dword ptr [esi - 0x70]; 
0x00115286: call 0x10b4c0; add esp, 0x1c; ret; 
0x00183d5d: call 0x10b730; add esp, 0x1c; sar eax, 0x1f; ret; 
0x0010ba53: call 0x10ba60; add esp, 0x1c; ret; 
0x0010be6c: call 0x10bfa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00115762: call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x0010becb: call 0x10c1a0; add esp, 0x10; add esp, 0xc; ret; 
0x00115786: call 0x10c1a0; add esp, 0x1c; ret; 
0x0003a561: call 0x10ed6685; or eax, ecx; ret; 
0x00084036: call 0x1156a0; add esp, 0x18; pop ebx; ret; 
0x00115897: call 0x1158d0; add esp, 0x1c; ret; 
0x001264ee: call 0x115900; add esp, 0x20; add esp, 0xc; ret; 
0x001158bb: call 0x115900; add esp, 0x2c; ret; 
0x00057788: call 0x115980; add esp, 0x1c; ret; 
0x0010b014: call 0x115a80; add esp, 0x1c; ret; 
0x00114693: call 0x1178c0; add esp, 0x10; add esp, 0xc; ret; 
0x00024eaf: call 0x117b80; add esp, 0x1c; ret; 
0x001198ef: call 0x119810; sar eax, 0x1f; add esp, 0xc; ret; 
0x00119a06: call 0x119910; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011ef07: call 0x119a50; add esp, 0x10; test eax, eax; jne 0x11eecc; add esp, 0xc; ret; 
0x00119f7f: call 0x11a280; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011a5cd: call 0x11a470; add esp, 0x18; pop ebx; ret; 
0x00024567: call 0x11a4f0; add esp, 0x18; pop ebx; ret; 
0x0011a849: call 0x11a750; add esp, 0x28; pop ebx; ret; 
0x0011a9e1: call 0x11a860; add esp, 0x28; pop ebx; ret; 
0x00164388: call 0x11b5c0; mov dword ptr [ebx + 0xa60c], eax; add esp, 8; pop ebx; ret; 
0x0011c0d7: call 0x11be10; test eax, eax; je 0x11c0e8; add esp, 0xc; ret; 
0x0011c127: call 0x11be10; test eax, eax; je 0x11c138; add esp, 0xc; ret; 
0x0011c0f1: call 0x11c040; mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0011cc13: call 0x11c820; mov dword ptr [ebx + 0x4580], eax; add esp, 8; pop ebx; ret; 
0x0011cd1c: call 0x11cd60; add esp, 0x1c; ret; 
0x0011cd48: call 0x11ce50; add esp, 0x1c; ret; 
0x001190d9: call 0x11e560; add esp, 0x10; add esp, 0xc; ret; 
0x00118f85: call 0x11e560; add esp, 0x1c; ret; 
0x0011eeda: call 0x11f600; add esp, 0x10; add esp, 0xc; ret; 
0x0002fc31: call 0x11f840; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00120893: call 0x120b90; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00122366: call 0x121c10; add esp, 0x1c; ret; 
0x0002ff82: call 0x1231b0; add esp, 0x1c; ret; 
0x0002715d: call 0x1231e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00123b8d: call 0x123dd0; add esp, 0x1c; ret; 
0x001243c9: call 0x124320; add esp, 0x2c; ret; 
0x0012637d: call 0x126390; add esp, 0x1c; ret; 
0x0009ac27: call 0x127050; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001290d5: call 0x129670; add esp, 0x1c; ret; 
0x0012a688: call 0x129d00; mov dword ptr [ebx + 0x3cc], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0012b2fa: call 0x12a720; pop edx; pop ecx; pop eax; ret; 
0x0012ac10: call 0x12aad0; add esp, 4; ret; 
0x0012d26e: call 0x12cd60; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012f0bd: call 0x12ee90; add esp, 0x28; pop ebx; ret; 
0x00131c62: call 0x130450; add esp, 0x1c; ret; 
0x00130622: call 0x130500; add esp, 0x18; pop ebx; ret; 
0x0012e38d: call 0x131c00; add esp, 0xc; push eax; push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00134195: call 0x1325d0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00119fcb: call 0x133ab0; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x00135075: call 0x133ab0; add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x00165d2b: call 0x133af0; endbr32; mov eax, 2; ret; 
0x00163bab: call 0x133af0; endbr32; ret; 
0x0012179b: call 0x133af0; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0008c8c9: call 0x133af0; nop; endbr32; xor eax, eax; ret; 
0x00102fc9: call 0x133af0; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0010b46a: call 0x133af0; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0016a1d7: call 0x133af0; nop; nop; endbr32; ret; 
0x000e78a7: call 0x133af0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e78a7: call 0x133af0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00134cbc: call 0x134cd0; add esp, 0x1c; ret; 
0x0013501c: call 0x135030; add esp, 0x1c; ret; 
0x00137302: call 0x136250; cmp eax, -0xb; je 0x137300; add esp, 8; pop ebx; ret; 
0x0013978d: call 0x138a90; add esp, 0x1c; ret; 
0x00139773: call 0x138c50; add esp, 0x2c; ret; 
0x00139899: call 0x1397a0; add esp, 0x2c; ret; 
0x0013a021: call 0x139a60; add esp, 0x2c; ret; 
0x0013dc49: call 0x13d500; add esp, 0x3c; ret; 
0x0013e9ef: call 0x13e7e0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x001406dd: call 0x140600; add esp, 0x1c; ret; 
0x00142d67: call 0x142c60; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015ed8a: call 0x14bb50; add esp, 0x1c; ret; 
0x0015eda9: call 0x14bc20; add esp, 0x1c; ret; 
0x00186187: call 0x14d4f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001861f7: call 0x14e3f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00137373: call 0x155fb79; mov eax, 2; ret; 
0x0018638f: call 0x156c70; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00157ad8: call 0x158350; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0018644f: call 0x159670; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x001864b7: call 0x159df0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186527: call 0x15ab30; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186657: call 0x15c220; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186687: call 0x15c560; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186737: call 0x15d4c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001607c5: call 0x1605f0; add esp, 0x3c; ret; 
0x001611fc: call 0x160fe0; add esp, 0x2c; ret; 
0x00163b6b: call 0x165490; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00169951: call 0x166db0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016cff9: call 0x16cd00; add esp, 0x3c; ret; 
0x0016dd9a: call 0x16dae0; add esp, 0x10; add esp, 0xc; ret; 
0x0016dd7b: call 0x16dbe0; add esp, 0x10; add esp, 0xc; ret; 
0x0016e16b: call 0x16dfb0; add esp, 0x2c; ret; 
0x0017221b: call 0x16e490; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001701b5: call 0x16fee0; add esp, 0x1c; ret; 
0x001654f1: call 0x170f70; add esp, 0x1c; ret; 
0x001654c6: call 0x171050; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x001711e9: call 0x171050; add esp, 0x1c; ret; 
0x00171401: call 0x171290; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00087866: call 0x1799f0; add esp, 0x1c; ret; 
0x000883c7: call 0x17aa60; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x000882d4: call 0x17ab20; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00025f38: call 0x17ab80; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0014f562: call 0x17ab80; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0014f6df: call 0x17ab80; add esp, 0x10; mov eax, ebx; call eax; 
0x00158510: call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x0002703b: call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x000260c8: call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x0002623b: call 0x17ab80; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268d5: call 0x17ab80; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0002f426: call 0x17ab80; mov dword ptr [esp], esi; call ebx; 
0x00157bdb: call 0x17ab80; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000bca55: call 0x17ab80; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x0017c4e3: call 0x17c380; add esp, 0x28; pop ebx; ret; 
0x0017d3ab: call 0x17d220; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017d3e7: call 0x17d290; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017d38f: call 0x17d2a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0019b41b: call 0x17d639; add ebx, 0x33dbc; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b356: call 0x17d639; add ebx, 0x33e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199acb: call 0x17d639; add ebx, 0x35608; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999bc: call 0x17d639; add ebx, 0x35717; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001913ed: call 0x17d639; add ebx, 0x3dc26; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001911e9: call 0x17d639; add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001906f4: call 0x17d639; add ebx, 0x3e81f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905ea: call 0x17d639; add ebx, 0x3e929; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001904e3: call 0x17d639; add ebx, 0x3ea30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903e7: call 0x17d639; add ebx, 0x3eb2c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901d9: call 0x17d639; add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190434: call 0x17d639; add ebx, 0x3eb9f; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f6f4: call 0x17d639; add ebx, 0x3f65f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f5ea: call 0x17d639; add ebx, 0x3f769; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f4e3: call 0x17d639; add ebx, 0x3f870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f3da: call 0x17d639; add ebx, 0x3f979; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f209: call 0x17d639; add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f434: call 0x17d639; add ebx, 0x3f9df; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f3ea: call 0x17d639; add ebx, 0x3fa69; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e714: call 0x17d639; add ebx, 0x4047f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e60a: call 0x17d639; add ebx, 0x40589; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e503: call 0x17d639; add ebx, 0x40690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3fa: call 0x17d639; add ebx, 0x40799; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e2e7: call 0x17d639; add ebx, 0x407ec; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e454: call 0x17d639; add ebx, 0x407ff; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e40a: call 0x17d639; add ebx, 0x40889; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e033: call 0x17d639; add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d99a: call 0x17d639; add ebx, 0x40f79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d97c: call 0x17d639; add ebx, 0x40f97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d8e3: call 0x17d639; add ebx, 0x41030; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d81c: call 0x17d639; add ebx, 0x410f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d783: call 0x17d639; add ebx, 0x41190; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d6bc: call 0x17d639; add ebx, 0x41257; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d623: call 0x17d639; add ebx, 0x412f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d55c: call 0x17d639; add ebx, 0x413b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d4c3: call 0x17d639; add ebx, 0x41450; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d3fc: call 0x17d639; add ebx, 0x41517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d363: call 0x17d639; add ebx, 0x415b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d29c: call 0x17d639; add ebx, 0x41677; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d203: call 0x17d639; add ebx, 0x41710; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d13c: call 0x17d639; add ebx, 0x417d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d0a3: call 0x17d639; add ebx, 0x41870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cfdc: call 0x17d639; add ebx, 0x41937; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cf43: call 0x17d639; add ebx, 0x419d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ce7c: call 0x17d639; add ebx, 0x41a97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cde3: call 0x17d639; add ebx, 0x41b30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cd1c: call 0x17d639; add ebx, 0x41bf7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cc83: call 0x17d639; add ebx, 0x41c90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cbbc: call 0x17d639; add ebx, 0x41d57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cb23: call 0x17d639; add ebx, 0x41df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ca5c: call 0x17d639; add ebx, 0x41eb7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c9c3: call 0x17d639; add ebx, 0x41f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c8fc: call 0x17d639; add ebx, 0x42017; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c863: call 0x17d639; add ebx, 0x420b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c79c: call 0x17d639; add ebx, 0x42177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c703: call 0x17d639; add ebx, 0x42210; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c63c: call 0x17d639; add ebx, 0x422d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c5a3: call 0x17d639; add ebx, 0x42370; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c4db: call 0x17d639; add ebx, 0x424f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c3d6: call 0x17d639; add ebx, 0x4253d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c2d0: call 0x17d639; add ebx, 0x42703; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c1c7: call 0x17d639; add ebx, 0x4274c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bed3: call 0x17d639; add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c211: call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018b89a: call 0x17d639; add ebx, 0x42df9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b87c: call 0x17d639; add ebx, 0x42e17; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b7e3: call 0x17d639; add ebx, 0x42eb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b72c: call 0x17d639; add ebx, 0x42f67; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b693: call 0x17d639; add ebx, 0x43000; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b5dc: call 0x17d639; add ebx, 0x430b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b543: call 0x17d639; add ebx, 0x43150; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b48c: call 0x17d639; add ebx, 0x43207; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b3f3: call 0x17d639; add ebx, 0x432a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b33c: call 0x17d639; add ebx, 0x43357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b2a3: call 0x17d639; add ebx, 0x433f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b1ec: call 0x17d639; add ebx, 0x434a7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b153: call 0x17d639; add ebx, 0x43540; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b09c: call 0x17d639; add ebx, 0x435f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b003: call 0x17d639; add ebx, 0x43690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018af4c: call 0x17d639; add ebx, 0x43747; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aeb3: call 0x17d639; add ebx, 0x437e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018adfc: call 0x17d639; add ebx, 0x43897; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ad63: call 0x17d639; add ebx, 0x43930; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018acac: call 0x17d639; add ebx, 0x439e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ac13: call 0x17d639; add ebx, 0x43a80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ab5c: call 0x17d639; add ebx, 0x43b37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aac3: call 0x17d639; add ebx, 0x43bd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa0c: call 0x17d639; add ebx, 0x43c87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a973: call 0x17d639; add ebx, 0x43d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a8bc: call 0x17d639; add ebx, 0x43dd7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a823: call 0x17d639; add ebx, 0x43e70; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a76c: call 0x17d639; add ebx, 0x43f27; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a6d3: call 0x17d639; add ebx, 0x43fc0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a61c: call 0x17d639; add ebx, 0x44077; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a583: call 0x17d639; add ebx, 0x44110; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a4cb: call 0x17d639; add ebx, 0x44288; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a3c6: call 0x17d639; add ebx, 0x442cd; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a2c0: call 0x17d639; add ebx, 0x44493; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a1ba: call 0x17d639; add ebx, 0x444d9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f33: call 0x17d639; add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a21f: call 0x17d639; add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018a1d0: call 0x17d639; add ebx, 0x44683; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018989a: call 0x17d639; add ebx, 0x44b79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018987c: call 0x17d639; add ebx, 0x44b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001897e3: call 0x17d639; add ebx, 0x44c30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018972c: call 0x17d639; add ebx, 0x44ce7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189693: call 0x17d639; add ebx, 0x44d80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001895dc: call 0x17d639; add ebx, 0x44e37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189543: call 0x17d639; add ebx, 0x44ed0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018948c: call 0x17d639; add ebx, 0x44f87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001893f3: call 0x17d639; add ebx, 0x45020; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018933c: call 0x17d639; add ebx, 0x450d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001892a3: call 0x17d639; add ebx, 0x45170; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001891ec: call 0x17d639; add ebx, 0x45227; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189153: call 0x17d639; add ebx, 0x452c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018909c: call 0x17d639; add ebx, 0x45377; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189003: call 0x17d639; add ebx, 0x45410; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188f4c: call 0x17d639; add ebx, 0x454c7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188eb3: call 0x17d639; add ebx, 0x45560; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188dfc: call 0x17d639; add ebx, 0x45617; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188d63: call 0x17d639; add ebx, 0x456b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188cac: call 0x17d639; add ebx, 0x45767; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188c13: call 0x17d639; add ebx, 0x45800; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188b5c: call 0x17d639; add ebx, 0x458b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188ac3: call 0x17d639; add ebx, 0x45950; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188a0c: call 0x17d639; add ebx, 0x45a07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188973: call 0x17d639; add ebx, 0x45aa0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001888bc: call 0x17d639; add ebx, 0x45b57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188823: call 0x17d639; add ebx, 0x45bf0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018876c: call 0x17d639; add ebx, 0x45ca7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001886d3: call 0x17d639; add ebx, 0x45d40; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018861c: call 0x17d639; add ebx, 0x45df7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188583: call 0x17d639; add ebx, 0x45e90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001884cb: call 0x17d639; add ebx, 0x46008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001883c6: call 0x17d639; add ebx, 0x4604d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001882c0: call 0x17d639; add ebx, 0x46213; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881ba: call 0x17d639; add ebx, 0x46259; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018821f: call 0x17d639; add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001881d0: call 0x17d639; add ebx, 0x46403; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00186fd8: call 0x17d639; add ebx, 0x4723b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186f28: call 0x17d639; add ebx, 0x472eb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186e40: call 0x17d639; add ebx, 0x47353; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186a7e: call 0x17d639; add ebx, 0x47515; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001869c2: call 0x17d639; add ebx, 0x475d1; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186966: call 0x17d639; add ebx, 0x4762d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001868a8: call 0x17d639; add ebx, 0x476eb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001867c0: call 0x17d639; add ebx, 0x47753; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001251d4: call 0x17d63d; add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00117c74: call 0x17d63d; add edx, 0x1191bb; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000990c4: call 0x17d63d; add edx, 0x197d6b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00088a14: call 0x17d63d; add edx, 0x1a841b; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x000993f4: call 0x17d641; add eax, 0x197a3b; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008e824: call 0x17d641; add eax, 0x1a260b; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x000889d4: call 0x17d641; add eax, 0x1a845b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889b4: call 0x17d641; add eax, 0x1a847b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x00088994: call 0x17d641; add eax, 0x1a849b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x0003cf14: call 0x17d641; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef4: call 0x17d641; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x00034534: call 0x17d641; add eax, 0x1fc8fb; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x0002f474: call 0x17d641; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x00026074: call 0x17d641; add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026054: call 0x17d641; add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00025564: call 0x17d641; add eax, 0x20b8cb; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024ee4: call 0x17d641; add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x00024ec4: call 0x17d641; add eax, 0x20bf6b; lea eax, [eax - 0x681e8]; ret; 
0x00135414: call 0x17d641; add eax, 0xfba1b; mov eax, dword ptr [eax + 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00120e6f: call 0x17d649; add esi, 0x10ffc0; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ba70c: call 0x17d651; add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba201: call 0x17d651; add ecx, 0x105e6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1dc: call 0x17d651; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1bc: call 0x17d651; add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba19f: call 0x17d651; add ecx, 0x105ed0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba172: call 0x17d651; add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba0e2: call 0x17d651; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba15b: call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba140: call 0x17d651; add ecx, 0x105f2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba0bd: call 0x17d651; add ecx, 0x105f32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba11e: call 0x17d651; add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba093: call 0x17d651; add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba07a: call 0x17d651; add ecx, 0x105f75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba059: call 0x17d651; add ecx, 0x105f96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba035: call 0x17d651; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba017: call 0x17d651; add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f94: call 0x17d651; add ecx, 0x10605b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6de2: call 0x17d651; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6dbd: call 0x17d651; add ecx, 0x1091b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d93: call 0x17d651; add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d7a: call 0x17d651; add ecx, 0x1091f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d59: call 0x17d651; add ecx, 0x109216; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d35: call 0x17d651; add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d17: call 0x17d651; add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6cfb: call 0x17d651; add ecx, 0x109274; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4e6c: call 0x17d651; add ecx, 0x10b02f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d87: call 0x17d651; add ecx, 0x10b1a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d74: call 0x17d651; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d58: call 0x17d651; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4261: call 0x17d651; add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b423c: call 0x17d651; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b421c: call 0x17d651; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41ff: call 0x17d651; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4160: call 0x17d651; add ecx, 0x10bcbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b41d2: call 0x17d651; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41bb: call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41a0: call 0x17d651; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b417e: call 0x17d651; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b408c: call 0x17d651; add ecx, 0x10bd8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b406c: call 0x17d651; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4047: call 0x17d651; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b376c: call 0x17d651; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3687: call 0x17d651; add ecx, 0x10c744; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3674: call 0x17d651; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3658: call 0x17d651; add ecx, 0x10c773; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2c21: call 0x17d651; add ecx, 0x10d11a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bfc: call 0x17d651; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bdc: call 0x17d651; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bbf: call 0x17d651; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b20: call 0x17d651; add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2b92: call 0x17d651; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b7b: call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b60: call 0x17d651; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b3e: call 0x17d651; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2a5c: call 0x17d651; add ecx, 0x10d25f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a3c: call 0x17d651; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a17: call 0x17d651; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017e3b7: call 0x17dad0; add esp, 0x18; pop ebx; ret; 
0x0003faf7: call 0x17e07e89; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00042690: call 0x1a02d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00041e99: call 0x1a0300; add esp, 0x18; pop ebx; ret; 
0x00041f2b: call 0x1a0340; add esp, 0x18; pop ebx; ret; 
0x0009a851: call 0x1ca2b5a; mov dword ptr [edx + 0x368], eax; ret; 
0x00040c0e: call 0x1cabb22; clc; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007e81c: call 0x1e86b25; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007e94c: call 0x1e86c56; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008190b: call 0x1e89c14; ret; 
0x0008192b: call 0x1e89c35; ret; 
0x00088a3d: call 0x1e90d4d; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x00131cb0: call 0x1f39fc3; pop ebx; ret; 
0x00137370: call 0x1fbf678; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000a0d55: call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017a902: call 0x230c0; add esp, 0x10; jmp 0x17a7c7; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x00087e2b: call 0x230f0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000a50a5: call 0x23100; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038c61: call 0x23190; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0002818d: call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0005d769: call 0x23190; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000f70c6: call 0x23190; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0002fd61: call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00080f83: call 0x23190; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x000381b5: call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00089f89: call 0x23190; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00148660: call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00097d73: call 0x23190; mov dword ptr [esp], edi; call esi; 
0x0009a6d5: call 0x23190; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x00102811: call 0x23198; add esp, 0x18; pop ebx; ret; 
0x00157a78: call 0x23198; mov dword ptr [ebx + 0xa200], eax; add esp, 0x18; pop ebx; ret; 
0x0008b165: call 0x244d3a6c; adc al, 0x89; ret; 
0x00024583: call 0x2454a; add esp, 0x1c; ret; 
0x0002585f: call 0x25e40; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x000399d8: call 0x2b9c6; jmp dword ptr [esi - 0x70]; 
0x0010280b: call 0x2f0e915; push eax; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x00033095: call 0x330a0; add esp, 0x1c; ret; 
0x00034ab6: call 0x345b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0013e6b2: call 0x34b10; add esp, 0x10; add esp, 0xc; ret; 
0x0016b3c3: call 0x34b10; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e7847: call 0x34b10; add esp, 0x14; pop ebx; pop esi; ret; 
0x00034b51: call 0x34b10; add esp, 0x1c; ret; 
0x00034b29: call 0x357f0; add esp, 0x2c; ret; 
0x00036129: call 0x360e0; add esp, 0x2c; ret; 
0x000fb811: call 0x391598d7; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x6a52; 
0x0003be07: call 0x3bd80; pop ecx; pop edx; ret; 
0x0003cce9: call 0x3c570; add esp, 0x1c; ret; 
0x00097d51: call 0x3caf0; mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003d261: call 0x3d1e0; add esp, 0x1c; ret; 
0x0003e0ed: call 0x3d930; add esp, 0x1c; ret; 
0x0003e122: call 0x3e230; add esp, 0x1c; ret; 
0x0017d75d: call 0x3e310; add esp, 0x1c; ret; 
0x0003e831: call 0x3e8a0; add esp, 0x1c; ret; 
0x0003ff78: call 0x3fa70; add esp, 0x10; add esp, 0xc; ret; 
0x0003fb3c: call 0x3fb50; add esp, 0x1c; ret; 
0x0003fcfc: call 0x3fd01; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0003fca8: call 0x3ffe0; add esp, 0x10; add esp, 0xc; ret; 
0x0008b9bb: call 0x4013cc2; je 0x8b9d0; pop ebx; pop esi; pop edi; ret; 
0x00040c59: call 0x40830; add esp, 0x2c; ret; 
0x00189b23: call 0x4096ab1b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb13: call 0x4096cb0b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018dc23: call 0x4096ec1b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000414c6: call 0x413e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0004153d: call 0x41550; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x000418fe: call 0x41600; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00041b8c: call 0x41ba0; add esp, 0x1c; ret; 
0x000427b7: call 0x427c0; add esp, 0x2c; ret; 
0x00186c42: call 0x42ee7bad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001871d2: call 0x42ee813d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0002fcf9: call 0x44485ff; add esp, 8; pop ebx; ret; 
0x0003d85d: call 0x446a0; add esp, 0x1c; ret; 
0x00057735: call 0x448003b; ret; 
0x0004468d: call 0x45040; add esp, 0x1c; ret; 
0x00047abd: call 0x482e0; add esp, 0x1c; ret; 
0x0003a11f: call 0x4a2dc; add byte ptr [ecx], bh; ret 0x430f; 
0x0003d87f: call 0x4abd0; add esp, 0x1c; ret; 
0x0004ab83: call 0x4ac10; add esp, 0x2c; ret; 
0x0004b2cd: call 0x4bbc0; add esp, 0x1c; ret; 
0x00141ea2: call 0x4d8a1a8; pop ebx; pop esi; ret; 
0x0003d8bf: call 0x4e640; add esp, 0x1c; ret; 
0x0004e5f3: call 0x4e680; add esp, 0x2c; ret; 
0x0004ef93: call 0x4f020; add esp, 0x2c; ret; 
0x0009a84e: call 0x4f26954; add eax, 1; mov dword ptr [edx + 0x368], eax; ret; 
0x0004f663: call 0x4f6f0; add esp, 0x2c; ret; 
0x0005045e: call 0x4ff70; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00050652: call 0x50610; jmp eax; 
0x0011aa75: call 0x57180; mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00058182: call 0x57f20; mov eax, 1; add esp, 0xc; ret; 
0x00058705: call 0x58570; add esp, 0x18; pop ebx; ret; 
0x000e09d3: call 0x5b0e09d8; ret; 
0x000e0ad9: call 0x5b0e0ade; ret; 
0x000a24a6: call 0x5b0ee92e; pop esi; pop edi; pop ebp; ret; 
0x000f2687: call 0x5b0f2789; cmove eax, edx; ret; 
0x0012b3a7: call 0x5b14942f; pop esi; pop edi; ret; 
0x0012b447: call 0x5b1494cf; pop esi; pop edi; ret; 
0x0012b4e7: call 0x5b14956f; pop esi; pop edi; ret; 
0x0012b587: call 0x5b14960f; pop esi; pop edi; ret; 
0x0012b6c7: call 0x5b14974f; pop esi; pop edi; ret; 
0x0012b767: call 0x5b1497ef; pop esi; pop edi; ret; 
0x0012b807: call 0x5b14988f; pop esi; pop edi; ret; 
0x0012b8a7: call 0x5b14992f; pop esi; pop edi; ret; 
0x0012b947: call 0x5b1499cf; pop esi; pop edi; ret; 
0x0012ba87: call 0x5b149b0f; pop esi; pop edi; ret; 
0x00157fe7: call 0x5b1a446f; pop esi; ret; 
0x00084423: call 0x5b2508ab; pop esi; pop edi; pop ebp; ret; 
0x0009e68c: call 0x5b26ab14; pop esi; pop edi; pop ebp; ret; 
0x00038796: call 0x5b304c1e; pop esi; pop edi; pop ebp; ret; 
0x0014a736: call 0x5b316bbe; pop esi; pop edi; pop ebp; ret; 
0x0014c707: call 0x5b318b8f; pop esi; pop edi; pop ebp; ret; 
0x0015f6df: call 0x5b32bb67; pop esi; pop edi; pop ebp; ret; 
0x0016224f: call 0x5b32e6d7; pop esi; pop edi; pop ebp; ret; 
0x00162c7f: call 0x5b32f107; pop esi; pop edi; pop ebp; ret; 
0x00162f4f: call 0x5b32f3d7; pop esi; pop edi; pop ebp; ret; 
0x00051dd7: call 0x5b5d2565; pop esi; pop edi; ret; 
0x000296fe: call 0x5d61f55e; ret; 
0x0002dcde: call 0x5d623b3e; ret; 
0x00034bc2: call 0x5d62aa22; ret; 
0x00036214: call 0x5d62c074; ret; 
0x00038757: call 0x5d62e5b7; ret; 
0x0003d824: call 0x5d633684; ret; 
0x00052c36: call 0x5d648a96; ret; 
0x000763e8: call 0x5d66c248; ret; 
0x00079d96: call 0x5d66fbf6; ret; 
0x000868c6: call 0x5d67c726; ret; 
0x0008bdfa: call 0x5d681c5a; ret; 
0x0008c185: call 0x5d681fe5; ret; 
0x0008c532: call 0x5d682392; ret; 
0x00093785: call 0x5d6895e5; ret; 
0x0009b95e: call 0x5d6917be; ret; 
0x0009e603: call 0x5d694463; ret; 
0x000a0342: call 0x5d6961a2; ret 4; 
0x000bf3f8: call 0x5d6b5258; ret; 
0x000cd646: call 0x5d6c34a6; ret; 
0x000d3e0b: call 0x5d6c9c6b; ret; 
0x000e0264: call 0x5d6d60c4; ret; 
0x000e15e4: call 0x5d6d7444; ret; 
0x000e3ac9: call 0x5d6d9929; ret; 
0x000e55a9: call 0x5d6db409; ret; 
0x000e7310: call 0x5d6dd170; ret; 
0x000e8123: call 0x5d6ddf83; ret; 
0x000f9333: call 0x5d6ef193; ret; 
0x0010560d: call 0x5d6fb46d; ret; 
0x001057c1: call 0x5d6fb621; ret; 
0x001058df: call 0x5d6fb73f; ret; 
0x00108dca: call 0x5d6fec2a; ret; 
0x0010bba4: call 0x5d701a04; ret; 
0x0011e6e9: call 0x5d714549; ret; 
0x0011e76b: call 0x5d7145cb; ret; 
0x00127756: call 0x5d71d5b6; ret; 
0x001284cb: call 0x5d71e32b; ret; 
0x00133df2: call 0x5d729c52; ret; 
0x00135370: call 0x5d72b1d0; ret; 
0x00137811: call 0x5d72d671; ret; 
0x00138bab: call 0x5d72ea0b; ret; 
0x00138f63: call 0x5d72edc3; ret; 
0x0013c5ba: call 0x5d73241a; ret; 
0x0013fec5: call 0x5d735d25; ret; 
0x00146d5d: call 0x5d73cbbd; ret; 
0x0014a6d1: call 0x5d740531; ret; 
0x0014c6ee: call 0x5d74254e; ret; 
0x0016409e: call 0x5d759efe; ret; 
0x0016ce7d: call 0x5d762cdd; ret; 
0x0017da14: call 0x5d773874; ret; 
0x0019b0c6: call 0x5d790f26; ret; 
0x001381a5: call 0x5db70; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011eaa5: call 0x5e000; add esp, 0x10; add esp, 0xc; ret; 
0x0011ea53: call 0x5e000; add esp, 0x1c; ret; 
0x0012956d: call 0x5e875c7b; mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000506f6: call 0x5f636456; ret; 
0x000512c3: call 0x5f637023; ret; 
0x00051ec6: call 0x5f637c26; ret; 
0x00057686: call 0x62110; add esp, 0x1c; ret; 
0x000576a7: call 0x62420; add esp, 0x1c; ret; 
0x000579c6: call 0x62520; add esp, 0x1c; ret; 
0x000bac94: call 0x660bac99; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00104da3: call 0x6b104757; sbb dword ptr [eax - 0x73], edx; xor dword ptr [edx], 0x58; stc; call dword ptr [eax - 0x18]; 
0x00069575: call 0x6d400; add esp, 0x1c; ret; 
0x0007a8d7: call 0x6d6d0; add esp, 0x1c; ret; 
0x0006d6e5: call 0x6d7f0; add esp, 0x1c; ret; 
0x0008bc5e: call 0x6d94b; dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00073b92: call 0x738f0; mov eax, 1; add esp, 0xc; ret; 
0x00074556: call 0x74410; add esp, 0x1c; ret; 
0x0016b61d: call 0x74540; add esp, 0x18; pop ebx; ret; 
0x000d2073: call 0x74dfa47a; pop ss; mov cl, dl; and cl, 0xf; je 0xd20a0; ret; 
0x000a3dce: call 0x754c34d2; add cl, byte ptr [ebp - 0x1750636e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5e2e: call 0x754c5532; add cl, byte ptr [ebp - 0x1767036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0011f4bf: call 0x757a0; add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0007f597: call 0x757a0; add esp, 0x18; pop ebx; ret; 
0x00076421: call 0x76330; add esp, 0x1c; ret; 
0x0005d364: call 0x76ee0; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000577b5: call 0x77120; add esp, 0x1c; ret; 
0x0007764d: call 0x77470; add esp, 0x2c; ret; 
0x0007f8b4: call 0x787f0; add esp, 0x1c; ret; 
0x0007f8d1: call 0x789a0; add esp, 0x1c; ret; 
0x0005dbbb: call 0x78d80; add esp, 0x2c; ret; 
0x00079f99: call 0x79db0; add esp, 0x28; pop ebx; ret; 
0x0007a9f5: call 0x7a910; add esp, 0x28; pop ebx; ret; 
0x0007a81d: call 0x7a910; add esp, 0x2c; ret; 
0x000798c4: call 0x7b500; add esp, 0x1c; ret; 
0x0007e6dd: call 0x7c3b0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00027073: call 0x7eb2f705; stc; call dword ptr [eax - 0x73]; 
0x00172174: call 0x7ef80; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0007fb41: call 0x7f9d0; add esp, 0x18; pop ebx; ret; 
0x000574d6: call 0x7f9d0; add esp, 0x1c; ret; 
0x0007fcf1: call 0x7fc00; add esp, 0x18; pop ebx; ret; 
0x000575e6: call 0x7fc00; add esp, 0x1c; ret; 
0x0005db8d: call 0x7fdf0; add esp, 0x2c; ret; 
0x000801d1: call 0x80040; add esp, 0x18; pop ebx; ret; 
0x001334f2: call 0x80040; add esp, 0x1c; ret; 
0x00091ca5: call 0x80e90; lea esi, [esi]; mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0005c04d: call 0x8105d267; ret; 
0x000f2481: call 0x810f2506; ret; 
0x00086850: call 0x817d0; sub esp, 4; push 0; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x00188f4d: call 0x82188e98; ret; 
0x0018af4d: call 0x8218ae78; ret; 
0x0012bff9: call 0x83edf12e; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000304a4: call 0x840303d5; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000819e4: call 0x853a0; add esp, 0x1c; ret; 
0x00085d31: call 0x85c50; add esp, 0x28; pop ebx; ret; 
0x000871ce: call 0x87100; add esp, 0x18; pop ebx; ret; 
0x0008720e: call 0x87100; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087952: call 0x87b90; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0011aae0: call 0x886e0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010ad00: call 0x886e0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017ff68: call 0x886e0; mov ecx, esi; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000f2c48: call 0x886e0; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00092221: call 0x88830; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000904d7: call 0x88b00; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009ef24: call 0x8909ef2a; ret 0x388b; 
0x0009466c: call 0x890b0; add esp, 0x28; pop ebx; ret; 
0x0009546c: call 0x890b0; add esp, 0x2c; ret; 
0x001a66d1: call 0x891f2959; ret; 
0x0008b4e5: call 0x893828ed; clc; call dword ptr gs:[0x10]; 
0x001027e2: call 0x893c0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000d548a: call 0x893c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001583e6: call 0x893c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00086eea: call 0x893c0; add esp, 0x1c; ret; 
0x001024b2: call 0x893c0; call dword ptr [esi]; 
0x00089ee1: call 0x894b0; add esp, 0x1c; ret; 
0x000997e3: call 0x89f1c981; ret; 
0x00165b77: call 0x8a165b7a; push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x00093dd8: call 0x8a290; add esp, 0x1c; ret; 
0x0008a420: call 0x8a340; add esp, 0x18; pop ebx; ret; 
0x0008a744: call 0x8a680; add esp, 0x1c; ret; 
0x0008bc5f: call 0x8ba80; mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0004a870: call 0x8c04a867; jl 0x4a89b; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0008d66a: call 0x8c9a0; mov ecx, dword ptr [esp + 0x18]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00097ad5: call 0x8d100; mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00103760: call 0x8d4ba84; or eax, edx; pop ebx; ret; 
0x00099281: call 0x8e150; xor edx, edx; mov eax, 1; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x0008afe7: call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x0008ebd5: call 0x8ec00; add esp, 0x2c; ret; 
0x000911eb: call 0x908d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000912a0: call 0x908d0; add esp, 0x18; pop ebx; ret; 
0x00091e8d: call 0x91d40; add esp, 0x1c; ret; 
0x00147f02: call 0x91e80; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00096e29: call 0x91e80; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00163be1: call 0x92320; add esp, 0x18; lea eax, [ebx + 0xa5cc]; pop ebx; ret; 
0x0002814f: call 0x92320; add esp, 0x1c; ret; 
0x00093c10: call 0x93bb0; add esp, 0x18; pop ebx; ret; 
0x00097fad: call 0x97790; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009928d: call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x000996c3: call 0x99600; add esp, 0x18; pop ebx; ret; 
0x00099121: call 0x99740; add esp, 0x1c; ret; 
0x000996f9: call 0x999f0; add esp, 0x2c; ret; 
0x00099729: call 0x99cb0; add esp, 0x2c; ret; 
0x0009baec: call 0x9b880; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a5058: call 0x9c8ade5c; mov eax, dword ptr [0x41f6fff6]; jbe 0xa5074; cmove eax, edx; ret; 
0x000a3255: call 0x9c8c2959; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x926736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a42ad: call 0x9ccec3b3; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009df48: call 0x9e207; add cl, al; call 0xfda1866; inc edi; ret 0xc083; 
0x0009e16c: call 0x9e42b; add cl, al; call 0xfda1a8a; inc edi; ret 0xc083; 
0x000a24f0: call 0xa23d0; add esp, 0xc; test eax, eax; jne 0xa2503; ret; 
0x000a3fe9: call 0xa4000; add esp, 0x1c; ret; 
0x000a50e5: call 0xa50f0; add esp, 0x1c; ret; 
0x000a6950: call 0xa6960; add esp, 0x1c; ret; 
0x000a6b7d: call 0xa6c40; add esp, 0x1c; ret; 
0x000a5b1f: call 0xa9870; add esp, 0x18; pop ebx; ret; 
0x0005f015: call 0xb615b6a3; inc ebp; or eax, 0x8901e683; ret; 
0x00037a04: call 0xbb530; add esp, 0x1c; ret; 
0x00151369: call 0xbb960; add esp, 0x1c; ret; 
0x00133c45: call 0xbbc50; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a5a2f: call 0xbbc50; add esp, 0x18; pop ebx; ret; 
0x000a238f: call 0xbbcd0; add esp, 0x18; pop ebx; ret; 
0x000cd183: call 0xbbd40; add esp, 0x18; pop ebx; ret; 
0x0009ab39: call 0xbbd80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a23bd: call 0xbbd80; add esp, 0x18; pop ebx; ret; 
0x000a5b7b: call 0xbbdd0; add esp, 0x18; pop ebx; ret; 
0x000a5acb: call 0xbc300; add esp, 0x18; pop ebx; ret; 
0x000bd28c: call 0xbd7c0; add esp, 0x1c; ret; 
0x000bdd6e: call 0xbdd80; add esp, 0x2c; ret; 
0x001341d9: call 0xbe130; add esp, 0x18; pop ebx; ret; 
0x000be3c5: call 0xbe1a0; add esp, 0x1c; ret; 
0x000504fb: call 0xbe3b0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000bcc4b: call 0xbe3b0; add esp, 0x18; pop ebx; ret; 
0x000be599: call 0xbe5b0; add esp, 0x1c; ret; 
0x00134479: call 0xbfd60; add esp, 0x18; pop ebx; ret; 
0x0009497f: call 0xc03a4c0d; ret; 
0x000c05dd: call 0xc0f30; add esp, 0x1c; ret; 
0x000a2993: call 0xc24e3997; ret; 
0x000a3308: call 0xc24e430c; ret; 
0x000a3348: call 0xc24e434c; ret; 
0x000a3383: call 0xc24e4387; ret; 
0x000a33c3: call 0xc24e43c7; ret; 
0x000a3dd8: call 0xc24e4ddc; ret; 
0x000a3fb3: call 0xc24e4fb7; ret; 
0x000a5038: call 0xc24e603c; ret; 
0x000a5db3: call 0xc24e6db7; ret; 
0x000a5df3: call 0xc24e6df7; ret; 
0x000a5e38: call 0xc24e6e3c; ret; 
0x000c36bd: call 0xc3e80; add esp, 0x1c; ret; 
0x000c65a3: call 0xc6630; add esp, 0x2c; ret; 
0x000c6d3d: call 0xc75d0; add esp, 0x1c; ret; 
0x00056d3c: call 0xc8f3ab3; and al, 0x89; ret 0x13eb; 
0x000c9cc3: call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5b3: call 0xca640; add esp, 0x2c; ret; 
0x000cace3: call 0xcad70; add esp, 0x2c; ret; 
0x000cb61d: call 0xcb630; add esp, 0x1c; ret; 
0x000961b9: call 0xccde4c0; ret; 
0x000d22aa: call 0xcd120; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d3ced: call 0xd3260; add esp, 0x18; pop ebx; ret; 
0x000d702c: call 0xd3260; add esp, 0x1c; ret; 
0x000d522f: call 0xd4fc0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d2ed6: call 0xd54a0; add esp, 0x1c; ret; 
0x000d7a7f: call 0xd7b80; add esp, 0x2c; ret; 
0x000a5f58: call 0xdc8aed5c; mov byte ptr [0x41f6fff6], al; jbe 0xa5f74; cmove eax, edx; ret; 
0x000a6108: call 0xdc8aef0c; mov dword ptr [0x41f6fff6], eax; jbe 0xa6124; cmove eax, edx; ret; 
0x000dadd1: call 0xdd110; add esp, 0x2c; ret; 
0x000dae11: call 0xdf450; add esp, 0x2c; ret; 
0x000df5c1: call 0xdf6b0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000df4d1: call 0xdf840; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000e2e31: call 0xe2e40; add esp, 0x1c; ret; 
0x000e2ef1: call 0xe3390; add esp, 0x1c; ret; 
0x000f50c0: call 0xe37ae; inc dword ptr [ebx - 0x7c72f714]; jl 0xf5124; stc; call dword ptr [eax + 0x55]; 
0x0016d760: call 0xe78c0; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x001043de: call 0xe78d0; mov edx, ebx; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000e879f: call 0xe7ff0; add esp, 0x28; pop ebx; ret; 
0x000e86d7: call 0xe8620; add esp, 0x28; pop ebx; ret; 
0x0008ef30: call 0xe8860; mov ecx, dword ptr [ebp + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00089c69: call 0xe8860; mov ecx, dword ptr [esi + 8]; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00104283: call 0xe8900; or ebx, 0xffffffff; mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00140a39: call 0xe8dbf55d; scasb al, byte ptr es:[edi]; xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x000fa9a5: call 0xe90f0137; ret 0xff9e; 
0x001325dd: call 0xec9625f1; sbb byte ptr [ebp - 0x6992880], cl; call dword ptr [eax - 0x18]; 
0x0007585e: call 0xf075863; xchg esp, eax; ret 0xd008; 
0x0017db7b: call 0xf17db80; xchg esp, eax; ret 0xd008; 
0x0017ed7b: call 0xf17ed80; xchg esp, eax; ret 0xd008; 
0x0017ee0b: call 0xf17ee10; xchg esp, eax; ret 0xd008; 
0x00133612: call 0xf2dd0; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000f9e72: call 0xf3970; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f9ef0: call 0xf47f0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f70b3: call 0xf4a70; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00138135: call 0xf50242; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0008b240: call 0xf639cbb9; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b760: call 0xf639d0d9; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00100d4d: call 0xfd99254; xchg esp, eax; ret 0xd020; 
0x0009df4f: call 0xfda1866; inc edi; ret 0xc083; 
0x0009e173: call 0xfda1a8a; inc edi; ret 0xc083; 
0x000a018b: call 0xfda3aa2; inc edi; ret 0x508d; 
0x00104d08: call 0xfe0860f; dec edi; ret 0xd4e9; 
0x000df66a: call dword ptr [0x10]; cmp eax, -0x26; jne 0xdf681; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010abee: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac5e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b05e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x001152de: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x0011581e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00115efc: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x00116b1a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x0011722e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x0011775a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c8a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x0011925e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192ae: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0ce: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x001225fe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x001249ca: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x0012506e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001251e5: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001252ee: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x001263ae: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x0012666e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x0003c3df: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0005da0e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990da: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x0009a132: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x000d425c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x00102cb6: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003c3a0: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0011772c: call dword ptr [0x10]; mov ebx, edx; ret; 
0x000f2cde: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x00117c5c: call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000e2e53: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000893dc: call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x00136171: call dword ptr [0x10]; pop ebx; ret; 
0x0009628a: call dword ptr [0x10]; ret; 
0x0003a70e: call dword ptr [eax + 0x102444db]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000e95aa: call dword ptr [eax + 0x10]; 
0x000e923f: call dword ptr [eax + 0x14]; 
0x000e94a9: call dword ptr [eax + 0x18]; 
0x000778e7: call dword ptr [eax + 0x1c]; 
0x000ebf50: call dword ptr [eax + 0x20]; 
0x00082e28: call dword ptr [eax + 0x24]; 
0x00073738: call dword ptr [eax + 0x29]; 
0x0007889d: call dword ptr [eax + 0x2c]; 
0x000805f0: call dword ptr [eax + 0x30]; 
0x000476bd: call dword ptr [eax + 0x31]; 
0x0007b31f: call dword ptr [eax + 0x34]; 
0x0017ab6f: call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x0008394e: call dword ptr [eax + 0x40]; 
0x0017f713: call dword ptr [eax + 0x48]; 
0x00024e21: call dword ptr [eax + 0x50]; 
0x00053ff5: call dword ptr [eax + 0x51]; 
0x000234d1: call dword ptr [eax + 0x52]; 
0x000351ff: call dword ptr [eax + 0x53]; 
0x00049f9a: call dword ptr [eax + 0x55]; 
0x000300e4: call dword ptr [eax + 0x56]; 
0x0009221e: call dword ptr [eax + 0x56]; call 0x88830; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00046004: call dword ptr [eax + 0x57]; 
0x000287a1: call dword ptr [eax + 0x68]; 
0x0002332d: call dword ptr [eax + 0x6a]; 
0x0016b7b5: call dword ptr [eax + 0x6a]; add al, ch; or byte ptr [ebp - 0x3b7c0010], 0x18; pop ebx; ret; 
0x00139375: call dword ptr [eax + 0x6a]; add al, ch; ret 0xf3b1; 
0x00162726: call dword ptr [eax + 0x6a]; or al, ch; and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x00163346: call dword ptr [eax + 0x6a]; pop es; call 0x14bb50; add esp, 0x1c; ret; 
0x001620e6: call dword ptr [eax + 0x6a]; push es; call 0x14bb50; add esp, 0x1c; ret; 
0x0017a90e: call dword ptr [eax + 0x8244c89]; call eax; 
0x0007b444: call dword ptr [eax + 0xc]; 
0x000a0693: call dword ptr [eax + 0xf]; 
0x00163ddb: call dword ptr [eax + 4]; 
0x00166020: call dword ptr [eax + 8]; 
0x0009df0e: call dword ptr [eax - 0x163e3e77]; or al, 0x3d; jmp ptr [edi - 0x78f10000]; ret; 
0x000fe0c6: call dword ptr [eax - 0x17]; 
0x0002488f: call dword ptr [eax - 0x18]; 
0x000c3597: call dword ptr [eax - 0x18]; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x0008e227: call dword ptr [eax - 0x18]; bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x000906b5: call dword ptr [eax - 0x18]; cli; jmp dword ptr [esi - 0x70]; 
0x00073d97: call dword ptr [eax - 0x18]; cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000d6be1: call dword ptr [eax - 0x18]; cmp cl, dl; cmc; jmp dword ptr [esi - 0x70]; 
0x00149772: call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00047972: call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x00149272: call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001494f2: call dword ptr [eax - 0x18]; daa; test al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00073cea: call dword ptr [eax - 0x18]; das; add ah, bh; jmp dword ptr [esi - 0x70]; 
0x001098ea: call dword ptr [eax - 0x18]; das; movsb byte ptr es:[edi], byte ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x000c00cd: call dword ptr [eax - 0x18]; dec esp; cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x0009183a: call dword ptr [eax - 0x18]; fbld tbyte ptr [edx + edi*8]; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xb073; 
0x0015c01b: call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0004792c: call dword ptr [eax - 0x18]; in eax, dx; ret; 
0x0015d528: call dword ptr [eax - 0x18]; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x001496d2: call dword ptr [eax - 0x18]; inc edi; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001491d2: call dword ptr [eax - 0x18]; inc edi; stosd dword ptr es:[edi], eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015c4f7: call dword ptr [eax - 0x18]; inc edx; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x00159535: call dword ptr [eax - 0x18]; inc esp; or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00156b35: call dword ptr [eax - 0x18]; inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000579a2: call dword ptr [eax - 0x18]; ja 0x5796a; std; jmp dword ptr [esi - 0x70]; 
0x000740a7: call dword ptr [eax - 0x18]; jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x000903a7: call dword ptr [eax - 0x18]; jb 0x903e5; cli; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0005849c: call dword ptr [eax - 0x18]; jge 0x58459; std; jmp dword ptr [esi - 0x70]; 
0x001054a9: call dword ptr [eax - 0x18]; jo 0x105496; bnd call dword ptr [ebp + 0x57]; 
0x00160b50: call dword ptr [eax - 0x18]; leave; xor ebp, ebp; jmp dword ptr [esi - 0x70]; 
0x0013d267: call dword ptr [eax - 0x18]; mov dl, 0x6a; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0003225b: call dword ptr [eax - 0x18]; mov esi, 0xf600001a; ret 0xf03; 
0x001498b2: call dword ptr [eax - 0x18]; movsb byte ptr es:[di], byte ptr [si]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000c0474: call dword ptr [eax - 0x18]; movsd dword ptr es:[edi], dword ptr [esi]; cmp bh, dh; jmp dword ptr [esi - 0x70]; 
0x00073e0e: call dword ptr [eax - 0x18]; or edi, edi; sti; jmp dword ptr [esi - 0x70]; 
0x00149632: call dword ptr [eax - 0x18]; out 0xa6, eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00159beb: call dword ptr [eax - 0x18]; outsb dx, byte ptr [esi]; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00149812: call dword ptr [eax - 0x18]; pop es; movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00149312: call dword ptr [eax - 0x18]; pop es; stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014b87c: call dword ptr [eax - 0x18]; popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x00104daf: call dword ptr [eax - 0x18]; push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x00148832: call dword ptr [eax - 0x18]; push edi; xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x00147a03: call dword ptr [eax - 0x18]; push ss; ret; 
0x0015c5cd: call dword ptr [eax - 0x18]; pushfd; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x00121da7: call dword ptr [eax - 0x18]; ret 0xf3bd; 
0x001021c7: call dword ptr [eax - 0x18]; ret 0xf7ec; 
0x0005ce47: call dword ptr [eax - 0x18]; ret 0xfd7c; 
0x00073456: call dword ptr [eax - 0x18]; ret; 
0x0008f649: call dword ptr [eax - 0x18]; rol byte ptr [esi - 6], 1; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0015c1b7: call dword ptr [eax - 0x18]; sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0008d071: call dword ptr [eax - 0x18]; test al, 0x6c; cli; inc dword ptr [ebx - 0x17a9f314]; aas; ret; 
0x0008f992: call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 6], eax; jmp dword ptr [esi - 0x70]; 
0x00066c72: call dword ptr [eax - 0x18]; xchg edi, eax; ret; 
0x0015c0e5: call dword ptr [eax - 0x18]; xchg esp, eax; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0011b9e5: call dword ptr [eax - 0x18]; xor al, 0x83; int1; jmp dword ptr [esi - 0x70]; 
0x00104997: call dword ptr [eax - 0x18]; xor bl, 0xf2; jmp dword ptr [esi - 0x70]; 
0x00091806: call dword ptr [eax - 0x18]; xor esi, 0xfffffffe; jmp dword ptr [ebp - 0x39]; 
0x0011c875: call dword ptr [eax - 0x39]; 
0x000556b5: call dword ptr [eax - 0x48]; 
0x0012218e: call dword ptr [eax - 0x72f3137d]; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x00025748: call dword ptr [eax - 0x73]; 
0x0015c5c6: call dword ptr [eax - 0x73]; and dword ptr [edi + 0x71], 0xfffffff9; call dword ptr [eax - 0x18]; pushfd; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x0015d521: call dword ptr [eax - 0x73]; and dword ptr [esi + 0x50fff971], 0xffffffe8; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0015c1b0: call dword ptr [eax - 0x73]; cmp dword ptr [ebx], 0x71; stc; call dword ptr [eax - 0x18]; sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x00156b2e: call dword ptr [eax - 0x73]; cmp dword ptr [ecx + 0x6f], -7; call dword ptr [eax - 0x18]; inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0008f66f: call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x000379f6: call dword ptr [eax - 0x75]; 
0x00056035: call dword ptr [eax - 0x77]; 
0x001368ee: call dword ptr [eax - 0x7c028473]; call dword ptr [ecx]; 
0x00073864: call dword ptr [eax - 0x7d]; 
0x000972be: call dword ptr [eax - 0xf3137d]; mov al, 0x80; add dword ptr [eax], eax; add al, ch; ret 0xff42; 
0x00024837: call dword ptr [eax - 1]; 
0x000536cc: call dword ptr [eax]; 
0x001646fb: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00164c36: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00058663: call dword ptr [ebp + 0x1c]; 
0x000859b3: call dword ptr [ebp + 0x30]; 
0x000843e8: call dword ptr [ebp + 0x38]; 
0x0017ec2a: call dword ptr [ebp + 0x3c]; 
0x00083e65: call dword ptr [ebp + 0x40]; 
0x000954ac: call dword ptr [ebp + 0x50]; 
0x000d9f6c: call dword ptr [ebp + 0x55]; 
0x0005d2a5: call dword ptr [ebp + 0x56]; 
0x001707c9: call dword ptr [ebp + 0x56]; call edi; 
0x001054af: call dword ptr [ebp + 0x57]; 
0x00103bfc: call dword ptr [ebp + 0x6a]; 
0x00084238: call dword ptr [ebp + 0xc]; 
0x00138eb3: call dword ptr [ebp + 1]; 
0x00033826: call dword ptr [ebp - 0x18]; 
0x0002445b: call dword ptr [ebp - 0x38]; 
0x001590c4: call dword ptr [ebp - 0x73]; 
0x000338ec: call dword ptr [ebp - 0x75]; 
0x000233df: call dword ptr [ebp - 0x77]; 
0x000a04e9: call dword ptr [ebp - 1]; 
0x00024e04: call dword ptr [ebp]; 
0x0012d868: call dword ptr [ebx + 0x14]; 
0x0007680f: call dword ptr [ebx + 0x1c]; 
0x00166c44: call dword ptr [ebx + 0x20]; 
0x0017a2ae: call dword ptr [ebx + 0x24]; 
0x0017a335: call dword ptr [ebx + 0x28]; 
0x00078b1d: call dword ptr [ebx + 0x2c]; 
0x00075d5f: call dword ptr [ebx + 0x30]; 
0x00103e5d: call dword ptr [ebx + 0x31]; 
0x00078ac4: call dword ptr [ebx + 0x34]; 
0x0007c8ad: call dword ptr [ebx + 0x38]; 
0x0007d5b6: call dword ptr [ebx + 0x40]; 
0x0017f14e: call dword ptr [ebx + 0x44]; 
0x0007567d: call dword ptr [ebx + 0x48]; 
0x00055a91: call dword ptr [ebx + 0x50]; 
0x000551f5: call dword ptr [ebx + 0x51]; 
0x000316ec: call dword ptr [ebx + 0x52]; 
0x00173873: call dword ptr [ebx + 0x53]; 
0x000a271d: call dword ptr [ebx + 0x56]; 
0x00055be3: call dword ptr [ebx + 0x57]; 
0x00131293: call dword ptr [ebx + 0x6a]; 
0x0007cae9: call dword ptr [ebx + 0xc]; 
0x0007d5a6: call dword ptr [ebx + 0xf000005]; 
0x0007580e: call dword ptr [ebx + 8]; 
0x0005a0c2: call dword ptr [ebx - 0x18]; 
0x00194375: call dword ptr [ebx - 0x18]; mov ebp, 0x81fffe92; ret; 
0x001775ca: call dword ptr [ebx - 0x18]; push 0x81000060; ret; 
0x0005e228: call dword ptr [ebx - 0x59]; 
0x0006594b: call dword ptr [ebx - 0x73]; 
0x0003156f: call dword ptr [ebx - 0x75]; 
0x00138884: call dword ptr [ebx - 0x7d]; 
0x00068930: call dword ptr [ebx - 1]; 
0x0003d697: call dword ptr [ebx]; 
0x000922a9: call dword ptr [ebx]; mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00164197: call dword ptr [ecx + 0x10]; 
0x00165781: call dword ptr [ecx + 0x18]; 
0x000e8b61: call dword ptr [ecx + 0x20]; 
0x0005a2f4: call dword ptr [ecx + 0x29]; 
0x00081f28: call dword ptr [ecx + 0x40]; 
0x0003f15e: call dword ptr [ecx + 0x50]; 
0x00024e3e: call dword ptr [ecx + 0x51]; 
0x001690ec: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00087a2e: call dword ptr [ecx + 0x52]; 
0x000d7028: call dword ptr [ecx + 0x52]; push eax; call 0xd3260; add esp, 0x1c; ret; 
0x0005df90: call dword ptr [ecx + 0x53]; 
0x00072a4a: call dword ptr [ecx + 0x57]; 
0x0009b8ea: call dword ptr [ecx + 0x6a]; 
0x00163a91: call dword ptr [ecx + 0xc]; 
0x00163a91: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0016a9d0: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0005514d: call dword ptr [ecx + 0xf]; 
0x00163f42: call dword ptr [ecx + 8]; 
0x0014fe74: call dword ptr [ecx - 0x17]; 
0x00026a19: call dword ptr [ecx - 0x18]; 
0x000733a8: call dword ptr [ecx - 0x75]; 
0x0005404c: call dword ptr [ecx - 0x77]; 
0x0015b6b8: call dword ptr [ecx - 1]; 
0x00054571: call dword ptr [ecx]; 
0x0005d719: call dword ptr [ecx]; add byte ptr [ecx + 0x1d3718c3], al; add byte ptr [ebx + 0x19ec83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0012d580: call dword ptr [edi + 0x14]; 
0x0007b8ea: call dword ptr [edi + 0x18]; 
0x00111a61: call dword ptr [edi + 0x24]; 
0x000e9ade: call dword ptr [edi + 0x25]; 
0x0008678f: call dword ptr [edi + 0x2c]; 
0x000d0bb1: call dword ptr [edi + 0x31]; 
0x0008562d: call dword ptr [edi + 0x34]; 
0x000830dd: call dword ptr [edi + 0x38]; 
0x0007d2ab: call dword ptr [edi + 0x40]; 
0x000825b2: call dword ptr [edi + 0x44]; 
0x00081fff: call dword ptr [edi + 0x48]; 
0x0003f29d: call dword ptr [edi + 0x50]; 
0x0013ba88: call dword ptr [edi + 0x52]; 
0x00055c79: call dword ptr [edi + 0x53]; 
0x00032bd4: call dword ptr [edi + 0x56]; 
0x00024933: call dword ptr [edi + 0x57]; 
0x0007e5a2: call dword ptr [edi + 0x68]; 
0x0004a133: call dword ptr [edi + 0x6a]; 
0x00085791: call dword ptr [edi + 0xc]; 
0x00055723: call dword ptr [edi - 0x17]; 
0x00035f80: call dword ptr [edi - 0x18]; 
0x000ecb92: call dword ptr [edi - 0x18]; jmp dword ptr [ebp - 0xd]; 
0x000d5ded: call dword ptr [edi - 0x75]; 
0x00031645: call dword ptr [edi - 0x77]; 
0x00027f78: call dword ptr [edi - 1]; 
0x000d7659: call dword ptr [edi]; 
0x00164340: call dword ptr [edx + 0x10]; 
0x0016d23c: call dword ptr [edx + 0x14]; 
0x00165869: call dword ptr [edx + 0x18]; 
0x0017a16d: call dword ptr [edx + 0x39c]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017a6f6: call dword ptr [edx + 0x39c]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0002715a: call dword ptr [edx + 0x50]; 
0x0009ab35: call dword ptr [edx + 0x51]; 
0x00033eb0: call dword ptr [edx + 0x52]; 
0x00059e98: call dword ptr [edx + 0x53]; 
0x0003250c: call dword ptr [edx + 0x56]; 
0x00072be3: call dword ptr [edx + 0x57]; 
0x00056669: call dword ptr [edx + 0x6a]; 
0x00168fe6: call dword ptr [edx + 0xc]; 
0x00163df4: call dword ptr [edx + 4]; 
0x0016b40e: call dword ptr [edx + 8]; 
0x00031693: call dword ptr [edx - 0x18]; 
0x00131ef7: call dword ptr [edx - 0x3f]; 
0x00139a30: call dword ptr [edx - 0x46]; 
0x000260fc: call dword ptr [edx - 0x73]; 
0x0005571c: call dword ptr [edx - 0x75]; 
0x0003165f: call dword ptr [edx - 0x77]; 
0x00073075: call dword ptr [edx - 0x7d]; 
0x0002ff7a: call dword ptr [edx - 1]; 
0x000a0ac2: call dword ptr [edx]; 
0x0007b127: call dword ptr [esi + 0x10]; 
0x00164ad2: call dword ptr [esi + 0x14]; 
0x0007b982: call dword ptr [esi + 0x18]; 
0x00084649: call dword ptr [esi + 0x20]; 
0x00078688: call dword ptr [esi + 0x24]; 
0x00081a2b: call dword ptr [esi + 0x30]; 
0x0002ff28: call dword ptr [esi + 0x31]; 
0x00081ec0: call dword ptr [esi + 0x3c]; 
0x00075ca4: call dword ptr [esi + 0x40]; 
0x00033d6f: call dword ptr [esi + 0x50]; 
0x000df3ed: call dword ptr [esi + 0x51]; 
0x000e9004: call dword ptr [esi + 0x52]; 
0x00023438: call dword ptr [esi + 0x53]; 
0x00054f9c: call dword ptr [esi + 0x56]; 
0x0003dc83: call dword ptr [esi + 0x57]; 
0x00045fd4: call dword ptr [esi + 0x6a]; 
0x00085082: call dword ptr [esi + 0xc]; 
0x000e30ff: call dword ptr [esi + 0xf]; 
0x00166153: call dword ptr [esi - 0x17]; 
0x00031375: call dword ptr [esi - 0x18]; 
0x0006f507: call dword ptr [esi - 0x18]; ret 0xbc3; 
0x0003311e: call dword ptr [esi - 0x42]; 
0x00164c2b: call dword ptr [esi - 0x73]; 
0x00055a8a: call dword ptr [esi - 0x75]; 
0x0005d1ff: call dword ptr [esi - 0x77]; 
0x00033e22: call dword ptr [esi - 1]; 
0x000e9646: call dword ptr [esi - 7]; 
0x000a992d: call dword ptr [esi]; 
0x00023265: call dword ptr gs:[0x10]; 
0x0010abed: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac5d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b05d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x001152dd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x0011581d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00115efb: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x00116b19: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x0011722d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x00117759: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c89: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x0011925d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192ad: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0cd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x001225fd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x001249c9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x0012506d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001251e4: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001252ed: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x001263ad: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x0012666d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x0003c3de: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0005da0d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990d9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x0009a131: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x000d425b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x00102cb5: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003c39f: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0011772b: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f2cdd: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00117c5b: call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000e2e52: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000893db: call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x00136170: call dword ptr gs:[0x10]; pop ebx; ret; 
0x00096289: call dword ptr gs:[0x10]; ret; 
0x00024cb7: call eax; 
0x0017d811: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0002ae3b: call ebx; 
0x00099295: call ebx; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00124384: call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00024da2: call ecx; 
0x00025d4e: call edi; 
0x000268e0: call edx; 
0x001226fe: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001245a6: call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00024d4b: call esi; 
0x001226cd: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00079564: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x00077ee5: call ptr [ebx + 0x5e]; mov eax, edi; pop edi; ret; 
0x0002f303: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0005da96: call ptr [ebx + 0x5e]; pop edi; ret; 
0x0003c188: call ptr [ebx + 0x5e]; ret; 
0x00104de5: call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x000a2883: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x0007b733: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x00077019: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x000e240e: call ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000f26a1: call ptr [ebx - 0x7d]; cmp al, 1; mov eax, 0x7f; cmovne eax, edx; ret; 
0x0003be0b: call ptr [ecx + 0x5a]; ret; 
0x000b0d68: call ptr [edi + 0x5b]; ret; 
0x00094f15: call ptr [edi + 0x5d]; ret; 
0x000b3502: call ptr [edi + 0x5e]; pop ebx; ret; 
0x0019da81: call ptr [edi]; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0012b2fe: call ptr [edx + 0x59]; pop eax; ret; 
0x000bbc2f: call ptr [esi + 0x5b]; ret; 
0x00094f53: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0005800e: call ptr [esi + 0x5f]; ret; 
0x0004bb96: cdq; aas; stc; call dword ptr [eax - 0x73]; 
0x00164676: cdq; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000a2391: cdq; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0008ef32: cdq; add eax, 0x684d8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0017d813: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0016a1d9: cdq; cld; jmp dword ptr [esi - 0x70]; 
0x0016a1d9: cdq; cld; jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x0007a3c1: cdq; cli; jmp dword ptr [esi - 0x70]; 
0x0014855a: cdq; hlt; jmp dword ptr [ebp - 0x75]; 
0x0003e70c: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0005d217: cdq; inc ecx; stc; call dword ptr [esi - 0x77]; 
0x000f229d: cdq; jmp 0xf22b3; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000b2b4b: cdq; jmp ecx; 
0x000ba719: cdq; jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000b2d63: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000443fd: cdq; out dx, eax; std; jmp dword ptr [esi - 0x70]; 
0x0018e401: cdq; pop es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007d2a5: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0017f5c0: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0014d224: cdq; push ebx; stc; call dword ptr [eax + 0x52]; 
0x000d2ef3: cdq; push edx; push eax; call 0xd54a0; add esp, 0x1c; ret; 
0x0017ec9d: cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x00081f24: cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x000a29bd: cdq; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x000574ec: cdq; sbb eax, 0x24448b00; add al, 0x8d; xchg edx, eax; ret; 
0x0009b186: cdq; stc; call dword ptr [eax + 0x6a]; 
0x00089806: cdq; stc; jmp dword ptr [ebp - 0x39]; 
0x0016a073: cdq; stosb byte ptr es:[edi], al; in al, dx; call dword ptr [eax - 0x73]; 
0x00124ee3: cdq; sub al, 0xff; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00103f5d: clc; adc byte ptr [edi], cl; test byte ptr [eax], bh; add al, 0; add dh, dh; ret 0xf20; 
0x0012890b: clc; adc dh, byte ptr [edi + 0xa]; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x0009821d: clc; add al, 0x74; fmul dword ptr [ebp - 0x667e779]; call dword ptr [eax - 0x73]; 
0x0003f76a: clc; add al, 0x74; ret 0xffb8; 
0x00148bcd: clc; add al, 0x74; xchg byte ptr [ebx - 0x7e7253b3], cl; and al, al; stc; call dword ptr [eax - 0x73]; 
0x0010df64: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f894: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0005786d: clc; add al, 0xf; xchg esp, eax; ret 0x48b; 
0x000961b0: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0018d13d: clc; add al, 0xff; inc dword ptr [ecx + 0x417d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00120894: clc; add al, byte ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x0008a4e0: clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00079e89: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00079f24: clc; add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x001761da: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1761dd; call dword ptr [eax - 0x18]; 
0x001766d9: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1766dc; call dword ptr [eax - 0x18]; 
0x0011a79d: clc; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8df: clc; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x11a988; call eax; 
0x0006a5c1: clc; add ch, byte ptr [ecx]; ret 0x4489; 
0x0007c5aa: clc; add ch, byte ptr [ecx]; ret 0xed85; 
0x0007e63a: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x0009ac13: clc; add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x0007d5f4: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x0007d27f: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00170a54: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x0014c742: clc; add dh, byte ptr [ebp + 0xa]; mov eax, ecx; ret; 
0x00093b49: clc; add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00120115: clc; add dh, byte ptr [esi + 0x27]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00169984: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0014d819: clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00096e98: clc; add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00093b79: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008acd9: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e1115: clc; add dword ptr [edi + 0x17], edi; pop ebx; pop esi; pop edi; ret; 
0x00146c83: clc; add dword ptr [edi + 0x19], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e109f: clc; add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00040d55: clc; add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x001027b4: clc; add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0017c3e3: clc; add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00177182: clc; add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x000d5458: clc; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0014cbff: clc; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0008961d: clc; add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x00102469: clc; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x001580c3: clc; add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00121be9: clc; add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x00086ed1: clc; add dword ptr [edi + 0xb], edi; ret; 
0x00171f57: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008a88d: clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0013786d: clc; add eax, 0xc; ret; 
0x0018f4eb: clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a0b03: clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x000ba7d5: clc; add eax, ecx; pop edi; ret; 
0x000bb25b: clc; add ebp, dword ptr [ecx]; ret 0x428d; 
0x0008b95c: clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000f709d: clc; add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0002fca2: clc; add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x0008b9be: clc; add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000e487e: clc; and al, 0xf; xchg esp, eax; ret 0xd309; 
0x0018c4e2: clc; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b33d: clc; and bh, bh; inc dword ptr [ecx + 0x43357c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003e1a1: clc; and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x0008f930: clc; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000888c2: clc; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008924a: clc; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008a480: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000a9838: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x001911e8: clc; call 0x17d639; add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901d8: clc; call 0x17d639; add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f208: clc; call 0x17d639; add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e032: clc; call 0x17d639; add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bed2: clc; call 0x17d639; add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f32: clc; call 0x17d639; add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00186a7d: clc; call 0x17d639; add ebx, 0x47515; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000a1e4e: clc; call dword ptr [ebp - 1]; 
0x000a6090: clc; call dword ptr [edi + 0x50]; 
0x0008b4ea: clc; call dword ptr gs:[0x10]; 
0x000a0cd1: clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00104de4: clc; call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x00137308: clc; cmc; je 0x137300; add esp, 8; pop ebx; ret; 
0x000a1efb: clc; cmovae eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000d3817: clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x000d5834: clc; cmp cl, bh; call dword ptr [eax + 0x6a]; 
0x00035b95: clc; cmp cl, bh; call dword ptr [eax - 0x73]; 
0x00027f75: clc; cmp cl, bh; call dword ptr [edi - 1]; 
0x00095246: clc; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x000a6eb0: clc; dec dword ptr [ebp - 0x6562370]; call dword ptr [edx - 0x73]; 
0x000a4fdc: clc; dec dword ptr [ebp - 0x656b770]; call dword ptr [edx - 0x73]; 
0x0006a2a1: clc; dec dword ptr [ebp - 0x6e85fe7c]; jecxz 0x6a2a9; jmp eax; 
0x0006a29a: clc; dec dword ptr [ebx - 0x29537e7c]; clc; dec dword ptr [ebp - 0x6e85fe7c]; jecxz 0x6a2a9; jmp eax; 
0x000d0345: clc; dec dword ptr [ebx - 0x360363]; call dword ptr [esi - 0x75]; 
0x001320a4: clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0004f7e1: clc; dec dword ptr [ebx - 0x73f37d54]; clc; dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x0009a6d8: clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000c23a1: clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x0012ebdc: clc; dec dword ptr [ebx - 0x7cabdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x0008eeb2: clc; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004f7e8: clc; dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x0005707c: clc; dec dword ptr [ecx - 0x74ebdbbc]; inc eax; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x000a89b1: clc; dec dword ptr [edi]; inc esp; ret 0xcceb; 
0x000a8b33: clc; dec dword ptr [edi]; inc esp; ret; 
0x00101811: clc; dec dword ptr [edi]; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x0006ef71: clc; dec dword ptr [edi]; test bl, ch; sbb dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x00055cfc: clc; dec dword ptr [edi]; test byte ptr [eax + 0x31000005], al; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00126f94: clc; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x0017d7d3: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x0015ec98: clc; dec dword ptr [edi]; xchg esp, eax; ret 0xede9; 
0x00076f8d: clc; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000df8df: clc; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000df671: clc; fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00040b20: clc; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013757c: clc; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00133c48: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00097cfb: clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001027e5: clc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00183d60: clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0017d987: clc; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + eax*8 - 0x77]; ret 0xe283; 
0x00133b4b: clc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x000a0677: clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000dd3b8: clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000428c5: clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x00074f6d: clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000bc896: clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0017df59: clc; jmp dword ptr [ebp - 0x75]; 
0x0009a6bf: clc; jmp dword ptr [ebp - 1]; 
0x000f4d0b: clc; jmp dword ptr [esi + 0xb]; 
0x000a4ffb: clc; jmp dword ptr [esi - 0x70]; 
0x0019f69a: clc; jne 0x19f6c0; pop edi; pop esi; pop ebx; ret; 
0x000df68b: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x2ec3; 
0x0012fa03: clc; mov dh, 0xf9; call dword ptr [edx + 0x50]; 
0x0011b9d2: clc; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x001867f1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000f9ee2: clc; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x00131e5a: clc; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x00186c47: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b921: clc; mov eax, edx; pop ebx; ret; 
0x0018efdb: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ffbb: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0018991c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b91c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00139ed4: clc; or al, 0xf1; jmp dword ptr [esi - 0x77]; 
0x000962cf: clc; or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x000b2d04: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00088933: clc; or byte ptr [ebp + eax - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00124ee8: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00124ea7: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00134d8d: clc; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x00134e79: clc; or dword ptr [edi], ecx; inc edi; ret 0xfb83; 
0x000ce6e5: clc; or dword ptr [edi], ecx; xchg byte ptr [edx - 0x74000009], dh; test dword ptr [ecx + ecx*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x0012bffe: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0009aa1f: clc; or edi, dword ptr [eax + 8]; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x001198f5: clc; pop ds; add esp, 0xc; ret; 
0x001155f9: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003ab90: clc; pop ds; not eax; and eax, edx; ret; 
0x0003a87b: clc; pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00183d66: clc; pop ds; ret; 
0x0003a4fc: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000b958a: clc; pop ebx; pop edi; ret; 
0x001224e1: clc; pop ebx; pop esi; pop ebp; ret; 
0x0002f7ce: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005e54e: clc; pop ebx; pop esi; pop edi; ret; 
0x0011ad64: clc; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x0018c2ce: clc; pop edi; call 0x17d639; add ebx, 0x42703; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a2be: clc; pop edi; call 0x17d639; add ebx, 0x44493; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001882be: clc; pop edi; call 0x17d639; add ebx, 0x46213; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000332dd: clc; pop edi; pop ebp; ret; 
0x000acbd2: clc; pop edi; pop ebx; ret; 
0x000b3781: clc; pop edi; pop esi; pop ebx; ret; 
0x00077ee9: clc; pop edi; ret; 
0x00033310: clc; pop esi; pop edi; pop ebp; ret; 
0x00091f6f: clc; push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00139094: clc; push dword ptr [eax - 0x77]; ret; 
0x0007fbad: clc; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0017f00d: clc; push dword ptr [edi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0010a972: clc; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x00179689: clc; push dword ptr [esi + ebx - 0x7d]; in al, dx; or al, 0x89; ret; 
0x00106186: clc; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x0017d98d: clc; push dword ptr [esp + eax*8 - 0x77]; ret 0xe283; 
0x0009aa06: clc; push eax; jbe 0x9aa10; ret; 
0x00040c13: clc; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008394a: clc; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x001522b9: clc; ret 0xfff9; 
0x00068fa4: clc; ret; 
0x000c24e0: clc; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000baa57: clc; sub eax, 0x10; pop edi; ret; 
0x0018c63d: clc; ud0; inc dword ptr [ecx + 0x422d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00045008: clc; xchg cl, bh; call dword ptr [eax + 0x68]; 
0x000478f3: clc; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00091e69: clc; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0007cd64: clc; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x00098233: clc; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x000bb155: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0008aa0a: clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00131e4d: clc; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x00119f80: cld; add al, byte ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x000ccea2: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003681b: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000f2702: cld; add byte ptr [eax], al; pop ebx; ret; 
0x0019fa04: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0019d1f0: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000f27e3: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000c344b: cld; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; stc; call dword ptr [eax - 0x18]; 
0x00047896: cld; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esi, esi; stc; call dword ptr [eax - 0x18]; 
0x0009a836: cld; add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x00128956: cld; add eax, ebx; pop ebx; pop esi; ret; 
0x00165777: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001222d2: cld; call dword ptr [eax - 0x73]; 
0x000f0ae5: cld; call dword ptr [edi - 1]; 
0x0016e07b: cld; cmp ebx, esi; call dword ptr [ebp - 0x73]; 
0x001645c2: cld; cmp ebx, esi; call dword ptr [edx + 0x6a]; 
0x0019b466: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x19b6b0; pop ebx; ret; 
0x00199d6f: cld; cmp ecx, ebx; mov eax, 0; jne 0x19a4f0; pop ebx; ret; 
0x0019cb21: cld; cmp ecx, ebx; mov eax, 0; jne 0x19cd50; pop ebx; ret; 
0x000a33c1: cld; cmpsb byte ptr [esi], byte ptr es:[edi]; call 0xc24e43c7; ret; 
0x000a5e36: cld; cwde; call 0xc24e6e3c; ret; 
0x00073949: cld; dec dword ptr [ebp - 0x683b37a]; call dword ptr [eax - 0x73]; 
0x0016a05f: cld; dec dword ptr [ebp - 0x68c197d]; call dword ptr [edi + 0x6a]; 
0x000f5bf5: cld; dec dword ptr [ebx - 0x76e3dbb4]; ret 0x448b; 
0x00100958: cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x0016f2aa: cld; in eax, 0xf3; call dword ptr [eax - 0x73]; 
0x0005d76c: cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00163343: cld; jb 0x16333f; call dword ptr [eax + 0x6a]; 
0x00163397: cld; jb 0x163393; jmp dword ptr [ebp - 0x75]; 
0x00163443: cld; jb 0x16343f; call dword ptr [eax - 0x18]; 
0x0002726a: cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x000274c8: cld; jle 0x274c4; jmp dword ptr [esi - 0x77]; 
0x00073cef: cld; jmp dword ptr [esi - 0x70]; 
0x0016a1da: cld; jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x001718f8: cld; jmp dword ptr [esi - 0x70]; nop; nop; endbr32; ret; 
0x0019f6b5: cld; jne 0x19f6c0; pop edi; pop esi; pop ebx; ret; 
0x0019f7a7: cld; jne 0x19f7b0; pop ebx; ret; 
0x0016577a: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0011e4f6: cld; mov dh, 0xe8; dec dword ptr [ecx - 0x5f16efba]; idiv edi; jmp dword ptr [esi - 0x70]; 
0x001876a9: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001898e4: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b8e4: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00189935: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b935: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0019b469: cld; mov eax, 0; jne 0x19b6b0; pop ebx; ret; 
0x000a3346: cld; mov eax, 0x440fffe8; ret 0x66c3; 
0x001867f4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001879cd: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001876ad: cld; mov eax, edx; pop ebx; ret; 
0x0015b0f0: cld; mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x001719b8: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x000bbd25: cld; pop edi; ret; 
0x00165866: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x001658d5: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0015a938: cld; pushfd; bnd call dword ptr [eax - 0x18]; 
0x000740ab: cld; sti; jmp dword ptr [esi - 0x70]; 
0x0005a820: cld; xchg esp, eax; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x0019f7a2: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x19f7b0; pop ebx; ret; 
0x0008bb9e: cld; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008b44e: cld; xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00040fdf: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x00145570: cli; adc ch, byte ptr [ecx]; ret 0xd101; 
0x000384f8: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0007ba74: cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000d79b7: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x0008ba37: cli; add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x0010396e: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008b436: cli; add dh, byte ptr [edx + edx - 0x77]; ret 0xe283; 
0x0008a862: cli; add dh, byte ptr [esi + 0xa]; ret; 
0x000920c1: cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000f8067: cli; add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x000e0ece: cli; add dword ptr [edi + 0x1e], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040e84: cli; add dword ptr [edi + 0x20], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017728c: cli; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0008e343: cli; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0003f5f2: cli; add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x001583b1: cli; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00177200: cli; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0005d8f3: cli; add dword ptr [edi + 0x39], edi; add esp, 0x18; pop ebx; ret; 
0x0014bb30: cli; add dword ptr [edi + 4], edi; ret; 
0x0008a75d: cli; add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000a232f: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00092bce: cli; add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], edx; ret 0xf283; 
0x00092dce: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x00124743: cli; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x00091424: cli; add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0018f3f2: cli; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d3b3f: cli; add ebp, dword ptr [ecx]; fimul dword ptr [ebx + 0x2944245c]; ret 0x448b; 
0x001413f1: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x0008820c: cli; call dword ptr [eax + 0x6a]; 
0x0003cfee: cli; call dword ptr gs:[0x10]; 
0x001640d1: cli; cld; call dword ptr [eax - 0x73]; 
0x000f290b: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00151001: cli; cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x000a250b: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0008f959: cli; dec dword ptr [ebp - 0x683937f]; call dword ptr [eax - 0x73]; 
0x001858bb: cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64eff79]; call dword ptr [eax - 0x73]; 
0x000dfe23: cli; dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0008e012: cli; dec dword ptr [ebx - 0x7972dbcc]; lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax + 0x68]; 
0x0008e048: cli; dec dword ptr [ebx - 0x7972dbcc]; lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x0014abe1: cli; dec dword ptr [edi]; test byte ptr [edx + 0x39000001], dh; ret 0x840f; 
0x000f2654: cli; inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x0008d076: cli; inc dword ptr [ebx - 0x17a9f314]; aas; ret; 
0x00080f86: cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0008f64e: cli; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0009183f: cli; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xb073; 
0x000e1197: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a3286: cli; inc eax; ja 0xa3291; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000a32b6: cli; inc eax; ja 0xa32c1; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x0005bd2b: cli; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0005defc: cli; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x000f2814: cli; jae 0xf2860; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x00167f16: cli; jb 0x167f12; call dword ptr [eax - 1]; 
0x00125369: cli; je 0x1253c3; pop ebx; pop esi; ret; 
0x0008ef57: cli; jmp 0x8eee4; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00082ceb: cli; jmp dword ptr [ebp - 0x75]; 
0x0010cfd7: cli; jmp dword ptr [esi + 3]; 
0x00138cd4: cli; jmp dword ptr [esi - 0x3f]; 
0x00138cd4: cli; jmp dword ptr [esi - 0x3f]; ret; 
0x00075a9a: cli; jmp dword ptr [esi - 0x70]; 
0x0016479d: cli; jmp ptr [edx]; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0015f573: cli; jno 0x15f56f; call dword ptr [eax + 0x6a]; 
0x0015f5c7: cli; jno 0x15f5c3; jmp dword ptr [ebp - 0x75]; 
0x0015f673: cli; jno 0x15f66f; call dword ptr [eax - 0x18]; 
0x001637bd: cli; jno 0x1637b9; call dword ptr [eax - 0x18]; 
0x00045324: cli; jo 0x452b0; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x000485b3: cli; jo 0x4853f; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x0004bec4: cli; jo 0x4be50; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x00053764: cli; jo 0x536f0; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x0018ecbc: cli; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed4c: cli; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eddc: cli; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee6c: cli; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eefc: cli; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef8c: cli; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7ac: cli; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e83c: cli; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e8cc: cli; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e95c: cli; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9ec: cli; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea7c: cli; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb0c: cli; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb9c: cli; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec2c: cli; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00115aff: cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b95c: cli; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dfe2a: cli; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0003d0ff: cli; mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0af: cli; mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00127c10: cli; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00186834: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189a17: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ba07: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0015328b: cli; or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00093ed5: cli; or dh, byte ptr [eax + edx + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x00093e43: cli; or dh, byte ptr [edx + edx + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x00088716: cli; or dh, byte ptr [esi + edx - 0x7d]; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00054a64: cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x000a6a21: cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0012b636: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x00155182: cli; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0011604f: cli; pop ds; call dword ptr gs:[0x10]; 
0x0007c1f0: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011d176: cli; pop ebx; stc; call dword ptr [eax + 0x55]; 
0x0019d8b2: cli; pop edi; ret; 
0x00083ef8: cli; pop esi; pop edi; pop ebp; ret; 
0x000f2777: cli; push 0x62759123; ret; 
0x0003a880: cli; push ds; and eax, edx; ret; 
0x0017f350: cli; push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x00160045: cli; push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0013c823: cli; push dword ptr [edi + eax*4 - 0x75]; inc ebp; add byte ptr [ecx], bh; ret 0x1274; 
0x000f2855: cli; ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x00124ea2: cli; sbb bh, bh; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00178440: cli; stc; jmp dword ptr [ebp - 0x75]; 
0x00141127: cli; sub al, 0xf; xchg ebp, eax; ret 0xd184; 
0x001413f7: cli; sub al, 0xf; xchg ebp, eax; ret 0xd384; 
0x000b1137: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000baf47: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001475ea: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x000d2091: cmc; and ch, 0xf; je 0xd20b0; add eax, 2; ret; 
0x0012234a: cmc; and dh, al; jmp dword ptr [esi - 0x70]; 
0x000f276d: cmc; bnd jge 0xf27a0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x00124383: cmc; call ebx; 
0x00124383: cmc; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000f27e2: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000a314f: cmc; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a564a: cmc; cmp edx, esi; je 0xa5640; pop ebx; pop esi; ret; 
0x000d6ba8: cmc; dec dword ptr [ebp - 0x652d37d]; call dword ptr [eax - 0x73]; 
0x000a29ba: cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a3222: cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a29e0: cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000c6192: cmc; idiv bh; call dword ptr [eax + 0x31]; 
0x00161c02: cmc; inc dword ptr [ebx + 0x448d10c4]; push es; add dword ptr [ecx - 0x16efdbbc], ecx; ret; 
0x00166013: cmc; inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x00165884: cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0011f4c2: cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00137309: cmc; je 0x137300; add esp, 8; pop ebx; ret; 
0x0011a564: cmc; jmp dword ptr [ebp - 0x5f]; 
0x000d6be6: cmc; jmp dword ptr [esi - 0x70]; 
0x000f290c: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x000f26c4: cmc; mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x00186cf7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0011d46a: cmc; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d987d], cl; call dword ptr [edx + 0x52]; 
0x000a561a: cmc; pop ebx; ret; 
0x0019d872: cmc; pop edi; ret; 
0x001334a5: cmc; push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf55fdc92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0011d40a: cmc; pushal; stc; call dword ptr [eax + 0x55]; 
0x0019c877: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000b6d81: cmc; xchg ecx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001405f7: cmc; xor al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0009aa26: cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x00093bdf: cmova eax, edx; ret; 
0x000e1454: cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000a1efc: cmovae eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e129a: cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bc3b1: cmovb eax, ecx; ret; 
0x00087470: cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0007c053: cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x000bb268: cmovb eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000bb291: cmovb eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00137af0: cmovb eax, edx; ret; 
0x001993aa: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0008e258: cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001028da: cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008ef55: cmovbe edi, edx; jmp 0x8eee4; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000886cf: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0007e257: cmove eax, ecx; ret; 
0x000a2899: cmove eax, edx; add eax, 0x21; ret; 
0x000a284e: cmove eax, edx; add eax, 1; ret; 
0x0011c0fd: cmove eax, edx; add esp, 0xc; ret; 
0x0004470b: cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x000f2658: cmove eax, edx; pop ebx; ret; 
0x00042619: cmove eax, edx; ret; 
0x000cd019: cmove ebx, eax; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00160bcd: cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00033b47: cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x0012d161: cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000e899b: cmove edx, eax; mov eax, edx; ret; 
0x000328a2: cmove edx, ecx; mov byte ptr [eax + 0x11e1], dl; lea eax, [eax + 0x11ac]; ret; 
0x001050f9: cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00040dec: cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00104ff0: cmove esi, eax; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00040e27: cmove esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0007adf7: cmovg eax, ecx; test edx, edx; jne 0x7adf0; ret; 
0x00084dd7: cmovg eax, ecx; test edx, edx; jne 0x84dd0; ret; 
0x000bfd52: cmovg eax, edx; pop edi; ret; 
0x000bfd33: cmovg eax, edx; ret; 
0x000a0247: cmovne eax, ecx; pop ebx; ret; 
0x000bb522: cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a235b: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00044736: cmovne eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x00041d6e: cmovne eax, edx; cmovne edx, ebx; pop ebx; ret; 
0x0007aea5: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000855b1: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a29e2: cmovne eax, edx; pop ebx; ret; 
0x00042243: cmovne eax, edx; ret; 
0x000580e8: cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011ea2f: cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000cd0c7: cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x0014e193: cmovne ebx, edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00041d71: cmovne edx, ebx; pop ebx; ret; 
0x00080c9d: cmovne edx, esi; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000f49e4: cmovne esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00119945: cmovns eax, edx; ret; 
0x0003fbdb: cmovs eax, ecx; pop ebx; ret; 
0x0003fd8e: cmovs eax, edx; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012cfee: cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00028292: cmovs eax, edx; ret; 
0x0003fbd8: cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00163342: cmp ah, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00163442: cmp ah, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00163396: cmp ah, 0x72; stc; jmp dword ptr [ebp - 0x75]; 
0x0015497a: cmp ah, al; stc; call dword ptr [eax - 0x73]; 
0x0019b0b2: cmp ah, byte ptr [ebx - 0x34]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000dadd2: cmp ah, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004b3ef: cmp ah, byte ptr [esi + 0x25]; add byte ptr [esi], cl; cmp eax, 0x840f0800; ret 2; 
0x000333b1: cmp al, 0; add byte ptr [eax], al; add byte ptr [eax - 0x18], dl; hlt; ret; 
0x0009eb53: cmp al, 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00117727: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117727: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0009ab22: cmp al, 0; add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0009b69f: cmp al, 0; add byte ptr [ecx], al; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x000bc85d: cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000bcb73: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x000bcc87: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000bd7a8: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000bdd51: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000bcc3c: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00081896: cmp al, 0x1a; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00097d79: cmp al, 0x24; call esi; 
0x00061af0: cmp al, 0x24; fstp xword ptr [esp + 0x90]; jmp 0x60858; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0017d646: cmp al, 0x24; ret; 
0x000f7f93: cmp al, 0x29; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x0013244d: cmp al, 0x29; ret 0x4489; 
0x000f1f2b: cmp al, 0x2a; je 0xf1f33; cmp al, 0x3f; jne 0xf1f49; mov eax, 1; ret; 
0x0008b1e8: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00125fdf: cmp al, 0x31; ror byte ptr [ebx - 0x749fdba4], 0x74; and al, 0x64; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00035b94: cmp al, 0x38; stc; call dword ptr [eax - 0x73]; 
0x000d1e92: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000f1f2f: cmp al, 0x3f; jne 0xf1f49; mov eax, 1; ret; 
0x0007ef6f: cmp al, 0x50; cli; jmp dword ptr [esi - 0x70]; 
0x0008825d: cmp al, 0x51; call eax; 
0x000be2f7: cmp al, 0x51; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000880eb: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0007e0fc: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0007e1db: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0016c5b1: cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00084647: cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x0016d3ef: cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x000843e6: cmp al, 0x56; call dword ptr [ebp + 0x38]; 
0x0011f007: cmp al, 0x59; stc; jmp dword ptr [ebp - 0x5f]; 
0x000a5de8: cmp al, 0x5a; idiv bh; and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x0016c562: cmp al, 0x5a; push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x001a8f76: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00027c59: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0011b492: cmp al, 0x5b; ret; 
0x00156a66: cmp al, 0x5e; bnd call dword ptr [eax - 0x18]; 
0x0016e947: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea27: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea8a: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaea: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb57: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0011524c: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x0016e8d7: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x000d2e65: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x0014f527: cmp al, 0x6e; stc; call dword ptr [eax + 0x55]; 
0x0014e455: cmp al, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x0008e768: cmp al, 0x72; add al, 0x39; ret 0x6b72; 
0x000d1e95: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x00085b82: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x85b80; ret; 
0x0014165d: cmp al, 0x81; les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011b57a: cmp al, 0x81; les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x000f3543: cmp al, 0x82; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0010d368: cmp al, 0x83; in al, dx; or al, 0x31; jmp dword ptr [esi - 0x7d]; 
0x0016ce3b: cmp al, 0x83; in al, dx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0008af7b: cmp al, 0x83; in al, dx; or al, 0xff; jae 0x8af86; call dword ptr [ebx]; 
0x00126fe8: cmp al, 0x83; in al, dx; or byte ptr [ebp - 0x64afb79], cl; call dword ptr [eax + 0x55]; 
0x0007aeaa: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007b353: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000f33d8: cmp al, 0x83; ret; 
0x0015b5b0: cmp al, 0x85; std; jmp dword ptr [esi - 0x70]; 
0x00159466: cmp al, 0x88; bnd call dword ptr [eax - 0x18]; 
0x000868c4: cmp al, 0x89; call 0x5d67c726; ret; 
0x000e0262: cmp al, 0x89; call 0x5d6d60c4; ret; 
0x001284c9: cmp al, 0x89; call 0x5d71e32b; ret; 
0x00138ba9: cmp al, 0x89; call 0x5d72ea0b; ret; 
0x0004f205: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001186a4: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0012742b: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00105306: cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c7b5f: cmp al, 0x89; je 0xc7b87; sub al, 0x39; ret 0x840f; 
0x0008ecb2: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00129ba3: cmp al, 0x89; ret 0xc031; 
0x00044cbf: cmp al, 0x89; ret 0xc483; 
0x000d8ec7: cmp al, 0x89; ret 0xe6c1; 
0x00026ba2: cmp al, 0x89; ret; 
0x000a5eb6: cmp al, 0x8a; out 0xff, eax; cmove eax, edx; ret; 
0x0003449e: cmp al, 0x8b; add al, 0x90; ret; 
0x000753f2: cmp al, 0x8b; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x548b; 
0x0014d25b: cmp al, 0x8b; add eax, dword ptr [ebp - 0x72c98b40]; mov dl, 0x6c; ret 0xfff9; 
0x0007b32f: cmp al, 0x8b; dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000415ed: cmp al, 0x8b; inc eax; inc eax; ret; 
0x0011022c: cmp al, 0x8b; inc ebp; add byte ptr [ecx - 0x17acfbba], cl; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0010e8fc: cmp al, 0x8b; inc ebp; add byte ptr [ecx - 0x17acfbba], cl; xlatb; fdiv st(2), st(0); jmp dword ptr [esi + 3]; 
0x0002f097: cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0004871f: cmp al, 0x8b; je 0x48747; adc byte ptr [ecx], al; ret 0xd389; 
0x000c8f0a: cmp al, 0x8b; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x0011b40a: cmp al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000c2118: cmp al, 0x8d; and byte ptr [eax], 0xcf; stc; call dword ptr [eax + 0x53]; 
0x000c20eb: cmp al, 0x8d; or ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x0002879b: cmp al, 0x8d; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000286e9: cmp al, 0x8d; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000c1a3e: cmp al, 0x8d; sbb ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x00073ebc: cmp al, 0x8d; stc; call dword ptr [eax - 0x73]; 
0x000c4974: cmp al, 0x8d; xchg ah, bl; into; stc; call dword ptr [eax + 0x57]; 
0x00029b2c: cmp al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], al; call dword ptr [eax - 0x73]; 
0x00029b4f: cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x000299cb: cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0002e152: cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002dfb6: cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x000fe0ba: cmp al, 0x8d; xchg dword ptr [edx + 0x3c], ebx; stc; dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x00029eef: cmp al, 0x8d; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e17a: cmp al, 0x8d; xchg esp, ebp; js 0x2e179; call dword ptr [eax - 0x73]; 
0x0002e1af: cmp al, 0x8d; xchg esp, ebp; js 0x2e1ae; call dword ptr [eax - 0x73]; 
0x0002e1f5: cmp al, 0x8d; xchg esp, ebp; js 0x2e1f4; call dword ptr [eax - 0x73]; 
0x001011a1: cmp al, 0x90; add byte ptr [edi], cl; test dword ptr [edx - 0x7c000005], esi; ret 0x8301; 
0x0007cd63: cmp al, 0x91; stc; call dword ptr [eax - 0x73]; 
0x0008f951: cmp al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x00095dbc: cmp al, 0x96; stc; call dword ptr [eax - 0x18]; 
0x000a2390: cmp al, 0x99; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000a01ae: cmp al, 0xa7; stc; call dword ptr [eax - 0x73]; 
0x000a5db1: cmp al, 0xa8; call 0xc24e6db7; ret; 
0x0009f40b: cmp al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000e753c: cmp al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x0011b9d1: cmp al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x0009a405: cmp al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124de6: cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126446: cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125e36: cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001156d3: cmp al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015234d: cmp al, 0xc3; stc; call dword ptr [eax - 0x18]; 
0x0005ddd3: cmp al, 0xc; ret 0xff50; 
0x0012bbbb: cmp al, 0xe8; pop ds; or bh, cl; jmp dword ptr [ebp - 0x75]; 
0x0002bfb8: cmp al, 0xe8; ret 0x14eb; 
0x0003ea58: cmp al, 0xe8; ret 0xa39; 
0x00115597: cmp al, 0xe8; ret; 
0x000bf2fc: cmp al, 0xee; idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000c00b1: cmp al, 0xf7; dec dword ptr [ebx - 0x72e3db84]; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c00d1: cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00140fe9: cmp al, 0xf9; call dword ptr [eax + 0x51]; 
0x0013939c: cmp al, 0xf9; call dword ptr [eax + 0x55]; 
0x0010b610: cmp al, 0xf9; call dword ptr [eax + 0x56]; 
0x001059b6: cmp al, 0xf9; call dword ptr [eax - 0x18]; 
0x00132292: cmp al, 0xf9; call dword ptr [eax - 0x73]; 
0x000fe0be: cmp al, 0xf9; dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x0003f559: cmp al, 0xf9; dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0003f343: cmp al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0x77e9; 
0x0014fd9c: cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0011f171: cmp al, 0xf9; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0003f433: cmp al, 0xf9; inc dword ptr [ebp - 0x277af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x0003f3f3: cmp al, 0xf9; inc dword ptr [ebp - 0x767af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x00087a96: cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [eax + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00087a22: cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [edi + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000d3818: cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x00080546: cmp al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x001999be: cmp al, 0xfe; inc dword ptr [ecx + 0x35717c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00133c47: cmp al, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002f093: cmp al, 0xff; je 0x2f0bb; cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0013fe21: cmp al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0016c54d: cmp al, 0xff; jne 0x16c5a1; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x000a1a45: cmp al, 0xff; xor al, ch; ret; 
0x00126448: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126409: cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e14ca: cmp al, 1; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000f26a4: cmp al, 1; mov eax, 0x7f; cmovne eax, edx; ret; 
0x0011985b: cmp al, 1; ret 0x1389; 
0x0004861f: cmp al, 1; ret 0xf229; 
0x000f2bfe: cmp al, 1; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00124427: cmp al, 2; je 0x124456; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000f278e: cmp al, 2; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x0015f436: cmp al, 2; or ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x0014bc02: cmp al, 2; or ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x000f28ee: cmp al, 2; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0009a7f7: cmp al, 3; add byte ptr [eax], al; ret; 
0x0018aa14: cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017d31c: cmp al, 4; jne 0x24aa3; mov eax, 8; add esp, 0xc; ret; 
0x001490cc: cmp al, al; stc; call dword ptr [eax - 0x73]; 
0x0011d152: cmp al, byte ptr [0xec830000]; or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x0018ac1b: cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012e172: cmp al, byte ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0003fd4f: cmp al, byte ptr [eax]; jne 0x3fd60; add esp, 4; pop ebx; pop esi; ret; 
0x0005e33d: cmp al, byte ptr [ebx - 0x7972f714]; push ss; inc edx; stc; call dword ptr [eax + 0x53]; 
0x0005d7e5: cmp al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0016958a: cmp al, byte ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000c0091: cmp al, byte ptr [edi]; add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000bba7d: cmp al, byte ptr [edx - 1]; jne 0xbbc2b; pop esi; xor eax, eax; pop ebx; ret; 
0x00199cf1: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cd3b: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x00084035: cmp al, ch; push ss; or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00127403: cmp al, ch; xlatb; adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000dcbb2: cmp al, cl; sti; add ch, byte ptr [ecx]; ret; 
0x000bad55: cmp al, dh; pop edi; ret; 
0x00128909: cmp ax, 0x12; ja 0x128919; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x0007cd76: cmp bh, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x00073d9a: cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0003a576: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0016dca1: cmp bh, al; stc; call dword ptr [ebp + 0x57]; 
0x0016db75: cmp bh, al; stc; call dword ptr [esi - 1]; 
0x001800e5: cmp bh, bl; jmp dword ptr [esi - 0x70]; 
0x000b4268: cmp bh, byte ptr [eax + edx - 0x66f3fd00]; jmp ecx; 
0x00024e2c: cmp bh, byte ptr [eax]; stc; call dword ptr [eax - 1]; 
0x000307d7: cmp bh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x000287aa: cmp bh, byte ptr [edx]; stc; call dword ptr [eax - 0x73]; 
0x00028732: cmp bh, cl; call dword ptr [eax - 0x18]; 
0x000287ab: cmp bh, cl; call dword ptr [eax - 0x73]; 
0x0002fded: cmp bh, cl; call dword ptr [edx + 0x50]; 
0x00028726: cmp bh, cl; jmp ptr [eax + 0x52]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00028d47: cmp bh, cl; jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029382: cmp bh, cl; jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00028ed6: cmp bh, cl; jmp ptr [eax - 0x79]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00029438: cmp bh, cl; jmp ptr [eax - 0x79]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x000c0435: cmp bh, dh; dec dword ptr [ebx - 0x72e3db84]; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0478: cmp bh, dh; jmp dword ptr [esi - 0x70]; 
0x000ee37d: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000d5c69: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000e9842: cmp bl, 0xff; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00121cf5: cmp bl, 0xff; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00079556: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0004e3e2: cmp bl, byte ptr [ecx - 2]; dec dword ptr [ebp - 0x678cb79]; call dword ptr [eax - 0x73]; 
0x0016f96b: cmp bl, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00121c94: cmp byte ptr [0x458b0000], al; or byte ptr [ebx + 0x3a496], cl; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x0018c8fd: cmp byte ptr [0xc381ffff], cl; pop ss; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00118aef: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0011f8de: cmp byte ptr [eax + 0x14d], bh; call dword ptr gs:[0x10]; 
0x0012020e: cmp byte ptr [eax + 0x14e], bh; call dword ptr gs:[0x10]; 
0x00118d20: cmp byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x0009a6ff: cmp byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x000837cc: cmp byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x00081ffc: cmp byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x001277de: cmp byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00128a07: cmp byte ptr [eax + 0x75], bh; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00129fa1: cmp byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000f2d54: cmp byte ptr [eax + 0xb4], bh; call dword ptr gs:[0x10]; 
0x000f2f14: cmp byte ptr [eax + 0xb5], bh; call dword ptr gs:[0x10]; 
0x0010b7da: cmp byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x001407ad: cmp byte ptr [eax + 1], 0x2d; je 0x1407b8; jmp 0x140740; lea esi, [esi]; xor eax, eax; ret; 
0x000f3544: cmp byte ptr [eax + 1], 0x5b; pop esi; pop edi; ret; 
0x00137d08: cmp byte ptr [eax + 2], 0; jne 0x137d18; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0019ef6f: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0015c414: cmp byte ptr [eax + eax - 0x7c72b000], ah; or al, 0x88; int1; call dword ptr [eax - 0x73]; 
0x0009dcc8: cmp byte ptr [eax + eax], al; add bl, ch; ret 0x9066; 
0x00103f61: cmp byte ptr [eax + eax], al; add dh, dh; ret 0xf20; 
0x0018ae04: cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00057dcd: cmp byte ptr [eax - 0x1000000], 0x30; call 0x62110; add esp, 0x1c; ret; 
0x0007a84c: cmp byte ptr [eax - 0x1000000], 0x30; call 0x6d400; add esp, 0x1c; ret; 
0x00133695: cmp byte ptr [eax - 0x1000000], 0x74; and al, 0x1c; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x00134745: cmp byte ptr [eax - 0x1000000], 0x74; and al, 0x1c; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x001725f2: cmp byte ptr [eax - 0x72b00000], ch; xchg esi, ecx; jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x00058555: cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; 
0x00073d93: cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000740a3: cmp byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x00188dfd: cmp byte ptr [eax - 1], cl; inc dword ptr [ecx + 0x45617c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00034aa1: cmp byte ptr [eax], 0; jne 0x34ab0; mov eax, edx; add esp, 0xc; ret; 
0x00034ae1: cmp byte ptr [eax], 0; jne 0x34af0; mov eax, edx; add esp, 0xc; ret; 
0x000818b8: cmp byte ptr [eax], 0x1a; add byte ptr [eax], al; ret; 
0x0010aaee: cmp byte ptr [eax], 0xb1; stc; call dword ptr [eax - 0x73]; 
0x000b14d2: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b0d63: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000bad85: cmp byte ptr [eax], ah; pop edi; ret; 
0x00111f77: cmp byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xf72; 
0x0012e38f: cmp byte ptr [eax], al; add byte ptr [ebx + 0x55500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x000fbab1: cmp byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00034aa2: cmp byte ptr [eax], al; jne 0x34ab0; mov eax, edx; add esp, 0xc; ret; 
0x00034ae2: cmp byte ptr [eax], al; jne 0x34af0; mov eax, edx; add esp, 0xc; ret; 
0x0017c2e2: cmp byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; jne 0x17c2f0; pop ebx; ret; 
0x0019b036: cmp byte ptr [eax], al; ret 0xf66; 
0x000bad75: cmp byte ptr [eax], dl; pop edi; ret; 
0x000d1e8a: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x000e2b81: cmp byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0009e2cf: cmp byte ptr [ebp + 0x92c9b], cl; add byte ptr [ecx], bh; fisttp word ptr [edi]; xchg ebp, eax; ret; 
0x00115055: cmp byte ptr [ebp - 0x64e377d], cl; call dword ptr [eax - 0x73]; 
0x000c8aa1: cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000c99be: cmp byte ptr [ebp - 0x653d77a], cl; call dword ptr [eax - 0x73]; 
0x000c9a0b: cmp byte ptr [ebp - 0x653d77f], cl; call dword ptr [eax - 0x73]; 
0x0009b285: cmp byte ptr [ebp - 0x6665780], cl; call dword ptr [eax + 0x6a]; 
0x0004a23c: cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a8c4: cmp byte ptr [ebp - 0x6790779], cl; call dword ptr [eax - 0x73]; 
0x000c9a74: cmp byte ptr [ebp - 0x679077f], cl; call dword ptr [eax - 0x73]; 
0x0002aa07: cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002b67e: cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002aa2a: cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax + 0x68]; 
0x0002a74a: cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002b6f9: cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax + 0x68]; 
0x0002b0b4: cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax - 0x73]; 
0x0015edd4: cmp byte ptr [ebp - 0x68e1e80], cl; jmp dword ptr [ebp - 0x75]; 
0x001590be: cmp byte ptr [ebp - 0x68fdb52], cl; call dword ptr [ebp - 0x73]; 
0x000bf9e4: cmp byte ptr [ebp - 0x6c65c48], cl; jmp dword ptr [ebp - 0x75]; 
0x0012974e: cmp byte ptr [ebp - 0x74f7db8c], cl; jl 0x12977a; xor al, 0xb8; jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00158735: cmp byte ptr [ebp - 0x76db8b40], al; ret; 
0x00049236: cmp byte ptr [ebp - 0x7b350], cl; dec dword ptr [ebp - 0x6c11780]; call dword ptr [esi + 0x6a]; 
0x0004900b: cmp byte ptr [ebp - 0x7b379], cl; call dword ptr [eax - 0x73]; 
0x000a8cbd: cmp byte ptr [ebp - 0x7c5b8a01], al; ret 0x8301; 
0x0004548f: cmp byte ptr [ebx + 0x1102474], cl; ret 0xd389; 
0x00162b05: cmp byte ptr [ebx + 0x2b050001], ch; jecxz 0x162b19; add byte ptr [ebx - 0x7f72eb14], al; jecxz 0x162b87; stc; call dword ptr [eax + 0x6a]; 
0x0014f60f: cmp byte ptr [ebx + 0x39082444], cl; ret 0xc074; 
0x0009dddb: cmp byte ptr [ebx + 0x39102444], cl; ret 0x850f; 
0x000415ea: cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x000fd72e: cmp byte ptr [ebx + 0x48d0cec], al; ret; 
0x000df737: cmp byte ptr [ebx + 0x4c8d08ec], al; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x000ba221: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000a27fd: cmp byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0007b82d: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0009b833: cmp byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0003a6a0: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x0003a6d2: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0013f7aa: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006d7cb: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0017a4fa: cmp byte ptr [ebx + eax - 0x3f7b0000], 0x74; or eax, 0x4245489; jmp dword ptr [eax + 0x30]; 
0x000a3127: cmp byte ptr [ebx + ebp*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x000c014b: cmp byte ptr [ebx + ebp*8 - 0xa], 0xff; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00087f52: cmp byte ptr [ebx - 0x3b7ce3c0], cl; and al, 0x5b; pop esi; jmp eax; 
0x0004c799: cmp byte ptr [ebx - 0x45e7dbbc], cl; inc eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x850f; 
0x00124de2: cmp byte ptr [ebx - 0x47c3db8c], cl; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126442: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125e32: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001179da: cmp byte ptr [ebx - 0x749fdba4], cl; je 0x117a06; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00105302: cmp byte ptr [ebx - 0x76c3db8c], cl; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000359a2: cmp byte ptr [ebx - 0x77], al; ret; 
0x000f33d4: cmp byte ptr [ebx - 0x7cc3dbbc], cl; ret; 
0x00036cab: cmp byte ptr [ebx - 0x7cd3dbbc], cl; ret 0x3901; 
0x0013bb59: cmp byte ptr [ebx], 0x2e; je 0x13bb68; add esp, 8; pop ebx; ret; 
0x00099d44: cmp byte ptr [ebx], 0x2f; jne 0x99d90; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009a817: cmp byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x001156c9: cmp byte ptr [ecx + 0x245c8be6], cl; xor byte ptr [ebx - 0x47c3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00037080: cmp byte ptr [ecx + 0x39f329cb], cl; ret; 
0x001186a1: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x00130b4e: cmp byte ptr [ecx + 0x68], 0xf9; call dword ptr [eax + 0x6a]; 
0x0009a8c2: cmp byte ptr [ecx + 0x68], 0xf9; call dword ptr [eax - 0x18]; 
0x000dd60b: cmp byte ptr [ecx + 0x76dc7], al; add byte ptr [ebx - 0x7bf0b807], al; ret 0x19; 
0x00127a93: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016c21c: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00160bca: cmp byte ptr [ecx], 0; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00129cdd: cmp byte ptr [ecx], 0; je 0x129ce8; ret; 
0x0017cdd1: cmp byte ptr [ecx], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00080948: cmp byte ptr [ecx], 0xfa; jmp dword ptr [esi - 0x70]; 
0x00088a24: cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x00045390: cmp byte ptr [ecx], al; ret 0xf229; 
0x000df013: cmp byte ptr [ecx], al; ret 0xf8c1; 
0x00173366: cmp byte ptr [ecx], al; ret; 
0x000b14d3: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b0d64: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000d1e87: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0004c643: cmp byte ptr [ecx], bh; ret 0x840f; 
0x00077bc2: cmp byte ptr [ecx], bh; ret; 
0x0019f687: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015b254: cmp byte ptr [edi - 0x14], bh; jmp dword ptr [ebp - 0x75]; 
0x000281f4: cmp byte ptr [edi - 7], bh; call dword ptr [eax - 0x73]; 
0x0015508f: cmp byte ptr [edi - 7], ch; call dword ptr [edx + 0x50]; 
0x00109579: cmp byte ptr [edi], 0x59; stc; call dword ptr [eax - 0x18]; 
0x00031f37: cmp byte ptr [edi], cl; adc byte ptr [edx - 1], 0xff; jmp dword ptr [esi - 0x70]; 
0x00032027: cmp byte ptr [edi], cl; and byte ptr [edx - 2], 0xff; jmp dword ptr [esi - 0x70]; 
0x00025472: cmp byte ptr [edi], cl; dec ecx; ret 0xc789; 
0x0003f9f2: cmp byte ptr [edi], cl; inc ebp; ret; 
0x00199ab8: cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019a479: cmp byte ptr [edi], dl; ret 0x3273; 
0x00199aa3: cmp byte ptr [edi], dl; ret 0x3e73; 
0x0019a45f: cmp byte ptr [edi], dl; ret 0x4c73; 
0x00199a8e: cmp byte ptr [edi], dl; ret 0x5073; 
0x00199a79: cmp byte ptr [edi], dl; ret 0x6273; 
0x0019a445: cmp byte ptr [edi], dl; ret 0x6673; 
0x00199414: cmp byte ptr [edi], dl; ret 0x830f; 
0x000be0e4: cmp byte ptr [edx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x0017f710: cmp byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x0019f12c: cmp byte ptr [edx + 0xb], 0; je 0x19f1b2; mov eax, 0xc; pop edi; ret; 
0x0019f164: cmp byte ptr [edx + 0xf], 0; je 0x19f1c6; mov eax, 0x10; pop edi; ret; 
0x00194314: cmp byte ptr [edx + 0xf], cl; jne 0x194170; pop ebp; xor eax, eax; ret; 
0x001607be: cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x000bd8cf: cmp byte ptr [edx - 1], dl; je 0xbd8f8; sub bh, bh; jne 0xbd8d8; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0003fd4e: cmp byte ptr [edx], 0; jne 0x3fd60; add esp, 4; pop ebx; pop esi; ret; 
0x00029b42: cmp byte ptr [edx], 0xf9; call dword ptr [eax - 0x18]; 
0x0018ac1a: cmp byte ptr [edx], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016c215: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000818b9: cmp byte ptr [edx], bl; add byte ptr [eax], al; ret; 
0x00085ab3: cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x000bf2fb: cmp byte ptr [esi + ebp*8], 0xf6; push esi; inc ecx; jne 0xbf306; cmove eax, edx; ret; 
0x00168ea8: cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001023b7: cmp byte ptr [esp + 0x17], 0; jne 0x102460; call ecx; 
0x00199c44: cmp ch, bh; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cc9a: cmp ch, bh; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x000bc690: cmp cl, 0; je 0xbc696; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x00060b1f: cmp cl, 0x5a; jbe 0x61b9f; jmp eax; 
0x000d7386: cmp cl, bh; call dword ptr [eax + 0x53]; 
0x000d57b9: cmp cl, bh; call dword ptr [eax + 0x57]; 
0x000d5835: cmp cl, bh; call dword ptr [eax + 0x6a]; 
0x00025e12: cmp cl, bh; call dword ptr [eax - 0x18]; 
0x00035b96: cmp cl, bh; call dword ptr [eax - 0x73]; 
0x00024e2d: cmp cl, bh; call dword ptr [eax - 1]; 
0x00027f76: cmp cl, bh; call dword ptr [edi - 1]; 
0x00027b30: cmp cl, bh; call dword ptr [edx + 0x50]; 
0x0008e5ce: cmp cl, bh; dec dword ptr [ecx - 0x7872af05]; nop; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000309f2: cmp cl, byte ptr [ecx - 0x6bf03fab]; ret 0x5f3c; 
0x00151002: cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0003035e: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00199ba8: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cbde: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x0019b6f4: cmp cl, byte ptr [edx]; je 0x19b710; mov eax, 1; ja 0x19b701; neg eax; ret; 
0x000bb975: cmp cl, byte ptr [edx]; jne 0xbb97d; xor eax, eax; pop ebx; ret; 
0x00127ffc: cmp cl, byte ptr [esi + 0x31570010]; call dword ptr [esi + 0x53]; 
0x00047782: cmp cl, ch; in al, 0xff; dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x000d6be4: cmp cl, dl; cmc; jmp dword ptr [esi - 0x70]; 
0x000a3f78: cmp cl, dl; je 0xa3f7d; inc eax; pop edi; ret; 
0x00151bfb: cmp cx, 2; je 0x151c10; mov eax, edx; pop ebx; pop esi; ret; 
0x0019a503: cmp cx, bx; pop ebx; mov eax, 1; ja 0x19a510; neg eax; ret; 
0x0014a54d: cmp dh, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x001a4b9a: cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00031f0a: cmp dh, 0xff; push esi; ret 0xf03; 
0x0015020a: cmp dh, bh; jmp dword ptr [esi - 0x70]; 
0x00164796: cmp dh, bl; call dword ptr [edx - 0x73]; 
0x0003a676: cmp dh, bl; jmp 0x5b446b00; pop esi; pop edi; ret; 
0x0016037c: cmp dh, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000bc2ef: cmp dh, cl; jne 0xbc2f6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0019c7f7: cmp dh, dh; ret 0x7504; 
0x0011f5eb: cmp dl, 0x2c; jne 0x11f5ae; pop ebx; pop esi; pop edi; ret; 
0x0015f572: cmp dl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x0015f672: cmp dl, 0x71; stc; call dword ptr [eax - 0x18]; 
0x0015f5c6: cmp dl, 0x71; stc; jmp dword ptr [ebp - 0x75]; 
0x0003289f: cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x11e1], dl; lea eax, [eax + 0x11ac]; ret; 
0x00091dda: cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x00080b09: cmp dl, bh; jmp dword ptr [esi - 0x70]; 
0x000b6d3c: cmp dl, byte ptr [edx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x00140d14: cmp dword ptr [eax + 0x6a], -7; call dword ptr [eax - 0x18]; 
0x00131c27: cmp dword ptr [eax + 4], ecx; jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x001481e7: cmp dword ptr [eax + 8], edx; jne 0x1481e0; ret; 
0x000cd0bf: cmp dword ptr [eax + 8], edx; mov eax, 0; cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x0018acb4: cmp dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a01ba: cmp dword ptr [eax + eax], edx; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0009f40a: cmp dword ptr [eax + ebp*4], -7; call dword ptr [eax - 0x73]; 
0x00159465: cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x001492fe: cmp dword ptr [eax - 0x40], -7; call dword ptr [eax - 0x73]; 
0x0015945e: cmp dword ptr [eax - 0x5e], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x00058426: cmp dword ptr [eax - 0x78], -7; call dword ptr [eax - 0x18]; 
0x0016dca0: cmp dword ptr [eax], -0x39; stc; call dword ptr [ebp + 0x57]; 
0x0016db74: cmp dword ptr [eax], -0x39; stc; call dword ptr [esi - 1]; 
0x00032244: cmp dword ptr [eax], -0x7e; stc; call dword ptr [eax - 0x73]; 
0x0017c2e1: cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x17c2f0; pop ebx; ret; 
0x000319bf: cmp dword ptr [eax], 0x9000011; ret 0x840f; 
0x00088a23: cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x00102e2b: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00160bcb: cmp dword ptr [eax], eax; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00129cde: cmp dword ptr [eax], eax; je 0x129ce8; ret; 
0x0016e676: cmp dword ptr [eax], esi; je 0x16e680; add esp, 4; pop ebx; pop esi; ret; 
0x000659dc: cmp dword ptr [ebp - 0x21], -1; dec dword ptr [ebx - 0x5d743]; dec dword ptr [ecx + 0x29f829f0]; ret 0x9589; 
0x0002444f: cmp dword ptr [ebp - 0x30], 0; je 0x24470; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000bf930: cmp dword ptr [ebp - 0x74f38b01], eax; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00094553: cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00088931: cmp dword ptr [ebx + 0x57408f8], eax; add esp, 8; pop ebx; ret; 
0x0003d770: cmp dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x000a2679: cmp dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x00135d11: cmp dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x0015c1b3: cmp dword ptr [ebx], 0x71; stc; call dword ptr [eax - 0x18]; 
0x0015c1b3: cmp dword ptr [ebx], 0x71; stc; call dword ptr [eax - 0x18]; sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x00080188: cmp dword ptr [ebx], ecx; add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [eax], ebx; xchg edx, eax; stc; call dword ptr [eax - 0x73]; 
0x00151304: cmp dword ptr [ecx + 0x10], edx; jb 0x151311; setne al; movzx eax, al; neg eax; ret; 
0x000a093d: cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x00156b31: cmp dword ptr [ecx + 0x6f], -7; call dword ptr [eax - 0x18]; 
0x00156b31: cmp dword ptr [ecx + 0x6f], -7; call dword ptr [eax - 0x18]; inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00156ce4: cmp dword ptr [ecx + 0x6f], -7; call dword ptr [eax - 0x73]; 
0x00024b8d: cmp dword ptr [ecx + 0x94], edx; jne 0x24b62; ret; 
0x001448d9: cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000dfa36: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xdfaf0; mov ebx, dword ptr [esp + 0x40]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f26a3: cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000f2bfd: cmp dword ptr [ecx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000cc318: cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00096fc1: cmp dword ptr [ecx], 2; je 0x96f82; pop ebx; pop esi; ret; 
0x000bad96: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x00089d46: cmp dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000d1dae: cmp dword ptr [edi + 0x10], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1dc3: cmp dword ptr [edi + 0x14], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1dd8: cmp dword ptr [edi + 0x18], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1df3: cmp dword ptr [edi + 0x1c], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e0e: cmp dword ptr [edi + 0x20], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e23: cmp dword ptr [edi + 0x24], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e38: cmp dword ptr [edi + 0x28], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e43: cmp dword ptr [edi + 0x2c], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e5e: cmp dword ptr [edi + 0x30], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e73: cmp dword ptr [edi + 0x34], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e88: cmp dword ptr [edi + 0x38], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e93: cmp dword ptr [edi + 0x3c], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1d2b: cmp dword ptr [edi + 0xc], ecx; jne 0xd1ea0; xor eax, eax; pop edi; pop esi; ret; 
0x000d1d78: cmp dword ptr [edi + 8], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x0014c49d: cmp dword ptr [edi + ebx*4], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00159be7: cmp dword ptr [edi + ecx*4 - 0x17af000e], 0x6e; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x000d1d4d: cmp dword ptr [edi], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x00144892: cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x00094ea0: cmp dword ptr [edx + 0x14], ecx; je 0x94eb0; ret; 
0x0007e254: cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00025e10: cmp dword ptr [edx + 0x38], -7; call dword ptr [eax - 0x18]; 
0x0011d13f: cmp dword ptr [edx + 0x5b], -7; call dword ptr [eax + 0x55]; 
0x0012a304: cmp dword ptr [edx + 0x64], -7; call dword ptr [eax + 0x57]; 
0x0014486e: cmp dword ptr [edx + 2], ebx; je 0x144878; pop ebx; ret; 
0x00124426: cmp dword ptr [edx + eax], 0x26; je 0x124456; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000f278d: cmp dword ptr [edx + eax], 0x26; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x000f28ed: cmp dword ptr [edx + eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00121646: cmp dword ptr [edx - 1], edi; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00121566: cmp dword ptr [edx - 1], edi; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00024e2b: cmp dword ptr [edx], 0x38; stc; call dword ptr [eax - 1]; 
0x000287a9: cmp dword ptr [edx], 0x3a; stc; call dword ptr [eax - 0x73]; 
0x000398d9: cmp dword ptr [edx], 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00087953: cmp dword ptr [edx], eax; add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00096fc2: cmp dword ptr [edx], eax; je 0x96f82; pop ebx; pop esi; ret; 
0x00097632: cmp dword ptr [edx], ecx; jl 0x97628; je 0x9764a; xor eax, eax; pop ebx; ret; 
0x0009767a: cmp dword ptr [edx], ecx; jl 0x97670; mov edx, 0; cmovne eax, edx; ret; 
0x000d61b4: cmp dword ptr [esi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x00159e59: cmp dword ptr [esi + 0x70], -7; call dword ptr [eax - 0x18]; 
0x0019e936: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x0014e454: cmp dword ptr [esi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x000e753b: cmp dword ptr [esi + ebp*4], -7; call dword ptr [eax - 0x73]; 
0x00156a65: cmp dword ptr [esi + ebx*2], -0xe; call dword ptr [eax - 0x18]; 
0x000f30ea: cmp dword ptr [esi + ecx*4], ebx; je 0xf3100; pop ebx; pop esi; ret; 
0x0017cdd2: cmp dword ptr [esi - 7], esi; call dword ptr [eax - 0x18]; 
0x0016e6d8: cmp dword ptr [esi], eax; jg 0x16e6c8; add esp, 4; pop ebx; pop esi; ret; 
0x000df4b9: cmp dword ptr [esp + 0x14], 1; je 0xdf4c8; add esp, 0xc; ret; 
0x000df5a9: cmp dword ptr [esp + 0x14], 1; je 0xdf5b8; add esp, 0xc; ret; 
0x0003cf54: cmp dword ptr [esp + 4], 0; je 0x3cf70; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1d4], ecx; ret; 
0x000342e6: cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008e1c8: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00137ae8: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00080187: cmp dword ptr gs:[ebx], ecx; add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [eax], ebx; xchg edx, eax; stc; call dword ptr [eax - 0x73]; 
0x000df68a: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x000df670: cmp eax, -0x26; jne 0xdf681; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000df8de: cmp eax, -0x26; jne 0xdf920; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00146539: cmp eax, -0x43; stc; call dword ptr [eax - 0x18]; 
0x00137307: cmp eax, -0xb; je 0x137300; add esp, 8; pop ebx; ret; 
0x000c20e1: cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x000ad309: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0009c266: cmp eax, -1; je 0x9c270; add esp, 0xc; ret; 
0x00104de3: cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0017d7d2: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0011c808: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00133b4a: cmp eax, 0x10c483ff; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012890a: cmp eax, 0x12; ja 0x128919; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x0008f92f: cmp eax, 0x21; jne 0x8f938; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0018c3dd: cmp eax, 0x3000425; sbb al, 0x8b; jmp ebx; 
0x000d5833: cmp eax, 0x38; stc; call dword ptr [eax + 0x6a]; 
0x0008098f: cmp eax, 0x39000001; ret; 
0x000367da: cmp eax, 0x3eea01ff; jmp edx; 
0x0009a835: cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x001326b6: cmp eax, 0x3ff; ja 0x1326c4; sar eax, 5; add esp, 0xc; ret; 
0x000df8e2: cmp eax, 0x4244c8d; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000a264a: cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0003e6c4: cmp eax, 0x473ff00; call eax; 
0x00024d3e: cmp eax, 0x5004ec83; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0009aa05: cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0016aaab: cmp eax, 0x560cec83; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0017db25: cmp eax, 0x593; ja 0x17dd10; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0017f13f: cmp eax, 0x593; ja 0x17f220; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0017f288: cmp eax, 0x593; ja 0x17f2a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075d50: cmp eax, 0x593; ja 0x75e50; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078ab5: cmp eax, 0x593; ja 0x78c01; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007b11c: cmp eax, 0x593; ja 0x7b158; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007b8de: cmp eax, 0x593; ja 0x7b910; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00081a20: cmp eax, 0x593; ja 0x81a50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00082739: cmp eax, 0x593; ja 0x82780; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00085622: cmp eax, 0x593; ja 0x85680; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000856cc: cmp eax, 0x593; ja 0x856f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x001156f8: cmp eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000ad0a0: cmp eax, 0x5bffffff; ret; 
0x0007fdf8: cmp eax, 0x81000fd8; ret; 
0x0007f3f8: cmp eax, 0x81000fe2; ret; 
0x0009ff55: cmp eax, 0x838dfff9; inc esp; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0004b3f5: cmp eax, 0x840f0800; ret 2; 
0x0009375f: cmp eax, 0x89000001; ret 0xca83; 
0x0008b0e0: cmp eax, 0x89000003; ret 0xca83; 
0x000d3cde: cmp eax, 0x8d500000; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x000d6fed: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00073c97: cmp eax, 0xb804c483; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0009aa1e: cmp eax, 0xb; mov eax, 8; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x000a250c: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000bb4a2: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0018989c: cmp eax, 0xc381ffff; jns 0x1898ee; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018987e: cmp eax, 0xc381ffff; xchg edi, eax; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bf39b: cmp eax, 0xc483fff6; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000962ce: cmp eax, 0xc; sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x0009a875: cmp eax, 0xffff; jbe 0x9a880; ret; 
0x00102c19: cmp eax, 0xfffff000; ja 0x102c28; pop ebx; pop esi; ret; 
0x00109927: cmp eax, 0xfffff000; ja 0x109938; pop ebx; pop esi; ret; 
0x0010abf4: cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac64: cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010acee: cmp eax, 0xfffff000; ja 0x10ad40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010af72: cmp eax, 0xfffff000; ja 0x10afc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b064: cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x0010c6da: cmp eax, 0xfffff000; ja 0x10c6e8; pop ebx; pop esi; ret; 
0x001152e4: cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x00115824: cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00115f02: cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x00116a99: cmp eax, 0xfffff000; ja 0x116aa8; pop ebx; pop esi; ret; 
0x00116b20: cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x00116b7e: cmp eax, 0xfffff000; ja 0x116b90; pop ebx; pop esi; pop edi; ret; 
0x00116bde: cmp eax, 0xfffff000; ja 0x116bf0; pop ebx; pop esi; pop edi; ret; 
0x00116e3a: cmp eax, 0xfffff000; ja 0x116e48; pop ebx; pop esi; ret; 
0x00117234: cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x00117760: cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c90: cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x001181f0: cmp eax, 0xfffff000; ja 0x118210; pop ebx; pop esi; pop edi; ret; 
0x0011826d: cmp eax, 0xfffff000; ja 0x118290; pop ebx; pop esi; pop edi; ret; 
0x001182ef: cmp eax, 0xfffff000; ja 0x118310; pop ebx; pop esi; pop edi; ret; 
0x0011836c: cmp eax, 0xfffff000; ja 0x118390; pop ebx; pop esi; pop edi; ret; 
0x00118439: cmp eax, 0xfffff000; ja 0x118448; pop ebx; pop esi; ret; 
0x001187f9: cmp eax, 0xfffff000; ja 0x118808; pop ebx; pop esi; ret; 
0x00119264: cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192b4: cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x001193ca: cmp eax, 0xfffff000; ja 0x1193d8; pop ebx; pop esi; pop edi; ret; 
0x0011942a: cmp eax, 0xfffff000; ja 0x119438; pop ebx; pop esi; pop edi; ret; 
0x0011aace: cmp eax, 0xfffff000; ja 0x11ab20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b01e: cmp eax, 0xfffff000; ja 0x11b070; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b0d4: cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x0011b129: cmp eax, 0xfffff000; ja 0x11b138; pop ebx; pop esi; ret; 
0x0011e589: cmp eax, 0xfffff000; ja 0x11e598; pop ebx; pop esi; ret; 
0x00120e8b: cmp eax, 0xfffff000; ja 0x120e98; pop ebx; pop esi; ret; 
0x00122604: cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x00122659: cmp eax, 0xfffff000; ja 0x122668; pop ebx; pop esi; ret; 
0x0012384e: cmp eax, 0xfffff000; ja 0x123860; mov eax, ecx; pop ebx; ret; 
0x001249d0: cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x00125074: cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001251eb: cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x001252f4: cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x001255b3: cmp eax, 0xfffff000; ja 0x1255d8; pop ebx; pop esi; pop edi; ret; 
0x0012585e: cmp eax, 0xfffff000; ja 0x125870; pop ebx; pop esi; pop edi; ret; 
0x00125b3e: cmp eax, 0xfffff000; ja 0x125b50; pop ebx; pop esi; pop edi; ret; 
0x00125c7f: cmp eax, 0xfffff000; ja 0x125c90; pop ebx; pop esi; pop edi; ret; 
0x001263b4: cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x00126674: cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x00183bfa: cmp eax, 0xfffff000; ja 0x183c08; pop ebx; pop esi; ret; 
0x0003c3e5: cmp eax, 0xfffff000; ja 0x3c3f0; pop ebx; ret; 
0x0003c443: cmp eax, 0xfffff000; ja 0x3c490; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005da14: cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x0005da6e: cmp eax, 0xfffff000; ja 0x5da80; pop ebx; pop esi; pop edi; ret; 
0x000898e1: cmp eax, 0xfffff000; ja 0x898f0; pop ebx; pop esi; pop edi; ret; 
0x000922f4: cmp eax, 0xfffff000; ja 0x92300; pop ebx; pop esi; pop edi; ret; 
0x000990e0: cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x00099769: cmp eax, 0xfffff000; ja 0x99778; pop ebx; pop esi; ret; 
0x00099d5a: cmp eax, 0xfffff000; ja 0x99d68; mov eax, ecx; pop ebx; ret; 
0x0009a138: cmp eax, 0xfffff000; ja 0x9a148; pop ebx; ret; 
0x000d4262: cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x000e1463: cmp eax, 0xfffff000; ja 0xe1470; pop ebx; pop esi; ret; 
0x000f2c39: cmp eax, 0xfffff000; ja 0xf2c80; add esp, 0x18; pop ebx; ret; 
0x00093bd5: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011605e: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003c3a8: cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003f6e7: cmp eax, 0xfffff001; jae 0x24e60; xor eax, eax; ret; 
0x0008acd8: cmp eax, 1; ja 0x8acf0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00093b78: cmp eax, 1; ja 0x93b90; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00170862: cmp eax, 1; je 0x170890; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00170952: cmp eax, 1; je 0x170980; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00170f32: cmp eax, 1; je 0x170f60; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00102468: cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x001027b3: cmp eax, 1; jg 0x1027d8; add esp, 4; pop ebx; pop esi; ret; 
0x00121be8: cmp eax, 1; jg 0x121bf8; add esp, 8; pop ebx; ret; 
0x00146c82: cmp eax, 1; jg 0x146ca0; add esp, 4; pop ebx; pop esi; ret; 
0x0014cbfe: cmp eax, 1; jg 0x14cc28; add esp, 8; pop ebx; ret; 
0x001580c2: cmp eax, 1; jg 0x158120; add esp, 4; pop ebx; pop esi; ret; 
0x00177181: cmp eax, 1; jg 0x1771a8; add esp, 8; pop ebx; ret; 
0x00177301: cmp eax, 1; jg 0x177328; add esp, 8; pop ebx; ret; 
0x0017b074: cmp eax, 1; jg 0x17b098; add esp, 4; pop ebx; pop esi; ret; 
0x0017c3e2: cmp eax, 1; jg 0x17c408; add esp, 4; pop ebx; pop esi; ret; 
0x0017c482: cmp eax, 1; jg 0x17c4a8; add esp, 4; pop ebx; pop esi; ret; 
0x00040d54: cmp eax, 1; jg 0x40d78; add esp, 4; pop ebx; pop esi; ret; 
0x00086ed0: cmp eax, 1; jg 0x86ee0; ret; 
0x0008961c: cmp eax, 1; jg 0x89658; pop ebx; pop esi; pop edi; ret; 
0x000d5457: cmp eax, 1; jg 0xd5480; add esp, 8; pop ebx; ret; 
0x000e109e: cmp eax, 1; jg 0xe10c0; add esp, 4; pop ebx; pop esi; ret; 
0x000e1114: cmp eax, 1; jg 0xe1130; pop ebx; pop esi; pop edi; ret; 
0x00169983: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0008a88c: cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0005d369: cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x00096e97: cmp eax, 1; sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00171f56: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00093b48: cmp eax, 2; ja 0x93b60; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00120114: cmp eax, 2; jbe 0x120140; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0014c741: cmp eax, 2; jne 0x14c750; mov eax, ecx; ret; 
0x00170867: cmp eax, 2; sete al; movzx eax, al; ret; 
0x0002fca1: cmp eax, 3; je 0x2fcb0; add esp, 8; pop ebx; ret; 
0x0008b95b: cmp eax, 3; je 0x8b968; pop ebx; pop esi; pop edi; ret; 
0x0008b9bd: cmp eax, 3; je 0x8b9d0; pop ebx; pop esi; pop edi; ret; 
0x000f709c: cmp eax, 3; je 0xf70c0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0010df63: cmp eax, 4; ja 0x10df78; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f893: cmp eax, 4; ja 0x10f8a8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x001111c3: cmp eax, 4; ja 0x1111d8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000961af: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x00088932: cmp eax, 8; je 0x8893c; add esp, 8; pop ebx; ret; 
0x000892b1: cmp eax, 8; je 0x892bb; add esp, 8; pop ebx; ret; 
0x00094554: cmp eax, 8; je 0x9455a; ret; 
0x00124ea6: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00124ee7: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x0018aacb: cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00073f34: cmp eax, dword ptr [ebx + 0x575304ec]; push eax; call dword ptr [ebp + 0x1c]; 
0x00027621: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0013e797: cmp eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x0012a8b8: cmp eax, dword ptr [ecx + 0x4770]; jae 0x12a8cb; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x00125e38: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125df9: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0019b471: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x0019f674: cmp eax, dword ptr [esi - 0x10]; jne 0x19f6c0; pop edi; pop esi; pop ebx; ret; 
0x00119b98: cmp eax, ebx; jb 0x119ba0; xor eax, eax; pop ebx; ret; 
0x00167b80: cmp eax, ebx; jne 0x167b70; pop ebx; ret; 
0x000a554b: cmp eax, ebx; jne 0xa5540; mov eax, edx; pop ebx; ret; 
0x000a558f: cmp eax, ebx; jne 0xa5580; mov eax, edx; pop ebx; pop esi; ret; 
0x0008746e: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0007c051: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0007adf5: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7adf0; ret; 
0x00084dd5: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x84dd0; ret; 
0x000ba870: cmp eax, ecx; ja 0xba880; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000a56ef: cmp eax, ecx; jne 0xa56e0; mov eax, edx; pop ebx; ret; 
0x000bba0a: cmp eax, ecx; jne 0xbbc17; pop esi; xor eax, eax; pop ebx; ret; 
0x000bbafd: cmp eax, ecx; jne 0xbbc2b; pop esi; xor eax, eax; pop ebx; ret; 
0x000bbc29: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0003a8aa: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000a1efa: cmp eax, edi; cmovae eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00131c23: cmp eax, edx; jae 0x131c30; cmp dword ptr [eax + 4], ecx; jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x0016e30c: cmp eax, edx; je 0x16e318; pop ebx; pop esi; pop edi; ret; 
0x00051f4c: cmp ebp, dword ptr [ecx]; ret 0x6b89; 
0x00099d45: cmp ebp, dword ptr [edi]; jne 0x99d90; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0013bb5a: cmp ebp, dword ptr [esi]; je 0x13bb68; add esp, 8; pop ebx; ret; 
0x0013b6da: cmp ebx, 0x950f0308; ret; 
0x000f48a5: cmp ebx, 0xa; je 0xf48d9; add esp, 4; pop ebx; pop esi; ret; 
0x000cd1e5: cmp ebx, 3; je 0xcd1f0; mov eax, esi; pop ebx; pop esi; ret; 
0x0009764a: cmp ebx, edx; jne 0x97640; pop ebx; ret; 
0x00133afc: cmp ebx, edx; sldt word ptr [ebx - 0x7f72e714]; or byte ptr [edi - 7], ah; call dword ptr [eax - 0x18]; 
0x0016e07c: cmp ebx, esi; call dword ptr [ebp - 0x73]; 
0x001645c3: cmp ebx, esi; call dword ptr [edx + 0x6a]; 
0x00042691: cmp ebx, esp; adc eax, 0x10c48300; pop ebx; pop esi; pop edi; ret; 
0x0013e6ae: cmp ecx, -1; push eax; call 0x34b10; add esp, 0x10; add esp, 0xc; ret; 
0x000d6fd6: cmp ecx, 0x28f5c28; jbe 0xd6fe8; mov eax, edx; ret; 
0x0006c135: cmp ecx, 0x5a; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x00138140: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00137e3e: cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0012372c: cmp ecx, 1; jg 0x123760; add esp, 8; pop ebx; ret; 
0x0003e3ff: cmp ecx, 1; jg 0x3e530; sub esp, 8; push 0; push edx; call eax; 
0x00151bfc: cmp ecx, 2; je 0x151c10; mov eax, edx; pop ebx; pop esi; ret; 
0x00165b61: cmp ecx, 3; jbe 0x165b70; mov eax, 2; pop ebx; pop esi; ret; 
0x00117f38: cmp ecx, 9; je 0x117f70; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00117fe8: cmp ecx, 9; je 0x118020; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00086e14: cmp ecx, dword ptr [ecx + 0x1a5cb3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000dfa3c: cmp ecx, dword ptr [edi]; xchg dword ptr [ebp - 0x75000000], ebp; pop esp; and al, 0x40; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00092d18: cmp ecx, dword ptr [edi]; xchg dword ptr [ecx], esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00044af7: cmp ecx, dword ptr [edi]; xchg ebp, eax; ret 0xe083; 
0x00092f9b: cmp ecx, dword ptr [edi]; xchg esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x00092385: cmp ecx, dword ptr [edi]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0019f7a5: cmp ecx, dword ptr [edx - 4]; jne 0x19f7b0; pop ebx; ret; 
0x0019b467: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x19b6b0; pop ebx; ret; 
0x000b42c1: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019b382: cmp ecx, dword ptr [edx]; je 0x19b3a0; mov eax, 1; jg 0x19b390; neg eax; ret; 
0x0007e056: cmp ecx, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x000a2a22: cmp ecx, eax; jne 0xa2a18; mov eax, edx; pop ebx; ret; 
0x0004242f: cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x00137a06: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00199d70: cmp ecx, ebx; mov eax, 0; jne 0x19a4f0; pop ebx; ret; 
0x0019cb22: cmp ecx, ebx; mov eax, 0; jne 0x19cd50; pop ebx; ret; 
0x0019a504: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x19a510; neg eax; ret; 
0x000bfd4e: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000344fa: cmp ecx, ecx; pop ds; add byte ptr [ebx + 0x9880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000bf9e8: cmp ecx, edi; jmp dword ptr [ebp - 0x75]; 
0x000bfd30: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0007b9c0: cmp ecx, edx; jb 0x7b9b8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00085f70: cmp ecx, edx; jb 0x85f68; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0011b46a: cmp ecx, edx; jne 0x11b460; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000be51e: cmp ecx, edx; jne 0xbe532; ret; 
0x0012ac5f: cmp ecx, edx; sbb eax, eax; ret; 
0x0015133d: cmp ecx, edx; setne al; ret; 
0x0010f7dc: cmp ecx, esi; jmp dword ptr [ebp - 0x75]; 
0x00172b49: cmp edi, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x000f5b52: cmp edi, 0x8bffffff; push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00125246: cmp edi, 1; je 0x125280; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001265c6: cmp edi, 1; je 0x126600; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000993fa: cmp edi, dword ptr [edx + 0x19]; add bh, al; xor byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; ret; 
0x000300e2: cmp edi, ecx; call dword ptr [eax + 0x56]; 
0x00030776: cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00032259: cmp edi, ecx; call dword ptr [eax - 0x18]; mov esi, 0xf600001a; ret 0xf03; 
0x0002fe0b: cmp edi, ecx; call dword ptr [eax - 1]; 
0x00030b6a: cmp edi, ecx; call dword ptr [edx + 0x50]; 
0x000a01c8: cmp edi, ecx; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x00030e4d: cmp edi, ecx; jmp ptr [eax + 0x1a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edi - 7], ecx; call dword ptr [eax - 0x18]; 
0x0008e253: cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0008ab02: cmp edi, edx; jae 0x8aad0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000c0415: cmp edi, esi; dec dword ptr [ebx - 0x72e3db84]; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00199acd: cmp edi, esi; inc dword ptr [ecx + 0x35608c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e298: cmp edi, esi; ret 3; 
0x000e1294: cmp edx, 0x10d; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000f28d6: cmp edx, 0x1badface; setne al; ret; 
0x000f28b4: cmp edx, 0x1cd1; setne al; ret; 
0x00125368: cmp edx, 0x26; je 0x1253c3; pop ebx; pop esi; ret; 
0x000f2848: cmp edx, 0x27e0eb; je 0xf277e; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f2807: cmp edx, 0x3153464a; je 0xf277e; cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x0008a99d: cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x000a3285: cmp edx, 0x40; ja 0xa3291; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000a32b5: cmp edx, 0x40; ja 0xa32c1; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x0005bd2a: cmp edx, 0x40; stc; call dword ptr [eax - 0x18]; 
0x000f2813: cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x0011d175: cmp edx, 0x5b; stc; call dword ptr [eax + 0x55]; 
0x001637bc: cmp edx, 0x71; stc; call dword ptr [eax - 0x18]; 
0x00167f15: cmp edx, 0x72; stc; call dword ptr [eax - 1]; 
0x000f2776: cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x000f290a: cmp edx, 0xadf5; setne al; ret; 
0x000f2854: cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000a232e: cmp edx, 1; ja 0xa2310; pop ebx; pop esi; pop edi; ret; 
0x00092090: cmp edx, 1; je 0x920a0; mov eax, 0x16; ret; 
0x0014bb2f: cmp edx, 1; jg 0x14bb38; ret; 
0x001583b0: cmp edx, 1; jg 0x1583d8; add esp, 0x18; pop ebx; ret; 
0x0015dcc2: cmp edx, 1; jg 0x15dce8; add esp, 0x18; pop ebx; ret; 
0x001771ff: cmp edx, 1; jg 0x177228; add esp, 0x18; pop ebx; ret; 
0x0017728b: cmp edx, 1; jg 0x1772b0; add esp, 0x18; pop ebx; ret; 
0x001774b1: cmp edx, 1; jg 0x1774d8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00177563: cmp edx, 1; jg 0x177588; add esp, 0x18; pop ebx; ret; 
0x0003e9d0: cmp edx, 1; jg 0x3eb50; sub esp, 8; push dword ptr [esp + 0xc]; push dword ptr [esp + 0x3c]; call eax; 
0x0003eab4: cmp edx, 1; jg 0x3eb70; call eax; 
0x0003f5f1: cmp edx, 1; jg 0x3f618; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040e83: cmp edx, 1; jg 0x40ea8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d8f2: cmp edx, 1; jg 0x5d930; add esp, 0x18; pop ebx; ret; 
0x0008e342: cmp edx, 1; jg 0x8e368; add esp, 0x18; pop ebx; ret; 
0x000e0ecd: cmp edx, 1; jg 0xe0ef0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000920c0: cmp edx, 1; jne 0x920e0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0010396d: cmp edx, 2; ja 0x10397e; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008a861: cmp edx, 2; jbe 0x8a870; ret; 
0x0008ba36: cmp edx, 2; je 0x8ba40; pop ebx; pop esi; pop edi; ret; 
0x0002703d: cmp edx, dword ptr [0x241c8900]; call edi; 
0x000796e1: cmp edx, dword ptr [eax + 4]; jae 0x796f0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000798af: cmp edx, dword ptr [eax + 4]; jae 0x798c0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0008198b: cmp edx, dword ptr [eax + 8]; jae 0x819a0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000819c9: cmp edx, dword ptr [eax + 8]; jae 0x819e0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000f3088: cmp edx, dword ptr [ebx + 4]; je 0xf30a6; pop ebx; pop esi; pop edi; ret; 
0x000886d4: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000e1452: cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000423dd: cmp edx, eax; setb al; ret; 
0x000423be: cmp edx, eax; setle al; ret; 
0x0008abb2: cmp edx, ebp; jae 0x8abe3; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000b3764: cmp edx, ebx; jb 0xb2b20; call 0x17d651; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b8e: cmp edx, ebx; jb 0xb2b20; call 0x17d651; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b77: cmp edx, ebx; jb 0xb2b20; call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b5c: cmp edx, ebx; jb 0xb2b20; call 0x17d651; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b3a: cmp edx, ebx; jb 0xb2b20; call 0x17d651; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4e64: cmp edx, ebx; jb 0xb4160; call 0x17d651; add ecx, 0x10b02f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41ce: cmp edx, ebx; jb 0xb4160; call 0x17d651; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41b7: cmp edx, ebx; jb 0xb4160; call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b419c: cmp edx, ebx; jb 0xb4160; call 0x17d651; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b417a: cmp edx, ebx; jb 0xb4160; call 0x17d651; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba704: cmp edx, ebx; jb 0xba100; call 0x17d651; add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba16e: cmp edx, ebx; jb 0xba100; call 0x17d651; add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba157: cmp edx, ebx; jb 0xba100; call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba11a: cmp edx, ebx; jb 0xba100; call 0x17d651; add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a5617: cmp edx, ebx; je 0xa5610; pop ebx; ret; 
0x0008742a: cmp edx, ecx; jae 0x87450; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0012ac5b: cmp edx, ecx; jb 0x12ac63; cmp ecx, edx; sbb eax, eax; ret; 
0x00151337: cmp edx, ecx; jb 0x151342; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x0017ace7: cmp edx, ecx; jb 0x17acef; cmp ecx, edx; sbb eax, eax; ret; 
0x000be52e: cmp edx, ecx; je 0xbe536; test edx, edx; jne 0xbe528; ret; 
0x0014b980: cmp edx, ecx; jne 0x14b970; add esp, 8; pop ebx; ret; 
0x0014c062: cmp edx, ecx; jne 0x14c030; pop ebx; pop esi; ret; 
0x000903ab: cmp edx, edi; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00080949: cmp edx, edi; jmp dword ptr [esi - 0x70]; 
0x00155f51: cmp edx, edx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000a564b: cmp edx, esi; je 0xa5640; pop ebx; pop esi; ret; 
0x000f81ff: cmp esi, -1; dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0xf40; 
0x001255a2: cmp esi, -1; je 0x1255c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0004bba4: cmp esi, 0x247c8bff; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000d7d6d: cmp esi, 0x840f0400; add byte ptr [eax + eax], bl; add dh, dh; ret; 
0x0015c1b4: cmp esi, dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0015c1b4: cmp esi, dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x00186fdf: cmp esi, dword ptr [edx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00164c29: cmp esi, ebx; call dword ptr [esi - 0x73]; 
0x001028d8: cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008af78: cmp esi, edx; jae 0x8afb8; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00180400: cmp esi, edx; jmp dword ptr [esi - 0x70]; 
0x0009472e: cmp esi, esp; call dword ptr [ebx + 0x50]; 
0x001711ac: cmp esp, -0x38; stc; call dword ptr [eax - 0x73]; 
0x0015a937: cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x0009b2b1: cmp esp, -0x66; stc; call dword ptr [eax + 0x6a]; 
0x00120958: cmp esp, 0x62; stc; call dword ptr [eax - 1]; 
0x0009aafa: cmp esp, dword ptr [ebx + 0x19]; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3c149089]; add byte ptr [eax], al; ret; 
0x0009a9fb: cmp esp, dword ptr [ecx + ebx]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a6fa: cmp esp, dword ptr [edi + 0x19]; add bh, al; cmp byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x000bb484: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x001711a7: cmp esp, ebp; call dword ptr [eax - 0x73]; 
0x00170175: cmp esp, edi; call dword ptr [eax - 0x73]; 
0x001711a6: cmp sp, bp; call dword ptr [eax - 0x73]; 
0x0014486d: cmp word ptr [edx + 2], bx; je 0x144878; pop ebx; ret; 
0x0019d1c6: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0017bc4a: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00033e19: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x69a897d], cl; call dword ptr [esi - 1]; 
0x00040a9d: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x000bbdef: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x00164390: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000a33c2: cmpsb byte ptr [esi], byte ptr es:[edi]; call 0xc24e43c7; ret; 
0x00079509: cmpsb byte ptr [esi], byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x0008e8c9: cmpsb byte ptr [esi], byte ptr es:[edi]; dec edi; stc; call dword ptr [eax + 0x6a]; 
0x00132f26: cmpsb byte ptr [esi], byte ptr es:[edi]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00158a9d: cmpsb byte ptr [esi], byte ptr es:[edi]; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0008f976: cmpsb byte ptr [esi], byte ptr es:[edi]; inc ebx; cli; dec dword ptr [ebp - 0x683937f]; call dword ptr [eax - 0x73]; 
0x000268d6: cmpsb byte ptr [esi], byte ptr es:[edi]; inc edx; adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0015d525: cmpsb byte ptr [esi], byte ptr es:[edi]; jno 0x15d521; call dword ptr [eax - 0x18]; 
0x0015d525: cmpsb byte ptr [esi], byte ptr es:[edi]; jno 0x15d521; call dword ptr [eax - 0x18]; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x001227e6: cmpsb byte ptr [esi], byte ptr es:[edi]; or eax, esi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00149636: cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0011d1c7: cmpsb byte ptr [esi], byte ptr es:[edi]; pop esp; stc; call dword ptr [eax + 0x55]; 
0x00146769: cmpsb byte ptr [esi], byte ptr es:[edi]; push cs; add byte ptr [ebx - 0x6f72f314], al; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x0009f5da: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0015940a: cmpsb byte ptr [esi], byte ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x00146c13: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6941d7d], cl; call dword ptr [eax - 0x73]; 
0x000905ca: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6b0397a], cl; call dword ptr [eax - 0x73]; 
0x0008f7f0: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6b0417a], cl; call dword ptr [eax - 0x73]; 
0x001153d0: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0016ce35: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0019eef5: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x0016e197: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000a3382: cmpsd dword ptr [esi], dword ptr es:[edi]; call 0xc24e4387; ret; 
0x000a5df2: cmpsd dword ptr [esi], dword ptr es:[edi]; call 0xc24e6df7; ret; 
0x00079395: cmpsd dword ptr [esi], dword ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x001341f5: cmpsd dword ptr [esi], dword ptr es:[edi]; lahf; clc; jmp dword ptr [esi - 0x70]; 
0x00133f65: cmpsd dword ptr [esi], dword ptr es:[edi]; loope 0x133f5a; jmp dword ptr [esi - 0x70]; 
0x00149775: cmpsd dword ptr [esi], dword ptr es:[edi]; movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00149596: cmpsd dword ptr [esi], dword ptr es:[edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00188773: cmpsd dword ptr [esi], dword ptr es:[edi]; pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fddd1: cmpsd dword ptr [esi], dword ptr es:[edi]; push edi; stc; dec dword ptr [ebp - 0x6a87d71]; call dword ptr [eax - 0x75]; 
0x00047975: cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0009e370: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax + 0x68]; 
0x000a01c2: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0009abce: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00149275: cmpsd dword ptr [esi], dword ptr es:[edi]; stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0018b1f3: cmpsd dword ptr [esi], dword ptr es:[edi]; xor al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00144785: cmpsd dword ptr [esi], dword ptr es:[edi]; xor al, byte ptr [eax]; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0009efd8: cmpsd dword ptr fs:[esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000958dd: cmpxchg dword ptr [ebx], edx; jne 0x958f0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00094826: cmpxchg dword ptr [ebx], esi; jne 0x94830; xor eax, eax; pop ebx; pop esi; ret; 
0x00088d48: cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x00095920: cmpxchg dword ptr [edx], ecx; jne 0x95916; xor eax, eax; pop ebx; ret; 
0x0009596e: cmpxchg dword ptr [edx], ecx; jne 0x95980; xor eax, eax; pop ebx; ret; 
0x0009451c: cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x0008ebed: cmpxchg dword ptr [esp + 4], edx; ret; 
0x000acd44: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0016b7ed: cwde; add byte ptr [eax], al; add al, ch; lcall 0x18c4, 0x83ffeb79; pop ebx; ret; 
0x00034500: cwde; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0007645f: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00128c63: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x10019], al; jmp dword ptr [ebp - 0x5f]; 
0x000c78ad: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000c11f5: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x4fbb7226], cl; add al, 0x81; ret 0; 
0x00143a84: cwde; add ch, bh; dec dword ptr [ebx - 0x72dfdba4]; and esp, 0xffffffbd; stc; call dword ptr [eax - 0x73]; 
0x0016e4d2: cwde; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0019fa64: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0018d29d: cwde; add edi, edi; inc dword ptr [ecx + 0x41677c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f2353: cwde; and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x00165e99: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000a5e37: cwde; call 0xc24e6e3c; ret; 
0x0007a591: cwde; cli; jmp dword ptr [esi - 0x70]; 
0x000d3cdd: cwde; cmp eax, 0x8d500000; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x0005ff11: cwde; dec ebx; inc edx; stc; inc dword ptr [eax - 0x7af0ac06]; ret; 
0x0017a961: cwde; hlt; call dword ptr [eax - 0x73]; 
0x001598c5: cwde; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0010a815: cwde; in eax, dx; call dword ptr [eax + 0x56]; 
0x0014ebf4: cwde; inc ebp; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x0015bcf4: cwde; je 0x15bce3; jmp dword ptr [ebp - 0x75]; 
0x000fe2b8: cwde; mov al, byte ptr [0x3efff909]; jmp eax; 
0x0015951d: cwde; mov byte ptr [0x8d500000], al; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x000ce39e: cwde; or byte ptr [ebx - 0x365363], cl; call dword ptr [eax + 0x52]; 
0x00053fee: cwde; or byte ptr [ebx - 0x365f63], cl; call dword ptr [eax + 0x51]; 
0x000be126: cwde; pop ebx; pop esi; ret; 
0x0014cae4: cwde; pop esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0009bd55: cwde; push ecx; stc; call dword ptr [eax - 0x18]; 
0x00098afb: cwde; stc; call dword ptr [eax + 0x68]; 
0x00098b0e: cwde; stc; call dword ptr [eax - 0x18]; 
0x00098164: cwde; stc; call dword ptr [eax - 0x73]; 
0x0017a2eb: cwde; sti; jmp dword ptr [esi - 0x70]; 
0x001506f4: cwde; sub ch, ch; jmp dword ptr [ebp - 0x75]; 
0x0008f8ec: cwde; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x000906b2: cwde; xchg esp, eax; stc; call dword ptr [eax - 0x18]; cli; jmp dword ptr [esi - 0x70]; 
0x0018a773: daa; aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bedb: daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001233e5: daa; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop esi; arpl cx, di; call dword ptr [eax + 0x56]; 
0x00115811: daa; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001181e0: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x001159be: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115ac1: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b1105: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001283b5: daa; add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00124f61: daa; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e1168: daa; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00081bd9: daa; cli; jmp dword ptr [esi - 0x70]; 
0x0013a719: daa; jne 0x13a715; call dword ptr [esi + 0x6a]; 
0x000cd08f: daa; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00120118: daa; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000bc37e: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000bc724: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f2d18: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2ed8: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009d499: daa; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x61; stc; call dword ptr [eax - 0x18]; 
0x00154538: daa; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x001891f3: daa; push edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000579f5: daa; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017a2a8: daa; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x001494f5: daa; test al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0010fa5d: das; aaa; int1; jmp dword ptr [ebp - 0x75]; 
0x00073ced: das; add ah, bh; jmp dword ptr [esi - 0x70]; 
0x0018b734: das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00157bdd: das; add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000b47cd: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x0017710c: das; add esp, 0x18; pop ebx; ret; 
0x000f48a9: das; add esp, 4; pop ebx; pop esi; ret; 
0x00123730: das; add esp, 8; pop ebx; ret; 
0x00196f8d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0013b37d: das; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00171bf4: das; in al, dx; call dword ptr [eax - 0x73]; 
0x00178de4: das; jbe 0x178d6c; in al, dx; add al, 0x83; ret; 
0x000574ff: das; jbe 0x5748d; ret 0x40c7; 
0x0014c93f: das; je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0014cad7: das; je 0x14cb3e; mov byte ptr [ebx + 0x5ea8], 0; mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0014cb5f: das; je 0x14cbc6; mov byte ptr [ebx + 0x4e68], 0; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x000f28af: das; je 0xf292a; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000505da: das; jne 0x505d0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00099d46: das; jne 0x99d90; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000b4e73: das; mov al, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000f2770: das; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x0008b4e8: das; mov eax, edi; call dword ptr gs:[0x10]; 
0x00103018: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cf8: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x001098ed: das; movsb byte ptr es:[edi], byte ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x000ba70e: das; or al, 0; add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba147: das; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011d191: das; pop esp; stc; call dword ptr [eax + 0x55]; 
0x0009a6f6: das; push cs; add byte ptr [0x19673b], al; mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x000d702d: das; ret 0xffff; 
0x000df878: das; sub esp, 8; push edi; push ebx; call eax; 
0x0004629d: dec byte ptr [eax + eax]; add byte ptr [ebx - 0x7cefdb84], cl; ret; 
0x001938eb: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x0019809b: dec byte ptr [ebp - 0x7af00587]; ret; 
0x0019205b: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x0019579b: dec byte ptr [ebp - 0x7af00687]; ret; 
0x00192deb: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0019185b: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x0019489b: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x0002be15: dec byte ptr [ebx + 0x39042444]; ret 0x840f; 
0x00186838: dec byte ptr [ebx + 0x5b082444]; ret; 
0x00122fab: dec byte ptr [ebx - 0x1d7cfbaa]; add dword ptr [ecx], ecx; ret 0x5689; 
0x000d4a43: dec byte ptr [ebx - 0x387efff6]; in eax, dx; ret; 
0x0006deee: dec byte ptr [ebx - 0x5577b]; jmp dword ptr [ebp - 0x75]; 
0x00058f2c: dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00032638: dec byte ptr [ebx - 0x9b6b]; jmp dword ptr [esi - 0x77]; 
0x00063def: dec byte ptr [ecx + 0x72cb38f3]; ret 0xd938; 
0x000bb1b0: dec byte ptr [ecx + 0x7fe381f3]; jg 0xbb237; jg 0xbb13b; ret; 
0x000cedfe: dec byte ptr [ecx - 0x36336b]; call ebx; 
0x00134e50: dec byte ptr [ecx - 0x76f3dba4]; ret; 
0x000ce430: dec byte ptr [edi]; test dword ptr [ecx - 0x76fffff5], ecx; rol byte ptr [ebx - 0x361f7b], 1; call dword ptr [eax]; 
0x0016fba6: dec di; in al, dx; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x00091f8f: dec dword ptr [0x2890f00]; xor eax, eax; ret; 
0x000ba682: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0018998b: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x000b9a52: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x0018b97b: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0003a194: dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x00058959: dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x000944f5: dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x0013afd0: dec dword ptr [eax]; ret; 
0x0008da5d: dec dword ptr [ebp + 0x2208d]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x0013b380: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000e89d8: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0006ce04: dec dword ptr [ebp + 0x44c70076]; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00061a9c: dec dword ptr [ebp + 0x44c70076]; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000753e8: dec dword ptr [ebp + 0x4689ff40]; and byte ptr [ebx - 0x74c3dbbc], cl; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x548b; 
0x0013b1b5: dec dword ptr [ebp + 0x48d4904]; ret; 
0x000cf994: dec dword ptr [ebp + 0x4f0fff46]; ret 0xff31; 
0x00180aba: dec dword ptr [ebp + 0x558b015e]; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret 0xf6a7; 
0x000eda19: dec dword ptr [ebp + 0x558b015e]; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret; 
0x00053587: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x00037c03: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000bb162: dec dword ptr [ebp + 0x5f103844]; ret; 
0x00090dc9: dec dword ptr [ebp + 0xb6]; add bh, dh; ret 0; 
0x0017fe61: dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000f2729: dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0xfffa], bh; pop ebx; ret; 
0x0011aea9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0016b571: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7c72f314], al; add bl, byte ptr [ecx - 7]; call dword ptr [edi + 0x56]; 
0x0013b1a9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x9363], cl; dec dword ptr [ebp + 0x48d4904]; ret; 
0x00091ca9: dec dword ptr [ebp + 0xb6]; add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00088089: dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x00097aa4: dec dword ptr [ebp + 0xec2494]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x000ce42c: dec dword ptr [ebp + 0xffe194c]; test dword ptr [ecx - 0x76fffff5], ecx; rol byte ptr [ebx - 0x361f7b], 1; call dword ptr [eax]; 
0x0012aeb9: dec dword ptr [ebp - 0x1061f380]; call dword ptr [eax + 0x6a]; 
0x00184ae5: dec dword ptr [ebp - 0x12743380]; call dword ptr [eax + 0x6a]; 
0x000f10a5: dec dword ptr [ebp - 0x14175380]; call dword ptr [eax + 0x6a]; 
0x00182cd5: dec dword ptr [ebp - 0x1424a380]; call dword ptr [eax + 0x6a]; 
0x000eda75: dec dword ptr [ebp - 0x144da380]; call dword ptr [eax + 0x6a]; 
0x00181155: dec dword ptr [ebp - 0x145b0380]; call dword ptr [eax + 0x6a]; 
0x000ea3db: dec dword ptr [ebp - 0x14848380]; call dword ptr [eax + 0x6a]; 
0x001776b0: dec dword ptr [ebp - 0x14b7b]; call dword ptr [eax + 0x6a]; 
0x000bf4c9: dec dword ptr [ebp - 0x15eef380]; push esi; inc ecx; jnp 0xbf4d8; cmove eax, edx; ret; 
0x000be559: dec dword ptr [ebp - 0x15fc3380]; push esi; inc ecx; jnp 0xbe568; cmove eax, edx; ret; 
0x0005d103: dec dword ptr [ebp - 0x17ffd98c]; jecxz 0x5d108; std; jmp ptr [ecx]; ret; 
0x00037bd0: dec dword ptr [ebp - 0x1f945379]; call dword ptr [eax + 0x6a]; 
0x000311f9: dec dword ptr [ebp - 0x1ffed379]; call dword ptr [eax + 0x6a]; 
0x00055b45: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000d0bab: dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x000d088c: dec dword ptr [ebp - 0x361773]; dec dword ptr [edi]; xchg edx, eax; ret 0x8539; 
0x000559e3: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00095247: dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0010245c: dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x0013e42d: dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax - 0x77]; 
0x00121d2b: dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x0013470c: dec dword ptr [ebp - 0x4417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00066a61: dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00121cf8: dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x0006d8e3: dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x5277b]; call dword ptr [eax - 0x18]; 
0x00071d96: dec dword ptr [ebp - 0x4cb6b]; call dword ptr [edx + 0x50]; 
0x00067238: dec dword ptr [ebp - 0x56f7b]; call dword ptr [eax + 0x52]; 
0x001766ca: dec dword ptr [ebp - 0x6367f7a]; call dword ptr [eax - 0x73]; 
0x0017013a: dec dword ptr [ebp - 0x637e37d]; call dword ptr [edx + 0x6a]; 
0x0016f7d4: dec dword ptr [ebp - 0x638977d]; call dword ptr [edx + 0x6a]; 
0x00169fff: dec dword ptr [ebp - 0x639af7d]; call dword ptr [edx + 0x6a]; 
0x0016a0a7: dec dword ptr [ebp - 0x639df7d]; call dword ptr [ebp + 0x6a]; 
0x001603d6: dec dword ptr [ebp - 0x63b2b7a]; call dword ptr [eax - 0x73]; 
0x0014858d: dec dword ptr [ebp - 0x63ff77d]; call dword ptr [eax - 0x73]; 
0x0014817f: dec dword ptr [ebp - 0x640077b]; call dword ptr [eax - 0x73]; 
0x0014787c: dec dword ptr [ebp - 0x6403f7f]; call dword ptr [eax - 0x73]; 
0x001479ed: dec dword ptr [ebp - 0x6404b7f]; call dword ptr [eax - 0x73]; 
0x00147d3d: dec dword ptr [ebp - 0x6406379]; call dword ptr [eax - 0x73]; 
0x00146c0a: dec dword ptr [ebp - 0x6407f7d]; call dword ptr [eax + 0x68]; 
0x0013d24e: dec dword ptr [ebp - 0x643b77b]; call dword ptr [eax - 0x73]; 
0x00134a6c: dec dword ptr [ebp - 0x6470779]; call dword ptr [eax - 0x73]; 
0x0012b1d4: dec dword ptr [ebp - 0x649d77e]; call dword ptr [eax - 0x73]; 
0x00123635: dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x001858c2: dec dword ptr [ebp - 0x64eff79]; call dword ptr [eax - 0x73]; 
0x0010a674: dec dword ptr [ebp - 0x64f1379]; call dword ptr [eax + 0x68]; 
0x000f1e82: dec dword ptr [ebp - 0x6507379]; call dword ptr [eax - 0x73]; 
0x00183ab2: dec dword ptr [ebp - 0x6508b79]; call dword ptr [eax - 0x73]; 
0x000ee85e: dec dword ptr [ebp - 0x6509779]; call dword ptr [eax - 0x73]; 
0x00181f32: dec dword ptr [ebp - 0x650ab79]; call dword ptr [eax - 0x73]; 
0x000eb1f8: dec dword ptr [ebp - 0x650b37e]; call dword ptr [eax - 0x73]; 
0x000e9630: dec dword ptr [ebp - 0x650bf79]; call dword ptr [eax + 0x68]; 
0x000e7539: dec dword ptr [ebp - 0x651c37d]; call dword ptr [eax - 0x73]; 
0x000e3e16: dec dword ptr [ebp - 0x651e77d]; call dword ptr [eax - 0x73]; 
0x000e58c8: dec dword ptr [ebp - 0x651f37d]; call dword ptr [eax - 0x73]; 
0x000d619f: dec dword ptr [ebp - 0x652bf7d]; call dword ptr [eax - 0x73]; 
0x000d6b8a: dec dword ptr [ebp - 0x652d37d]; call dword ptr [eax - 0x73]; 
0x000d0d81: dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x000d0e5f: dec dword ptr [ebp - 0x6532f7a]; call dword ptr [eax - 0x73]; 
0x000cf82d: dec dword ptr [ebp - 0x6532f7f]; call dword ptr [eax - 0x73]; 
0x000cb88b: dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax - 0x73]; 
0x000bf254: dec dword ptr [ebp - 0x6549370]; call dword ptr [edx - 0x73]; 
0x000be325: dec dword ptr [ebp - 0x655137a]; call dword ptr [eax - 0x73]; 
0x000bd9e2: dec dword ptr [ebp - 0x6556b79]; call dword ptr [eax - 0x73]; 
0x000bd74d: dec dword ptr [ebp - 0x655777b]; call dword ptr [eax - 0x73]; 
0x000a6eb1: dec dword ptr [ebp - 0x6562370]; call dword ptr [edx - 0x73]; 
0x000a4fbe: dec dword ptr [ebp - 0x656b770]; call dword ptr [edx - 0x73]; 
0x0009ed2d: dec dword ptr [ebp - 0x657d379]; call dword ptr [eax - 0x73]; 
0x0009ade8: dec dword ptr [ebp - 0x657e37a]; call dword ptr [eax - 0x73]; 
0x0009bd3f: dec dword ptr [ebp - 0x6580b7a]; call dword ptr [eax - 0x73]; 
0x0009d48a: dec dword ptr [ebp - 0x658237d]; call dword ptr [eax - 0x73]; 
0x0009abca: dec dword ptr [ebp - 0x6585b7f]; call dword ptr [eax - 0x73]; 
0x0009f5c3: dec dword ptr [ebp - 0x6586b79]; call dword ptr [eax + 0x68]; 
0x0009f969: dec dword ptr [ebp - 0x6587b79]; call dword ptr [eax - 0x73]; 
0x0009ff38: dec dword ptr [ebp - 0x658bb7d]; call dword ptr [eax - 0x73]; 
0x000976e3: dec dword ptr [ebp - 0x6683f79]; call dword ptr [eax - 0x73]; 
0x00091e56: dec dword ptr [ebp - 0x669e37a]; call dword ptr [eax - 0x73]; 
0x000916f3: dec dword ptr [ebp - 0x66a2379]; call dword ptr [eax - 0x73]; 
0x000905c1: dec dword ptr [ebp - 0x66a3b7a]; call dword ptr [eax + 0x68]; 
0x000905ea: dec dword ptr [ebp - 0x66a3b7a]; call dword ptr [eax + 0x6a]; 
0x0009069c: dec dword ptr [ebp - 0x66a3b7a]; call dword ptr [eax - 0x73]; 
0x0008f7e7: dec dword ptr [ebp - 0x66a737a]; call dword ptr [eax + 0x68]; 
0x0008f826: dec dword ptr [ebp - 0x66a737a]; call dword ptr [eax + 0x6a]; 
0x0008f8d6: dec dword ptr [ebp - 0x66a737a]; call dword ptr [eax - 0x73]; 
0x0007e05f: dec dword ptr [ebp - 0x66df37a]; call dword ptr [eax - 0x73]; 
0x0007343d: dec dword ptr [ebp - 0x6735379]; call dword ptr [eax - 0x73]; 
0x000734be: dec dword ptr [ebp - 0x673537f]; call dword ptr [eax - 0x73]; 
0x00065d2b: dec dword ptr [ebp - 0x673677a]; call dword ptr [eax - 0x73]; 
0x0005bd18: dec dword ptr [ebp - 0x6756b7d]; call dword ptr [eax - 0x73]; 
0x0005a1bc: dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x00057f71: dec dword ptr [ebp - 0x677a77a]; call dword ptr [eax - 0x73]; 
0x00055ba4: dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0004e3e5: dec dword ptr [ebp - 0x678cb79]; call dword ptr [eax - 0x73]; 
0x0004aa41: dec dword ptr [ebp - 0x678e379]; call dword ptr [eax - 0x73]; 
0x000567a7: dec dword ptr [ebp - 0x6790779]; call dword ptr [eax - 0x73]; 
0x000d0e84: dec dword ptr [ebp - 0x679077f]; call dword ptr [eax - 0x73]; 
0x0013966d: dec dword ptr [ebp - 0x67cef67]; call dword ptr [eax + 0x53]; 
0x001395f2: dec dword ptr [ebp - 0x67cef75]; call dword ptr [eax - 0x77]; 
0x00032242: dec dword ptr [ebp - 0x67dc77d]; call dword ptr [eax - 0x73]; 
0x00031a6c: dec dword ptr [ebp - 0x67e077f]; call dword ptr [eax - 0x73]; 
0x0002ff3f: dec dword ptr [ebp - 0x67e5b7d]; call dword ptr [eax - 0x73]; 
0x00090e63: dec dword ptr [ebp - 0x683537b]; call dword ptr [eax - 0x73]; 
0x0008f95a: dec dword ptr [ebp - 0x683937f]; call dword ptr [eax - 0x73]; 
0x0007394a: dec dword ptr [ebp - 0x683b37a]; call dword ptr [eax - 0x73]; 
0x0013a716: dec dword ptr [ebp - 0x68ad87d]; call dword ptr [esi + 0x6a]; 
0x0016a060: dec dword ptr [ebp - 0x68c197d]; call dword ptr [edi + 0x6a]; 
0x00166159: dec dword ptr [ebp - 0x68c627d]; call dword ptr [edx + 0x6a]; 
0x001354d5: dec dword ptr [ebp - 0x698707a]; call dword ptr [ecx - 0x77]; 
0x0012d487: dec dword ptr [ebp - 0x69b1a79]; call dword ptr [ebp - 1]; 
0x0012a302: dec dword ptr [ebp - 0x69b857d]; call dword ptr [eax + 0x57]; 
0x00104621: dec dword ptr [ebp - 0x6a8127a]; call dword ptr [eax - 0x18]; 
0x000fddd4: dec dword ptr [ebp - 0x6a87d71]; call dword ptr [eax - 0x75]; 
0x000f2357: dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x000f231c: dec dword ptr [ebp - 0x6a8da80]; call dword ptr [eax + 0x6a]; 
0x000fe0c0: dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x000f558a: dec dword ptr [ebp - 0x6bd957d]; call dword ptr [edx + 0x52]; 
0x0005d214: dec dword ptr [ebp - 0x6be667b]; call dword ptr [esi - 0x77]; 
0x0005d1f9: dec dword ptr [ebp - 0x6be7f7b]; call dword ptr [esi - 0x77]; 
0x00045fce: dec dword ptr [ebp - 0x6c11780]; call dword ptr [esi + 0x6a]; 
0x0003f555: dec dword ptr [ebp - 0x6c3a57b]; dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0006a2a2: dec dword ptr [ebp - 0x6e85fe7c]; jecxz 0x6a2a9; jmp eax; 
0x00101c7d: dec dword ptr [ebp - 0x6f45c7d]; call dword ptr [ecx + 0x6a]; 
0x001a0ae1: dec dword ptr [ebp - 0x728fdb94]; je 0x1a0b0d; jl 0x1a0a74; ret; 
0x00068632: dec dword ptr [ebp - 0x74034dac]; adc ch, cl; ret 0xfffc; 
0x00133e3c: dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x00127408: dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00127b2d: dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0006f88b: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x00035023: dec dword ptr [ebp - 0x76ffd98c]; ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x000ce6e0: dec dword ptr [ebp - 0x77c2fbd]; or dword ptr [edi], ecx; xchg byte ptr [edx - 0x74000009], dh; test dword ptr [ecx + ecx*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x00054696: dec dword ptr [ebp - 0x7b350]; dec dword ptr [ebp - 0x6c11780]; call dword ptr [esi + 0x6a]; 
0x00054465: dec dword ptr [ebp - 0x7b379]; call dword ptr [eax - 0x73]; 
0x000bf2f9: dec dword ptr [ebp - 0x911c380]; push esi; inc ecx; jne 0xbf306; cmove eax, edx; ret; 
0x000c0149: dec dword ptr [ebp - 0x9148380]; push esi; inc ecx; jnp 0xc0158; cmove eax, edx; ret; 
0x000be4f9: dec dword ptr [ebp - 0x9166380]; push esi; inc ecx; jnp 0xbe508; cmove eax, edx; ret; 
0x00175e4a: dec dword ptr [ebp - 0x937b]; call dword ptr [ecx + 0x6a]; 
0x000a6109: dec dword ptr [ebp - 0x95c2380]; push esi; inc ecx; jbe 0xa6124; cmove eax, edx; ret; 
0x000a5f59: dec dword ptr [ebp - 0x95d2380]; push esi; inc ecx; jbe 0xa5f74; cmove eax, edx; ret; 
0x000a5059: dec dword ptr [ebp - 0x95e6380]; push esi; inc ecx; jbe 0xa5074; cmove eax, edx; ret; 
0x0012b135: dec dword ptr [ebp - 0xa77b]; call dword ptr [ebx + 0x50]; 
0x0017665f: dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x00032bc8: dec dword ptr [ebp - 0xc743]; dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x00032bce: dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x0016e078: dec dword ptr [ebp - 0xcc6034a]; call dword ptr [ebp - 0x73]; 
0x001483c0: dec dword ptr [ebp - 0xe8f137d]; call dword ptr [esi + 0x50]; 
0x0007cd77: dec dword ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0017697b: dec dword ptr [ebx + 0x104245c]; ret; 
0x00027147: dec dword ptr [ebx + 0x10a083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x0009c208: dec dword ptr [ebx + 0x10c83]; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00107c98: dec dword ptr [ebx + 0x10ccb384]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0006263f: dec dword ptr [ebx + 0x15c80]; add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x000a29bb: dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000c0c09: dec dword ptr [ebx + 0x24448903]; cmp al, 0x89; ret 0xc483; 
0x000de42d: dec dword ptr [ebx + 0x29042444]; ret; 
0x0002a64d: dec dword ptr [ebx + 0x291c2444]; ret; 
0x0006174e: dec dword ptr [ebx + 0x29342454]; ret; 
0x0008d66e: dec dword ptr [ebx + 0x3118244c]; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017e03b: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0002b4cb: dec dword ptr [ebx + 0x39082444]; ret 0x840f; 
0x00108489: dec dword ptr [ebx + 0x390c2444]; ret; 
0x00151794: dec dword ptr [ebx + 0x392c244c]; ret; 
0x0014273c: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00064c5f: dec dword ptr [ebx + 0x39c12906]; sal dword ptr [ecx + ebx - 0x7d], 1; in al, dx; or byte ptr [ebx - 0x58b63], cl; call dword ptr [ecx + 0x50]; 
0x000a3888: dec dword ptr [ebx + 0x448b8604]; test byte ptr [eax*4 + 0x10c74c0], bh; ret; 
0x0005a58d: dec dword ptr [ebx + 0x4589b07d]; mov eax, 0xfff977e9; call dword ptr [eax + 0x52]; 
0x00101397: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x001013ac: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00182891: dec dword ptr [ebx + 0x48b0447]; mov al, 0xe8; inc ebx; ret 0xfff6; 
0x000f0c61: dec dword ptr [ebx + 0x48b0447]; mov al, 0xe8; ret; 
0x00131438: dec dword ptr [ebx + 0x538b2043]; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x00035555: dec dword ptr [ebx + 0x558bac7d]; test al, 0x89; fsubp st(1); ret; 
0x0011d4cf: dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00186817: dec dword ptr [ebx + 0x5b082444]; ret; 
0x0013e9f3: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x000f80ae: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0x7540; 
0x000f8202: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0xf40; 
0x001050f1: dec dword ptr [ebx + 0x882494]; add byte ptr [eax], al; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0006d171: dec dword ptr [ebx + 0xfd28511]; dec ecx; ret 0xc183; 
0x0017cdc9: dec dword ptr [ebx - 0x137c37bb]; or al, 0x8d; cmp byte ptr [ecx], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0008cf2a: dec dword ptr [ebx - 0x137c4fbb]; or al, 0x8d; adc byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0012ffcf: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x6592808d; stc; call dword ptr [eax - 0x75]; 
0x001303e2: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xb758808d; stc; call dword ptr [eax + 0x6a]; 
0x0003536e: dec dword ptr [ebx - 0x137c67bb]; or al, 0x89; push ebp; mov esp, 0x3dbd808d; stc; call dword ptr [eax - 0x18]; 
0x00173bac: dec dword ptr [ebx - 0x137c7f83]; or al, 0x8d; xchg dword ptr [ebx + ebp*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x001044c9: dec dword ptr [ebx - 0x1474b]; jmp dword ptr [ebp - 0x75]; 
0x001043bf: dec dword ptr [ebx - 0x1477b]; jmp dword ptr [ebp - 0x75]; 
0x00070b86: dec dword ptr [ebx - 0x16fd76ee]; xchg edi, eax; loope 0x70b8e; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x00031a66: dec dword ptr [ebx - 0x1d373]; dec dword ptr [ebp - 0x67e077f]; call dword ptr [eax - 0x73]; 
0x00037f7f: dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x0006a29b: dec dword ptr [ebx - 0x29537e7c]; clc; dec dword ptr [ebp - 0x6e85fe7c]; jecxz 0x6a2a9; jmp eax; 
0x00055226: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000ce0d8: dec dword ptr [ebx - 0x35ff73]; dec dword ptr [ecx - 0x47bb7226]; add al, 0x81; ret 0; 
0x00055a84: dec dword ptr [ebx - 0x360363]; call dword ptr [esi - 0x75]; 
0x000cf75b: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [ebx - 0x366f4b]; dec dword ptr [ebx - 0x362743]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0005477c: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [ebx - 0x367f43]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cf767: dec dword ptr [ebx - 0x362743]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00055810: dec dword ptr [ebx - 0x36277b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000cf472: dec dword ptr [ebx - 0x362b6b]; call dword ptr [eax - 0x73]; 
0x00055abb: dec dword ptr [ebx - 0x362f63]; call dword ptr [eax - 0x73]; 
0x00053f3d: dec dword ptr [ebx - 0x363343]; call dword ptr [ebx]; 
0x000ce2f3: dec dword ptr [ebx - 0x363363]; call dword ptr [ebx]; 
0x000cfb30: dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x000538fb: dec dword ptr [ebx - 0x36374b]; inc dword ptr [ecx]; ret 0xd389; 
0x000ce49a: dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x000cee94: dec dword ptr [ebx - 0x363b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cf8b2: dec dword ptr [ebx - 0x364773]; call dword ptr [ebx - 0x73]; 
0x000559dd: dec dword ptr [ebx - 0x364773]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00055f5a: dec dword ptr [ebx - 0x36477b]; dec dword ptr [ecx - 0x365f7b]; dec dword ptr [ecx - 0x7c067610]; ret 0xd301; 
0x000d02a5: dec dword ptr [ebx - 0x364f73]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000d001f: dec dword ptr [ebx - 0x364f73]; dec dword ptr [edi]; xchg ebp, eax; ret 0xff52; 
0x00055fad: dec dword ptr [ebx - 0x364f7b]; jmp ptr [ecx]; ret; 
0x000d0d7b: dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x000d0e59: dec dword ptr [ebx - 0x36534b]; dec dword ptr [ebp - 0x6532f7a]; call dword ptr [eax - 0x73]; 
0x00055340: dec dword ptr [ebx - 0x365363]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000cfd8c: dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x000cf827: dec dword ptr [ebx - 0x365373]; dec dword ptr [ebp - 0x6532f7f]; call dword ptr [eax - 0x73]; 
0x000d0e7e: dec dword ptr [ebx - 0x365373]; dec dword ptr [ebp - 0x679077f]; call dword ptr [eax - 0x73]; 
0x000ceba6: dec dword ptr [ebx - 0x36537b]; call dword ptr [esi + 0x6a]; 
0x000d00b3: dec dword ptr [ebx - 0x36537b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000538f5: dec dword ptr [ebx - 0x365b6b]; dec dword ptr [ebx - 0x36374b]; inc dword ptr [ecx]; ret 0xd389; 
0x00055b9e: dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000567a1: dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x6790779]; call dword ptr [eax - 0x73]; 
0x00055dbc: dec dword ptr [ebx - 0x365f63]; jmp dword ptr [ebp - 0x75]; 
0x00054690: dec dword ptr [ebx - 0x365f7b]; dec dword ptr [ebp - 0x7b350]; dec dword ptr [ebp - 0x6c11780]; call dword ptr [esi + 0x6a]; 
0x000cf761: dec dword ptr [ebx - 0x366f4b]; dec dword ptr [ebx - 0x362743]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00054782: dec dword ptr [ebx - 0x367f43]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00053b59: dec dword ptr [ebx - 0x368763]; dec dword ptr [edi]; test byte ptr [edx - 0x7afffff0], dh; fisttp dword ptr [ebx - 0x365f63]; jmp dword ptr [ebp - 0x75]; 
0x001320a5: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0012ef0f: dec dword ptr [ebx - 0x3b7cd7b9]; adc byte ptr [ebx - 0x72affb14], al; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x0012f877: dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x00086b18: dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x000954b8: dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x001227d1: dec dword ptr [ebx - 0x3f7af7bd]; jne 0x1227f8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000f5cc6: dec dword ptr [ebx - 0x3f7ce3a2]; add dword ptr [ecx], edi; ret; 
0x000f5b56: dec dword ptr [ebx - 0x3f7ce3aa]; add dword ptr [ecx], edi; ret 0xef7f; 
0x0015faa2: dec dword ptr [ebx - 0x41f0d1f4]; ret 0x44f6; 
0x0006636a: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00064262: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0013e64a: dec dword ptr [ebx - 0x44f43]; jmp dword ptr [ebp - 0x5f]; 
0x0010686a: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax + 0x53]; 
0x001068bc: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax - 0x77]; 
0x000f1d9c: dec dword ptr [ebx - 0x45f7b]; inc dword ptr [ebx + 0x70ff0cec]; adc al, 0xe8; ret 0xfb32; 
0x000ea3cf: dec dword ptr [ebx - 0x46b73]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14848380]; call dword ptr [eax + 0x6a]; 
0x001858bc: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64eff79]; call dword ptr [eax - 0x73]; 
0x00183aac: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x6508b79]; call dword ptr [eax - 0x73]; 
0x00181f2c: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x650ab79]; call dword ptr [eax - 0x73]; 
0x000eb12b: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x000ee424: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000e9ad8: dec dword ptr [ebx - 0x46f63]; call dword ptr [edi + 0x25]; 
0x000eb0d0: dec dword ptr [ebx - 0x46f63]; call dword ptr [edi - 0x18]; 
0x000e9c34: dec dword ptr [ebx - 0x46f63]; call dword ptr [esi - 0x75]; 
0x000ed2d5: dec dword ptr [ebx - 0x46f63]; call dword ptr [esi - 1]; 
0x000ea3c9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x46b73]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14848380]; call dword ptr [eax + 0x6a]; 
0x00184ad9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12743380]; call dword ptr [eax + 0x6a]; 
0x000f1099: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14175380]; call dword ptr [eax + 0x6a]; 
0x00182cc9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x1424a380]; call dword ptr [eax + 0x6a]; 
0x000eda69: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x144da380]; call dword ptr [eax + 0x6a]; 
0x00181149: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x145b0380]; call dword ptr [eax + 0x6a]; 
0x000eac81: dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x000ead09: dec dword ptr [ebx - 0x4736b]; call dword ptr [edx - 1]; 
0x000ed772: dec dword ptr [ebx - 0x47f6b]; call dword ptr [edi - 1]; 
0x000936c0: dec dword ptr [ebx - 0x47f7dbb4]; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ea0e8: dec dword ptr [ebx - 0x4836b]; call dword ptr [esi - 0x75]; 
0x00184adf: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12743380]; call dword ptr [eax + 0x6a]; 
0x000f109f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14175380]; call dword ptr [eax + 0x6a]; 
0x00182ccf: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x1424a380]; call dword ptr [eax + 0x6a]; 
0x000eda6f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x144da380]; call dword ptr [eax + 0x6a]; 
0x0018114f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x145b0380]; call dword ptr [eax + 0x6a]; 
0x000ea3d5: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14848380]; call dword ptr [eax + 0x6a]; 
0x000ee41e: dec dword ptr [ebx - 0x49b7b]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000ed884: dec dword ptr [ebx - 0x49b7b]; inc dword ptr [ecx]; ret; 
0x0006dff4: dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x0006e14d: dec dword ptr [ebx - 0x4eb43]; inc dword ptr [ecx]; ret; 
0x00073437: dec dword ptr [ebx - 0x4f743]; dec dword ptr [ebp - 0x6735379]; call dword ptr [eax - 0x73]; 
0x0007023b: dec dword ptr [ebx - 0x4f743]; jmp dword ptr [ebp - 0x75]; 
0x0006eff7: dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x000714fc: dec dword ptr [ebx - 0x4f763]; inc dword ptr [ebx - 0x7c72f314]; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000734b8: dec dword ptr [ebx - 0x4f773]; dec dword ptr [ebp - 0x673537f]; call dword ptr [eax - 0x73]; 
0x0006e9ae: dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x00072bd7: dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ecx - 0x5237b]; call dword ptr [edx + 0x57]; 
0x0006e147: dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x4eb43]; inc dword ptr [ecx]; ret; 
0x0006dfe8: dec dword ptr [ebx - 0x50763]; dec dword ptr [ecx - 0x4f343]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x0012a01d: dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x00073631: dec dword ptr [ebx - 0x51373]; dec dword ptr [ecx - 0x5236b]; dec dword ptr [ecx - 0x7627feff]; ret; 
0x0006fe39: dec dword ptr [ebx - 0x51373]; dec dword ptr [ecx - 0x7627feff]; ret; 
0x000721b7: dec dword ptr [ebx - 0x52373]; call dword ptr [ecx + 0x50]; 
0x00073806: dec dword ptr [ebx - 0x52b7b]; call dword ptr [ecx + 0x51]; 
0x0007372c: dec dword ptr [ebx - 0x53b43]; dec dword ptr [ecx - 0x4ff6b]; call dword ptr [eax + 0x29]; 
0x0007219a: dec dword ptr [ebx - 0x53b73]; call ecx; 
0x001966d4: dec dword ptr [ebx - 0x54937c7c]; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00070011: dec dword ptr [ebx - 0x54f73]; jmp dword ptr [ebp - 0x5f]; 
0x00065d25: dec dword ptr [ebx - 0x58b4b]; dec dword ptr [ebp - 0x673677a]; call dword ptr [eax - 0x73]; 
0x000650f3: dec dword ptr [ebx - 0x58b63]; call dword ptr [esi - 0x18]; 
0x00062639: dec dword ptr [ebx - 0x58b7b]; dec dword ptr [ebx + 0x15c80]; add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x00064cc9: dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x00062e5f: dec dword ptr [ebx - 0x59b43]; dec dword ptr [ebx - 0x5bb7b]; jmp dword ptr [ebp - 0x75]; 
0x0010a66e: dec dword ptr [ebx - 0x5af43]; dec dword ptr [ebp - 0x64f1379]; call dword ptr [eax + 0x68]; 
0x000ebf9e: dec dword ptr [ebx - 0x5af43]; dec dword ptr [ebp - 0x650bf79]; call dword ptr [eax + 0x68]; 
0x000e8f39: dec dword ptr [ebx - 0x5af63]; call dword ptr [edi - 0x18]; 
0x000e941e: dec dword ptr [ebx - 0x5af7b]; jmp dword ptr [ebp - 0x75]; 
0x00062e65: dec dword ptr [ebx - 0x5bb7b]; jmp dword ptr [ebp - 0x75]; 
0x000f033e: dec dword ptr [ebx - 0x5bf43]; dec dword ptr [ebp - 0x650bf79]; call dword ptr [eax + 0x68]; 
0x00064c10: dec dword ptr [ebx - 0x5bf43]; jmp dword ptr [ebp - 0x5f]; 
0x000efc69: dec dword ptr [ebx - 0x5bf63]; call dword ptr [edi - 0x18]; 
0x000f013e: dec dword ptr [ebx - 0x5bf7b]; jmp dword ptr [ebp - 0x75]; 
0x000659e0: dec dword ptr [ebx - 0x5d743]; dec dword ptr [ecx + 0x29f829f0]; ret 0x9589; 
0x0004daf5: dec dword ptr [ebx - 0x72b7db84]; xchg dword ptr [edi + eax*4], esi; stc; call dword ptr [eax - 0x73]; 
0x0004e2cd: dec dword ptr [ebx - 0x72b7db84]; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0002ed75: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002d998: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d887: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00028dcf: dec dword ptr [ebx - 0x72bbdb8c]; xchg ah, ch; jp 0x28dd2; call dword ptr [eax - 0x73]; 
0x00047065: dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x000478ec: dec dword ptr [ebx - 0x72bfdb84]; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0002e14e: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002e0d4: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a034: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00029b00: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00028797: dec dword ptr [ebx - 0x72c3dba4]; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000c8a9d: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax], ebp; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0002b67a: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0004a238: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edi + eax*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0002a9be: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ebp; jns 0x2a9c1; call dword ptr [eax - 0x73]; 
0x0002b1da: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ecx; jns 0x2b1dd; call dword ptr [eax - 0x73]; 
0x0002b6f5: dec dword ptr [ebx - 0x72c7db84]; xchg esp, ecx; jns 0x2b6f8; call dword ptr [eax + 0x68]; 
0x000c99ba: dec dword ptr [ebx - 0x72c7db8c]; xchg byte ptr [eax], ch; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00115051: dec dword ptr [ebx - 0x72c7dba4]; or eax, 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x000c52c6: dec dword ptr [ebx - 0x72cbdb84]; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c24d9: dec dword ptr [ebx - 0x72cbdb8c]; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c61eb: dec dword ptr [ebx - 0x72cbdb8c]; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00147100: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0012edde: dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012edbb: dec dword ptr [ebx - 0x72dbdb84]; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00143837: dec dword ptr [ebx - 0x72dfdba4]; and esp, 0xffffffbd; stc; call dword ptr [eax - 0x73]; 
0x000a01a7: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x000c0417: dec dword ptr [ebx - 0x72e3db84]; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0040: dec dword ptr [ebx - 0x72e3db84]; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0008f463: dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f665: dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x000be03a: dec dword ptr [ebx - 0x72e3dbac]; sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x0010aae8: dec dword ptr [ebx - 0x72e7dbac]; cmp byte ptr [eax], 0xb1; stc; call dword ptr [eax - 0x73]; 
0x0009c7a9: dec dword ptr [ebx - 0x72ebdb8c]; xchg al, al; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0009c506: dec dword ptr [ebx - 0x72ebdbbc]; sub byte ptr [ecx + ecx], 0; add byte ptr [ecx], bh; ret; 
0x00108583: dec dword ptr [ebx - 0x72efdb84]; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00045024: dec dword ptr [ebx - 0x72efdb84]; xchg eax, edi; xchg cl, bh; call dword ptr [eax + 0x68]; 
0x001085f5: dec dword ptr [ebx - 0x72efdb84]; xchg esp, edx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009815c: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [eax + ebx*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x00146520: dec dword ptr [ebx - 0x72f3dba4]; sbb dword ptr [eax], -0x42; stc; call dword ptr [eax - 0x73]; 
0x0011bde5: dec dword ptr [ebx - 0x72f3dbac]; cmp byte ptr [eax], 0xb1; stc; call dword ptr [eax - 0x73]; 
0x001475d7: dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax], 0xbf; stc; call dword ptr [eax - 0x73]; 
0x0014768a: dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax + 0x68]; 
0x001474ee: dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0009e785: dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi - 7], dh; call dword ptr [eax - 0x73]; 
0x0004f7e2: dec dword ptr [ebx - 0x73f37d54]; clc; dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x0010af84: dec dword ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x001253f4: dec dword ptr [ebx - 0x74e7dbb4]; push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0013b626: dec dword ptr [ebx - 0x74ebdbbc]; add byte ptr [ebx - 0x68f0f008], al; ret; 
0x000d9976: dec dword ptr [ebx - 0x74ebdbbc]; push eax; adc dh, dh; ret; 
0x0006ac9b: dec dword ptr [ebx - 0x74efdb8c]; push esi; add al, 0x8b; inc esi; or byte ptr [ecx], bh; ret 0x840f; 
0x00108516: dec dword ptr [ebx - 0x74f3dbbc]; jl 0x108542; or al, 0x39; ret; 
0x000dfe24: dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0002a730: dec dword ptr [ebx - 0x76afdbac]; ret; 
0x0004ee33: dec dword ptr [ebx - 0x76c3db8c]; ret; 
0x00115af9: dec dword ptr [ebx - 0x76cfdbb4]; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0006c9cb: dec dword ptr [ebx - 0x76cfdbb4]; ret; 
0x0010ad04: dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x0011b034: dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x0011aae4: dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x0006a5b5: dec dword ptr [ebx - 0x76dfdbac]; ret; 
0x000e4dda: dec dword ptr [ebx - 0x76e3db8c]; aad 0xe9; ret; 
0x000f5bf6: dec dword ptr [ebx - 0x76e3dbb4]; ret 0x448b; 
0x0009a6d9: dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000fb4d6: dec dword ptr [ebx - 0x76ebdb84]; ret; 
0x0013c805: dec dword ptr [ebx - 0x76ebdbbc]; ret 0x789; 
0x000c23a2: dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00034c33: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x0016d08a: dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x00175102: dec dword ptr [ebx - 0x78725f83]; jo 0x1750d3; stc; call dword ptr [eax - 0x73]; 
0x00098b16: dec dword ptr [ebx - 0x78727783]; js 0x98ab6; stc; call dword ptr [eax + 0x68]; 
0x00098b57: dec dword ptr [ebx - 0x78727783]; js 0x98af7; stc; call dword ptr [eax - 0x73]; 
0x00098ff6: dec dword ptr [ebx - 0x78727783]; js 0x98f96; stc; call dword ptr [eax + 0x68]; 
0x00099037: dec dword ptr [ebx - 0x78727783]; js 0x98fd7; stc; call dword ptr [eax - 0x73]; 
0x0008dcc5: dec dword ptr [ebx - 0x7972dbcc]; lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax + 0x68]; 
0x0008df86: dec dword ptr [ebx - 0x7972dbcc]; lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x0013e386: dec dword ptr [ebx - 0x7a76e3bb]; mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000439fd: dec dword ptr [ebx - 0x7ac7db84]; dec dword ptr [edi]; xchg esp, eax; ret 0xfd83; 
0x00124570: dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bl, ah; or al, dh; call dword ptr [ebx + 0x56]; 
0x000e6139: dec dword ptr [ebx - 0x7afbdbbc]; ror byte ptr [edi], 0x84; ret 3; 
0x0012ebdd: dec dword ptr [ebx - 0x7cabdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x000d6925: dec dword ptr [ebx - 0x7cf3dbac]; ret 0x3909; 
0x00080e59: dec dword ptr [ebx - 0x7cf3dbb4]; in al, dx; or al, 0x83; ret; 
0x001511e9: dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x000e854f: dec dword ptr [ebx - 0x7cf3dbbc]; ret 0x8902; 
0x00103feb: dec dword ptr [ebx - 0x7d7374fd]; sub al, 0xc; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0012fae9: dec dword ptr [ebx - 0x7f7253bb]; insb byte ptr es:[edi], dx; iretd; out dx, eax; call dword ptr [eax + 0x6a]; 
0x0005a1b6: dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x0005a0f9: dec dword ptr [ebx - 0x8b7b]; jmp dword ptr [ebp - 0x75]; 
0x00032431: dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x00059ada: dec dword ptr [ebx - 0x974b]; dec dword ptr [edi]; xchg edx, eax; ret 0xf883; 
0x0005a587: dec dword ptr [ebx - 0x9f7b]; dec dword ptr [ebx + 0x4589b07d]; mov eax, 0xfff977e9; call dword ptr [eax + 0x52]; 
0x0005a706: dec dword ptr [ebx - 0xb743]; jmp dword ptr [esi + 0x25]; 
0x0012b1ce: dec dword ptr [ebx - 0xbb6b]; dec dword ptr [ebp - 0x649d77e]; call dword ptr [eax - 0x73]; 
0x0012b299: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [ebp - 0x1061f380]; call dword ptr [eax + 0x6a]; 
0x001766c4: dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x6367f7a]; call dword ptr [eax - 0x73]; 
0x0008bc63: dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011ded8: dec dword ptr [ecx + 0x1c938d16]; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0017fd8f: dec dword ptr [ecx + 0x1da29ea]; ret 0xb5e9; 
0x000f2c4c: dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017f6f3: dec dword ptr [ecx + 0x245489d1]; adc al, 0x89; ret 0xca29; 
0x0012cc63: dec dword ptr [ecx + 0x24e82434]; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000659e6: dec dword ptr [ecx + 0x29f829f0]; ret 0x9589; 
0x0012a68c: dec dword ptr [ecx + 0x3ccb3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000fdd63: dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0008da2a: dec dword ptr [ecx + 0x40e383c3]; jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0012b11d: dec dword ptr [ecx + 0x479486]; add byte ptr [ebp - 0x1062337a], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x00171b5d: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x001721dc: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00165b7a: dec dword ptr [ecx + 0x5b102454]; pop esi; jmp eax; 
0x0011d4c7: dec dword ptr [ecx + 0x5c938d16]; mov esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00078a4a: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000588fd: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000f9e76: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x0011f6bf: dec dword ptr [ecx + 0x6c89112c]; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00104cff: dec dword ptr [ecx + 0xbad0]; pushal; add cl, al; call 0xfe0860f; dec edi; ret 0xd4e9; 
0x0014c460: dec dword ptr [ecx - 0x12b6b]; call dword ptr [eax - 0x18]; 
0x00103e9c: dec dword ptr [ecx - 0x13b4b]; call dword ptr [eax + 0x6a]; 
0x00103e6f: dec dword ptr [ecx - 0x1434b]; jmp dword ptr [ebp - 0x5f]; 
0x0003f55b: dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x001775e2: dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x000f4da3: dec dword ptr [ecx - 0x1b17dbcc]; jecxz 0xf4d9d; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00037b4b: dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000316e6: dec dword ptr [ecx - 0x1c37b]; call dword ptr [ebx + 0x52]; 
0x00031228: dec dword ptr [ecx - 0x1cb7b]; jmp dword ptr [ecx]; 
0x000311f3: dec dword ptr [ecx - 0x1d74b]; dec dword ptr [ebp - 0x1ffed379]; call dword ptr [eax + 0x6a]; 
0x00031222: dec dword ptr [ecx - 0x1eb73]; dec dword ptr [ecx - 0x1cb7b]; jmp dword ptr [ecx]; 
0x00037f85: dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x000311ed: dec dword ptr [ecx - 0x1f76b]; dec dword ptr [ecx - 0x1d74b]; dec dword ptr [ebp - 0x1ffed379]; call dword ptr [eax + 0x6a]; 
0x000f4ab5: dec dword ptr [ecx - 0x2d17dbcc]; out 0xf2, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00033a13: dec dword ptr [ecx - 0x2d7a3f88]; je 0x33a25; mov dword ptr [esp + 0x14], eax; call edx; 
0x0005663d: dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x000565bd: dec dword ptr [ecx - 0x361f4b]; dec dword ptr [ecx - 0x362373]; call dword ptr [eax - 0x18]; 
0x000556c7: dec dword ptr [ecx - 0x361f63]; call dword ptr [eax - 0x18]; 
0x000d0c26: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 0x18]; 
0x000cf61a: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x00056114: dec dword ptr [ecx - 0x361f7b]; call dword ptr [eax - 0x18]; 
0x000cf2b3: dec dword ptr [ecx - 0x361f7b]; call dword ptr [edi + 0x6a]; 
0x00054bb9: dec dword ptr [ecx - 0x361f7b]; call dword ptr [esi + 0x6a]; 
0x000ce9f2: dec dword ptr [ecx - 0x361f7b]; dec dword ptr [edi]; test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ebx - 0x365363], cl; jmp dword ptr [ebp - 0x75]; 
0x00055a39: dec dword ptr [ecx - 0x36236b]; call dword ptr [eax - 0x75]; 
0x000cf50e: dec dword ptr [ecx - 0x36236b]; jmp dword ptr [ebx]; 
0x000565c3: dec dword ptr [ecx - 0x362373]; call dword ptr [eax - 0x18]; 
0x000cf6d0: dec dword ptr [ecx - 0x362773]; dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x000d0301: dec dword ptr [ecx - 0x362b6b]; call dword ptr [eax + 0x6a]; 
0x000554c6: dec dword ptr [ecx - 0x362b6b]; jmp dword ptr [ebx]; 
0x00056637: dec dword ptr [ecx - 0x362f6b]; dec dword ptr [ecx - 0x361f4b]; call dword ptr [eax - 0x18]; 
0x00055fa7: dec dword ptr [ecx - 0x36477b]; dec dword ptr [ebx - 0x364f7b]; jmp ptr [ecx]; ret; 
0x00055f60: dec dword ptr [ecx - 0x365f7b]; dec dword ptr [ecx - 0x7c067610]; ret 0xd301; 
0x000cf8a6: dec dword ptr [ecx - 0x366b43]; dec dword ptr [ecx - 0x366f73]; dec dword ptr [ebx - 0x364773]; call dword ptr [ebx - 0x73]; 
0x000cf8ac: dec dword ptr [ecx - 0x366f73]; dec dword ptr [ebx - 0x364773]; call dword ptr [ebx - 0x73]; 
0x000cf98e: dec dword ptr [ecx - 0x366f7b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0xff31; 
0x0008eeb3: dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de818: dec dword ptr [ecx - 0x44efdb94]; dec edi; add byte ptr [eax], al; add cl, ch; ret; 
0x000e96c4: dec dword ptr [ecx - 0x46b73]; jmp dword ptr [ebp - 0x5f]; 
0x0010428a: dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001043e2: dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e96be: dec dword ptr [ecx - 0x4777b]; dec dword ptr [ecx - 0x46b73]; jmp dword ptr [ebp - 0x5f]; 
0x000ecd8e: dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x00121cfe: dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x000ce0de: dec dword ptr [ecx - 0x47bb7226]; add al, 0x81; ret 0; 
0x00121cf2: dec dword ptr [ecx - 0x47f7b]; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00027263: dec dword ptr [ecx - 0x48f0e7b0]; xchg edi, eax; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x00037a9f: dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x00027eea: dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [edi + edi*2], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x000ed18d: dec dword ptr [ecx - 0x4977b]; call dword ptr [eax - 0x75]; 
0x00121d84: dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x0012a1d1: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x0006d8dd: dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x5277b]; call dword ptr [eax - 0x18]; 
0x0006e443: dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x00073796: dec dword ptr [ecx - 0x4ef6b]; call dword ptr [eax - 0x75]; 
0x0006dfee: dec dword ptr [ecx - 0x4f343]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x0006d81f: dec dword ptr [ecx - 0x4f763]; jmp dword ptr [ebp - 0x5f]; 
0x00073732: dec dword ptr [ecx - 0x4ff6b]; call dword ptr [eax + 0x29]; 
0x00072ba5: dec dword ptr [ecx - 0x4ff7b]; call dword ptr [edx + 0x52]; 
0x00073637: dec dword ptr [ecx - 0x5236b]; dec dword ptr [ecx - 0x7627feff]; ret; 
0x00072bdd: dec dword ptr [ecx - 0x5237b]; call dword ptr [edx + 0x57]; 
0x0006d8e9: dec dword ptr [ecx - 0x5277b]; call dword ptr [eax - 0x18]; 
0x0006df34: dec dword ptr [ecx - 0x52f7b]; call dword ptr [esi - 1]; 
0x0006f5b3: dec dword ptr [ecx - 0x53b63]; dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x0006d819: dec dword ptr [ecx - 0x54743]; dec dword ptr [ecx - 0x4f763]; jmp dword ptr [ebp - 0x5f]; 
0x00072fbf: dec dword ptr [ecx - 0x54f7b]; call dword ptr [eax + 0x50]; 
0x000d9806: dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test ah, dl; add byte ptr [eax], al; add dh, dh; ret; 
0x000651fd: dec dword ptr [ecx - 0x58f73]; call dword ptr [eax - 0x18]; 
0x00066a5b: dec dword ptr [ecx - 0x58f7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00064c0a: dec dword ptr [ecx - 0x58f7b]; dec dword ptr [ebx - 0x5bf43]; jmp dword ptr [ebp - 0x5f]; 
0x0006254f: dec dword ptr [ecx - 0x5934b]; dec dword ptr [ecx - 0x5f343]; jmp dword ptr [ebp - 0x5f]; 
0x000651f7: dec dword ptr [ecx - 0x5976b]; dec dword ptr [ecx - 0x58f73]; call dword ptr [eax - 0x18]; 
0x0006853e: dec dword ptr [ecx - 0x59773]; call dword ptr [eax - 0x75]; 
0x00065f47: dec dword ptr [ecx - 0x59773]; call dword ptr [ebx - 0x75]; 
0x00064be4: dec dword ptr [ecx - 0x59f6b]; call dword ptr [esi - 0x18]; 
0x00067fac: dec dword ptr [ecx - 0x5ab6b]; call dword ptr [edx + 0x52]; 
0x00067e4a: dec dword ptr [ecx - 0x5bb73]; call dword ptr [edx + 0x52]; 
0x00062633: dec dword ptr [ecx - 0x5d77b]; dec dword ptr [ebx - 0x58b7b]; dec dword ptr [ebx + 0x15c80]; add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x0011e4f9: dec dword ptr [ecx - 0x5f16efba]; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00062555: dec dword ptr [ecx - 0x5f343]; jmp dword ptr [ebp - 0x5f]; 
0x0007630a: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0014c194: dec dword ptr [ecx - 0x6f7c723e]; inc esp; stc; call dword ptr [eax + 0x52]; 
0x00035def: dec dword ptr [ecx - 0x72ec142d]; je 0x35e1d; add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x0011db84: dec dword ptr [ecx - 0x736c72ea]; test esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0004f7e9: dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x0005707d: dec dword ptr [ecx - 0x74ebdbbc]; inc eax; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x000a7781: dec dword ptr [ecx - 0x76217609]; ret; 
0x00037f8b: dec dword ptr [ecx - 0x76267631]; ret; 
0x0006fe3f: dec dword ptr [ecx - 0x7627feff]; ret; 
0x00170481: dec dword ptr [ecx - 0x763e7606]; ret; 
0x001a1761: dec dword ptr [ecx - 0x7683db84]; ret 0xe283; 
0x0014368b: dec dword ptr [ecx - 0x7693dbbc]; ret 0xc483; 
0x0014352b: dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x00109398: dec dword ptr [ecx - 0x769bdbbc]; ret; 
0x000f92f5: dec dword ptr [ecx - 0x76a7dbbc]; ret; 
0x0013b424: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00107b26: dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x00147a88: dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00108c49: dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003f345: dec dword ptr [ecx - 0x76f7dbbc]; ret 0x77e9; 
0x0003f486: dec dword ptr [ecx - 0x76f7dbbc]; ret 0x8d8d; 
0x0003f57e: dec dword ptr [ecx - 0x76fbdbbc]; ret; 
0x0008e5d0: dec dword ptr [ecx - 0x7872af05]; nop; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000a1501: dec dword ptr [ecx - 0x7917dbe4]; stc; std; jmp dword ptr [esi - 0x70]; 
0x0014c40c: dec dword ptr [ecx - 0x7c037607]; rcr byte ptr [edx], 0x89; ret 0x25; 
0x00055f66: dec dword ptr [ecx - 0x7c067610]; ret 0xd301; 
0x0005d29c: dec dword ptr [ecx - 0x7c72dbfc]; xchg edx, eax; je 0x5d29e; call dword ptr [ebp + 0x56]; 
0x0007d5a0: dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00058e0f: dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x0013aa72: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0x9f7b]; dec dword ptr [ecx - 0xa743]; jmp dword ptr [ebp - 0x5f]; 
0x0005895f: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x000322f0: dec dword ptr [ecx - 0x8f7b]; call dword ptr [eax + 0x56]; 
0x0005896b: dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x000358e1: dec dword ptr [ecx - 0x937b]; call dword ptr [eax - 0x73]; 
0x0005a605: dec dword ptr [ecx - 0x9743]; call dword ptr [eax - 1]; 
0x00032506: dec dword ptr [ecx - 0x9773]; call dword ptr [edx + 0x56]; 
0x0013aa78: dec dword ptr [ecx - 0x9f7b]; dec dword ptr [ecx - 0xa743]; jmp dword ptr [ebp - 0x5f]; 
0x0013aa7e: dec dword ptr [ecx - 0xa743]; jmp dword ptr [ebp - 0x5f]; 
0x00175c34: dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x5f]; 
0x0016b198: dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x00175c2e: dec dword ptr [ecx - 0xbb6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x5f]; 
0x00058965: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x0013afb9: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xe8c0; 
0x00176665: dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x00176659: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0017621c: dec dword ptr [ecx - 0xeb43]; jmp dword ptr [ebp - 0x5f]; 
0x00176216: dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xeb43]; jmp dword ptr [ebp - 0x5f]; 
0x00100959: dec dword ptr [ecx]; retf 0x5489; ret; 
0x00118af4: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000e8848: dec dword ptr [edi]; adc dword ptr [ecx], -0x3a; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x0011e94a: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x0019d9a3: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00047a78: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9d74; 
0x000c3670: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9e74; 
0x000e88f8: dec dword ptr [edi]; and dword ptr [ecx - 0x3b], 0xfffffff3; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00104e38: dec dword ptr [edi]; and dword ptr [ecx], 0; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x00126e78: dec dword ptr [edi]; and ecx, 0xffffffdf; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000659da: dec dword ptr [edi]; cmp dword ptr [ebp - 0x21], -1; dec dword ptr [ebx - 0x5d743]; dec dword ptr [ecx + 0x29f829f0]; ret 0x9589; 
0x00028291: dec dword ptr [edi]; dec eax; ret 0x2ec3; 
0x000dbe46: dec dword ptr [edi]; dec eax; ret 0xed83; 
0x00054de2: dec dword ptr [edi]; dec edi; ret 0xff31; 
0x00058e55: dec dword ptr [edi]; dec esi; ret 0xec83; 
0x000399d5: dec dword ptr [edi]; inc ebp; call 0x2b9c6; jmp dword ptr [esi - 0x70]; 
0x000a2953: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0013b253: dec dword ptr [edi]; inc ebp; ret 0x8588; 
0x000a29e1: dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00125702: dec dword ptr [edi]; inc ebp; ret 0xd231; 
0x00062627: dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0013af57: dec dword ptr [edi]; inc ebp; ret; 
0x001993a9: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x000a6b0a: dec dword ptr [edi]; inc esi; ret 0xc483; 
0x000cd018: dec dword ptr [edi]; inc esp; fmul dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0009f5af: dec dword ptr [edi]; inc esp; ret 0x568d; 
0x000a2994: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0013ae29: dec dword ptr [edi]; inc esp; ret 0x8588; 
0x000a89b2: dec dword ptr [edi]; inc esp; ret 0xcceb; 
0x0003c329: dec dword ptr [edi]; inc esp; ret 0xe4e9; 
0x0014fd9e: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0009fbf6: dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b227: dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000a8b34: dec dword ptr [edi]; inc esp; ret; 
0x0009f244: dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000d37d3: dec dword ptr [edi]; mov byte ptr [esi + 0xf000001], dl; xchg ebp, eax; ret 0xc238; 
0x0006c414: dec dword ptr [edi]; mov dh, 0x44; xor ah, al; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x0006c0cc: dec dword ptr [edi]; mov dh, 0x44; xor al, ah; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0015e922: dec dword ptr [edi]; mov dh, 0x47; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x00101812: dec dword ptr [edi]; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x00059613: dec dword ptr [edi]; mov dh, 0x50; or al, 0x89; sal dh, 1; ret 0xf40; 
0x00058b95: dec dword ptr [edi]; mov dh, 0x56; or al, 0xf6; ret 0x7401; 
0x0013ae22: dec dword ptr [edi]; mov dh, 0x85; imul edi, edi, -1; dec dword ptr [edi]; inc esp; ret 0x8588; 
0x0013b24c: dec dword ptr [edi]; mov dh, 0x85; push 0xfffffff; inc ebp; ret 0x8588; 
0x0006c07a: dec dword ptr [edi]; mov dh, 4; push es; mov ecx, dword ptr [edi + eax*4 - 0x72754]; add ecx, ebx; jmp ecx; 
0x000fb996: dec dword ptr [edi]; mov dword ptr [0x831e72d7], eax; ret; 
0x00030c65: dec dword ptr [edi]; mov esi, 0x893a3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x000a2848: dec dword ptr [edi]; mov esp, 0xf042444; inc esp; ret 0xc083; 
0x00054579: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000467a8: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0006ef72: dec dword ptr [edi]; test bl, ch; sbb dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x00055cfd: dec dword ptr [edi]; test byte ptr [eax + 0x31000005], al; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00126f95: dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000bbdfe: dec dword ptr [edi]; test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x00105c58: dec dword ptr [edi]; test byte ptr [eax - 0x75000000], bl; test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000ce9f8: dec dword ptr [edi]; test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ebx - 0x365363], cl; jmp dword ptr [ebp - 0x75]; 
0x0014abe2: dec dword ptr [edi]; test byte ptr [edx + 0x39000001], dh; ret 0x840f; 
0x00053b5f: dec dword ptr [edi]; test byte ptr [edx - 0x7afffff0], dh; fisttp dword ptr [ebx - 0x365f63]; jmp dword ptr [ebp - 0x75]; 
0x000bbddb: dec dword ptr [edi]; test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x000f543c: dec dword ptr [edi]; test dword ptr [eax + eax + 0x4f60000], ecx; inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00062901: dec dword ptr [edi]; test dword ptr [eax - 0x74fffffd], ebp; test dword ptr [edx + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x000bba7f: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0009f0ce: dec dword ptr [edi]; test dword ptr [ebp - 0x7a000002], esi; ror byte ptr [edi], 0x85; ret 0xfffe; 
0x000a0ccc: dec dword ptr [edi]; test dword ptr [ecx + 0x5bfff837], edi; pop esi; pop edi; ret; 
0x000bbb8a: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x00121ccd: dec dword ptr [edi]; test dword ptr [edx + eax - 0x137d0000], edx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000643e1: dec dword ptr [edi]; xchg ebp, eax; ret 0x7ce9; 
0x00055346: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0013afbf: dec dword ptr [edi]; xchg ebp, eax; ret 0xe8c0; 
0x000d0025: dec dword ptr [edi]; xchg ebp, eax; ret 0xff52; 
0x0011a2b4: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x000d0892: dec dword ptr [edi]; xchg edx, eax; ret 0x8539; 
0x00059ae0: dec dword ptr [edi]; xchg edx, eax; ret 0xf883; 
0x0017d7d4: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00031cb9: dec dword ptr [edi]; xchg esp, eax; ret 0x4c89; 
0x0015ec99: dec dword ptr [edi]; xchg esp, eax; ret 0xede9; 
0x000cdfa2: dec dword ptr [edi]; xchg esp, eax; ret 0xf883; 
0x00043a03: dec dword ptr [edi]; xchg esp, eax; ret 0xfd83; 
0x00076f8e: dec dword ptr [edi]; xchg esp, eax; ret; 
0x001664d6: dec eax; adc al, 0x72; ret 0x4889; 
0x000358eb: dec eax; adc al, byte ptr [eax]; add byte ptr [ecx - 0x8b7b], cl; call dword ptr [eax - 0x73]; 
0x000ba492: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b700c: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000ba431: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6fae: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a0541: dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x00164194: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016566f: dec eax; add al, 0x5b; ret; 
0x00131c28: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x00112277: dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x11faf36d], cl; call dword ptr [edx - 0x73]; 
0x0008cb0b: dec eax; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0007b138: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00081994: dec eax; add al, 0xf; mov dh, 2; ret; 
0x00075804: dec eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0014abf6: dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x001940db: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001928d2: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000b6f20: dec eax; add eax, 0x824448b; pop esi; ret; 
0x000ba393: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x001798d7: dec eax; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00088104: dec eax; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0018b1ed: dec eax; and al, 0xff; inc dword ptr [ecx + 0x434a7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00163f3e: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0016ae49: dec eax; call dword ptr [eax + 0x10]; 
0x0016ace7: dec eax; call dword ptr [eax + 0x14]; 
0x000284e6: dec eax; call eax; 
0x001898e3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b8e3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0007f899: dec eax; cli; jmp dword ptr [esi - 0x70]; 
0x00085b81: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x85b80; ret; 
0x000415ec: dec eax; cmp al, 0x8b; inc eax; inc eax; ret; 
0x0018998a: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0018b97a: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0008e062: dec eax; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000a5806: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000993f5: dec eax; inc edx; push cs; add byte ptr [0x197a3b], al; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x000415a8: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0009f72d: dec eax; jmp dword ptr [ecx]; 
0x000ba44f: dec eax; jnp 0x5b17c89a; pop esi; ret; 
0x000b6fcc: dec eax; jnp 0x5e139417; ret; 
0x001720c0: dec eax; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0005762c: dec eax; mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000576d8: dec eax; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00099b58: dec eax; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099880: dec eax; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad9: dec eax; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099806: dec eax; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00164f1d: dec eax; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000998d8: dec eax; mov ebp, eax; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099920: dec eax; mov ebp, eax; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00099ba7: dec eax; mov ebp, eax; mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bef: dec eax; mov ebp, eax; mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00128b08: dec eax; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00085038: dec eax; or al, 0x5b; ret; 
0x000bfcd9: dec eax; or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x0009ba0b: dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0016e5b4: dec eax; or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x0008a97d: dec eax; or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0005858f: dec eax; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0007fd65: dec eax; or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x0008a771: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x00076314: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000d2e71: dec eax; pop ebx; ret; 
0x0014d744: dec eax; pop edx; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x0003cef5: dec eax; pop es; adc al, 0; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000ba3d3: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f60: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019401f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00192872: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000ba579: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70d6: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00078682: dec eax; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0014f5ee: dec eax; push dword ptr [esp + 0x10]; call edi; 
0x0016baae: dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0014f5ea: dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0009e382: dec eax; push edx; stc; call dword ptr [eax - 0x18]; 
0x000ba3b3: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f40: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001940fb: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001928e2: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0016518b: dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00028293: dec eax; ret 0x2ec3; 
0x0012d633: dec eax; ret 0x4639; 
0x000d34de: dec eax; ret 0x548b; 
0x00040e7b: dec eax; ret 0x9387; 
0x000d469e: dec eax; ret 0xb70f; 
0x0002fe79: dec eax; ret 0xc083; 
0x0003fd8f: dec eax; ret 0xc483; 
0x0012d2cc: dec eax; ret 0xc629; 
0x000dbe48: dec eax; ret 0xed83; 
0x0003d68d: dec eax; ret 0xf3c3; 
0x0011bd5e: dec eax; ret 0xf8c1; 
0x0019a2c3: dec eax; ret 0xff3; 
0x000871c3: dec eax; ret 0xff50; 
0x0019a223: dec eax; ret; 
0x00101116: dec eax; ror byte ptr [eax - 0x7cd7dbac], 1; mov byte ptr [ecx], 0x83; ret; 
0x0007b331: dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000ba54b: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b70b8: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00166dec: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000ef706: dec eax; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000fb00b: dec eax; sub byte ptr [ebp - 0x74888b01], al; inc edi; sub byte ptr [ebp - 0x76efdb84], cl; ret 0x4489; 
0x0015a044: dec eax; xchg ecx, eax; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0018969b: dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00172c6f: dec ebp; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4c75; 
0x000a1cba: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000f48dd: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0017e6af: dec ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000c358d: dec ebp; add eax, 0x8d500000; xchg byte ptr [esi + eax*4 - 0x17af0007], cl; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x00160c15: dec ebp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; sahf; jb 0x160c1a; call dword ptr [eax - 0x18]; 
0x00187e2d: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x00096b04: dec ebp; add esp, 0x124; pop ebx; pop esi; ret; 
0x00125272: dec ebp; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00196883: dec ebp; bnd call dword ptr [ebx - 0x18]; 
0x000e1c80: dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x00055b9b: dec ebp; jecxz 0x55b9d; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x001312ec: dec ebp; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0013128c: dec ebp; mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x00051055: dec ebp; mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x001490c8: dec ebp; mov word ptr [ebp - 0x63fc77f], cs; call dword ptr [eax - 0x73]; 
0x0008ef36: dec ebp; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0014c0c1: dec ebp; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00125c2d: dec ebp; push esi; push ebx; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x001883cd: dec ebp; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000318a1: dec ebp; ret 0xc389; 
0x000a0b12: dec ebp; ret 0xc689; 
0x0003183d: dec ebp; ret 0xec83; 
0x000dddc5: dec ebp; ret; 
0x000a7446: dec ebp; sal byte ptr [ecx], 1; fucomi st(3); adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x001903e8: dec ebp; sar dh, cl; inc dword ptr [ecx + 0x3eb2cc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014703f: dec ebp; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x0007bd5b: dec ebp; stc; call dword ptr [eax - 0x18]; 
0x00092192: dec ebp; test al, 1; je 0x921e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000b4200: dec ebp; xchg esp, eax; or al, 0; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0006f541: dec ebx; adc al, 0; add byte ptr [ebx - 0x78f0ef08], al; imul edi, dword ptr [edi], 0; add byte ptr [ecx], al; ret; 
0x0009b3ba: dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00147c8b: dec ebx; adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00189884: dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e636a: dec ebx; add al, 0x83; ret; 
0x000dfd1c: dec ebx; add byte ptr [eax], al; add bh, dh; fiadd dword ptr [ebx + 0x450fdafb]; ret 0x548b; 
0x0012965d: dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x000f7d21: dec ebx; add dword ptr [eax], eax; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x00115ef1: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000d1d51: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000956ef: dec ebx; add esp, 0x124; pop ebx; pop esi; ret; 
0x0010acf4: dec ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009622b: dec ebx; add esp, 0x38; pop ebx; ret; 
0x001172f8: dec ebx; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x001220cb: dec ebx; arpl cx, di; call dword ptr [eax + 0x57]; 
0x000574eb: dec ebx; cdq; sbb eax, 0x24448b00; add al, 0x8d; xchg edx, eax; ret; 
0x000ad2f1: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0016a0d1: dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000a91e8: dec ebx; in al, 0x83; ret 0x8301; 
0x0014e635: dec ebx; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x00044655: dec ebx; in eax, dx; std; jmp dword ptr [esi - 0x70]; 
0x0005ff12: dec ebx; inc edx; stc; inc dword ptr [eax - 0x7af0ac06]; ret; 
0x0019efe4: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x0019e684: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x0019dfc4: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x000d6f04: dec ebx; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0008aa07: dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000ba202: dec ebx; xor al, 0xc; add byte ptr [ecx + 0x105e6ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0019db69: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0019db81: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0002623d: dec ecx; adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0005db66: dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00029ee8: dec ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x000af337: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af497: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf57: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0b7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0011edff: dec ecx; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000bb001: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0007f769: dec ecx; cli; jmp dword ptr [esi - 0x70]; 
0x000aa267: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x000abc5b: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x000aa397: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x000abdbb: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x001701fc: dec ecx; in al, dx; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x00073072: dec ecx; in eax, 0xff; call dword ptr [edx - 0x7d]; 
0x0004ff26: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0016b520: dec ecx; je 0x16b51c; call dword ptr [edi + 0x56]; 
0x000aad17: dec ecx; jmp ptr [ecx]; ret 0x280f; 
0x000ac8bb: dec ecx; jmp ptr [ecx]; ret 0xc301; 
0x000bc7bc: dec ecx; jne 0xbc7b8; pop esi; ret; 
0x00092382: dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092f98: dec ecx; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x00092d15: dec ecx; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092196: dec ecx; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000af4d7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f7: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000f2816: dec ecx; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x000af4b7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d7: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000bd781: dec ecx; push esp; stc; call dword ptr [eax - 0x18]; 
0x000deeb3: dec ecx; ret 0x1c8d; 
0x000db817: dec ecx; ret 0x348d; 
0x00119946: dec ecx; ret 0x8dc3; 
0x0006a5d1: dec ecx; ret 0x9489; 
0x000dcc26: dec ecx; ret 0xc101; 
0x0006d177: dec ecx; ret 0xc183; 
0x000dbb4a: dec ecx; ret 0xc483; 
0x00025474: dec ecx; ret 0xc789; 
0x00029042: dec ecx; ret 0xec83; 
0x00090d00: dec ecx; ret 0xf8c1; 
0x00029227: dec ecx; ret; 
0x000d1dc4: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b333f: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x0008bc65: dec edi; adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000b499c: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000b49be: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000b49fc: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000b32bc: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d1daf: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000bad3c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x00197d6d: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00189494: dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005105a: dec edi; add al, 0xf; xchg edx, eax; ret 0x789; 
0x0019d21d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000de81e: dec edi; add byte ptr [eax], al; add cl, ch; ret; 
0x0005166d: dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000b4930: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x00143c18: dec edi; add esi, esi; ret; 
0x000c362d: dec edi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d1e24: dec edi; and al, 0x75; js 0xd1e88; pop esi; ret; 
0x000b34c6: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d1e0f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0007f0a9: dec edi; cli; jmp dword ptr [esi - 0x70]; 
0x000d1e94: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000d1e89: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0016fba7: dec edi; in al, dx; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x000b49dc: dec edi; jge 0x5e6a5d2a; pop ebx; ret; 
0x0012eddc: dec edi; lock dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00171f50: dec edi; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000b32fc: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00099878: dec edi; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d2b23: dec edi; or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00134b51: dec edi; or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret 4; 
0x000d1d79: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00092059: dec edi; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0010aaff: dec edi; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000b3290: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x000b3406: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000b3270: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000bfd34: dec edi; ret 0x2ec3; 
0x00141cc0: dec edi; ret 0x4189; 
0x000f5d3b: dec edi; ret 0x568b; 
0x001689e6: dec edi; ret 0x8966; 
0x00119fbc: dec edi; ret 0x8d50; 
0x000bfd53: dec edi; ret 0xc35f; 
0x00104d0d: dec edi; ret 0xd4e9; 
0x00054de4: dec edi; ret 0xff31; 
0x000de3a4: dec edi; ret; 
0x00100450: dec edi; ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x000e0341: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000d1df4: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000b4aa6: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000b4ac8: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b4b16: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x000e0337: dec edi; sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000b33c6: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d1dd9: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x0013ec81: dec edi; stc; call dword ptr [eax + 0x56]; 
0x0008e8ca: dec edi; stc; call dword ptr [eax + 0x6a]; 
0x00039902: dec edi; stc; call dword ptr [eax - 0x18]; 
0x00091154: dec edi; stc; call dword ptr [eax - 0x18]; ret; 
0x0008dcd8: dec edi; stc; call dword ptr [eax - 0x73]; 
0x000d1e44: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000d1e39: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x0019d030: dec edi; test dh, 4; jne 0x19d084; add eax, 0xb; ret; 
0x000d1e74: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000d1e5f: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000bac8a: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0003be3e: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0017197c: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x0003fb96: dec edx; adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x000aca4e: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b0e3f: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000260ca: dec edx; adc eax, 0x241c8900; call esi; 
0x00057f50: dec edx; add al, 0x5b; pop esi; pop edi; ret; 
0x00129cdb: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x129ce8; ret; 
0x000e6b35: dec edx; add al, 0x83; ret 0x8301; 
0x00059001: dec edx; add al, 0x83; ret 0x8304; 
0x00141821: dec edx; add al, 0x83; ret 0x8504; 
0x00130654: dec edx; add al, 0x83; ret 0x8518; 
0x0007b5b1: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000ad09c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0007ecc2: dec edx; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0016e5e4: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000acc9a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000acd00: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000af340: dec edx; add eax, 0x5f0c428d; ret; 
0x000acce2: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0011ed1e: dec edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017a349: dec edx; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0006261a: dec edx; and byte ptr [ebx + 0x3a802452], cl; add byte ptr [ecx - 0x60373], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0019f7a6: dec edx; cld; jne 0x19f7b0; pop ebx; ret; 
0x0019b468: dec edx; cld; mov eax, 0; jne 0x19b6b0; pop ebx; ret; 
0x001898e6: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b8e6: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x001719b7: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00189a1e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00063dee: dec edx; dec byte ptr [ecx + 0x72cb38f3]; ret 0xd938; 
0x0018998d: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x001700fb: dec edx; in al, dx; call dword ptr [eax - 0x73]; 
0x000476ba: dec edx; in eax, 0xff; call dword ptr [eax + 0x31]; 
0x000f28cf: dec edx; inc ecx; add byte ptr [esi + edx*2 + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0011591d: dec edx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001167d1: dec edx; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000aca14: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000b99af: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x0008a962: dec edx; or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b106b: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x000e057d: dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x0008f92d: dec edx; or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x001a8f72: dec edx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret 4; 
0x000acd64: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000acdd8: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000ad1c4: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0010a6db: dec edx; pop ecx; stc; call dword ptr [eax + 0x53]; 
0x000acd40: dec edx; pop es; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad140: dec edx; pop es; jne 0xacfe1; pop ebx; ret; 
0x000af380: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4e0: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000aafa0: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x000adb63: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000ab100: dec edx; pop es; mov eax, edx; ret; 
0x000ace08: dec edx; push cs; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad238: dec edx; push cs; jne 0xacfe1; pop ebx; ret; 
0x000f235a: dec edx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x000acd22: dec edx; push es; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad122: dec edx; push es; jne 0xacfe1; pop ebx; ret; 
0x000af360: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4c0: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x000aaf80: dec edx; push es; mov eax, edi; pop edi; ret; 
0x000ab0e0: dec edx; push es; mov eax, edx; ret; 
0x001905eb: dec edx; sar dh, 1; inc dword ptr [ecx + 0x3e929c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189ab2: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018baa2: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00189937: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b937: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001226c5: dec edx; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x000bb499: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00100945: dec esi; adc al, 0x8b; push esp; ret; 
0x00096f2d: dec esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x001070f8: dec esi; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x000be74e: dec esi; add al, 0; add byte ptr [ebx + 0x391c2444], cl; ror dword ptr [edi], 0x85; ret 2; 
0x0018954b: dec esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb6d: dec esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00148243: dec esi; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x001481d5: dec esi; add byte ptr [eax], al; test eax, eax; jne 0x1481e7; ret; 
0x000b6f17: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019d035: dec esi; add eax, 0xb; ret; 
0x000f9ee4: dec esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00083a34: dec esi; and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x0007f239: dec esi; cli; jmp dword ptr [esi - 0x70]; 
0x000d1e91: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000287b1: dec esi; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00147a00: dec esi; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00147a00: dec esi; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; push ss; ret; 
0x0012ee22: dec esi; lock dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ee68: dec esi; lock dec dword ptr [ebx - 0x72dbdb84]; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0007da69: dec esi; or al, 0x89; ret 0x48d; 
0x00154bd2: dec esi; or byte ptr [ebx - 0x76e7dbb4], cl; fisubr dword ptr [ecx]; ret 0xca39; 
0x0012eb58: dec esi; or byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x00089c6f: dec esi; or byte ptr [edx + 0x21], bh; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00039dc1: dec esi; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x000f291c: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x000f39a0: dec esi; ret 0x4489; 
0x0009776a: dec esi; ret 0x578b; 
0x00097783: dec esi; ret 0x8389; 
0x00168b00: dec esi; ret 0x8966; 
0x0011a029: dec esi; ret 0xc931; 
0x0011a14c: dec esi; ret 0xd231; 
0x00108283: dec esi; ret 0xe883; 
0x00058e57: dec esi; ret 0xec83; 
0x0008d08e: dec esi; ret 0xffff; 
0x00038d4e: dec esi; ret; 
0x000d1df1: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000e0344: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000e033e: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000d7b75: dec esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000f50e3: dec esi; stc; call dword ptr [eax + 0x55]; 
0x00080e20: dec esi; stc; call dword ptr [eax + 0x56]; 
0x00121fb5: dec esi; stc; call dword ptr [eax + 0x6a]; 
0x000fe0c4: dec esi; stc; call dword ptr [eax - 0x17]; 
0x0007e057: dec esi; stc; call dword ptr [eax - 0x18]; 
0x0008cbbf: dec esi; stc; call dword ptr [eax - 0x73]; 
0x000829a7: dec esi; stc; call dword ptr [eax - 0x75]; 
0x00087a2c: dec esi; stc; call dword ptr [ecx + 0x52]; 
0x0008cc39: dec esi; stc; call dword ptr [edx + 0x50]; 
0x00088087: dec esi; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x000a282e: dec esi; xchg ebp, eax; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000d1e71: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x001713c0: dec esp; aaa; in al, dx; call dword ptr [eax - 0x73]; 
0x0010880e: dec esp; adc bh, cl; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0002ea53: dec esp; adc eax, 0x73d33900; sbb dword ptr [ebx - 0x7cf3dbac], ecx; ret 0x8301; 
0x00025f3a: dec esp; adc eax, 0x86f0300; mov dword ptr [esp], ebp; call esi; 
0x001645b6: dec esp; add ah, dh; call dword ptr [edx - 0x73]; 
0x00040902: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00178190: dec esp; add al, 0; add byte ptr [ebx - 0x4c72f714], al; out dx, eax; jne 0x178195; call dword ptr [esi + 0x57]; 
0x00189734: dec esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e38a0: dec esp; add al, byte ptr [0x244c8b00]; or byte ptr [ebp - 0x651db7f], cl; call dword ptr [eax - 0x73]; 
0x00096112: dec esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x19ad637d], cl; jmp dword ptr [ebp - 0x5d]; 
0x00152073: dec esp; add al, byte ptr [eax]; add byte ptr [ebx - 0x7cd7db84], cl; ret 0x8301; 
0x001192a1: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0014d81c: dec esp; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00048438: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000781d0: dec esp; add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x781e3; push edx; call dword ptr [ebx + 0x1c]; 
0x000bf968: dec esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00102d1c: dec esp; add esp, 0x28; pop ebx; ret; 
0x001879d1: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00118259: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00124586: dec esp; and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0012383d: dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00087936: dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001716f5: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00170c65: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00109919: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116adb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bcb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126cab: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc3b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5cb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab6b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012680b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00089403: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099757: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011941a: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x001193bc: dec esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001181d9: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0016d301: dec esp; and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x00076507: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017171f: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001708f7: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x0008784a: dec esp; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000dfac8: dec esp; and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000df771: dec esp; and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00102b31: dec esp; and al, 0x14; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00128bfd: dec esp; and al, 0x14; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00120ed0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00118359: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b700: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115320: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126da0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a20: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126aa0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00126840: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126c00: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a60: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00126930: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c70: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00121940: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac00: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125c6d: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001182d9: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011591f: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0005da58: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00185f30: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129100: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001253f6: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000df741: dec esp; and al, 0x18; push ebx; call eax; 
0x0008d670: dec esp; and al, 0x18; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001663f8: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00166437: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000dfb90: dec esp; and al, 0x1c; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00125feb: dec esp; and al, 0x1c; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00102adb: dec esp; and al, 0x1c; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00097aad: dec esp; and al, 0x1c; mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00121a55: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000df73c: dec esp; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x000d3048: dec esp; and al, 0x20; call ecx; 
0x000d3043: dec esp; and al, 0x20; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x0016d248: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00125464: dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f874: dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f744: dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120db4: dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123a04: dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f84: dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169c4: dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117ba4: dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af63: dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x00125492: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011f772: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a32: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010af8a: dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0016d235: dec esp; and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x001550f9: dec esp; and al, 0x30; call ecx; 
0x001159ba: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115abd: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x001159fb: dec esp; and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115afb: dec esp; and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8d4: dec esp; and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120204: dec esp; and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011fbca: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204fa: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d4a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f0a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00124da5: dec esp; and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001052c6: dec esp; and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115c5e: dec esp; and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d64: dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00125df5: dec esp; and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126405: dec esp; and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f8a1: dec esp; and al, 0x34; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fb9d: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001201d1: dec esp; and al, 0x34; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204cd: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00128235: dec esp; and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f2d1e: dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2ede: dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115c9a: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115d9a: dec esp; and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c025c: dec esp; and al, 0x34; push eax; push ebp; call esi; 
0x00097adb: dec esp; and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00061a95: dec esp; and al, 0x3c; jmp 0x60e62; lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x000be268: dec esp; and al, 0x44; push ecx; push dword ptr [edi + 8]; call ebx; 
0x001167d3: dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116753: dec esp; and al, 0x54; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116827: dec esp; and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011686b: dec esp; and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000bd5ae: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x000d303f: dec esp; and al, 0x5c; mov dword ptr [esp + 0x20], ecx; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x001261cd: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012625d: dec esp; and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012611b: dec esp; and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00125749: dec esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0009a3ff: dec esp; and al, 0x74; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009a471: dec esp; and al, 0x74; mov eax, 0x104; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009a328: dec esp; and al, 0x74; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000dfcf7: dec esp; and al, 0x74; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dfd6f: dec esp; and al, 0x74; mov edx, edi; call dword ptr gs:[0x10]; 
0x000dfe26: dec esp; and al, 0x74; mov edx, edi; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00115605: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0009a1f1: dec esp; and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00125f29: dec esp; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d6c19: dec esp; and al, 0xc; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x001265cc: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012524c: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00124fcc: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000f2cd1: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005da06: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126e96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126966: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115856: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117796: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117266: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b096: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b06: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126876: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad86: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b66: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119976: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b06: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126786: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c86: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115296: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8886: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e906: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e626: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007645a: dec esp; and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00093bba: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00103c7a: dec esp; and al, 0xc; mov esi, 8; call dword ptr gs:[0x10]; 
0x000998dc: dec esp; and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099924: dec esp; and al, 0xc; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x000878ad: dec esp; and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00025549: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x000df8e4: dec esp; and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0008a859: dec esp; and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x8a870; ret; 
0x00119489: dec esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00102a31: dec esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000f2be0: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xf2bf0; ret; 
0x0009765f: dec esp; and al, 4; mov eax, dword ptr [eax + 0x3b84]; test eax, eax; jne 0x97677; ret; 
0x0008b136: dec esp; and al, 4; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0017a911: dec esp; and al, 8; call eax; 
0x00127d5a: dec esp; and al, 8; mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d14: dec esp; and al, 8; mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00168bb3: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00171644: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00171620: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x00166390: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001663b4: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00127ca2: dec esp; and al, 8; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000936c2: dec esp; and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001269b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126d33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e63: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00115f33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126d63: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00126dd3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x001268a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00126c33: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c393: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00102e23: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001217a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001219d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f843: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b493: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00121503: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001266f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010be13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011ec63: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00102c53: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102933: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00123b53: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00126723: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126753: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e78e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00126b93: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e653: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000be519: dec esp; and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xbe532; ret; 
0x0008eefe: dec esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x000d4256: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0008df06: dec esp; and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d938: dec esp; and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017ebea: dec esp; and cl, byte ptr [ebx]; add byte ptr [ebx - 0x77], dl; ret; 
0x0012ac0f: dec esp; call 0x12aad0; add esp, 4; ret; 
0x00099ae2: dec esp; call dword ptr gs:[0x10]; 
0x00165190: dec esp; call eax; 
0x0007f3e1: dec esp; cli; jmp dword ptr [esi - 0x70]; 
0x000c00d0: dec esp; cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00030e58: dec esp; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00098b0d: dec esp; cwde; stc; call dword ptr [eax - 0x18]; 
0x0018c1ce: dec esp; daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00131911: dec esp; jge 0x13190d; call dword ptr [eax - 0x75]; 
0x00131b4b: dec esp; jge 0x131b47; call dword ptr [eax - 0x75]; 
0x00073931: dec esp; jl 0x7392d; call dword ptr [eax - 0x73]; 
0x0007394d: dec esp; jl 0x73949; call dword ptr [eax - 0x73]; 
0x00073969: dec esp; jl 0x73965; call dword ptr [eax - 0x73]; 
0x00073985: dec esp; jl 0x73981; call dword ptr [eax - 0x73]; 
0x00173142: dec esp; leave; stc; call dword ptr [eax - 0x73]; 
0x0013e7ea: dec esp; lldt word ptr es:[ebx - 0x77]; ret; 
0x0016b84c: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00099bad: dec esp; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf5: dec esp; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000586a4: dec esp; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0015d384: dec esp; mov ecx, esi; call dword ptr [eax - 0x73]; 
0x0009438b: dec esp; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000a5d70: dec esp; mov edi, 0x450ffff6; ret 0x66c3; 
0x0009ed43: dec esp; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x001379bd: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00137a62: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0003b1b3: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003f0df: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011c872: dec esp; pop edx; stc; call dword ptr [eax - 0x39]; 
0x00086d90: dec esp; push cs; add byte ptr [eax], al; ret; 
0x0014c170: dec esp; push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00165256: dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0016b89f: dec esp; push edx; call eax; 
0x00146971: dec esp; ret 0x3904; 
0x000decb5: dec esp; ret 0x4489; 
0x000fc01b: dec esp; ret 0xb60f; 
0x001049c9: dec esp; ret 0xe0c1; 
0x00104bf9: dec esp; ret 0xe8e9; 
0x0014d11d: dec esp; ret 0xfff9; 
0x0006749f: dec esp; ret 0xffff; 
0x000311ab: dec esp; ret; 
0x00031896: dec esp; ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x0016e2a5: dec esp; sal ebx, cl; call dword ptr [eax - 0x73]; 
0x000e7dc3: dec esp; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000eb1fb: dec esp; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00103732: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000889f6: dec esp; sldt word ptr [0x1a843b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x000889d6: dec esp; sldt word ptr [0x1a845b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889b6: dec esp; sldt word ptr [0x1a847b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x00088996: dec esp; sldt word ptr [0x1a849b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x00088a16: dec esp; sldt word ptr [ecx + 0x1a841bc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x0015ee6b: dec esp; std; jmp dword ptr [esi - 0x70]; 
0x0010a9ab: dec esp; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0014e2b4: dec esp; test cl, dh; call dword ptr [eax - 0x73]; 
0x0006bc8e: dec esp; test dword ptr [eax], eax; add ecx, ebx; jmp ecx; 
0x0016aa40: dec esp; xchg ebx, ebp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00055ba7: dec esp; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x00051670: dec esp; xchg esi, eax; add al, 0x83; ret 0x8501; 
0x0012a675: div byte ptr [eax + edx - 0x77]; mov bl, 0xcc; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0011ac57: div byte ptr [ebp + 0x16]; lea eax, [ebx + 0x448c]; add esp, 4; pop ebx; pop esi; ret; 
0x00024d3c: div byte ptr [ebp + edi - 0x7d]; in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0015e7ae: div byte ptr [ebp + edx + 0x5b]; mov eax, edx; pop esi; pop edi; ret; 
0x000865f0: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0003f67d: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x00025fee: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x001553bc: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x0016dc96: div byte ptr [ebx + eax - 0x3a]; push es; add byte ptr [ebx - 0x7c72fb14], al; cmp bh, al; stc; call dword ptr [ebp + 0x57]; 
0x000d6f02: div byte ptr [ebx + ecx*2 - 0x73]; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000260c1: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x00099620: div byte ptr [ecx]; sal dh, cl; rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x001502a9: div cl; call dword ptr [eax - 0x18]; 
0x00132e70: div ebx; pop ebx; pop esi; pop edi; ret; 
0x000fbe0d: div esi; ret; 
0x001251d0: endbr32; call 0x17d63d; add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000993f0: endbr32; call 0x17d641; add eax, 0x197a3b; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008e820: endbr32; call 0x17d641; add eax, 0x1a260b; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x0003cf10: endbr32; call 0x17d641; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef0: endbr32; call 0x17d641; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x0002f470: endbr32; call 0x17d641; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x00026070: endbr32; call 0x17d641; add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026050: endbr32; call 0x17d641; add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00024ee0: endbr32; call 0x17d641; add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x00024ec0: endbr32; call 0x17d641; add eax, 0x20bf6b; lea eax, [eax - 0x681e8]; ret; 
0x00096280: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00096280: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00085e40: endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00085690: endbr32; mov eax, 0xffffffff; ret; 
0x00163ac0: endbr32; mov eax, 1; ret; 
0x00165d30: endbr32; mov eax, 2; ret; 
0x00088820: endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b990: endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00186150: endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00171cd0: endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000818f0: endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000342d0: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00135430: endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008acb0: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00147f10: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00171d10: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00086db0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1f0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0017d210: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0017d2a0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d290: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d220: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00118a80: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00080bc0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b70: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e1650: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0017d200: endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00086dc0: endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x00084ad0: endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00093ba0: endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0008ebe0: endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00171910: endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00135440: endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00092a60: endbr32; nop; xor eax, eax; ret; 
0x00104dc0: endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024c30: endbr32; ret; 
0x000342e0: endbr32; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00085d90: endbr32; xor eax, eax; ret; 
0x0003a592: fabs; test ah, 2; je 0x3a59b; fchs; ret; 
0x0003a8f2: fabs; test ah, 2; je 0x3a8fb; fchs; ret; 
0x000c346e: fadd dword ptr [0x8d500000]; xchg byte ptr [eax + 0x3f], ch; stc; call dword ptr [eax - 0x18]; 
0x000478dc: fadd dword ptr [0x8d500000]; xchg dword ptr [eax + 0x3f], ebp; stc; call dword ptr [eax - 0x18]; 
0x00025565: fadd dword ptr [eax - 0x34faffeb]; mov eax, 0x808b0020; mov al, byte ptr [0x65000000]; add eax, dword ptr [0]; ret; 
0x00060b1e: fadd dword ptr [eax - 0x79f0a507]; ja 0x60b36; add byte ptr [eax], al; jmp eax; 
0x00125b77: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125b77: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010a96b: fadd dword ptr [eax]; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0011248e: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011137f: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x0009f5a8: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009fbef: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b220: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000d7a2a: fadd dword ptr [ebp - 0x7cf68a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001990b8: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000c011c: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00082847: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0003817e: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007becb: fadd dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0011ea31: fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x000a0934: fadd dword ptr [ecx - 7]; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x000bc908: fadd dword ptr [ecx]; add byte ptr [eax], al; ret; 
0x000f8005: fadd dword ptr [ecx]; ret 0x9eeb; 
0x00136be6: fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00051db3: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000acd04: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013ac2e: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x000e1458: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e12a0: fadd qword ptr [eax]; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0007d6ed: fadd qword ptr [eax]; add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000d6773: fadd qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001913f5: fadd qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000bc918: fadd qword ptr [ecx]; add byte ptr [eax], al; ret; 
0x001913f4: fadd qword ptr es:[ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003a7f8: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003adb3: fadd st(0); add esp, 8; pop ebx; ret; 
0x0003a799: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0006a5bf: fadd st(1); clc; add ch, byte ptr [ecx]; ret 0x4489; 
0x001551b9: fadd st(3), st(0); stc; call dword ptr [eax - 0x18]; 
0x0017cad7: fadd st(7), st(0); inc esp; ret; 
0x0009183d: fbld tbyte ptr [edx + edi*8]; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xb073; 
0x0012fdad: fbstp tbyte ptr [ebx]; out dx, eax; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x00081e66: fbstp tbyte ptr [edi - 0x397efff1]; retf 0x1aef; add byte ptr [ebx - 0x77], dl; ret; 
0x00070651: fbstp tbyte ptr [esp + ecx - 0x7d]; ret; 
0x0003abf9: fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003a599: fchs; ret; 
0x000dbf56: fcmovb st(0), st(1); cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x0003abfb: fcmove st(0), st(1); fstp st(1); ret; 
0x000b2b67: fcmovnbe st(0), st(1); adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001359b1: fcmovnbe st(0), st(7); out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0010ad01: fcmovnu st(0), st(1); idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x001220c7: fcom dword ptr [eax - 0x73]; xchg byte ptr [ebx + 0x63], cl; stc; call dword ptr [eax + 0x57]; 
0x00121fb0: fcom dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x4e], dh; stc; call dword ptr [eax + 0x6a]; 
0x00040b25: fcom dword ptr [eax - 0x75]; inc esp; and al, 0x20; call eax; 
0x00042692: fcom qword ptr [0x10c48300]; pop ebx; pop esi; pop edi; ret; 
0x000b6d9a: fcom qword ptr [ecx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x0003fafa: fcom qword ptr [edi]; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000c620c: fcomi st(6); dec dword ptr [ebx - 0x72cbdb8c]; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0011aae2: fcomi st(6); dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00137483: fcomi st(6); ret 0x7401; 
0x0018e304: fcomi st(7); ret 1; 
0x00165d9b: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x000380be: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00134a4c: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x00033c6b: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0008871e: fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003aedb: fcomp dword ptr [ebx + 0x5e]; shr eax, 0x1f; pop edi; ret; 
0x00185976: fcomp dword ptr [ebx - 0x17]; adc eax, ebp; clc; jmp dword ptr [esi - 0x70]; 
0x001859a6: fcomp dword ptr [ebx - 0x17]; add edx, esi; clc; jmp dword ptr [esi - 0x70]; 
0x000253df: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x0016d4ba: fcomp dword ptr [ecx]; ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x16d4d7; add esp, 0x1c; ret; 
0x000ba01e: fcomp dword ptr [edi + 0x10]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0019a888: fcomp dword ptr [edi + 0x5b]; ret; 
0x0019ade8: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0019f6c8: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d1ea8: fcomp dword ptr [edi + 0x5e]; ret; 
0x000506b4: fcomp dword ptr [esi + 0x5f]; ret; 
0x001334b0: fcomp qword ptr [edi - 0xb]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000441ad: fcompi st(1); std; jmp dword ptr [esi - 0x70]; 
0x000f70b5: fcos; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00072030: fcos; jmp dword ptr [ebp - 0x5f]; 
0x00179956: fcos; jmp dword ptr [esi - 0x70]; 
0x000c6324: fdecstp; dec dword ptr [ebx - 0x72cbdb84]; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6347: fdecstp; dec dword ptr [ebx - 0x72cbdb8c]; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a3261: fdecstp; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00151b70: fdiv dword ptr [ebp + ecx*8 - 0x7d]; ret 0xeb18; 
0x000a5590: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x00167b81: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x000a554c: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x00050c4c: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00119b99: fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x001a902d: fdiv dword ptr [edx - 0x62ff0]; fstp st(0); add esp, 0x20; ret; 
0x000d0ba0: fdiv qword ptr [ecx - 0x3b7c0002]; adc cl, ch; insb byte ptr es:[edi], dx; jmp 0xd0baa; dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x00148728: fdiv qword ptr [edi - 0xf]; call dword ptr [ebx + 0x50]; 
0x0010e906: fdiv st(2), st(0); jmp dword ptr [esi + 3]; 
0x00185ea6: fdiv st(2), st(0); jmp dword ptr [esi - 0x70]; 
0x00164714: fdiv st(3); cld; jmp dword ptr [esi - 0x70]; 
0x0015c4fb: fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x0012f875: fdiv st(7), st(0); dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x0007e6df: fdiv st(7), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00040c92: fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x00045e2d: fdiv st(7); out 0x89, al; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x0004c9fd: fdiv st(7); out 0x89, al; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29742454], 1; ret; 
0x000d9808: fdiv st(7); shr byte ptr [eax - 0x2b7bf0e8], 1; add byte ptr [eax], al; add dh, dh; ret; 
0x0015c01f: fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0007279c: fdivp st(7); call dword ptr [ebx + 0x52]; 
0x001346d2: fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00136c7c: fdivr dword ptr [ecx]; fimul dword ptr [edi]; inc ebx; ret 0xc289; 
0x000a3824: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000bfd4d: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0008b1a2: fdivr dword ptr [ecx]; ret 0x4975; 
0x000f5c07: fdivr dword ptr [ecx]; ret 0x972; 
0x00059db5: fdivr dword ptr [ecx]; ret 0xee7c; 
0x00120feb: fdivr dword ptr [ecx]; ret; 
0x0014c061: fdivr dword ptr [ecx]; retf 0xca75; pop ebx; pop esi; ret; 
0x00136fce: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00136aa6: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000bfd2f: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x0009202c: fdivr dword ptr [esi - 0x35]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x000a067a: fdivr dword ptr [esi]; jmp eax; 
0x0004782d: fdivr dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00131785: fdivr qword ptr [ecx]; ret; 
0x0002aad0: fdivr qword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000a5f2d: fdivr st(6), st(0); push esi; inc ecx; jnp 0xa5f38; cmove eax, edx; ret; 
0x0016998c: fdivr st(7); add esp, 0xc; ret; 
0x00073862: fdivr st(7); call dword ptr [eax - 0x7d]; 
0x0005adeb: fdivr st(7); jmp dword ptr [ebp - 0x75]; 
0x00179936: fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000b9a51: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b14d6: fdivr st(7); pop ebx; ret; 
0x000b0d67: fdivr st(7); pop edi; pop ebx; ret; 
0x000bbc2e: fdivr st(7); pop esi; pop ebx; ret; 
0x000837c2: fiadd dword ptr [0xec830000]; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000d9d67: fiadd dword ptr [eax + 0x440f2dfb]; ret 0x4ce9; 
0x0011e9ee: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009f23d: fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00096d04: fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x000df689: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000dfd21: fiadd dword ptr [ebx + 0x450fdafb]; ret 0x548b; 
0x0003fbd2: fiadd dword ptr [ebx - 0x2508ff2e]; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000505e9: fiadd dword ptr [ebx - 0x2f76f73c]; pop ebx; ret; 
0x000ac414: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x000abe94: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000ab914: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x00040acb: fiadd dword ptr [ecx]; fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 0x28], edx; call eax; 
0x0019c7e3: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x0017fd93: fiadd dword ptr [ecx]; ret 0xb5e9; 
0x000bc461: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0005189d: fiadd word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000504fd: fiadd word ptr [esi]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000dad5f: ficom word ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0004aa3e: ficom word ptr [edx - 0x78720002]; sbb al, 0x87; stc; call dword ptr [eax - 0x73]; 
0x000df8e0: fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000df672: fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000505fd: fidiv dword ptr [ebp + ebx*8 - 0x7d]; ret 0x8001; 
0x000a5648: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0xa5640; pop ebx; pop esi; ret; 
0x000a5618: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000316dc: fidiv dword ptr [ecx]; fld xword ptr [ecx]; ror byte ptr [ecx - 0x1c76b], 1; dec dword ptr [ecx - 0x1c37b]; call dword ptr [ebx + 0x52]; 
0x000ba11b: fidiv dword ptr [edx - 0x1e]; call 0x17d651; add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b417b: fidiv dword ptr [edx - 0x1e]; call 0x17d651; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b3b: fidiv dword ptr [edx - 0x1e]; call 0x17d651; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b419d: fidiv dword ptr [edx - 0x40]; call 0x17d651; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b5d: fidiv dword ptr [edx - 0x40]; call 0x17d651; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba158: fidiv dword ptr [edx - 0x5b]; call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41b8: fidiv dword ptr [edx - 0x5b]; call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b78: fidiv dword ptr [edx - 0x5b]; call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba16f: fidiv dword ptr [edx - 0x72]; call 0x17d651; add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41cf: fidiv dword ptr [edx - 0x72]; call 0x17d651; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b8f: fidiv dword ptr [edx - 0x72]; call 0x17d651; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00174847: fidiv dword ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x0013e2e4: fidiv dword ptr [esi + ecx - 0x7d]; in al, dx; or al, 0x89; ret; 
0x000ba173: fidiv dword ptr [esp + ecx]; add byte ptr [ecx + 0x105efdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0007406a: fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x001a46dd: fidiv word ptr [ecx]; fisttp dword ptr [ebx]; je 0x1a4707; or al, 0xf; xchg ebp, eax; ret; 
0x0017f032: fidiv word ptr [ecx]; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00093bd4: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; ret; 
0x0011605d: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0010428e: fidivr dword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x00136c85: fidivr dword ptr [ecx]; ret 0x420f; 
0x00124961: fidivr dword ptr [ecx]; ret 0x820f; 
0x0013f8f6: fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0009b8ae: fidivr dword ptr [ecx]; ret 0xa72; 
0x000dd3bb: fidivr dword ptr [esi]; jmp edx; 
0x00036ec5: fidivr word ptr [ecx]; ret 0x7489; 
0x0003f9e9: fidivr word ptr [ecx]; retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x000938bf: fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x0017e041: fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0011e90e: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f2cd5: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000cd079: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00031c14: fild dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0014bc00: fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x000cf5ae: fild dword ptr [ebx - 0x363f7b]; call dword ptr [eax]; 
0x0012b634: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0012bffc: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x0011bf6f: fild dword ptr [ecx + 0x42cec]; add byte ptr [ebp - 0x6a5d680], cl; jmp dword ptr [ebp - 0x75]; 
0x0003a710: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0007fbb0: fild word ptr [ebp + 0x13378c0]; ret; 
0x00053954: fild word ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000e4876: fild word ptr [ebx - 0x6bf0bf06]; ret; 
0x000b461d: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b2d22: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00030363: fimul dword ptr [ebp - 0x47f2ba8]; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x000c414a: fimul dword ptr [ebp - 0x7efb47bc]; ret 0; 
0x000c11fa: fimul dword ptr [ebp - 0x7efb4fbc]; ret 0; 
0x0012c8d0: fimul dword ptr [ebx + 0x291c244c]; ret 0xca39; 
0x000d3b42: fimul dword ptr [ebx + 0x2944245c]; ret 0x448b; 
0x00117721: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117721: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00125b71: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125b71: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001219b1: fimul dword ptr [ebx - 0x47fbdba4]; jae 0x1219b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126cd1: fimul dword ptr [ebx - 0x47fbdba4]; je 0x126cd9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126e61: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x126e6a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001266d1: fimul dword ptr [ebx - 0x47fbdba4]; jno 0x1266d9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00104e21: fimul dword ptr [ebx - 0x47fbdba4]; jp 0x104e29; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125511: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125511: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010ac21: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e2471: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b021: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8831: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b471: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00119a31: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001269b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126d31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e61: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00115f31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126d61: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00126dd1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x001268a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00126c31: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c391: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00102e21: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001217a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001219d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f841: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b491: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00121501: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001266f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010be11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011ec61: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00102c51: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102931: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00123b51: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00126721: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126751: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e78e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00126b91: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e651: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00143928: fimul dword ptr [ebx - 0x76d3db94]; ret; 
0x00145d93: fimul dword ptr [ebx - 0x7ae7dba4]; fisttp dword ptr [edi]; test byte ptr [edi - 0x9ffffff], dl; ret 0xf08; 
0x001043e4: fimul dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7f95: fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x000b4322: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000dfd24: fimul dword ptr [edi]; inc ebp; ret 0x548b; 
0x00136c7e: fimul dword ptr [edi]; inc ebx; ret 0xc289; 
0x0013700a: fimul dword ptr [edi]; inc ebx; ror byte ptr [ecx + 0x39d829d0], 1; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x0004de9f: fimul dword ptr [edi]; lahf; ret; 
0x000ce982: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000d3be6: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000d3572: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d3bd4: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc104; 
0x00124959: fimul dword ptr [edi]; sub byte ptr [esi], 0xfd; out dx, eax; jmp ptr [ecx]; fidivr dword ptr [ecx]; ret 0x820f; 
0x000b3765: fimul dword ptr [edi]; xor byte ptr [ebx + esi*8 - 0x1f170001], 0x9e; or al, 0; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000e9671: fimul word ptr [ebx - 0x5af43]; dec dword ptr [ebp - 0x650bf79]; call dword ptr [eax + 0x68]; 
0x000523f0: fimul word ptr [ebx - 0x721676c8]; pop edx; call ebx; 
0x0007755d: fimul word ptr [ecx + 0x247c2bcf]; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x00056ea9: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x001369b6: fimul word ptr [ecx - 0x76c7dba4]; ret; 
0x000cfb24: fimul word ptr [edi]; test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x0016875e: fimul word ptr [edi]; xchg edx, eax; ret 0xf339; 
0x0010ad02: fincstp; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x0004274e: fist dword ptr [0x10c48300]; pop ebx; pop esi; pop edi; ret; 
0x00042370: fist word ptr [0x10c48300]; pop ebx; add eax, 1; pop esi; pop edi; ret; 
0x00040acd: fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 0x28], edx; call eax; 
0x0003f758: fistp dword ptr [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000428c8: fistp qword ptr [esi]; jmp edi; 
0x0005e712: fistp word ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0008cf68: fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x00029222: fisttp dword ptr [ebp + 0x490f0343]; ret; 
0x000f6ed4: fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x0002aeb6: fisttp dword ptr [ebp + 0xf68246c]; mov dh, 0x44; sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x000d21f1: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0009a129: fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a19e: fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0002956c: fisttp dword ptr [ebx + 0x450f0479]; ret 0x4489; 
0x00053b67: fisttp dword ptr [ebx - 0x365f63]; jmp dword ptr [ebp - 0x75]; 
0x001476bf: fisttp dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax], 0xbf; stc; call dword ptr [eax - 0x73]; 
0x00119418: fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x001a46df: fisttp dword ptr [ebx]; je 0x1a4707; or al, 0xf; xchg ebp, eax; ret; 
0x0003f844: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000be421: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00103b20: fisttp dword ptr [ecx + 0xac2484]; add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00131d36: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c214: fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x00028064: fisttp dword ptr [ecx - 0x7c2dce28]; ret; 
0x0008f67f: fisttp dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x00091153: fisttp dword ptr [edi - 7]; call dword ptr [eax - 0x18]; ret; 
0x000529b1: fisttp dword ptr [edi]; dec ecx; ret; 
0x000de3a2: fisttp dword ptr [edi]; dec edi; ret; 
0x000288df: fisttp dword ptr [edi]; inc ebp; ret 0x4489; 
0x00135829: fisttp dword ptr [edi]; inc ebp; ret 0x548b; 
0x00044735: fisttp dword ptr [edi]; inc ebp; ret 0xc483; 
0x0004470a: fisttp dword ptr [edi]; inc esp; ret 0xc483; 
0x00052325: fisttp dword ptr [edi]; test ah, bl; add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6df0fe07], cl; ret 0xff19; 
0x000e6336: fisttp dword ptr [edi]; test bl, ah; add al, 0; add byte ptr [ebp - 0x7cffe2b4], cl; ret; 
0x00145d99: fisttp dword ptr [edi]; test byte ptr [edi - 0x9ffffff], dl; ret 0xf08; 
0x000396ff: fisttp dword ptr [edi]; test byte ptr [edx - 0x7d000000], bh; in al, dx; or byte ptr [ebp - 0x6c1c27b], cl; call dword ptr [eax + 0x53]; 
0x00138494: fisttp dword ptr [edi]; test ch, al; add dword ptr [eax], eax; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000fc699: fisttp dword ptr [edi]; test dword ptr [eax - 0x76fffffe], edx; ret; 
0x0014d811: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00158b89: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0008aa77: fisttp dword ptr [edi]; xchg ebp, eax; ret 0xe2c1; 
0x001861c8: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x000a1344: fisttp dword ptr [edi]; xchg esp, eax; ret; 
0x0002ed0f: fisttp qword ptr [ebp + 0x10]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x001665de: fisttp qword ptr [ebx + 0x508d1043]; add al, 0x89; push ebx; adc bl, ch; ret; 
0x001549a7: fisttp qword ptr [ebx + 0xc090]; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x001a7dda: fisttp qword ptr [ebx - 0x7cbfdba4]; ret; 
0x001375ea: fisttp qword ptr [ebx - 0x7ce3dba4]; ret 0x8802; 
0x00102862: fisttp qword ptr [ecx + 0x5f5e5bf0]; ret; 
0x0007d85c: fisttp qword ptr [edi]; mov word ptr [ebp - 0x76fffffe], ss; ret 0x468b; 
0x0009ba09: fisttp word ptr [ebx + 0x418d0c48]; jmp dword ptr [ecx]; 
0x00056bc0: fisttp word ptr [ebx + 0xf282444]; mov esi, 0x8b1b244c; je 0x56bf1; sbb al, 0x89; ret 0xc801; 
0x00145d91: fisttp word ptr [ecx + 0x245c8bda]; sbb byte ptr [ebp - 0x687bf025], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x000bb570: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x000d8ec3: fisttp word ptr [ecx - 0x76c3dbbc]; ret 0xe6c1; 
0x000f7ac4: fisttp word ptr [ecx]; ret 0x5388; 
0x0009e2d7: fisttp word ptr [edi]; xchg ebp, eax; ret; 
0x00186bcd: fisub dword ptr [esi + 0xf]; jg 0x186c14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018715d: fisub dword ptr [esi + 0xf]; jg 0x1871a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00199e2c: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009495a: fisub dword ptr [esi - 0x70]; nop; nop; endbr32; xor eax, eax; ret; 
0x00199bec: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0012cbcd: fisubr dword ptr [ecx]; lds ebp, ptr [ecx]; ret 0x6c01; 
0x0012c9b5: fisubr dword ptr [ecx]; ret 0x6c6; 
0x00141146: fisubr dword ptr [ecx]; ret 0x7e8b; 
0x00154bd9: fisubr dword ptr [ecx]; ret 0xca39; 
0x0004e04b: fisubr dword ptr [ecx]; ret 0xfa83; 
0x00152c39: fisubr dword ptr [esi - 7]; call dword ptr [eax + 0x53]; 
0x000ba983: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00126b9b: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0cca: fld dword ptr [ebp - 0x467af001]; aaa; clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0003acdb: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003aa2b: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x00055a21: fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x000a1cb2: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0019b416: fld dword ptr [ecx]; retf 0xc801; call 0x17d639; add ebx, 0x33dbc; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ac6: fld dword ptr [ecx]; retf 0xc801; call 0x17d639; add ebx, 0x35608; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003ad53: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0018a1c1: fld dword ptr [esp + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003ace2: fld dword ptr [esp]; add esp, 4; ret; 
0x0003ac49: fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000f9545: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0010b7dc: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00117f79: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0010b8e1: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010bab9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010b85b: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x001911f1: fld qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019e1df: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000e7dff: fld qword ptr [edi - 3]; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0003aaab: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00052129: fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003aa32: fld qword ptr [esp]; add esp, 8; ret; 
0x0003abf4: fld st(0); test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x000316de: fld xword ptr [ecx]; ror byte ptr [ecx - 0x1c76b], 1; dec dword ptr [ecx - 0x1c37b]; call dword ptr [ebx + 0x52]; 
0x00041c75: fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0003a795: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003a714: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003a78a: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000521a3: fld xword ptr [esp]; add esp, 0x1c; ret; 
0x001a902b: fld1; fdiv dword ptr [edx - 0x62ff0]; fstp st(0); add esp, 0x20; ret; 
0x0014d3bb: fldcw word ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0014d54e: fldcw word ptr [ebp - 7]; call dword ptr [eax - 0x73]; 
0x001027e3: fldcw word ptr [ebx - 8]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000be40e: fldcw word ptr [ecx]; ret; 
0x001415ca: fldcw word ptr [edx - 7]; call dword ptr [ebx - 0x18]; 
0x00119b54: fldenv [0x80000000]; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x000bac86: fldenv [esi + 0xf]; je 0xbacda; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bb495: fldenv [esi + 0xf]; je 0xbb4e4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00199ebc: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000bab8a: fldenv [esi + 0xf]; xlatb; ret; 
0x0019fa99: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x00088dba: fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x000b4d75: fmul dword ptr [eax - 0x3e7efff4]; mov bh, 0xb1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008d237: fmul dword ptr [ebp + 0x21000d5c]; ret; 
0x000a9b2c: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x00098220: fmul dword ptr [ebp - 0x667e779]; call dword ptr [eax - 0x73]; 
0x00040389: fmul dword ptr [ebp - 0x76dff18c]; ret 0xd285; 
0x00136a94: fmul dword ptr [ebx + 0x124245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00037d5f: fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x001058f1: fmul dword ptr [ebx - 0x7cfbdbac]; ret; 
0x0005a7de: fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x00092017: fmul dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x000c04c7: fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000cd01b: fmul dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00091dd4: fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0017197f: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x00026ac6: fmul dword ptr [ecx - 0x7c387605]; in al, dx; or al, 0x83; ret; 
0x00096279: fmul dword ptr [ecx]; add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00127c77: fmul dword ptr [ecx]; ret 0x850f; 
0x001a6fb9: fmul dword ptr [ecx]; ror byte ptr [ebx + 0x9242454], 1; ret 0x448b; 
0x0003d68b: fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0011b7a6: fmul dword ptr [edi]; dec edi; ret; 
0x000a235a: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x00136fc7: fmul dword ptr [edi]; inc ebx; ror byte ptr [ecx + 0x39d829d0], 1; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000a3826: fmul dword ptr [edi]; inc edx; ret; 
0x0010375b: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x0012092c: fmul dword ptr [edi]; or dword ptr [0xb8000001], 0x15; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00188b5d: fmul dword ptr [edx - 1]; inc dword ptr [ecx + 0x458b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012ee44: fmul dword ptr [esi - 0x10]; dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x000278e9: fmul qword ptr [ebp - 0x20af737d]; call dword ptr [eax - 0x73]; 
0x000f38a3: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x0003d672: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0008f9c6: fmul qword ptr [esi]; add byte ptr [0x1a146b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9a6: fmul qword ptr [esi]; add byte ptr [0x1a148b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x000c1a41: fmul st(6), st(0); stc; call dword ptr [eax + 0x57]; 
0x00073d5a: fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x00029a3b: fnsave dword ptr [edx + ecx*4 - 0x75]; je 0x29a65; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00199d71: fnstcw word ptr [eax]; jne 0x19a4f0; pop ebx; ret; 
0x0019cb23: fnstcw word ptr [eax]; jne 0x19cd50; pop ebx; ret; 
0x000a87c3: fnstcw word ptr [ecx]; ret 0xe372; 
0x000a73b9: fnstcw word ptr [ecx]; ret 0xe672; 
0x000ff377: fnstcw word ptr [ecx]; ret 0xe872; 
0x000f3ee6: fnstcw word ptr [ecx]; ret; 
0x0003a7f3: fnstcw word ptr [edx + 0xa]; jne 0x3a800; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003ab12: fnstcw word ptr [edx + 0xb]; jne 0x3ab20; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003adae: fnstcw word ptr [edx + 0xf]; jne 0x3adc0; fadd st(0); add esp, 8; pop ebx; ret; 
0x00031d43: fnstcw word ptr [esi]; jmp ecx; 
0x00166355: fnstenv [ebx - 7]; call dword ptr [edx + 0x6a]; 
0x0003a7aa: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0009ac58: frstor dword ptr [ecx + 0x19]; add byte ptr [ebx - 0x6f72f314], al; or al, 0xa8; stc; call dword ptr [edx - 0x73]; 
0x00199c8c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0003a718: fscale; fstp st(1); ret; 
0x00186109: fsqrt; jmp dword ptr [esi - 0x70]; 
0x0013a713: fst dword ptr [ebx - 0x7c720001]; daa; jne 0x13a715; call dword ptr [esi + 0x6a]; 
0x000bfd4f: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0019a505: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19a510; neg eax; ret; 
0x0007e528: fstp dword ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x000c4259: fstp dword ptr [ecx]; ror byte ptr [edi], 1; sbb byte ptr [eax + 0x21], 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x8e; ret 0xf; 
0x0003acdf: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003ac88: fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003e905: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a2332: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x000a5752: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00033119: fstp qword ptr [edi]; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000a088b: fstp qword ptr [edx - 0x48]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000d2e91: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003aa2f: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x001a9033: fstp st(0); add esp, 0x20; ret; 
0x0003a7ac: fstp st(0); and eax, 0x200; ret; 
0x0003a71a: fstp st(1); ret; 
0x0003acda: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003aa2a: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0009a03b: fstp xword ptr [eax + 0x2a]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0003a6d1: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00027521: fstp xword ptr [eax]; stc; call dword ptr [eax - 0x18]; 
0x0012505b: fstp xword ptr [ebp - 0x47acfff0]; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a125: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009a19a: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00083b41: fstp xword ptr [ecx]; ret 0x940f; 
0x0007d8d1: fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x00061af2: fstp xword ptr [esp + 0x90]; jmp 0x60858; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x00061aef: fstp xword ptr [esp]; fstp xword ptr [esp + 0x90]; jmp 0x60858; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0005ca31: fstpnce st(3), st(0); mov esp, 0x8024; add cl, ch; ret 0xfff9; 
0x0003a7ad: fsub dword ptr [0x200]; ret; 
0x001318c9: fsub dword ptr [ebp - 7]; call dword ptr [eax - 0x75]; 
0x0009c579: fsub dword ptr [ecx]; ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x0005cfd3: fsub dword ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x00199f5c: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b233c: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x001a5d4b: fsub dword ptr [esi - 0x7f]; ret 0x7fff; 
0x0014da10: fsub qword ptr [eax - 2]; jmp dword ptr [esi - 0x70]; 
0x000a610c: fsub qword ptr [ebx + 0x41f6fff6]; jbe 0xa6124; cmove eax, edx; ret; 
0x000a5f5c: fsub qword ptr [edx + 0x41f6fff6]; jbe 0xa5f74; cmove eax, edx; ret; 
0x0011f4c0: fsub qword ptr [edx - 0xb]; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x001251cd: fsub qword ptr [esi - 0x70]; endbr32; call 0x17d63d; add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00196d47: fsub st(1), st(0); ret; 
0x0008eeb0: fsub st(2), st(0); clc; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015557d: fsub st(4), st(0); jmp dword ptr [ebp - 0x75]; 
0x0003a677: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000d2e8f: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003555d: fsubp st(1); ret; 
0x000d0f14: fsubr dword ptr [ebx]; push es; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x0015c7b4: fsubr dword ptr [ecx - 0x14]; jmp dword ptr [ebp - 0x75]; 
0x0017f13c: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x17f220; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x00075d4d: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x75e50; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078ab2: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x78c01; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007e31a: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x00097e46: fsubr qword ptr [esi - 0x1a]; call dword ptr [edi + 0x50]; 
0x00180ac8: fsubr st(0); ret 0xf6a7; 
0x000eda27: fsubr st(0); ret; 
0x000c5967: fsubr st(1); ret; 
0x0006326f: fsubr st(3); ret 0xbd8b; 
0x0003ef15: fsubrp st(0); call dword ptr [eax - 0x73]; 
0x0008ecee: fucom st(5); call dword ptr [eax - 0x73]; 
0x00164986: fucomi st(0); int1; cld; jmp dword ptr [esi - 0x70]; 
0x00178d28: fucomi st(0); ret 0xfbad; 
0x000a7449: fucomi st(3); adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x00160901: fucomi st(3); adc cl, byte ptr [ebp - 0x7cffd98c]; ret; 
0x00182cd9: fucomi st(3); call dword ptr [eax + 0x6a]; 
0x000a750d: fucomi st(3); or al, 0x83; ret; 
0x00167316: fucomp st(0); aam 0xc7; cld; jmp dword ptr [esi - 0x70]; 
0x00135476: fucomp st(6); inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00166b82: fucompi st(4); call dword ptr [eax - 0x73]; 
0x00126e7c: fucompi st(7); inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0003a7a8: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0009e97c: hlt; adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x18]; 
0x000a0fdf: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x657a380], cl; call dword ptr [eax + 0x68]; 
0x000c5a0d: hlt; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xef39; 
0x00049fe9: hlt; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xf539; 
0x0016004c: hlt; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0013a9c3: hlt; add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002d490: hlt; add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0007b9c3: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013730b: hlt; add esp, 8; pop ebx; ret; 
0x001236d4: hlt; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0017c928: hlt; call dword ptr [eax - 0x18]; 
0x0017a962: hlt; call dword ptr [eax - 0x73]; 
0x001645b8: hlt; call dword ptr [edx - 0x73]; 
0x00170474: hlt; call ecx; 
0x0009bd42: hlt; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014817e: hlt; dec dword ptr [ebp - 0x640077b]; call dword ptr [eax - 0x73]; 
0x001483bf: hlt; dec dword ptr [ebp - 0xe8f137d]; call dword ptr [esi + 0x50]; 
0x001643f8: hlt; idiv ah; jmp dword ptr [esi - 0x70]; 
0x000e784a: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000dd844: hlt; inc dword ptr [ebx + 0xb910c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdb8c], cl; ret 0x448b; 
0x000dd98c: hlt; inc dword ptr [ebx + 0xbb10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x00147f05: hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000e0948: hlt; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0018a226: hlt; inc ebp; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014855b: hlt; jmp dword ptr [ebp - 0x75]; 
0x000e1c2c: hlt; jmp dword ptr [esi - 0x70]; 
0x0019f685: hlt; jne 0x19f6c0; pop edi; pop esi; pop ebx; ret; 
0x000b3659: hlt; lahf; or al, 0; add ecx, 0x10c773; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d59: hlt; mov byte ptr [eax + eax], cl; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00186d37: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001867ee: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00131c2b: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000e2450: hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001898e1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b8e1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00059080: hlt; or byte ptr [eax], al; add byte ptr [eax - 0xd343], al; jmp dword ptr [esi + 0xf]; 
0x00158577: hlt; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 1]; 
0x0015817b: hlt; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x0005358a: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025a4b: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019d7ea: hlt; pop edi; ret; 
0x0011d2d2: hlt; pop esi; stc; call dword ptr [eax + 0x55]; 
0x000333b8: hlt; ret; 
0x000678f4: hlt; sar edi, cl; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x0019c867: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0008cc6e: hlt; xchg edx, eax; stc; call dword ptr [edx + 0x50]; 
0x000bc3a3: hlt; xor eax, eax; ret; 
0x001643f9: idiv ah; jmp dword ptr [esi - 0x70]; 
0x00121c05: idiv bh; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011adfe: idiv bh; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000bf39c: idiv bh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014d22d: idiv bh; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000bc9a0: idiv bh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015136c: idiv bh; add esp, 0x1c; ret; 
0x000cd10a: idiv bh; and ch, 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000a3faa: idiv bh; and ch, 2; lea edx, [edx - 0x174aa4]; cmove eax, edx; ret; 
0x000a298a: idiv bh; and ch, 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a5daa: idiv bh; and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a5dea: idiv bh; and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a337a: idiv bh; and ch, 2; lea edx, [edx - 0x1758a4]; cmove eax, edx; ret; 
0x000a33ba: idiv bh; and ch, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a5e6a: idiv bh; and ch, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x000c6193: idiv bh; call dword ptr [eax + 0x31]; 
0x000a2952: idiv bh; cmovne eax, edx; ret; 
0x0013b37e: idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00142a03: idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x000cf38f: idiv bh; dec dword ptr [ebx - 0x36537b]; call dword ptr [esi + 0x6a]; 
0x00070baa: idiv bh; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x0012fae7: idiv bh; dec dword ptr [ebx - 0x7f7253bb]; insb byte ptr es:[edi], dx; iretd; out dx, eax; call dword ptr [eax + 0x6a]; 
0x0012a68a: idiv bh; dec dword ptr [ecx + 0x3ccb3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00171b5b: idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x000adb9c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000adb46: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0014297d: idiv bh; jmp dword ptr [ebp - 0x75]; 
0x00059afd: idiv bh; jmp dword ptr [esi + 0x3d]; 
0x000ad2f2: idiv bh; jmp dword ptr [esi + 0xf]; 
0x0004381b: idiv bh; jmp dword ptr [esi - 0x70]; 
0x0011b033: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aae3: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000bf2fe: idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000a505e: idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a5f2e: idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x001743f4: idiv bl; jmp dword ptr [esi - 0x70]; 
0x00089d48: idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00092247: idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ab7e: idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0004789d: idiv byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0018e035: idiv dh; inc dword ptr [ecx + 0x408e0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009180a: idiv dh; jmp dword ptr [ebp - 0x39]; 
0x0015aacb: idiv dh; jmp dword ptr [ebp - 0x75]; 
0x0010cfd6: idiv dl; jmp dword ptr [esi + 3]; 
0x000e5c84: idiv dword ptr [ecx]; ret 0xa775; 
0x000234ce: idiv dword ptr [edi]; stc; call dword ptr [eax + 0x52]; 
0x00128cbe: idiv dword ptr [edx + 0x100]; call dword ptr gs:[0x10]; 
0x000f29fa: idiv dword ptr [esi]; jmp edi; 
0x0003e70d: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00133614: idiv ebx; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000a50a8: idiv edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0006fe02: idiv edi; call ecx; 
0x000d0645: idiv edi; dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x0014651e: idiv edi; dec dword ptr [ebx - 0x72f3dba4]; sbb dword ptr [eax], -0x42; stc; call dword ptr [eax - 0x73]; 
0x000439fb: idiv edi; dec dword ptr [ebx - 0x7ac7db84]; dec dword ptr [edi]; xchg esp, eax; ret 0xfd83; 
0x001721da: idiv edi; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00143689: idiv edi; dec dword ptr [ecx - 0x7693dbbc]; ret 0xc483; 
0x00097faf: idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00141efe: idiv edi; inc dword ptr [ebx - 0x7872f714]; out 0x38, eax; stc; call dword ptr [eax - 0x73]; 
0x00066ace: idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x000ad3fd: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0006110b: idiv edi; jmp dword ptr [esi - 0x70]; 
0x00061a14: idiv edi; jmp ptr [esi]; lea esi, [esi]; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x001966d3: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85494]; sub eax, ecx; pop ebx; ret; 
0x0010af83: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010ad03: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00198ee7: idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001966da: idiv edi; sub eax, ecx; pop ebx; ret; 
0x0019a859: idiv edi; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0016d763: idiv edi; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0010dea9: imul al; loope 0x10deff; int1; jmp dword ptr [ebp - 0x75]; 
0x0010f7d9: imul al; mov cl, 0x39; int1; jmp dword ptr [ebp - 0x75]; 
0x0016d12d: imul bl; mov ebx, 0xfc69bbe8; jmp dword ptr [esi - 0x70]; 
0x0019c887: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000aa268: imul byte ptr [ecx]; ret 0x280f; 
0x000abc5c: imul byte ptr [ecx]; ret 0xc301; 
0x000adae2: imul cl; mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x0019c818: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000aa398: imul dword ptr [ecx]; ret 0x280f; 
0x000abdbc: imul dword ptr [ecx]; ret 0xc301; 
0x00148657: imul eax, dword ptr [ebx + ecx*4], 0x33; mov dword ptr [esp], ebx; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00079001: imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x00062ef9: imul eax, dword ptr [edi], 0; add byte ptr [ebx - 0x58b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b2e93: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x00152312: imul eax, dword ptr [esi], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + eax*8 - 7], ah; call dword ptr [eax - 0x18]; 
0x000e058e: imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x001a0332: imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00040b21: imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0014ae51: imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x00040c0f: imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0011acda: imul ebp, dword ptr [ecx], 6; add byte ptr [ecx + 0x116156c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0017c676: imul ebp, edx, -1; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a09ab: imul ebx, dword ptr [eax], -0x77; jae 0xa09d0; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00050608: imul ebx; shl byte ptr [esi - 0x70], cl; nop; nop; add eax, dword ptr [esp]; ret; 
0x000b6d37: imul ecx, dword ptr [eax + eax], 0x923ac181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d19: imul ecx, dword ptr [eax + eax], 0x9258c181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6cfd: imul ecx, dword ptr [eax + eax], 0x9274c181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009b041: imul ecx, dword ptr [eax], 0x830ce8c1; ret 0x8901; 
0x00079c74: imul ecx, dword ptr [ebx - 0x137c1fbb], 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0009469d: imul ecx, dword ptr [ecx + eax], 0x5b; pop esi; pop edi; ret; 
0x00051f24: imul ecx, dword ptr [edi], -0x43; ret 0xf083; 
0x00097111: imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x000990cb: imul edi, dword ptr [ebp + 0x19], 0; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001152cb: imul edi, dword ptr [ebx - 0x47acffef], 9; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00199acc: imul edi, dword ptr [ebx], 0xc381fffe; or byte ptr [esi + 3], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006f54a: imul edi, dword ptr [edi], 0; add byte ptr [ecx], al; ret; 
0x001027e4: imul edi, eax, -1; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00144578: imul edi, ebp, -1; jmp dword ptr [ebp - 0x5f]; 
0x0013d265: imul edi, ecx, 0xb2e850ff; push -0x11; jmp dword ptr [esi - 0x70]; 
0x00186a80: imul edi, edi, -1; add ebx, 0x47515; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000be322: imul edi, edi, -1; dec dword ptr [ebp - 0x655137a]; call dword ptr [eax - 0x73]; 
0x000bd74a: imul edi, edi, -1; dec dword ptr [ebp - 0x655777b]; call dword ptr [eax - 0x73]; 
0x0013ae26: imul edi, edi, -1; dec dword ptr [edi]; inc esp; ret 0x8588; 
0x000f280f: imul edi, edi, -1; inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x00076746: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0011f6bc: imul edi, edi, 0x2c89ffff; adc dword ptr [ecx - 0x7cfbee94], ecx; ret 0x3908; 
0x001884cc: imul edx, dword ptr [ecx - 1], 0x8c381ff; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008f9ca: imul edx, dword ptr [edx + ebx], 0; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0018a4cc: imul esi, dword ptr [ecx], 0xc381ffff; mov byte ptr [edx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011c864: imul esi, eax, 0x8d585fff; test edi, esp; cmp cl, bh; call dword ptr [eax - 0x73]; 
0x000fec05: imul esi, ebp, -1; jmp dword ptr [ebp - 0x5f]; 
0x0016d851: imul esp, dword ptr [eax - 0x137c0009], 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00152036: imul esp, dword ptr [esp + esi*2], 0x24748b5e; adc al, 0x83; ret 0x8301; 
0x00134061: imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x0011ac08: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001150f7: in al, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00038abb: in al, 0x39; ret; 
0x0008cbc5: in al, 0x4e; stc; call dword ptr [eax - 0x18]; 
0x00163b68: in al, 0x50; push esi; call 0x165490; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009e37b: in al, 0x50; stc; call dword ptr [eax - 0x73]; 
0x0009ed37: in al, 0x50; stc; jmp ptr [eax + 1]; or eax, 0x8d500000; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x000768a5: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0003f67f: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a91e9: in al, 0x83; ret 0x8301; 
0x00037aa6: in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x00076d3c: in al, 0x89; ret; 
0x000942f3: in al, 0x8b; mov esp, 0x1accc3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00095d87: in al, 0x96; stc; call dword ptr [eax - 0x73]; 
0x0009b185: in al, 0x99; stc; call dword ptr [eax + 0x6a]; 
0x000e3e2c: in al, 0xad; stc; call dword ptr [eax - 0x18]; 
0x00123664: in al, 0xb3; stc; call dword ptr [eax - 0x18]; 
0x0014383e: in al, 0xbd; stc; call dword ptr [eax - 0x73]; 
0x0014c81d: in al, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x00170705: in al, 0xc8; stc; call dword ptr [eax - 0x73]; 
0x00186108: in al, 0xd9; cli; jmp dword ptr [esi - 0x70]; 
0x000f4da8: in al, 0xe3; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001245a0: in al, 0xf0; sub esp, 0xc; push esi; call edx; 
0x0019e1b9: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x0019e2e4: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0018f20b: in al, 0xfe; inc dword ptr [ecx + 0x3f98ac3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000dcfd2: in al, 0xff; call dword ptr [ebx + 0x51]; 
0x000d9dc1: in al, 0xff; call dword ptr [edi + 0x57]; 
0x000df3eb: in al, 0xff; call dword ptr [esi + 0x51]; 
0x00086b16: in al, 0xff; dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x00047785: in al, 0xff; dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x00134112: in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x00079c7d: in al, 0xff; jne 0x79c89; push esi; call dword ptr [eax + 0x1c]; 
0x000bc938: in al, 1; add byte ptr [eax], al; ret; 
0x0002342d: in al, 7; add byte ptr [ecx - 0x7872dbfc], cl; xchg edx, eax; je 0x23431; call dword ptr [esi + 0x53]; 
0x00102e55: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0x102e20; add esp, 0x1c; ret; 
0x00178c1f: in al, dx; adc al, 0x6a; add cl, byte ptr [ebp - 0x689d680]; call dword ptr [eax - 0x18]; 
0x0016271f: in al, dx; adc al, 0x8d; adc ch, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00162b0f: in al, dx; adc al, 0x8d; and bl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0015ed7f: in al, dx; adc al, 0x8d; and cl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x0016333f: in al, dx; adc al, 0x8d; cmp ah, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0015f56f: in al, dx; adc al, 0x8d; cmp dl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x001620df: in al, dx; adc al, 0x8d; or cl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x0016040f: in al, dx; adc al, 0x8d; sbb byte ptr [eax + 0x72], 0xf9; call dword ptr [eax + 0x6a]; 
0x001616ef: in al, dx; adc al, 0x8d; sub byte ptr [edx + esi*2 + 0x6a50fff9], 4; call 0x14bb50; add esp, 0x1c; ret; 
0x0015f1ff: in al, dx; adc al, 0x8d; sub dh, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x00162ddf: in al, dx; adc al, 0x8d; xor al, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00178bef: in al, dx; adc al, 0xff; je 0x178c18; sbb byte ptr [ebp - 0x689d680], cl; call dword ptr [eax - 0x18]; 
0x00024e9f: in al, dx; adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x0002ffa1: in al, dx; adc byte ptr [ebp - 0x2011037d], cl; call dword ptr [eax - 1]; 
0x000379ef: in al, dx; adc byte ptr [ebp - 0x7b380], cl; call dword ptr [eax - 0x75]; 
0x00163bd1: in al, dx; adc byte ptr [ebp - 0xcd3537d], cl; call dword ptr [eax - 0x73]; 
0x00157aa1: in al, dx; adc byte ptr [ebp - 0xd93d37d], cl; call dword ptr [eax - 0x73]; 
0x000830d6: in al, dx; add al, 0x29; ret 0x5052; 
0x0007d11b: in al, dx; add al, 0x29; ret 0xfac1; 
0x000df210: in al, dx; add al, 0x29; ret; 
0x000ed867: in al, dx; add al, 0x29; ror byte ptr [ecx - 0x49b7b], 1; call dword ptr [eax + 0x6a]; 
0x000a94ac: in al, dx; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x00024d40: in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0007d840: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x001226f8: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0017ec22: in al, dx; add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00083a39: in al, dx; add al, 0x51; push eax; push esi; call edx; 
0x00084641: in al, dx; add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x000764a6: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000843e0: in al, dx; add al, 0x53; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebp + 0x38]; 
0x00073f36: in al, dx; add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0007892e: in al, dx; add al, 0x53; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00078895: in al, dx; add al, 0x53; push edi; push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x000781d5: in al, dx; add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00081c8f: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00079d80: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024df9: in al, dx; add al, 0x56; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00081e0f: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00077961: in al, dx; add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007a0d7: in al, dx; add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x001226a0: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x001226b4: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x001226c7: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x00076808: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000778e1: in al, dx; add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x00086788: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x2c]; 
0x00139391: in al, dx; add al, 0x6a; add dword ptr [ebx - 0x72ebdbbc], ecx; sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x55]; 
0x0012fac1: in al, dx; add al, 0x6a; add eax, 0x655c978d; stc; call dword ptr [edx + 0x50]; 
0x0012ffd4: in al, dx; add al, 0x6a; add eax, 0x6592808d; stc; call dword ptr [eax - 0x75]; 
0x0012f689: in al, dx; add al, 0x6a; add eax, 0x65b3808d; stc; call dword ptr [eax - 0x75]; 
0x00131b45: in al, dx; add al, 0x6a; add eax, 0x7d4c868d; stc; call dword ptr [eax - 0x75]; 
0x0013e6c7: in al, dx; add al, 0x6a; add eax, 0x8d8134ff; adc byte ptr [eax], 0x83; stc; call dword ptr [eax - 0x18]; 
0x00101a9f: in al, dx; add al, 0x6a; add eax, 0xac03848d; or bh, cl; call dword ptr [eax - 0x73]; 
0x000e7dbd: in al, dx; add al, 0x6a; add eax, 0xae4c838d; stc; call dword ptr [eax - 0x73]; 
0x0012f72f: in al, dx; add al, 0x6a; add eax, 0xb720808d; stc; call dword ptr [eax - 0x75]; 
0x001303e7: in al, dx; add al, 0x6a; add eax, 0xb758808d; stc; call dword ptr [eax + 0x6a]; 
0x001707c6: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001707c6: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x001722fe: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x000386b0: in al, dx; add al, 0x6a; or ecx, dword ptr [ebx - 0x72ebdbbc]; adc byte ptr [edx], 0x3e; stc; call dword ptr [eax - 1]; 
0x0009ab31: in al, dx; add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x00137757: in al, dx; add al, 0x83; ret 0x8802; 
0x000473d5: in al, dx; add al, 0x83; ret; 
0x0005ed4c: in al, dx; add al, 0x89; ret; 
0x00088645: in al, dx; add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x00139a25: in al, dx; add al, 0x8b; je 0x139a4e; adc byte ptr [ebp - 0x6c04d6a], cl; call dword ptr [edx - 0x46]; 
0x00183b6c: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0016dc9d: in al, dx; add al, 0x8d; cmp dword ptr [eax], -0x39; stc; call dword ptr [ebp + 0x57]; 
0x0016db71: in al, dx; add al, 0x8d; cmp dword ptr [eax], -0x39; stc; call dword ptr [esi - 1]; 
0x000d3cd9: in al, dx; add al, 0x8d; sbb dword ptr [eax + 0x5000003d], -0x73; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x0003acdd: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00152943: in al, dx; add al, 0xf2; call dword ptr [eax + 0x6a]; 
0x00040bfe: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x00076500: in al, dx; add al, 0xff; je 0x76529; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00081eb8: in al, dx; add al, 0xff; je 0x81ee1; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00078b14: in al, dx; add al, 0xff; jne 0x78b2d; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00079c79: in al, dx; add al, 0xff; jne 0x79c62; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0017be00: in al, dx; add al, 0xff; push dword ptr ss:[ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017adca: in al, dx; add al, 0xff; push dword ptr ss:[ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0011a98f: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x691457d], cl; call dword ptr [eax + 0x6a]; 
0x0011a7f7: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax + 0x6a]; 
0x001220c4: in al, dx; add al, 1; fcom dword ptr [eax - 0x73]; xchg byte ptr [ebx + 0x63], cl; stc; call dword ptr [eax + 0x57]; 
0x001666e6: in al, dx; add al, 1; ret 0xc129; 
0x000d3874: in al, dx; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x0004456f: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00075848: in al, dx; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00130697: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x0014b983: in al, dx; add esp, 8; pop ebx; ret; 
0x00166b83: in al, dx; call dword ptr [eax - 0x73]; 
0x00166086: in al, dx; call dword ptr [ebp + 0x50]; 
0x00166152: in al, dx; call dword ptr [esi - 0x17]; 
0x0015edd3: in al, dx; cmp byte ptr [ebp - 0x68e1e80], cl; jmp dword ptr [ebp - 0x75]; 
0x000bf9e3: in al, dx; cmp byte ptr [ebp - 0x6c65c48], cl; jmp dword ptr [ebp - 0x75]; 
0x00039dc0: in al, dx; dec esi; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0016fba8: in al, dx; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x0016af15: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014c174: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000f4da0: in al, dx; jecxz 0xf4d95; dec dword ptr [ecx - 0x1b17dbcc]; jecxz 0xf4d9d; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015557e: in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0017d793: in al, dx; jmp dword ptr [esi - 0x70]; 
0x0002a74d: in al, dx; jns 0x2a749; call dword ptr [eax - 0x73]; 
0x0002a9c5: in al, dx; jns 0x2a9c1; call dword ptr [eax - 0x73]; 
0x0002aa2d: in al, dx; jns 0x2aa29; call dword ptr [eax + 0x68]; 
0x0002aa50: in al, dx; jns 0x2aa4c; call dword ptr [eax + 0x68]; 
0x0002aae0: in al, dx; jns 0x2aadc; call dword ptr [eax - 0x73]; 
0x001483c3: in al, dx; jo 0x1483b7; call dword ptr [esi + 0x50]; 
0x00028d3f: in al, dx; jp 0x28d3b; call dword ptr [eax - 0x73]; 
0x00028dd6: in al, dx; jp 0x28dd2; call dword ptr [eax - 0x73]; 
0x00028ece: in al, dx; jp 0x28eca; call dword ptr [eax - 0x73]; 
0x00028ef1: in al, dx; jp 0x28eed; call dword ptr [eax + 0x68]; 
0x00028f14: in al, dx; jp 0x28f10; call dword ptr [eax + 0x68]; 
0x0002e17d: in al, dx; js 0x2e179; call dword ptr [eax - 0x73]; 
0x0002e1b2: in al, dx; js 0x2e1ae; call dword ptr [eax - 0x73]; 
0x0002e1f8: in al, dx; js 0x2e1f4; call dword ptr [eax - 0x73]; 
0x0009d4a0: in al, dx; lahf; stc; call dword ptr [eax - 0x18]; 
0x000d6bbf: in al, dx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012700c: in al, dx; mov ah, 0xf9; call dword ptr [eax + 0x55]; 
0x0010a677: in al, dx; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x00139720: in al, dx; mov bl, 0xef; call dword ptr [ebx + 0x50]; 
0x0015c018: in al, dx; mov bl, 0xf2; call dword ptr [eax - 0x18]; 
0x0015c018: in al, dx; mov bl, 0xf2; call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x000a5eac: in al, dx; mov byte ptr [0x41f6ffe7], al; jne 0xa5eb6; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x00058489: in al, dx; mov cl, bh; call dword ptr [eax - 0x73]; 
0x00186b72: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00156b24: in al, dx; mov eax, dword ptr [0x8d500000]; sub esp, -0x7c; int1; call dword ptr [eax - 0x73]; 
0x00189e43: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bde3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0005e665: in al, dx; mov edi, ecx; call dword ptr [eax - 0x73]; 
0x0016986a: in al, dx; mov esi, ebx; call dword ptr [eax - 0x73]; 
0x00138eb0: in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x0008257b: in al, dx; or al, 0x31; call dword ptr [ebx - 0x18]; 
0x000e174f: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00131d33: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010d36a: in al, dx; or al, 0x31; jmp dword ptr [esi - 0x7d]; 
0x00092405: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00092b9c: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0015850d: in al, dx; or al, 0x50; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x000a0cbb: in al, dx; or al, 0x50; call edx; 
0x00026238: in al, dx; or al, 0x51; call 0x17ab80; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268d2: in al, dx; or al, 0x52; call 0x17ab80; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0014f6dc: in al, dx; or al, 0x53; call 0x17ab80; add esp, 0x10; mov eax, ebx; call eax; 
0x0002f423: in al, dx; or al, 0x53; call 0x17ab80; mov dword ptr [esp], esi; call ebx; 
0x00164ac4: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000825af: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x0007b124: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x00081a28: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x0016c009: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016602f: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x0016c020: in al, dx; or al, 0x55; call eax; 
0x0016ae43: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00025f35: in al, dx; or al, 0x56; call 0x17ab80; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000260c5: in al, dx; or al, 0x56; call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x00164047: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x000805ed: in al, dx; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000859b0: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00075d5c: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x00078ac1: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0017f14b: in al, dx; or al, 0x56; call dword ptr [ebx + 0x44]; 
0x0008562a: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x0017f290: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a0bd9: in al, dx; or al, 0x56; call eax; 
0x001245a3: in al, dx; or al, 0x56; call edx; 
0x001245a3: in al, dx; or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016aaad: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00158674: in al, dx; or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x00027038: in al, dx; or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x0016ce3d: in al, dx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00164f8c: in al, dx; or al, 0x57; call eax; 
0x00164f69: in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x001138cd: in al, dx; or al, 0x6a; adc al, ch; ret 0xf0f8; 
0x000a0921: in al, dx; or al, 0x6a; add eax, 0x53e5838d; stc; call dword ptr [eax - 0x73]; 
0x000ff9ba: in al, dx; or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x00169975: in al, dx; or al, 0x83; ret 0x5208; 
0x00026acc: in al, dx; or al, 0x83; ret; 
0x00064bdd: in al, dx; or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59f6b]; call dword ptr [esi - 0x18]; 
0x0006509d: in al, dx; or al, 0x89; lea ebp, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x000eb1c5: in al, dx; or al, 0x89; lea esi, [ebx + edi*8 - 1]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x00035373: in al, dx; or al, 0x89; push ebp; mov esp, 0x3dbd808d; stc; call dword ptr [eax - 0x18]; 
0x00087719: in al, dx; or al, 0x89; ret 0xe989; 
0x0006634a: in al, dx; or al, 0x89; ret; 
0x000ee0d6: in al, dx; or al, 0x89; test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x0012ff7b: in al, dx; or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [edi - 0x18]; 
0x0003242a: in al, dx; or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x001469e4: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x00164191: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x000e1b31: in al, dx; or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x0016c5ad: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0016f9ca: in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001645d4: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016e0ae: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00107e11: in al, dx; or al, 0x8b; je 0x107e3a; sbb byte ptr [esi - 0x18], dl; ret; 
0x000e1f86: in al, dx; or al, 0x8b; jge 0xe1f5f; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x000e21c6: in al, dx; or al, 0x8b; jge 0xe219f; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x001743a0: in al, dx; or al, 0x8b; jl 0x1743c9; adc byte ptr [ebp - 0x6949b79], cl; call dword ptr [eax - 0x18]; 
0x000e0674: in al, dx; or al, 0x8b; jl 0xe069d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x00096011: in al, dx; or al, 0x8b; jo 0x96022; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0016433a: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0008cf2f: in al, dx; or al, 0x8d; adc byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000e3b41: in al, dx; or al, 0x8d; adc dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x00115bbd: in al, dx; or al, 0x8d; adc esp, -0x4f; stc; call dword ptr [eax - 0x18]; 
0x0008e220: in al, dx; or al, 0x8d; adc esp, -0x6d; stc; call dword ptr [eax - 0x18]; 
0x0016b579: in al, dx; or al, 0x8d; add dword ptr [edx], 0x59; stc; call dword ptr [edi + 0x56]; 
0x000ea777: in al, dx; or al, 0x8d; and byte ptr [eax], 0x57; stc; call dword ptr [eax - 0x18]; 
0x000658ac: in al, dx; or al, 0x8d; and dword ptr [ebp + 0x42], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0011b9ce: in al, dx; or al, 0x8d; cmp al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x0017cdce: in al, dx; or al, 0x8d; cmp byte ptr [ecx], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00140d11: in al, dx; or al, 0x8d; cmp dword ptr [eax + 0x6a], -7; call dword ptr [eax - 0x18]; 
0x000398d6: in al, dx; or al, 0x8d; cmp dword ptr [edx], 0x3b; stc; call dword ptr [eax - 0x18]; 
0x0014c0f1: in al, dx; or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x0018027c: in al, dx; or al, 0x8d; inc ebx; movmskps ebp, xmm0; pop ecx; ret; 
0x0014676d: in al, dx; or al, 0x8d; nop; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x0009ac5d: in al, dx; or al, 0x8d; nop; or al, 0xa8; stc; call dword ptr [edx - 0x73]; 
0x000398fe: in al, dx; or al, 0x8d; or dword ptr [edi + 0x3e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00115c0d: in al, dx; or al, 0x8d; or dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00058f28: in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00141616: in al, dx; or al, 0x8d; popfd; add byte ptr [ebx - 7], ch; call dword ptr [ebx - 0x18]; 
0x001415c6: in al, dx; or al, 0x8d; popfd; fldcw word ptr [edx - 7]; call dword ptr [ebx - 0x18]; 
0x0016b89b: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x000359b8: in al, dx; or al, 0x8d; sbb cl, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x001059b1: in al, dx; or al, 0x8d; sbb dword ptr [edx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x0003e639: in al, dx; or al, 0x8d; sbb esp, -0x7c; stc; call dword ptr [eax - 0x18]; 
0x0007e57e: in al, dx; or al, 0x8d; sub dword ptr [eax - 4], -1; call dword ptr [eax - 0x73]; 
0x001021c0: in al, dx; or al, 0x8d; sub dword ptr [edi + 0x50fff957], -0x18; ret 0xf7ec; 
0x000d580d: in al, dx; or al, 0x8d; sub dword ptr [edi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x000e30e1: in al, dx; or al, 0x8d; sub ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x0002517e: in al, dx; or al, 0x8d; test dword ptr [eax], esp; jle 0x2517e; call dword ptr [eax - 0x18]; 
0x00122191: in al, dx; or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x00027f71: in al, dx; or al, 0x8d; test eax, edi; cmp cl, bh; call dword ptr [edi - 1]; 
0x0015ee97: in al, dx; or al, 0x8d; test ecx, esp; jno 0x15ee97; call dword ptr [eax - 0x18]; 
0x0005def8: in al, dx; or al, 0x8d; test edx, edi; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x00121d24: in al, dx; or al, 0x8d; xchg byte ptr [eax + edi*8 - 1], cl; dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x000bf9b6: in al, dx; or al, 0x8d; xchg byte ptr [eax - 0x55], bh; stc; call dword ptr [eax - 0x18]; 
0x0002508a: in al, dx; or al, 0x8d; xchg byte ptr [eax], ah; jle 0x2508a; call dword ptr [eax - 0x18]; 
0x000251ca: in al, dx; or al, 0x8d; xchg byte ptr [eax], ah; jle 0x251ca; call dword ptr [eax - 0x18]; 
0x0010ae03: in al, dx; or al, 0x8d; xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x00115e67: in al, dx; or al, 0x8d; xchg byte ptr [edx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0006d3ed: in al, dx; or al, 0x8d; xchg dword ptr [eax - 0x74], edx; stc; call dword ptr [eax - 0x18]; 
0x00173bb1: in al, dx; or al, 0x8d; xchg dword ptr [ebx + ebp*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x00030771: in al, dx; or al, 0x8d; xchg dword ptr [ebx], esi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x000e3601: in al, dx; or al, 0x8d; xchg dword ptr [edx + 0x56], edx; stc; call dword ptr [eax - 0x18]; 
0x000307d3: in al, dx; or al, 0x8d; xchg dword ptr [edx], edi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0008184e: in al, dx; or al, 0x8d; xor dword ptr [edx + edx*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008af7d: in al, dx; or al, 0xff; jae 0x8af86; call dword ptr [ebx]; 
0x000922a4: in al, dx; or al, 0xff; jae 0x922ad; call dword ptr [ebx]; 
0x0002bfb3: in al, dx; or al, 0xff; je 0x2bfdc; cmp al, 0xe8; ret 0x14eb; 
0x0002e8ac: in al, dx; or al, 0xff; je 0x2e8d5; sub al, 0xe8; leave; ret 0x14; 
0x0003e263: in al, dx; or al, 0xff; je 0x3e28c; sub al, ch; ret 0xfffe; 
0x0003ea53: in al, dx; or al, 0xff; je 0x3ea7c; cmp al, 0xe8; ret 0xa39; 
0x00024456: in al, dx; or al, 0xff; jne 0x24427; call dword ptr [ebp - 0x38]; 
0x000972c1: in al, dx; or al, 0xff; mov al, 0x80; add dword ptr [eax], eax; add al, ch; ret 0xff42; 
0x00155d08: in al, dx; or al, 0xff; mov bl, 0x94; mov eax, dword ptr [0x7be80000]; aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x00155f48: in al, dx; or al, 0xff; mov bl, 0xb4; mov eax, dword ptr [0x3be80000]; shr ah, cl; jmp dword ptr [ebp - 0x75]; 
0x001224f1: in al, dx; or al, 0xff; mov dh, 0xac; add eax, dword ptr [eax]; add al, ch; ret 0xfe87; 
0x0016f2a0: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc1a037d], cl; call dword ptr [eax - 0x73]; 
0x00169860: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc74137d], cl; call dword ptr [eax - 0x73]; 
0x00127ef1: in al, dx; or bh, bh; je 0x127eab; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00163e03: in al, dx; or bh, bh; je 0x163e2c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00027fa1: in al, dx; or bh, bh; je 0x27fca; and byte ptr [eax - 0x18], dl; ret; 
0x000c1dc1: in al, dx; or bh, bh; je 0xc1dea; or byte ptr [edx - 0x18], dl; ret; 
0x00085e97: in al, dx; or byte ptr [eax + 0x53], dl; call dword ptr [esi + 0x18]; 
0x0015b6b0: in al, dx; or byte ptr [eax - 0x73], dl; xchg cl, bh; jo 0x15b6b1; call dword ptr [ecx - 1]; 
0x000a0c91: in al, dx; or byte ptr [eax - 1], dl; jae 0xa0cbb; call edx; 
0x0005ecef: in al, dx; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009c622: in al, dx; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; add byte ptr [eax - 0x62], 0xf9; call dword ptr [eax - 0x18]; 
0x0013a3d9: in al, dx; or byte ptr [ebp + 0x488c83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x00075675: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00082304: in al, dx; or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x000837c7: in al, dx; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00081ff7: in al, dx; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0007d473: in al, dx; or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000df739: in al, dx; or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0010a9ad: in al, dx; or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000ef889: in al, dx; or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000df8b3: in al, dx; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000e8b59: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x0016d766: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0017f70b: in al, dx; or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0008578a: in al, dx; or byte ptr [ebp + 0x56500159], cl; call dword ptr [edi + 0xc]; 
0x000f241d: in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000f22bc: in al, dx; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000f2491: in al, dx; or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x00099481: in al, dx; or byte ptr [ebp - 0x197b9379], cl; call dword ptr [eax - 0x73]; 
0x0003191f: in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000816d5: in al, dx; or byte ptr [ebp - 0x1afa437d], cl; call dword ptr [eax - 0x73]; 
0x00027153: in al, dx; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x000ce493: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00055b3e: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x00143b5f: in al, dx; or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x00121cd5: in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000e95c0: in al, dx; or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f02e0: in al, dx; or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x001789e1: in al, dx; or byte ptr [ebp - 0x6366f45], cl; call dword ptr [edi + 0x56]; 
0x00126fcf: in al, dx; or byte ptr [ebp - 0x64ae379], cl; call dword ptr [eax + 0x55]; 
0x00126fea: in al, dx; or byte ptr [ebp - 0x64afb79], cl; call dword ptr [eax + 0x55]; 
0x00127008: in al, dx; or byte ptr [ebp - 0x64b1379], cl; call dword ptr [eax + 0x55]; 
0x00038241: in al, dx; or byte ptr [ebp - 0x67c336d], cl; call dword ptr [edx - 0x77]; 
0x0003066b: in al, dx; or byte ptr [ebp - 0x67cf779], cl; call dword ptr [eax + 0x56]; 
0x000331fa: in al, dx; or byte ptr [ebp - 0x67cf77b], cl; call dword ptr [eax + 0x56]; 
0x00177926: in al, dx; or byte ptr [ebp - 0x689e455], cl; call dword ptr [ebp + 0x56]; 
0x0017908d: in al, dx; or byte ptr [ebp - 0x689e47d], cl; call dword ptr [ebp + 0x50]; 
0x0017790b: in al, dx; or byte ptr [ebp - 0x689f245], cl; call dword ptr [edi + 0x56]; 
0x00178138: in al, dx; or byte ptr [ebp - 0x689f24d], cl; call dword ptr [esi + 0x57]; 
0x00178af6: in al, dx; or byte ptr [ebp - 0x68a016a], cl; call dword ptr [edx - 0x77]; 
0x00177941: in al, dx; or byte ptr [ebp - 0x68a016d], cl; call dword ptr [edx - 0x77]; 
0x00178172: in al, dx; or byte ptr [ebp - 0x68a0175], cl; call dword ptr [ecx - 0x77]; 
0x00177964: in al, dx; or byte ptr [ebp - 0x68a1045], cl; call dword ptr [edi + 0x56]; 
0x00178b15: in al, dx; or byte ptr [ebp - 0x68a104a], cl; call dword ptr [esi + 0x53]; 
0x00178195: in al, dx; or byte ptr [ebp - 0x68a104d], cl; call dword ptr [esi + 0x57]; 
0x00167f12: in al, dx; or byte ptr [ebp - 0x68d057d], cl; call dword ptr [eax - 1]; 
0x001619eb: in al, dx; or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x51]; 
0x001623a8: in al, dx; or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x57]; 
0x00161267: in al, dx; or byte ptr [ebp - 0x68e2b80], cl; call dword ptr [eax + 0x57]; 
0x00158177: in al, dx; or byte ptr [ebp - 0x6900b6f], cl; call dword ptr [edx + 0x50]; 
0x00157c61: in al, dx; or byte ptr [ebp - 0x690476d], cl; call dword ptr [edx + 0x50]; 
0x000f2350: in al, dx; or byte ptr [ebp - 0x690da68], cl; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x0011ac81: in al, dx; or byte ptr [ebp - 0x690da7d], cl; call dword ptr [eax - 0x73]; 
0x0014c1b0: in al, dx; or byte ptr [ebp - 0x692d67d], cl; call dword ptr [eax - 1]; 
0x001233ea: in al, dx; or byte ptr [ebp - 0x69ca17d], cl; call dword ptr [eax + 0x56]; 
0x0011d0eb: in al, dx; or byte ptr [ebp - 0x69f417d], cl; call dword ptr [eax + 0x55]; 
0x0011d280: in al, dx; or byte ptr [ebp - 0x6a1ca7d], cl; call dword ptr [eax + 0x55]; 
0x0011d265: in al, dx; or byte ptr [ebp - 0x6a1fc7d], cl; call dword ptr [eax + 0x55]; 
0x0011d24a: in al, dx; or byte ptr [ebp - 0x6a2307d], cl; call dword ptr [eax + 0x55]; 
0x0011d22f: in al, dx; or byte ptr [ebp - 0x6a2657d], cl; call dword ptr [eax + 0x55]; 
0x0011d214: in al, dx; or byte ptr [ebp - 0x6a2977d], cl; call dword ptr [eax + 0x55]; 
0x0011d1f9: in al, dx; or byte ptr [ebp - 0x6a2e37d], cl; call dword ptr [eax + 0x55]; 
0x0011d1de: in al, dx; or byte ptr [ebp - 0x6a3277d], cl; call dword ptr [eax + 0x55]; 
0x0011d1c3: in al, dx; or byte ptr [ebp - 0x6a3597d], cl; call dword ptr [eax + 0x55]; 
0x0011d1a8: in al, dx; or byte ptr [ebp - 0x6a38f7d], cl; call dword ptr [eax + 0x55]; 
0x0011d18d: in al, dx; or byte ptr [ebp - 0x6a3d07d], cl; call dword ptr [eax + 0x55]; 
0x0011d172: in al, dx; or byte ptr [ebp - 0x6a4057d], cl; call dword ptr [eax + 0x55]; 
0x0011d157: in al, dx; or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x0011d13c: in al, dx; or byte ptr [ebp - 0x6a4857d], cl; call dword ptr [eax + 0x55]; 
0x0011d121: in al, dx; or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x0011d106: in al, dx; or byte ptr [ebp - 0x6a5437d], cl; call dword ptr [eax + 0x55]; 
0x0011ad7f: in al, dx; or byte ptr [ebp - 0x6a6046a], cl; call dword ptr [edx - 0x77]; 
0x0011ad60: in al, dx; or byte ptr [ebp - 0x6a6076a], cl; call dword ptr [edx - 0x77]; 
0x0011ad41: in al, dx; or byte ptr [ebp - 0x6a60d6a], cl; call dword ptr [edx - 0x77]; 
0x000f522c: in al, dx; or byte ptr [ebp - 0x6a85e7d], cl; call dword ptr [eax + 0x55]; 
0x000f5501: in al, dx; or byte ptr [ebp - 0x6a8657d], cl; call dword ptr [eax + 0x55]; 
0x000f540c: in al, dx; or byte ptr [ebp - 0x6a86b7d], cl; call dword ptr [eax + 0x55]; 
0x000f5310: in al, dx; or byte ptr [ebp - 0x6a8717d], cl; call dword ptr [eax + 0x55]; 
0x000f4ff9: in al, dx; or byte ptr [ebp - 0x6a8777d], cl; call dword ptr [eax + 0x55]; 
0x000f50a0: in al, dx; or byte ptr [ebp - 0x6a8837d], cl; call dword ptr [eax + 0x55]; 
0x000f53a9: in al, dx; or byte ptr [ebp - 0x6a8897d], cl; call dword ptr [eax + 0x55]; 
0x000f51d0: in al, dx; or byte ptr [ebp - 0x6a88f7d], cl; call dword ptr [eax + 0x55]; 
0x000f2406: in al, dx; or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax + 0x53]; 
0x000f2463: in al, dx; or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax - 1]; 
0x000d572a: in al, dx; or byte ptr [ebp - 0x6aa727d], cl; call dword ptr [eax + 0x57]; 
0x000d5211: in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x000a086a: in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x0014d220: in al, dx; or byte ptr [ebp - 0x6ac667f], cl; call dword ptr [eax + 0x52]; 
0x0015274f: in al, dx; or byte ptr [ebp - 0x6af6079], cl; call dword ptr [eax + 0x56]; 
0x000f50de: in al, dx; or byte ptr [ebp - 0x6b1567d], cl; call dword ptr [eax + 0x55]; 
0x0005e33f: in al, dx; or byte ptr [ebp - 0x6bde97a], cl; call dword ptr [eax + 0x53]; 
0x0005df89: in al, dx; or byte ptr [ebp - 0x6c03363], cl; call dword ptr [ecx + 0x53]; 
0x00039707: in al, dx; or byte ptr [ebp - 0x6c1c27b], cl; call dword ptr [eax + 0x53]; 
0x0011bc22: in al, dx; or byte ptr [ebp - 0x6c2287a], cl; call dword ptr [eax - 1]; 
0x0011a6c2: in al, dx; or byte ptr [ebp - 0x6c2287d], cl; call dword ptr [eax + 0x6a]; 
0x00142638: in al, dx; or byte ptr [ebp - 0x6c22a79], cl; call dword ptr [eax + 0x53]; 
0x001425b8: in al, dx; or byte ptr [ebp - 0x6c22a79], cl; call dword ptr [eax + 0x56]; 
0x000351f8: in al, dx; or byte ptr [ebp - 0x6c22a80], cl; call dword ptr [eax + 0x53]; 
0x0002fe06: in al, dx; or byte ptr [ebp - 0x6c4fb7d], cl; call dword ptr [eax - 1]; 
0x0002fde8: in al, dx; or byte ptr [ebp - 0x6c5016d], cl; call dword ptr [edx + 0x50]; 
0x00141f02: in al, dx; or byte ptr [ebp - 0x6c71879], cl; call dword ptr [eax - 0x73]; 
0x00138259: in al, dx; or byte ptr [ebp - 0x6c7187b], cl; call dword ptr [eax + 0x53]; 
0x000d57b4: in al, dx; or byte ptr [ebp - 0x6c7187d], cl; call dword ptr [eax + 0x57]; 
0x0011c4b4: in al, dx; or byte ptr [ebp - 0x6c7187d], cl; call dword ptr [eax - 0x73]; 
0x00163f37: in al, dx; or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x000ce6f4: in al, dx; or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x00047a3e: in al, dx; or byte ptr [ebp - 0x7b379], cl; call dword ptr [eax + 0x6a]; 
0x000d11c3: in al, dx; or byte ptr [ebp - 0x7b37b], cl; call dword ptr [eax + 0x6a]; 
0x00137d9a: in al, dx; or byte ptr [ebp - 0x7b37d], cl; call dword ptr [eax + 0x6a]; 
0x0016b131: in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0016b191: in al, dx; or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0016b301: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00175dea: in al, dx; or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x00176604: in al, dx; or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x00163c7a: in al, dx; or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x0016e2a1: in al, dx; or byte ptr [ebp - 0xc2cb37d], cl; call dword ptr [eax - 0x73]; 
0x0016c029: in al, dx; or byte ptr [ebp - 0xc50e37d], cl; call dword ptr [eax - 0x73]; 
0x001695bb: in al, dx; or byte ptr [ebp - 0xc7bf37d], cl; call dword ptr [eax - 0x73]; 
0x001313d0: in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x00168e8b: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x001657da: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016c578: in al, dx; or byte ptr [ebx + 0x245c8b06], cl; xor byte ptr [ebx + 0x50532050], cl; call dword ptr [edx + 4]; 
0x00122b43: in al, dx; or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x0016a509: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016e09d: in al, dx; or byte ptr [ebx + 0x478b04c1], al; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x00163ded: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00163f57: in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0016a461: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x001710a0: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0007b8e6: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x00131e19: in al, dx; or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0010a6d1: in al, dx; or byte ptr [ebx + 0x6a14245c], cl; add al, 0x8d; or byte ptr [edx + 0x59], 0xf9; call dword ptr [eax + 0x53]; 
0x0016640b: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x00166459: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0016ec71: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x0016ee60: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00163dd1: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0016bac3: in al, dx; or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0016a41d: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0016588a: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x001658ce: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016585f: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0006e4a5: in al, dx; or byte ptr [ebx - 0x4f763], cl; call dword ptr [edx + 0x50]; 
0x00064c69: in al, dx; or byte ptr [ebx - 0x58b63], cl; call dword ptr [ecx + 0x50]; 
0x00066da4: in al, dx; or byte ptr [ebx - 0x58b63], cl; call dword ptr [esi + 0x50]; 
0x000632cb: in al, dx; or byte ptr [ebx - 0x5af43], cl; call dword ptr [eax - 1]; 
0x0015856f: in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; xor ah, 0x6f; stc; call dword ptr [eax - 1]; 
0x0014f57b: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; xor byte ptr [ebx], 0x6e; stc; call dword ptr [eax + 0x55]; 
0x00152734: in al, dx; or byte ptr [ebx - 0x72ebdb84], cl; xchg eax, esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x001545fd: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [esi], 0x6f; stc; call dword ptr [eax - 1]; 
0x001529cd: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; and bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00152c31: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; sbb dl, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00152b2c: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; sub bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x0008299e: in al, dx; or byte ptr [ebx - 0x72f3dba4], cl; sub dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x75]; 
0x000d737d: in al, dx; or byte ptr [ebx - 0x72f3dbac], cl; and bh, 0x38; stc; call dword ptr [eax + 0x53]; 
0x000f25a7: in al, dx; or byte ptr [ebx - 0x73], dl; adc byte ptr [edi + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x0016eea9: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000871b6: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x871e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x00130b1d: in al, dx; or byte ptr [ebx - 1], dl; jae 0x130b53; call eax; 
0x0014f53e: in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x691d580], cl; call dword ptr [eax + 0x55]; 
0x00122c03: in al, dx; or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000d319a: in al, dx; or byte ptr [ecx + 0x535c246c], cl; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00164a09: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00037ed5: in al, dx; or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x0006df27: in al, dx; or byte ptr [ecx - 0x54f73], cl; inc dword ptr [ebx + 0x428d25eb]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [esi - 1]; 
0x00065f40: in al, dx; or byte ptr [ecx - 0x59f6b], cl; dec dword ptr [ecx - 0x59773]; call dword ptr [ebx - 0x75]; 
0x0016d50a: in al, dx; or byte ptr [ecx - 0x72540c29], cl; sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x00032dda: in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00176652: in al, dx; or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x000a0c13: in al, dx; or byte ptr [ecx - 1], dl; jae 0xa0c3d; call eax; 
0x00160e76: in al, dx; or byte ptr [ecx], al; ret 0x5689; 
0x00039f21: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x001117f1: in al, dx; or byte ptr [ecx], al; ret; 
0x00037e4b: in al, dx; or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x0006fe78: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0006fe12: in al, dx; or byte ptr [ecx], ch; ror dword ptr [ecx - 0x4fb63], cl; dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x0006efee: in al, dx; or byte ptr [ecx], ch; ror dword ptr [ecx - 0x52b63], cl; dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x000df87a: in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0017a2aa: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x0017a331: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x000831e6: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x0007cae3: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x00165e9e: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003e409: in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x00075809: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0013bd25: in al, dx; or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000a0b24: in al, dx; or byte ptr [esi - 1], dl; jae 0xa0b4e; call eax; 
0x0003aa2d: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00167b83: in al, dx; pop ebx; ret; 
0x000a3220: in al, dx; pop edi; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0018e2ee: in al, dx; pop es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bda00: in al, dx; pushal; pop es; add byte ptr [ebp - 0x6556b79], cl; call dword ptr [eax - 0x73]; 
0x0012df81: in al, dx; ret 0xffef; 
0x00175c24: in al, dx; rol byte ptr [eax], 0; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x5f]; 
0x000a31e0: in al, dx; sal esi, 1; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00132fe6: in al, dx; sbb al, 0x8b; inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000819e1: in al, dx; sbb byte ptr [eax - 0x18], dl; mov bh, 0x39; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000960e1: in al, dx; sbb byte ptr [ebp - 0x668fb80], cl; call dword ptr [eax - 0x18]; 
0x00133b01: in al, dx; sbb byte ptr [ebp - 0x698f780], cl; call dword ptr [eax - 0x18]; 
0x001325e1: in al, dx; sbb byte ptr [ebp - 0x6992880], cl; call dword ptr [eax - 0x18]; 
0x00162e05: in al, dx; sbb byte ptr [edx + 0xa], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f225: in al, dx; sbb byte ptr [edx + 1], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f595: in al, dx; sbb byte ptr [edx + 2], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00160435: in al, dx; sbb byte ptr [edx + 3], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00161715: in al, dx; sbb byte ptr [edx + 4], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00161d65: in al, dx; sbb byte ptr [edx + 5], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00162105: in al, dx; sbb byte ptr [edx + 6], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00163365: in al, dx; sbb byte ptr [edx + 7], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00162745: in al, dx; sbb byte ptr [edx + 8], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00162b35: in al, dx; sbb byte ptr [edx + 9], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x0015eda5: in al, dx; sbb byte ptr [edx], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x0003cce5: in al, dx; sbb byte ptr [edx], ch; call 0x3c570; add esp, 0x1c; ret; 
0x0005d724: in al, dx; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0014b30e: in al, dx; sbb ecx, edi; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00046001: in al, dx; stc; call dword ptr [eax + 0x57]; 
0x000b2b61: in al, dx; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be328: in al, dx; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x000c03fe: in al, dx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00163393: in al, dx; sub byte ptr [ebp - 0x68d0380], cl; jmp dword ptr [ebp - 0x75]; 
0x00162e33: in al, dx; sub byte ptr [ebp - 0x68d0f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00162b63: in al, dx; sub byte ptr [ebp - 0x68d1c80], cl; jmp dword ptr [ebp - 0x75]; 
0x00162773: in al, dx; sub byte ptr [ebp - 0x68d2a80], cl; jmp dword ptr [ebp - 0x75]; 
0x00162133: in al, dx; sub byte ptr [ebp - 0x68d3680], cl; jmp dword ptr [ebp - 0x75]; 
0x00161d93: in al, dx; sub byte ptr [ebp - 0x68d4580], cl; jmp dword ptr [ebp - 0x75]; 
0x0015f5c3: in al, dx; sub byte ptr [ebp - 0x68e0580], cl; jmp dword ptr [ebp - 0x75]; 
0x0015f253: in al, dx; sub byte ptr [ebp - 0x68e1180], cl; jmp dword ptr [ebp - 0x75]; 
0x00156b2b: in al, dx; test cl, dh; call dword ptr [eax - 0x73]; 
0x00057fa0: in al, dx; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0015a7a8: in al, dx; xchg esi, eax; bnd call dword ptr [eax - 1]; 
0x000b4161: in al, dx; xchg esp, eax; or al, 0; add ecx, 0x10bcbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011cc43: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019ef47: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x00092c92: in eax, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0005799f: in eax, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x0005799f: in eax, 0x3f; stc; call dword ptr [eax - 0x18]; ja 0x5796a; std; jmp dword ptr [esi - 0x70]; 
0x0008e00a: in eax, 0x4e; stc; call dword ptr [eax - 0x18]; 
0x000a0927: in eax, 0x53; stc; call dword ptr [eax - 0x73]; 
0x000c0471: in eax, 0x54; stc; call dword ptr [eax - 0x18]; 
0x000c0471: in eax, 0x54; stc; call dword ptr [eax - 0x18]; movsd dword ptr es:[edi], dword ptr [esi]; cmp bh, dh; jmp dword ptr [esi - 0x70]; 
0x0010859d: in eax, 0x58; stc; call dword ptr [eax - 0x18]; 
0x000a56aa: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0012d48a: in eax, 0x64; stc; call dword ptr [ebp - 1]; 
0x0013946d: in eax, 0x68; stc; call dword ptr [eax + 0x6a]; 
0x0014d484: in eax, 0x6d; stc; call dword ptr [eax - 0x18]; 
0x000865f2: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f18a: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0009b459: in eax, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000ad026: in eax, 0x83; ret; 
0x000c011a: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000bf34a: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00039ed2: in eax, 0x89; int 0x80; 
0x0017c10a: in eax, 0x89; ret; 
0x001a2836: in eax, 0x8b; je 0x1a285e; or byte ptr [ecx + 0x244c8bcb], cl; and al, 0x83; ret; 
0x00105623: in eax, 0x8d; and eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x00056837: in eax, 0xd4; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0016f2ab: in eax, 0xf3; call dword ptr [eax - 0x73]; 
0x000a319f: in eax, 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000d2093: in eax, 0xf; je 0xd20b0; add eax, 2; ret; 
0x001658d4: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x001555a8: in eax, 0xfd; jmp dword ptr [esi - 0x70]; 
0x000f6d96: in eax, 0xff; add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000476bb: in eax, 0xff; call dword ptr [eax + 0x31]; 
0x0004a131: in eax, 0xff; call dword ptr [edi + 0x6a]; 
0x00073073: in eax, 0xff; call dword ptr [edx - 0x7d]; 
0x000d05c8: in eax, 0xff; dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x0004e2cb: in eax, 0xff; dec dword ptr [ebx - 0x72b7db84]; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x000cf8a4: in eax, 0xff; dec dword ptr [ecx - 0x366b43]; dec dword ptr [ecx - 0x366f73]; dec dword ptr [ebx - 0x364773]; call dword ptr [ebx - 0x73]; 
0x00134062: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x00024b66: in eax, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x000cd10d: in eax, 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000a3fad: in eax, 2; lea edx, [edx - 0x174aa4]; cmove eax, edx; ret; 
0x000a298d: in eax, 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a5dad: in eax, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a5ded: in eax, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a337d: in eax, 2; lea edx, [edx - 0x1758a4]; cmove eax, edx; ret; 
0x000a33bd: in eax, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a5e6d: in eax, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x0019ab42: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001996bb: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x0008be5f: in eax, dx; add dword ptr [eax], eax; add dh, dh; ret; 
0x000e9639: in eax, dx; add eax, 0x878d0000; out dx, eax; push esi; stc; call dword ptr [eax - 0x73]; 
0x000bb157: in eax, dx; add eax, ecx; pop edi; ret; 
0x0012459e: in eax, dx; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0010a816: in eax, dx; call dword ptr [eax + 0x56]; 
0x00184aea: in eax, dx; call dword ptr [eax + 0x6a]; 
0x00103bfb: in eax, dx; call dword ptr [ebp + 0x6a]; 
0x000a4fdb: in eax, dx; clc; dec dword ptr [ebp - 0x656b770]; call dword ptr [edx - 0x73]; 
0x000a0676: in eax, dx; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0009a6be: in eax, dx; clc; jmp dword ptr [ebp - 1]; 
0x000a4ffa: in eax, dx; clc; jmp dword ptr [esi - 0x70]; 
0x00147a87: in eax, dx; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x000cf38e: in eax, dx; idiv bh; dec dword ptr [ebx - 0x36537b]; call dword ptr [esi + 0x6a]; 
0x001485fb: in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009a3fb: in eax, dx; je 0x9a470; mov ecx, dword ptr [esp + 0x74]; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00149f54: in eax, dx; jmp dword ptr [ebp - 0x5f]; 
0x0014d746: in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x00160b55: in eax, dx; jmp dword ptr [esi - 0x70]; 
0x000a0be4: in eax, dx; jne 0xa0b39; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x000a5592: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x000a56f2: in eax, dx; mov eax, edx; pop ebx; ret; 
0x00186b42: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a6be4: in eax, dx; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x001997b7: in eax, dx; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000f30aa: in eax, dx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0009abe0: in eax, dx; push eax; stc; call dword ptr [eax - 0x18]; 
0x00104624: in eax, dx; push edi; stc; call dword ptr [eax - 0x18]; 
0x0004792f: in eax, dx; ret; 
0x001569ff: in eax, dx; sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x000c239f: in eax, dx; stc; clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00044656: in eax, dx; std; jmp dword ptr [esi - 0x70]; 
0x001043df: in eax, dx; xor al, 0xfe; dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7d6e: inc byte ptr [eax]; add al, 0xf; test byte ptr [eax], al; sbb al, 0; add dh, dh; ret; 
0x001249c1: inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00042fdd: inc byte ptr [ebx - 0x6bf00220]; ret 0xfd83; 
0x000911b1: inc byte ptr [ecx]; ret; 
0x000adb9e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000adb48: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001313c7: inc dword ptr [eax + 0xf]; test byte ptr [ecx - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000a33bb: inc dword ptr [eax - 0x6d72fd1b]; cld; cmpsb byte ptr [esi], byte ptr es:[edi]; call 0xc24e43c7; ret; 
0x000a5dab: inc dword ptr [eax - 0x6d72fd1b]; cmp al, 0xa8; call 0xc24e6db7; ret; 
0x000cd10b: inc dword ptr [eax - 0x6d72fd1b]; insb byte ptr es:[edi], dx; adc ebp, edx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a5e6b: inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe786; inc esp; ret 0x66c3; 
0x000a337b: inc dword ptr [eax - 0x6d72fd1b]; pop esp; cmpsd dword ptr [esi], dword ptr es:[edi]; call 0xc24e4387; ret; 
0x000a3fab: inc dword ptr [eax - 0x6d72fd1b]; pop esp; mov ch, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a298b: inc dword ptr [eax - 0x6d72fd1b]; sub al, 0xab; call 0xc24e3997; ret; 
0x0005ff15: inc dword ptr [eax - 0x7af0ac06]; ret; 
0x0005907a: inc dword ptr [eax - 0x7bf09a06]; hlt; or byte ptr [eax], al; add byte ptr [eax - 0xd343], al; jmp dword ptr [esi + 0xf]; 
0x000752ea: inc dword ptr [eax - 0x7cfef3b2]; ret 0x8b04; 
0x0005a213: inc dword ptr [eax - 0xd343]; jmp dword ptr [edi + 0xf]; 
0x000e9c2a: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x48b43], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [esi - 0x75]; 
0x0006f4fd: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; 
0x0006f4fd: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; ret 0xbc3; 
0x001319ea: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000e8cb8: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xf8c1; 
0x00126813: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f2772: inc dword ptr [eax]; add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x0019d96c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0003a55b: inc dword ptr [eax]; add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed6685; or eax, ecx; ret; 
0x000f2655: inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x00197fac: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001939a8: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0009a877: inc dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x000f4d09: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x00100956: inc dword ptr [eax]; cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x000bb7af: inc dword ptr [eax]; je 0xbb7b4; inc eax; pop edi; ret; 
0x000bb953: inc dword ptr [eax]; je 0xbb958; inc eax; pop edi; pop esi; ret; 
0x00137e7b: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00137e53: inc dword ptr [eax]; ret; 
0x000ede06: inc dword ptr [ebp + 0x22850fd2]; or al, byte ptr [eax]; add byte ptr [ebx - 0x49363], cl; inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x000ad30c: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000f7d1c: inc dword ptr [ebp + 0x4b850fc0]; add dword ptr [eax], eax; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x000ad2ec: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00055b96: inc dword ptr [ebp + 0x4d8f0fc0]; jecxz 0x55b9d; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000ad32c: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0011f173: inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0003f435: inc dword ptr [ebp - 0x277af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x000574f8: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5748d; ret 0x40c7; 
0x00171405: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x00101fd6: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x00050462: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x00065684: inc dword ptr [ebp - 0x497af040]; or al, 0; add byte ptr [ebx - 0x5af43], cl; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x001665da: inc dword ptr [ebp - 0x74228b40]; inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0017c106: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0003f3f5: inc dword ptr [ebp - 0x767af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x00135cbe: inc dword ptr [ebp - 0x768f8740]; ret; 
0x000e8950: inc dword ptr [ebp - 0x7cc48b37]; ret 0x8901; 
0x0006af5c: inc dword ptr [ebx + 0x148b10c4]; and al, 0x89; ret; 
0x0014c14e: inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011c715: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00120113: inc dword ptr [ebx + 0x277602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000cf980: inc dword ptr [ebx + 0x2ba03fe]; add byte ptr [eax], al; add byte ptr [ecx - 0x365f4b], cl; dec dword ptr [ecx - 0x366f7b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0xff31; 
0x0017adc8: inc dword ptr [ebx + 0x36ff04ec]; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0006df2e: inc dword ptr [ebx + 0x428d25eb]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [esi - 1]; 
0x000a8b31: inc dword ptr [ebx + 0x440ffff8]; ret; 
0x000e0efc: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008e37a: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0016f0ae: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x00161c03: inc dword ptr [ebx + 0x448d10c4]; push es; add dword ptr [ecx - 0x16efdbbc], ecx; ret; 
0x000278e3: inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x20af737d]; call dword ptr [eax - 0x73]; 
0x001073af: inc dword ptr [ebx + 0x458910c4]; add byte ptr [ebp - 0x2b7bf040], al; add eax, 0x1bf0000; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00097114: inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x00100c7f: inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x00166014: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x0012fdb0: inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0013757d: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00119131: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0013336a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x0013457a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x001860f2: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0008c7f3: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x000912ef: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c3: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a43: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f4f: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933af: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x00123802: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001800ce: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x000d2db3: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd147: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df487: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x00140edb: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x0016d764: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0005bf5e: inc dword ptr [ebx + 0x57530cc4]; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0010a774: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000a57d5: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000587ff: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0005d76d: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0002fd65: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017125d: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x00025de7: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00133616: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00025f8e: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0013f7a7: inc dword ptr [ebx + 0x5e5b38c4]; pop edi; pop ebp; ret; 
0x0015ec6f: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000f9c55: inc dword ptr [ebx + 0x5f3b01c3]; add al, 0x7c; ret 0x9066; 
0x0012253e: inc dword ptr [ebx + 0x658d10c4]; clc; pop ebx; pop esi; pop ebp; ret; 
0x00145dc3: inc dword ptr [ebx + 0x680cec]; add byte ptr [ecx], al; add byte ptr [ebx - 0x17e3dba4], cl; ret; 
0x00086854: inc dword ptr [ebx + 0x6a04ec]; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x000d0ba3: inc dword ptr [ebx + 0x6ce910c4]; jmp 0xd0baa; dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x0005911e: inc dword ptr [ebx + 0x708d0cec]; add cl, byte ptr [ecx - 0xc74b]; call dword ptr [esi - 0x18]; 
0x000f1da2: inc dword ptr [ebx + 0x70ff0cec]; adc al, 0xe8; ret 0xfb32; 
0x000e7e02: inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x000dd845: inc dword ptr [ebx + 0xb910c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdb8c], cl; ret 0x448b; 
0x000dd98d: inc dword ptr [ebx + 0xbb10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x00103f9b: inc dword ptr [ebx + 0xf000478]; mov ds, word ptr [edx]; add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010a4df: inc dword ptr [ebx + 0xfc144c]; jmp 0x109eb2; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000e948f: inc dword ptr [ebx + 0xfc144c]; jmp 0xe8e62; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ebe0f: inc dword ptr [ebx + 0xfc144c]; jmp 0xeb7e2; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ecb5f: inc dword ptr [ebx + 0xfc144c]; jmp 0xec542; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ef45f: inc dword ptr [ebx + 0xfc144c]; jmp 0xeee42; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000f01af: inc dword ptr [ebx + 0xfc144c]; jmp 0xefb92; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5f8]; call dword ptr [eax + 0x18]; 
0x0016a8a5: inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x001415c1: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; fldcw word ptr [edx - 7]; call dword ptr [ebx - 0x18]; 
0x00179088: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x689e47d], cl; call dword ptr [ebp + 0x50]; 
0x00165885: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0014ebee: inc dword ptr [ebx - 0x17a8f314]; cwde; inc ebp; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x001506ee: inc dword ptr [ebx - 0x17a8f314]; cwde; sub ch, ch; jmp dword ptr [ebp - 0x75]; 
0x0014d73e: inc dword ptr [ebx - 0x17a8f314]; dec eax; pop edx; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x0015a03e: inc dword ptr [ebx - 0x17a8f314]; dec eax; xchg ecx, eax; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0015d70e: inc dword ptr [ebx - 0x17a8f314]; js 0x15d770; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0008d077: inc dword ptr [ebx - 0x17a9f314]; aas; ret; 
0x0015b24e: inc dword ptr [ebx - 0x17a9f314]; cmp byte ptr [edi - 0x14], bh; jmp dword ptr [ebp - 0x75]; 
0x0015bcee: inc dword ptr [ebx - 0x17a9f314]; cwde; je 0x15bce3; jmp dword ptr [ebp - 0x75]; 
0x0008d088: inc dword ptr [ebx - 0x17a9f314]; dec esi; ret 0xffff; 
0x0014e62e: inc dword ptr [ebx - 0x17a9f314]; pop eax; dec ebx; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x00062344: inc dword ptr [ebx - 0x17aaeb3c]; ret 0xff63; 
0x00155576: inc dword ptr [ebx - 0x17aaf314]; adc ah, bl; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0015c7ae: inc dword ptr [ebx - 0x17aaf314]; fsubr dword ptr [ecx - 0x14]; jmp dword ptr [ebp - 0x75]; 
0x00159016: inc dword ptr [ebx - 0x17aaf314]; jo 0x158fbf; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000ede14: inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x00068f9e: inc dword ptr [ebx - 0x17aef314]; clc; ret; 
0x0015ec8a: inc dword ptr [ebx - 0x17aef314]; or al, 0x67; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xede9; 
0x000a232d: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x0017d7be: inc dword ptr [ebx - 0x247aef3c]; jne 0x17d7d0; add esp, 8; pop ebx; ret; 
0x000253da: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x001381a9: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00147f06: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000d2a59: inc dword ptr [ebx - 0x287cfe3a]; add byte ptr [ecx], bh; ret; 
0x000551ef: inc dword ptr [ebx - 0x2c7c003f]; call dword ptr [ebx + 0x51]; 
0x000cee9a: inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00172178: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000cff05: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00053749: inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0005522c: inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000ce0f0: inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000d0ac7: inc dword ptr [ebx - 0x364f7b]; jmp eax; 
0x000563ca: inc dword ptr [ebx - 0x36577b]; jmp eax; 
0x00085ef9: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0009baf0: inc dword ptr [ebx - 0x3b7cef3c]; adc al, 0x5b; pop esi; ret; 
0x00038c65: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0011f4c3: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00087212: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x00104287: inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x001331ef: inc dword ptr [ebx - 0x3f7aef3c]; je 0x133200; add esp, 8; pop ebx; ret; 
0x00157c6f: inc dword ptr [ebx - 0x3f7aef3c]; je 0x157c80; sub esp, 0xc; push esi; call eax; 
0x00157fff: inc dword ptr [ebx - 0x3f7aef3c]; je 0x158010; sub esp, 0xc; push esi; call eax; 
0x00041495: inc dword ptr [ebx - 0x3f7aef3c]; je 0x414a8; add esp, 8; pop ebx; ret; 
0x0011ef0b: inc dword ptr [ebx - 0x3f7aef3c]; jne 0x11eecc; add esp, 0xc; ret; 
0x000f2193: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xf21a0; add esp, 8; pop ebx; ret; 
0x0014d22e: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x000a24f4: inc dword ptr [ebx - 0x3f7af33c]; jne 0xa2503; ret; 
0x00089f8d: inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00080f87: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00039afe: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000f70ca: inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x001028fc: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000f70b7: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00097fb1: inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00037b41: inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00155d06: inc dword ptr [ebx - 0x4c00f314]; xchg esp, eax; mov eax, dword ptr [0x7be80000]; aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x000c1cde: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x00053c86: inc dword ptr [ebx - 0x5bf0ff26]; ret 0xc102; 
0x00064919: inc dword ptr [ebx - 0x5f16fe39]; out 0xff, eax; call dword ptr [edx - 0x73]; 
0x00141614: inc dword ptr [ebx - 0x6272f314]; add byte ptr [ebx - 7], ch; call dword ptr [ebx - 0x18]; 
0x00173821: inc dword ptr [ebx - 0x62760f1d]; push 0x89ffffff; jecxz 0x173857; ret; 
0x000f234e: inc dword ptr [ebx - 0x6772f714]; and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x00094ff0: inc dword ptr [ebx - 0x69f00208]; ret; 
0x00124ee6: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00124ea5: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00133468: inc dword ptr [ebx - 0x6d72fe1d]; jl 0x133455; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a3148: inc dword ptr [ebx - 0x6d72fe1d]; jl 0xa3145; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a29d8: inc dword ptr [ebx - 0x6d72fe1d]; lodsb al, byte ptr [esi]; aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a3198: inc dword ptr [ebx - 0x6d72fe1d]; mov ebp, fs; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001333c8: inc dword ptr [ebx - 0x6d72fe1d]; pushfd; aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001a24f9: inc dword ptr [ebx - 0x71f0e008]; mov ebx, 0x89fffff8; ret; 
0x000f25a5: inc dword ptr [ebx - 0x72acf714]; adc byte ptr [edi + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x00087a98: inc dword ptr [ebx - 0x72aff314]; xor dword ptr [eax + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00087a24: inc dword ptr [ebx - 0x72aff314]; xor dword ptr [edi + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000a0937: inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x0013936b: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; 
0x0013936b: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; add al, ch; ret 0xf3b1; 
0x0016b60f: inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00183d61: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0016ae41: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x001225d6: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0016997f: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00171f52: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00126f8f: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x0015ec93: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xede9; 
0x0013908f: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [eax - 0x77]; ret; 
0x0017d988: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + eax*8 - 0x77]; ret 0xe283; 
0x000917fd: inc dword ptr [ebx - 0x7872f314]; adc byte ptr [edx - 0x17af0007], 0x83; idiv dh; jmp dword ptr [ebp - 0x39]; 
0x00141f00: inc dword ptr [ebx - 0x7872f714]; out 0x38, eax; stc; call dword ptr [eax - 0x73]; 
0x00115e65: inc dword ptr [ebx - 0x7972f314]; inc esp; mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x0005def6: inc dword ptr [ebx - 0x7a72f314]; cli; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x00176514: inc dword ptr [ebx - 0x7af0fdc8]; ret 0; 
0x0007385b: inc dword ptr [ebx - 0x7bf00002]; insd dword ptr es:[edi], dx; fdivr st(7); call dword ptr [eax - 0x7d]; 
0x00055cfa: inc dword ptr [ebx - 0x7bf00008]; add byte ptr [0xd2310000], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00067220: inc dword ptr [ebx - 0x7bf00008]; inc ecx; adc eax, 0xb60f0000; shr cl, 0xe2; sar bh, cl; call dword ptr [eax - 0x73]; 
0x0008f504: inc dword ptr [ebx - 0x7bf0fd01]; ret 0; 
0x00115bbb: inc dword ptr [ebx - 0x7c72f314]; aam 0xb1; stc; call dword ptr [eax - 0x18]; 
0x000398fc: inc dword ptr [ebx - 0x7c72f314]; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000658aa: inc dword ptr [ebx - 0x7c72f314]; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00115c0b: inc dword ptr [ebx - 0x7c72f314]; or al, 0xb2; stc; call dword ptr [eax - 0x18]; 
0x0008fa44: inc dword ptr [ebx - 0x7c72f33c]; lodsb al, byte ptr [esi]; jmp 0x8fa32; call dword ptr [eax + 0x56]; 
0x001702bc: inc dword ptr [ebx - 0x7c72f33c]; mov eax, 0x6afff9c8; add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x000f50c5: inc dword ptr [ebx - 0x7c72f714]; jl 0xf5124; stc; call dword ptr [eax + 0x55]; 
0x000f51ce: inc dword ptr [ebx - 0x7c72f714]; jo 0xf522d; stc; call dword ptr [eax + 0x55]; 
0x000d5ae5: inc dword ptr [ebx - 0x7c72f714]; lea edx, [ebp - 7]; call dword ptr [eax + 0x57]; 
0x000f530e: inc dword ptr [ebx - 0x7c72f714]; mov ss, word ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x000f540a: inc dword ptr [ebx - 0x7c72f714]; xchg esp, eax; push edi; stc; call dword ptr [eax + 0x55]; 
0x0008f64f: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00091840: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xb073; 
0x000ea775: inc dword ptr [ebx - 0x7f72f314]; and byte ptr [edi - 7], dl; call dword ptr [eax - 0x18]; 
0x00137306: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x00135079: inc dword ptr [ebx - 0xf76cb3c]; pop ebx; pop esi; ret; 
0x000766fd: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x00096e2d: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000e1198: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00133b4c: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x001326b7: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x1326c4; sar eax, 5; add esp, 0xc; ret; 
0x0019da61: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00040cfb: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x0019b41f: inc dword ptr [ecx + 0x33dbcc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019b35a: inc dword ptr [ecx + 0x33e81c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199acf: inc dword ptr [ecx + 0x35608c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001999c0: inc dword ptr [ecx + 0x35717c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001913f1: inc dword ptr [ecx + 0x3dc26c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001911ed: inc dword ptr [ecx + 0x3dd2ac3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001906f8: inc dword ptr [ecx + 0x3e81fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001905ee: inc dword ptr [ecx + 0x3e929c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001904e7: inc dword ptr [ecx + 0x3ea30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001903eb: inc dword ptr [ecx + 0x3eb2cc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001901dd: inc dword ptr [ecx + 0x3eb7ac3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190438: inc dword ptr [ecx + 0x3eb9fc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018f6f8: inc dword ptr [ecx + 0x3f65fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f5ee: inc dword ptr [ecx + 0x3f769c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f4e7: inc dword ptr [ecx + 0x3f870c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f3de: inc dword ptr [ecx + 0x3f979c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f20d: inc dword ptr [ecx + 0x3f98ac3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018f438: inc dword ptr [ecx + 0x3f9dfc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018f3ee: inc dword ptr [ecx + 0x3fa69c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e718: inc dword ptr [ecx + 0x4047fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e60e: inc dword ptr [ecx + 0x40589c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e507: inc dword ptr [ecx + 0x40690c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e3fe: inc dword ptr [ecx + 0x40799c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e2eb: inc dword ptr [ecx + 0x407ecc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e458: inc dword ptr [ecx + 0x407ffc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018e40e: inc dword ptr [ecx + 0x40889c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e037: inc dword ptr [ecx + 0x408e0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d99e: inc dword ptr [ecx + 0x40f79c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d980: inc dword ptr [ecx + 0x40f97c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d8e7: inc dword ptr [ecx + 0x41030c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d820: inc dword ptr [ecx + 0x410f7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d787: inc dword ptr [ecx + 0x41190c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d6c0: inc dword ptr [ecx + 0x41257c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d627: inc dword ptr [ecx + 0x412f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d560: inc dword ptr [ecx + 0x413b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d4c7: inc dword ptr [ecx + 0x41450c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d400: inc dword ptr [ecx + 0x41517c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d367: inc dword ptr [ecx + 0x415b0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d2a0: inc dword ptr [ecx + 0x41677c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d207: inc dword ptr [ecx + 0x41710c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d140: inc dword ptr [ecx + 0x417d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018d0a7: inc dword ptr [ecx + 0x41870c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cfe0: inc dword ptr [ecx + 0x41937c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cf47: inc dword ptr [ecx + 0x419d0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ce80: inc dword ptr [ecx + 0x41a97c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cde7: inc dword ptr [ecx + 0x41b30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cd20: inc dword ptr [ecx + 0x41bf7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cc87: inc dword ptr [ecx + 0x41c90c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cbc0: inc dword ptr [ecx + 0x41d57c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cb27: inc dword ptr [ecx + 0x41df0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ca60: inc dword ptr [ecx + 0x41eb7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c9c7: inc dword ptr [ecx + 0x41f50c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c900: inc dword ptr [ecx + 0x42017c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c867: inc dword ptr [ecx + 0x420b0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c7a0: inc dword ptr [ecx + 0x42177c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c707: inc dword ptr [ecx + 0x42210c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c640: inc dword ptr [ecx + 0x422d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c5a7: inc dword ptr [ecx + 0x42370c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c4df: inc dword ptr [ecx + 0x424f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c3da: inc dword ptr [ecx + 0x4253dc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c2d4: inc dword ptr [ecx + 0x42703c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c1cb: inc dword ptr [ecx + 0x4274cc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018bed7: inc dword ptr [ecx + 0x427c0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c215: inc dword ptr [ecx + 0x42882c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018b89e: inc dword ptr [ecx + 0x42df9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b880: inc dword ptr [ecx + 0x42e17c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b7e7: inc dword ptr [ecx + 0x42eb0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b730: inc dword ptr [ecx + 0x42f67c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b697: inc dword ptr [ecx + 0x43000c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b5e0: inc dword ptr [ecx + 0x430b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b547: inc dword ptr [ecx + 0x43150c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b490: inc dword ptr [ecx + 0x43207c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b3f7: inc dword ptr [ecx + 0x432a0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b340: inc dword ptr [ecx + 0x43357c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b2a7: inc dword ptr [ecx + 0x433f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b1f0: inc dword ptr [ecx + 0x434a7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b157: inc dword ptr [ecx + 0x43540c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b0a0: inc dword ptr [ecx + 0x435f7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018b007: inc dword ptr [ecx + 0x43690c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018af50: inc dword ptr [ecx + 0x43747c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018aeb7: inc dword ptr [ecx + 0x437e0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ae00: inc dword ptr [ecx + 0x43897c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ad67: inc dword ptr [ecx + 0x43930c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018acb0: inc dword ptr [ecx + 0x439e7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ac17: inc dword ptr [ecx + 0x43a80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ab60: inc dword ptr [ecx + 0x43b37c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018aac7: inc dword ptr [ecx + 0x43bd0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018aa10: inc dword ptr [ecx + 0x43c87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a977: inc dword ptr [ecx + 0x43d20c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a8c0: inc dword ptr [ecx + 0x43dd7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a827: inc dword ptr [ecx + 0x43e70c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a770: inc dword ptr [ecx + 0x43f27c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a6d7: inc dword ptr [ecx + 0x43fc0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a620: inc dword ptr [ecx + 0x44077c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a587: inc dword ptr [ecx + 0x44110c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a4cf: inc dword ptr [ecx + 0x44288c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a3ca: inc dword ptr [ecx + 0x442cdc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a2c4: inc dword ptr [ecx + 0x44493c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a1be: inc dword ptr [ecx + 0x444d9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189f37: inc dword ptr [ecx + 0x444e0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a223: inc dword ptr [ecx + 0x445f4c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018a1d4: inc dword ptr [ecx + 0x44683c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018989e: inc dword ptr [ecx + 0x44b79c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189880: inc dword ptr [ecx + 0x44b97c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001897e7: inc dword ptr [ecx + 0x44c30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189730: inc dword ptr [ecx + 0x44ce7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189697: inc dword ptr [ecx + 0x44d80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001895e0: inc dword ptr [ecx + 0x44e37c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189547: inc dword ptr [ecx + 0x44ed0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189490: inc dword ptr [ecx + 0x44f87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001893f7: inc dword ptr [ecx + 0x45020c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189340: inc dword ptr [ecx + 0x450d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001892a7: inc dword ptr [ecx + 0x45170c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001891f0: inc dword ptr [ecx + 0x45227c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189157: inc dword ptr [ecx + 0x452c0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001890a0: inc dword ptr [ecx + 0x45377c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00189007: inc dword ptr [ecx + 0x45410c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188f50: inc dword ptr [ecx + 0x454c7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188eb7: inc dword ptr [ecx + 0x45560c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188e00: inc dword ptr [ecx + 0x45617c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188d67: inc dword ptr [ecx + 0x456b0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188cb0: inc dword ptr [ecx + 0x45767c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188c17: inc dword ptr [ecx + 0x45800c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188b60: inc dword ptr [ecx + 0x458b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188ac7: inc dword ptr [ecx + 0x45950c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188a10: inc dword ptr [ecx + 0x45a07c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188977: inc dword ptr [ecx + 0x45aa0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001888c0: inc dword ptr [ecx + 0x45b57c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188827: inc dword ptr [ecx + 0x45bf0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188770: inc dword ptr [ecx + 0x45ca7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001886d7: inc dword ptr [ecx + 0x45d40c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188620: inc dword ptr [ecx + 0x45df7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188587: inc dword ptr [ecx + 0x45e90c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001884cf: inc dword ptr [ecx + 0x46008c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001883ca: inc dword ptr [ecx + 0x4604dc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001882c4: inc dword ptr [ecx + 0x46213c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001881be: inc dword ptr [ecx + 0x46259c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188223: inc dword ptr [ecx + 0x46374c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x001881d4: inc dword ptr [ecx + 0x46403c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00186fdc: inc dword ptr [ecx + 0x4723bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186f2c: inc dword ptr [ecx + 0x472ebc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186e44: inc dword ptr [ecx + 0x47353c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186a82: inc dword ptr [ecx + 0x47515c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001869c6: inc dword ptr [ecx + 0x475d1c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018696a: inc dword ptr [ecx + 0x4762dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001868ac: inc dword ptr [ecx + 0x476ebc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001867c4: inc dword ptr [ecx + 0x47753c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000f2812: inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0017ebe7: inc dword ptr [ecx + 0xb224cc6]; add byte ptr [ebx - 0x77], dl; ret; 
0x000f2853: inc dword ptr [ecx - 0x2ff42f06]; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x001a0adb: inc dword ptr [ecx - 0x8000019]; dec dword ptr [ebp - 0x728fdb94]; je 0x1a0b0d; jl 0x1a0a74; ret; 
0x0019da51: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000bb116: inc dword ptr [ecx]; clc; pop edi; ret; 
0x000bb153: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x00121fae: inc dword ptr [ecx]; fcom dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x4e], dh; stc; call dword ptr [eax + 0x6a]; 
0x000a0678: inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000dd3b9: inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000428c6: inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x00037d5d: inc dword ptr [ecx]; fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x00031d41: inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000f29f8: inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000fffc1: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00103910: inc dword ptr [ecx]; ja 0x10391d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00125247: inc dword ptr [ecx]; je 0x125280; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001265c7: inc dword ptr [ecx]; je 0x126600; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00058e37: inc dword ptr [ecx]; ret 0x5589; 
0x00066743: inc dword ptr [ecx]; ret 0x858b; 
0x000549b6: inc dword ptr [ecx]; ret 0xbe0f; 
0x000384ff: inc dword ptr [ecx]; ret 0xd089; 
0x00053901: inc dword ptr [ecx]; ret 0xd389; 
0x00066370: inc dword ptr [ecx]; ret 0xd801; 
0x00064268: inc dword ptr [ecx]; ret 0xf001; 
0x00067e81: inc dword ptr [ecx]; ret 0xf9e9; 
0x00031109: inc dword ptr [ecx]; ret; 
0x00037f77: inc dword ptr [ecx]; ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x000ee574: inc dword ptr [ecx]; ror byte ptr [ecx - 0x4977b], 1; inc dword ptr [ecx]; ret; 
0x000bc897: inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0018e45b: inc dword ptr [edi]; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019da71: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000ee0d3: inc eax; adc al, 0x83; in al, dx; or al, 0x89; test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x00171cd9: inc eax; adc al, 4; mov eax, 1; ret; 
0x0005783b: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x00085bdd: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0019ee9c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x0007cf44: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x000879a4: inc eax; adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x0017ec7c: inc eax; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0019ec6d: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0008aa8f: inc eax; add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x0018a624: inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153f4b: inc eax; add al, 0x3c; jg 0x153f5f; inc esp; ret 0x8489; 
0x0011b46f: inc eax; add al, 0x5b; ret; 
0x0019efaa: inc eax; add al, 0x5f; ret; 
0x00170931: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00026ce1: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x001481e1: inc eax; add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x000e8871: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00041e2f: inc eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; sub eax, ecx; ret; 
0x0004c79f: inc eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x850f; 
0x000f27ec: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0012c185: inc eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x000340f8: inc eax; add byte ptr [eax], al; ret; 
0x0006ce1b: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006c1c3: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006d2d1: inc eax; add dword ptr [ebx - 0x16afdb94], ecx; sal ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0003520d: inc eax; add dword ptr [ecx + 0x418dbc45], ecx; sbb al, 0x89; ret 0x25; 
0x000bb055: inc eax; add edx, eax; jl 0xbb090; add eax, ecx; ret; 
0x000bc464: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00140813: inc eax; add esp, 0x118; pop ebx; ret; 
0x000f2c3f: inc eax; add esp, 0x18; pop ebx; ret; 
0x00140eeb: inc eax; add esp, 0x1c; ret; 
0x0007b4d1: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034234: inc eax; and al, 0x8b; add al, 0x90; ret; 
0x000342c5: inc eax; and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000d7017: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3e6c8a], cl; add byte ptr [ebp - 0x15df736e], cl; call dword ptr [ecx + 0x52]; 
0x0011b4ba: inc eax; and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x000a3dcd: inc eax; call 0x754c34d2; add cl, byte ptr [ebp - 0x1750636e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00024e03: inc eax; call dword ptr [ebp]; 
0x0002a2ba: inc eax; call eax; 
0x00024da1: inc eax; call ecx; 
0x00024d4a: inc eax; call esi; 
0x0018991b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b91b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0012d160: inc eax; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0011b491: inc eax; cmp al, 0x5b; ret; 
0x0003449d: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x000bc68f: inc eax; cmp cl, 0; je 0xbc696; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0002703c: inc eax; cmp edx, dword ptr [0x241c8900]; call edi; 
0x000ba70d: inc eax; das; or al, 0; add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002623c: inc eax; dec ecx; adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0012ac0e: inc eax; dec esp; call 0x12aad0; add esp, 4; ret; 
0x0017d1f9: inc eax; dec esp; ret; 
0x000ad45c: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00085ef8: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000bc463: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000bc462: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000415ef: inc eax; inc eax; ret; 
0x000a3287: inc eax; ja 0xa3291; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000a32b7: inc eax; ja 0xa32c1; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x0011d4d1: inc eax; je 0x11d45d; push esi; add al, 0x89; ret 0xeac1; 
0x0011d9c1: inc eax; je 0x11d94d; push esi; add al, 0x89; ret 0xeac1; 
0x0011da36: inc eax; je 0x11d9c2; push esi; add al, 0x89; ret 0xeac1; 
0x0011db8e: inc eax; je 0x11db1a; push esi; add al, 0x89; ret 0xeac1; 
0x0011dcc9: inc eax; je 0x11dc55; push esi; add al, 0x89; ret 0xeac1; 
0x0011dd3a: inc eax; je 0x11dcc6; push esi; add al, 0x89; ret 0xeac1; 
0x0011dee2: inc eax; je 0x11de6e; push esi; add al, 0x89; ret 0xeac1; 
0x0011e2d0: inc eax; je 0x11e25c; push esi; add al, 0x89; ret 0xeac1; 
0x0008cf9b: inc eax; je 0x8d032; xor edx, edx; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0014b842: inc eax; jl 0x14b845; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00189aae: inc eax; jmp dword ptr [esi - 0x77]; 
0x0019286d: inc eax; jne 0x1928e0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019d00c: inc eax; jne 0x19d074; add eax, 7; ret; 
0x0019d04c: inc eax; jne 0x19d094; add eax, 0xf; ret; 
0x0019d325: inc eax; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x0019d378: inc eax; jne 0x19d460; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019d299: inc eax; jne 0x19d470; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019d1f6: inc eax; jne 0x19d470; lea eax, [edi + 7]; pop edi; ret; 
0x0019dce1: inc eax; jne 0x19de10; lea eax, [edi + 7]; pop edi; ret; 
0x0019dd34: inc eax; jne 0x19de70; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019e359: inc eax; jne 0x19e400; test al, 0x20; jne 0x19e3f0; lea eax, [ecx + 4]; ret; 
0x0019e9b1: inc eax; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0019ea04: inc eax; jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x0019ede4: inc eax; jne 0x19f199; add eax, 7; pop edi; ret; 
0x0019ee34: inc eax; jne 0x19f1c1; add eax, 0xf; pop edi; ret; 
0x0008da2f: inc eax; jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00099625: inc eax; jne 0x99650; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00118e5d: inc eax; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000cb8a1: inc eax; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000d61a2: inc eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0014e199: inc eax; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00127b5c: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001283e3: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dfa46: inc eax; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00089dfe: inc eax; mov eax, dword ptr [ebp]; mov ebx, dword ptr [ebp + 4]; mov ecx, dword ptr [ebp + 8]; mov edx, dword ptr [ebp + 0xc]; call dword ptr gs:[0x10]; 
0x000ba685: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00163f3c: inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00060b71: inc eax; mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000df6dc: inc eax; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099b54: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009987c: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad5: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099802: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0011718d: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001448f9: inc eax; or al, 0x39; inc ebx; or al, 0x75; ret; 
0x00131dee: inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00170fe1: inc eax; or al, 0x5e; pop edi; jmp eax; 
0x0019f006: inc eax; or al, 0x5f; ret; 
0x0007d118: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x00118a89: inc eax; or byte ptr [0x100f], ah; ret; 
0x00140732: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005750d: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0008a43d: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00057083: inc eax; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x00131e34: inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000e8ec9: inc eax; or byte ptr [ecx - 0x5d37b], cl; push edi; sar byte ptr [ecx], 1; ret; 
0x000efbf9: inc eax; or byte ptr [ecx - 0x5e37b], cl; push edi; sar byte ptr [ecx], 1; ret; 
0x00147855: inc eax; or byte ptr [ecx], al; je 0x14787d; add esp, 0xc; ret; 
0x00060e83: inc eax; or byte ptr [edi], cl; xchg esp, eax; ret; 
0x0017103e: inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0008a4dd: inc eax; or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000b2cbc: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017d299: inc eax; pop eax; ret; 
0x001886da: inc eax; pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bc10c: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0003a6a3: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003a631: inc eax; pop ebx; pop esi; pop edi; ret; 
0x000b4de3: inc eax; pop edi; pop esi; pop ebx; ret; 
0x000bb957: inc eax; pop edi; pop esi; ret; 
0x000a3f7c: inc eax; pop edi; ret; 
0x0019ef15: inc eax; pop es; pop edi; ret; 
0x0017d229: inc eax; pop esp; ret; 
0x0009c6f4: inc eax; popfd; stc; call dword ptr [eax - 0x18]; 
0x0019f026: inc eax; push cs; pop edi; ret; 
0x0012d0ec: inc eax; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024dff: inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024d9d: inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024d46: inc eax; push dword ptr [esp + 0x40]; call esi; 
0x000bcb01: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x0007d478: inc eax; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0017d219: inc eax; push eax; ret; 
0x000c0372: inc eax; push ebp; call esi; 
0x0009b1de: inc eax; push ecx; stc; call dword ptr [eax - 0x18]; 
0x000fcb4d: inc eax; push es; adc byte ptr [edi + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0019efc6: inc eax; push es; pop edi; ret; 
0x000328e1: inc eax; push esp; ret; 
0x00033cf5: inc eax; ret; 
0x0009c62f: inc eax; sahf; stc; call dword ptr [eax - 0x18]; 
0x00088825: inc eax; sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x00131e1c: inc eax; sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00087f54: inc eax; sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00153791: inc eax; sbb al, 0x83; ret; 
0x0016c019: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00163b88: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00164f85: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000e0bf5: inc eax; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00141b3d: inc eax; sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x0012eab3: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x0012fabb: inc eax; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x655c978d; stc; call dword ptr [edx + 0x50]; 
0x000e9633: inc eax; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax + 0x68]; 
0x0003a579: inc eax; shr eax, 0x1f; ret; 
0x0005a45f: inc eax; stc; call dword ptr [eax + 0x57]; 
0x0005a1d3: inc eax; stc; call dword ptr [eax - 0x18]; 
0x00169775: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000341f4: inc eax; sub al, 0x8b; add al, 0x90; ret; 
0x00034295: inc eax; sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000bc695: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0008273f: inc eax; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00172b43: inc eax; test al, 0; add byte ptr [eax - 0x73], dl; cmp edi, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x000bb7aa: inc eax; test ecx, 0xff0000; je 0xbb7b4; inc eax; pop edi; ret; 
0x0003fdd2: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003445d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003443d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003441d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0003439d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000343dd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0003433d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000343bd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0003437d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x000342fd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0003435d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x000343fd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0003431d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0016f8d5: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000f4805: inc eax; xor byte ptr [ecx], bh; ret; 
0x0008a873: inc eax; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000920ca: inc eax; xor eax, eax; ret; 
0x000a750a: inc ebp; aam 0x31; fucomi st(3); or al, 0x83; ret; 
0x000e1b34: inc ebp; aam 0x56; call eax; 
0x000a8e38: inc ebp; aam 0x83; ret 0x3901; 
0x000a8792: inc ebp; aam 0x83; ret 0xf01; 
0x00027866: inc ebp; aam 0x89; ret; 
0x000cbd9a: inc ebp; aam 1; ret 0x1689; 
0x000cbb20: inc ebp; aam 1; ret 0x5389; 
0x00089e22: inc ebp; adc al, 0x39; ret 0x1074; 
0x000bbbf4: inc ebp; adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x00121c3c: inc ebp; adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013a29e: inc ebp; adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00032915: inc ebp; adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0018a227: inc ebp; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00074067: inc ebp; add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x000f7d29: inc ebp; add al, 0x83; ret; 
0x000e36bd: inc ebp; add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x000e374c: inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000d491e: inc ebp; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x000df40e: inc ebp; add byte ptr [eax], al; add cl, ch; xchg ebp, eax; out 0xff, eax; call dword ptr [eax + 0x57]; 
0x0011cb89: inc ebp; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011cc1b: inc ebp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0011cd44: inc ebp; add byte ptr [eax], al; push eax; call 0x11ce50; add esp, 0x1c; ret; 
0x001073b4: inc ebp; add byte ptr [ebp - 0x2b7bf040], al; add eax, 0x1bf0000; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00163dea: inc ebp; add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x000a1356: inc ebp; add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x00163f51: inc ebp; add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0011022e: inc ebp; add byte ptr [ecx - 0x17acfbba], cl; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0010cfce: inc ebp; add byte ptr [ecx - 0x17acfbba], cl; pop es; idiv dl; jmp dword ptr [esi + 3]; 
0x0010e8fe: inc ebp; add byte ptr [ecx - 0x17acfbba], cl; xlatb; fdiv st(2), st(0); jmp dword ptr [esi + 3]; 
0x0004b88c: inc ebp; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0xc483; 
0x0004b55c: inc ebp; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0xe283; 
0x0013c828: inc ebp; add byte ptr [ecx], bh; ret 0x1274; 
0x001290ec: inc ebp; add eax, 0x45c58100; jge 0x129104; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0019d04e: inc ebp; add eax, 0xf; ret; 
0x00137dd5: inc ebp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008b15c: inc ebp; and byte ptr [ebx + 0x758d0cec], al; or cl, al; call 0x244d3a6c; adc al, 0x89; ret; 
0x0013e391: inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013c6c7: inc ebp; call 0x10afb6; jmp dword ptr [esi - 0x70]; 
0x000399d7: inc ebp; call 0x2b9c6; jmp dword ptr [esi - 0x70]; 
0x0016c5b0: inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0016c561: inc ebp; cmp al, 0x5a; push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x0016c54c: inc ebp; cmp al, 0xff; jne 0x16c5a1; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x00077bc1: inc ebp; cmp byte ptr [ecx], bh; ret; 
0x0011ea30: inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0013ac2d: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0017cad6: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x000f3462: inc ebp; fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000278e8: inc ebp; fmul qword ptr [ebp - 0x20af737d]; call dword ptr [eax - 0x73]; 
0x001555a7: inc ebp; in eax, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0014ebf5: inc ebp; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x00042fdc: inc ebp; inc byte ptr [ebx - 0x6bf00220]; ret 0xfd83; 
0x00094fef: inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001290f1: inc ebp; jge 0x129104; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000dc7fc: inc ebp; jmp dword ptr [esi - 0x70]; 
0x0015c28a: inc ebp; jno 0x15c286; call dword ptr [eax - 0x18]; 
0x00122c65: inc ebp; les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000a8298: inc ebp; les ecx, ptr [ebx - 0x7bf03bbb]; ret; 
0x0016125e: inc ebp; les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; aam 0x71; stc; call dword ptr [eax + 0x57]; 
0x0003502f: inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x0008067d: inc ebp; les edi, ptr [ecx]; ret 0x850f; 
0x00034fe1: inc ebp; mov ah, 0x39; ret 0x820f; 
0x000983d7: inc ebp; mov ah, 0x89; ret 0x458b; 
0x0002785c: inc ebp; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x0008cf2c: inc ebp; mov al, 0x83; in al, dx; or al, 0x8d; adc byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00035b91: inc ebp; mov al, 0x8d; cmp al, 0x38; stc; call dword ptr [eax - 0x73]; 
0x000cb9c0: inc ebp; mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0005a592: inc ebp; mov eax, 0xfff977e9; call dword ptr [eax + 0x52]; 
0x0007c8a6: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x0012dd01: inc ebp; mov esp, 0x64ee808d; stc; call dword ptr [eax - 1]; 
0x0012dcb0: inc ebp; mov esp, 0x650d808d; stc; call dword ptr [eax - 1]; 
0x00035210: inc ebp; mov esp, 0x891c418d; ret 0x25; 
0x000cbac2: inc ebp; mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x00179faf: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0016f9cd: inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00132fe9: inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x00092641: inc ebp; or al, 0x89; sal dh, 1; ret 0x7501; 
0x0016f9a4: inc ebp; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00121c99: inc ebp; or byte ptr [ebx + 0x3a496], cl; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x0010e0d1: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000e3635: inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005853a: inc ebp; or byte ptr [ecx], bh; ret; 
0x0005f01a: inc ebp; or eax, 0x8901e683; ret; 
0x00066606: inc ebp; or eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0019a4aa: inc ebp; pop ebx; ret; 
0x00097684: inc ebp; ret 0x2ec3; 
0x000288e1: inc ebp; ret 0x4489; 
0x00041d6f: inc ebp; ret 0x450f; 
0x0007aea6: inc ebp; ret 0x4689; 
0x000dfd26: inc ebp; ret 0x548b; 
0x00042244: inc ebp; ret 0x66c3; 
0x000855b2: inc ebp; ret 0x689; 
0x0013b255: inc ebp; ret 0x8588; 
0x0008a89a: inc ebp; ret 0x8dc3; 
0x000f279c: inc ebp; ret 0x90c3; 
0x000a29e3: inc ebp; ret 0xc35b; 
0x00044737: inc ebp; ret 0xc483; 
0x00125704: inc ebp; ret 0xd231; 
0x00062629: inc ebp; ret 0xec83; 
0x0003f9f4: inc ebp; ret; 
0x00161264: inc ebp; rol byte ptr [ebx - 0x7f72f714], 1; aam 0x71; stc; call dword ptr [eax + 0x57]; 
0x00092212: inc ebp; rol byte ptr [ecx], 1; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + edx - 0x1a], ebx; call dword ptr [eax + 0x56]; 
0x00025a47: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00041c86: inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00161515: inc ebp; ror byte ptr [edi], 1; mov bh, 0x80; ror cl, cl; stc; jmp dword ptr [esi - 0x77]; 
0x00080c9e: inc ebp; salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x0013e388: inc ebp; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0008cb05: inc ebp; sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0017329f: inc ebp; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0003971e: inc ebp; stc; call dword ptr [eax + 0x53]; 
0x0010139c: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x001013b1: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0009b610: inc ebx; adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x5a89405e], cl; or al, 0x89; ret 0xca83; 
0x0007f4d6: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x0012cfe8: inc ebx; adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00165484: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00080c16: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0009179d: inc ebx; adc al, 0x83; ret; 
0x00147045: inc ebx; adc al, 0x89; ret 0xc985; 
0x0008359a: inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00163dd4: inc ebx; adc bh, bh; je 0x163dfd; adc al, 0x56; call dword ptr [eax + 4]; 
0x001665e0: inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0016656a: inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00039a8b: inc ebx; adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00058025: inc ebx; adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x00163ecf: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x001a0f52: inc ebx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1473; 
0x0012491b: inc ebx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe73; 
0x00103308: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0014c0f4: inc ebx; add al, 0x50; call edi; 
0x001645d7: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016a464: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00164af7: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x000a0cec: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00164ac1: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00034da2: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001646fe: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00030d52: inc ebx; add al, 0x83; ret; 
0x000ffc39: inc ebx; add al, 0x89; ret 0xe283; 
0x0017a385: inc ebx; add al, 0x89; ret; 
0x0012e8d3: inc ebx; add al, 0x8b; inc esi; adc al, 0x83; ret; 
0x00148724: inc ebx; add al, 0x8d; xchg esp, ebx; ja 0x14871c; call dword ptr [ebx + 0x50]; 
0x0016640e: inc ebx; add al, 0xff; je 0x166437; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016645c: inc ebx; add al, 0xff; je 0x166485; sbb al, 0x53; call dword ptr [eax]; 
0x00137b52: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00183aa9: inc ebx; add bl, bh; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x6508b79]; call dword ptr [eax - 0x73]; 
0x0008cbb8: inc ebx; add dword ptr [eax], eax; add byte ptr [ebp - 0x6b12c79], cl; call dword ptr [eax - 0x73]; 
0x00029224: inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x000f2230: inc ebx; add esp, 0x34; pop ebx; pop esi; ret; 
0x00088b6c: inc ebx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0013143a: inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x000a0c0e: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa0c3d; call eax; 
0x0008f958: inc ebx; cli; dec dword ptr [ebp - 0x683937f]; call dword ptr [eax - 0x73]; 
0x0008f996: inc ebx; cli; jmp dword ptr [esi - 0x70]; 
0x00025f39: inc ebx; dec esp; adc eax, 0x86f0300; mov dword ptr [esp], ebp; call esi; 
0x00120112: inc ebx; inc dword ptr [ebx + 0x277602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0005631c: inc ebx; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00134489: inc ebx; loope 0x13448b; jmp dword ptr [esi - 0x70]; 
0x000e884e: inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000e88fe: inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x00126e7e: inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00126cee: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00126d0e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0010297e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010299e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001269ae: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126d2e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x001219ce: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0010b48e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001266ee: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00123b4e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0018027f: inc ebx; movmskps ebp, xmm0; pop ecx; ret; 
0x00163ec8: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x000896ae: inc ebx; or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001448fc: inc ebx; or al, 0x75; ret; 
0x00087ed3: inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017a121: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x000882da: inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0016555f: inc ebx; or al, 0x83; ret; 
0x00096d01: inc ebx; or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x0008f6a7: inc ebx; or al, 0x89; ret 0xe281; 
0x0016ec74: inc ebx; or bh, bh; je 0x16ec9d; adc al, 0x53; call dword ptr [eax]; 
0x0016ee63: inc ebx; or bh, bh; je 0x16ee8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0008832b: inc ebx; or bh, bh; je 0x88354; xor byte ptr [edx + 0x51], dl; call eax; 
0x0008f6ee: inc ebx; or byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x0013e76e: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00140075: inc ebx; or byte ptr [eax + 1], bh; add esp, 4; pop ebx; pop esi; ret; 
0x0009229d: inc ebx; or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x922ad; call dword ptr [ebx]; 
0x00087df9: inc ebx; or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00080c10: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000885d3: inc ebx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0007ffd6: inc ebx; or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00087e11: inc ebx; or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x001041c4: inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x001689e1: inc ebx; or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00027eec: inc ebx; or byte ptr [edi], cl; mov bh, 0x85; or al, 0x7f; stc; jmp dword ptr [esi - 0x77]; 
0x00104e3e: inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x0017ed64: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0016baaa: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016bac6: inc ebx; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00041546: inc ebx; push es; pop ebx; ret; 
0x00036ecd: inc ebx; ret 0x1c8d; 
0x000a1efd: inc ebx; ret 0x5e5b; 
0x00136c80: inc ebx; ret 0xc289; 
0x000e2fce: inc ebx; ret 0xc383; 
0x0013d683: inc ebx; ret 0xc589; 
0x0004a777: inc ebx; ret 0xd029; 
0x000d4925: inc ebx; ret 0xe883; 
0x00039f1e: inc ebx; ret 0xec83; 
0x0017ac58: inc ebx; ret 0xfa83; 
0x00182899: inc ebx; ret 0xfff6; 
0x00036e90: inc ebx; ret; 
0x00136bdf: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00136a8d: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x124245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00136fc9: inc ebx; ror byte ptr [ecx + 0x39d829d0], 1; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000a8fa8: inc ebx; sbb al, 0x83; ret; 
0x0005869a: inc ebx; sbb byte ptr [ebx - 0x14f3dbac], cl; mov bh, 0x8d; xchg dword ptr [ecx + ecx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0003bd95: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000850ae: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00092afc: inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000fb818: inc ebx; shr byte ptr [ecx], 1; ret 0x6a52; 
0x0004772d: inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0012ad76: inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a264e: inc ebx; shr byte ptr [ecx], 1; ret 0xf001; 
0x0009f986: inc ebx; stc; dec dword ptr [ebp - 0x6587b79]; call dword ptr [eax - 0x73]; 
0x00129b6c: inc ebx; sub al, 0x89; ret 0xc031; 
0x000a0cb5: inc ebx; sub byte ptr [ecx], al; jne 0xa0c90; sub esp, 0xc; push eax; call edx; 
0x0002826e: inc ebx; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0007ba0f: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00129433: inc ebx; xor byte ptr [ecx - 0x76bbdbac], cl; ret 0xc031; 
0x001446e9: inc ebx; xor eax, 0xc4830000; adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0012459b: inc ebx; xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00089a82: inc ecx; adc al, 0x39; ret 0x1074; 
0x0003189c: inc ecx; adc al, 0x39; ret 0x4d0f; 
0x0006618c: inc ecx; adc al, byte ptr [eax]; add dh, al; test dword ptr [edx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x000813a6: inc ecx; adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x00096fa6: inc ecx; adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x00096f2a: inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x0007d01d: inc ecx; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x0016e7c4: inc ecx; adc byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x00067226: inc ecx; adc eax, 0xb60f0000; shr cl, 0xe2; sar bh, cl; call dword ptr [eax - 0x73]; 
0x001a1276: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1073; 
0x001a6ae9: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1673; 
0x001a6e2e: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1873; 
0x0011f6b2: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x00052a2d: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xe73; 
0x0018a58b: inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000af2a6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000af3e6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000aaed6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000ab006: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0002fcfc: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0005777e: inc ecx; add byte ptr [eax - 0x73], dl; or ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x000e8851: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x001703e6: inc ecx; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000f28d0: inc ecx; add byte ptr [esi + edx*2 + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000aafd7: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000b961a: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000aaeb7: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x00078abc: inc ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000f3101: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000b3bcb: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000b973e: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000af2c5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000af3f5: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000ab015: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000b9688: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000aaee5: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000a2645: inc ecx; add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x000e20a0: inc ecx; and al, 0xf4; jmp dword ptr [esi - 0x70]; 
0x0018b3f4: inc ecx; and bh, bh; inc dword ptr [ecx + 0x432a0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000424f8: inc ecx; and byte ptr [ebx + 0x5e], bl; ret; 
0x00031891: inc ecx; and byte ptr [ecx], bh; ret 0x4c0f; 
0x001198f3: inc ecx; clc; pop ds; add esp, 0xc; ret; 
0x0018e3db: inc ecx; cli; jmp dword ptr [esi - 0x70]; 
0x00125c2c: inc ecx; dec ebp; push esi; push ebx; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0012eddb: inc ecx; dec edi; lock dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x000e894f: inc ecx; inc dword ptr [ebp - 0x7cc48b37]; ret 0x8901; 
0x000bc39e: inc ecx; inc edx; test al, al; jne 0xbc398; xor eax, eax; ret; 
0x0015d52b: inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x000a5061: inc ecx; jbe 0xa5074; cmove eax, edx; ret; 
0x000a5f61: inc ecx; jbe 0xa5f74; cmove eax, edx; ret; 
0x000a6111: inc ecx; jbe 0xa6124; cmove eax, edx; ret; 
0x000c2cca: inc ecx; jmp 0xc2ccc; call dword ptr [eax - 1]; 
0x0009ba0e: inc ecx; jmp dword ptr [ecx]; 
0x000aa669: inc ecx; jmp dword ptr [esi + 0xf]; 
0x000a3301: inc ecx; jne 0xa3306; lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x000a3341: inc ecx; jne 0xa3346; lea edx, [edx - 0x174704]; cmove eax, edx; ret; 
0x000a3dd1: inc ecx; jne 0xa3dd6; lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x000a5031: inc ecx; jne 0xa5036; lea edx, [edx - 0x174b34]; cmove eax, edx; ret; 
0x000a5e31: inc ecx; jne 0xa5e36; lea edx, [edx - 0x176704]; cmove eax, edx; ret; 
0x000a5eb1: inc ecx; jne 0xa5eb6; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000bf301: inc ecx; jne 0xbf306; cmove eax, edx; ret; 
0x000a5f31: inc ecx; jnp 0xa5f38; cmove eax, edx; ret; 
0x000be501: inc ecx; jnp 0xbe508; cmove eax, edx; ret; 
0x000be561: inc ecx; jnp 0xbe568; cmove eax, edx; ret; 
0x000bf4d1: inc ecx; jnp 0xbf4d8; cmove eax, edx; ret; 
0x000c0151: inc ecx; jnp 0xc0158; cmove eax, edx; ret; 
0x00141d11: inc ecx; js 0x141cff; ret 0x768d; 
0x00080b59: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0011b7a3: inc ecx; or al, 0x39; fmul dword ptr [edi]; dec edi; ret; 
0x0017193e: inc ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x000b266b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b96bc: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b250b: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000bf936: inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000b26cb: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b971c: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b256b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000fe7b7: inc ecx; or byte ptr [ecx], bh; ret 0x474; 
0x00172c76: inc ecx; or byte ptr [ecx], bh; ret 0x4c75; 
0x000bf93c: inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000b3a9a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d8b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b247a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b274b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000af415: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab035: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000af475: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab095: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af436: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000ab056: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b3b8b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3ceb: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b254b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b26ab: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3c0b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d6b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25cb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b272b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000af455: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab075: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000acf47: inc ecx; pop es; pop ebx; ret; 
0x0019e411: inc ecx; pop es; ret; 
0x0019e461: inc ecx; push cs; ret; 
0x000b3beb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d4b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25ab: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b270b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000acf37: inc ecx; push es; pop ebx; ret; 
0x0019e401: inc ecx; push es; ret; 
0x00035213: inc ecx; sbb al, 0x89; ret 0x25; 
0x00031899: inc ecx; sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x0005ce52: inc ecx; stc; call dword ptr [eax + 0x6a]; 
0x0005defd: inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0005d0f0: inc ecx; stc; call dword ptr [ebx + 0x50]; 
0x0005cf99: inc ecx; stc; call dword ptr [ecx + 0x50]; 
0x0005d1fd: inc ecx; stc; call dword ptr [esi - 0x77]; 
0x000a0935: inc ecx; stc; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x0018af53: inc edi; aaa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012c82b: inc edi; adc al, 0x29; ret 0x478b; 
0x00111a55: inc edi; adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00111cd1: inc edi; adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0007b585: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x000b49ff: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x00039dc8: inc edi; adc al, 0x89; ret; 
0x0010c6c7: inc edi; adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b49c1: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb99a: inc edi; adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b4989: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007b6e5: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000b499f: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b49df: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0009afc7: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x00073d57: inc edi; add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0016e0a3: inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0016e0b1: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000b4825: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x0019d3d1: inc edi; add al, 0x5f; ret; 
0x001658d1: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00031280: inc edi; add al, 0x8b; push edi; or byte ptr [ecx], al; ret 0xd139; 
0x0017ce75: inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00129659: inc edi; add al, 0xb; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x00039dff: inc edi; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x00051188: inc edi; add al, 0xf; xchg edx, eax; ret; 
0x000b47f7: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0017221f: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0012a8c3: inc edi; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0012a8bb: inc edi; add byte ptr [eax], al; jae 0x12a8cb; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x0015e925: inc edi; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000b47e5: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00099d48: inc edi; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000b480d: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00160de6: inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x00140973: inc edi; add esp, 0x118; pop ebx; ret; 
0x0010af78: inc edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003c6ce: inc edi; add esp, 0x94; pop ebx; pop edi; ret; 
0x000b4b93: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000321f1: inc edi; btc dword ptr [ecx], eax; add byte ptr [eax], al; add cl, ch; ret; 
0x000eadbc: inc edi; call dword ptr [edi - 0x75]; 
0x000b3543: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x0019d813: inc edi; clc; pop edi; ret; 
0x0019d83c: inc edi; cld; pop edi; ret; 
0x0019d8b1: inc edi; cli; pop edi; ret; 
0x0019d871: inc edi; cmc; pop edi; ret; 
0x0009e2ce: inc edi; cmp byte ptr [ebp + 0x92c9b], cl; add byte ptr [ecx], bh; fisttp word ptr [edi]; xchg ebp, eax; ret; 
0x001496d5: inc edi; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00185ea5: inc edi; fdiv st(2), st(0); jmp dword ptr [esi - 0x70]; 
0x0019d7e9: inc edi; hlt; pop edi; ret; 
0x000b4de2: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x00101b4a: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0019d841: inc edi; int1; pop edi; ret; 
0x001596ec: inc edi; jo 0x1596e8; call dword ptr [eax - 0x18]; 
0x000b4973: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00099b50: inc edi; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000b490f: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x0019d441: inc edi; or al, 0x5f; ret; 
0x0013ae72: inc edi; or al, 0x75; ret 0x458b; 
0x0010b7d5: inc edi; or al, 0x89; inc esp; and al, 0x38; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00090a31: inc edi; or al, 0x89; ret 0xe283; 
0x00093748: inc edi; or al, 0x89; sal dh, 1; ret 0x7501; 
0x000b48d1: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00166019: inc edi; or byte ptr [ebp - 1], dl; jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x0016605c: inc edi; or byte ptr [ebp - 1], dl; jbe 0x16606e; push edi; call dword ptr [eax + 0x10]; 
0x0011d02e: inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000e9f59: inc edi; or byte ptr [ecx], bh; ret 0x830f; 
0x001036f7: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000b4899: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b48af: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b48ef: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0015498d: inc edi; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b4b73: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x0019f678: inc edi; pop edi; pop esi; pop ebx; ret; 
0x0019d851: inc edi; pop edi; ret; 
0x000b487b: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0019d1fe: inc edi; pop es; pop edi; ret; 
0x000b4a63: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000b4953: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0019d461: inc edi; push cs; pop edi; ret; 
0x000b4b53: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x0016c006: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000b35b7: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x0019d3f1: inc edi; push es; pop edi; ret; 
0x000b4a43: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x00093be0: inc edi; ret 0x2ec3; 
0x000a0190: inc edi; ret 0x508d; 
0x000a94b5: inc edi; ret 0x5350; 
0x001160c1: inc edi; ret 0x548b; 
0x0011606a: inc edi; ret 0x66c3; 
0x000943b5: inc edi; ret 0x948b; 
0x0009df54: inc edi; ret 0xc083; 
0x00134d90: inc edi; ret 0xf983; 
0x00134e7c: inc edi; ret 0xfb83; 
0x001913ee: inc edi; ret 0xfffe; 
0x0009aa27: inc edi; ror dword ptr [eax + 0x3c1882], 0; ret; 
0x000e1455: inc edi; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000b4b19: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0012fbda: inc edi; sbb al, 0x89; ret 0x572b; 
0x00100c84: inc edi; sbb al, 0x89; ret 0xc085; 
0x00101717: inc edi; sbb al, 0x89; ret 0xeac0; 
0x000b4acb: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0012f366: inc edi; sbb byte ptr [ebp - 0x2f7bf037], al; or al, byte ptr [eax]; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x0012cbca: inc edi; sbb byte ptr [ecx + 0x29c529da], cl; ret 0x6c01; 
0x000b4a83: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000274c3: inc edi; sbb byte ptr [edi], cl; mov bh, 0x81; cld; jle 0x274c4; jmp dword ptr [esi - 0x77]; 
0x000b4aa9: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b4af9: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0019d8a1: inc edi; stc; pop edi; ret; 
0x000e7e00: inc edi; std; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0019d8d1: inc edi; std; pop edi; ret; 
0x0019d8c1: inc edi; sti; pop edi; ret; 
0x001491d5: inc edi; stosd dword ptr es:[edi], eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000fb012: inc edi; sub byte ptr [ebp - 0x76efdb84], cl; ret 0x4489; 
0x000fffc3: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0012a213: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0019c813: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00096fa9: inc edx; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000b106e: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x000268d7: inc edx; adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0010bc9f: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0018a3ce: inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001716f9: inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00170c69: inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x000a59db: inc edx; add al, 0x5b; pop esi; ret; 
0x000b0fc2: inc edx; add al, 0x5f; pop ebx; ret; 
0x000af29b: inc edx; add al, 0x5f; ret; 
0x000b3cc8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b2688: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000c04b1: inc edx; add al, 0x83; ret 0x8504; 
0x0006f328: inc edx; add al, 0x83; ret 0xeb04; 
0x0011e552: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000b964b: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000aaec8: inc edx; add al, 0x89; clc; pop edi; ret; 
0x00171641: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017161d: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016638d: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001663b1: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0007d01a: inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x000a58db: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000b2668: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b2508: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000b26c8: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b2568: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0009aff1: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000af298: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000b3a49: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000b3c98: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x00153333: inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], bl; ret 0x8014; 
0x0008f935: inc edx; add al, 1; add esp, 0xc; ret; 
0x00057641: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000a58f6: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000ad0ba: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xacfe1; pop ebx; ret; 
0x00137376: inc edx; add dword ptr [eax + 2], edi; ret; 
0x000a59a4: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000f1f4b: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xf1f21; xor eax, eax; ret; 
0x000f5445: inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000b3bd0: inc edx; add eax, 0x5f0c428d; ret; 
0x000b9743: inc edx; add eax, 0x5f5bf889; ret; 
0x000a59c7: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000ad138: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x0002903f: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x00088272: inc edx; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000888c7: inc edx; and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0012c381: inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x0012b9ff: inc edx; and edx, 0x100; mov eax, edx; ret; 
0x0012c281: inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x0012c081: inc edx; and edx, 0x200; mov eax, edx; ret; 
0x0012c181: inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x0012be81: inc edx; and edx, 0x400; mov eax, edx; ret; 
0x0012c101: inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x0012bf01: inc edx; and edx, 1; mov eax, edx; ret; 
0x0012bf81: inc edx; and edx, 2; mov eax, edx; ret; 
0x0012c201: inc edx; and edx, 4; mov eax, edx; ret; 
0x0012be01: inc edx; and edx, 8; mov eax, edx; ret; 
0x00186c41: inc edx; call 0x42ee7bad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001871d1: inc edx; call 0x42ee813d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0012dd35: inc edx; call dword ptr [esi + 0x53]; 
0x001867f0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186c46: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b920: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x0016f816: inc edx; cld; call dword ptr [eax - 0x73]; 
0x001867f3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b93a: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x00186833: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186837: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00186816: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00031221: inc edx; dec dword ptr [ecx - 0x1eb73]; dec dword ptr [ecx - 0x1cb7b]; jmp dword ptr [ecx]; 
0x0006df33: inc edx; dec dword ptr [ecx - 0x52f7b]; call dword ptr [esi - 1]; 
0x000bba7e: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000bbb89: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0010a96a: inc edx; fadd dword ptr [eax]; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0015c4fa: inc edx; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x00186bcc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x186c14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018715c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x1871a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00186d36: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b71: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000a4fda: inc edx; in eax, dx; clc; dec dword ptr [ebp - 0x656b770]; call dword ptr [edx - 0x73]; 
0x0010f89e: inc edx; inc edx; xor eax, eax; ret; 
0x00024bfa: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1af66370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012c9f9: inc edx; jmp dword ptr [eax]; 
0x0009c217: inc edx; jmp dword ptr [ecx]; 
0x001869b2: inc edx; jo 0x186936; ret 0x80; 
0x00186a19: inc edx; jo 0x18699d; ret 0x80; 
0x00186a6b: inc edx; jo 0x1869ef; ret 0x80; 
0x0019fb6d: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x00186bd1: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0009f16a: inc edx; mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00186d76: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186db6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189916: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b916: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00186cb6: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000b102f: inc edx; or al, 0x5f; pop ebx; ret; 
0x000af343: inc edx; or al, 0x5f; ret; 
0x00056a4a: inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x0016c280: inc edx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00118ab1: inc edx; or byte ptr [0x100f], ah; ret; 
0x00078252: inc edx; or byte ptr [ebp + 0x394874c9], al; ret; 
0x00081ad5: inc edx; or byte ptr [ebp + 0x396574c9], al; ret; 
0x000795b5: inc edx; or byte ptr [ebp + 0x397574c9], al; ret; 
0x0007ecbc: inc edx; or byte ptr [ebp + 0x4a840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b102c: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x00076794: inc edx; or byte ptr [ebp - 0x2d7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0008924f: inc edx; or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x00076c85: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add dword ptr gs:[eax], eax; add byte ptr [ecx], bh; ret; 
0x00079bb5: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add eax, 0x39000001; ret; 
0x00080985: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, 0x39000001; ret; 
0x00078ff7: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x0007e409: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; jmp 0x3907e418; ret; 
0x0007efb5: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebp, 0x39000000; ret; 
0x00075eb7: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000001; ret; 
0x00080852: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret; 
0x00087469: inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000ad17c: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xacfe1; pop ebx; ret; 
0x000ad19e: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xacfe1; pop ebx; ret; 
0x000ad1dc: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xacfe1; pop ebx; ret; 
0x000b0ff4: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x00186b11: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186ae1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b210e: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af31c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af45c: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x000b3c10: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d70: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000b96ff: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaf3c: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x000ab07c: inc edx; pop es; mov eax, edx; ret; 
0x000a598e: inc edx; pop es; pop ebx; pop esi; ret; 
0x000af1c9: inc edx; pop es; pop edi; ret; 
0x000af409: inc edx; pop es; ret; 
0x00194023: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x00192876: inc edx; pop es; sub eax, ecx; ret; 
0x000993f6: inc edx; push cs; add byte ptr [0x197a3b], al; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x000b2036: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af383: inc edx; push cs; pop edi; ret; 
0x000af4e3: inc edx; push cs; ret; 
0x000423ba: inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000a5939: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a59f9: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x001236da: inc edx; push es; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x000b3bf0: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d50: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x000b9763: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25b0: inc edx; push es; mov eax, edi; pop edi; ret; 
0x000b2710: inc edx; push es; mov eax, edx; ret; 
0x000a59ff: inc edx; push es; pop ebx; pop esi; ret; 
0x000af2cb: inc edx; push es; pop edi; ret; 
0x000af3fb: inc edx; push es; ret; 
0x001940ff: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x001928e6: inc edx; push es; sub eax, ecx; ret; 
0x00137af1: inc edx; ret 0x2ec3; 
0x000d9141: inc edx; ret 0x4c80; 
0x000753f8: inc edx; ret 0x548b; 
0x000bb269: inc edx; ret 0x5e5b; 
0x000bb292: inc edx; ret 0x5f5e; 
0x0013f9ec: inc edx; ret 0xb60f; 
0x00037219: inc edx; ret 0xc189; 
0x00034ee5: inc edx; ret 0xc389; 
0x000d2b8b: inc edx; ret 0xc501; 
0x00136bea: inc edx; ret 0xd129; 
0x00136a9c: inc edx; ret 0xd329; 
0x00136aaa: inc edx; ret 0xe883; 
0x000a1e2a: inc edx; ret 0xea89; 
0x00186da7: inc edx; ret 0xf66; 
0x000a3828: inc edx; ret; 
0x00134d87: inc edx; rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x00134e73: inc edx; rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xfb83; 
0x000f480d: inc edx; sbb al, 0x39; ret; 
0x00178caa: inc edx; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x00136c89: inc edx; shr byte ptr [ecx], 1; ret; 
0x0005e0bd: inc edx; stc; call dword ptr [eax + 0x53]; 
0x0005de9b: inc edx; stc; call dword ptr [eax + 0x6a]; 
0x0005e676: inc edx; stc; call dword ptr [eax - 0x18]; 
0x00073454: inc edx; stc; call dword ptr [eax - 0x18]; ret; 
0x000f558e: inc edx; stc; call dword ptr [edx + 0x52]; 
0x0005ff13: inc edx; stc; inc dword ptr [eax - 0x7af0ac06]; ret; 
0x00186857: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186813: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0010bc8f: inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x00081e0d: inc edx; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000bc39f: inc edx; test al, al; jne 0xbc398; xor eax, eax; ret; 
0x00186830: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001899d0: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x001186a6: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0010df6e: inc edx; xor eax, eax; ret; 
0x00101b4c: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00111dfa: inc esi; adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0012e8d6: inc esi; adc al, 0x83; ret; 
0x0010d5fb: inc esi; adc al, 0x89; jl 0x10d624; adc al, 0x89; ret; 
0x0010ef2b: inc esi; adc al, 0x89; jl 0x10ef54; adc al, 0x89; ret; 
0x0011085b: inc esi; adc al, 0x89; jl 0x110884; adc al, 0x89; ret; 
0x0017f59a: inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x00160e51: inc esi; adc byte ptr [ebx + 0xb91856], cl; add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0x489; 
0x0005814f: inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008335f: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0018a1d8: inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00086ad6: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001710a3: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x000c0d05: inc esi; add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x00073b64: inc esi; add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012294b: inc esi; add al, 0x89; ret 0xe083; 
0x00097119: inc esi; add al, 0x89; ret 0xe283; 
0x000750ef: inc esi; add al, 0x8b; jl 0x75118; xor cl, ch; ret 0xfffe; 
0x0011aa79: inc esi; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000dae13: inc esi; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00124556: inc esi; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0008d5f4: inc esi; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0007def5: inc esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0012c8cd: inc esi; add dword ptr [ecx + 0x244c8bda], ecx; sbb al, 0x29; ret 0xca39; 
0x000bc2f4: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x0003c449: inc esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017e530: inc esi; and al, 0x29; ret; 
0x00111466: inc esi; and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0008588a: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x000846ca: inc esi; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000753ed: inc esi; and byte ptr [ebx - 0x74c3dbbc], cl; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x548b; 
0x0012c69d: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0017f8d5: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0011a7a9: inc esi; call eax; 
0x001a7390: inc esi; call ebx; 
0x0008f64d: inc esi; cli; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0008ef56: inc esi; cli; jmp 0x8eee4; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0016ce3a: inc esi; cmp al, 0x83; in al, dx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0007aea9: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011022b: inc esi; cmp al, 0x8b; inc ebp; add byte ptr [ecx - 0x17acfbba], cl; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x00173365: inc esi; cmp byte ptr [ecx], al; ret; 
0x000cf996: inc esi; dec dword ptr [edi]; dec edi; ret 0xff31; 
0x0006d2cd: inc esi; inc esp; and al, 0x40; add dword ptr [ebx - 0x16afdb94], ecx; sal ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x001028db: inc esi; into; call dword ptr gs:[0x10]; 
0x0008e259: inc esi; iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0013bea6: inc esi; jl 0x13bea8; jmp dword ptr [esi - 0x70]; 
0x00024bfb: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1af66370], ecx; jmp dword ptr [ebp + 0x33]; 
0x001513c1: inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00163689: inc esi; or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016669c: inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005814c: inc esi; or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x00086ad3: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0007d86d: inc esi; or al, 1; ret 0xc101; 
0x0017c951: inc esi; or bl, ch; xchg eax, ebp; xchg esi, eax; jno 0x17c954; jmp dword ptr [esi - 0x70]; 
0x0007f94a: inc esi; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000881dd: inc esi; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00073b67: inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f5b04: inc esi; or byte ptr [ebx - 0x14ebdbac], cl; jge 0x830f8185; ret; 
0x00082eb0: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0003fc23: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0016fcfc: inc esi; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00176936: inc esi; or byte ptr [ecx], al; ret; 
0x0014a801: inc esi; or byte ptr [ecx], bh; ret 0x1074; 
0x0006aca4: inc esi; or byte ptr [ecx], bh; ret 0x840f; 
0x000f2838: inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f291e: inc esi; push ebx; setne al; ret; 
0x001993ab: inc esi; ret 0x5d5e; 
0x000a07a7: inc esi; ret 0x8388; 
0x000a6b0c: inc esi; ret 0xc483; 
0x0007de03: inc esi; ret; 
0x000886d0: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0012cce9: inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg ebp, edx; stc; call dword ptr [eax - 1]; 
0x0011d7ce: inc esi; sbb al, 0xe9; ret; 
0x00160fd4: inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e0f8a: inc esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00134c89: inc esi; stc; call dword ptr [eax - 0x18]; 
0x000e0946: inc esi; sub ah, dh; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0017e52d: inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x001042e4: inc esi; sub al, 0x6a; jg 0x1042d1; xor esp, ecx; std; call dword ptr [ecx + 0x6a]; 
0x00086b80: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008511a: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0019d049: inc esi; test dh, 0x40; jne 0x19d094; add eax, 0xf; ret; 
0x000f399b: inc esi; xor byte ptr [ecx], bh; ret 0x4e0f; 
0x000bb4b4: inc esp; adc al, dh; ret; 
0x000bb4e4: inc esp; adc byte ptr [eax], ah; ret; 
0x0016577c: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000bb4d4: inc esp; adc byte ptr [eax], dl; ret; 
0x0002ec28: inc esp; adc eax, 0x83d08904; ret 0x3901; 
0x000a2d2b: inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x00189f3b: inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00099528: inc esp; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a023e: inc esp; add al, byte ptr [ebx + eax*4]; jmp 0x1ea854b; cmovne eax, ecx; pop ebx; ret; 
0x00094f13: inc esp; add bh, bh; pop edi; pop ebp; ret; 
0x00094f51: inc esp; add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x000f28f8: inc esp; add bh, bh; ret; 
0x0006147d: inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0011ac5d: inc esp; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0011afd6: inc esp; add byte ptr [eax], al; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x000962ed: inc esp; add byte ptr [edx], al; ret; 
0x00137d45: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x000bb4ab: inc esp; add dh, byte ptr [eax]; ret; 
0x00061a23: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0016af16: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014c175: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000bb06b: inc esp; add dword ptr [eax], edx; ret; 
0x000bb08b: inc esp; add dword ptr [eax], esi; ret; 
0x000bb07b: inc esp; add dword ptr [eax], esp; ret; 
0x00066c07: inc esp; add eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x0010ab46: inc esp; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d752: inc esp; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00134262: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0003b995: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x0014f55f: inc esp; and al, 0x10; call 0x17ab80; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0003a792: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003a711: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003a787: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00186155: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0012ac0a: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x12aad0; add esp, 4; ret; 
0x00127425: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127b56: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008e2ba: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00127d5e: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d18: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000a1f12: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013bb92: inc esp; and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00121a5d: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00024cb4: inc esp; and al, 0x14; call eax; 
0x00033a1c: inc esp; and al, 0x14; call edx; 
0x00127b5e: inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dfc08: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00127a95: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001283e5: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008fd46: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a2144: inc esp; and al, 0x18; add cl, ch; ret; 
0x00060c39: inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0006bcd4: inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00061b16: inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0012d85f: inc esp; and al, 0x18; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0016aab1: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x0010a9b2: inc esp; and al, 0x18; call eax; 
0x00163b71: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000dfacc: inc esp; and al, 0x18; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012742d: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000891dc: inc esp; and al, 0x18; mov ebx, dword ptr [esp + 8]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x001291c1: inc esp; and al, 0x18; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00082307: inc esp; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0006ce09: inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0009a6db: inc esp; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x00094481: inc esp; and al, 0x1c; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000379ff: inc esp; and al, 0x1c; push dword ptr [eax]; call 0xbb530; add esp, 0x1c; ret; 
0x0017081c: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x00040b28: inc esp; and al, 0x20; call eax; 
0x00040ad1: inc esp; and al, 0x20; mov dword ptr [esp + 0x28], edx; call eax; 
0x0009448c: inc esp; and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003d2e6: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00128496: inc esp; and al, 0x20; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00061b31: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0016ead8: inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x0017fa00: inc esp; and al, 0x24; call dword ptr [eax + 0x40]; 
0x00040c16: inc esp; and al, 0x24; call eax; 
0x000dfc0c: inc esp; and al, 0x24; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00040bbf: inc esp; and al, 0x24; mov dword ptr [esp + 0x20], edx; call eax; 
0x001277d8: inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012737e: inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012797f: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128586: inc esp; and al, 0x24; mov eax, 0x66; mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x00118ce3: inc esp; and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006077c: inc esp; and al, 0x28; add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x00061b01: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00165bf1: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0012d0f4: inc esp; and al, 0x28; call eax; 
0x0012756e: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012849e: inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00060ab5: inc esp; and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00157bd8: inc esp; and al, 0x2c; call 0x17ab80; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00157be4: inc esp; and al, 0x2c; call eax; 
0x00097ae1: inc esp; and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00061aa1: inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0005e28f: inc esp; and al, 0x30; call eax; 
0x00127721: inc esp; and al, 0x30; mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00099f64: inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006bfeb: inc esp; and al, 0x34; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006ce29: inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00152f1d: inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0002f099: inc esp; and al, 0x34; call eax; 
0x001277d4: inc esp; and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127729: inc esp; and al, 0x34; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007e103: inc esp; and al, 0x34; push eax; call ebx; 
0x000ccf4f: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x00061b21: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x001549fa: inc esp; and al, 0x38; call eax; 
0x001274df: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128039: inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001277dc: inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010b7d8: inc esp; and al, 0x38; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0014f8bf: inc esp; and al, 0x38; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x000837ca: inc esp; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00081ffa: inc esp; and al, 0x38; push eax; push esi; call dword ptr [edi + 0x48]; 
0x001434ec: inc esp; and al, 0x3b; add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x00061ad1: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00168eab: inc esp; and al, 0x3c; call eax; 
0x00127429: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000bd5b3: inc esp; and al, 0x3c; push dword ptr [eax]; call edi; 
0x0016e945: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea25: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea88: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eae8: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb55: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0006ce19: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006d2cf: inc esp; and al, 0x40; add dword ptr [ebx - 0x16afdb94], ecx; sal ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0002a2b8: inc esp; and al, 0x40; call eax; 
0x00127b5a: inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000bcaff: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x0007d476: inc esp; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00099526: inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006147b: inc esp; and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00061a21: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0002dc25: inc esp; and al, 0x44; call eax; 
0x0006cdfd: inc esp; and al, 0x44; jmp 0x6c301; lea esi, [esi]; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x001283e9: inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008d5f2: inc esp; and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0016ae47: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0016ace5: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x000284e4: inc esp; and al, 0x48; call eax; 
0x0016518e: inc esp; and al, 0x4c; call eax; 
0x000289f2: inc esp; and al, 0x50; call eax; 
0x00152498: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; or esp, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00165259: inc esp; and al, 0x5c; call eax; 
0x001285f6: inc esp; and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012849a: inc esp; and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c0258: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000bdb6b: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x000d387a: inc esp; and al, 0x68; call eax; 
0x00029d5c: inc esp; and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0005f582: inc esp; and al, 0x71; js 0x5f510; ret 0xc689; 
0x00118ce7: inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00123f14: inc esp; and al, 0x78; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002f1c0: inc esp; and al, 0x78; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x00123f1e: inc esp; and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0003c484: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d947: inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000a0abf: inc esp; and al, 0xc; call dword ptr [edx]; 
0x0003aaa8: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008a557: inc esp; and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00127725: inc esp; and al, 0xc; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012786b: inc esp; and al, 0xc; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001274e3: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001155fc: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a0a01: inc esp; and al, 0xc; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00129ce9: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0011f8d8: inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120208: inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0003a571: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000ba223: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0019eea3: inc esp; and al, 0xc; pop edi; ret; 
0x00024d97: inc esp; and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0002b9df: inc esp; and al, 0xc; push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014c5e6: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016f0b3: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f102: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x0003e758: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e87b: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x00171cd5: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00137865: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0008a8a1: inc esp; and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000818f5: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000342d5: inc esp; and al, 4; and eax, 0x7f; ret; 
0x00135435: inc esp; and al, 4; bswap eax; ret; 
0x000a284b: inc esp; and al, 4; cmove eax, edx; add eax, 1; ret; 
0x00088a20: inc esp; and al, 4; cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x00052126: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000521a0: inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0014d147: inc esp; and al, 4; jmp 0x14c770; nop; xor eax, eax; ret; 
0x0007c39b: inc esp; and al, 4; jmp 0x7aed0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000877ab: inc esp; and al, 4; jmp 0x86bb0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000eb351: inc esp; and al, 4; jmp 0xa3fc0; lea esi, [esi]; xor eax, eax; ret; 
0x00168bb7: inc esp; and al, 4; jmp edx; 
0x00168bb7: inc esp; and al, 4; jmp edx; lea esi, [esi]; endbr32; ret; 
0x000944f1: inc esp; and al, 4; lock dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x0010394b: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00103973: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008a9b1: inc esp; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00093b25: inc esp; and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0008acb5: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00094531: inc esp; and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003aaac: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00127382: inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00147f15: inc esp; and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x00171d15: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0016f8d1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00086db5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1f5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0017d215: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x0017d2a5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d295: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d225: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x00118a85: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0017d1d9: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00080bc5: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b75: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009a830: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x0009aa00: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a870: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9a880; ret; 
0x000e1655: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x00081905: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00081925: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x0012797b: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012756a: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00171cf5: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0010abb5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d205: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008a795: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103925: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00086a45: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f65: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00103915: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00086dc5: inc esp; and al, 4; ret; 
0x00135446: inc esp; and al, 4; rol ax, 8; ret; 
0x0008e1c9: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x00084ad5: inc esp; and al, 4; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00080b85: inc esp; and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x00080ba5: inc esp; and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000bbd22: inc esp; and al, 8; cld; pop edi; ret; 
0x0008e1c5: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003ad50: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008a45c: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00105308: inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00115a01: inc esp; and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011682d: inc esp; and al, 8; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00116871: inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00127572: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128a4b: inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128b5a: inc esp; and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0010b95e: inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001274db: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00136166: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0018bf27: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0011fbce: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204fe: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d4e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f0e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007651c: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034475: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034495: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003bf3c: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x001037dc: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007b9c5: inc esp; and al, 8; pop ebx; ret; 
0x000bbcf8: inc esp; and al, 8; pop edi; ret; 
0x000b6e03: inc esp; and al, 8; pop esi; ret; 
0x00075678: inc esp; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000344e0: inc esp; and al, 8; ret; 
0x0012bc2d: inc esp; and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000f50bf: inc esp; call 0xe37ae; inc dword ptr [ebx - 0x7c72f714]; jl 0xf5124; stc; call dword ptr [eax + 0x55]; 
0x0002dc27: inc esp; call eax; 
0x000bc894: inc esp; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00173ea8: inc esp; cld; sti; jmp dword ptr [esi - 0x70]; 
0x000bad54: inc esp; cmp al, dh; pop edi; ret; 
0x000bad84: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x000bad74: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000dfa35: inc esp; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xdfaf0; mov ebx, dword ptr [esp + 0x40]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000cc317: inc esp; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x0009ff3b: inc esp; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000ce39d: inc esp; cwde; or byte ptr [ebx - 0x365363], cl; call dword ptr [eax + 0x52]; 
0x00053fed: inc esp; cwde; or byte ptr [ebx - 0x365f63], cl; call dword ptr [eax + 0x51]; 
0x0007be64: inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000cd01a: inc esp; fmul dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001706ff: inc esp; in al, dx; call dword ptr [eax - 0x73]; 
0x0006cdff: inc esp; jmp 0x6c301; lea esi, [esi]; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x000e4f96: inc esp; mov byte ptr [ecx + edi], al; ret; 
0x0010ae07: inc esp; mov cl, 0xf9; call dword ptr [eax - 0x18]; 
0x00115e6b: inc esp; mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x001283eb: inc esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00125c25: inc esp; mov eax, 0xac; mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x001549f8: inc esp; mov eax, dword ptr [esp + 0x38]; call eax; 
0x001172fb: inc esp; mov eax, edx; pop ebx; pop esi; ret; 
0x0017a648: inc esp; mov ebp, edx; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00118e59: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000df6d8: inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012383b: inc esp; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00033cf3: inc esp; nop; inc eax; ret; 
0x0004ce35: inc esp; or al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; ret; 
0x00159538: inc esp; or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x000bb034: inc esp; or byte ptr [eax], ah; ret; 
0x000bb044: inc esp; or byte ptr [eax], dh; ret; 
0x000bb024: inc esp; or byte ptr [eax], dl; ret; 
0x0018e95e: inc esp; pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e83e: inc esp; pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018e7ae: inc esp; pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0018e9ee: inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0018e8ce: inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018ef8e: inc esp; pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0018d978: inc esp; pop es; maxps xmm5, xmm0; mov eax, 0x81fffefc; ret; 
0x0018b878: inc esp; pop es; maxps xmm5, xmm0; mov eax, 0x81ffff1d; ret; 
0x00189878: inc esp; pop es; maxps xmm5, xmm0; mov eax, 0x81ffff3d; ret; 
0x0018edde: inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ecbe: inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018eb9e: inc esp; pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00188f48: inc esp; pop es; or byte ptr [edi - 0x18], bl; call 0x82188e98; ret; 
0x0018af48: inc esp; pop es; or byte ptr [edi - 0x18], bl; call 0x8218ae78; ret; 
0x0018ec2e: inc esp; pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0018ee6e: inc esp; pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0018ed4e: inc esp; pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018eb0e: inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eefe: inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea7e: inc esp; pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00072b9d: inc esp; pop ss; add dword ptr [ecx - 0x5236b], ecx; dec dword ptr [ecx - 0x4ff7b]; call dword ptr [edx + 0x52]; 
0x000be26a: inc esp; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0005e637: inc esp; push es; aad 0x83; ret 0x101; 
0x00161c08: inc esp; push es; add dword ptr [ecx - 0x16efdbbc], ecx; ret; 
0x0017ac99: inc esp; push es; jmp dword ptr [ecx]; 
0x000e3502: inc esp; push esi; stc; call dword ptr [eax - 0x18]; 
0x00131b6f: inc esp; rcl dword ptr [eax - 0x73], 0x86; iretd; stc; call dword ptr [eax + 0x57]; 
0x000bcb77: inc esp; ret 0x108b; 
0x0009210e: inc esp; ret 0x118b; 
0x0017cfe4: inc esp; ret 0x178b; 
0x000bcc8b: inc esp; ret 0x188b; 
0x00104de8: inc esp; ret 0x2ec3; 
0x000bd7ac: inc esp; ret 0x4489; 
0x000c01ba: inc esp; ret 0x44c7; 
0x0015a645: inc esp; ret 0x4789; 
0x000d9d6c: inc esp; ret 0x4ce9; 
0x0009f5b1: inc esp; ret 0x568d; 
0x0004261a: inc esp; ret 0x66c3; 
0x000f7d40: inc esp; ret 0x804; 
0x00153f50: inc esp; ret 0x8489; 
0x0013ae2b: inc esp; ret 0x8588; 
0x0010d6c5: inc esp; ret 0x8966; 
0x000bdd55: inc esp; ret 0x8b65; 
0x000f268d: inc esp; ret 0x8bc3; 
0x000f220c: inc esp; ret 0x8d50; 
0x000a251a: inc esp; ret 0x8dc3; 
0x0008862e: inc esp; ret 0x978b; 
0x001042d8: inc esp; ret 0xb58b; 
0x000a284f: inc esp; ret 0xc083; 
0x000f2659: inc esp; ret 0xc35b; 
0x0004470c: inc esp; ret 0xc483; 
0x00032aac: inc esp; ret 0xc89; 
0x000a89b4: inc esp; ret 0xcceb; 
0x001470b8: inc esp; ret 0xcf89; 
0x0003c32b: inc esp; ret 0xe4e9; 
0x0009ac16: inc esp; ret 0xec83; 
0x0009fbf8: inc esp; ret 0xf821; 
0x0009b229: inc esp; ret 0xff31; 
0x000bcc40: inc esp; ret 0xff50; 
0x000f6f48: inc esp; ret 0xfff2; 
0x0008e3c8: inc esp; ret 0xffff; 
0x000e78a8: inc esp; ret 4; 
0x00026ce6: inc esp; ret; 
0x000311a5: inc esp; rol ecx, 0xe2; add al, 0x8b; dec esp; ret; 
0x00138b68: inc esp; ror byte ptr [ebx - 0x76f7dbbc], 1; adc edi, dword ptr [ecx]; ret 0x840f; 
0x0002aebd: inc esp; sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x0002aec1: inc esp; sbb eax, 0x83028b00; ret; 
0x0009f246: inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0014c19a: inc esp; stc; call dword ptr [eax + 0x52]; 
0x0014fa64: inc esp; stc; call dword ptr [eax - 0x18]; 
0x0014fa64: inc esp; stc; call dword ptr [eax - 0x18]; ret; 
0x000dd3b6: inc esp; std; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0009a9f5: inc esp; sub al, 0xe; add byte ptr [ecx + 0x19643bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00060b76: inc esp; sub al, ah; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00060c35: inc esp; sub al, ah; mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000613c6: inc esp; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x000610de: inc esp; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x0006135e: inc esp; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x00061040: inc esp; sub al, ah; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00061421: inc esp; sub eax, esp; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x000a64f8: inc esp; test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x000a388d: inc esp; test byte ptr [eax*4 + 0x10c74c0], bh; ret; 
0x0008b13d: inc esp; xchg ebp, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0014c10f: inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x0008dfe8: inc esp; xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0006c2aa: inc esp; xor ah, al; mov ebp, dword ptr [esp + 0x50]; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006c417: inc esp; xor ah, al; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x00156b38: inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0006c0cf: inc esp; xor al, ah; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0003a19a: inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0011f6c4: insb byte ptr es:[edi], dx; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000cd111: insb byte ptr es:[edi], dx; adc ebp, edx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x001440af: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000bdd4a: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebp + 0x3cc492], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x00033ce7: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0013b9d2: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000328d7: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016ede4: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0008124b: insb byte ptr es:[edi], dx; add ebp, esp; call dword ptr [eax - 1]; 
0x0006c13f: insb byte ptr es:[edi], dx; and al, 0x14; jmp ebx; 
0x0006cf02: insb byte ptr es:[edi], dx; and al, 0x14; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x001a3965: insb byte ptr es:[edi], dx; and al, 0x18; add al, 0x39; ret 0x850f; 
0x0014597b: insb byte ptr es:[edi], dx; and al, 0x1c; add dword ptr [ecx], ebp; ret 0x828d; 
0x0009a6b8: insb byte ptr es:[edi], dx; and al, 0x3c; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0006c2ae: insb byte ptr es:[edi], dx; and al, 0x50; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x000d319d: insb byte ptr es:[edi], dx; and al, 0x5c; push ebx; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0003a796: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003a715: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003a78b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00157aa6: insb byte ptr es:[edi], dx; bnd call dword ptr [eax - 0x73]; 
0x0008d075: insb byte ptr es:[edi], dx; cli; inc dword ptr [ebx - 0x17a9f314]; aas; ret; 
0x0013341e: insb byte ptr es:[edi], dx; cmc; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x001333a8: insb byte ptr es:[edi], dx; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00164795: insb byte ptr es:[edi], dx; cmp dh, bl; call dword ptr [edx - 0x73]; 
0x0016e196: insb byte ptr es:[edi], dx; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x001502a8: insb byte ptr es:[edi], dx; div cl; call dword ptr [eax - 0x18]; 
0x0005d0ef: insb byte ptr es:[edi], dx; inc ecx; stc; call dword ptr [ebx + 0x50]; 
0x0012faef: insb byte ptr es:[edi], dx; iretd; out dx, eax; call dword ptr [eax + 0x6a]; 
0x00024ea8: insb byte ptr es:[edi], dx; jbe 0x24ea4; call dword ptr [eax + 0x6a]; 
0x0008f93e: insb byte ptr es:[edi], dx; jl 0x8f93a; call dword ptr [eax - 0x73]; 
0x0008f95d: insb byte ptr es:[edi], dx; jl 0x8f959; call dword ptr [eax - 0x73]; 
0x0008f97c: insb byte ptr es:[edi], dx; jl 0x8f978; call dword ptr [eax - 0x73]; 
0x0008fa22: insb byte ptr es:[edi], dx; jmp 0x8fa0a; call dword ptr [eax - 0x73]; 
0x000d0ba8: insb byte ptr es:[edi], dx; jmp 0xd0baa; dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x0002d5b0: insb byte ptr es:[edi], dx; jns 0x2d5ac; call dword ptr [eax - 0x73]; 
0x0002d88e: insb byte ptr es:[edi], dx; jns 0x2d88a; call dword ptr [eax - 0x73]; 
0x0002d8b1: insb byte ptr es:[edi], dx; jns 0x2d8ad; call dword ptr [eax - 0x73]; 
0x0002d8d4: insb byte ptr es:[edi], dx; jns 0x2d8d0; call dword ptr [eax + 0x68]; 
0x0002d99f: insb byte ptr es:[edi], dx; jns 0x2d99b; call dword ptr [eax + 0x68]; 
0x000299ce: insb byte ptr es:[edi], dx; jp 0x299ca; call dword ptr [eax - 0x73]; 
0x00029a44: insb byte ptr es:[edi], dx; jp 0x29a40; call dword ptr [eax - 0x73]; 
0x00029b07: insb byte ptr es:[edi], dx; jp 0x29b03; call dword ptr [eax - 0x73]; 
0x00029b52: insb byte ptr es:[edi], dx; jp 0x29b4e; call dword ptr [eax + 0x68]; 
0x00029b75: insb byte ptr es:[edi], dx; jp 0x29b71; call dword ptr [eax + 0x68]; 
0x0002ecce: insb byte ptr es:[edi], dx; js 0x2ecca; call dword ptr [eax - 0x73]; 
0x0002ecf1: insb byte ptr es:[edi], dx; js 0x2eced; call dword ptr [eax - 0x73]; 
0x0002ed19: insb byte ptr es:[edi], dx; js 0x2ed15; call dword ptr [eax - 0x73]; 
0x0002ed7c: insb byte ptr es:[edi], dx; js 0x2ed78; call dword ptr [eax - 0x73]; 
0x0002ed9f: insb byte ptr es:[edi], dx; js 0x2ed9b; call dword ptr [eax - 0x73]; 
0x0002edc2: insb byte ptr es:[edi], dx; js 0x2edbe; call dword ptr [eax - 0x73]; 
0x0004ff24: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000e23dd: insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cd4c: insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x001179e2: insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117928: insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a3306: insb byte ptr es:[edi], dx; mov eax, 0x440fffe8; ret 0x66c3; 
0x00136756: insb byte ptr es:[edi], dx; mov eax, 6; call dword ptr gs:[0x10]; 
0x000415a9: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000587e6: insb byte ptr es:[edi], dx; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0016f2b1: insb byte ptr es:[edi], dx; out 0xf3, al; call dword ptr [eax - 0x73]; 
0x00028d10: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002efe6: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c717: insb byte ptr es:[edi], dx; popfd; stc; call dword ptr [eax - 0x18]; 
0x00029d5e: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002dc1a: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000e38bd: insb byte ptr es:[edi], dx; push esi; stc; call dword ptr [eax - 0x18]; 
0x0014a7f1: insb byte ptr es:[edi], dx; ret 0x8304; 
0x000a3e10: insb byte ptr es:[edi], dx; ret 0xfff6; 
0x0014d264: insb byte ptr es:[edi], dx; ret 0xfff9; 
0x001943d4: insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x000e7f01: insb byte ptr es:[edi], dx; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014ac2c: insb byte ptr es:[edi], dx; stc; call dword ptr [eax + 0x56]; 
0x00147143: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x001494f0: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; daa; test al, 0xee; jmp dword ptr [esi - 0x70]; 
0x001498b0: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; movsb byte ptr es:[di], byte ptr [si]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00149630: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; out 0xa6, eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00147a01: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; push ss; ret; 
0x00147d54: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; ret; 
0x001966d8: insb byte ptr es:[edi], dx; stosd dword ptr es:[edi], eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x000bf257: insb byte ptr es:[edi], dx; stosd dword ptr es:[edi], eax; stc; call dword ptr [edx - 0x73]; 
0x0005bea2: insb byte ptr es:[edi], dx; sub eax, dword ptr gs:[0x14]; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x00109b94: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x001289bf: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x0005dd7f: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x000e8b44: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4c4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec224: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb24: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef874: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x0012c6c9: insb byte ptr es:[edi], dx; syscall; 
0x001757b9: insb byte ptr es:[edi], dx; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x31fff972], esp; call dword ptr [eax + 0x6a]; 
0x00099485: insb byte ptr es:[edi], dx; test dh, ah; call dword ptr [eax - 0x73]; 
0x0008f46a: insb byte ptr es:[edi], dx; xchg ebp, eax; stc; call dword ptr [eax - 0x73]; 
0x0008f66c: insb byte ptr es:[edi], dx; xchg ebp, eax; stc; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x001a583b: insb byte ptr es:[edi], dx; xchg ebx, eax; add al, 0x83; ret; 
0x0015a9f4: insb byte ptr es:[edi], dx; xchg ecx, esi; call dword ptr [eax - 0x73]; 
0x00082d59: insb byte ptr es:[edi], dx; xchg edx, eax; stc; call dword ptr [eax - 0x73]; 
0x0008f47d: insb byte ptr es:[edi], dx; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0003f6d2: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0014b879: insd dword ptr es:[di], dx; stc; call dword ptr [eax - 0x18]; 
0x0014b879: insd dword ptr es:[di], dx; stc; call dword ptr [eax - 0x18]; popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x0018c1c8: insd dword ptr es:[edi], dx; adc al, 0xff; inc dword ptr [ecx + 0x4274cc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00147697: insd dword ptr es:[edi], dx; add al, byte ptr [eax]; add byte ptr [ebp - 0x6941d7e], cl; call dword ptr [eax - 0x73]; 
0x000e1c4f: insd dword ptr es:[edi], dx; and edi, esp; jmp dword ptr [esi - 0x70]; 
0x00073861: insd dword ptr es:[edi], dx; fdivr st(7); call dword ptr [eax - 0x7d]; 
0x00076928: insd dword ptr es:[edi], dx; int 0xfa; jmp dword ptr [esi - 0x70]; 
0x001747db: insd dword ptr es:[edi], dx; jne 0x1747d7; call dword ptr [eax - 0x18]; 
0x000baae2: insd dword ptr es:[edi], dx; lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0014ac74: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x53]; 
0x0003e221: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0014b87a: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x0014c1d5: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x0014c1b5: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 1]; 
0x0014af6a: insd dword ptr es:[edi], dx; stc; call dword ptr [ebx - 0x73]; 
0x000e78eb: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018a3cd: int 0x42; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007f898: int 0x48; cli; jmp dword ptr [esi - 0x70]; 
0x0010180f: int 0x7a; clc; dec dword ptr [edi]; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x00039ed4: int 0x80; 
0x00104e46: int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00147de2: int 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00151b72: int 0x83; ret 0xeb18; 
0x00146768: int 0xa6; push cs; add byte ptr [ebx - 0x6f72f314], al; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x0017df58: int 0xf8; jmp dword ptr [ebp - 0x75]; 
0x000c5ea8: int 0xf; test bh, bl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0004d884: int 0xf; test byte ptr [ebp - 0x74fffff5], bl; mov word ptr [esp + esi*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x76bfdb8c], cl; ret; 
0x00076929: int 0xfa; jmp dword ptr [esi - 0x70]; 
0x0017843f: int 0xfa; stc; jmp dword ptr [ebp - 0x75]; 
0x0015d52c: int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0010deea: int 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0014d55c: int 0xff; jmp dword ptr [ebp - 0x75]; 
0x00027b51: int1; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x000a250e: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0008b13a: int1; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0018b544: int1; and bh, bh; inc dword ptr [ecx + 0x43150c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008940b: int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014d2fa: int1; call dword ptr [eax - 0x18]; 
0x0014d3b6: int1; call dword ptr [eax - 0x73]; 
0x0014e17a: int1; call dword ptr [eax - 1]; 
0x0014872a: int1; call dword ptr [ebx + 0x50]; 
0x0009ab34: int1; call dword ptr [edx + 0x51]; 
0x001483c5: int1; call dword ptr [esi + 0x50]; 
0x0009944f: int1; call dword ptr gs:[0x10]; 
0x00164989: int1; cld; jmp dword ptr [esi - 0x70]; 
0x00123650: int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x00107b25: int1; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x0008f61e: int1; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00177239: int1; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x001036b3: int1; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0014d555: int1; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0010d9df: int1; jmp dword ptr [ebp - 0x5f]; 
0x0010c82f: int1; jmp dword ptr [ebp - 0x75]; 
0x0011b9ea: int1; jmp dword ptr [esi - 0x70]; 
0x00139ed6: int1; jmp dword ptr [esi - 0x77]; 
0x0003f735: int1; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000a554e: int1; mov eax, edx; pop ebx; ret; 
0x0004212a: int1; mov eax, edx; ret; 
0x0009438d: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008ef78: int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010b9aa: int1; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00151c36: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0010babe: int1; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010bafa: int1; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010b860: int1; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010b95a: int1; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017ff6e: int1; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000424f5: int1; pop ds; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x00041cfa: int1; pop ds; shr eax, cl; ret; 
0x000a564e: int1; pop ebx; pop esi; ret; 
0x00050c4e: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019d842: int1; pop edi; ret; 
0x000441ae: int1; std; jmp dword ptr [esi - 0x70]; 
0x0019c837: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00091ce3: int1; xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x000ba15c: int1; xor al, 0xc; add byte ptr [ecx + 0x105f14c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00095924: int1; xor eax, eax; pop ebx; ret; 
0x000a0c56: int1; xor eax, eax; ret; 
0x00032251: into; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00092f9e: into; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x001291c5: into; add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ba031: into; bsf edx, edx; call 0x17d651; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba013: into; bsf edx, edx; call 0x17d651; add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d31: into; bsf edx, edx; call 0x17d651; add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d13: into; bsf edx, edx; call 0x17d651; add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4043: into; bsf edx, edx; call 0x17d651; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a13: into; bsf edx, edx; call 0x17d651; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba1db: into; call 0x17d651; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1bb: into; call 0x17d651; add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba19e: into; call 0x17d651; add ecx, 0x105ed0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b423b: into; call 0x17d651; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b421b: into; call 0x17d651; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41fe: into; call 0x17d651; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bfb: into; call 0x17d651; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bdb: into; call 0x17d651; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bbe: into; call 0x17d651; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ff957: into; call dword ptr [edi + 0x57]; 
0x000ff9bd: into; call dword ptr [edi - 0x18]; 
0x0008f388: into; call dword ptr gs:[0x10]; 
0x000a6eaf: into; clc; dec dword ptr [ebp - 0x6562370]; call dword ptr [edx - 0x73]; 
0x001028d9: into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00027551: into; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0007e6de: into; fdiv st(7), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0005a8b3: into; inc eax; stc; call dword ptr [eax - 0x18]; 
0x001725f9: into; jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x000bb9a3: into; jmp ebx; 
0x000bc2f0: into; jne 0xbc2f6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x00183d5e: into; jns 0x183d59; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00172176: into; lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000887ae: into; mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000a32fd: into; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x0012364e: into; push es; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x000c1a42: into; stc; call dword ptr [eax + 0x57]; 
0x000b417f: into; xchg esp, eax; or al, 0; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b125d: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0014715e: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x42], ebx; stc; call dword ptr [eax - 0x18]; 
0x0018ecba: iretd; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed4a: iretd; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018edda: iretd; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee6a: iretd; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eefa: iretd; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef8a: iretd; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7aa: iretd; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e83a: iretd; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e8ca: iretd; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e95a: iretd; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9ea: iretd; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea7a: iretd; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb0a: iretd; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb9a: iretd; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec2a: iretd; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b41fc: iretd; add esi, ecx; call 0x17d651; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bbc: iretd; add esi, ecx; call 0x17d651; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00070ba9: iretd; idiv bh; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x000b3773: iretd; lds edx, ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001761c3: iretd; ljmp 0x5e5b:0x14c483ff; ret; 
0x0007e772: iretd; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x00127c07: iretd; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0008e25a: iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0008e254: iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009205a: iretd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001681cd: iretd; out 0xfa, eax; jmp dword ptr [ebp - 0x75]; 
0x0012faf0: iretd; out dx, eax; call dword ptr [eax + 0x6a]; 
0x0011d24e: iretd; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x00036450: iretd; pop ebx; pop esi; pop edi; ret; 
0x000a086e: iretd; push ebx; stc; call dword ptr [ebx + 0x50]; 
0x000e84d1: iretd; push esi; stc; call dword ptr [eax - 0x73]; 
0x000818fa: iretd; ret; 
0x000c211c: iretd; stc; call dword ptr [eax + 0x53]; 
0x00131b74: iretd; stc; call dword ptr [eax + 0x57]; 
0x0011a71e: iretd; stc; call dword ptr [eax - 0x18]; 
0x0012cbbd: iretd; stc; call dword ptr [eax - 1]; 
0x00102c1e: ja 0x102c28; pop ebx; pop esi; ret; 
0x00103912: ja 0x10391d; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00103970: ja 0x10397e; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0010992c: ja 0x109938; pop ebx; pop esi; ret; 
0x0010abf9: ja 0x10ac00; pop ebx; ret; 
0x0010ac69: ja 0x10ac70; pop ebx; ret; 
0x0010acf3: ja 0x10ad40; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010af77: ja 0x10afc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b069: ja 0x10b070; pop ebx; ret; 
0x0010c6df: ja 0x10c6e8; pop ebx; pop esi; ret; 
0x0010df66: ja 0x10df78; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f896: ja 0x10f8a8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x001111c6: ja 0x1111d8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00111a5f: ja 0x111a6d; call dword ptr [edi + 0x24]; 
0x00111cdb: ja 0x111ce9; call dword ptr [edi + 0x24]; 
0x00112b7f: ja 0x112b8d; call dword ptr [edi + 0x24]; 
0x00112dfb: ja 0x112e09; call dword ptr [edi + 0x24]; 
0x00113caf: ja 0x113cbd; call dword ptr [edi + 0x24]; 
0x00113f2b: ja 0x113f39; call dword ptr [edi + 0x24]; 
0x001152e9: ja 0x1152f0; pop ebx; ret; 
0x00115829: ja 0x115830; pop ebx; ret; 
0x0011593d: ja 0x115948; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00115f07: ja 0x115f10; pop ebx; ret; 
0x00115f9c: ja 0x115ff0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001169dc: ja 0x116a30; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00116a9e: ja 0x116aa8; pop ebx; pop esi; ret; 
0x00116b25: ja 0x116b30; pop ebx; ret; 
0x00116b83: ja 0x116b90; pop ebx; pop esi; pop edi; ret; 
0x00116be3: ja 0x116bf0; pop ebx; pop esi; pop edi; ret; 
0x00116e3f: ja 0x116e48; pop ebx; pop esi; ret; 
0x00117239: ja 0x117240; pop ebx; ret; 
0x00117765: ja 0x117770; pop ebx; ret; 
0x00117bbc: ja 0x117c10; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00117c95: ja 0x117ca0; pop ebx; ret; 
0x001181f5: ja 0x118210; pop ebx; pop esi; pop edi; ret; 
0x00118272: ja 0x118290; pop ebx; pop esi; pop edi; ret; 
0x001182f4: ja 0x118310; pop ebx; pop esi; pop edi; ret; 
0x00118371: ja 0x118390; pop ebx; pop esi; pop edi; ret; 
0x001183e8: ja 0x1183f0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011843e: ja 0x118448; pop ebx; pop esi; ret; 
0x001187fe: ja 0x118808; pop ebx; pop esi; ret; 
0x00118fce: ja 0x119028; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00119269: ja 0x119270; pop ebx; ret; 
0x001192b9: ja 0x1192c0; pop ebx; ret; 
0x001193cf: ja 0x1193d8; pop ebx; pop esi; pop edi; ret; 
0x0011942f: ja 0x119438; pop ebx; pop esi; pop edi; ret; 
0x0011aad3: ja 0x11ab20; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b023: ja 0x11b070; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b0d9: ja 0x11b0e0; pop ebx; ret; 
0x0011b12e: ja 0x11b138; pop ebx; pop esi; ret; 
0x0011e58e: ja 0x11e598; pop ebx; pop esi; ret; 
0x0011f75c: ja 0x11f7b0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00120dcc: ja 0x120e20; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00120e90: ja 0x120e98; pop ebx; pop esi; ret; 
0x00122609: ja 0x122610; pop ebx; ret; 
0x0012265e: ja 0x122668; pop ebx; pop esi; ret; 
0x001226b1: ja 0x1226e0; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x00122741: ja 0x122770; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x00123853: ja 0x123860; mov eax, ecx; pop ebx; ret; 
0x00123a1c: ja 0x123a70; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001249d5: ja 0x1249e0; pop ebx; ret; 
0x00125079: ja 0x125080; pop ebx; ret; 
0x0012518c: ja 0x125198; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001251f0: ja 0x1251f8; ret; 
0x001252f9: ja 0x125300; pop ebx; ret; 
0x00125412: ja 0x125420; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012547c: ja 0x1254d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001255b8: ja 0x1255d8; pop ebx; pop esi; pop edi; ret; 
0x001256a8: ja 0x1256b0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00125863: ja 0x125870; pop ebx; pop esi; pop edi; ret; 
0x00125b43: ja 0x125b50; pop ebx; pop esi; pop edi; ret; 
0x00125c84: ja 0x125c90; pop ebx; pop esi; pop edi; ret; 
0x001263b9: ja 0x1263c0; pop ebx; ret; 
0x00126679: ja 0x126680; pop ebx; ret; 
0x0012890d: ja 0x128919; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x00128c15: ja 0x128c20; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00129117: ja 0x129120; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001297e3: ja 0x1297f0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00129847: ja 0x129850; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001326bb: ja 0x1326c4; sar eax, 5; add esp, 0xc; ret; 
0x00133fc5: ja 0x133f87; hlt; jmp dword ptr [esi - 0x70]; 
0x00148729: ja 0x14871c; call dword ptr [ebx + 0x50]; 
0x0017c97c: ja 0x17c98d; mov eax, edx; mov edx, dword ptr [ecx + 0x10c]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0017db2a: ja 0x17dd10; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0017ec1b: ja 0x17ece0; sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0017f144: ja 0x17f220; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0017f28d: ja 0x17f2a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0017f879: ja 0x17fb00; push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x0017fef4: ja 0x17ff00; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00183bff: ja 0x183c08; pop ebx; pop esi; ret; 
0x00184524: ja 0x184519; call dword ptr [edi - 1]; 
0x00185f47: ja 0x185f50; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00186057: ja 0x186060; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001867c8: ja 0x1867ce; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001890a3: ja 0x1890f8; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a623: ja 0x18a665; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c7a3: ja 0x18c7c6; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d2a3: ja 0x18d2bb; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192935: ja 0x192939; neg eax; ret; 
0x00194175: ja 0x194179; neg eax; pop ebp; ret; 
0x00196825: ja 0x196829; neg eax; add esp, 4; pop ebx; ret; 
0x001990b5: ja 0x1990b9; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00199575: ja 0x199579; neg eax; ret; 
0x00199865: ja 0x199869; neg eax; pop ebp; ret; 
0x00199a25: ja 0x199a29; neg eax; ret; 
0x0019a50c: ja 0x19a510; neg eax; ret; 
0x0019a885: ja 0x19a889; neg eax; pop edi; pop ebx; ret; 
0x0019ade5: ja 0x19ade9; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0019b6fd: ja 0x19b701; neg eax; ret; 
0x0019cd76: ja 0x19cd7a; neg eax; ret; 
0x0017d3c0: ja 0x24aa8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003c19a: ja 0x3c19c; add byte ptr [eax], al; int 0x80; 
0x0003c3ea: ja 0x3c3f0; pop ebx; ret; 
0x0003c448: ja 0x3c490; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003e9d5: ja 0x3e9d8; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0xc]; push dword ptr [esp + 0x3c]; call eax; 
0x0003f88c: ja 0x3f8e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000579a5: ja 0x5796a; std; jmp dword ptr [esi - 0x70]; 
0x0005d365: ja 0x5d302; add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0005da19: ja 0x5da20; pop ebx; ret; 
0x0005da73: ja 0x5da80; pop ebx; pop esi; pop edi; ret; 
0x00060b24: ja 0x60b36; add byte ptr [eax], al; jmp eax; 
0x0006c40f: ja 0x6b829; movzx eax, byte ptr [edx + esi - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x00073f33: ja 0x73f70; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00075802: ja 0x75a50; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00075c9b: ja 0x75d00; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00075d55: ja 0x75e50; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00076801: ja 0x76900; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007795e: ja 0x77989; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000781ce: ja 0x78320; sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00078aba: ja 0x78c01; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00079d7d: ja 0x79da0; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x0007a0d4: ja 0x7a0ff; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007b121: ja 0x7b158; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007b8e3: ja 0x7b910; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007cadc: ja 0x7cd38; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x0007ecff: ja 0x7ef30; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000805e3: ja 0x807d0; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00081a25: ja 0x81a50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00081c8c: ja 0x81cf0; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00081e0c: ja 0x81e50; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000822fd: ja 0x82420; sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000825a8: ja 0x826d0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008273e: ja 0x82780; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00082824: ja 0x82890; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00083ad4: ja 0x83d70; push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000837c0: ja 0x83da0; sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00083ca1: ja 0x83dc4; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083e5a: ja 0x83f18; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00083f8b: ja 0x83fb0; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008463e: ja 0x84656; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00085627: ja 0x85680; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000856d1: ja 0x856f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000859a9: ja 0x85a58; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00085e94: ja 0x85ec0; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x00086781: ja 0x8698d; sub esp, 4; push 0; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x00087a2b: ja 0x87a7b; stc; call dword ptr [ecx + 0x52]; 
0x0008867b: ja 0x88662; call dword ptr [eax - 0x18]; 
0x000898e6: ja 0x898f0; pop ebx; pop esi; pop edi; ret; 
0x0008a9a3: ja 0x8a9b0; ret; 
0x0008acdb: ja 0x8acf0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000922f9: ja 0x92300; pop ebx; pop esi; pop edi; ret; 
0x00093b4b: ja 0x93b60; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00093b7b: ja 0x93b90; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000990e5: ja 0x990f0; pop ebx; ret; 
0x0009963e: ja 0x99660; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0009976e: ja 0x99778; pop ebx; pop esi; ret; 
0x00099d5f: ja 0x99d68; mov eax, ecx; pop ebx; ret; 
0x0009a13d: ja 0x9a148; pop ebx; ret; 
0x0009e7a5: ja 0x9e7fc; stc; dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi - 7], dh; call dword ptr [eax - 0x73]; 
0x000a2331: ja 0xa2310; pop ebx; pop esi; pop edi; ret; 
0x000a3288: ja 0xa3291; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000a32b8: ja 0xa32c1; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x000ba872: ja 0xba880; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000be26d: ja 0xbe277; call ebx; 
0x000be2ff: ja 0xbe309; call ebx; 
0x000d4267: ja 0xd4270; pop ebx; ret; 
0x000d6db8: ja 0xd6d45; pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000dfa3d: ja 0xdfaf0; mov ebx, dword ptr [esp + 0x40]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e1468: ja 0xe1470; pop ebx; pop esi; ret; 
0x000e2ea8: ja 0xe2eb0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f2c3e: ja 0xf2c80; add esp, 0x18; pop ebx; ret; 
0x000fb010: ja 0xfaf9d; inc edi; sub byte ptr [ebp - 0x76efdb84], cl; ret 0x4489; 
0x001219b7: jae 0x1219b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a8be: jae 0x12a8cb; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x0012d309: jae 0x12d2e0; add esp, 4; pop ebx; pop esi; ret; 
0x00130b21: jae 0x130b53; call eax; 
0x00131c25: jae 0x131c30; cmp dword ptr [eax + 4], ecx; jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x00137a8d: jae 0x137aa2; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00137d3d: jae 0x137d48; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0013b421: jae 0x13b4a0; out dx, al; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00151991: jae 0x151997; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00157ad9: jae 0x157ae3; add byte ptr [eax], al; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00158e79: jae 0x158e27; std; jmp dword ptr [esi - 0x70]; 
0x00164a0e: jae 0x164a18; push esi; call dword ptr [ebx + 0xc]; 
0x001652cb: jae 0x1652c6; call dword ptr [eax - 0x73]; 
0x0016615d: jae 0x166158; call dword ptr [edx + 0x6a]; 
0x00166356: jae 0x166351; call dword ptr [edx + 0x6a]; 
0x0016a064: jae 0x16a05f; call dword ptr [edi + 0x6a]; 
0x0016a274: jae 0x16a1f9; les ebx, ptr [eax]; pop ebx; ret; 
0x0016baad: jae 0x16baf7; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016cf6f: jae 0x16cf6a; call dword ptr [ecx + 0x6a]; 
0x001706f2: jae 0x1706ed; call dword ptr [eax - 0x73]; 
0x0017119a: jae 0x171195; call dword ptr [eax - 0x73]; 
0x00171dba: jae 0x171dc8; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00179e28: jae 0x179e10; mov eax, 1; pop ebx; ret; 
0x0017a16b: jae 0x17a171; call dword ptr [edx + 0x39c]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0017a1bd: jae 0x17a1c3; call dword ptr [edx + 0x39c]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001869c0: jae 0x186980; call 0x17d639; add ebx, 0x475d1; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186e48: jae 0x186e4e; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186f26: jae 0x186f40; call 0x17d639; add ebx, 0x472eb; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00199d79: jae 0x199d82; add byte ptr [eax], al; pop ebx; ret; 
0x0019d1f9: jae 0x19d1fd; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x000249c9: jae 0x249c4; call dword ptr [eax - 0x18]; 
0x000249e8: jae 0x249e3; call dword ptr [eax - 0x18]; 
0x00024a1d: jae 0x24a18; call dword ptr [eax - 0x18]; 
0x0003c3ad: jae 0x24e60; ret; 
0x0003f6ec: jae 0x24e60; xor eax, eax; ret; 
0x00025d4c: jae 0x25d52; call edi; 
0x00025dac: jae 0x25db2; call edi; 
0x000330dd: jae 0x330f6; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0003e6c7: jae 0x3e6cd; call eax; 
0x0003f732: jae 0x3f759; mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00050e98: jae 0x50e90; mov eax, edx; pop ebx; pop esi; ret; 
0x0005d299: jae 0x5d313; std; dec dword ptr [ecx - 0x7c72dbfc]; xchg edx, eax; je 0x5d29e; call dword ptr [ebp + 0x56]; 
0x00050ca8: jae 0x5e601972; pop edi; pop ebp; ret; 
0x00050da8: jae 0x5e601a72; pop edi; pop ebp; ret; 
0x000855f0: jae 0x5e6362ba; pop edi; pop ebp; ret; 
0x000f8bcf: jae 0x5e6ac899; pop edi; pop ebp; ret; 
0x000fa6c8: jae 0x5e6ad392; pop edi; pop ebp; ret; 
0x00137ce5: jae 0x5e6ec9af; pop edi; pop ebp; ret; 
0x001469f8: jae 0x5e6f76c2; pop edi; pop ebp; ret; 
0x000796e4: jae 0x796f0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000798b2: jae 0x798c0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007b72e: jae 0x7b6a6; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007ba14: jae 0x7ba46; add esp, 4; pop ebx; pop esi; ret; 
0x0007e57c: jae 0x7e501; in al, dx; or al, 0x8d; sub dword ptr [eax - 4], -1; call dword ptr [eax - 0x73]; 
0x0008198e: jae 0x819a0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000819cc: jae 0x819e0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000832bc: jae 0x832c8; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000869cf: jae 0x86a01; add esp, 4; pop ebx; pop esi; ret; 
0x0008742c: jae 0x87450; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00089944: jae 0x898cf; ret 0xca83; 
0x0008ab04: jae 0x8aad0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008abb4: jae 0x8abe3; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008af80: jae 0x8af86; call dword ptr [ebx]; 
0x0008af7a: jae 0x8afb8; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000922a7: jae 0x922ad; call dword ptr [ebx]; 
0x00097580: jae 0x975d2; stc; call dword ptr [eax - 0x18]; 
0x000a09ae: jae 0xa09d0; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000a0b28: jae 0xa0b4e; call eax; 
0x000a0c17: jae 0xa0c3d; call eax; 
0x000a0c4e: jae 0xa0c60; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa0c48; xor eax, eax; ret; 
0x000a0c95: jae 0xa0cbb; call edx; 
0x0002fca0: jae 0xa77009e; add esp, 8; pop ebx; ret; 
0x000b365f: jae 0xb3628; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4589: jae 0xb4592; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bbd58: jae 0xbbd5c; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00167028: jae 0xc04774f2; pop ebx; pop esi; ret; 
0x000f2815: jae 0xf2860; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x00104ffb: jb 0x104ffd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001050fd: jb 0x1050ff; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010bc89: jb 0x10bcab; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00119b7c: jb 0x119b8f; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00119b9a: jb 0x119ba0; xor eax, eax; pop ebx; ret; 
0x00121fb4: jb 0x122004; stc; call dword ptr [eax + 0x6a]; 
0x0012ac5d: jb 0x12ac63; cmp ecx, edx; sbb eax, eax; ret; 
0x001476aa: jb 0x147672; out dx, al; dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax + 0x68]; 
0x00151307: jb 0x151311; setne al; movzx eax, al; neg eax; ret; 
0x00151339: jb 0x151342; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00159d84: jb 0x159df6; stc; call dword ptr [eax - 0x18]; 
0x0016037d: jb 0x160378; call dword ptr [eax - 0x18]; 
0x001603ac: jb 0x1603a7; call dword ptr [eax - 0x18]; 
0x001603e1: jb 0x1603dc; jmp ptr [eax - 0x7f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x00160414: jb 0x16040f; call dword ptr [eax + 0x6a]; 
0x00160521: jb 0x16051c; call dword ptr [eax - 0x18]; 
0x0016085c: jb 0x160857; call dword ptr [eax - 0x18]; 
0x00160b03: jb 0x160afe; call dword ptr [eax - 0x18]; 
0x00160b2b: jb 0x160b26; call dword ptr [eax - 0x18]; 
0x00160c1f: jb 0x160c1a; call dword ptr [eax - 0x18]; 
0x001616f4: jb 0x1616ef; call dword ptr [eax + 0x6a]; 
0x001617f4: jb 0x1617ef; call dword ptr [eax - 0x18]; 
0x00161d44: jb 0x161d3f; call dword ptr [eax + 0x6a]; 
0x00161d98: jb 0x161d93; jmp dword ptr [ebp - 0x75]; 
0x00161e44: jb 0x161e3f; call dword ptr [eax - 0x18]; 
0x001620e4: jb 0x1620df; call dword ptr [eax + 0x6a]; 
0x001620e4: jb 0x1620df; call dword ptr [eax + 0x6a]; push es; call 0x14bb50; add esp, 0x1c; ret; 
0x00162138: jb 0x162133; jmp dword ptr [ebp - 0x75]; 
0x001621e4: jb 0x1621df; call dword ptr [eax - 0x18]; 
0x001621e4: jb 0x1621df; call dword ptr [eax - 0x18]; ret; 
0x00162724: jb 0x16271f; call dword ptr [eax + 0x6a]; 
0x00162724: jb 0x16271f; call dword ptr [eax + 0x6a]; or al, ch; and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x00162778: jb 0x162773; jmp dword ptr [ebp - 0x75]; 
0x00162824: jb 0x16281f; call dword ptr [eax - 0x18]; 
0x00162b14: jb 0x162b0f; call dword ptr [eax + 0x6a]; 
0x00162b68: jb 0x162b63; jmp dword ptr [ebp - 0x75]; 
0x00162c14: jb 0x162c0f; call dword ptr [eax - 0x18]; 
0x00162de4: jb 0x162ddf; call dword ptr [eax + 0x6a]; 
0x00162e38: jb 0x162e33; jmp dword ptr [ebp - 0x75]; 
0x00162ee4: jb 0x162edf; call dword ptr [eax - 0x18]; 
0x00162ee4: jb 0x162edf; call dword ptr [eax - 0x18]; ret; 
0x00163344: jb 0x16333f; call dword ptr [eax + 0x6a]; 
0x00163344: jb 0x16333f; call dword ptr [eax + 0x6a]; pop es; call 0x14bb50; add esp, 0x1c; ret; 
0x00163398: jb 0x163393; jmp dword ptr [ebp - 0x75]; 
0x00163444: jb 0x16343f; call dword ptr [eax - 0x18]; 
0x001664d8: jb 0x16649c; mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x00167f17: jb 0x167f12; call dword ptr [eax - 1]; 
0x00171939: jb 0x171950; sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x001725fa: jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x001732d1: jb 0x1732cc; call dword ptr [eax + 0x6a]; 
0x00173e79: jb 0x173e74; call dword ptr [eax + 0x6a]; 
0x00173f25: jb 0x173f20; call dword ptr [eax + 0x6a]; 
0x00174848: jb 0x174843; call dword ptr [eax + 0x6a]; 
0x00175305: jb 0x175300; call dword ptr [eax + 0x6a]; 
0x001757c1: jb 0x1757bc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0017ace9: jb 0x17acef; cmp ecx, edx; sbb eax, eax; ret; 
0x0017e045: jb 0x17e056; xchg esp, eax; ret; 
0x0017ea9a: jb 0x17ea37; out dx, eax; jmp dword ptr [ecx]; 
0x00186f30: jb 0x186f36; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186fe0: jb 0x186fe6; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00194373: jb 0x194367; call dword ptr [ebx - 0x18]; 
0x00194373: jb 0x194367; call dword ptr [ebx - 0x18]; mov ebp, 0x81fffe92; ret; 
0x00199a40: jb 0x199a50; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0019dfd3: jb 0x19e010; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019df15: jb 0x19e010; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019dfe3: jb 0x19e010; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019dff3: jb 0x19e010; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019e003: jb 0x19e010; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019df3e: jb 0x19e010; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019df63: jb 0x19e010; lea eax, [edi + 1]; pop edi; ret; 
0x0019df73: jb 0x19e010; lea eax, [edi + 2]; pop edi; ret; 
0x0019deaa: jb 0x19e010; lea eax, [edi + 3]; pop edi; ret; 
0x0019df83: jb 0x19e010; lea eax, [edi + 4]; pop edi; ret; 
0x0019df93: jb 0x19e010; lea eax, [edi + 5]; pop edi; ret; 
0x0019dfa3: jb 0x19e010; lea eax, [edi + 6]; pop edi; ret; 
0x0019dedb: jb 0x19e010; lea eax, [edi + 7]; pop edi; ret; 
0x0019dfb3: jb 0x19e010; lea eax, [edi + 8]; pop edi; ret; 
0x0019dfc3: jb 0x19e010; lea eax, [edi + 9]; pop edi; ret; 
0x0019eff3: jb 0x19f030; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019ef45: jb 0x19f030; lea eax, [eax + 0xb]; pop edi; ret; 
0x0019f003: jb 0x19f030; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019f013: jb 0x19f030; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019f023: jb 0x19f030; lea eax, [eax + 0xe]; pop edi; ret; 
0x0019ef6e: jb 0x19f030; lea eax, [eax + 0xf]; pop edi; ret; 
0x0019ef83: jb 0x19f030; lea eax, [eax + 1]; pop edi; ret; 
0x0019ef93: jb 0x19f030; lea eax, [eax + 2]; pop edi; ret; 
0x0019eedb: jb 0x19f030; lea eax, [eax + 3]; pop edi; ret; 
0x0019efa3: jb 0x19f030; lea eax, [eax + 4]; pop edi; ret; 
0x0019efb3: jb 0x19f030; lea eax, [eax + 5]; pop edi; ret; 
0x0019efc3: jb 0x19f030; lea eax, [eax + 6]; pop edi; ret; 
0x0019ef0e: jb 0x19f030; lea eax, [eax + 7]; pop edi; ret; 
0x0019efd3: jb 0x19f030; lea eax, [eax + 8]; pop edi; ret; 
0x0019efe3: jb 0x19f030; lea eax, [eax + 9]; pop edi; ret; 
0x000740aa: jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x0007a7ae: jb 0x7a7c4; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0007b9c2: jb 0x7b9b8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080113: jb 0x80098; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00080348: jb 0x80388; cli; jmp dword ptr [esi - 0x70]; 
0x00085f72: jb 0x85f68; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00089cea: jb 0x89cd7; add eax, 0x84e8b00; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008c8cb: jb 0x8c8d7; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x0008e040: jb 0x8e091; stc; call dword ptr [eax - 0x18]; 
0x000903aa: jb 0x903e5; cli; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0009a3fd: jb 0x9a38a; dec esp; and al, 0x74; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000b3766: jb 0xb2b20; call 0x17d651; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b90: jb 0xb2b20; call 0x17d651; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b79: jb 0xb2b20; call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b5e: jb 0xb2b20; call 0x17d651; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b3c: jb 0xb2b20; call 0x17d651; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b36d6: jb 0xb2bb8; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000b4e66: jb 0xb4160; call 0x17d651; add ecx, 0x10b02f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41d0: jb 0xb4160; call 0x17d651; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41b9: jb 0xb4160; call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b419e: jb 0xb4160; call 0x17d651; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b417c: jb 0xb4160; call 0x17d651; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba706: jb 0xba100; call 0x17d651; add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba170: jb 0xba100; call 0x17d651; add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba159: jb 0xba100; call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba11c: jb 0xba100; call 0x17d651; add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f2903: jb 0xf2905; add byte ptr [edx + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0010245e: jbe 0x102460; xor eax, eax; xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x0010409f: jbe 0x1040a9; call dword ptr [eax + 0xc]; 
0x0010409c: jbe 0x1040b6; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x00104097: jbe 0x1040b9; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0010a27e: jbe 0x10a280; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x0010ab4e: jbe 0x10ab50; xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011146d: jbe 0x11147b; call dword ptr [esi + 0x24]; 
0x00111e04: jbe 0x111e12; call dword ptr [esi + 0x24]; 
0x00112580: jbe 0x11258e; call dword ptr [esi + 0x24]; 
0x00112f24: jbe 0x112f32; call dword ptr [esi + 0x24]; 
0x001136b0: jbe 0x1136be; call dword ptr [esi + 0x24]; 
0x00114054: jbe 0x114062; call dword ptr [esi + 0x24]; 
0x0011b013: jbe 0x11b015; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011b03c: jbe 0x11b03e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011b3fe: jbe 0x11b400; xor eax, eax; ret; 
0x0011b496: jbe 0x11b498; mov eax, dword ptr [eax + 0x378]; pop ebx; ret; 
0x00120117: jbe 0x120140; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012269d: jbe 0x1226f0; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012272d: jbe 0x122780; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x00122b40: jbe 0x122b60; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x001231f6: jbe 0x1231f8; ret; 
0x00129822: jbe 0x129834; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012a147: jbe 0x12a108; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0012ef1c: jbe 0x12ef83; stc; call dword ptr [eax + 0x56]; 
0x00131d30: jbe 0x131d84; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00133bfe: jbe 0x133c00; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001375c6: jbe 0x1375c8; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00137d16: jbe 0x137d18; mov eax, 0xffffffff; ret; 
0x00139372: jbe 0x1393d9; stc; call dword ptr [eax + 0x6a]; 
0x00139372: jbe 0x1393d9; stc; call dword ptr [eax + 0x6a]; add al, ch; ret 0xf3b1; 
0x00139496: jbe 0x1394fd; stc; call dword ptr [eax + 0x6a]; 
0x00139594: jbe 0x1395fb; stc; call dword ptr [eax + 0x6a]; 
0x001396db: jbe 0x139742; stc; call dword ptr [eax + 0x6a]; 
0x001407b6: jbe 0x1407b8; xor eax, eax; ret; 
0x001467ae: jbe 0x1467b0; xor eax, eax; ret; 
0x00146d2d: jbe 0x146cb2; ret 0x8901; 
0x0014c0c0: jbe 0x14c10f; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00163abe: jbe 0x163ac0; endbr32; mov eax, 1; ret; 
0x00163cbe: jbe 0x163cc0; endbr32; ret; 
0x00163cce: jbe 0x163cd0; endbr32; xor eax, eax; ret; 
0x00164acf: jbe 0x164ae1; push ebx; call dword ptr [esi + 0x14]; 
0x00165b64: jbe 0x165b70; mov eax, 2; pop ebx; pop esi; ret; 
0x00165e66: jbe 0x165e68; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016601d: jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x00166060: jbe 0x16606e; push edi; call dword ptr [eax + 0x10]; 
0x001660ab: jbe 0x166112; stc; call dword ptr [eax + 0x6a]; 
0x001662be: jbe 0x166325; stc; call dword ptr [eax + 0x6a]; 
0x001663be: jbe 0x1663c0; xor eax, eax; ret; 
0x0016b616: jbe 0x16b67d; stc; call dword ptr [eax + 0x6a]; 
0x0016b652: jbe 0x16b6b9; stc; call dword ptr [eax + 0x6a]; 
0x0016b7b2: jbe 0x16b819; stc; call dword ptr [eax + 0x6a]; 
0x0016b8fe: jbe 0x16b900; xor eax, eax; pop ebx; ret; 
0x0016db63: jbe 0x16dae6; les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016ec6e: jbe 0x16ec70; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0017190e: jbe 0x171910; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00171d0e: jbe 0x171d10; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00177910: jbe 0x17790b; call dword ptr [edi + 0x56]; 
0x0017792b: jbe 0x177926; call dword ptr [ebp + 0x56]; 
0x0017813d: jbe 0x178138; call dword ptr [esi + 0x57]; 
0x00178ac1: jbe 0x178abc; call dword ptr [edi + 0x53]; 
0x00178bf8: jbe 0x178bf3; call dword ptr [eax - 0x18]; 
0x00178c26: jbe 0x178c21; call dword ptr [eax - 0x18]; 
0x00178de7: jbe 0x178d6c; in al, dx; add al, 0x83; ret; 
0x00179092: jbe 0x17908d; call dword ptr [ebp + 0x50]; 
0x001793e9: jbe 0x1793e4; call dword ptr [eax - 0x18]; 
0x00179406: jbe 0x179408; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0017cdd3: jbe 0x17cdce; call dword ptr [eax - 0x18]; 
0x0017d32e: jbe 0x17d330; test al, al; jne 0x17d356; mov eax, 4; add esp, 0xc; ret; 
0x0017d33e: jbe 0x17d340; mov eax, 2; add esp, 0xc; ret; 
0x0017d3c3: jbe 0x17d3af; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x001868b0: jbe 0x1868b6; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0018696e: jbe 0x186974; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00194093: jbe 0x194183; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001940b3: jbe 0x194183; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0019d3ae: jbe 0x19d3b0; lea eax, [edi + 2]; pop edi; ret; 
0x0019d3be: jbe 0x19d3c0; lea eax, [edi + 3]; pop edi; ret; 
0x0019d3ce: jbe 0x19d3d0; lea eax, [edi + 4]; pop edi; ret; 
0x0019d3de: jbe 0x19d3e0; lea eax, [edi + 5]; pop edi; ret; 
0x0019d3ee: jbe 0x19d3f0; lea eax, [edi + 6]; pop edi; ret; 
0x0019d3fe: jbe 0x19d400; lea eax, [edi + 8]; pop edi; ret; 
0x0019d40e: jbe 0x19d410; lea eax, [edi + 9]; pop edi; ret; 
0x0019d41e: jbe 0x19d420; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019d42e: jbe 0x19d430; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d43e: jbe 0x19d440; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019d44e: jbe 0x19d450; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019d45e: jbe 0x19d460; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019d46e: jbe 0x19d470; xor eax, eax; pop edi; ret; 
0x0019d84e: jbe 0x19d850; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019d85e: jbe 0x19d860; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019d86e: jbe 0x19d870; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019d87e: jbe 0x19d880; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019d88e: jbe 0x19d890; lea eax, [edi - 9]; pop edi; ret; 
0x0019d89e: jbe 0x19d8a0; lea eax, [edi - 7]; pop edi; ret; 
0x0019d8ae: jbe 0x19d8b0; lea eax, [edi - 6]; pop edi; ret; 
0x0019d8be: jbe 0x19d8c0; lea eax, [edi - 5]; pop edi; ret; 
0x0019d8ce: jbe 0x19d8d0; lea eax, [edi - 3]; pop edi; ret; 
0x0019d8de: jbe 0x19d8e0; lea eax, [edi - 2]; pop edi; ret; 
0x0019d8ee: jbe 0x19d8f0; lea eax, [edi - 1]; pop edi; ret; 
0x0019d8fe: jbe 0x19d900; xor eax, eax; pop edi; ret; 
0x0019d9fe: jbe 0x19da00; and eax, 3; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da0e: jbe 0x19da10; and eax, 7; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da1e: jbe 0x19da20; and eax, 0x1f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da2e: jbe 0x19da30; and eax, 0x3f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da3e: jbe 0x19da40; and eax, 0x7f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da4e: jbe 0x19da50; and eax, 0x1ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019ddde: jbe 0x19dde0; lea eax, [edi + 2]; pop edi; ret; 
0x0019ddee: jbe 0x19ddf0; lea eax, [edi + 4]; pop edi; ret; 
0x0019ddfe: jbe 0x19de00; lea eax, [edi + 5]; pop edi; ret; 
0x0019de0e: jbe 0x19de10; lea eax, [edi + 6]; pop edi; ret; 
0x0019de1e: jbe 0x19de20; lea eax, [edi + 8]; pop edi; ret; 
0x0019de2e: jbe 0x19de30; lea eax, [edi + 9]; pop edi; ret; 
0x0019de3e: jbe 0x19de40; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019de4e: jbe 0x19de50; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019de5e: jbe 0x19de60; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019de6e: jbe 0x19de70; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019e61e: jbe 0x19e620; add edx, 2; jl 0x19e6d0; lea eax, [ecx + 2]; ret; 
0x0019e62e: jbe 0x19e630; add edx, 3; jl 0x19e6d0; lea eax, [ecx + 3]; ret; 
0x0019e63e: jbe 0x19e640; add edx, 5; jl 0x19e6d0; lea eax, [ecx + 5]; ret; 
0x0019e64e: jbe 0x19e650; add edx, 6; jl 0x19e6d0; lea eax, [ecx + 6]; ret; 
0x0019f6ce: jbe 0x19f6d0; pop edi; pop esi; pop ebx; ret; 
0x0019f91e: jbe 0x19f920; mov eax, ecx; ret; 
0x0019fbbe: jbe 0x19fbc0; test ah, 0xf0; jne 0x19fbe0; lea eax, [edi - 8]; pop edi; ret; 
0x0019fbde: jbe 0x19fbe0; lea eax, [edi - 4]; pop edi; ret; 
0x0019fbee: jbe 0x19fbf0; xor eax, eax; pop edi; ret; 
0x00024865: jbe 0x248cc; stc; call dword ptr [eax + 0x6a]; 
0x00024930: jbe 0x24997; stc; call dword ptr [edi + 0x57]; 
0x00024ea9: jbe 0x24ea4; call dword ptr [eax + 0x6a]; 
0x00024ede: jbe 0x24ee0; endbr32; call 0x17d641; add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x0002606e: jbe 0x26070; endbr32; call 0x17d641; add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x000299c7: jbe 0x29954; je 0x299ef; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x000304a1: jbe 0x304a7; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00033e1f: jbe 0x33e86; stc; call dword ptr [esi - 1]; 
0x0003cf0e: jbe 0x3cf10; endbr32; call 0x17d641; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cf66: jbe 0x3cf68; mov eax, 0xffffffff; ret; 
0x00041c10: jbe 0x41c1f; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00041c30: jbe 0x41c3f; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x0004237e: jbe 0x42380; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00057502: jbe 0x5748d; ret 0x40c7; 
0x00057fa6: jbe 0x57f65; std; dec dword ptr [ebp - 0x677a77a]; call dword ptr [eax - 0x73]; 
0x0005e696: jbe 0x5e6d2; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00060c31: jbe 0x60c53; movzx eax, byte ptr [eax + ebp - 0x20]; mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00061a9e: jbe 0x61aa0; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x00061b13: jbe 0x61b35; mov dword ptr [esp + 0x18], 1; jmp ebx; 
0x00060b22: jbe 0x61b9f; jmp eax; 
0x000695cb: jbe 0x695bf; mov dword ptr [ebx], ecx; pop ebx; pop esi; pop edi; ret; 
0x0006ce06: jbe 0x6ce08; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x0006c138: jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x0006d73b: jbe 0x6d72f; mov dword ptr [ebx], ecx; pop ebx; pop esi; pop edi; ret; 
0x00074eab: jbe 0x74e9f; mov dword ptr [ebx], ecx; pop ebx; pop esi; pop edi; ret; 
0x000778de: jbe 0x778e0; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007cf4e: jbe 0x7cf50; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00080b66: jbe 0x80b68; mov edx, 1; mov eax, edx; ret; 
0x00086d1e: jbe 0x86d20; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00086d9e: jbe 0x86da0; endbr32; xor eax, eax; ret; 
0x00088dce: jbe 0x88dd0; endbr32; ret; 
0x0008a864: jbe 0x8a870; ret; 
0x0008a89e: jbe 0x8a8a0; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0008c98e: jbe 0x8c990; mov eax, 0x16; ret; 
0x0008e26c: jbe 0x8e278; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0008e2d5: jbe 0x8e2e0; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x0008e866: jbe 0x8e868; mov eax, 3; ret; 
0x00093e4e: jbe 0x93e50; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0009a066: jbe 0x9a068; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0009a46e: jbe 0x9a470; mov ecx, dword ptr [esp + 0x74]; mov eax, 0x104; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009a83a: jbe 0x9a840; ret; 
0x0009a87e: jbe 0x9a880; nop; mov dword ptr [edx + 0x370], eax; ret; 
0x0009a87a: jbe 0x9a880; ret; 
0x0009aa08: jbe 0x9aa10; ret; 
0x0009eb5e: jbe 0x9eb60; ret; 
0x000a08ae: jbe 0xa08b0; endbr32; mov eax, 0xffffffff; ret; 
0x000a08ee: jbe 0xa08f0; endbr32; ret; 
0x000a08fe: jbe 0xa0900; endbr32; ret; 
0x000a5062: jbe 0xa5074; cmove eax, edx; ret; 
0x000a5f62: jbe 0xa5f74; cmove eax, edx; ret; 
0x000a6112: jbe 0xa6124; cmove eax, edx; ret; 
0x000ab01e: jbe 0xab020; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ab10e: jbe 0xab110; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ace7e: jbe 0xace80; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000af24e: jbe 0xaf250; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b12ce: jbe 0xb12d0; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b248e: jbe 0xb2490; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b35be: jbe 0xb35c0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b4cae: jbe 0xb4cb0; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba25a: jbe 0xba25e; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000baa5e: jbe 0xbaa60; xor eax, eax; pop edi; ret; 
0x000baabe: jbe 0xbaaf0; add eax, ecx; ret; 
0x000bad95: jbe 0xbadd0; add eax, edi; pop edi; ret; 
0x000bada8: jbe 0xbadd0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000badb8: jbe 0xbadd0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000badc8: jbe 0xbadd0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bc89e: jbe 0xbc8a0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000bc8ae: jbe 0xbc8b0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000bc8be: jbe 0xbc8c0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000bc8ce: jbe 0xbc8d0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000bc8de: jbe 0xbc8e0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000bc8ee: jbe 0xbc8f0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000bc8fe: jbe 0xbc900; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000bc90e: jbe 0xbc910; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000bc91e: jbe 0xbc920; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000bc92e: jbe 0xbc930; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000bc93e: jbe 0xbc940; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000bc94e: jbe 0xbc950; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000bc95e: jbe 0xbc960; mov eax, 0xffffffff; ret; 
0x000ccf54: jbe 0xccf5e; call ebx; 
0x000d1ece: jbe 0xd1ed0; mov eax, 1; jg 0xd1ed9; neg eax; ret; 
0x000d6ba6: jbe 0xd6b79; cmc; dec dword ptr [ebp - 0x652d37d]; call dword ptr [eax - 0x73]; 
0x000d6fdc: jbe 0xd6fe8; mov eax, edx; ret; 
0x000e922e: jbe 0xe9230; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ebbae: jbe 0xebbb0; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f30fe: jbe 0xf3100; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000f53ad: jbe 0xf5406; stc; call dword ptr [eax + 0x55]; 
0x001023b5: je 0x1023d0; cmp byte ptr [esp + 0x17], 0; jne 0x102460; call ecx; 
0x0010265d: je 0x102592; call eax; 
0x001026b5: je 0x1025e7; call eax; 
0x00102655: je 0x10267d; add byte ptr [ebx - 0x3f7afbbb], cl; je 0x102592; call eax; 
0x0010269d: je 0x1026c5; add byte ptr [ebx - 0x3f7af7bb], cl; je 0x102592; call eax; 
0x001026e5: je 0x10270d; add byte ptr [ebx - 0x3f7afbbb], cl; je 0x1025e7; call eax; 
0x00102ad7: je 0x102afd; push esp; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001032ae: je 0x1032d4; sub al, 0xe8; mov dl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001041bd: je 0x1041e5; add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x00104ddf: je 0x104df0; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x00104e6a: je 0x104e90; sbb byte ptr [edx - 1], ch; call 0x105380; add esp, 0x1c; ret; 
0x00104e90: je 0x104eb6; sbb byte ptr [edx - 1], ch; call 0x104fa0; add esp, 0x1c; ret; 
0x00105304: je 0x10532a; cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0010617a: je 0x1061a0; push 0x1081ee8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x00107e14: je 0x107e3a; sbb byte ptr [esi - 0x18], dl; ret; 
0x00109a35: je 0x109a5d; add byte ptr [eax + 1], bh; ret; 
0x00109ba5: je 0x109bcd; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0010a48c: je 0x10a4a5; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x0010a5bd: je 0x10a5e5; add byte ptr [ebx - 0x5db73], al; call dword ptr [eax]; 
0x0010a77d: je 0x10a7a5; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0010a9aa: je 0x10a9f8; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0010b011: je 0x10b037; sbb al, 0xe8; stosb byte ptr es:[di], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010ba50: je 0x10ba76; sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010bc32: je 0x10bc48; mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x0010bdc7: je 0x10be24; pop esi; ret; 
0x0010bf5f: je 0x10bfbc; pop esi; ret; 
0x0010c599: je 0x10c526; pop esp; and al, 0x70; lea edx, [esp + 8]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x0010c550: je 0x10c5ad; pop esi; ret; 
0x00111a5b: je 0x111a81; xor bh, bh; ja 0x111a6d; call dword ptr [edi + 0x24]; 
0x00111cd7: je 0x111cfd; xor bh, bh; ja 0x111ce9; call dword ptr [edi + 0x24]; 
0x00111e00: je 0x111e26; xor bh, bh; jbe 0x111e12; call dword ptr [esi + 0x24]; 
0x00111e39: je 0x111e5f; or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x00111e69: je 0x111e8f; or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x00112b7b: je 0x112ba1; xor bh, bh; ja 0x112b8d; call dword ptr [edi + 0x24]; 
0x00112df7: je 0x112e1d; xor bh, bh; ja 0x112e09; call dword ptr [edi + 0x24]; 
0x00112f20: je 0x112f46; xor bh, bh; jbe 0x112f32; call dword ptr [esi + 0x24]; 
0x00112f59: je 0x112f7f; or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x00112f89: je 0x112faf; or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x00113cab: je 0x113cd1; xor bh, bh; ja 0x113cbd; call dword ptr [edi + 0x24]; 
0x00113f27: je 0x113f4d; xor bh, bh; ja 0x113f39; call dword ptr [edi + 0x24]; 
0x00114050: je 0x114076; xor bh, bh; jbe 0x114062; call dword ptr [esi + 0x24]; 
0x00114089: je 0x1140af; or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x001140b9: je 0x1140df; or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x001147f4: je 0x114c78; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00115281: je 0x1152a7; sbb byte ptr [edx - 0x64], ch; call 0x10b4c0; add esp, 0x1c; ret; 
0x00115595: je 0x1155bb; cmp al, 0xe8; ret; 
0x0011575d: je 0x115783; sbb byte ptr [edx - 0x64], ch; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00115781: je 0x1157a7; sbb byte ptr [edx - 0x64], ch; call 0x10c1a0; add esp, 0x1c; ret; 
0x001157d9: je 0x115836; pop esi; ret; 
0x00115894: je 0x1158ba; sbb al, 0xe8; xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001158e4: je 0x11590a; sub byte ptr [edx - 0x64], ch; call 0x115900; add esp, 0x2c; ret; 
0x00116045: je 0x11606b; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x00116c2a: je 0x116c50; sbb byte ptr [edx - 0x64], ch; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00116c4e: je 0x116c74; sbb byte ptr [edx - 0x64], ch; call 0x10c1a0; add esp, 0x1c; ret; 
0x00116cf9: je 0x116c86; pop esp; and al, 0x70; lea edx, [esp + 8]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00116ca6: je 0x116d03; pop esi; ret; 
0x00117926: je 0x11794c; insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011791f: je 0x117980; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001179e0: je 0x117a06; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117f3b: je 0x117f70; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00117feb: je 0x118020; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001181d6: je 0x118200; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00118256: je 0x118280; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001182d6: je 0x118300; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00118356: je 0x118380; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00118ce9: je 0x118c78; mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118c6c: je 0x118c92; js 0x118bfd; push esp; and al, 0x28; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118e57: je 0x118e7d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001190a1: je 0x1190c7; sbb al, 0xe8; mov bh, 0x54; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001190d6: je 0x1190fc; sbb al, 0xe8; adc byte ptr [eax + eax], 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x001191c4: je 0x119149; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00119858: je 0x11987e; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x00119fb6: je 0x119fdc; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0011a648: je 0x11a6af; stc; call dword ptr [eax + 0x6a]; 
0x0011a71d: je 0x11a6ee; stc; call dword ptr [eax - 0x18]; 
0x0011a7a8: je 0x11a7f0; call eax; 
0x0011a8ea: je 0x11a988; call eax; 
0x0011aadd: je 0x11ab05; add al, ch; sti; fcomi st(6); dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x0011b468: je 0x11b478; cmp ecx, edx; jne 0x11b460; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0011b9ca: je 0x11b9cd; ret; 
0x0011c0de: je 0x11c0e8; add esp, 0xc; ret; 
0x0011c12e: je 0x11c138; add esp, 0xc; ret; 
0x0011cd82: je 0x11cd90; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0011d0cb: je 0x11d0f1; sub al, 0x8b; jl 0x11d0f5; xor byte ptr [ebp - 0x6a3cd7d], cl; call dword ptr [eax + 0x55]; 
0x0011d3ba: je 0x11d41c; stc; call dword ptr [edx + 0x52]; 
0x0011d4d2: je 0x11d45d; push esi; add al, 0x89; ret 0xeac1; 
0x0011d9c2: je 0x11d94d; push esi; add al, 0x89; ret 0xeac1; 
0x0011da37: je 0x11d9c2; push esi; add al, 0x89; ret 0xeac1; 
0x0011db8f: je 0x11db1a; push esi; add al, 0x89; ret 0xeac1; 
0x0011dcca: je 0x11dc55; push esi; add al, 0x89; ret 0xeac1; 
0x0011dd3b: je 0x11dcc6; push esi; add al, 0x89; ret 0xeac1; 
0x0011dee3: je 0x11de6e; push esi; add al, 0x89; ret 0xeac1; 
0x0011e2d1: je 0x11e25c; push esi; add al, 0x89; ret 0xeac1; 
0x0011e528: je 0x11e52d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0011e54f: je 0x11e554; mov dword ptr [edx + 4], eax; test eax, eax; je 0x11e55a; mov dword ptr [eax], edx; ret; 
0x0011e556: je 0x11e55a; mov dword ptr [eax], edx; ret; 
0x0011ea4a: je 0x11ea70; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0011ebf3: je 0x11ec19; sbb al, 0xe8; add eax, 0x83fff3f4; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0011f50c: je 0x11f520; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0012010e: je 0x120134; sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x277602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00120141: je 0x120167; or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x001208cc: je 0x1208f2; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x00120bb3: je 0x120bd9; xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0012256f: je 0x122595; adc al, ch; ret 0x5b0; 
0x0012319e: je 0x1231a4; test edx, edx; jne 0x1231a8; ret; 
0x001231c2: je 0x1231c8; test edx, edx; jne 0x1231d0; ret; 
0x001231ee: je 0x1231f8; jmp 0x1227b0; lea esi, [esi]; ret; 
0x00123638: je 0x1235ee; stc; call dword ptr [eax - 0x73]; 
0x00123654: je 0x12360a; stc; call dword ptr [eax - 0x73]; 
0x00123670: je 0x123626; stc; call dword ptr [eax - 0x73]; 
0x0012368c: je 0x123642; stc; call dword ptr [eax - 0x73]; 
0x001236a8: je 0x12365e; stc; call dword ptr [eax - 0x73]; 
0x001236c4: je 0x12367a; stc; call dword ptr [eax - 0x73]; 
0x001236e0: je 0x123696; stc; call dword ptr [eax - 0x73]; 
0x00123b88: je 0x123bae; sbb byte ptr [edx], ch; call 0x123dd0; add esp, 0x1c; ret; 
0x0012437f: je 0x124382; ret; 
0x0012442a: je 0x124456; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x0012451a: je 0x124528; pop ebx; setg al; pop esi; pop edi; ret; 
0x00124525: je 0x12454d; add byte ptr [eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00124592: je 0x12459d; pop esi; pop ebx; jl 0x24e60; ret; 
0x00124580: je 0x1245a6; sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00124de4: je 0x124e0a; cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125249: je 0x125280; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012533b: je 0x125370; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012536b: je 0x1253c3; pop ebx; pop esi; ret; 
0x001255a5: je 0x1255c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00125c23: je 0x125c49; inc esp; mov eax, 0xac; mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00125e34: je 0x125e5a; cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125fe7: je 0x12600d; lea ecx, fs:[esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00126444: je 0x12646a; cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001265c9: je 0x126600; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00126cd7: je 0x126cd9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001270af: je 0x1270d5; and byte ptr [ebp - 0x69bc27a], cl; call dword ptr [eax - 0x18]; 
0x00127ef4: je 0x127eab; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0012802a: je 0x128050; add al, 0x89; loope 0x127fb9; ret 0x448b; 
0x0012858f: je 0x1285b5; adc al, 0x89; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x001285fa: je 0x128620; and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128b0a: je 0x128b30; push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00129570: je 0x1295d0; mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00129750: je 0x129776; or byte ptr [ebx - 0x47cbdb84], cl; jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129ce0: je 0x129ce8; ret; 
0x00129ce5: je 0x129d0d; add byte ptr [ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x0012a676: je 0x12a688; mov dword ptr [ebx + 0x3cc], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0012a8c2: je 0x12a90b; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0012bbb9: je 0x12bbdf; cmp al, 0xe8; pop ds; or bh, cl; jmp dword ptr [ebp - 0x75]; 
0x0012c827: je 0x12c84d; or al, 0x89; inc edi; adc al, 0x29; ret 0x478b; 
0x0012d0ee: je 0x12d114; and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012d22b: je 0x12d218; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0012d295: je 0x12d2bb; and al, ch; ret; 
0x0012d85b: je 0x12d881; sbb byte ptr [ebx + 0x5182444], cl; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x0012da1e: je 0x12da28; xor eax, eax; pop ebx; ret; 
0x0012e9a5: je 0x12e9cd; add byte ptr [ebx - 0x76e7dba4], cl; inc ebx; add al, 0x83; ret; 
0x0012ec4b: je 0x12ec71; adc al, 1; ret; 
0x0012ef59: je 0x12efc0; stc; call dword ptr [eax + 0x56]; 
0x0012f03f: je 0x12f0a6; stc; call dword ptr [eax + 0x56]; 
0x00130b01: je 0x130b10; add esp, 8; pop ebx; ret; 
0x00130b1a: je 0x130b40; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x00130c57: je 0x130c71; add dword ptr [ebx - 0x12363], ecx; call dword ptr [esi - 0x18]; 
0x00131ce3: je 0x131cf8; ret; 
0x00131e55: je 0x131e7d; add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x001327bd: je 0x1327e5; add dh, dh; ret 0x7420; 
0x00132c2a: je 0x132c50; sbb byte ptr [eax - 0x18], dl; jge 0x132c11; hlt; jmp dword ptr [esi - 0x70]; 
0x001331f5: je 0x133200; add esp, 8; pop ebx; ret; 
0x0013349f: je 0x1334b7; lea eax, [edx - 0xaa6a4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x00133a8c: je 0x133ab2; sub al, 0xe8; pop esp; ret; 
0x00133ad9: je 0x133aff; xor byte ptr [edx - 1], dl; je 0x133b04; sub al, 0xe8; lcall 0x2cc4, 0x83fff452; ret; 
0x00133ade: je 0x133b04; sub al, 0xe8; lcall 0x2cc4, 0x83fff452; ret; 
0x00133e77: je 0x133e9d; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0013405d: je 0x134085; add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00134485: je 0x1344ad; add al, ch; inc ebx; loope 0x13448b; jmp dword ptr [esi - 0x70]; 
0x00136385: je 0x1363ad; add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x001369a7: je 0x1369cd; sbb al, 0x89; ret; 
0x001372d7: je 0x137292; stc; call dword ptr [eax - 0x18]; 
0x0013730a: je 0x137300; add esp, 8; pop ebx; ret; 
0x001374e9: je 0x1374f8; test eax, eax; jne 0x137500; mov eax, ebx; pop ebx; ret; 
0x001376c9: je 0x1376ef; sub al, 0x83; ret 0x8902; 
0x00139a28: je 0x139a4e; adc byte ptr [ebp - 0x6c04d6a], cl; call dword ptr [edx - 0x46]; 
0x00139ed0: je 0x139ef6; sub al, 0xe8; clc; or al, 0xf1; jmp dword ptr [esi - 0x77]; 
0x0013a9c5: je 0x13a9d0; add esp, 4; pop ebx; pop esi; ret; 
0x0013b356: je 0x13b360; add eax, 0x10; jmp 0x13a9b0; ret; 
0x0013b37a: je 0x13b388; jmp 0x13a9b0; lea esi, [esi]; ret; 
0x0013bb5c: je 0x13bb68; add esp, 8; pop ebx; ret; 
0x0013bb65: je 0x13bb8d; add dh, al; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x0013e54d: je 0x13e575; add byte ptr [ebx - 0x44f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013e5f5: je 0x13e61d; add byte ptr [ebx - 0x7872f714], al; ret; 
0x00140285: je 0x1402ad; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001407b1: je 0x1407b8; jmp 0x140740; lea esi, [esi]; xor eax, eax; ret; 
0x00140f78: je 0x140f88; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00141925: je 0x14194b; xor al, ch; arpl word ptr [eax], bx; out dx, al; jmp dword ptr [ebp - 0x5f]; 
0x00143376: je 0x14339c; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x00143435: je 0x14345d; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00144871: je 0x144878; pop ebx; ret; 
0x001448c1: je 0x1448e8; mov eax, 1; xor eax, 1; pop ebx; ret; 
0x0014573d: je 0x145763; adc al, 0x29; ret; 
0x001466d8: je 0x1466e0; add esp, 0x18; pop ebx; ret; 
0x001467a4: je 0x1467b8; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x00147036: je 0x14705c; and al, ch; shl byte ptr [edx + 0x4d8bfff5], cl; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x00147427: je 0x14744d; add al, 0x83; ret; 
0x00147852: je 0x14785e; add dword ptr [eax + 8], 1; je 0x14787d; add esp, 0xc; ret; 
0x00147858: je 0x14787d; add esp, 0xc; ret; 
0x001481e5: je 0x1481ec; cmp dword ptr [eax + 8], edx; jne 0x1481e0; ret; 
0x0014824d: je 0x148275; add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x00149ee1: je 0x149f07; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0014a5a6: je 0x14a5cc; adc al, 0x55; call edi; 
0x0014b866: je 0x14b829; stc; call dword ptr [eax - 0x73]; 
0x0014c15d: je 0x14c185; add byte ptr [ebp - 0x77], dl; ret 0xe589; 
0x0014c73d: je 0x14c760; xor ecx, ecx; cmp eax, 2; jne 0x14c750; mov eax, ecx; ret; 
0x0014c878: je 0x14c89e; adc al, ch; mov ecx, 0x8100030d; ret; 
0x0014c941: je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0014cad9: je 0x14cb3e; mov byte ptr [ebx + 0x5ea8], 0; mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0014cb61: je 0x14cbc6; mov byte ptr [ebx + 0x4e68], 0; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x0014d289: je 0x14d270; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0014d295: je 0x14d2bd; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014f5e8: je 0x14f60e; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0014f5ec: je 0x14f612; dec eax; push dword ptr [esp + 0x10]; call edi; 
0x0014f8bb: je 0x14f8e1; and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x00151bff: je 0x151c10; mov eax, edx; pop ebx; pop esi; ret; 
0x00151c9d: je 0x151cc5; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0015203b: je 0x152061; adc al, 0x83; ret 0x8301; 
0x001522a1: je 0x1522c7; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x001522d1: je 0x1522f7; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x00152301: je 0x152327; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x00152335: je 0x15235b; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x00152369: je 0x15238f; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x0015239d: je 0x1523c3; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x001549f2: je 0x154a18; push eax; push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x001549f6: je 0x154a1c; inc esp; mov eax, dword ptr [esp + 0x38]; call eax; 
0x00155388: je 0x1553ae; adc al, ch; test eax, 0x81000282; ret; 
0x00157c75: je 0x157c80; sub esp, 0xc; push esi; call eax; 
0x00158005: je 0x158010; sub esp, 0xc; push esi; call eax; 
0x001581c9: je 0x1581ef; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x001581cd: je 0x1581f3; pop eax; push esi; call edi; 
0x0015850a: je 0x15851d; sub esp, 0xc; push eax; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x0015866d: je 0x15882e; sub esp, 0xc; push edi; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x001590bc: je 0x1590e2; cmp byte ptr [ebp - 0x68fdb52], cl; call dword ptr [ebp - 0x73]; 
0x00159517: je 0x15953d; sub byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0015bcf5: je 0x15bce3; jmp dword ptr [ebp - 0x75]; 
0x0015e7af: je 0x15e7c6; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0015ebbd: je 0x15ebe5; add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x001604e2: je 0x160508; and al, 0x89; ret; 
0x001607bc: je 0x1607e2; cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x0016368d: je 0x1636b3; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00163b8c: je 0x163b97; sub esp, 0xc; push esi; call eax; 
0x00163d2d: je 0x163d55; add byte ptr [ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00163dcd: je 0x163df5; add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x163dfd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00163dd7: je 0x163dfd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00163e06: je 0x163e2c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00163e15: je 0x163efd; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016405e: je 0x164069; sub esp, 0xc; push esi; call eax; 
0x0016403d: je 0x1640d4; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016418e: je 0x1641a3; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0016424b: je 0x164271; adc al, 0xff; je 0x164275; je 0x1642a3; call dword ptr [ecx]; 
0x0016424f: je 0x164275; je 0x1642a3; call dword ptr [ecx]; 
0x00164251: je 0x1642a3; call dword ptr [ecx]; 
0x00164337: je 0x164346; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016437b: je 0x164388; add esp, 8; pop ebx; ret; 
0x001649a8: je 0x1649ce; and byte ptr [ebp - 0xc04a380], cl; jmp dword ptr [ebp - 0x75]; 
0x00164abe: je 0x164a4d; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00164ada: je 0x164a4d; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00164c2e: je 0x164c54; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00164f66: je 0x164f0c; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00164f1b: je 0x164f41; dec eax; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00164f89: je 0x164f94; sub esp, 0xc; push edi; call eax; 
0x001651a2: je 0x165066; sub esp, 0xc; push esi; call eax; 
0x00165189: je 0x1651af; dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001652a5: je 0x1652b0; sub esp, 0xc; push esi; call eax; 
0x001652c5: je 0x1652eb; sbb al, 0x8d; xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax - 0x73]; 
0x001652f6: je 0x16531c; sbb al, 0x8d; xchg byte ptr [ebp + eax*8 - 7], ch; call dword ptr [eax - 0x73]; 
0x00165465: je 0x16548d; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001654ee: je 0x165514; sbb al, 0xe8; jp 0x1654ae; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001655a3: je 0x1655b0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016564e: je 0x165678; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001656e5: je 0x16570d; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00165bec: je 0x165c12; or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00165cc5: je 0x165cd0; sub esp, 0xc; push esi; call eax; 
0x00165e48: je 0x165e68; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00166028: je 0x16612b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00166411: je 0x166437; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00166408: je 0x166448; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016645f: je 0x166485; sbb al, 0x53; call dword ptr [eax]; 
0x0016649a: je 0x1664a8; xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00167ce8: je 0x167cf0; add esp, 4; pop ebx; pop esi; ret; 
0x00167db8: je 0x167dc0; add esp, 4; pop ebx; pop esi; ret; 
0x00167e78: je 0x167e80; add esp, 4; pop ebx; pop esi; ret; 
0x00168bfb: je 0x168c0c; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x00168ea6: je 0x168ecc; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001690f0: je 0x169116; inc eax; push ebp; call esi; 
0x0016926d: je 0x169295; add byte ptr [ecx], ch; ret; 
0x001695af: je 0x1695ba; sub esp, 0xc; push esi; call eax; 
0x00169588: je 0x1696c8; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x001697ec: je 0x1697fa; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001698ea: je 0x1698e5; call dword ptr [eax - 0x73]; 
0x0016a45d: je 0x16a485; add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016aac9: je 0x16aad4; sub esp, 0xc; push esi; call eax; 
0x0016aaaa: je 0x16aae9; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016ac94: je 0x16ac9f; sub esp, 0xc; push edi; call eax; 
0x0016b11f: je 0x16b11a; call dword ptr [eax + 0x53]; 
0x0016b521: je 0x16b51c; call dword ptr [edi + 0x56]; 
0x0016b608: je 0x16b62e; sbb al, 0xe8; sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0016b6e4: je 0x16b6df; call dword ptr [edi + 0x50]; 
0x0016bafb: je 0x16bb21; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x0016bd28: je 0x16bd4e; inc eax; push ebp; call esi; 
0x0016c01d: je 0x16c028; sub esp, 0xc; push ebp; call eax; 
0x0016bfff: je 0x16c108; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0016c3b8: je 0x16c3c6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0016c597: je 0x16c5bd; sbb byte ptr [ebx - 0x75], dl; inc esp; and al, 0x18; call eax; 
0x0016c5a6: je 0x16cae0; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0016cc5e: je 0x16cc77; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016ce33: je 0x16cee0; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push edi; call dword ptr [eax + 0x10]; 
0x0016cf86: je 0x16cf81; call dword ptr [eax - 0x73]; 
0x0016d1bd: je 0x16d1b8; call dword ptr [eax - 0x73]; 
0x0016d3ed: je 0x16d413; cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x0016d548: je 0x16d5a5; pop edi; ret; 
0x0016daad: je 0x16dabe; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0016db85: je 0x16db80; call dword ptr [eax + 0x6a]; 
0x0016dcab: je 0x16dca6; call dword ptr [eax + 0x6a]; 
0x0016e294: je 0x16e2a0; pop ebx; pop esi; pop edi; ret; 
0x0016e30e: je 0x16e318; pop ebx; pop esi; pop edi; ret; 
0x0016e315: je 0x16e33d; add byte ptr [ebx + 0x17083], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016e39e: je 0x16e3b0; pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x0016e42e: je 0x16e440; pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x0016e4be: je 0x16e4d0; pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x0016e678: je 0x16e680; add esp, 4; pop ebx; pop esi; ret; 
0x0016ec77: je 0x16ec9d; adc al, 0x53; call dword ptr [eax]; 
0x0016eda2: je 0x16edc8; sbb al, 0x53; call eax; 
0x0016ee66: je 0x16ee8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016f0ff: je 0x16f118; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x0016f22c: je 0x16f23a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016f32a: je 0x16f325; call dword ptr [eax - 0x73]; 
0x0016f945: je 0x16f953; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016f9c7: je 0x16fa00; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00170375: je 0x17039d; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x001707c3: je 0x1707e0; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x00170865: je 0x170890; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00170955: je 0x170980; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00170f35: je 0x170f60; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00170fdc: je 0x171002; adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x00171039: je 0x17105f; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x00171b8b: je 0x171bb1; xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00172346: je 0x17236c; adc byte ptr [ebp - 0x68aca7a], cl; call dword ptr [eax - 0x73]; 
0x00172945: je 0x17296b; sbb byte ptr [edi - 0x18], dl; xchg edx, eax; xor eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x00172a67: je 0x172a8d; xor byte ptr [ecx], ch; ret 0x5356; 
0x001731f7: je 0x17321d; xor byte ptr [ecx], ch; ret 0x5356; 
0x00173f18: je 0x173f3e; or byte ptr [ebp + 0xa85086], cl; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x72], bl; stc; call dword ptr [eax + 0x6a]; 
0x001751f6: je 0x17521c; jo 0x175223; ret; 
0x0017789d: je 0x1778c5; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00178bf2: je 0x178c18; sbb byte ptr [ebp - 0x689d680], cl; call dword ptr [eax - 0x18]; 
0x00179337: je 0x17934a; add al, 0x83; ret 0x3908; 
0x0017a22c: je 0x17a220; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0017a2a7: je 0x17a2d0; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017a32e: je 0x17a358; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x0017a501: je 0x17a510; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0017add1: je 0x17adf7; or al, 0x8b; inc esp; and al, 0x18; call eax; 
0x0017aee9: je 0x17af0f; or al, 0x8b; inc esp; and al, 0x18; call eax; 
0x0017bd3d: je 0x17bd65; add byte ptr [ecx - 0x7c0f7616], cl; ret; 
0x0017be08: je 0x17be2e; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0017c063: je 0x17c089; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0017c155: je 0x17c17d; add byte ptr [ecx - 0x7cf769b4], cl; ret 0x8d01; 
0x0017d31a: je 0x17d334; cmp al, 4; jne 0x24aa3; mov eax, 8; add esp, 0xc; ret; 
0x0017d78d: je 0x17d7b3; sbb al, 0xe8; mov edx, dword ptr [ecx]; in al, dx; jmp dword ptr [esi - 0x70]; 
0x0017d7cd: je 0x17d7f5; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0017d801: je 0x17d81b; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017d865: je 0x17d873; lea edx, [ebx - 0x1f4]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0017d8e5: je 0x17d8f0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0017df7d: je 0x17dfa5; add byte ptr [eax + 0x7500017d], al; ret 0x448b; 
0x0017e135: je 0x17e140; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0017ec26: je 0x17ec4c; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0017ed61: je 0x17ed70; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0017ede7: je 0x17ee00; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0017f00f: je 0x17f020; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017f596: je 0x17f5bc; and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4d72; 
0x001806e5: je 0x18070d; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x00182265: je 0x18228d; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x00183ab5: je 0x183a66; stc; call dword ptr [eax - 0x73]; 
0x00183c4a: je 0x183c70; sub al, 0xff; je 0x183c74; sub al, 0xe8; ljmp 0x2cc4:0x83fff808; ret; 
0x00183c4e: je 0x183c74; sub al, 0xe8; ljmp 0x2cc4:0x83fff808; ret; 
0x00184075: je 0x18409d; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0018700c: je 0x187010; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018821d: je 0x188230; call 0x17d639; add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00188226: je 0x18828b; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018a21d: je 0x18a230; call 0x17d639; add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018c20f: je 0x18c230; call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e33d: je 0x18e365; add bh, dh; ret 0xf; 
0x0018e452: je 0x18e470; call 0x17d639; add ebx, 0x407ff; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f432: je 0x18f450; call 0x17d639; add ebx, 0x3f9df; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00190432: je 0x190450; call 0x17d639; add ebx, 0x3eb9f; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019143d: je 0x191465; add bh, dh; ret 0xf; 
0x0019287d: je 0x1928a5; add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x001928cd: je 0x1928f5; add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019292d: je 0x192955; add byte ptr [eax + 1], bh; ja 0x192939; neg eax; ret; 
0x0019417d: je 0x1941a5; add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x0019956d: je 0x199595; add byte ptr [eax + 1], bh; ja 0x199579; neg eax; ret; 
0x00199a1d: je 0x199a30; pop ebx; mov eax, 1; ja 0x199a29; neg eax; ret; 
0x00199a3d: je 0x199a65; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0019b1ed: je 0x19b1d0; add eax, ecx; pop ebx; pop esi; ret; 
0x0019b30d: je 0x19b335; add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0019b384: je 0x19b3a0; mov eax, 1; jg 0x19b390; neg eax; ret; 
0x0019b6f6: je 0x19b710; mov eax, 1; ja 0x19b701; neg eax; ret; 
0x0019cffd: je 0x19d025; add dh, dh; ret 0x7510; 
0x0019e242: je 0x19e24d; pmovmskb eax, xmm1; test eax, eax; jne 0x19e480; xor eax, eax; ret; 
0x0019e752: je 0x19e7b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0019f087: je 0x19f18a; mov eax, 4; pop edi; ret; 
0x0019f0e0: je 0x19f19e; mov eax, 8; pop edi; ret; 
0x0019f130: je 0x19f1b2; mov eax, 0xc; pop edi; ret; 
0x0019f162: je 0x19f1c6; cmp byte ptr [edx + 0xf], 0; je 0x19f1c6; mov eax, 0x10; pop edi; ret; 
0x0019f168: je 0x19f1c6; mov eax, 0x10; pop edi; ret; 
0x0019f962: je 0x19f970; test al, 1; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x0019f95d: je 0x19f985; add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x0019f9fb: je 0x19f98a; je 0x19fa25; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0019f96d: je 0x19f995; add dh, dh; les eax, ptr [ecx]; jne 0x19f990; lea eax, [ecx + 0xc]; ret; 
0x0019f9fd: je 0x19fa25; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0019fb4c: je 0x19fae4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019fc10: je 0x19fbf0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019fc23: je 0x19fbf0; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019fc0b: je 0x19fc20; and eax, 1; je 0x19fbf0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a02de: je 0x1a02f0; mov edx, eax; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x001a02ed: je 0x1a0315; add bl, dh; bsf edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x001a0ae7: je 0x1a0b0d; jl 0x1a0a74; ret; 
0x001a1284: je 0x1a1297; add al, 0x83; ret 0x3908; 
0x001a2838: je 0x1a285e; or byte ptr [ecx + 0x244c8bcb], cl; and al, 0x83; ret; 
0x001a3d2d: je 0x1a3d55; add byte ptr [ebx - 0x76ebdbbc], cl; ret; 
0x001a4472: je 0x1a4498; adc al, 0xf; xchg ebp, eax; ret 0xc208; 
0x001a46e1: je 0x1a4707; or al, 0xf; xchg ebp, eax; ret; 
0x001a6d84: je 0x1a6d20; add al, 0x83; ret 0xd304; 
0x001a7518: je 0x1a752d; add al, 0x83; ret 0x3908; 
0x001a847a: je 0x1a84a0; xor al, 0x89; ret 0x448b; 
0x001a9029: je 0x1a9035; fld1; fdiv dword ptr [edx - 0x62ff0]; fstp st(0); add esp, 0x20; ret; 
0x00023436: je 0x23431; call dword ptr [esi + 0x53]; 
0x00024453: je 0x24470; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00024580: je 0x245a6; sbb al, 0xe8; ret 0xffff; 
0x00024bb6: je 0x24bb9; ret; 
0x00024cb0: je 0x24cd6; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00024d44: je 0x24d6a; inc eax; push dword ptr [esp + 0x40]; call esi; 
0x00024d48: je 0x24d6e; inc eax; call esi; 
0x00024d3d: je 0x24d7c; sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x00024d9b: je 0x24dc1; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024d9f: je 0x24dc5; inc eax; call ecx; 
0x00024df5: je 0x24e1d; add byte ptr [ebx - 0xa9fb14], al; je 0x24e23; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024dfd: je 0x24e23; inc eax; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024e01: je 0x24e27; inc eax; call dword ptr [ebp]; 
0x00025740: je 0x25766; add al, 0x8d; xchg byte ptr [esi + edi*2 - 7], bh; call dword ptr [eax - 0x73]; 
0x00025d43: je 0x25d69; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00025d48: je 0x25d6e; xor bh, bh; jae 0x25d52; call edi; 
0x000260c2: je 0x260d7; sub esp, 0xc; push esi; call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x00027035: je 0x2704a; sub esp, 0xc; push edi; call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x00027fa4: je 0x27fca; and byte ptr [eax - 0x18], dl; ret; 
0x000284d8: je 0x284fe; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000284dc: je 0x28502; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000284e0: je 0x28506; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000287d9: je 0x2885a; stc; call dword ptr [eax - 0x18]; 
0x000289e6: je 0x28a0c; push dword ptr fs:[esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000289ea: je 0x28a10; pushal; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000289ee: je 0x28a14; push 0x5024448b; call eax; 
0x00028ee1: je 0x28f62; stc; call dword ptr [eax - 0x18]; 
0x000290c8: je 0x290ee; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x000290cc: je 0x290f2; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x00029443: je 0x294c4; stc; call dword ptr [eax - 0x18]; 
0x00029685: je 0x296ab; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029689: je 0x296af; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002968d: je 0x296b3; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000299c9: je 0x299ef; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00029a3f: je 0x29a65; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00029b02: je 0x29b28; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00029b2a: je 0x29b50; cmp al, 0x8d; xchg byte ptr [ecx + eax*4 - 7], al; call dword ptr [eax - 0x73]; 
0x00029b4d: je 0x29b73; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029b70: je 0x29b96; cmp al, 0x8d; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x00029b1a: je 0x29b9b; stc; call dword ptr [eax - 0x18]; 
0x00029d61: je 0x29d87; push esp; push dword ptr [esp + 0x5c]; call edi; 
0x00029d65: je 0x29d8b; pop esp; call edi; 
0x0002a2b0: je 0x2a2d6; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0002a2b4: je 0x2a2da; push esp; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0002aaf3: je 0x2ab74; stc; call dword ptr [eax - 0x18]; 
0x0002ad86: je 0x2adac; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ad8a: je 0x2adb0; pop esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002b785: je 0x2b806; stc; call dword ptr [eax - 0x18]; 
0x0002baca: je 0x2baf0; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002bace: je 0x2baf4; pushal; call esi; 
0x0002be0d: je 0x2be35; add byte ptr [ecx - 0x763576fa], cl; dec byte ptr [ebx + 0x39042444]; ret 0x840f; 
0x0002bfb6: je 0x2bfdc; cmp al, 0xe8; ret 0x14eb; 
0x0002cde8: je 0x2ce69; stc; call dword ptr [eax - 0x18]; 
0x0002d076: je 0x2d09c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002d07a: je 0x2d0a0; mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x0002d8c4: je 0x2d945; stc; call dword ptr [eax - 0x18]; 
0x0002dc1d: je 0x2dc43; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002dc21: je 0x2dc47; pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002e1e8: je 0x2e269; stc; call dword ptr [eax - 0x18]; 
0x0002e446: je 0x2e46c; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e44a: je 0x2e470; mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x0002e8af: je 0x2e8d5; sub al, 0xe8; leave; ret 0x14; 
0x0002ec9b: je 0x2ed1c; stc; call dword ptr [eax - 0x18]; 
0x0002f095: je 0x2f0bb; cmp al, 0x8b; inc esp; and al, 0x34; call eax; 
0x0002f420: je 0x2f443; sub esp, 0xc; push ebx; call 0x17ab80; mov dword ptr [esp], esi; call ebx; 
0x0002fca4: je 0x2fcb0; add esp, 8; pop ebx; ret; 
0x0002fc9f: je 0x2fcb0; cmp eax, 3; je 0x2fcb0; add esp, 8; pop ebx; ret; 
0x00032aa5: je 0x32acd; add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x00033549: je 0x3354d; call edx; 
0x00033755: je 0x33759; call eax; 
0x00033a19: je 0x33a25; mov dword ptr [esp + 0x14], eax; call edx; 
0x00034a9f: je 0x34aa6; cmp byte ptr [eax], 0; jne 0x34ab0; mov eax, edx; add esp, 0xc; ret; 
0x00034adf: je 0x34ae6; cmp byte ptr [eax], 0; jne 0x34af0; mov eax, edx; add esp, 0xc; ret; 
0x00034b22: je 0x34b48; sub al, 0xff; je 0x34b4c; sub al, 0xe8; ret 0xc; 
0x00034b26: je 0x34b4c; sub al, 0xe8; ret 0xc; 
0x00034b6a: je 0x34b90; sbb byte ptr [edx], ch; call 0x34b10; add esp, 0x1c; ret; 
0x00035df5: je 0x35e1d; add byte ptr [ebp - 0x7cd58a40], al; ret; 
0x00036152: je 0x36178; sub byte ptr [edx], ch; call 0x360e0; add esp, 0x2c; ret; 
0x00036ec9: je 0x36eef; and byte ptr [edi], cl; inc ebx; ret 0x1c8d; 
0x0003a597: je 0x3a59b; fchs; ret; 
0x0003a8f7: je 0x3a8fb; fchs; ret; 
0x0003cb05: je 0x3cb17; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0003cf59: je 0x3cf70; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1d4], ecx; ret; 
0x0003d6b0: je 0x3d6d8; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003d85a: je 0x3d880; sbb al, 0xe8; outsb dx, byte ptr ds:[esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d89c: je 0x3d8c2; sbb al, 0xe8; sub al, 0xd3; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d8bc: je 0x3d8e2; sbb al, 0xe8; jl 0x3d8cf; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0003e11f: je 0x3e145; sbb al, 0xe8; or dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e266: je 0x3e28c; sub al, ch; ret 0xfffe; 
0x0003e82c: je 0x3e852; sbb byte ptr [eax + 0x50], dl; call 0x3e8a0; add esp, 0x1c; ret; 
0x0003ea56: je 0x3ea7c; cmp al, 0xe8; ret 0xa39; 
0x0004037c: je 0x403a2; sub byte ptr [ebp - 0x1c3e1fbe], cl; add eax, 0x29e0e183; fmul dword ptr [ebp - 0x76dff18c]; ret 0xd285; 
0x000404d1: je 0x404f7; or al, 0x8b; push esp; and al, 0x14; call edx; 
0x0004058e: je 0x405b4; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00040611: je 0x40637; and bh, bh; mov edx, dword ptr ss:[esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000406bc: je 0x406e2; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0004149b: je 0x414a8; add esp, 8; pop ebx; ret; 
0x00041c9d: je 0x41cc5; add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x00041d0a: je 0x41d19; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00041d2a: je 0x41d39; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00041dbb: je 0x41dc3; bsr eax, eax; add eax, 1; ret; 
0x00041ddc: je 0x41de4; bsr eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00041dfc: je 0x41e04; bsr eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00041e6b: je 0x41e73; bsr eax, eax; add eax, 1; ret; 
0x00041ec4: je 0x41eea; sbb al, 0xe8; xor al, 0xe4; adc eax, 0x18c48300; pop ebx; ret; 
0x00041ef4: je 0x41f1a; sbb al, 0xe8; add al, 0xe4; adc eax, 0x18c48300; pop ebx; ret; 
0x00041f28: je 0x41f4e; sbb al, 0xe8; adc ah, ah; adc eax, 0x18c48300; pop ebx; ret; 
0x0004208a: je 0x42095; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x000420aa: je 0x420b5; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x0004221c: je 0x42228; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000422cd: je 0x422d9; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004230d: je 0x42318; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004232d: je 0x42338; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042475: je 0x42480; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000424a0: je 0x424a8; bsr eax, edx; xor eax, 0x1f; ret; 
0x000424c0: je 0x424c8; bsr eax, edx; xor eax, 0x1f; ret; 
0x00042525: je 0x42530; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042550: je 0x4255b; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0004256f: je 0x42577; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004258f: je 0x42597; bsr eax, edx; xor eax, 0x1f; ret; 
0x000425f0: je 0x425fb; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000427b4: je 0x427da; sub al, 0xe8; add al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000446c8: je 0x446ee; sbb al, 0xe8; jo 0x446d7; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004538e: je 0x453b4; cmp byte ptr [ecx], al; ret 0xf229; 
0x00045491: je 0x454b7; adc byte ptr [ecx], al; ret 0xd389; 
0x0004861d: je 0x48643; cmp al, 1; ret 0xf229; 
0x00048721: je 0x48747; adc byte ptr [ecx], al; ret 0xd389; 
0x0004a035: je 0x4a05b; or byte ptr [ecx - 0x762a7621], cl; ret; 
0x0004ab80: je 0x4aba6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004abfe: je 0x4ac24; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004b308: je 0x4b32e; sbb al, 0xe8; mov al, 8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004c039: je 0x4c05f; and byte ptr [ecx], al; ret 0xd389; 
0x0004ca0d: je 0x4ca38; ret; 
0x0004ca61: je 0x4ca72; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x0004ca5f: je 0x4ca85; je 0x4ca72; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x0004e5f0: je 0x4e616; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004e66e: je 0x4e694; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004ee35: je 0x4ee5b; cmp al, 0x89; ret; 
0x0004ef90: je 0x4efb6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004f00e: je 0x4f034; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004f660: je 0x4f686; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004f6de: je 0x4f704; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004f94d: je 0x4f975; add byte ptr [ebx + 0x39182444], cl; ret; 
0x0004fe00: je 0x4fe26; cmp al, 0x89; ret; 
0x00050327: je 0x5034d; sub byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000505e5: je 0x5060d; add byte ptr [ecx + 0x8c483da], cl; mov eax, edx; pop ebx; ret; 
0x000505f5: je 0x5061d; add byte ptr [eax - 0x76fffe85], al; fidiv dword ptr [ebp + ebx*8 - 0x7d]; ret 0x8001; 
0x00051665: je 0x5168d; add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000522f3: je 0x5230e; add al, 0x83; ret; 
0x00052a3b: je 0x52a4e; add al, 0x83; ret 0x3908; 
0x00055145: je 0x5516d; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00056bcb: je 0x56bf1; sbb al, 0x89; ret 0xc801; 
0x00057509: je 0x5757f; jns 0x574d3; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0005750a: je 0x57585; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000576a8: je 0x57657; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000576a4: je 0x576ca; sbb al, 0xe8; je 0x57657; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00057732: je 0x57740; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0005772d: je 0x57755; add byte ptr [ebp - 0x7cf38b40], al; call 0x448003b; ret; 
0x000577b2: je 0x577d8; sbb al, 0xe8; stc; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00058170: je 0x58180; add esp, 0xc; ret; 
0x0005865d: je 0x58683; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0005bb76: je 0x5bb9c; sbb al, ch; ret 0xffc8; 
0x0005c4f5: je 0x5c51d; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x0005cc85: je 0x5ccab; sub al, 0xe8; ret; 
0x0005d105: je 0x5d12d; add al, ch; jecxz 0x5d108; std; jmp ptr [ecx]; ret; 
0x0005d2a3: je 0x5d29e; call dword ptr [ebp + 0x56]; 
0x0005dac9: je 0x5daf0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0005dbb2: je 0x5dbd8; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x0005dbb8: je 0x5dbde; sub al, 0xe8; sal byte ptr [ecx - 0x3b7cffff], 0x2c; ret; 
0x0005e692: je 0x5e6b8; sbb al, 0xe8; jbe 0x5e6d2; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005f251: je 0x5f277; or al, 0x8d; xchg byte ptr [esp + ecx*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x00060b6f: je 0x60b95; inc eax; mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00061044: je 0x6106a; sbb al, 0x8b; mov word ptr [esi - 0x72eb4], es; add ecx, ebx; jmp ecx; 
0x00061425: je 0x6144b; sbb al, 0x8b; mov word ptr [esi - 0x72f34], es; add ecx, ebx; jmp ecx; 
0x00062432: je 0x62458; sbb al, 0xe8; out 0, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00069572: je 0x69598; sbb al, 0xe8; xchg byte ptr [esi], bh; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006a171: je 0x6a197; or al, 0x8d; xchg byte ptr [esp + ecx*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x0006ac9d: je 0x6acc3; adc byte ptr [ebx + 0x468b0456], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0006dc85: je 0x6dcad; add byte ptr [ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007098d: je 0x709b5; add byte ptr [ebx - 0x54f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007395d: je 0x738ec; stc; call dword ptr [eax - 0x18]; 
0x00073b80: je 0x73b90; add esp, 0xc; ret; 
0x00073c96: je 0x73cd5; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000764a3: je 0x764bc; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00076503: je 0x76529; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00076519: je 0x76530; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007655a: je 0x76570; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x000779e2: je 0x779f0; sub eax, 1; mov dword ptr [edx + 0x1a24], eax; ret; 
0x00077ec8: je 0x77ed0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000799bd: je 0x799e5; add dh, dh; ret 0x7420; 
0x00079e95: je 0x79ebd; add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x0007b580: je 0x7b5a6; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0007b6e0: je 0x7b706; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007b8f3: je 0x7b8f8; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0007b94d: je 0x7b952; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0007b9be: je 0x7b9d0; cmp ecx, edx; jb 0x7b9b8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007c3a5: je 0x7c3cd; add byte ptr [eax - 1], bh; ret; 
0x0007cf40: je 0x7cf66; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0007cf7a: je 0x7cfa0; xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x0007e25d: je 0x7e285; add byte ptr [eax - 1], bh; ret; 
0x0007e678: je 0x7e69e; adc al, ch; mov ecx, 0x81000fef; ret; 
0x0007ea79: je 0x7ea88; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x7ea88; ret; 
0x0007fda3: je 0x7fda8; mov byte ptr [edx], 0; pop ebx; ret; 
0x000818b2: je 0x818c0; sub eax, 1; mov dword ptr [edx + 0x1a38], eax; ret; 
0x00081c25: je 0x81c4d; add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00081ebb: je 0x81ee1; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00082f07: je 0x82f10; pop ebx; pop esi; pop edi; ret; 
0x0008339a: je 0x833c0; and al, 0x8b; adc esi, esi; ret 0xf08; 
0x00083f8e: je 0x83fb4; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x000843e4: je 0x8440a; cmp al, 0x56; call dword ptr [ebp + 0x38]; 
0x00084645: je 0x8466b; cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x00084718: je 0x84788; sub eax, 1; mov dword ptr [ebx + 0x1a58], eax; add esp, 8; pop ebx; ret; 
0x00085274: je 0x8529a; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00085444: je 0x8546a; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00085ab1: je 0x85ad7; cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00085c2c: je 0x85c42; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00085ea4: je 0x85ea9; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x00085f6e: je 0x85f80; cmp ecx, edx; jb 0x85f68; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00086a22: je 0x86a30; mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x86a20; ret; 
0x00086a85: je 0x86aad; add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00086eb2: je 0x86ec0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x000871bd: je 0x871e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x000871cb: je 0x871f1; sbb al, 0xe8; sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000877b5: je 0x877dd; add byte ptr [eax - 1], bh; ret; 
0x00087847: je 0x87860; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00087933: je 0x87948; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x000880e5: je 0x8810b; sub al, 0xff; je 0x8810f; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000880e9: je 0x8810f; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00088257: je 0x8827d; xor bh, bh; je 0x88281; cmp al, 0x51; call eax; 
0x0008825b: je 0x88281; cmp al, 0x51; call eax; 
0x0008832e: je 0x88354; xor byte ptr [edx + 0x51], dl; call eax; 
0x0008837f: je 0x88366; call dword ptr [eax - 0x18]; 
0x0008841f: je 0x88445; sub al, 0x52; push ecx; push edi; call eax; 
0x000885c8: je 0x885ee; and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008861b: je 0x88641; sub al, 0x89; ret 0x4c89; 
0x0008862a: je 0x88650; sbb byte ptr [edi], cl; inc esp; ret 0x978b; 
0x00088718: je 0x88730; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00088878: je 0x88888; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00088935: je 0x8893c; add esp, 8; pop ebx; ret; 
0x0008896d: je 0x88980; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000889c6: je 0x889ca; add byte ptr [eax], al; ret; 
0x00088a26: je 0x88a30; ret; 
0x0008913d: je 0x891d0; mov ebx, dword ptr [esp + 8]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000892b4: je 0x892bb; add esp, 8; pop ebx; ret; 
0x000893b5: je 0x893dd; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00089762: je 0x89740; sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x00089a2a: je 0x89a38; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00089d45: je 0x89d80; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00089fb6: je 0x89fc1; mov eax, dword ptr [edx]; neg eax; sbb eax, eax; and eax, 0x16; ret; 
0x0008a2fd: je 0x8a310; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008a75f: je 0x8a770; test edx, edx; jne 0x8a780; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008a88a: je 0x8a8a0; cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0008aa04: je 0x8aa38; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008aa9d: je 0x8aac5; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008ad0e: je 0x8ad20; add esp, 4; pop ebx; pop esi; ret; 
0x0008b241: je 0x8b25c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b3d5: je 0x8b3fd; add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b4dd: je 0x8b505; add byte ptr [ebx - 0x3e2f76ed], cl; call 0x893828ed; clc; call dword ptr gs:[0x10]; 
0x0008b4e7: je 0x8b518; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008b761: je 0x8b77c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b875: je 0x8b89d; add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b95e: je 0x8b968; pop ebx; pop esi; pop edi; ret; 
0x0008b9c0: je 0x8b9d0; pop ebx; pop esi; pop edi; ret; 
0x0008ba39: je 0x8ba40; pop ebx; pop esi; pop edi; ret; 
0x0008cb4e: je 0x8cbac; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0008cdae: je 0x8cdb4; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008cf9c: je 0x8d032; xor edx, edx; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008da25: je 0x8d5be; mov ebx, eax; and ebx, 0x40; jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0008ee5d: je 0x8ee85; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008f465: je 0x8f48b; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f606: je 0x8f62c; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f62e: je 0x8f654; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f667: je 0x8f68d; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f667: je 0x8f68d; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x00091422: je 0x91822; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092093: je 0x920a0; mov eax, 0x16; ret; 
0x0009209d: je 0x920c5; add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x000920be: je 0x920d0; cmp edx, 1; jne 0x920e0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00092195: je 0x921e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000922a1: je 0x922b5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00092331: je 0x92340; xor eax, eax; ret; 
0x00092862: je 0x92888; or byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000931f0: je 0x93216; or byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000934d2: je 0x934d8; test al, 1; jne 0x934aa; mov eax, 0x10; pop ebx; ret; 
0x000934be: je 0x934e0; mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000936bb: je 0x93639; mov ecx, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093950: je 0x93976; or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093e45: je 0x93e59; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00093ed7: je 0x93ee9; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00094450: je 0x94476; or al, 0x89; ret; 
0x00094557: je 0x9455a; ret; 
0x0009463c: je 0x94662; sub al, 0x52; call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x0009464d: je 0x94675; add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000946cb: je 0x946a0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00094699: je 0x946a8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00094931: je 0x94940; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00094ba5: je 0x94bcd; add byte ptr [ebx + 0x685504ec], al; ret 0xa00; 
0x00094ea3: je 0x94eb0; ret; 
0x0009541b: je 0x953f0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000953e9: je 0x953f8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009578b: je 0x95760; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095759: je 0x95768; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00096fc4: je 0x96f82; pop ebx; pop esi; ret; 
0x00097109: je 0x9712f; and byte ptr [ebx - 0x17e3dba4], cl; imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x00097645: je 0x9763a; mov edx, dword ptr [eax + 0x14]; cmp ebx, edx; jne 0x97640; pop ebx; ret; 
0x00097636: je 0x9764a; xor eax, eax; pop ebx; ret; 
0x0009911e: je 0x99144; sbb al, 0xe8; sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00099440: je 0x99480; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099722: je 0x99748; sub al, 0xff; je 0x9974c; sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x00099726: je 0x9974c; sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x000998e0: je 0x99906; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099ae0: je 0x99b06; dec esp; call dword ptr gs:[0x10]; 
0x00099b5f: je 0x99b85; dec esp; call dword ptr gs:[0x10]; 
0x00099bab: je 0x99bd1; dec esp; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf3: je 0x99c19; dec esp; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0009a401: je 0x9a390; je 0x9a429; cmp al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a403: je 0x9a429; cmp al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a473: je 0x9a42d; add al, 1; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009a3fc: je 0x9a470; mov ecx, dword ptr [esp + 0x74]; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009a8a7: je 0x9a8ac; add byte ptr [eax], al; ret; 
0x0009c269: je 0x9c270; add esp, 0xc; ret; 
0x0009c28d: je 0x9c2b5; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0009c7ab: je 0x9c7d1; adc al, 0x8d; xchg al, al; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0009cb11: je 0x9cb37; or al, 0x89; pop edi; or al, 0x89; ret; 
0x0009df75: je 0x9df9d; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x0009e78c: je 0x9e735; stc; call dword ptr [eax - 0x73]; 
0x0009e7af: je 0x9e758; stc; call dword ptr [eax - 0x73]; 
0x0009e787: je 0x9e7ad; or byte ptr [ebp - 0x6588b7a], cl; call dword ptr [eax - 0x73]; 
0x0009e7aa: je 0x9e7d0; or byte ptr [ebp - 0x6588b7a], cl; call dword ptr [eax - 0x73]; 
0x0009e96b: je 0x9e991; or byte ptr [ebp - 0x658ab7a], cl; call dword ptr [eax - 0x73]; 
0x0009efeb: je 0x9ef92; stc; call dword ptr [eax - 0x18]; 
0x000a0b1d: je 0xa0bd8; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a0c10: je 0xa0c20; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000a23ba: je 0xa23e0; sbb al, 0xe8; mov esi, 0x83000199; les ebx, ptr [eax]; pop ebx; ret; 
0x000a255d: je 0xa2585; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a2631: je 0xa2657; sbb bh, bh; je 0xa265b; adc byte ptr [edx - 0x18], dl; ret 0xf80a; 
0x000a2635: je 0xa265b; adc byte ptr [edx - 0x18], dl; ret 0xf80a; 
0x000a320f: je 0xa3227; lea eax, [edx - 0xaa694]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x000a3f76: je 0xa3f7d; cmp cl, dl; je 0xa3f7d; inc eax; pop edi; ret; 
0x000a3f7a: je 0xa3f7d; inc eax; pop edi; ret; 
0x000a3fe6: je 0xa400c; sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a5078: je 0xa509e; adc al, ch; mov ecx, 0x81000d85; ret; 
0x000a5549: je 0xa554f; cmp eax, ebx; jne 0xa5540; mov eax, edx; pop ebx; ret; 
0x000a5619: je 0xa5610; pop ebx; ret; 
0x000a5649: je 0xa5640; cmp edx, esi; je 0xa5640; pop ebx; pop esi; ret; 
0x000a564d: je 0xa5640; pop ebx; pop esi; ret; 
0x000a56ed: je 0xa5700; cmp eax, ecx; jne 0xa56e0; mov eax, edx; pop ebx; ret; 
0x000a5a8e: je 0xa5ab4; sbb al, 0xe8; ljmp 0x18c4:0x83000162; pop ebx; ret; 
0x000a694d: je 0xa6973; sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000aae8d: je 0xaaeb5; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000acd68: je 0xacd6c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000ace9d: je 0xacec5; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000acf2d: je 0xacf55; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf3d: je 0xacf65; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf4d: je 0xacf75; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000adc7a: je 0xad0b0; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000adc1f: je 0xad130; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b12ed: je 0xb1315; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b137d: je 0xb13a5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b138d: je 0xb13b5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b139d: je 0xb13c5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b2d88: je 0xb2d92; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b34cd: je 0xb34f5; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b34dd: je 0xb3505; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000b377d: je 0xb37a5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000b4bbd: je 0xb4be5; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b4bcd: je 0xb4bf5; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000b4e7d: je 0xb4ea5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000b677d: je 0xb67a5; add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000b6d02: je 0xb6c96; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba71d: je 0xba745; add byte ptr [ebx + 0x5e], bl; ret; 
0x000ba8ff: je 0xbaa60; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000baa6d: je 0xbaa95; add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000baab7: je 0xbaad0; bsf ecx, ecx; sub edx, ecx; jbe 0xbaaf0; add eax, ecx; ret; 
0x000bac89: je 0xbacda; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bad3b: je 0xbad8c; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000bafd2: je 0xbafdd; pmovmskb eax, xmm1; test eax, eax; jne 0xbb050; xor eax, eax; ret; 
0x000bb000: je 0xbb04b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bb0ba: je 0xbb090; bsr ecx, edx; add eax, ecx; ret; 
0x000bb112: je 0xbb170; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000bb30f: je 0xbb320; bsf ecx, ecx; add eax, ecx; ret; 
0x000bb358: je 0xbb370; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000bb498: je 0xbb4e4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000bb56f: je 0xbb550; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000bb5e7: je 0xbb5c8; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000bb7b1: je 0xbb7b4; inc eax; pop edi; ret; 
0x000bb955: je 0xbb958; inc eax; pop edi; pop esi; ret; 
0x000bbd03: je 0xbbd13; call ecx; 
0x000bbf6e: je 0xbbf74; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bc693: je 0xbc696; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000bc7b6: je 0xbc7bf; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xbc7b8; pop esi; ret; 
0x000bc858: je 0xbc861; or dword ptr [eax + 0x3c70], 1; xor eax, eax; pop ebx; ret; 
0x000bd287: je 0xbd2ad; sbb byte ptr [edx], ch; call 0xbd7c0; add esp, 0x1c; ret; 
0x000bd8d2: je 0xbd8f8; sub bh, bh; jne 0xbd8d8; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000bda2f: je 0xbda3a; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000be530: je 0xbe536; test edx, edx; jne 0xbe528; ret; 
0x000be596: je 0xbe5bc; sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bf349: je 0xbf330; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c0119: je 0xc0100; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000c036c: je 0xc0392; xor al, 0xff; je 0xc0396; inc eax; push ebp; call esi; 
0x000c0370: je 0xc0396; inc eax; push ebp; call esi; 
0x000c0618: je 0xc063e; sbb al, 0xe8; adc byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c14a1: je 0xc14c7; sub byte ptr [ecx], bh; ret 0x840f; 
0x000c1dc4: je 0xc1dea; or byte ptr [edx - 0x18], dl; ret; 
0x000c24db: je 0xc2501; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c338b: je 0xc33b1; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c33ae: je 0xc33d4; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c33d1: je 0xc33f7; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c33f4: je 0xc341a; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c3417: je 0xc343d; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c343a: je 0xc3460; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c345d: je 0xc3483; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c3480: je 0xc34a6; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c34a3: je 0xc34c9; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c34c6: je 0xc34ec; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c34f0: je 0xc3516; xor al, 0x8d; xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x000c3513: je 0xc3539; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c3536: je 0xc355c; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c3559: je 0xc357f; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c357c: je 0xc35a2; xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c43e9: je 0xc440f; sub byte ptr [ecx], bh; ret 0x840f; 
0x000c4972: je 0xc4998; cmp al, 0x8d; xchg ah, bl; into; stc; call dword ptr [eax + 0x57]; 
0x000c5af8: je 0xc5b1e; or byte ptr [ecx - 0x76217629], cl; ret; 
0x000c61ed: je 0xc6213; xor al, 0x8d; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6210: je 0xc6236; xor al, 0x8d; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6305: je 0xc632b; xor al, 0x8d; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c634b: je 0xc6371; xor al, 0x8d; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c63bb: je 0xc63e1; xor al, 0x8d; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c65a0: je 0xc65c6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000c661e: je 0xc6644; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000c6d3a: je 0xc6d60; sbb al, 0xe8; mov cs, word ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c7b61: je 0xc7b87; sub al, 0x39; ret 0x840f; 
0x000c99bc: je 0xc99e2; cmp byte ptr [ebp - 0x653d77a], cl; call dword ptr [eax - 0x73]; 
0x000c99df: je 0xc9a05; cmp byte ptr [ebp - 0x653d77a], cl; call dword ptr [eax - 0x73]; 
0x000c9a2c: je 0xc9a52; cmp byte ptr [ebp - 0x653d77a], cl; call dword ptr [eax - 0x73]; 
0x000c9ab8: je 0xc9ade; cmp byte ptr [ebp - 0x653d77a], cl; call dword ptr [eax - 0x73]; 
0x000c9afe: je 0xc9b24; cmp byte ptr [ebp - 0x653d77a], cl; call dword ptr [eax - 0x73]; 
0x000c9cc0: je 0xc9ce6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000c9d3e: je 0xc9d64; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ca5b0: je 0xca5d6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ca62e: je 0xca654; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cace0: je 0xcad06; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cad5e: je 0xcad84; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cd075: je 0xcd09d; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000cd180: je 0xcd1a6; sbb al, 0xe8; mov eax, 0x83fffeeb; les ebx, ptr [eax]; pop ebx; ret; 
0x000cd1e8: je 0xcd1f0; mov eax, esi; pop ebx; pop esi; ret; 
0x000cd44b: je 0xcd45e; add al, 0x83; ret 0x3908; 
0x000d003d: je 0xd0065; add byte ptr [ebx - 0x363f7b], al; call dword ptr [eax]; 
0x000d1ded: je 0xd1e15; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d1ead: je 0xd1ed5; add byte ptr [edi + 0x5e], bl; ret; 
0x000d2077: je 0xd2090; mov cl, dl; and cl, 0xf; je 0xd20a0; ret; 
0x000d207e: je 0xd20a0; ret; 
0x000d2095: je 0xd20b0; add eax, 2; ret; 
0x000d20cd: je 0xd20f5; add byte ptr [eax + 1], bh; ret; 
0x000d2170: je 0xd2190; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd2158; add eax, 1; ret; 
0x000d3815: je 0xd379a; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x000d386e: je 0xd3894; lea eax, fs:[esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3a9b: je 0xd3ac1; push dword ptr fs:[esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3a9f: je 0xd3ac5; jo 0xd3a2e; inc esp; and al, 0x68; call eax; 
0x000d3c59: je 0xd3c7f; lea eax, fs:[esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d58dd: je 0xd5903; and al, 0xe8; sti; ret 0xfffa; 
0x000d6db7: je 0xd6e30; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d6f03: je 0xd6f50; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d7ed2: je 0xd7ef8; sub byte ptr [ebx - 0x72d7dbbc], cl; add dl, 0x55; stc; call dword ptr [eax + 0x53]; 
0x000d89f1: je 0xd8a17; sub byte ptr [ebx - 0x72d7dbbc], cl; or bl, 0x55; stc; call dword ptr [eax + 0x53]; 
0x000d9951: je 0xd9977; xor byte ptr [ecx - 0x16cbdbbc], cl; jmp edi; 
0x000dadce: je 0xdadf4; sub al, 0xe8; cmp ah, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000dc7f4: je 0xdc81a; or byte ptr [ebx - 0x72dfdb8c], cl; inc ebp; jmp dword ptr [esi - 0x70]; 
0x000dcc20: je 0xdcc46; add al, 0x29; retf 0x490f; ret 0xc101; 
0x000dd84f: je 0xdd875; add al, 0x89; ret 0x448b; 
0x000de01e: je 0xde044; sub al, 0x29; ret; 
0x000df4be: je 0xdf4c8; add esp, 0xc; ret; 
0x000df5ae: je 0xdf5b8; add esp, 0xc; ret; 
0x000df6d6: je 0xdf6fc; inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000df8dc: je 0xdf88b; cmp eax, -0x26; jne 0xdf920; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000df877: je 0xdf8a8; sub esp, 8; push edi; push ebx; call eax; 
0x000df8b0: je 0xdf8cc; sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000dfd71: je 0xdfcfc; cli; call dword ptr gs:[0x10]; 
0x000dfe28: je 0xdfdb3; cli; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000dfe95: je 0xdfe22; je 0xdfebd; or byte ptr [eax + 0x197], bh; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfeed: je 0xdfe7a; je 0xdff15; or byte ptr [eax + 0x197], bh; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dff19: je 0xdfea4; ljmp 0x824:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dfe97: je 0xdfebd; or byte ptr [eax + 0x197], bh; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dff4e: je 0xdfed9; ljmp 0x824:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dfeef: je 0xdff15; or byte ptr [eax + 0x197], bh; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dff1f: je 0xdff45; or byte ptr [eax + 0x197], bh; call dword ptr gs:[0x10]; 
0x000dff54: je 0xdff7a; or byte ptr [eax + 0x197], bh; call dword ptr gs:[0x10]; 
0x000dffe6: je 0xe000c; or byte ptr [eax + 0x197], bh; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000e006e: je 0xe0094; or byte ptr [eax + 0x197], bh; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000e00c4: je 0xe00ea; or byte ptr [eax + 0x197], bh; call dword ptr gs:[0x10]; 
0x000e00f8: je 0xe011e; or byte ptr [eax + 0x197], bh; call dword ptr gs:[0x10]; 
0x000e058c: je 0xe05a0; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x000e067b: je 0xe06a1; and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x000e0b78: je 0xe0b9e; adc al, ch; mov ecx, 0x810009ca; ret; 
0x000e1f83: je 0xe1f10; sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x000e21c3: je 0xe2150; sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x000e2e2e: je 0xe2e54; sbb al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000e2eea: je 0xe2f10; sbb al, 0xff; je 0xe2f14; sbb al, 0xe8; lcall 0x1cc4, 0x83000004; ret; 
0x000e2eee: je 0xe2f14; sbb al, 0xe8; lcall 0x1cc4, 0x83000004; ret; 
0x000e422d: je 0xe4255; add byte ptr [ebx - 0x6bf0a308], al; ret; 
0x000e4ddc: je 0xe4e02; sbb al, 0x89; aad 0xe9; ret; 
0x000e89e5: je 0xe8a0d; add byte ptr [eax + 1], bh; ret; 
0x000e8b55: je 0xe8b7d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000e943c: je 0xe9455; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000e956d: je 0xe9595; add byte ptr [ebx - 0x5db73], al; call dword ptr [eax]; 
0x000eb365: je 0xeb38d; add byte ptr [eax + 1], bh; ret; 
0x000eb4d5: je 0xeb4fd; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ebdbc: je 0xebdd5; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000ebeed: je 0xebf15; add byte ptr [ebx - 0x5db73], al; call dword ptr [eax]; 
0x000ec0c5: je 0xec0ed; add byte ptr [eax + 1], bh; ret; 
0x000ec235: je 0xec25d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ecb0c: je 0xecb25; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000ecc3d: je 0xecc65; add byte ptr [ebx - 0x5db73], al; call dword ptr [eax]; 
0x000ed005: je 0xed02d; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x000ee9c5: je 0xee9ed; add byte ptr [eax + 1], bh; ret; 
0x000eeb35: je 0xeeb5d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ef40c: je 0xef425; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000ef53d: je 0xef565; add byte ptr [ebx - 0x5db73], al; call dword ptr [eax]; 
0x000ef715: je 0xef73d; add byte ptr [eax + 1], bh; ret; 
0x000ef885: je 0xef8ad; add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f015c: je 0xf0175; sub esp, 8; push eax; push dword ptr [ebp - 0x5f8]; call esi; 
0x000f028d: je 0xf02b5; add byte ptr [ebx - 0x5eb73], al; call dword ptr [eax]; 
0x000f0635: je 0xf065d; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x000f1f2d: je 0xf1f33; cmp al, 0x3f; jne 0xf1f49; mov eax, 1; ret; 
0x000f280d: je 0xf277e; cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f284e: je 0xf277e; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f2865: je 0xf288d; add byte ptr [eax + 0x40], bh; ret; 
0x000f28d2: je 0xf292a; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000f28b0: je 0xf292a; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000f2906: je 0xf292a; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000f2cce: je 0xf2ce6; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f308b: je 0xf30a6; pop ebx; pop esi; pop edi; ret; 
0x000f30ed: je 0xf3100; pop ebx; pop esi; ret; 
0x000f3e45: je 0xf3e6d; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f48a8: je 0xf48d9; add esp, 4; pop ebx; pop esi; ret; 
0x000f4a26: je 0xf498b; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000f53a5: je 0xf53cd; add byte ptr [ebx - 0x7c72f714], al; jbe 0xf5406; stc; call dword ptr [eax + 0x55]; 
0x000f709f: je 0xf70c0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000f9075: je 0xf909d; add byte ptr [ebx + 0x1042454], cl; ret 0x7c80; 
0x000f943e: je 0xf9464; add al, 0x83; ret; 
0x000fbb8d: je 0xfbbb5; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x000fcea9: je 0xfce6d; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000fcea5: je 0xfce99; or al, 0x89; je 0xfce6d; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0011e7a8: jecxz 0x11e7aa; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122b46: jecxz 0x122b46; push dword ptr [ebx]; push esi; call edi; 
0x00122c8e: jecxz 0x122cb9; ret; 
0x00122d71: jecxz 0x122d9c; ret; 
0x00128955: jecxz 0x128953; add eax, ebx; pop ebx; pop esi; ret; 
0x0012b627: jecxz 0x12b62a; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0012bfeb: jecxz 0x12bfee; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001333ca: jecxz 0x1333cd; lea edx, [edx - 0xa2a64]; cmovne eax, edx; pop ebx; ret; 
0x0013341a: jecxz 0x13341d; lea edx, [edx - 0xa0a94]; cmovne eax, edx; pop ebx; ret; 
0x0013346a: jecxz 0x13346d; lea edx, [edx - 0xa1a84]; cmovne eax, edx; pop ebx; ret; 
0x001341ea: jecxz 0x1341eb; jmp dword ptr [esi - 0x70]; 
0x001388c7: jecxz 0x138852; shl dword ptr [0xfffff000], 0x29; ret; 
0x001488b2: jecxz 0x14883d; ret 0x25; 
0x00159409: jecxz 0x1593b1; std; jmp dword ptr [esi - 0x70]; 
0x00162b0b: jecxz 0x162b19; add byte ptr [ebx - 0x7f72eb14], al; jecxz 0x162b87; stc; call dword ptr [eax + 0x6a]; 
0x00162b13: jecxz 0x162b87; stc; call dword ptr [eax + 0x6a]; 
0x00162b67: jecxz 0x162bdb; stc; jmp dword ptr [ebp - 0x75]; 
0x00162c13: jecxz 0x162c87; stc; call dword ptr [eax - 0x18]; 
0x001707d4: jecxz 0x170759; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001722fc: jecxz 0x172281; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0017382c: jecxz 0x173857; ret; 
0x00174a0a: jecxz 0x174995; shl dword ptr [0xfffff000], 0x29; ret; 
0x00178ca8: jecxz 0x178c92; inc edx; scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x0018e619: jecxz 0x18e5a8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0018f5f9: jecxz 0x18f588; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001905f9: jecxz 0x190588; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00199f1f: jecxz 0x199f26; add byte ptr [eax], al; pop ebx; ret; 
0x0019e529: jecxz 0x19e52b; add byte ptr [eax], al; add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x0019e91e: jecxz 0x19e8a3; ret 0x6640; 
0x001a2cc7: jecxz 0x1a2cc8; jmp dword ptr [esi - 0x70]; 
0x00025ff0: jecxz 0x25f75; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000359fa: jecxz 0x35985; shl dword ptr [0xfffff000], 0x29; ret; 
0x00041e4a: jecxz 0x41e7a; lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x00041f8b: jecxz 0x41fa2; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00041fb9: jecxz 0x41fd0; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00041fe9: jecxz 0x42000; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004201d: jecxz 0x42034; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00050e50: jecxz 0x50ddb; pop ds; pop ebx; pop esi; pop edi; ret; 
0x00055b9c: jecxz 0x55b9d; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0005d109: jecxz 0x5d108; std; jmp ptr [ecx]; ret; 
0x00061b1e: jecxz 0x61ab0; mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x0006a2a8: jecxz 0x6a2a9; jmp eax; 
0x0006af59: jecxz 0x6aedc; sti; inc dword ptr [ebx + 0x148b10c4]; and al, 0x89; ret; 
0x0007745d: jecxz 0x77422; cli; jmp dword ptr [esi - 0x70]; 
0x0007bd5a: jecxz 0x7bda9; stc; call dword ptr [eax - 0x18]; 
0x000870eb: jecxz 0x8713a; stc; call dword ptr [eax - 0x18]; 
0x0008da2e: jecxz 0x8da70; jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000a29da: jecxz 0xa29dd; lea edx, [edx - 0xa2a54]; cmovne eax, edx; pop ebx; ret; 
0x000a314a: jecxz 0xa314d; lea edx, [edx - 0xa0a84]; cmovne eax, edx; pop ebx; ret; 
0x000a319a: jecxz 0xa319d; lea edx, [edx - 0xa1a74]; cmovne eax, edx; pop ebx; ret; 
0x000b2f19: jecxz 0xb2f21; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb1b4: jecxz 0xbb235; jg 0xbb237; jg 0xbb13b; ret; 
0x000bbbff: jecxz 0xbbb84; ret 0x8304; 
0x000c3289: jecxz 0xc328a; call dword ptr [eax + 0x31]; 
0x000e78a6: jecxz 0xe7890; inc esp; ret 4; 
0x000e7d2c: jecxz 0xe7cb1; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f4da1: jecxz 0xf4d95; dec dword ptr [ecx - 0x1b17dbcc]; jecxz 0xf4d9d; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f4da9: jecxz 0xf4d9d; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f509c: jecxz 0xf5089; mov dh, 0x83; in al, dx; or byte ptr [ebp - 0x6a8837d], cl; call dword ptr [eax + 0x55]; 
0x001020ae: jg 0x102118; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0010246b: jg 0x1024a8; call dword ptr [esi]; 
0x001027b6: jg 0x1027d8; add esp, 4; pop ebx; pop esi; ret; 
0x001042e7: jg 0x1042d1; xor esp, ecx; std; call dword ptr [ecx + 0x6a]; 
0x0010c1f7: jg 0x10c1fa; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010f30d: jg 0x10f34d; int1; jmp dword ptr [ebp - 0x5f]; 
0x00117c59: jg 0x117c5f; call dword ptr gs:[0x10]; 
0x00117c59: jg 0x117c5f; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0011912f: jg 0x119130; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00121beb: jg 0x121bf8; add esp, 8; pop ebx; ret; 
0x001224dd: jg 0x122530; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001225a2: jg 0x1225c8; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0012372f: jg 0x123760; add esp, 8; pop ebx; ret; 
0x0012678e: jg 0x126790; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00134c2a: jg 0x134c3b; dec eax; ret 0xc483; 
0x00134c57: jg 0x134cb4; pop esi; pop edi; pop ebp; ret; 
0x00146c85: jg 0x146ca0; add esp, 4; pop ebx; pop esi; ret; 
0x0014b70c: jg 0x14b730; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0014bb32: jg 0x14bb38; ret; 
0x0014c0e5: jg 0x14c140; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0014cc01: jg 0x14cc28; add esp, 8; pop ebx; ret; 
0x00153f4e: jg 0x153f5f; inc esp; ret 0x8489; 
0x001580c5: jg 0x158120; add esp, 4; pop ebx; pop esi; ret; 
0x001583b3: jg 0x1583d8; add esp, 0x18; pop ebx; ret; 
0x0015b255: jg 0x15b243; jmp dword ptr [ebp - 0x75]; 
0x0015bb91: jg 0x15bb90; jmp dword ptr [esi - 0x70]; 
0x0015dcc5: jg 0x15dce8; add esp, 0x18; pop ebx; ret; 
0x00166c27: jg 0x166bac; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00167b78: jg 0x167b89; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x167b70; pop ebx; ret; 
0x00168af6: jg 0x168af8; add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x0016e6da: jg 0x16e6c8; add esp, 4; pop ebx; pop esi; ret; 
0x00177184: jg 0x1771a8; add esp, 8; pop ebx; ret; 
0x00177202: jg 0x177228; add esp, 0x18; pop ebx; ret; 
0x0017728e: jg 0x1772b0; add esp, 0x18; pop ebx; ret; 
0x00177304: jg 0x177328; add esp, 8; pop ebx; ret; 
0x001774b4: jg 0x1774d8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00177566: jg 0x177588; add esp, 0x18; pop ebx; ret; 
0x00179232: jg 0x179240; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0017b077: jg 0x17b098; add esp, 4; pop ebx; pop esi; ret; 
0x0017c3e5: jg 0x17c408; add esp, 4; pop ebx; pop esi; ret; 
0x0017c485: jg 0x17c4a8; add esp, 4; pop ebx; pop esi; ret; 
0x0017d320: jg 0x17d399; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x00186a18: jg 0x186a5c; jo 0x18699d; ret 0x80; 
0x00186ae0: jg 0x186b24; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b10: jg 0x186b54; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b70: jg 0x186bb4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186bcb: jg 0x186c0f; fisub dword ptr [esi + 0xf]; jg 0x186c14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00186bd0: jg 0x186c14; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00186c40: jg 0x186c84; call 0x42ee7bad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186d66: jg 0x186daa; ret; 
0x00186da6: jg 0x186dea; ret 0xf66; 
0x00187070: jg 0x1870b4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001870a0: jg 0x1870e4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00187100: jg 0x187144; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018715b: jg 0x18719f; fisub dword ptr [esi + 0xf]; jg 0x1871a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00187160: jg 0x1871a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001871d0: jg 0x187214; call 0x42ee813d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001872f6: jg 0x18733a; ret; 
0x00187336: jg 0x18737a; ret 0xf66; 
0x0018e71b: jg 0x18e721; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b38b: jg 0x19b390; neg eax; ret; 
0x0019b6b6: jg 0x19b6c0; neg eax; ret; 
0x0019f6c5: jg 0x19f6d0; neg eax; pop edi; pop esi; pop ebx; ret; 
0x0019f7b6: jg 0x19f7c0; neg eax; ret; 
0x001a023b: jg 0x1a023f; mov eax, edi; pop edi; ret; 
0x001a02c6: jg 0x1a02ca; mov eax, edx; ret; 
0x00027ee8: jg 0x27ee3; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [edi + edi*2], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x00027ef2: jg 0x27eed; jmp dword ptr [esi - 0x77]; 
0x000281f5: jg 0x281f0; call dword ptr [eax - 0x73]; 
0x00028205: jg 0x28200; call dword ptr [eax - 0x18]; 
0x00028700: jg 0x286fb; call dword ptr [eax - 0x18]; 
0x000287da: jg 0x287d5; call dword ptr [eax - 0x18]; 
0x00028d53: jg 0x28d4e; call dword ptr [eax - 0x18]; 
0x00028ee2: jg 0x28edd; call dword ptr [eax - 0x18]; 
0x0002938e: jg 0x29389; call dword ptr [eax - 0x18]; 
0x00029444: jg 0x2943f; call dword ptr [eax - 0x18]; 
0x000299e2: jg 0x299dd; call dword ptr [eax - 0x18]; 
0x00029b1b: jg 0x29b16; call dword ptr [eax - 0x18]; 
0x0002a04f: jg 0x2a04a; call dword ptr [eax - 0x18]; 
0x0002a9d9: jg 0x2a9d4; call dword ptr [eax - 0x18]; 
0x0002aad1: jg 0x2aacc; call dword ptr [eax - 0x18]; 
0x0002aaf4: jg 0x2aaef; call dword ptr [eax - 0x18]; 
0x0002ab17: jg 0x2ab12; call dword ptr [eax - 0x18]; 
0x0002b0cb: jg 0x2b0c6; call dword ptr [eax - 0x18]; 
0x0002b740: jg 0x2b73b; call dword ptr [eax - 0x18]; 
0x0002b763: jg 0x2b75e; call dword ptr [eax - 0x18]; 
0x0002b786: jg 0x2b781; call dword ptr [eax - 0x18]; 
0x0002c0d7: jg 0x2c0d2; call dword ptr [eax - 0x18]; 
0x0002cd25: jg 0x2cd20; call dword ptr [eax - 0x18]; 
0x0002cdc1: jg 0x2cdbc; call dword ptr [eax - 0x18]; 
0x0002cde9: jg 0x2cde4; call dword ptr [eax - 0x18]; 
0x0002ce2f: jg 0x2ce2a; call dword ptr [eax - 0x18]; 
0x0002d8a2: jg 0x2d89d; call dword ptr [eax - 0x18]; 
0x0002d8c5: jg 0x2d8c0; call dword ptr [eax - 0x18]; 
0x0002d92e: jg 0x2d929; call dword ptr [eax - 0x18]; 
0x0002d9c8: jg 0x2d9c3; call dword ptr [eax - 0x18]; 
0x0002e0ef: jg 0x2e0ea; call dword ptr [eax - 0x18]; 
0x0002e191: jg 0x2e18c; call dword ptr [eax - 0x18]; 
0x0002e1e9: jg 0x2e1e4; call dword ptr [eax - 0x18]; 
0x0002e20c: jg 0x2e207; call dword ptr [eax - 0x18]; 
0x0002ec61: jg 0x2ec5c; call dword ptr [eax - 0x18]; 
0x0002ec9c: jg 0x2ec97; call dword ptr [eax - 0x18]; 
0x0002ed05: jg 0x2ed00; call dword ptr [eax - 0x18]; 
0x0002ed90: jg 0x2ed8b; call dword ptr [eax - 0x18]; 
0x00031aa7: jg 0x31ae4; stc; call dword ptr [eax - 0x18]; 
0x0003abc7: jg 0x3abc8; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003af22: jg 0x3aea5; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x0003c361: jg 0x3c368; add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c370; add esp, 8; pop ebx; ret; 
0x0003e29f: jg 0x3e2b0; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003e402: jg 0x3e530; sub esp, 8; push 0; push edx; call eax; 
0x0003e9d3: jg 0x3eb50; sub esp, 8; push dword ptr [esp + 0xc]; push dword ptr [esp + 0x3c]; call eax; 
0x0003eab7: jg 0x3eb70; call eax; 
0x0003f5f4: jg 0x3f618; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004009a: jg 0x400a8; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00040d57: jg 0x40d78; add esp, 4; pop ebx; pop esi; ret; 
0x00040e86: jg 0x40ea8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041aca: jg 0x41af0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0004274d: jg 0x4272a; adc eax, 0x10c48300; pop ebx; pop esi; pop edi; ret; 
0x0005d7e4: jg 0x5d820; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0005d8f5: jg 0x5d930; add esp, 0x18; pop ebx; ret; 
0x0007fba6: jg 0x7fbb1; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x00086ed3: jg 0x86ee0; ret; 
0x0008961f: jg 0x89658; pop ebx; pop esi; pop edi; ret; 
0x0008a8d6: jg 0x8a85b; bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x0008b2b8: jg 0x8b243; ret 0x458b; 
0x0008b36f: jg 0x8b3a2; test byte ptr [ecx], 0xc3; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b7e0: jg 0x8b76b; ret 0x458b; 
0x0008cf60: jg 0x8cf7b; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008e345: jg 0x8e368; add esp, 0x18; pop ebx; ret; 
0x0008ea46: jg 0x8eaf8; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00090831: jg 0x90864; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000924a6: jg 0x924b7; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092ba1: jg 0x92bbc; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00092c01: jg 0x92c12; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092c96: jg 0x92cb1; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00092e02: jg 0x92e13; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009343c: jg 0x9344d; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000938c1: jg 0x938dc; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000aae86: jg 0xaae8a; mov eax, edi; pop edi; ret; 
0x000ab116: jg 0xab11a; mov eax, edx; ret; 
0x000af246: jg 0xaf24a; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f6: jg 0xaf4fa; lea eax, [edx + 0xf]; ret; 
0x000b2a43: jg 0xb2a17; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2c56: jg 0xb2c59; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2cdb: jg 0xb2ce2; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2d00: jg 0xb2d08; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2d1e: jg 0xb2d27; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2d3c: jg 0xb2d46; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2d5f: jg 0xb2d6a; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2d84: jg 0xb2d90; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2dc2: jg 0xb2dd0; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2de6: jg 0xb2df5; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2e46: jg 0xb2e57; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2e6c: jg 0xb2e7e; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2f46: jg 0xb2f5e; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2f76: jg 0xb2f8f; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b300e: jg 0xb302a; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b303c: jg 0xb3059; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b306c: jg 0xb308a; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b3096: jg 0xb30b5; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b30c6: jg 0xb30e6; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b30f6: jg 0xb3117; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b3126: jg 0xb3148; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b32a6: jg 0xb32af; pop edi; pop esi; pop ebx; ret; 
0x000b32b9: jg 0xb32c2; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b32da: jg 0xb32e3; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b32f9: jg 0xb3302; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b3319: jg 0xb3322; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b335b: jg 0xb3364; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b337b: jg 0xb3384; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b339b: jg 0xb33a4; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b343b: jg 0xb3444; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b345b: jg 0xb3464; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b347b: jg 0xb3484; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b349b: jg 0xb34a4; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b345f: jg 0xb34b8; push cs; pop edi; pop esi; pop ebx; ret; 
0x000b347f: jg 0xb34d8; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000b349f: jg 0xb34f8; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b34c2: jg 0xb351b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000b35d2: jg 0xb35db; pop edi; pop esi; pop ebx; ret; 
0x000b35c2: jg 0xb360b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b366f: jg 0xb3678; add edi, 0x10; call 0x17d651; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b36df: jg 0xb3711; pop edi; pop esi; pop ebx; ret; 
0x000b36de: jg 0xb375f; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b4223: jg 0xb41e1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b42bd: jg 0xb42c1; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b42e0: jg 0xb42e5; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b42fb: jg 0xb4301; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b431e: jg 0xb4325; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4343: jg 0xb434b; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4361: jg 0xb436a; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b43c7: jg 0xb43d3; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b43f5: jg 0xb4402; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4425: jg 0xb4433; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4459: jg 0xb4468; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4489: jg 0xb4499; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b44b9: jg 0xb44ca; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b44df: jg 0xb44f1; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4555: jg 0xb456a; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b467c: jg 0xb4697; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b470f: jg 0xb472d; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4739: jg 0xb4758; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4769: jg 0xb4789; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4799: jg 0xb47ba; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b47c9: jg 0xb47eb; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4986: jg 0xb498f; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b4b2f: jg 0xb4b88; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000b4b6f: jg 0xb4bc8; jge 0x5e6a6abe; pop ebx; ret; 
0x000b4b8f: jg 0xb4be8; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000b4bb2: jg 0xb4c0b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000b4cc2: jg 0xb4ccb; pop edi; pop esi; pop ebx; ret; 
0x000b4cb2: jg 0xb4cfb; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b4d53: jg 0xb4d5c; add edi, 0x10; call 0x17d651; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d6f: jg 0xb4d78; add edi, 0x10; call 0x17d651; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4ddf: jg 0xb4e11; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b4dde: jg 0xb4e5f; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000b6f76: jg 0xb6f78; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6f86: jg 0xb6f88; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6faa: jg 0xb6fac; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6fc9: jg 0xb6fcb; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6fe9: jg 0xb6feb; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7009: jg 0xb700b; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b702b: jg 0xb702d; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b704b: jg 0xb704d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b706b: jg 0xb706d; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b708b: jg 0xb708d; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70af: jg 0xb70b1; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ce: jg 0xb70d0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ee: jg 0xb70f0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b710b: jg 0xb710d; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b712b: jg 0xb712d; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b714b: jg 0xb714d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b710f: jg 0xb7161; or eax, 0x824448b; pop esi; ret; 
0x000b716b: jg 0xb716d; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b712f: jg 0xb7181; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b714f: jg 0xb71a1; jnp 0x5e13959b; ret; 
0x000b716f: jg 0xb71c1; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ba3e9: jg 0xba3eb; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba40c: jg 0xba40e; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba42d: jg 0xba42f; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba44c: jg 0xba44e; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba46c: jg 0xba46e; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba4ae: jg 0xba4b0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba4ce: jg 0xba4d0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba4ee: jg 0xba4f0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba5ce: jg 0xba5d0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba5ee: jg 0xba5f0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba60e: jg 0xba610; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba5d2: jg 0xba624; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000ba62e: jg 0xba630; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba5f2: jg 0xba644; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba612: jg 0xba664; jnp 0x5b17ca5e; pop esi; ret; 
0x000ba632: jg 0xba684; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bb1b8: jg 0xbb13b; ret; 
0x000bb1b6: jg 0xbb237; jg 0xbb13b; ret; 
0x000d1ea5: jg 0xd1eb0; neg eax; pop edi; pop esi; ret; 
0x000d1ed5: jg 0xd1ed9; neg eax; ret; 
0x000d545a: jg 0xd5480; add esp, 8; pop ebx; ret; 
0x000e0ed0: jg 0xe0ef0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e10a1: jg 0xe10c0; add esp, 4; pop ebx; pop esi; ret; 
0x000e1117: jg 0xe1130; pop ebx; pop esi; pop edi; ret; 
0x000e1167: jg 0xe1190; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000ec0b6: jg 0xec0b3; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000f264f: jg 0xf2651; add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000f2682: jg 0xf2684; add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f26a8: jg 0xf26aa; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000f26c7: jg 0xf26c9; add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000f26f0: jg 0xf26f2; add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000f26f8: jg 0xf2755; cmove eax, edx; ret; 
0x00102a21: jge 0x1029a6; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0011f6fe: jge 0x11f700; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126e3b: jge 0x126e3e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001290f2: jge 0x129104; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00131452: jge 0x1313d8; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00131912: jge 0x13190d; call dword ptr [eax - 0x75]; 
0x00131b4c: jge 0x131b47; call dword ptr [eax - 0x75]; 
0x00132c2f: jge 0x132c11; hlt; jmp dword ptr [esi - 0x70]; 
0x001396c4: jge 0x13972e; stc; call dword ptr [eax - 0x73]; 
0x0013b422: jge 0x13b412; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0017e043: jge 0x17e045; jb 0x17e056; xchg esp, eax; ret; 
0x0019d7bf: jge 0x19d7c1; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019e33f: jge 0x19e341; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00024450: jge 0x24422; add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x24427; call dword ptr [ebp - 0x38]; 
0x0005849f: jge 0x58459; std; jmp dword ptr [esi - 0x70]; 
0x000b49dd: jge 0x5e6a5d2a; pop ebx; ret; 
0x000b4a61: jge 0x5e6a61ae; pop ebx; ret; 
0x000b4b71: jge 0x5e6a6abe; pop ebx; ret; 
0x00055b23: jge 0x8305819d; ret 0x3901; 
0x000a8643: jge 0x830aacbd; ret 0x3901; 
0x000f5b0b: jge 0x830f8185; ret; 
0x000ace36: jge 0x8519dd86; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000b44b7: jge 0x851a543c; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009240a: jge 0x92425; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00092d9a: jge 0x92db5; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00096f05: jge 0x96f20; pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3b88], ecx; ret; 
0x000d2c29: jge 0xd2c24; call dword ptr [eax + 0x56]; 
0x000ddabf: jge 0xddb17; hlt; inc dword ptr [ebx + 0xbb10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x000e1f89: jge 0xe1f5f; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x000e21c9: jge 0xe219f; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x000f26cd: jge 0xf26cf; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x000f276f: jge 0xf27a0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x00103648: jl 0x10366e; adc al, ch; jmp 0x81103df0; ret; 
0x00104984: jl 0x104936; stc; call dword ptr [eax - 0x73]; 
0x001070fd: jl 0x107123; adc byte ptr [ebp - 0x64f3779], cl; call dword ptr [eax - 0x73]; 
0x00107419: jl 0x10743f; adc byte ptr [ebp - 0x64f3779], cl; call dword ptr [eax + 0x68]; 
0x00107648: jl 0x10766e; adc byte ptr [ebp - 0x64f3779], cl; call dword ptr [eax + 0x68]; 
0x00107bfb: jl 0x107c21; sub al, 0xeb; sbb dword ptr [ebx - 0x7cefdbbc], ecx; ret; 
0x00107d8f: jl 0x107db5; sbb byte ptr [ebp - 0x6a71779], cl; call dword ptr [eax - 0x73]; 
0x00108460: jl 0x108486; adc byte ptr [ebp - 0x64f5379], cl; call dword ptr [eax - 0x73]; 
0x0010851c: jl 0x108542; or al, 0x39; ret; 
0x00108585: jl 0x1085ab; adc byte ptr [ebp - 0x64f3779], cl; call dword ptr [eax - 0x73]; 
0x001085f7: jl 0x10861d; adc byte ptr [ebp - 0x64f2b79], cl; call dword ptr [eax - 0x73]; 
0x0010c29c: jl 0x10c2c2; adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0010cc2b: jl 0x10cc88; pop esi; pop edi; pop ebp; ret; 
0x0010d033: jl 0x10d059; sbb al, 0xf; xchg ebp, eax; ret; 
0x0010d5fe: jl 0x10d624; adc al, 0x89; ret; 
0x0010e963: jl 0x10e989; sbb al, 0xf; xchg ebp, eax; ret; 
0x0010ef2e: jl 0x10ef54; adc al, 0x89; ret; 
0x00110293: jl 0x1102b9; sbb al, 0xf; xchg ebp, eax; ret; 
0x0011085e: jl 0x110884; adc al, 0x89; ret; 
0x001156d1: jl 0x1156f7; cmp al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011604b: jl 0x116071; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0011718b: jl 0x1171b1; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0011d0cf: jl 0x11d0f5; xor byte ptr [ebp - 0x6a3cd7d], cl; call dword ptr [eax + 0x55]; 
0x00124368: jl 0x12438e; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00124929: jl 0x12493e; add al, 0x83; ret 0x3908; 
0x00125108: jl 0x125165; pop esi; pop edi; pop ebp; ret; 
0x001255a8: jl 0x1255ab; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00128a47: jl 0x128a6d; xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128ce9: jl 0x128d46; pop esi; pop edi; pop ebp; ret; 
0x00129754: jl 0x12977a; xor al, 0xb8; jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d59e: jl 0x12d5c4; adc byte ptr [ecx], bh; jl 0x12d5c8; sbb al, 0xf; xchg esp, eax; ret; 
0x0012d5a2: jl 0x12d5c8; sbb al, 0xf; xchg esp, eax; ret; 
0x0012edbd: jl 0x12ede3; and al, 0x8d; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ede0: jl 0x12ee06; and al, 0x8d; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ee03: jl 0x12ee29; and al, 0x8d; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ee26: jl 0x12ee4c; and al, 0x8d; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ee49: jl 0x12ee6f; and al, 0x8d; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ee6c: jl 0x12ee92; and al, 0x8d; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0013346e: jl 0x133455; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00135978: jl 0x13599e; adc al, ch; mov ecx, 0x8100047c; ret; 
0x001376c5: jl 0x1376eb; sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x00137ae9: jl 0x137b0f; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x2ec3; 
0x0013824a: jl 0x1381d5; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013966a: jl 0x139626; stc; dec dword ptr [ebp - 0x67cef67]; call dword ptr [eax + 0x53]; 
0x001396bf: jl 0x1396e5; adc al, 0x8d; xchg dword ptr [ebp + 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x0013bea7: jl 0x13bea8; jmp dword ptr [esi - 0x70]; 
0x00142531: jl 0x142557; str word ptr [edi]; test dword ptr [ebp - 0x7c000003], esi; ret; 
0x00147102: jl 0x147128; and al, 0x8d; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0014712a: jl 0x147150; and al, 0x8d; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0014714d: jl 0x147173; and al, 0x8d; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x00147508: jl 0x1474c8; stc; call dword ptr [eax - 0x18]; 
0x0014b067: jl 0x14b08d; adc byte ptr [ebp - 0x6c71879], cl; call dword ptr [eax + 0x53]; 
0x0014b531: jl 0x14b557; or byte ptr [ebp - 0x63e3379], cl; call dword ptr [eax - 0x73]; 
0x0014b843: jl 0x14b845; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0014c49e: jl 0x14c43f; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00152737: jl 0x15275d; adc al, 0x8d; xchg eax, esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x00152f16: jl 0x152f3c; xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0015327b: jl 0x1532a1; add al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00153824: jl 0x15384a; or al, 0x8d; xchg edi, eax; sbb al, 5; bnd call dword ptr [edx + 0x6a]; 
0x001549a3: jl 0x1549c9; sbb al, 0x89; fisttp qword ptr [ebx + 0xc090]; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x00154a7c: jl 0x154aa2; sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x00163f3a: jl 0x163f60; inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00165254: jl 0x16527a; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0016719a: jl 0x1671c0; and al, 0xf; xchg esp, eax; ret; 
0x0016a07a: jl 0x16a042; stc; call dword ptr [eax - 0x73]; 
0x0016c190: jl 0x16c11b; in al, dx; call dword ptr [eax - 0x73]; 
0x001706ec: jl 0x170712; adc byte ptr [ebp - 0x68c1979], cl; call dword ptr [eax - 0x73]; 
0x001743a3: jl 0x1743c9; adc byte ptr [ebp - 0x6949b79], cl; call dword ptr [eax - 0x18]; 
0x00185fb6: jl 0x185fdc; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00194404: jl 0x1943d6; stc; jmp dword ptr [esi + 0xf]; 
0x00194410: jl 0x1943e2; stc; jmp dword ptr [esi + 0xf]; 
0x00194541: jl 0x194513; stc; jmp dword ptr [esi + 0xf]; 
0x0019454d: jl 0x19451f; stc; jmp dword ptr [esi + 0xf]; 
0x001945c6: jl 0x194598; stc; jmp dword ptr [esi + 0xf]; 
0x001945d2: jl 0x1945a4; stc; jmp dword ptr [esi + 0xf]; 
0x00194656: jl 0x194628; stc; jmp dword ptr [esi + 0xf]; 
0x00194662: jl 0x194634; stc; jmp dword ptr [esi + 0xf]; 
0x00194709: jl 0x1946db; stc; jmp dword ptr [esi + 0xf]; 
0x00194715: jl 0x1946e7; stc; jmp dword ptr [esi + 0xf]; 
0x00194799: jl 0x19476b; stc; jmp dword ptr [esi + 0xf]; 
0x001947a5: jl 0x194777; stc; jmp dword ptr [esi + 0xf]; 
0x00194876: jl 0x194848; stc; jmp dword ptr [esi + 0xf]; 
0x00194882: jl 0x194854; stc; jmp dword ptr [esi + 0xf]; 
0x00194929: jl 0x1948fb; stc; jmp dword ptr [esi + 0xf]; 
0x00194935: jl 0x194907; stc; jmp dword ptr [esi + 0xf]; 
0x001949b9: jl 0x19498b; stc; jmp dword ptr [esi + 0xf]; 
0x001949c5: jl 0x194997; stc; jmp dword ptr [esi + 0xf]; 
0x00194a96: jl 0x194a68; stc; jmp dword ptr [esi + 0xf]; 
0x00194aa2: jl 0x194a74; stc; jmp dword ptr [esi + 0xf]; 
0x00194b49: jl 0x194b1b; stc; jmp dword ptr [esi + 0xf]; 
0x00194b55: jl 0x194b27; stc; jmp dword ptr [esi + 0xf]; 
0x00194bd9: jl 0x194bab; stc; jmp dword ptr [esi + 0xf]; 
0x00194be5: jl 0x194bb7; stc; jmp dword ptr [esi + 0xf]; 
0x00194cb6: jl 0x194c88; stc; jmp dword ptr [esi + 0xf]; 
0x00194cc2: jl 0x194c94; stc; jmp dword ptr [esi + 0xf]; 
0x00194d69: jl 0x194d3b; stc; jmp dword ptr [esi + 0xf]; 
0x00194d75: jl 0x194d47; stc; jmp dword ptr [esi + 0xf]; 
0x00194df9: jl 0x194dcb; stc; jmp dword ptr [esi + 0xf]; 
0x00194e05: jl 0x194dd7; stc; jmp dword ptr [esi + 0xf]; 
0x00194ed6: jl 0x194ea8; stc; jmp dword ptr [esi + 0xf]; 
0x00194ee2: jl 0x194eb4; stc; jmp dword ptr [esi + 0xf]; 
0x00194f89: jl 0x194f5b; stc; jmp dword ptr [esi + 0xf]; 
0x00194f95: jl 0x194f67; stc; jmp dword ptr [esi + 0xf]; 
0x00195019: jl 0x194feb; stc; jmp dword ptr [esi + 0xf]; 
0x00195025: jl 0x194ff7; stc; jmp dword ptr [esi + 0xf]; 
0x001950f6: jl 0x1950c8; stc; jmp dword ptr [esi + 0xf]; 
0x00195102: jl 0x1950d4; stc; jmp dword ptr [esi + 0xf]; 
0x001951a9: jl 0x19517b; stc; jmp dword ptr [esi + 0xf]; 
0x001951b5: jl 0x195187; stc; jmp dword ptr [esi + 0xf]; 
0x00195239: jl 0x19520b; stc; jmp dword ptr [esi + 0xf]; 
0x00195245: jl 0x195217; stc; jmp dword ptr [esi + 0xf]; 
0x00195316: jl 0x1952e8; stc; jmp dword ptr [esi + 0xf]; 
0x00195322: jl 0x1952f4; stc; jmp dword ptr [esi + 0xf]; 
0x001953c9: jl 0x19539b; stc; jmp dword ptr [esi + 0xf]; 
0x001953d5: jl 0x1953a7; stc; jmp dword ptr [esi + 0xf]; 
0x00195459: jl 0x19542b; stc; jmp dword ptr [esi + 0xf]; 
0x00195465: jl 0x195437; stc; jmp dword ptr [esi + 0xf]; 
0x00195546: jl 0x195518; stc; jmp dword ptr [esi + 0xf]; 
0x00195552: jl 0x195524; stc; jmp dword ptr [esi + 0xf]; 
0x001955f9: jl 0x1955cb; stc; jmp dword ptr [esi + 0xf]; 
0x00195605: jl 0x1955d7; stc; jmp dword ptr [esi + 0xf]; 
0x00195689: jl 0x19565b; stc; jmp dword ptr [esi + 0xf]; 
0x00195695: jl 0x195667; stc; jmp dword ptr [esi + 0xf]; 
0x00195776: jl 0x195748; stc; jmp dword ptr [esi + 0xf]; 
0x00195782: jl 0x195754; stc; jmp dword ptr [esi + 0xf]; 
0x00195829: jl 0x1957fb; stc; jmp dword ptr [esi + 0xf]; 
0x00195835: jl 0x195807; stc; jmp dword ptr [esi + 0xf]; 
0x001958b9: jl 0x19588b; stc; jmp dword ptr [esi + 0xf]; 
0x001958c5: jl 0x195897; stc; jmp dword ptr [esi + 0xf]; 
0x00195996: jl 0x195968; stc; jmp dword ptr [esi + 0xf]; 
0x001959a2: jl 0x195974; stc; jmp dword ptr [esi + 0xf]; 
0x00195a49: jl 0x195a1b; stc; jmp dword ptr [esi + 0xf]; 
0x00195a55: jl 0x195a27; stc; jmp dword ptr [esi + 0xf]; 
0x00195ad9: jl 0x195aab; stc; jmp dword ptr [esi + 0xf]; 
0x00195ae5: jl 0x195ab7; stc; jmp dword ptr [esi + 0xf]; 
0x00195bb6: jl 0x195b88; stc; jmp dword ptr [esi + 0xf]; 
0x00195bc2: jl 0x195b94; stc; jmp dword ptr [esi + 0xf]; 
0x00195c69: jl 0x195c3b; stc; jmp dword ptr [esi + 0xf]; 
0x00195c75: jl 0x195c47; stc; jmp dword ptr [esi + 0xf]; 
0x00195cf9: jl 0x195ccb; stc; jmp dword ptr [esi + 0xf]; 
0x00195d05: jl 0x195cd7; stc; jmp dword ptr [esi + 0xf]; 
0x00195dd6: jl 0x195da8; stc; jmp dword ptr [esi + 0xf]; 
0x00195de2: jl 0x195db4; stc; jmp dword ptr [esi + 0xf]; 
0x00195e89: jl 0x195e5b; stc; jmp dword ptr [esi + 0xf]; 
0x00195e95: jl 0x195e67; stc; jmp dword ptr [esi + 0xf]; 
0x00195f19: jl 0x195eeb; stc; jmp dword ptr [esi + 0xf]; 
0x00195f25: jl 0x195ef7; stc; jmp dword ptr [esi + 0xf]; 
0x00195ff6: jl 0x195fc8; stc; jmp dword ptr [esi + 0xf]; 
0x00196002: jl 0x195fd4; stc; jmp dword ptr [esi + 0xf]; 
0x001960a9: jl 0x19607b; stc; jmp dword ptr [esi + 0xf]; 
0x001960b5: jl 0x196087; stc; jmp dword ptr [esi + 0xf]; 
0x00196139: jl 0x19610b; stc; jmp dword ptr [esi + 0xf]; 
0x00196145: jl 0x196117; stc; jmp dword ptr [esi + 0xf]; 
0x00196216: jl 0x1961e8; stc; jmp dword ptr [esi + 0xf]; 
0x00196222: jl 0x1961f4; stc; jmp dword ptr [esi + 0xf]; 
0x001962c9: jl 0x19629b; stc; jmp dword ptr [esi + 0xf]; 
0x001962d5: jl 0x1962a7; stc; jmp dword ptr [esi + 0xf]; 
0x00196359: jl 0x19632b; stc; jmp dword ptr [esi + 0xf]; 
0x00196365: jl 0x196337; stc; jmp dword ptr [esi + 0xf]; 
0x00196436: jl 0x196408; stc; jmp dword ptr [esi + 0xf]; 
0x00196442: jl 0x196414; stc; jmp dword ptr [esi + 0xf]; 
0x001964e9: jl 0x1964bb; stc; jmp dword ptr [esi + 0xf]; 
0x001964f5: jl 0x1964c7; stc; jmp dword ptr [esi + 0xf]; 
0x00196579: jl 0x19654b; stc; jmp dword ptr [esi + 0xf]; 
0x00196585: jl 0x196557; stc; jmp dword ptr [esi + 0xf]; 
0x0019663c: jl 0x19660e; stc; jmp dword ptr [esi + 0xf]; 
0x00196648: jl 0x19661a; stc; jmp dword ptr [esi + 0xf]; 
0x00196922: jl 0x1968f4; stc; jmp dword ptr [esi + 0xf]; 
0x0019692e: jl 0x196900; stc; jmp dword ptr [esi + 0xf]; 
0x00196a71: jl 0x196a43; stc; jmp dword ptr [esi + 0xf]; 
0x00196a7d: jl 0x196a4f; stc; jmp dword ptr [esi + 0xf]; 
0x00196b06: jl 0x196ad8; stc; jmp dword ptr [esi + 0xf]; 
0x00196b12: jl 0x196ae4; stc; jmp dword ptr [esi + 0xf]; 
0x00196ba6: jl 0x196b78; stc; jmp dword ptr [esi + 0xf]; 
0x00196bb2: jl 0x196b84; stc; jmp dword ptr [esi + 0xf]; 
0x00196c69: jl 0x196c3b; stc; jmp dword ptr [esi + 0xf]; 
0x00196c75: jl 0x196c47; stc; jmp dword ptr [esi + 0xf]; 
0x00196d05: jl 0x196cd7; stc; jmp dword ptr [esi + 0xf]; 
0x00196d11: jl 0x196ce3; stc; jmp dword ptr [esi + 0xf]; 
0x00196df6: jl 0x196dc8; stc; jmp dword ptr [esi + 0xf]; 
0x00196e02: jl 0x196dd4; stc; jmp dword ptr [esi + 0xf]; 
0x00196eb9: jl 0x196e8b; stc; jmp dword ptr [esi + 0xf]; 
0x00196ec5: jl 0x196e97; stc; jmp dword ptr [esi + 0xf]; 
0x00196f55: jl 0x196f27; stc; jmp dword ptr [esi + 0xf]; 
0x00196f61: jl 0x196f33; stc; jmp dword ptr [esi + 0xf]; 
0x00197046: jl 0x197018; stc; jmp dword ptr [esi + 0xf]; 
0x00197052: jl 0x197024; stc; jmp dword ptr [esi + 0xf]; 
0x00197109: jl 0x1970db; stc; jmp dword ptr [esi + 0xf]; 
0x00197115: jl 0x1970e7; stc; jmp dword ptr [esi + 0xf]; 
0x001971a5: jl 0x197177; stc; jmp dword ptr [esi + 0xf]; 
0x001971b1: jl 0x197183; stc; jmp dword ptr [esi + 0xf]; 
0x00197296: jl 0x197268; stc; jmp dword ptr [esi + 0xf]; 
0x001972a2: jl 0x197274; stc; jmp dword ptr [esi + 0xf]; 
0x00197359: jl 0x19732b; stc; jmp dword ptr [esi + 0xf]; 
0x00197365: jl 0x197337; stc; jmp dword ptr [esi + 0xf]; 
0x001973f5: jl 0x1973c7; stc; jmp dword ptr [esi + 0xf]; 
0x00197401: jl 0x1973d3; stc; jmp dword ptr [esi + 0xf]; 
0x001974e6: jl 0x1974b8; stc; jmp dword ptr [esi + 0xf]; 
0x001974f2: jl 0x1974c4; stc; jmp dword ptr [esi + 0xf]; 
0x001975a9: jl 0x19757b; stc; jmp dword ptr [esi + 0xf]; 
0x001975b5: jl 0x197587; stc; jmp dword ptr [esi + 0xf]; 
0x00197645: jl 0x197617; stc; jmp dword ptr [esi + 0xf]; 
0x00197651: jl 0x197623; stc; jmp dword ptr [esi + 0xf]; 
0x00197736: jl 0x197708; stc; jmp dword ptr [esi + 0xf]; 
0x00197742: jl 0x197714; stc; jmp dword ptr [esi + 0xf]; 
0x001977f9: jl 0x1977cb; stc; jmp dword ptr [esi + 0xf]; 
0x00197805: jl 0x1977d7; stc; jmp dword ptr [esi + 0xf]; 
0x00197895: jl 0x197867; stc; jmp dword ptr [esi + 0xf]; 
0x001978a1: jl 0x197873; stc; jmp dword ptr [esi + 0xf]; 
0x00197986: jl 0x197958; stc; jmp dword ptr [esi + 0xf]; 
0x00197992: jl 0x197964; stc; jmp dword ptr [esi + 0xf]; 
0x00197a49: jl 0x197a1b; stc; jmp dword ptr [esi + 0xf]; 
0x00197a55: jl 0x197a27; stc; jmp dword ptr [esi + 0xf]; 
0x00197ae5: jl 0x197ab7; stc; jmp dword ptr [esi + 0xf]; 
0x00197af1: jl 0x197ac3; stc; jmp dword ptr [esi + 0xf]; 
0x00197bd6: jl 0x197ba8; stc; jmp dword ptr [esi + 0xf]; 
0x00197be2: jl 0x197bb4; stc; jmp dword ptr [esi + 0xf]; 
0x00197c99: jl 0x197c6b; stc; jmp dword ptr [esi + 0xf]; 
0x00197ca5: jl 0x197c77; stc; jmp dword ptr [esi + 0xf]; 
0x00197d35: jl 0x197d07; stc; jmp dword ptr [esi + 0xf]; 
0x00197d41: jl 0x197d13; stc; jmp dword ptr [esi + 0xf]; 
0x00197e26: jl 0x197df8; stc; jmp dword ptr [esi + 0xf]; 
0x00197e32: jl 0x197e04; stc; jmp dword ptr [esi + 0xf]; 
0x00197ee9: jl 0x197ebb; stc; jmp dword ptr [esi + 0xf]; 
0x00197ef5: jl 0x197ec7; stc; jmp dword ptr [esi + 0xf]; 
0x00197f85: jl 0x197f57; stc; jmp dword ptr [esi + 0xf]; 
0x00197f91: jl 0x197f63; stc; jmp dword ptr [esi + 0xf]; 
0x00198076: jl 0x198048; stc; jmp dword ptr [esi + 0xf]; 
0x00198082: jl 0x198054; stc; jmp dword ptr [esi + 0xf]; 
0x00198139: jl 0x19810b; stc; jmp dword ptr [esi + 0xf]; 
0x00198145: jl 0x198117; stc; jmp dword ptr [esi + 0xf]; 
0x001981d5: jl 0x1981a7; stc; jmp dword ptr [esi + 0xf]; 
0x001981e1: jl 0x1981b3; stc; jmp dword ptr [esi + 0xf]; 
0x001982c6: jl 0x198298; stc; jmp dword ptr [esi + 0xf]; 
0x001982d2: jl 0x1982a4; stc; jmp dword ptr [esi + 0xf]; 
0x00198389: jl 0x19835b; stc; jmp dword ptr [esi + 0xf]; 
0x00198395: jl 0x198367; stc; jmp dword ptr [esi + 0xf]; 
0x00198425: jl 0x1983f7; stc; jmp dword ptr [esi + 0xf]; 
0x00198431: jl 0x198403; stc; jmp dword ptr [esi + 0xf]; 
0x00198516: jl 0x1984e8; stc; jmp dword ptr [esi + 0xf]; 
0x00198522: jl 0x1984f4; stc; jmp dword ptr [esi + 0xf]; 
0x001985d9: jl 0x1985ab; stc; jmp dword ptr [esi + 0xf]; 
0x001985e5: jl 0x1985b7; stc; jmp dword ptr [esi + 0xf]; 
0x00198675: jl 0x198647; stc; jmp dword ptr [esi + 0xf]; 
0x00198681: jl 0x198653; stc; jmp dword ptr [esi + 0xf]; 
0x00198766: jl 0x198738; stc; jmp dword ptr [esi + 0xf]; 
0x00198772: jl 0x198744; stc; jmp dword ptr [esi + 0xf]; 
0x00198829: jl 0x1987fb; stc; jmp dword ptr [esi + 0xf]; 
0x00198835: jl 0x198807; stc; jmp dword ptr [esi + 0xf]; 
0x001988c5: jl 0x198897; stc; jmp dword ptr [esi + 0xf]; 
0x001988d1: jl 0x1988a3; stc; jmp dword ptr [esi + 0xf]; 
0x001989b6: jl 0x198988; stc; jmp dword ptr [esi + 0xf]; 
0x001989c2: jl 0x198994; stc; jmp dword ptr [esi + 0xf]; 
0x00198a79: jl 0x198a4b; stc; jmp dword ptr [esi + 0xf]; 
0x00198a85: jl 0x198a57; stc; jmp dword ptr [esi + 0xf]; 
0x00198b15: jl 0x198ae7; stc; jmp dword ptr [esi + 0xf]; 
0x00198b21: jl 0x198af3; stc; jmp dword ptr [esi + 0xf]; 
0x00198c06: jl 0x198bd8; stc; jmp dword ptr [esi + 0xf]; 
0x00198c12: jl 0x198be4; stc; jmp dword ptr [esi + 0xf]; 
0x00198cc9: jl 0x198c9b; stc; jmp dword ptr [esi + 0xf]; 
0x00198cd5: jl 0x198ca7; stc; jmp dword ptr [esi + 0xf]; 
0x00198d65: jl 0x198d37; stc; jmp dword ptr [esi + 0xf]; 
0x00198d71: jl 0x198d43; stc; jmp dword ptr [esi + 0xf]; 
0x00198e3c: jl 0x198e0e; stc; jmp dword ptr [esi + 0xf]; 
0x00198e48: jl 0x198e1a; stc; jmp dword ptr [esi + 0xf]; 
0x0019a5e6: jl 0x19a5b8; stc; jmp dword ptr [esi + 0xf]; 
0x0019a5ee: jl 0x19a5c0; stc; jmp dword ptr [esi + 0xf]; 
0x0019a7e6: jl 0x19a7b8; stc; jmp dword ptr [esi + 0xf]; 
0x0019a7ee: jl 0x19a7c0; stc; jmp dword ptr [esi + 0xf]; 
0x0019aaf3: jl 0x19aac5; stc; jmp dword ptr [esi + 0xf]; 
0x0019aafb: jl 0x19aacd; stc; jmp dword ptr [esi + 0xf]; 
0x0019ad44: jl 0x19ad16; stc; jmp dword ptr [esi + 0xf]; 
0x0019ad4c: jl 0x19ad1e; stc; jmp dword ptr [esi + 0xf]; 
0x0019e683: jl 0x19e6d0; lea eax, [ecx + 0xa]; ret; 
0x0019e693: jl 0x19e6d0; lea eax, [ecx + 0xb]; ret; 
0x0019e5fe: jl 0x19e6d0; lea eax, [ecx + 0xc]; ret; 
0x0019e6a3: jl 0x19e6d0; lea eax, [ecx + 0xd]; ret; 
0x0019e6b3: jl 0x19e6d0; lea eax, [ecx + 0xe]; ret; 
0x0019e6c3: jl 0x19e6d0; lea eax, [ecx + 0xf]; ret; 
0x0019e613: jl 0x19e6d0; lea eax, [ecx + 1]; ret; 
0x0019e623: jl 0x19e6d0; lea eax, [ecx + 2]; ret; 
0x0019e633: jl 0x19e6d0; lea eax, [ecx + 3]; ret; 
0x0019e59b: jl 0x19e6d0; lea eax, [ecx + 4]; ret; 
0x0019e643: jl 0x19e6d0; lea eax, [ecx + 5]; ret; 
0x0019e653: jl 0x19e6d0; lea eax, [ecx + 6]; ret; 
0x0019e663: jl 0x19e6d0; lea eax, [ecx + 7]; ret; 
0x0019e5d4: jl 0x19e6d0; lea eax, [ecx + 8]; ret; 
0x0019e673: jl 0x19e6d0; lea eax, [ecx + 9]; ret; 
0x0019e4b1: jl 0x19e6d0; mov eax, ecx; ret; 
0x0019f132: jl 0x19f134; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x001a0ae9: jl 0x1a0a74; ret; 
0x001a0f60: jl 0x1a0f75; add al, 0x83; ret 0x3908; 
0x001a1765: jl 0x1a16f0; ret 0xe283; 
0x001a17af: jl 0x1a1744; add al, 0x83; ret; 
0x001a1763: jl 0x1a1789; jl 0x1a16f0; ret 0xe283; 
0x001a18ce: jl 0x1a1859; ret; 
0x001a35c0: jl 0x1a35d5; add al, 0x83; ret 0x3908; 
0x001a4276: jl 0x1a429c; sbb al, 0xf; xchg ebp, eax; ret 0x7c39; 
0x001a4462: jl 0x1a4488; sbb al, 0xf; xchg ebp, eax; ret 0x7c39; 
0x001a58d0: jl 0x1a58e5; add al, 0x83; ret 0x3908; 
0x001a5bb9: jl 0x1a5bdf; adc byte ptr [ecx], bh; ret 0x840f; 
0x001a6a67: jl 0x1a6a03; add al, 0x83; ret 0xd304; 
0x001a6e3c: jl 0x1a6e4f; add al, 0x83; ret 0x3908; 
0x001a7466: jl 0x1a73fb; add al, 0x83; ret; 
0x001a8474: jl 0x1a849a; and al, 0x29; ror byte ptr [ebx - 0x76cbdb8c], 1; ret 0x448b; 
0x00124379: jl 0x24e60; je 0x124382; ret; 
0x00124596: jl 0x24e60; ret; 
0x00025745: jl 0x257c5; stc; call dword ptr [eax - 0x73]; 
0x00029eed: jl 0x29f13; cmp al, 0x8d; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a036: jl 0x2a05c; cmp al, 0x8d; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a076: jl 0x2a09c; cmp al, 0x8d; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002a748: jl 0x2a76e; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002a9c0: jl 0x2a9e6; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002aa05: jl 0x2aa2b; cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002aa28: jl 0x2aa4e; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax + 0x68]; 
0x0002aa4b: jl 0x2aa71; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax + 0x68]; 
0x0002aab8: jl 0x2aade; cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002aadb: jl 0x2ab01; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x0002aafe: jl 0x2ab24; cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002ab26: jl 0x2ab4c; cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002ab49: jl 0x2ab6f; cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002ab6c: jl 0x2ab92; cmp byte ptr [ebp - 0x67ed779], cl; call dword ptr [eax - 0x73]; 
0x0002ad1d: jl 0x2ad7a; pop esi; pop edi; pop ebp; ret; 
0x0002b0b2: jl 0x2b0d8; cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax - 0x73]; 
0x0002b1dc: jl 0x2b202; cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax - 0x73]; 
0x0002b1c0: jl 0x2b21d; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b67c: jl 0x2b6a2; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002b69f: jl 0x2b6c5; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002b6c2: jl 0x2b6e8; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002b6f7: jl 0x2b71d; cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax + 0x68]; 
0x0002b727: jl 0x2b74d; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002b74a: jl 0x2b770; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002b76d: jl 0x2b793; cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax - 0x73]; 
0x0002b790: jl 0x2b7b6; cmp byte ptr [ebp - 0x67ef379], cl; call dword ptr [eax - 0x73]; 
0x0002b7b3: jl 0x2b7d9; cmp byte ptr [ebp - 0x6863379], cl; call dword ptr [eax + 0x68]; 
0x0002ba2d: jl 0x2ba8a; pop esi; pop edi; pop ebp; ret; 
0x0002c02c: jl 0x2c089; pop esi; pop edi; pop ebp; jmp eax; 
0x0002c2ee: jl 0x2c314; or al, 0x89; ret 0xfa29; 
0x0002d00d: jl 0x2d06a; pop esi; pop edi; pop ebp; ret; 
0x0002d560: jl 0x2d5bd; pop esi; pop edi; pop ebp; jmp eax; 
0x0002dfb4: jl 0x2dfda; cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e0d6: jl 0x2e0fc; cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e150: jl 0x2e176; cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002e178: jl 0x2e19e; cmp al, 0x8d; xchg esp, ebp; js 0x2e179; call dword ptr [eax - 0x73]; 
0x0002e19b: jl 0x2e1c1; cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002e1ad: jl 0x2e1d3; cmp al, 0x8d; xchg esp, ebp; js 0x2e1ae; call dword ptr [eax - 0x73]; 
0x0002e1d0: jl 0x2e1f6; cmp al, 0x8d; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002e1f3: jl 0x2e219; cmp al, 0x8d; xchg esp, ebp; js 0x2e1f4; call dword ptr [eax - 0x73]; 
0x0002e3dd: jl 0x2e43a; pop esi; pop edi; pop ebp; ret; 
0x0002e925: jl 0x2e982; pop esi; pop edi; pop ebp; jmp eax; 
0x000342e7: jl 0x3430d; add al, 0x7f; setbe al; ret; 
0x00039df8: jl 0x39e1e; adc al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0003cf55: jl 0x3cf7b; add al, 0; je 0x3cf70; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1d4], ecx; ret; 
0x0003d8c0: jl 0x3d8cf; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0003e70e: jl 0x3e734; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0003fbae: jl 0x3fbd4; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00045003: jl 0x45029; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x00045026: jl 0x4504c; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x00045a7b: jl 0x45aa1; sub byte ptr [ecx], bh; ret 0x840f; 
0x00046de7: jl 0x46e0d; adc byte ptr [edi], cl; xchg edx, eax; ret 0xd120; 
0x000482a3: jl 0x482c9; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000482c6: jl 0x482ec; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x00049009: jl 0x4902f; cmp byte ptr [ebp - 0x7b379], cl; call dword ptr [eax - 0x73]; 
0x0004a23a: jl 0x4a260; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a875: jl 0x4a89b; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a898: jl 0x4a8be; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a8c2: jl 0x4a8e8; cmp byte ptr [ebp - 0x6790779], cl; call dword ptr [eax - 0x73]; 
0x0004a8e5: jl 0x4a90b; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a908: jl 0x4a92e; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a92b: jl 0x4a951; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a94e: jl 0x4a974; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a971: jl 0x4a997; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a994: jl 0x4a9ba; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a9b7: jl 0x4a9dd; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a9da: jl 0x4aa00; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004a9fd: jl 0x4aa23; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004aa20: jl 0x4aa46; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0004b44c: jl 0x4b472; and bh, dh; rol byte ptr [ebp + 0xf1c2454], cl; xchg ebp, eax; ret 0xb60f; 
0x0004bb85: jl 0x4bbab; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x0004bba8: jl 0x4bbce; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x0004c641: jl 0x4c667; cmp byte ptr [ecx], bh; ret 0x840f; 
0x0004d87b: jl 0x4d8a1; and byte ptr [edi], cl; xchg edx, eax; ret 0xd120; 
0x00051669: jl 0x51601; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00053395: jl 0x533bb; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000533b8: jl 0x533de; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x0005acfa: jl 0x5ad57; pop esi; pop edi; pop ebp; ret; 
0x0005ce4b: jl 0x5ce4a; call dword ptr [eax - 0x73]; 
0x0005ceb5: jl 0x5ceb4; call dword ptr [ebx + 0x50]; 
0x0005e2de: jl 0x5e33b; pop esi; pop edi; pop ebp; ret; 
0x0005ed08: jl 0x5ed2e; adc byte ptr [ecx], bh; ret; 
0x0005f256: jl 0x5f1e4; stc; call dword ptr [eax - 0x73]; 
0x00060ab0: jl 0x60ac1; add byte ptr [eax], al; mov dword ptr [esp + 0x2c], 1; jmp ebx; 
0x00060e81: jl 0x60ea7; inc eax; or byte ptr [edi], cl; xchg esp, eax; ret; 
0x0006a176: jl 0x6a104; stc; call dword ptr [eax - 0x73]; 
0x00073932: jl 0x7392d; call dword ptr [eax - 0x73]; 
0x0007394e: jl 0x73949; call dword ptr [eax - 0x73]; 
0x0007396a: jl 0x73965; call dword ptr [eax - 0x73]; 
0x00073986: jl 0x73981; call dword ptr [eax - 0x73]; 
0x000750f2: jl 0x75118; xor cl, ch; ret 0xfffe; 
0x000756e5: jl 0x75742; pop esi; pop edi; pop ebp; ret; 
0x00077561: jl 0x77587; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0007bd42: jl 0x7bd68; add al, 0x8d; xchg eax, ebp; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x0007be62: jl 0x7be88; inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x0007d5ec: jl 0x7d612; or byte ptr [ebx - 0x3ef3db94], cl; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x0008018c: jl 0x801b2; or byte ptr [ebp - 0x66de779], cl; call dword ptr [eax - 0x73]; 
0x00080e1a: jl 0x80e40; or al, 0x8d; xchg dword ptr [esi + ecx*2 - 7], ebx; call dword ptr [eax + 0x56]; 
0x00081d83: jl 0x81da9; and dh, al; add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x00082d54: jl 0x82d7a; add al, 0x8d; xchg dword ptr [edx + edx*4 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00082d84: jl 0x82daa; add al, 0x8d; xchg dword ptr [edx + edx*4 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0008881a: jl 0x8881c; add byte ptr [eax], al; ret; 
0x00088829: jl 0x8882b; add byte ptr [eax], al; ret; 
0x000888cc: jl 0x888ce; add byte ptr [eax], al; pop ebx; ret; 
0x00088901: jl 0x88903; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x00088a06: jl 0x88a0a; add byte ptr [eax], al; ret; 
0x0008bdf8: jl 0x8bd83; call 0x5d681c5a; ret; 
0x0008c530: jl 0x8c4bb; call 0x5d682392; ret; 
0x0008f93f: jl 0x8f93a; call dword ptr [eax - 0x73]; 
0x0008f95e: jl 0x8f959; call dword ptr [eax - 0x73]; 
0x0008f97d: jl 0x8f978; call dword ptr [eax - 0x73]; 
0x00090e67: jl 0x90e62; call dword ptr [eax - 0x73]; 
0x00090eb7: jl 0x90eb2; call dword ptr [eax - 0x73]; 
0x00090f97: jl 0x90f92; call dword ptr [eax - 0x73]; 
0x00091141: jl 0x9113c; call dword ptr [eax - 0x73]; 
0x00092ae6: jl 0x92af9; add al, 0x83; ret 0x3908; 
0x00097634: jl 0x97628; je 0x9764a; xor eax, eax; pop ebx; ret; 
0x0009767c: jl 0x97670; mov edx, 0; cmovne eax, edx; ret; 
0x0009815e: jl 0x98184; or al, 0x8d; xchg dword ptr [eax + ebx*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x000a0115: jl 0xa013b; sbb byte ptr [ecx], cl; ret 0xc031; 
0x000a01a9: jl 0xa01cf; sbb al, 0x8d; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x000a01cc: jl 0xa01f2; sbb al, 0x8d; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x000a2950: jl 0xa291e; idiv bh; cmovne eax, edx; ret; 
0x000a29b8: jl 0xa2a1f; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a314e: jl 0xa3145; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a352b: jl 0xa3551; adc al, 0x83; ret 0x8301; 
0x000a5671: jl 0xa5697; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000a65a9: jl 0xa65cf; or al, 1; ret; 
0x000b2bc6: jl 0xb2b99; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4680: jl 0xb4688; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb058: jl 0xbb090; add eax, ecx; ret; 
0x000bb068: jl 0xbb090; lea eax, [ecx + eax + 0x10]; ret; 
0x000bb078: jl 0xbb090; lea eax, [ecx + eax + 0x20]; ret; 
0x000bb088: jl 0xbb090; lea eax, [ecx + eax + 0x30]; ret; 
0x000c0042: jl 0xc0068; sbb al, 0x8d; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0095: jl 0xc00bb; sbb al, 0x8d; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c00b5: jl 0xc00db; sbb al, 0x8d; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c014c: jl 0xc0139; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c03f9: jl 0xc041f; sbb al, 0x8d; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0419: jl 0xc043f; sbb al, 0x8d; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0439: jl 0xc045f; sbb al, 0x8d; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c045c: jl 0xc0482; sbb al, 0x8d; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0ef4: jl 0xc0f1a; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000c0f17: jl 0xc0f3d; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000c3e44: jl 0xc3e6a; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000c3e67: jl 0xc3e8d; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000c52c8: jl 0xc52ee; xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6233: jl 0xc6259; xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6256: jl 0xc627c; xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c62e2: jl 0xc6308; xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6328: jl 0xc634e; xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c6398: jl 0xc63be; xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c666d: jl 0xc6693; pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000c6ebc: jl 0xc6ee2; and bh, dh; rol byte ptr [ebp + 0xf1c2454], cl; xchg ebp, eax; ret 0xb60f; 
0x000c7596: jl 0xc75bc; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000c75b9: jl 0xc75df; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000c8a9f: jl 0xc8ac5; cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000c8aea: jl 0xc8b10; or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c90e3: jl 0xc9109; sbb byte ptr [edi], cl; xchg edx, eax; ret 0xd120; 
0x000c9999: jl 0xc99bf; cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000c9b21: jl 0xc9b47; cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000c9b44: jl 0xc9b6a; cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000c9b67: jl 0xc9b8d; cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000ca67d: jl 0xca6a3; pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000cdd46: jl 0xcdd6c; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000cdd69: jl 0xcdd8f; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x000d1f20: jl 0xd1f2c; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000d2a25: jl 0xd2a58; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000d2b27: jl 0xd2b84; pop esi; pop edi; pop ebp; ret; 
0x000d4e88: jl 0xd4ebf; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000d83b4: jl 0xd83da; or al, 0x89; ret 0xe083; 
0x000d94fb: jl 0xd9521; sbb byte ptr [ebx + 0xe4b7], cl; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x000db811: jl 0xdb837; add al, 0x29; retf 0x490f; ret 0x348d; 
0x000dd1b0: jl 0xdd1d6; sbb al, 0x89; ret; 
0x000deca6: jl 0xdeccc; add al, 0x89; ret 0xfa29; 
0x000df4ba: jl 0xdf4e0; adc al, 1; je 0xdf4c8; add esp, 0xc; ret; 
0x000df5aa: jl 0xdf5d0; adc al, 1; je 0xdf5b8; add esp, 0xc; ret; 
0x000e046f: jl 0xe0495; add al, 0x83; ret 0x8301; 
0x000e0518: jl 0xe053e; add al, 0x83; ret 0x8301; 
0x000e0677: jl 0xe069d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e2573: jl 0xe24fe; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000e84cc: jl 0xe84f2; adc al, 0x8d; xchg edi, ecx; push esi; stc; call dword ptr [eax - 0x73]; 
0x000e85a8: jl 0xe85ce; adc al, 0x8d; xchg dword ptr [edi + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x000e85eb: jl 0xe8611; adc al, 0x8d; xchg dword ptr [edi + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x000f50a4: jl 0xf50fd; stc; call dword ptr [eax + 0x55]; 
0x000f50cb: jl 0xf5124; stc; call dword ptr [eax + 0x55]; 
0x000f57c2: jl 0xf57e8; adc al, 0x89; ret 0xd839; 
0x000f7f8d: jl 0xf7fb3; or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x000f8033: jl 0xf8059; or byte ptr [ecx], bh; ret; 
0x000fab05: jl 0xfaa90; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000fb4d8: jl 0xfb4fe; adc al, 0x89; ret; 
0x000fc2c3: jl 0xfc2e9; add byte ptr [bx], cl; inc ebp; ret 0x4489; 
0x000fe0b8: jl 0xfe0de; cmp al, 0x8d; xchg dword ptr [edx + 0x3c], ebx; stc; dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x000fef62: jl 0xfef88; adc al, 0x89; ret 0xf889; 
0x001147f6: jle 0x1147fc; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00126e67: jle 0x126e6a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a00e: jle 0x12a02b; lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x001371ab: jle 0x137130; rol byte ptr [ecx], 0x83; ret; 
0x0013bb57: jle 0x13bb5e; cmp byte ptr [ebx], 0x2e; je 0x13bb68; add esp, 8; pop ebx; ret; 
0x00151b4f: jle 0x151ad4; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00159e5a: jle 0x159ecc; stc; call dword ptr [eax - 0x18]; 
0x0016a158: jle 0x16a0dd; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016ded9: jle 0x16dee8; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00171dbd: jle 0x171dd3; pop ebx; pop esi; pop edi; ret; 
0x00180711: jle 0x180722; test byte ptr [eax - 0x7bfffff1], ch; ror byte ptr [edi], 0x84; ret; 
0x00182291: jle 0x1822a2; test byte ptr [eax - 0x7bfffff1], ch; ror byte ptr [edi], 0x84; ret; 
0x001840a1: jle 0x1840b2; test byte ptr [eax - 0x7bfffff1], ch; ror byte ptr [edi], 0x84; ret; 
0x0018991a: jle 0x18995c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189b26: jle 0x189b68; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189fba: jle 0x189fbc; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b91a: jle 0x18b95c; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018bb16: jle 0x18bb58; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0018da1a: jle 0x18da5c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018dc26: jle 0x18dc68; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018e0ba: jle 0x18e0bc; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0002508f: jle 0x2508a; call dword ptr [eax - 0x18]; 
0x00025120: jle 0x2511b; call dword ptr [eax - 0x18]; 
0x00025183: jle 0x2517e; call dword ptr [eax - 0x18]; 
0x000251cf: jle 0x251ca; call dword ptr [eax - 0x18]; 
0x00025746: jle 0x25741; call dword ptr [eax - 0x73]; 
0x00025756: jle 0x25751; call dword ptr [eax - 0x18]; 
0x00025e02: jle 0x25dfd; call dword ptr [eax - 0x73]; 
0x00025e22: jle 0x25e1d; call dword ptr [eax - 0x73]; 
0x00025e32: jle 0x25e2d; call dword ptr [eax - 0x18]; 
0x000260fa: jle 0x260f5; call dword ptr [edx - 0x73]; 
0x00027077: jle 0x27072; call dword ptr [eax - 0x73]; 
0x00027261: jle 0x2725c; dec dword ptr [ecx - 0x48f0e7b0]; xchg edi, eax; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x0002726b: jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x000274c9: jle 0x274c4; jmp dword ptr [esi - 0x77]; 
0x0002750f: jle 0x2750a; call dword ptr [eax - 0x73]; 
0x0002753f: jle 0x2753a; call dword ptr [eax - 0x73]; 
0x00027563: jle 0x2755e; call dword ptr [eax - 0x73]; 
0x0003f6db: jle 0x3f6dd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000415b0: jle 0x415b2; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000477e7: jle 0x47828; stc; call dword ptr [eax - 0x18]; 
0x0004a9f2: jle 0x4aa33; stc; call dword ptr [eax - 0x18]; 
0x0004e3b9: jle 0x4e3fa; stc; call dword ptr [eax - 0x18]; 
0x0004ff2e: jle 0x4ff30; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005679e: jle 0x56775; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x6790779]; call dword ptr [eax - 0x73]; 
0x00056798: jle 0x567d9; stc; call dword ptr [eax - 0x18]; 
0x000588f8: jle 0x58825; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000764ba: jle 0x764bf; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00080b1d: jle 0x80b30; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00080c4d: jle 0x80c60; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0008e084: jle 0x8e0d5; stc; call dword ptr [eax - 0x18]; 
0x0008e21c: jle 0x8e21e; add byte ptr [ebx - 0x7c72f314], al; aam 0x93; stc; call dword ptr [eax - 0x18]; 
0x0009202d: jle 0x91ffa; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00092f96: jle 0x92fa0; dec ecx; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x000a608e: jle 0xa607a; clc; call dword ptr [edi + 0x50]; 
0x000b2c7e: jle 0xb2c89; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c352b: jle 0xc356c; stc; call dword ptr [eax - 0x18]; 
0x000c6205: jle 0xc6246; stc; call dword ptr [eax - 0x18]; 
0x000c9af3: jle 0xc9b34; stc; call dword ptr [eax - 0x18]; 
0x000d0ebf: jle 0xd0f00; stc; call dword ptr [eax - 0x18]; 
0x000d61b5: jle 0xd620c; stc; call dword ptr [eax - 0x18]; 
0x000d7ab3: jle 0xd7ac5; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000ed031: jle 0xed042; test byte ptr [eax - 0x7bfffff1], ch; ror byte ptr [edi], 0x84; ret; 
0x000f0661: jle 0xf0672; test byte ptr [eax - 0x7bfffff1], ch; ror byte ptr [edi], 0x84; ret; 
0x000f2711: jle 0xf2713; add byte ptr [eax], al; pop ebx; ret; 
0x000f48dc: jle 0xf492b; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0010245a: jmp 0x102455; dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x00102696: jmp 0x102592; lea esi, cs:[esi]; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x102592; call eax; 
0x001026de: jmp 0x1025d1; lea esi, cs:[esi]; mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x1025e7; call eax; 
0x001026ad: jmp 0x102665; nop; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x1025e7; call eax; 
0x00102fc7: jmp 0x102f69; call 0x133af0; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x001043d9: jmp 0x104062; call 0xe78d0; mov edx, ebx; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010845e: jmp 0x1083eb; jl 0x108486; adc byte ptr [ebp - 0x64f5379], cl; call dword ptr [eax - 0x73]; 
0x0010a4e5: jmp 0x109eb2; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x0010a5e6: jmp 0x109fe6; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x0010a278: jmp 0x10a1c8; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x0011774b: jmp 0x1176e3; adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011aea5: jmp 0x11acd0; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00120f0b: jmp 0x120f0d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001231f0: jmp 0x1227b0; lea esi, [esi]; ret; 
0x0012d22c: jmp 0x12d289; mov eax, ecx; pop esi; pop edi; ret; 
0x00133a09: jmp 0x133a0a; jmp dword ptr [esi - 0x70]; 
0x00133a57: jmp 0x133a58; jmp dword ptr [esi - 0x70]; 
0x00133aa2: jmp 0x133aa3; jmp dword ptr [esi - 0x70]; 
0x0013b37c: jmp 0x13a9b0; lea esi, [esi]; ret; 
0x0013b35b: jmp 0x13a9b0; ret; 
0x001407b3: jmp 0x140740; lea esi, [esi]; xor eax, eax; ret; 
0x0014342e: jmp 0x1432f0; lea esi, cs:[esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0014573b: jmp 0x1456c8; je 0x145763; adc al, 0x29; ret; 
0x0003efeb: jmp 0x148ce675; and al, 0xf; xchg ebp, eax; ret 0xca21; 
0x0014ac2b: jmp 0x14ac99; stc; call dword ptr [eax + 0x56]; 
0x0014d14a: jmp 0x14c770; nop; xor eax, eax; ret; 
0x0015e964: jmp 0x15e98f; ret; 
0x0016434f: jmp 0x164350; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00165d26: jmp 0x165c16; call 0x133af0; endbr32; mov eax, 2; ret; 
0x00166519: jmp 0x16651a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00168c1d: jmp 0x168c1e; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001690e8: jmp 0x168f80; push ecx; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00169809: jmp 0x16980a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016a1d2: jmp 0x16a148; call 0x133af0; nop; nop; endbr32; ret; 
0x0016a22a: jmp 0x16a22b; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016aa42: jmp 0x16aa43; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016ae40: jmp 0x16ae41; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0016b7f4: jmp 0x16b7f5; add esp, 0x18; pop ebx; ret; 
0x0016b8b7: jmp 0x16b8b8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016bd20: jmp 0x16bbcf; push ecx; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0016c37a: jmp 0x16c282; nop; xor eax, eax; pop ebx; ret; 
0x0016c3d7: jmp 0x16c3d8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016d34d: jmp 0x16d310; nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016dad4: jmp 0x16dad5; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0016eeb7: jmp 0x16edb0; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0016f249: jmp 0x16f24a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016f96c: jmp 0x16f96d; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00172abf: jmp 0x172ac0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017882e: jmp 0x17883f; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc107; 
0x00179400: jmp 0x179250; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0017a90a: jmp 0x17a7c7; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x0017d634: jmp 0x17d490; mov ebx, dword ptr [esp]; ret; 
0x0017fc3d: jmp 0x17fc68; ret; 
0x001868af: jmp 0x186927; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00186f2f: jmp 0x186fa3; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00187e2c: jmp 0x18817e; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001901e1: jmp 0x1901e6; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001903ef: jmp 0x1903f4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019043c: jmp 0x190441; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000a0242: jmp 0x1ea854b; cmovne eax, ecx; pop ebx; ret; 
0x001037b9: jmp 0x2f9f93e; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010387f: jmp 0x2f9fa04; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x001038e9: jmp 0x2f9fa6e; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x001039af: jmp 0x2f9fb34; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00030ebf: jmp 0x32650; lea esi, [esi]; pop ebx; ret; 
0x0007e413: jmp 0x3907e418; ret; 
0x000fbc93: jmp 0x390fbc98; ret; 
0x001a8741: jmp 0x3a16cfcf; ret 0xe875; 
0x00041502: jmp 0x3f7b0; lea esi, cs:[esi]; nop; xor eax, eax; ret; 
0x00040cf7: jmp 0x40d09; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00041c99: jmp 0x41c6d; lea esi, cs:[esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x00041e49: jmp 0x41e2e; lea esi, cs:[esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000be4fd: jmp 0x4202e4f8; jnp 0xbe508; cmove eax, edx; ret; 
0x0007e7a5: jmp 0x45270ab; pop ebx; pop esi; pop edi; ret; 
0x00050609: jmp 0x505dd; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x000506f4: jmp 0x5067f; call 0x5f636456; ret; 
0x00051de0: jmp 0x51d6b; pop ds; pop ebx; pop esi; pop edi; ret; 
0x00051ec4: jmp 0x51e4f; call 0x5f637c26; ret; 
0x0003a678: jmp 0x5b446b00; pop esi; pop edi; ret; 
0x00050d6b: jmp 0x5bee8271; mov eax, 1; pop esi; pop edi; ret; 
0x00056e2e: jmp 0x5e6146bc; pop edi; pop ebp; ret; 
0x001037bc: jmp 0x5eb62ac3; pop edi; ret; 
0x00103882: jmp 0x5eb62b89; pop edi; ret; 
0x001038ec: jmp 0x5eb62bf3; pop edi; ret; 
0x001039b2: jmp 0x5eb62cb9; pop edi; ret; 
0x001799df: jmp 0x5ebd8ce6; pop edi; ret; 
0x000bfd16: jmp 0x5ecc2e76; pop edi; ret; 
0x000b4713: jmp 0x5f0b471d; pop esi; pop ebx; ret; 
0x000d1db3: jmp 0x5f0d1db8; pop esi; ret; 
0x00103734: jmp 0x5fbc2a3b; ret; 
0x001038ba: jmp 0x5fbc2bc1; ret; 
0x00061af9: jmp 0x60858; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x00061a98: jmp 0x60e62; lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x00061a12: jmp 0x61139; lea esi, cs:[esi]; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0006cd89: jmp 0x6ba4f; nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0006ce00: jmp 0x6c301; lea esi, [esi]; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x00050c6e: jmp 0x6c4ce; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00050d6e: jmp 0x6c5ce; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00041be3: jmp 0x6d3e9; add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041c13: jmp 0x6d419; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x00041c33: jmp 0x6d439; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cc4: jmp 0x6d4ca; add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0006f889: jmp 0x6f88a; dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x0006ff3c: jmp 0x6fec1; ret; 
0x00070239: jmp 0x7023a; dec dword ptr [ebx - 0x4f743]; jmp dword ptr [ebp - 0x75]; 
0x000cfe22: jmp 0x769afe26; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0007c39e: jmp 0x7aed0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x0007ba76: jmp 0x7ba62; mov eax, 0xffffffff; pop ebx; ret; 
0x0007c3a0: jmp 0x7c3a1; jmp ptr [esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0007c5d0: jmp 0x7c5fb; ret; 
0x000b0e43: jmp 0x800b0e4d; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00080e18: jmp 0x80da5; jl 0x80e40; or al, 0x8d; xchg dword ptr [esi + ecx*2 - 7], ebx; call dword ptr [eax + 0x56]; 
0x0010364c: jmp 0x81103df0; ret; 
0x0015e74c: jmp 0x8115e93f; ret; 
0x0012092a: jmp 0x8321e20c; or eax, 0xb8000001; adc eax, 0x39000000; ret 0x4e0f; 
0x000a8fc3: jmp 0x83fd03c9; ret 0x8904; 
0x000877ae: jmp 0x86bb0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x00088db9: jmp 0x88d94; nop; nop; nop; endbr32; ret; 
0x000bd3a6: jmp 0x891b5bcb; rol dword ptr [ebx + 0xb813fe2], 1; add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x000a8fb5: jmp 0x89c204c2; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00089c6b: jmp 0x89c72; add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000923e0: jmp 0x89c897e8; ret 0xca83; 
0x00089ceb: jmp 0x89cf2; add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00057981: jmp 0x89d7aa87; or byte ptr [ecx + 0xcc483d0], cl; ret; 
0x00050e96: jmp 0x89fb819c; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0009e83a: jmp 0x8a062bca; ret 0xe283; 
0x0008a026: jmp 0x8b590; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0009b03c: jmp 0x8b9a8272; imul ecx, dword ptr [eax], 0x830ce8c1; ret 0x8901; 
0x0008c83a: jmp 0x8bcd0; nop; mov eax, 0x16; pop ebx; ret; 
0x00104fef: jmp 0x8c009403; xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; call dword ptr gs:[0x10]; 
0x0008cfea: jmp 0x8cde1; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009c212: jmp 0x8d1612a2; inc edx; jmp dword ptr [ecx]; 
0x0017fe5d: jmp 0x8ee70; lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x0008f00a: jmp 0x8ee70; nop; mov eax, 0x16; pop ebx; ret; 
0x0008ef58: jmp 0x8eee4; lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0008fa23: jmp 0x8fa0a; call dword ptr [eax - 0x73]; 
0x0008fa39: jmp 0x8fa20; call dword ptr [eax + 0x56]; 
0x0008fa4b: jmp 0x8fa32; call dword ptr [eax + 0x56]; 
0x0008fa41: jmp 0x8fa79; stc; inc dword ptr [ebx - 0x7c72f33c]; lodsb al, byte ptr [esi]; jmp 0x8fa32; call dword ptr [eax + 0x56]; 
0x0002c342: jmp 0x94bcfd4; ret; 
0x000a088a: jmp 0xa0869; pop edx; mov eax, 0x16; pop ebx; pop esi; ret; 
0x000a09fa: jmp 0xa0992; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x000a0ab2: jmp 0xa0a3f; lea esi, [esi]; mov edx, dword ptr [edi + 0x8c]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x000a0c1e: jmp 0xa0bbe; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000e89d4: jmp 0xa3fc0; lea esi, [esi]; xor eax, eax; ret; 
0x000bbd57: jmp 0xa571bfcf; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a8f24: jmp 0xa8f81; pop esi; pop edi; ret; 
0x000aca11: jmp 0xaca1f; lea ecx, [edx + 0xc]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000aca4b: jmp 0xaca5d; lea ecx, [edx + 0x10]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000adae3: jmp 0xacba0; lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x000acc97: jmp 0xacc9a; lea ecx, [edx + 1]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000accdf: jmp 0xacce4; lea ecx, [edx + 3]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000accfd: jmp 0xacd04; lea ecx, [edx + 5]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000acd1f: jmp 0xacd27; lea ecx, [edx + 6]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000acd3d: jmp 0xacd46; lea ecx, [edx + 7]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000acd61: jmp 0xacd6c; lea ecx, [edx + 9]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000acdd5: jmp 0xacde4; lea ecx, [edx + 0xd]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ace05: jmp 0xace15; lea ecx, [edx + 0xe]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ace35: jmp 0xace46; lea ecx, [edx + 0xf]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad077: jmp 0xad07a; lea ecx, [edx + 1]; jne 0xacfe1; pop ebx; ret; 
0x000ad099: jmp 0xad09d; lea ecx, [edx + 2]; jne 0xacfe1; pop ebx; ret; 
0x000ad0bf: jmp 0xad0c4; lea ecx, [edx + 3]; jne 0xacfe1; pop ebx; ret; 
0x000ad0d7: jmp 0xad0dd; lea ecx, [edx + 4]; jne 0xacfe1; pop ebx; ret; 
0x000ad0fd: jmp 0xad104; lea ecx, [edx + 5]; jne 0xacfe1; pop ebx; ret; 
0x000ad11f: jmp 0xad127; lea ecx, [edx + 6]; jne 0xacfe1; pop ebx; ret; 
0x000ad13d: jmp 0xad146; lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x000ad15b: jmp 0xad165; lea ecx, [edx + 8]; jne 0xacfe1; pop ebx; ret; 
0x000ad181: jmp 0xad18c; lea ecx, [edx + 9]; jne 0xacfe1; pop ebx; ret; 
0x000ad1a3: jmp 0xad1af; lea ecx, [edx + 0xa]; jne 0xacfe1; pop ebx; ret; 
0x000ad1c1: jmp 0xad1ce; lea ecx, [edx + 0xb]; jne 0xacfe1; pop ebx; ret; 
0x000ad1e1: jmp 0xad1ef; lea ecx, [edx + 0xc]; jne 0xacfe1; pop ebx; ret; 
0x000ad205: jmp 0xad214; lea ecx, [edx + 0xd]; jne 0xacfe1; pop ebx; ret; 
0x000ad235: jmp 0xad245; lea ecx, [edx + 0xe]; jne 0xacfe1; pop ebx; ret; 
0x000ad265: jmp 0xad276; lea ecx, [edx + 0xf]; jne 0xacfe1; pop ebx; ret; 
0x000ad28b: jmp 0xad29d; lea ecx, [edx + 0x10]; jne 0xacfe1; pop ebx; ret; 
0x000b1fb3: jmp 0xb0f90; lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x000b15ec: jmp 0xb15f6; lea ecx, [edx + 8]; jne 0xb1431; pop ebx; ret; 
0x000b1736: jmp 0xb1747; lea ecx, [edx + 0xf]; jne 0xb1431; pop ebx; ret; 
0x000b2a37: jmp 0xb2a49; bsf edx, edx; call 0x17d651; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0019a5b9: jmp 0xb388b524; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0019a7b9: jmp 0xb388b724; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0019aac6: jmp 0xb388ba31; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0019ad17: jmp 0xb388bc82; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x000b4067: jmp 0xb4079; bsf edx, edx; call 0x17d651; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4262: jmp 0xb41f7; or al, 0; add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baae1: jmp 0xbab50; lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000bb326: jmp 0xbb380; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000c014d: jmp 0xc0145; push esi; inc ecx; jnp 0xc0158; cmove eax, edx; ret; 
0x000c2ccb: jmp 0xc2ccc; call dword ptr [eax - 1]; 
0x000cd15b: jmp 0xcd15b; jmp dword ptr [esi - 0x70]; 
0x000d0ba9: jmp 0xd0baa; dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x000d2e90: jmp 0xdd314b72; add al, 0x24; add esp, 0xc; ret; 
0x000d2eb0: jmp 0xdd314b92; add al, 0x24; add esp, 0xc; ret; 
0x000e2446: jmp 0xe2451; lea esi, cs:[esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x000e5014: jmp 0xe504f; ret 0x850f; 
0x000e78a5: jmp 0xe788a; call 0x133af0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e9495: jmp 0xe8e62; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000e9596: jmp 0xe8f96; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x0013a70e: jmp 0xe913a710; fst dword ptr [ebx - 0x7c720001]; daa; jne 0x13a715; call dword ptr [esi + 0x6a]; 
0x000e9228: jmp 0xe9178; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ebe15: jmp 0xeb7e2; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ebf16: jmp 0xeb916; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ebba8: jmp 0xebaf8; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ecb65: jmp 0xec542; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ecc66: jmp 0xec676; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ec7eb: jmp 0xecbad; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ef465: jmp 0xeee42; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ef566: jmp 0xeef76; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ef0eb: jmp 0xef4ad; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f01b5: jmp 0xefb92; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5f8]; call dword ptr [eax + 0x18]; 
0x000f02b6: jmp 0xefcc6; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x000efe3b: jmp 0xf01fd; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00124741: jmp 0xf1441c9; xchg edi, eax; ret 0xf883; 
0x000f2725: jmp 0xf2280; lea esi, [esi]; mov eax, 0xfffa; pop ebx; ret; 
0x000f229e: jmp 0xf22b3; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000f2422: jmp 0xf2423; call dword ptr [eax - 1]; 
0x000f30fb: jmp 0xf30e4; lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000f7213: jmp 0xf7224; xchg esp, eax; ret 0xca83; 
0x000bc68d: jmp 0xf98c06a2; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00093759: jmp 0xfd34061; test dword ptr [0x89000001], edi; ret 0xca83; 
0x0003f001: jmp 0xfd67508; xchg ebp, eax; ret 0xca21; 
0x0003f015: jmp 0xfd6751d; xchg ebp, eax; ret 0xd121; 
0x0017164b: jmp dword ptr [eax + 0x20]; 
0x0017164b: jmp dword ptr [eax + 0x20]; nop; xor eax, eax; ret; 
0x00171627: jmp dword ptr [eax + 0x24]; 
0x00171627: jmp dword ptr [eax + 0x24]; lea esi, [esi]; mov eax, 1; ret; 
0x0017a507: jmp dword ptr [eax + 0x30]; 
0x00166397: jmp dword ptr [eax + 4]; 
0x00166397: jmp dword ptr [eax + 4]; lea esi, [esi]; mov eax, 1; ret; 
0x0004ddac: jmp dword ptr [eax]; 
0x001663bb: jmp dword ptr [eax]; lea esi, [esi]; xor eax, eax; ret; 
0x00088881: jmp dword ptr [eax]; lea esi, cs:[esi]; ret; 
0x00024b67: jmp dword ptr [ebp + 0x33]; 
0x00024b67: jmp dword ptr [ebp + 0x33]; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x00067706: jmp dword ptr [ebp - 0x17]; 
0x00089808: jmp dword ptr [ebp - 0x39]; 
0x0009611b: jmp dword ptr [ebp - 0x5d]; 
0x0009611b: jmp dword ptr [ebp - 0x5d]; push eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19af037d], cl; call dword ptr [ecx + 0x50]; 
0x0002ef6f: jmp dword ptr [ebp - 0x5f]; 
0x00031e98: jmp dword ptr [ebp - 0x75]; 
0x0009bec5: jmp dword ptr [ebp - 0x7d]; 
0x000ecb95: jmp dword ptr [ebp - 0xd]; 
0x0009a6c0: jmp dword ptr [ebp - 1]; 
0x00070f6a: jmp dword ptr [ebp]; 
0x000e067f: jmp dword ptr [ebx + 0x77]; 
0x00023010: jmp dword ptr [ebx + 0xc]; 
0x00023006: jmp dword ptr [ebx + 8]; 
0x00166ac3: jmp dword ptr [ebx - 0x41]; 
0x000554cc: jmp dword ptr [ebx]; 
0x0003122e: jmp dword ptr [ecx]; 
0x00129d92: jmp dword ptr [edi + 0x6d]; 
0x0005a219: jmp dword ptr [edi + 0xf]; 
0x00127346: jmp dword ptr [edx + 5]; 
0x0013a092: jmp dword ptr [edx]; 
0x0005a70c: jmp dword ptr [esi + 0x25]; 
0x00059aff: jmp dword ptr [esi + 0x3d]; 
0x000f4d0c: jmp dword ptr [esi + 0xb]; 
0x00059089: jmp dword ptr [esi + 0xf]; 
0x000adc24: jmp dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x0019a472: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0019a458: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0019a43e: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x00199b3e: jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0010cfd8: jmp dword ptr [esi + 3]; 
0x00056289: jmp dword ptr [esi + 6]; 
0x001372b1: jmp dword ptr [esi - 0x39]; 
0x00138cd5: jmp dword ptr [esi - 0x3f]; 
0x00138cd5: jmp dword ptr [esi - 0x3f]; ret; 
0x00024ab1: jmp dword ptr [esi - 0x70]; 
0x00061afd: jmp dword ptr [esi - 0x70]; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0010400d: jmp dword ptr [esi - 0x70]; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0016a1db: jmp dword ptr [esi - 0x70]; nop; endbr32; ret; 
0x001718f9: jmp dword ptr [esi - 0x70]; nop; nop; endbr32; ret; 
0x00093ac9: jmp dword ptr [esi - 0x70]; nop; nop; endbr32; xor eax, eax; ret; 
0x0002726d: jmp dword ptr [esi - 0x77]; 
0x000d9184: jmp dword ptr [esi - 0x7b]; 
0x000d9184: jmp dword ptr [esi - 0x7b]; push dword ptr [esi + edx - 0x7d]; ret; 
0x000d4f60: jmp dword ptr [esi - 0x7d]; 
0x0013df56: jmp dword ptr [esi - 0x7f]; 
0x000dfa73: jmp dword ptr [esi]; 
0x00025087: jmp eax; 
0x00165d9e: jmp eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016b8fb: jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x00076566: jmp eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00076468: jmp eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0017fe2c: jmp eax; nop; add esp, 4; pop ebx; pop esi; ret; 
0x00060abc: jmp ebx; 
0x00031d45: jmp ecx; 
0x000bc89b: jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000ba71a: jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000256d5: jmp edi; 
0x000367e0: jmp edx; 
0x00168bba: jmp edx; lea esi, [esi]; endbr32; ret; 
0x0016b855: jmp edx; lea esi, cs:[esi]; nop; endbr32; ret; 
0x000628cd: jmp esi; 
0x0014859a: jmp ptr [eax + 0x11]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc eax, -0x41; stc; call dword ptr [eax - 0x18]; 
0x0014b870: jmp ptr [eax + 0x12]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; 
0x00030e4f: jmp ptr [eax + 0x1a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edi - 7], ecx; call dword ptr [eax - 0x18]; 
0x00111e48: jmp ptr [eax + 0x1c]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x59], ah; stc; call dword ptr [eax - 0x18]; 
0x0007cd6e: jmp ptr [eax + 0x20]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x0014b540: jmp ptr [eax + 0x23]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6d], ebx; stc; call dword ptr [eax - 0x18]; 
0x000c33bd: jmp ptr [eax + 0x23]; add eax, 0x8d500000; xchg byte ptr [edi + edi], bl; stc; call dword ptr [eax - 0x18]; 
0x000477bb: jmp ptr [eax + 0x23]; add eax, 0x8d500000; xchg dword ptr [edi + edi], ebx; stc; call dword ptr [eax - 0x18]; 
0x0009d497: jmp ptr [eax + 0x27]; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x61; stc; call dword ptr [eax - 0x18]; 
0x0009c6eb: jmp ptr [eax + 0x29]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x63], al; stc; call dword ptr [eax - 0x18]; 
0x001476d0: jmp ptr [eax + 0x2a]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x0009c70e: jmp ptr [eax + 0x2c]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0008e07b: jmp ptr [eax + 0x2e]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x4f], edi; stc; call dword ptr [eax - 0x18]; 
0x00111e78: jmp ptr [eax + 0x32]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x59], bh; stc; call dword ptr [eax - 0x18]; 
0x0013d25b: jmp ptr [eax + 0x36]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [esi + 0x69], ebp; stc; call dword ptr [eax - 0x18]; 
0x000c358b: jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg byte ptr [esi + eax*4 - 0x17af0007], cl; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x00028728: jmp ptr [eax + 0x52]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00028de0: jmp ptr [eax + 0x52]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x3a], ah; stc; call dword ptr [eax - 0x18]; 
0x000293b6: jmp ptr [eax + 0x52]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x3a], esp; stc; call dword ptr [eax - 0x18]; 
0x0002aac7: jmp ptr [eax + 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2aacc; call dword ptr [eax - 0x18]; 
0x0002b736: jmp ptr [eax + 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2b73b; call dword ptr [eax - 0x18]; 
0x0002ce25: jmp ptr [eax + 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ce2a; call dword ptr [eax - 0x18]; 
0x0002d924: jmp ptr [eax + 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2d929; call dword ptr [eax - 0x18]; 
0x0002e202: jmp ptr [eax + 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2e207; call dword ptr [eax - 0x18]; 
0x0002ecfb: jmp ptr [eax + 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ed00; call dword ptr [eax - 0x18]; 
0x00028d49: jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029384: jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00047824: jmp ptr [eax + 0x55]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, ebx; stc; call dword ptr [eax - 0x18]; 
0x000c3568: jmp ptr [eax + 0x59]; add eax, 0x8d500000; xchg byte ptr [edi], dh; aas; stc; call dword ptr [eax - 0x18]; 
0x000478b7: jmp ptr [eax + 0x59]; add eax, 0x8d500000; xchg dword ptr [edi], esi; aas; stc; call dword ptr [eax - 0x18]; 
0x000c348f: jmp ptr [eax + 0x5e]; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00047966: jmp ptr [eax + 0x5e]; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0002a085: jmp ptr [eax + 0x5e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x3a], ecx; stc; call dword ptr [eax - 0x18]; 
0x0009039b: jmp ptr [eax + 0x5f]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ecx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x000c3403: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg ah, dl; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00047798: jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg esp, edx; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00146531: jmp ptr [eax + 0x71]; add al, 0; add byte ptr [eax - 0x73], dl; cmp eax, -0x43; stc; call dword ptr [eax - 0x18]; 
0x000c24ea: jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg byte ptr [ebx + 0x3f], dl; stc; call dword ptr [eax - 0x18]; 
0x00047076: jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x0005a85b: jmp ptr [eax + 0x77]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, al; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0008e037: jmp ptr [eax + 0x7c]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x4f], dh; stc; call dword ptr [eax - 0x18]; 
0x0009ed3a: jmp ptr [eax + 1]; or eax, 0x8d500000; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x0008e059: jmp ptr [eax + 4]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x4f], cl; stc; call dword ptr [eax - 0x18]; 
0x00154984: jmp ptr [eax + 6]; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x6f], al; stc; call dword ptr [eax - 0x18]; 
0x000d6bb6: jmp ptr [eax - 0x10]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x54; stc; call dword ptr [eax - 0x18]; 
0x001551b0: jmp ptr [eax - 0x11]; or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; ret; 
0x00147d4a: jmp ptr [eax - 0x1a]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x00147d2b: jmp ptr [eax - 0x1b]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x6c], esp; stc; call dword ptr [eax - 0x18]; 
0x000870e2: jmp ptr [eax - 0x1f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x4d; stc; call dword ptr [eax - 0x18]; 
0x000976f0: jmp ptr [eax - 0x22]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x000c346c: jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg byte ptr [eax + 0x3f], ch; stc; call dword ptr [eax - 0x18]; 
0x000478da: jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg dword ptr [eax + 0x3f], ebp; stc; call dword ptr [eax - 0x18]; 
0x000eb205: jmp ptr [eax - 0x29]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [ebx], 0x57; stc; call dword ptr [eax - 0x18]; 
0x0008dfdf: jmp ptr [eax - 0x2a]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edx*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x0012ee58: jmp ptr [eax - 0x2b]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x4a], ebx; stc; call dword ptr [eax - 0x18]; 
0x0012edef: jmp ptr [eax - 0x2d]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0014715c: jmp ptr [eax - 0x31]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x42], ebx; stc; call dword ptr [eax - 0x18]; 
0x0003224f: jmp ptr [eax - 0x32]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x0008f474: jmp ptr [eax - 0x34]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + edx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x000903d4: jmp ptr [eax - 0x3e]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb ebx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x000cb898: jmp ptr [eax - 0x3f]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x54], -7; call dword ptr [eax - 0x18]; 
0x000903fc: jmp ptr [eax - 0x43]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [eax], -0x6c; stc; call dword ptr [eax - 0x18]; 
0x0012ee35: jmp ptr [eax - 0x45]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], esp; stc; call dword ptr [eax - 0x18]; 
0x00141a66: jmp ptr [eax - 0x49]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ecx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x000c34d5: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x7b], ch; stc; call dword ptr [eax - 0x18]; 
0x00047871: jmp ptr [eax - 0x50]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x7b], ebp; stc; call dword ptr [eax - 0x18]; 
0x00027518: jmp ptr [eax - 0x52]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg bl, bl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x000e3e23: jmp ptr [eax - 0x54]; add al, 0; add byte ptr [eax - 0x73], dl; and esp, 0xffffffad; stc; call dword ptr [eax - 0x18]; 
0x0014b51d: jmp ptr [eax - 0x57]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4f], esp; stc; call dword ptr [eax - 0x18]; 
0x00027548: jmp ptr [eax - 0x58]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0002ab58: jmp ptr [eax - 0x63]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebx; stc; call dword ptr [eax - 0x18]; 
0x000be096: jmp ptr [eax - 0x6d]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x0002c389: jmp ptr [eax - 0x6d]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0002ab7b: jmp ptr [eax - 0x6d]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x000c3545: jmp ptr [eax - 0x70]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dh; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00047943: jmp ptr [eax - 0x70]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0005a77c: jmp ptr [eax - 0x71]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, ch; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0007344a: jmp ptr [eax - 0x71]; or eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + eax*2 - 0x17af0007], edx; ret; 
0x00096db8: jmp ptr [eax - 0x73]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x000be0b9: jmp ptr [eax - 0x75]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x000d61ac: jmp ptr [eax - 0x75]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x0009f415: jmp ptr [eax - 0x75]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc edi, 0x52; stc; call dword ptr [eax - 0x18]; 
0x000be0dc: jmp ptr [eax - 0x76]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp byte ptr [edx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x000dad56: jmp ptr [eax - 0x78]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; sbb esi, 0x55; stc; call dword ptr [eax - 0x18]; 
0x00028ed8: jmp ptr [eax - 0x79]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x0002943a: jmp ptr [eax - 0x79]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00090ec0: jmp ptr [eax - 0x7a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [esp + edx*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x001603e3: jmp ptr [eax - 0x7f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x0002c501: jmp ptr [eax - 0x7f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], cl; stc; call dword ptr [eax - 0x18]; 
0x0002aa14: jmp ptr [eax - 0x7f]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x001475e8: jmp ptr [eax - 0xb]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x0009e97a: jmp ptr [eax - 0xc]; adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x18]; 
0x0016af30: jmp ptr [eax - 1]; add byte ptr [eax], al; add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x0005a836: jmp ptr [eax - 3]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; mov bh, cl; call dword ptr [eax - 0x18]; 
0x000c3449: jmp ptr [eax - 4]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; stc; call dword ptr [eax - 0x18]; 
0x00047894: jmp ptr [eax - 4]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esi, esi; stc; call dword ptr [eax - 0x18]; 
0x001761d8: jmp ptr [eax - 8]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1761dd; call dword ptr [eax - 0x18]; 
0x001766d7: jmp ptr [eax - 8]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, al; jne 0x1766dc; call dword ptr [eax - 0x18]; 
0x00121d9c: jmp ptr [eax]; add al, 0; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; 
0x00121d9c: jmp ptr [eax]; add al, 0; add byte ptr [ecx - 0x48f7b], cl; call dword ptr [eax - 0x18]; ret 0xf3bd; 
0x00066342: jmp ptr [ebx]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0012495f: jmp ptr [ecx]; fidivr dword ptr [ecx]; ret 0x820f; 
0x000aad18: jmp ptr [ecx]; ret 0x280f; 
0x000cf954: jmp ptr [ecx]; ret 0x3b8; 
0x000f5e46: jmp ptr [ecx]; ret 0x46c7; 
0x0012ca21: jmp ptr [ecx]; ret 0x478b; 
0x00067a89: jmp ptr [ecx]; ret 0x858b; 
0x000ac8bc: jmp ptr [ecx]; ret 0xc301; 
0x0002f381: jmp ptr [ecx]; ret 0xe183; 
0x0003084d: jmp ptr [ecx]; ret 0xe683; 
0x0002d4a8: jmp ptr [ecx]; ret; 
0x00072b99: jmp ptr [ecx]; retf 0x448d; pop ss; add dword ptr [ecx - 0x5236b], ecx; dec dword ptr [ecx - 0x4ff7b]; call dword ptr [edx + 0x52]; 
0x0003a8c8: jmp ptr [ecx]; sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x0009df16: jmp ptr [edi - 0x78f10000]; ret; 
0x000505d9: jmp ptr [edi]; jne 0x505d0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00131228: jmp ptr [edx]; call eax; 
0x000a2a20: jmp ptr [edx]; cmp ecx, eax; jne 0xa2a18; mov eax, edx; pop ebx; ret; 
0x0017d756: jmp ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3e310; add esp, 0x1c; ret; 
0x0016479f: jmp ptr [edx]; push edx; push 4; push ebx; call dword ptr [eax]; 
0x000a255a: jmp ptr [esi]; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x00143432: jmp ptr [esi]; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0007c3a2: jmp ptr [esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x001026e2: jmp ptr [esi]; lea esi, [esi]; mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x1025e7; call eax; 
0x0010269a: jmp ptr [esi]; lea esi, [esi]; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x102592; call eax; 
0x000adae7: jmp ptr [esi]; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x00061a16: jmp ptr [esi]; lea esi, [esi]; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x00041506: jmp ptr [esi]; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000893b2: jmp ptr [esi]; lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x001023bc: jne 0x102460; call ecx; 
0x00102861: jne 0x102840; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00102a20: jne 0x102a9f; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00102cf7: jne 0x102d28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00102d1b: jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102d9b: jne 0x102dd0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00102dbf: jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00102ea0: jne 0x102ed0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00102ec4: jne 0x102f19; add esp, 0x24; pop ebx; pop esi; ret; 
0x00102f50: jne 0x102f80; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102f74: jne 0x102fc9; add esp, 0x24; pop ebx; pop esi; ret; 
0x00103017: jne 0x103048; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010303b: jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00104ee9: jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x001051cd: jne 0x105293; add esp, 0x64; pop ebx; pop esi; ret; 
0x00109914: jne 0x109928; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001099af: jne 0x109992; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00109b9c: jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x0010a842: jne 0x10a897; add esp, 0x34; pop ebx; pop esi; ret; 
0x0010ab45: jne 0x10ab8b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010acdc: jne 0x10ad00; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010ade0: jne 0x10adf0; add esp, 4; pop ebx; pop esi; ret; 
0x0010af5c: jne 0x10af80; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010b8d6: jne 0x10b998; mov ebx, dword ptr [esp + 0x60]; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010bd38: jne 0x10bd5f; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0010bdc3: jne 0x10bdfc; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010bf5b: jne 0x10bf9b; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010c54c: jne 0x10c566; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010c758: jne 0x10c767; add esp, 0x54; pop ebx; pop esi; ret; 
0x0010c7c4: jne 0x10c7d7; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00114748: jne 0x114773; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001150f3: jne 0x11514b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x001151bd: jne 0x115215; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x00115254: jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x001153ce: jne 0x11547b; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011550e: jne 0x1155bb; add esp, 0x24; pop ebx; pop esi; ret; 
0x001157d5: jne 0x1157ee; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011591c: jne 0x115968; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001159b7: jne 0x1159f0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115c57: jne 0x115c90; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d5d: jne 0x115d90; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00115f7d: jne 0x115fa8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001160ce: jne 0x1160d6; add esp, 0x14; pop esi; pop edi; ret; 
0x001167d0: jne 0x11681c; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116990: jne 0x116998; add esp, 0x24; pop ebx; pop esi; ret; 
0x001169bd: jne 0x1169e8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00116ca2: jne 0x116cbe; add esp, 0x74; pop ebx; pop esi; ret; 
0x00116eb8: jne 0x116ec7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00116f18: jne 0x116f27; add esp, 0x64; pop ebx; pop esi; ret; 
0x001172f7: jne 0x117344; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00117829: jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a9: jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x00117b4c: jne 0x117b70; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00117b9d: jne 0x117bc8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117f5f: jne 0x117fb9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011800f: jne 0x118069; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118ef3: jne 0x118f19; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00118f5c: jne 0x118f69; add esp, 0x1c; ret; 
0x00118fad: jne 0x118fe0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011935f: jne 0x119399; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00119545: jne 0x119569; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011963d: jne 0x119661; add esp, 0x54; pop ebx; pop esi; ret; 
0x001196e0: jne 0x11976c; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x001197e8: jne 0x11980b; add esp, 0x14; pop ebx; pop esi; ret; 
0x001198b1: jne 0x1198c0; add esp, 0x54; pop ebx; pop esi; ret; 
0x00119a83: jne 0x119a8b; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0011a665: jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0011a7de: jne 0x11a80e; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011aabc: jne 0x11aae0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011ac58: jne 0x11ac70; lea eax, [ebx + 0x448c]; add esp, 4; pop ebx; pop esi; ret; 
0x0011af07: jne 0x11aee0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0011af68: jne 0x11af40; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0011b00c: jne 0x11b030; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011b1de: jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0011b26f: jne 0x11b277; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011b302: jne 0x11b30a; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011b393: jne 0x11b39c; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011b46c: jne 0x11b460; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0011b579: jne 0x11b5b7; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0011b5fc: jne 0x11b602; add esp, 0x1c; ret; 
0x0011c092: jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0011c1d4: jne 0x11c1de; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011c264: jne 0x11c26e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011cced: jne 0x11ccf3; add esp, 0x1c; ret; 
0x0011e853: jne 0x11e85b; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011e8e4: jne 0x11e8ed; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011ed1d: jne 0x11ed69; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011edfe: jne 0x11ee49; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011ef11: jne 0x11eecc; add esp, 0xc; ret; 
0x0011ef60: jne 0x11ef3b; mov eax, esi; pop ebx; pop esi; ret; 
0x0011f5ee: jne 0x11f5ae; pop ebx; pop esi; pop edi; ret; 
0x0011f73d: jne 0x11f768; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fb96: jne 0x11fbc0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00120137: jne 0x120191; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001204c6: jne 0x1204f0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00120dad: jne 0x120dd8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121565: jne 0x1215a0; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0012158e: jne 0x1215ff; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00121645: jne 0x121680; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0012166e: jne 0x1216df; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00121776: jne 0x12179b; add esp, 0x14; pop ebx; pop esi; ret; 
0x001217fb: jne 0x121830; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0012181f: jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218ab: jne 0x1218e0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001218cf: jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x001226f5: jne 0x12269f; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x001226c4: jne 0x122710; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00122785: jne 0x12272f; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x00122754: jne 0x1227a0; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x001227d7: jne 0x1227f8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00122b52: jne 0x122b30; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00122c0e: jne 0x122bd8; call eax; 
0x001231a2: jne 0x1231a8; ret; 
0x001231c6: jne 0x1231d0; ret; 
0x00123372: jne 0x123387; add esp, 0x3c; ret; 
0x00123811: jne 0x123817; add esp, 0x1c; ret; 
0x0012383a: jne 0x123880; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00123920: jne 0x123928; add esp, 0x34; pop ebx; pop esi; ret; 
0x001239b1: jne 0x1239ba; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001239fd: jne 0x123a28; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123dba: jne 0x123dc6; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00124301: jne 0x12430d; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00124f60: jne 0x124f89; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00124ff1: jne 0x125048; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00125271: jne 0x1252c0; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012545d: jne 0x125488; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001258f0: jne 0x125919; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00125980: jne 0x1259a9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00125f14: jne 0x125faf; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001265f1: jne 0x126640; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00126f4d: jne 0x126f56; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001273b1: jne 0x1273d9; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012745c: jne 0x127489; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00127504: jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x001275a1: jne 0x1275c9; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00127629: jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a9: jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x0012793d: jne 0x127946; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001279a4: jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x00127acc: jne 0x127af9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00128131: jne 0x128159; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001281dc: jne 0x128209; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00128361: jne 0x128389; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012841c: jne 0x128449; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001286b4: jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x0012872a: jne 0x128760; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001287cd: jne 0x1287d3; add esp, 0x1c; ret; 
0x00128839: jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x001288c4: jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x001289c7: jne 0x1289d4; add esp, 0x7c; ret; 
0x00128a09: jne 0x128a0b; add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00128a4f: jne 0x128a51; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00128b5e: jne 0x128b60; add byte ptr [eax], al; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00128cb4: jne 0x128cb6; add byte ptr [eax], al; mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x001291cb: jne 0x1291cd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001296e9: jne 0x129711; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00129758: jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129fa0: jne 0x129fda; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012bb0a: jne 0x12bb18; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bb85: jne 0x12bb90; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bd79: jne 0x12bd80; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c3ce: jne 0x12c3d8; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c42e: jne 0x12c438; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c619: jne 0x12c620; mov eax, edx; pop ebx; pop esi; ret; 
0x0012ce5c: jne 0x12ce68; add esp, 4; pop ebx; pop esi; ret; 
0x0012daa3: jne 0x12da8f; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001304ae: jne 0x1304e0; pop ebx; pop esi; pop edi; ret; 
0x00130696: jne 0x130684; add esp, 4; pop ebx; pop esi; ret; 
0x00131c2a: jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x00131cfd: jne 0x131ce5; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x00131cdd: jne 0x131cf0; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x131cf8; ret; 
0x00132e40: jne 0x132e50; pop ebx; pop esi; pop edi; ret; 
0x00133379: jne 0x133385; add esp, 0x2c; ret; 
0x00134193: jne 0x134180; call 0x1325d0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0013425f: jne 0x134250; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x001343dc: jne 0x134396; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00134589: jne 0x134595; add esp, 0x2c; ret; 
0x001356fe: jne 0x13576a; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013621f: jne 0x136245; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013736d: jne 0x137380; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x001374ed: jne 0x137500; mov eax, ebx; pop ebx; ret; 
0x0013790a: jne 0x137940; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00137d0c: jne 0x137d18; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00137dd4: jne 0x137e1b; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013a71a: jne 0x13a715; call dword ptr [esi + 0x6a]; 
0x0013e796: jne 0x13e7d3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013e9a3: jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9ff: jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea4e: jne 0x13ea54; add esp, 0x1c; ret; 
0x0014031b: jne 0x140327; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x001405ea: jne 0x1405f6; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0014077e: jne 0x140748; mov eax, 1; pop ebx; ret; 
0x00140812: jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408b2: jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x00140972: jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a12: jne 0x140a3d; add esp, 0x11c; ret; 
0x00140eea: jne 0x140f2c; add esp, 0x1c; ret; 
0x00141b41: jne 0x141b50; pop ebx; pop esi; pop edi; ret; 
0x00141b87: jne 0x141b70; pop ebx; pop esi; pop edi; ret; 
0x0014483c: jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00147720: jne 0x147730; add esp, 4; pop ebx; pop esi; ret; 
0x001481ea: jne 0x1481e0; ret; 
0x001481da: jne 0x1481e7; ret; 
0x0014823e: jne 0x148255; mov dword ptr [esi + 0x4e24], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x00148803: jne 0x1487b0; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00148cbd: jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x0014b982: jne 0x14b970; add esp, 8; pop ebx; ret; 
0x0014c064: jne 0x14c030; pop ebx; pop esi; ret; 
0x0014c5f0: jne 0x14c5f6; add esp, 0x1c; ret; 
0x0014c744: jne 0x14c750; mov eax, ecx; ret; 
0x0014cce3: jne 0x14cd10; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00151c35: jne 0x151c28; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x001553bd: jne 0x1553a0; pop ebx; pop esi; pop edi; ret; 
0x00157fe6: jne 0x157fd0; add esp, 4; pop ebx; pop esi; ret; 
0x00163ba2: jne 0x163bab; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00163c29: jne 0x163c38; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001643f0: jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x001645d1: jne 0x1645f0; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00164674: jne 0x164713; add esp, 0x34; pop ebx; pop esi; ret; 
0x001647ad: jne 0x1647e0; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016484d: jne 0x164860; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001649e4: jne 0x164a19; add esp, 0x14; pop ebx; pop esi; ret; 
0x001653a2: jne 0x1653b0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001653ed: jne 0x165400; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001654ad: jne 0x1654b8; add esp, 4; pop ebx; pop esi; ret; 
0x00165529: jne 0x165538; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00165695: jne 0x1656b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x001657d3: jne 0x165910; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00166446: jne 0x166458; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00166517: jne 0x1664e5; jmp 0x16651a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00166906: jne 0x166936; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00166991: jne 0x1669c6; add esp, 0x14; pop ebx; pop esi; ret; 
0x00166c26: jne 0x166ca7; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00167027: jne 0x167038; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001672ff: jne 0x167317; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00167b82: jne 0x167b70; pop ebx; ret; 
0x00167c96: jne 0x167ca0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00167d39: jne 0x167d48; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0016a273: jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016c54f: jne 0x16c5a1; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x0016d31e: jne 0x16d398; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0016d4c8: jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d544: jne 0x16d55c; add esp, 0x74; pop ebx; pop edi; ret; 
0x0016d5f2: jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d692: jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0016d751: jne 0x16d797; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016d841: jne 0x16d887; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016d95f: jne 0x16d96f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016d9e2: jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da5b: jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x0016db62: jne 0x16dbda; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0016df82: jne 0x16dfa3; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016e8df: jne 0x16e8e5; add esp, 0x4c; ret; 
0x0016e94f: jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9bf: jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea2f: jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea92: jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaf2: jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb5f: jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebdf: jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016efc1: jne 0x16efcc; add esp, 0x94; pop ebx; pop edi; ret; 
0x0016f0bd: jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f10c: jne 0x16f13c; add esp, 0x1c; ret; 
0x0016f189: jne 0x16f170; add esp, 8; pop ebx; ret; 
0x0016f413: jne 0x16f420; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x00170102: jne 0x1700fd; call dword ptr [eax - 0x73]; 
0x00170826: jne 0x17082c; add esp, 0x2c; ret; 
0x001708d7: jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709c7: jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170a69: jne 0x170b0e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00170b59: jne 0x170bfe; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00170c7e: jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d0e: jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170dbd: jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e42: jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ed4: jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x001714e1: jne 0x1714f4; add esp, 0x14; pop ebx; pop esi; ret; 
0x001715d1: jne 0x1715e4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017170e: jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x0017179e: jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x0017182e: jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718be: jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171c9f: jne 0x171cc1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00171ef5: jne 0x171efd; add esp, 0x54; pop ebx; pop esi; ret; 
0x00171f32: jne 0x171f40; add esp, 0xc; ret; 
0x00171fb6: jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x00172016: jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x0017207f: jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x001720a2: jne 0x1720b0; add esp, 0xc; ret; 
0x0017212f: jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x0017234c: jne 0x172347; call dword ptr [eax - 0x73]; 
0x00172a81: jne 0x172a8a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00173211: jne 0x17321a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017476f: jne 0x17476a; call dword ptr [eax - 0x18]; 
0x001747dc: jne 0x1747d7; call dword ptr [eax - 0x18]; 
0x0017511c: jne 0x175117; call dword ptr [eax - 0x18]; 
0x001761e2: jne 0x1761dd; call dword ptr [eax - 0x18]; 
0x001766e1: jne 0x1766dc; call dword ptr [eax - 0x18]; 
0x00176b4e: jne 0x176b83; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x0017710b: jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00177391: jne 0x1773c4; add esp, 0x14; pop ebx; pop esi; ret; 
0x00177421: jne 0x177454; add esp, 0x14; pop ebx; pop esi; ret; 
0x00177946: jne 0x177941; call dword ptr [edx - 0x77]; 
0x00177969: jne 0x177964; call dword ptr [edi + 0x56]; 
0x00178177: jne 0x178172; call dword ptr [ecx - 0x77]; 
0x0017819a: jne 0x178195; call dword ptr [esi + 0x57]; 
0x00178afb: jne 0x178af6; call dword ptr [edx - 0x77]; 
0x00178b1a: jne 0x178b15; call dword ptr [esi + 0x53]; 
0x00178c97: jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d0f: jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x001798d6: jne 0x179920; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00179fb2: jne 0x179f54; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x00179fb7: jne 0x179f69; call eax; 
0x0017a09e: jne 0x17a0ce; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017a2c1: jne 0x17a2e9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017a348: jne 0x17a394; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0017ab13: jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x0017af67: jne 0x17b010; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017bc0d: jne 0x17bbf9; call dword ptr [ebp - 0x77]; 
0x0017be05: jne 0x17be07; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017c2e8: jne 0x17c2f0; pop ebx; ret; 
0x0017c310: jne 0x17c318; ret; 
0x0017c34c: jne 0x17c358; add esp, 4; pop ebx; pop esi; ret; 
0x0017c65b: jne 0x17c668; add esp, 8; pop ebx; ret; 
0x0017d277: jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x0017d332: jne 0x17d356; mov eax, 4; add esp, 0xc; ret; 
0x0017d7c4: jne 0x17d7d0; add esp, 8; pop ebx; ret; 
0x0017f0b0: jne 0x17f0c0; add esp, 8; pop ebx; ret; 
0x001800dd: jne 0x1800e3; add esp, 0x1c; ret; 
0x00185a0e: jne 0x185a16; add esp, 0x14; pop esi; pop edi; ret; 
0x00185d89: jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x00185e22: jne 0x185e2a; add esp, 0x14; pop ebx; pop esi; ret; 
0x00185e9c: jne 0x185ea4; add esp, 0x14; pop ebx; pop esi; ret; 
0x00185fba: jne 0x185fbc; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00186101: jne 0x186107; add esp, 0x2c; ret; 
0x001869ca: jne 0x1869d0; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186a86: jne 0x186a8c; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0019286e: jne 0x1928e0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00194317: jne 0x194170; pop ebp; xor eax, eax; ret; 
0x0019938c: jne 0x1993a0; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00199d77: jne 0x19a4f0; pop ebx; ret; 
0x00199bb0: jne 0x19a506; pop ebx; ret; 
0x0019b46f: jne 0x19b6b0; pop ebx; ret; 
0x0019cb29: jne 0x19cd50; pop ebx; ret; 
0x0019cbe6: jne 0x19cd70; pop ebx; ret; 
0x0019cfea: jne 0x19cfe2; ret 0x7504; 
0x0019cfe9: jne 0x19d060; test dl, 4; jne 0x19d064; add eax, 3; ret; 
0x0019cfee: jne 0x19d064; add eax, 3; ret; 
0x0019d008: jne 0x19d070; test dl, 0x40; jne 0x19d074; add eax, 7; ret; 
0x0019d00d: jne 0x19d074; add eax, 7; ret; 
0x0019d02f: jne 0x19d080; test dh, 4; jne 0x19d084; add eax, 0xb; ret; 
0x0019d034: jne 0x19d084; add eax, 0xb; ret; 
0x0019d048: jne 0x19d090; test dh, 0x40; jne 0x19d094; add eax, 0xf; ret; 
0x0019d04d: jne 0x19d094; add eax, 0xf; ret; 
0x0019d31e: jne 0x19d3e0; test al, 0x40; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x0019d326: jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x0019d1ee: jne 0x19d3f0; test dl, 0x40; jne 0x19d470; lea eax, [edi + 7]; pop edi; ret; 
0x0019d379: jne 0x19d460; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019d2e0: jne 0x19d470; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d29a: jne 0x19d470; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019d23d: jne 0x19d470; lea eax, [edi + 3]; pop edi; ret; 
0x0019d1f7: jne 0x19d470; lea eax, [edi + 7]; pop edi; ret; 
0x0019d93d: jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019d7bd: jne 0x19d840; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019d7e2: jne 0x19d870; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019d80c: jne 0x19d8a0; lea eax, [edi - 8]; pop edi; ret; 
0x0019d835: jne 0x19d8d0; lea eax, [edi - 4]; pop edi; ret; 
0x0019d934: jne 0x19da10; and eax, 0xf; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019dcbf: jne 0x19dde0; lea eax, [edi + 3]; pop edi; ret; 
0x0019dce2: jne 0x19de10; lea eax, [edi + 7]; pop edi; ret; 
0x0019dd03: jne 0x19de30; test ah, 4; jne 0x19de40; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019dd0c: jne 0x19de40; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019dd2c: jne 0x19de60; test ah, 0x40; jne 0x19de70; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019dd35: jne 0x19de70; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019ddb2: jne 0x19de80; xor eax, eax; pop edi; ret; 
0x0019dea1: jne 0x19df70; sub edx, 4; jb 0x19e010; lea eax, [edi + 3]; pop edi; ret; 
0x0019ded2: jne 0x19dfa0; sub edx, 8; jb 0x19e010; lea eax, [edi + 7]; pop edi; ret; 
0x0019df0c: jne 0x19dfd0; sub edx, 0xc; jb 0x19e010; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019e6fa: jne 0x19e320; xor eax, eax; ret; 
0x0019e1dd: jne 0x19e3c0; mov eax, ecx; ret; 
0x0019e1d5: jne 0x19e3d0; test al, 2; jne 0x19e3c0; mov eax, ecx; ret; 
0x0019e362: jne 0x19e3f0; lea eax, [ecx + 4]; ret; 
0x0019e35a: jne 0x19e400; test al, 0x20; jne 0x19e3f0; lea eax, [ecx + 4]; ret; 
0x0019e38c: jne 0x19e420; lea eax, [ecx + 8]; ret; 
0x0019e3b5: jne 0x19e450; lea eax, [ecx + 0xc]; ret; 
0x0019e24a: jne 0x19e480; xor eax, eax; ret; 
0x0019e289: jne 0x19e500; xor eax, eax; ret; 
0x0019e4a8: jne 0x19e610; add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x0019e592: jne 0x19e640; add edx, 4; jl 0x19e6d0; lea eax, [ecx + 4]; ret; 
0x0019e5cb: jne 0x19e670; add edx, 8; jl 0x19e6d0; lea eax, [ecx + 8]; ret; 
0x0019e5f5: jne 0x19e6a0; add edx, 0xc; jl 0x19e6d0; lea eax, [ecx + 0xc]; ret; 
0x0019e987: jne 0x19ea20; test al, 4; jne 0x19ea30; lea eax, [edx + 3]; ret; 
0x0019e98f: jne 0x19ea30; lea eax, [edx + 3]; ret; 
0x0019e9aa: jne 0x19ea50; test al, 0x40; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0019e9b2: jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0019e9d3: jne 0x19ea80; test ah, 4; jne 0x19ea90; lea eax, [edx + 0xb]; ret; 
0x0019e9dc: jne 0x19ea90; lea eax, [edx + 0xb]; ret; 
0x0019e9fc: jne 0x19eab0; test ah, 0x40; jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x0019ea05: jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x0019eea0: jne 0x19eeb0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0019eed2: jne 0x19ef90; sub edi, 4; jb 0x19f030; lea eax, [eax + 3]; pop edi; ret; 
0x0019edbf: jne 0x19f185; add eax, 3; pop edi; ret; 
0x0019ede5: jne 0x19f199; add eax, 7; pop edi; ret; 
0x0019ee03: jne 0x19f1a8; test dh, 4; jne 0x19f1ad; add eax, 0xb; pop edi; ret; 
0x0019ee0c: jne 0x19f1ad; add eax, 0xb; pop edi; ret; 
0x0019ee35: jne 0x19f1c1; add eax, 0xf; pop edi; ret; 
0x0019f677: jne 0x19f6c0; pop edi; pop esi; pop ebx; ret; 
0x0019f7a8: jne 0x19f7b0; pop ebx; ret; 
0x0019f85c: jne 0x19f920; test dl, 0xf; jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x0019f937: jne 0x19f950; test dh, 0xf; jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x0019f966: jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x0019f973: jne 0x19f990; lea eax, [ecx + 0xc]; ret; 
0x0019f93c: jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x0019f865: jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x0019faf7: jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019faef: jne 0x19fbc0; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019fb93: jne 0x19fbd0; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019fbc3: jne 0x19fbe0; lea eax, [edi - 8]; pop edi; ret; 
0x001a021b: jne 0x1a0250; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a0233: jne 0x1a0260; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00024459: jne 0x24427; call dword ptr [ebp - 0x38]; 
0x000a0ccd: jne 0x2448c; pop ebx; pop esi; pop edi; ret; 
0x0017d31e: jne 0x24aa3; mov eax, 8; add esp, 0xc; ret; 
0x00024b93: jne 0x24b62; ret; 
0x00025553: jne 0x25559; add esp, 0x1c; ret; 
0x000255f1: jne 0x25626; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00025fef: jne 0x25fd4; add esp, 4; pop ebx; pop esi; ret; 
0x00026056: jne 0x2606d; add byte ptr [0x20addb], al; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00026076: jne 0x2608d; add byte ptr [0x20adbb], al; mov eax, dword ptr [eax + 0x109c]; ret; 
0x0002f6f2: jne 0x2f722; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00033c68: jne 0x33c70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00034aa4: jne 0x34ab0; mov eax, edx; add esp, 0xc; ret; 
0x00034ae4: jne 0x34af0; mov eax, edx; add esp, 0xc; ret; 
0x0003644f: jne 0x36420; pop ebx; pop esi; pop edi; ret; 
0x00039829: jne 0x39808; ret; 
0x0003a7f6: jne 0x3a800; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003ab15: jne 0x3ab20; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003adb1: jne 0x3adc0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003af7c: jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd2f: jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003bd92: jne 0x3bda0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003c05f: jne 0x3c08b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003c0ba: jne 0x3c0c8; add esp, 8; pop ebx; ret; 
0x0003c369: jne 0x3c370; add esp, 8; pop ebx; ret; 
0x0003c42c: jne 0x3c450; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003c5d6: jne 0x3c5e8; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c656: jne 0x3c668; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c6cd: jne 0x3c716; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c771: jne 0x3c77c; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003c7f0: jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003c905: jne 0x3c918; add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x0003c996: jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003cd94: jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003cddc: jne 0x3cde0; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0003d057: jne 0x3d098; mov ebx, dword ptr [esp + 4]; mov eax, 0xb1; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003d23f: jne 0x3d247; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d398: jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d418: jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d4a0: jne 0x3d4a9; add esp, 0x9c; ret; 
0x0003d60b: jne 0x3d627; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0003d671: jne 0x3d64f; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003e762: jne 0x3e768; add esp, 0x1c; ret; 
0x0003e885: jne 0x3e88b; add esp, 0x1c; ret; 
0x0003f67e: jne 0x3f664; add esp, 4; pop ebx; pop esi; ret; 
0x0003f86d: jne 0x3f898; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003fa65: jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003faf6: jne 0x3fae0; lea eax, [ebx + 0x17dc]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0003fc82: jne 0x3fc88; add esp, 0x1c; ret; 
0x0003fd51: jne 0x3fd60; add esp, 4; pop ebx; pop esi; ret; 
0x0003fe40: jne 0x3fe46; add esp, 0x2c; ret; 
0x0003ff52: jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffd5: jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f31: jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x0004471e: jne 0x44754; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00047b4e: jne 0x47b84; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0004b35e: jne 0x4b394; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000503bb: jne 0x5041c; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000504c0: jne 0x504c6; add esp, 0x2c; ret; 
0x000505db: jne 0x505d0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000506af: jne 0x50660; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0005079e: jne 0x50790; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00050c4d: jne 0x50c40; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00050c6d: jne 0x50c58; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00050d4d: jne 0x50d40; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00050d6d: jne 0x50d58; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00051e7f: jne 0x51e30; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00052751: jne 0x5275c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000527df: jne 0x527ea; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005282e: jne 0x52864; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00056908: jne 0x56913; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000575ad: jne 0x575cb; add esp, 0x434; pop ebx; pop esi; ret; 
0x00057717: jne 0x57730; test eax, eax; jne 0x57734; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005771b: jne 0x57734; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000577fc: jne 0x5780f; add esp, 0x1c; ret; 
0x00057f4d: jne 0x57f72; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0005beaa: jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x0005dd00: jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x0005dd87: jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x0005e5d9: jne 0x5e5e8; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00073926: jne 0x7394b; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0007680c: jne 0x76816; push esi; call dword ptr [ebx + 0x1c]; 
0x00076f83: jne 0x76f8d; push esi; call dword ptr [ebx + 0x1c]; 
0x000781d9: jne 0x781e3; push edx; call dword ptr [ebx + 0x1c]; 
0x00078b1a: jne 0x78b28; push esi; call dword ptr [ebx + 0x2c]; 
0x00078b17: jne 0x78b2d; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00078e1e: jne 0x78e76; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00078efe: jne 0x78f06; add esp, 0x24; pop ebx; pop esi; ret; 
0x000795ba: jne 0x795f5; ret; 
0x00079c7c: jne 0x79c62; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00079c7f: jne 0x79c89; push esi; call dword ptr [eax + 0x1c]; 
0x0007a9a7: jne 0x7a9be; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007adfc: jne 0x7adf0; ret; 
0x0007b313: jne 0x7b378; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0007b59f: jne 0x7b52f; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0007b6ff: jne 0x7b68f; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0007e24f: jne 0x7e260; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x0007e31e: jne 0x7e2f4; push edx; push ebx; push esi; call eax; 
0x0007fca7: jne 0x7fcbf; add esp, 0x824; pop ebx; pop esi; ret; 
0x0007fe9f: jne 0x7febc; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0007ff7a: jne 0x7ff9c; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00081846: jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x0008188e: jne 0x818b0; test eax, eax; jne 0x818b4; mov dword ptr [edx + 0x1a3c], 0; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00081892: jne 0x818b4; mov dword ptr [edx + 0x1a3c], 0; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00081bf6: jne 0x81c00; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00082f40: jne 0x82f50; add esp, 8; pop ebx; ret; 
0x0008a760: jne 0x83241d38; pushal; or dh, bh; xor eax, eax; ret; 
0x00084adb: jne 0x84ae0; ret; 
0x00084ddc: jne 0x84dd0; ret; 
0x00085b8c: jne 0x85b80; ret; 
0x00085dfa: jne 0x85e28; add esp, 4; pop ebx; pop esi; ret; 
0x000865f1: jne 0x865d8; add esp, 4; pop ebx; pop esi; ret; 
0x00086a2a: jne 0x86a20; ret; 
0x00086a78: jne 0x86a88; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00086e13: jne 0x86e50; mov dword ptr [ebx + 0x1a5c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00087f9a: jne 0x87fa2; add esp, 0x24; pop ebx; pop esi; ret; 
0x00088103: jne 0x8814d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00088271: jne 0x882b5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008847b: jne 0x88462; call dword ptr [eax - 0x18]; 
0x000887ad: jne 0x8877d; mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008890a: jne 0x88910; ret; 
0x00088ae8: jne 0x88af0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00088b6b: jne 0x88bb0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00088c58: jne 0x88c91; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00088d8f: jne 0x88da0; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008998f: jne 0x89931; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008a763: jne 0x8a780; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008ade2: jne 0x8af0c; add esp, 0x94; pop ebx; pop esi; ret; 
0x0008b06f: jne 0x8b093; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008c802: jne 0x8c808; add esp, 0x2c; ret; 
0x0008c8c0: jne 0x8c8c9; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008cc63: jne 0x8cc87; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0008da58: jne 0x8d5be; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0008da30: jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0008e179: jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x0008e170: jne 0x8e1a9; test byte ptr [edx + 0x80], 0x10; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x0008eb78: jne 0x8eba8; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ee56: jne 0x8ee60; xor eax, eax; pop ebx; ret; 
0x0008f932: jne 0x8f938; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0008fa65: jne 0x8fa6d; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008fa9c: jne 0x8faaa; mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0009126e: jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912fe: jne 0x91304; add esp, 0x2c; ret; 
0x0009207e: jne 0x92090; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000920c3: jne 0x920e0; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00092191: jne 0x921e0; test al, 1; je 0x921e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000925d2: jne 0x925d8; add esp, 0x2c; ret; 
0x00092a52: jne 0x92a58; add esp, 0x2c; ret; 
0x00092f5e: jne 0x92f64; add esp, 0x2c; ret; 
0x000933be: jne 0x933c4; add esp, 0x2c; ret; 
0x00093416: jne 0x93420; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000934d6: jne 0x934aa; mov eax, 0x10; pop ebx; ret; 
0x0009438a: jne 0x943d8; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000943c5: jne 0x943f7; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x000944f7: jne 0x94500; xor eax, eax; ret; 
0x00094603: jne 0x94619; add esp, 0x24; pop ebx; pop esi; ret; 
0x00094829: jne 0x94830; xor eax, eax; pop ebx; pop esi; ret; 
0x000948d3: jne 0x9490b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00094e22: jne 0x94e30; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00095598: jne 0x955a8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009564c: jne 0x95683; add esp, 0x24; pop ebx; pop esi; ret; 
0x000956ee: jne 0x9573b; add esp, 0x124; pop ebx; pop esi; ret; 
0x000958e0: jne 0x958f0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00095923: jne 0x95916; xor eax, eax; pop ebx; ret; 
0x00095971: jne 0x95980; xor eax, eax; pop ebx; ret; 
0x0009622a: jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x000964b9: jne 0x964d7; add esp, 0x2c; ret; 
0x000965bf: jne 0x965f7; add esp, 0x14; pop ebx; pop esi; ret; 
0x00096725: jne 0x96747; add esp, 0x2c; ret; 
0x00096985: jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x00096b03: jne 0x96b52; add esp, 0x124; pop ebx; pop esi; ret; 
0x00096bbe: jne 0x96c0b; add esp, 0x124; pop ebx; pop esi; ret; 
0x00096f27: jne 0x96f18; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x00096fa3: jne 0x96f98; mov eax, dword ptr [ecx + 0x10]; mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x0009764c: jne 0x97640; pop ebx; ret; 
0x0009766a: jne 0x97677; ret; 
0x00097d6e: jne 0x97d70; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], edi; call esi; 
0x00097f60: jne 0x97f00; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000986ad: jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099232: jne 0x9923e; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00099626: jne 0x99650; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00099877: jne 0x998c8; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099a57: jne 0x99a5f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00099b4f: jne 0x99b98; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099d15: jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x00099d47: jne 0x99d90; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009a1de: jne 0x9a27f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009a2e3: jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x0009a7ba: jne 0x9a7d7; add esp, 0xb4; pop ebx; pop esi; ret; 
0x0009ab27: jne 0x9ab30; add esp, 8; pop ebx; ret; 
0x0009b832: jne 0x9b86c; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009bf91: jne 0x9bfc8; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000a0408: jne 0xa0413; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000a0be5: jne 0xa0b39; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x000a0c55: jne 0xa0c48; xor eax, eax; ret; 
0x000a0cb8: jne 0xa0c90; sub esp, 0xc; push eax; call edx; 
0x000a0d23: jne 0xa0d18; mov eax, ecx; ret; 
0x000a14a6: jne 0xa14b2; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x000a1ad0: jne 0xa1ab8; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a2305: jne 0xa2317; pop ebx; pop esi; pop edi; ret; 
0x000a250d: jne 0xa2500; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000a24fa: jne 0xa2503; ret; 
0x000a2984: jne 0xa2998; lea eax, [edx - 0x95764]; and ch, 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a2a24: jne 0xa2a18; mov eax, edx; pop ebx; ret; 
0x000a3302: jne 0xa3306; lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x000a3342: jne 0xa3346; lea edx, [edx - 0x174704]; cmove eax, edx; ret; 
0x000a33b4: jne 0xa33c8; lea eax, [edx - 0x9cad4]; and ch, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a3dd2: jne 0xa3dd6; lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x000a5032: jne 0xa5036; lea edx, [edx - 0x174b34]; cmove eax, edx; ret; 
0x000a53a6: jne 0xa5398; mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x000a554d: jne 0xa5540; mov eax, edx; pop ebx; ret; 
0x000a5591: jne 0xa5580; mov eax, edx; pop ebx; pop esi; ret; 
0x000a56f1: jne 0xa56e0; mov eax, edx; pop ebx; ret; 
0x000a5da4: jne 0xa5db8; lea eax, [edx - 0x9a5f4]; and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a5de4: jne 0xa5df8; lea eax, [edx - 0x9a5c4]; and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a5e32: jne 0xa5e36; lea edx, [edx - 0x176704]; cmove eax, edx; ret; 
0x000a5e64: jne 0xa5e78; lea eax, [edx - 0x9e4f4]; and ch, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x000a5eb2: jne 0xa5eb6; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000a6be3: jne 0xa6bd2; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x000a8f23: jne 0xa8f10; pop ebx; pop esi; pop edi; ret; 
0x000a8fb7: jne 0xa8f70; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000a9230: jne 0xa91f8; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000ac97c: jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad07c: jne 0xacfe1; pop ebx; ret; 
0x000b0e41: jne 0xb1430; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b14cc: jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b15f1: jne 0xb1431; pop ebx; ret; 
0x000b2c1b: jne 0xb2b8b; call 0x17d651; add ecx, 0x10d11a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2c58: jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b425b: jne 0xb41cb; call 0x17d651; add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b429a: jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b50fa: jne 0xb50f2; ret 0x7504; 
0x000b73fa: jne 0xb73f2; ret 0x7504; 
0x000ba081: jne 0xba0e2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba1fb: jne 0xba16b; call 0x17d651; add ecx, 0x105e6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bac92: jne 0xbad80; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bad44: jne 0xbada0; xor eax, eax; pop edi; ret; 
0x000bad0a: jne 0xbadc0; xor eax, eax; pop edi; ret; 
0x000baf6a: jne 0xbb020; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000bafda: jne 0xbb050; xor eax, eax; ret; 
0x000bb009: jne 0xbb070; xor eax, eax; ret; 
0x000bb4a1: jne 0xbb4e0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000bb977: jne 0xbb97d; xor eax, eax; pop ebx; ret; 
0x000bba0c: jne 0xbbc17; pop esi; xor eax, eax; pop ebx; ret; 
0x000bba80: jne 0xbbc2b; pop esi; xor eax, eax; pop ebx; ret; 
0x000bc2f1: jne 0xbc2f6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000bc3a2: jne 0xbc398; xor eax, eax; ret; 
0x000bc51d: jne 0xbc521; xor eax, eax; ret; 
0x000bc7bd: jne 0xbc7b8; pop esi; ret; 
0x000bd32b: jne 0xbd485; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000bd8d6: jne 0xbd8d8; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000be534: jne 0xbe528; ret; 
0x000be520: jne 0xbe532; ret; 
0x000bf302: jne 0xbf306; cmove eax, edx; ret; 
0x000bf532: jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000bf967: jne 0xbf9b5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000bfd15: jne 0xbfd00; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000c066e: jne 0xc06a4; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c362c: jne 0xc367d; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c374e: jne 0xc3784; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c646c: jne 0xc64ad; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c6dce: jne 0xc6e04; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c9c1c: jne 0xc9c7f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000ccea0: jne 0xccfa2; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000cd08e: jne 0xcd0b7; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000cd104: jne 0xcd118; lea eax, [edx - 0x91c64]; and ch, 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000cd23e: jne 0xcd274; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000d1008: jne 0xd1013; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d1091: jne 0xd109c; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d111f: jne 0xd112a; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d1d4f: jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1d2e: jne 0xd1ea0; xor eax, eax; pop edi; pop esi; ret; 
0x000d1f17: jne 0xd1f08; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d2178: jne 0xd2158; add eax, 1; ret; 
0x000d214e: jne 0xd2172; ret; 
0x000d2247: jne 0xd223c; xor edx, edx; mov eax, edx; ret; 
0x000d226c: jne 0xd2260; mov eax, ecx; pop ebx; ret; 
0x000d2d40: jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d2dc2: jne 0xd2dc8; add esp, 0x1c; ret; 
0x000d2e0d: jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d2e6d: jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x000d3e83: jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x000d4119: jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000d41d2: jne 0xd4233; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d44bd: jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000d6c6f: jne 0xd6c99; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d6d07: jne 0xd6d29; add esp, 0x24; pop ebx; pop esi; ret; 
0x000d71dd: jne 0xd71e6; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000d7a2d: jne 0xd7a38; add esp, 4; pop ebx; pop esi; ret; 
0x000dd156: jne 0xdd15c; add esp, 0x1c; ret; 
0x000df496: jne 0xdf49c; add esp, 0x1c; ret; 
0x000df60a: jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df673: jne 0xdf681; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000df829: jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x000df8e1: jne 0xdf920; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000df898: jne 0xdf95b; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000dfd63: jne 0xdfe20; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e01ae: jne 0xe01e3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e09cf: jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0a2b: jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000e0ad5: jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000e0b60: jne 0xe0b69; add esp, 0x38; mov eax, edx; pop ebx; ret; 
0x000e0ca0: jne 0xe0cd4; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e1d15: jne 0xe1d78; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e7895: jne 0xe78a7; add esp, 0x1c; ret; 
0x000e895f: jne 0xe8942; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000e8b4c: jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb2df: jne 0xeb2c2; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000eb4cc: jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec03f: jne 0xec022; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000ec22c: jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000ee93f: jne 0xee922; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000eeb2c: jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef68f: jne 0xef672; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000ef87c: jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x000f1f52: jne 0xf1f21; xor eax, eax; ret; 
0x000f1f31: jne 0xf1f49; mov eax, 1; ret; 
0x000f2199: jne 0xf21a0; add esp, 8; pop ebx; ret; 
0x000f222f: jne 0xf2274; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f277c: jne 0xf27e0; ret; 
0x000f2c2b: jne 0xf2c48; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000f2d17: jne 0xf2d40; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2df6: jne 0xf2e20; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2ed7: jne 0xf2f00; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2fb6: jne 0xf2fe0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00107b23: jno 0x107adb; int1; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x001266d7: jno 0x1266d9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00131d8e: jno 0x131d94; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0014c14b: jno 0x14c11f; inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015c0e3: jno 0x15c0de; call dword ptr [eax - 0x18]; 
0x0015c0e3: jno 0x15c0de; call dword ptr [eax - 0x18]; xchg esp, eax; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0015c1b5: jno 0x15c1b0; call dword ptr [eax - 0x18]; 
0x0015c1b5: jno 0x15c1b0; call dword ptr [eax - 0x18]; sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0015c284: jno 0x15c27f; call dword ptr [eax - 0x73]; 
0x0015c28b: jno 0x15c286; call dword ptr [eax - 0x18]; 
0x0015c423: jno 0x15c41e; call dword ptr [eax - 0x18]; 
0x0015c4f5: jno 0x15c4f0; call dword ptr [eax - 0x18]; 
0x0015c4f5: jno 0x15c4f0; call dword ptr [eax - 0x18]; inc edx; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x0015c5c4: jno 0x15c5bf; call dword ptr [eax - 0x73]; 
0x0015c5cb: jno 0x15c5c6; call dword ptr [eax - 0x18]; 
0x0015c5cb: jno 0x15c5c6; call dword ptr [eax - 0x18]; pushfd; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x0015d38c: jno 0x15d387; call dword ptr [eax - 0x18]; 
0x0015d455: jno 0x15d450; call dword ptr [eax - 0x18]; 
0x0015d51f: jno 0x15d51a; call dword ptr [eax - 0x73]; 
0x0015d51f: jno 0x15d51a; call dword ptr [eax - 0x73]; and dword ptr [esi + 0x50fff971], 0xffffffe8; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0015d526: jno 0x15d521; call dword ptr [eax - 0x18]; 
0x0015d526: jno 0x15d521; call dword ptr [eax - 0x18]; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0015dea8: jno 0x15dea3; call dword ptr [eax + 0x6a]; 
0x0015df18: jno 0x15df13; call dword ptr [eax + 0x6a]; 
0x0015df4d: jno 0x15df48; call dword ptr [eax + 0x6a]; 
0x0015df7e: jno 0x15df79; call dword ptr [eax + 0x6a]; 
0x0015dfaf: jno 0x15dfaa; call dword ptr [eax + 0x6a]; 
0x0015dfe0: jno 0x15dfdb; call dword ptr [eax + 0x6a]; 
0x0015e011: jno 0x15e00c; call dword ptr [eax + 0x6a]; 
0x0015ed84: jno 0x15ed7f; call dword ptr [eax + 0x6a]; 
0x0015edd8: jno 0x15edd3; jmp dword ptr [ebp - 0x75]; 
0x0015ee9c: jno 0x15ee97; call dword ptr [eax - 0x18]; 
0x0015ef72: jno 0x15ef6d; call dword ptr [eax + 0x55]; 
0x0015f204: jno 0x15f1ff; call dword ptr [eax + 0x6a]; 
0x0015f258: jno 0x15f253; jmp dword ptr [ebp - 0x75]; 
0x0015f574: jno 0x15f56f; call dword ptr [eax + 0x6a]; 
0x0015f5c8: jno 0x15f5c3; jmp dword ptr [ebp - 0x75]; 
0x0015f674: jno 0x15f66f; call dword ptr [eax - 0x18]; 
0x0016126c: jno 0x161267; call dword ptr [eax + 0x57]; 
0x001619f0: jno 0x1619eb; call dword ptr [eax + 0x51]; 
0x001623ad: jno 0x1623a8; call dword ptr [eax + 0x57]; 
0x00162ff0: jno 0x162feb; call dword ptr [eax + 0x51]; 
0x001637be: jno 0x1637b9; call dword ptr [eax - 0x18]; 
0x00171ba6: jno 0x171b2b; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00172b4b: jno 0x172b46; call dword ptr [eax + 0x6a]; 
0x0017445d: jno 0x174458; call dword ptr [eax + 0x6a]; 
0x0017c957: jno 0x17c954; jmp dword ptr [esi - 0x70]; 
0x0019e28b: jno 0x19e28f; add byte ptr [eax], al; xor eax, eax; ret; 
0x00031ad1: jno 0x31b0e; stc; call dword ptr [eax - 0x18]; 
0x0003ecd4: jno 0x3ed14; stc; call dword ptr [eax - 0x18]; 
0x000d0790: jno 0xd071b; ret 0xfac1; 
0x001249bb: jnp 0x124981; adc byte ptr [eax], al; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001266ae: jnp 0x1266b0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00155d11: jnp 0x155ce7; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0015bfc1: jnp 0x15bfc0; jmp dword ptr [esi - 0x70]; 
0x0016cf7f: jnp 0x16cf6d; call dword ptr [eax - 0x73]; 
0x0016dcd3: jnp 0x16dc56; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0019e654: jnp 0x19e5e3; inc ecx; push es; ret; 
0x000286ed: jnp 0x286e8; call dword ptr [eax - 0x73]; 
0x0002871f: jnp 0x2871a; call dword ptr [eax - 0x73]; 
0x0002879f: jnp 0x2879a; call dword ptr [eax + 0x68]; 
0x000287c7: jnp 0x287c2; call dword ptr [eax - 0x73]; 
0x000287ea: jnp 0x287e5; call dword ptr [eax + 0x68]; 
0x000505f9: jnp 0x505fc; add byte ptr [ecx - 0x7c228b26], cl; ret 0x8001; 
0x00051f6c: jnp 0x51f72; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000566a1: jnp 0x56679; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000ba450: jnp 0x5b17c89a; pop esi; ret; 
0x000ba4d4: jnp 0x5b17c91e; pop esi; ret; 
0x000ba614: jnp 0x5b17ca5e; pop esi; ret; 
0x0005ce51: jnp 0x5ce94; stc; call dword ptr [eax + 0x6a]; 
0x0005cf5f: jnp 0x5cf5e; call dword ptr [eax - 0x73]; 
0x000b6fcd: jnp 0x5e139417; ret; 
0x000b7051: jnp 0x5e13949b; ret; 
0x000b7151: jnp 0x5e13959b; ret; 
0x000889ba: jnp 0x88940; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x00092380: jnp 0x9238a; dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092d13: jnp 0x92d1d; dec ecx; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009f115: jnp 0x9f0bf; pcmpeqw mm1, qword ptr [ecx - 0x77]; ret; 
0x000a5f32: jnp 0xa5f38; cmove eax, edx; ret; 
0x000be502: jnp 0xbe508; cmove eax, edx; ret; 
0x000be562: jnp 0xbe568; cmove eax, edx; ret; 
0x000bf4d2: jnp 0xbf4d8; cmove eax, edx; ret; 
0x000c0152: jnp 0xc0158; cmove eax, edx; ret; 
0x000ea3df: jnp 0xea3cc; call dword ptr [eax + 0x6a]; 
0x000f5bf4: jnp 0xf5bf2; dec dword ptr [ebx - 0x76e3dbb4]; ret 0x448b; 
0x0008c980: jnp 0xfee94c87; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0011ec4d: jns 0x11ec52; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0012150b: jns 0x12150d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130b4f: jns 0x130bb9; stc; call dword ptr [eax + 0x6a]; 
0x00131d91: jns 0x131d9b; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00135b86: jns 0x135b8a; add esi, dword ptr [eax + edi*2 - 0x7d]; ret 0x8303; 
0x00147f03: jns 0x147ea4; hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00156b32: jns 0x156ba3; stc; call dword ptr [eax - 0x18]; 
0x00156b32: jns 0x156ba3; stc; call dword ptr [eax - 0x18]; inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00156ce5: jns 0x156d56; stc; call dword ptr [eax - 0x73]; 
0x0016c1c2: jns 0x16c1c0; jmp dword ptr [esi - 0x70]; 
0x0016d088: jns 0x16d075; dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x0016fbb0: jns 0x16fc1a; stc; call dword ptr [eax + 0x6a]; 
0x00170205: jns 0x17026f; stc; call dword ptr [eax + 0x6a]; 
0x00183d5f: jns 0x183d59; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x001898a1: jns 0x1898ee; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d9a1: jns 0x18d9b2; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f3e1: jns 0x18f3dc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002a74e: jns 0x2a749; call dword ptr [eax - 0x73]; 
0x0002a9c6: jns 0x2a9c1; call dword ptr [eax - 0x73]; 
0x0002aa2e: jns 0x2aa29; call dword ptr [eax + 0x68]; 
0x0002aa51: jns 0x2aa4c; call dword ptr [eax + 0x68]; 
0x0002aae1: jns 0x2aadc; call dword ptr [eax - 0x73]; 
0x0002b0b8: jns 0x2b0b3; call dword ptr [eax - 0x73]; 
0x0002b1e2: jns 0x2b1dd; call dword ptr [eax - 0x73]; 
0x0002b6fd: jns 0x2b6f8; call dword ptr [eax + 0x68]; 
0x0002b773: jns 0x2b76e; call dword ptr [eax - 0x73]; 
0x0002b7b9: jns 0x2b7b4; call dword ptr [eax + 0x68]; 
0x0002bee2: jns 0x2bedd; call dword ptr [eax - 0x73]; 
0x0002c0c4: jns 0x2c0bf; call dword ptr [eax - 0x73]; 
0x0002c3a3: jns 0x2c39e; call dword ptr [eax - 0x73]; 
0x0002c49e: jns 0x2c499; call dword ptr [eax + 0x68]; 
0x0002c4c1: jns 0x2c4bc; call dword ptr [eax + 0x68]; 
0x0002cc3b: jns 0x2cc36; call dword ptr [eax - 0x73]; 
0x0002cd12: jns 0x2cd0d; call dword ptr [eax - 0x73]; 
0x0002cd8b: jns 0x2cd86; call dword ptr [eax + 0x68]; 
0x0002cdd6: jns 0x2cdd1; call dword ptr [eax - 0x73]; 
0x0002ce3f: jns 0x2ce3a; call dword ptr [eax + 0x68]; 
0x0002d5b1: jns 0x2d5ac; call dword ptr [eax - 0x73]; 
0x0002d88f: jns 0x2d88a; call dword ptr [eax - 0x73]; 
0x0002d8b2: jns 0x2d8ad; call dword ptr [eax - 0x73]; 
0x0002d8d5: jns 0x2d8d0; call dword ptr [eax + 0x68]; 
0x0002d9a0: jns 0x2d99b; call dword ptr [eax + 0x68]; 
0x0002dfba: jns 0x2dfb5; call dword ptr [eax - 0x73]; 
0x0002e0dc: jns 0x2e0d7; call dword ptr [eax - 0x73]; 
0x0002e156: jns 0x2e151; call dword ptr [eax + 0x68]; 
0x0002e1a1: jns 0x2e19c; call dword ptr [eax + 0x68]; 
0x0002e1d6: jns 0x2e1d1; call dword ptr [eax - 0x73]; 
0x000b4876: jns 0x47984bd3; pop es; pop edi; pop esi; pop ebx; ret; 
0x0005750b: jns 0x574d3; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x000b31a6: jns 0x5e6a3503; pop ebx; ret; 
0x0017f010: jns 0x5f764bee; ret; 
0x00151c98: jns 0x74a2e06e; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0007d116: jns 0x7d0a3; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x00090106: jns 0x9028f; xor ecx, ecx; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0009a126: jns 0x9a12c; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009a19b: jns 0x9a1a1; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009a8c3: jns 0x9a92d; stc; call dword ptr [eax - 0x18]; 
0x000a093e: jns 0xa09a8; stc; call dword ptr [eax + 0x6a]; 
0x000adb4a: jns 0xadb59; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000adba0: jns 0xadbac; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b201a: jns 0xb2029; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4383: jns 0xb438e; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000df8ca: jns 0xdf940; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000f30a9: jns 0xf3098; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010231b: jo 0x102315; jmp dword ptr [esi - 0x70]; 
0x001054ac: jo 0x105496; bnd call dword ptr [ebp + 0x57]; 
0x0010bd3c: jo 0x10bd99; pop esi; pop edi; ret; 
0x0010c59d: jo 0x10c52c; push esp; and al, 8; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x0010c6c6: jo 0x10c70f; adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00111e3e: jo 0x111df1; stc; call dword ptr [eax - 0x73]; 
0x00111e6e: jo 0x111e21; stc; call dword ptr [eax - 0x73]; 
0x00112f5e: jo 0x112f11; stc; call dword ptr [eax - 0x73]; 
0x00112f8e: jo 0x112f41; stc; call dword ptr [eax - 0x73]; 
0x0011408e: jo 0x114041; stc; call dword ptr [eax - 0x73]; 
0x001140be: jo 0x114071; stc; call dword ptr [eax - 0x73]; 
0x00116cfd: jo 0x116c8c; push esp; and al, 8; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00119c8c: jo 0x119c17; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0011d1ac: jo 0x11d20a; stc; call dword ptr [eax + 0x55]; 
0x00124ff5: jo 0x125052; pop esi; pop edi; ret; 
0x00125275: jo 0x1252d2; pop esi; pop edi; ret; 
0x001265f5: jo 0x126652; pop esi; pop edi; ret; 
0x00127941: jo 0x12799e; pop esi; pop edi; ret; 
0x0012a8ba: jo 0x12a903; add byte ptr [eax], al; jae 0x12a8cb; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x00135cc2: jo 0x135c4d; ret; 
0x0014201c: jo 0x142057; ret 0x840f; 
0x00142740: jo 0x14277b; ret 0x840f; 
0x00142a09: jo 0x142a44; ret 0x840f; 
0x00146565: jo 0x14656a; add byte ptr [ecx + 0xea8ccc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00146771: jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x001483c4: jo 0x1483b7; call dword ptr [esi + 0x50]; 
0x0014faad: jo 0x14fa71; stc; call dword ptr [eax - 0x18]; 
0x00153ada: jo 0x153a61; ror byte ptr [edi], cl; mov al, dh; add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x001588e0: jo 0x1588db; call dword ptr [eax - 0x18]; 
0x0015901c: jo 0x158fbf; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x001590c2: jo 0x1590bd; call dword ptr [ebp - 0x73]; 
0x00159533: jo 0x15952e; call dword ptr [eax - 0x18]; 
0x00159533: jo 0x15952e; call dword ptr [eax - 0x18]; inc esp; or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00159605: jo 0x159600; call dword ptr [eax - 0x18]; 
0x001596e6: jo 0x1596e1; call dword ptr [eax - 0x73]; 
0x001596ed: jo 0x1596e8; call dword ptr [eax - 0x18]; 
0x00159cb3: jo 0x159cae; call dword ptr [eax - 0x18]; 
0x00159d85: jo 0x159d80; call dword ptr [eax - 0x18]; 
0x00159e54: jo 0x159e4f; call dword ptr [eax - 0x73]; 
0x00159e5b: jo 0x159e56; call dword ptr [eax - 0x18]; 
0x0015a894: jo 0x15a88f; call dword ptr [eax + 0x6a]; 
0x0015a9fc: jo 0x15a9f7; call dword ptr [eax - 0x18]; 
0x0015aac5: jo 0x15aac0; call dword ptr [eax - 0x18]; 
0x0015ab8f: jo 0x15ab8a; call dword ptr [eax - 0x73]; 
0x0015ab96: jo 0x15ab91; call dword ptr [eax - 0x18]; 
0x0015b6b6: jo 0x15b6b1; call dword ptr [ecx - 1]; 
0x00163a8d: jo 0x163aa3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001664bf: jo 0x1664ed; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x0016d513: jo 0x16d508; call dword ptr [edx - 0x73]; 
0x0016e31a: jo 0x16e31d; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00172172: jo 0x172180; call 0x7ef80; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00175108: jo 0x1750d3; stc; call dword ptr [eax - 0x73]; 
0x001751f8: jo 0x175223; ret; 
0x00186876: jo 0x186838; add bh, dh; ret 0xf; 
0x001869b3: jo 0x186936; ret 0x80; 
0x00186a1a: jo 0x18699d; ret 0x80; 
0x00186a6c: jo 0x1869ef; ret 0x80; 
0x00186ef6: jo 0x186eb8; add bh, dh; ret 0xf; 
0x001892aa: jo 0x1892fd; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a82a: jo 0x18a86a; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c5aa: jo 0x18c5cf; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d0aa: jo 0x18d0c4; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f4ea: jo 0x18f4e4; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019286f: jo 0x192880; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a07d1: jo 0x1a075c; ret 0x6c8d; 
0x001a0ae5: jo 0x1a0a74; je 0x1a0b0d; jl 0x1a0a74; ret; 
0x001a175b: jo 0x1a16de; out 0xff, eax; push edi; dec dword ptr [ecx - 0x7683db84]; ret 0xe283; 
0x001a206b: jo 0x1a2064; ret; 
0x001a2142: jo 0x1a210a; inc esp; and al, 0x18; add cl, ch; ret; 
0x001a248e: jo 0x1a2487; ret 0; 
0x0002a2ad: jo 0x2a2ff; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000446cc: jo 0x446d7; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00045325: jo 0x452b0; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x000485b4: jo 0x4853f; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x0004bec5: jo 0x4be50; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x0004d2fc: jo 0x4d287; ret; 
0x00053765: jo 0x536f0; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x0008195d: jo 0x81973; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00081a7d: jo 0x81a93; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00084034: jo 0x8406e; call 0x1156a0; add esp, 0x18; pop ebx; ret; 
0x00087a9f: jo 0x87aef; stc; call dword ptr [ecx + 0x52]; 
0x000889a6: jo 0x889aa; add byte ptr [eax], al; ret; 
0x0009263f: jo 0x925ca; inc ebp; or al, 0x89; sal dh, 1; ret 0x7501; 
0x00096017: jo 0x9601d; call dword ptr [eax]; 
0x00096014: jo 0x96022; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0009a464: jo 0x9a3e9; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009a883: jo 0x9a888; add byte ptr [eax], al; ret; 
0x000a9233: jo 0xa9251; pop ebx; pop esi; ret; 
0x000b2bdd: jo 0xb2b89; or al, 0; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6e27: jo 0xb6e2b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6e43: jo 0xb6e49; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6e95: jo 0xb6e9f; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6f89: jo 0xb6f9b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b700f: jo 0xb7025; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7093: jo 0xb70ad; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba1dd: jo 0xba213; or al, 0; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba25d: jo 0xba261; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba289: jo 0xba28f; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba30b: jo 0xba315; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba40f: jo 0xba421; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba495: jo 0xba4ab; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba519: jo 0xba533; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bfa78: jo 0xbf9fd; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d2ed2: jo 0xd2ed8; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d2f1f: jo 0xd2f25; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d2f72: jo 0xd2f78; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d2fbf: jo 0xd2fc5; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d3aa1: jo 0xd3a2e; inc esp; and al, 0x68; call eax; 
0x000d502d: jo 0xd5033; pop ebx; pop esi; pop edi; ret; 
0x000e0ca4: jo 0xe0d01; pop esi; pop edi; ret; 
0x000e1d19: jo 0xe1d76; pop esi; pop edi; ret; 
0x000f51d4: jo 0xf522d; stc; call dword ptr [eax + 0x55]; 
0x00101810: jp 0x10180a; dec dword ptr [edi]; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x00104e27: jp 0x104e29; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001099d1: jp 0x1099d4; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x0010bc8c: jp 0x10bcb2; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00111e81: jp 0x111edc; stc; call dword ptr [eax - 0x18]; 
0x00112fa1: jp 0x112ffc; stc; call dword ptr [eax - 0x18]; 
0x001140d1: jp 0x11412c; stc; call dword ptr [eax - 0x18]; 
0x001186a3: jp 0x1186e1; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0011d140: jp 0x11d19d; stc; call dword ptr [eax + 0x55]; 
0x0011ef7b: jp 0x11ef80; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x001236a2: jp 0x1236aa; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x0012a305: jp 0x12a36b; stc; call dword ptr [eax + 0x57]; 
0x0014fe71: jp 0x14fee1; stc; call dword ptr [ecx - 0x17]; 
0x001654f2: jp 0x1654ae; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016f393: jp 0x16f394; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x001901e0: jp 0x1901cd; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019f0ca: jp 0x19f0d2; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019f12d: jp 0x19f13a; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0019f165: jp 0x19f176; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00025e11: jp 0x25e4b; stc; call dword ptr [eax - 0x18]; 
0x00028d40: jp 0x28d3b; call dword ptr [eax - 0x73]; 
0x00028dd7: jp 0x28dd2; call dword ptr [eax - 0x73]; 
0x00028ecf: jp 0x28eca; call dword ptr [eax - 0x73]; 
0x00028ef2: jp 0x28eed; call dword ptr [eax + 0x68]; 
0x00028f15: jp 0x28f10; call dword ptr [eax + 0x68]; 
0x0002937b: jp 0x29376; call dword ptr [eax - 0x73]; 
0x000293ad: jp 0x293a8; call dword ptr [eax - 0x73]; 
0x00029431: jp 0x2942c; call dword ptr [eax - 0x73]; 
0x00029454: jp 0x2944f; call dword ptr [eax + 0x68]; 
0x00029477: jp 0x29472; call dword ptr [eax + 0x68]; 
0x000299cf: jp 0x299ca; call dword ptr [eax - 0x73]; 
0x00029a45: jp 0x29a40; call dword ptr [eax - 0x73]; 
0x00029b08: jp 0x29b03; call dword ptr [eax - 0x73]; 
0x00029b53: jp 0x29b4e; call dword ptr [eax + 0x68]; 
0x00029b76: jp 0x29b71; call dword ptr [eax + 0x68]; 
0x00029ef3: jp 0x29eee; call dword ptr [eax - 0x73]; 
0x0002a03c: jp 0x2a037; call dword ptr [eax - 0x73]; 
0x0002a07c: jp 0x2a077; call dword ptr [eax - 0x73]; 
0x0003a7f4: jp 0x3a800; jne 0x3a800; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003ab13: jp 0x3ab20; jne 0x3ab20; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003adaf: jp 0x3adc0; jne 0x3adc0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0006a2a6: jp 0x6a239; jecxz 0x6a2a9; jmp eax; 
0x0008088c: jp 0x8088d; jmp dword ptr [ecx]; 
0x000993fb: jp 0x99416; add bh, al; xor byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; ret; 
0x000b41d3: jp 0xb4169; or al, 0; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6741: jp 0xb6744; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b6751: jp 0xb6755; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b6781: jp 0xb6787; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000b67f1: jp 0xb67fb; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b9955: jp 0xb995f; mov eax, edi; pop ebx; pop edi; ret; 
0x000b99b2: jp 0xb99c4; mov eax, edi; pop ebx; pop edi; ret; 
0x000bdd22: jp 0xbdd78; stc; call dword ptr [eax - 0x18]; 
0x000be0e5: jp 0xbe13b; stc; call dword ptr [eax - 0x18]; 
0x000e8981: jp 0xe8984; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x000eb301: jp 0xeb304; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x000ec061: jp 0xec064; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x000ee961: jp 0xee964; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x000ef6b1: jp 0xef6b4; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x0010044c: js 0x100487; ret 0x4f0f; 
0x00103f9d: js 0x103fa3; add byte ptr [edi], cl; mov ds, word ptr [edx]; add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00109ba0: js 0x109bfd; ret; 
0x00118aae: js 0x118ab8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00118c6e: js 0x118bfd; push esp; and al, 0x28; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00119aec: js 0x119af8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011b49a: js 0x11b49f; add byte ptr [eax], al; pop ebx; ret; 
0x00123f16: js 0x123ea3; and byte ptr [eax - 0x77000000], 0x44; and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012436c: js 0x12436e; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x00125342: js 0x125345; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001279f6: js 0x127a00; add esp, 8; pop ebx; ret; 
0x00135b8a: js 0x135b0f; ret 0x8303; 
0x00137d09: js 0x137d0d; add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0013bb8f: js 0x13bb9c; mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x001407ae: js 0x1407b1; sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x00140d15: js 0x140d81; stc; call dword ptr [eax - 0x18]; 
0x00141d12: js 0x141cff; ret 0x768d; 
0x001492ff: js 0x1492c1; stc; call dword ptr [eax - 0x73]; 
0x0014bcf6: js 0x14bd00; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015b8c5: js 0x15b8b3; jmp dword ptr [ebp - 0x75]; 
0x0015d714: js 0x15d770; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0016b8b6: js 0x16b8a3; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0016d31f: js 0x16d2a2; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0016e5b7: js 0x16e53c; ret 0x8901; 
0x0016f3bd: js 0x16f3be; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00170174: js 0x1701af; cld; call dword ptr [eax - 0x73]; 
0x0017703d: js 0x177048; add esp, 4; pop ebx; pop esi; ret; 
0x0017b7ce: js 0x17b753; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017fe95: js 0x17fea0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00024ec5: js 0x24e4e; adc eax, 0xbf6b0500; and byte ptr [eax], al; lea eax, [eax - 0x681e8]; ret; 
0x0002e17e: js 0x2e179; call dword ptr [eax - 0x73]; 
0x0002e1b3: js 0x2e1ae; call dword ptr [eax - 0x73]; 
0x0002e1f9: js 0x2e1f4; call dword ptr [eax - 0x73]; 
0x0002e972: js 0x2e96d; call dword ptr [eax - 0x73]; 
0x0002ec4e: js 0x2ec49; call dword ptr [eax - 0x73]; 
0x0002ec89: js 0x2ec84; call dword ptr [eax - 0x73]; 
0x0002ecac: js 0x2eca7; call dword ptr [eax + 0x68]; 
0x0002eccf: js 0x2ecca; call dword ptr [eax - 0x73]; 
0x0002ecf2: js 0x2eced; call dword ptr [eax - 0x73]; 
0x0002ed1a: js 0x2ed15; call dword ptr [eax - 0x73]; 
0x0002ed68: js 0x2ed63; call dword ptr [eax + 0x68]; 
0x0002ed7d: js 0x2ed78; call dword ptr [eax - 0x73]; 
0x0002eda0: js 0x2ed9b; call dword ptr [eax - 0x73]; 
0x0002edc3: js 0x2edbe; call dword ptr [eax - 0x73]; 
0x0002f1c2: js 0x2f214; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x00032dd4: js 0x32dea; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00033a15: js 0x339d7; test edx, edx; je 0x33a25; mov dword ptr [esp + 0x14], eax; call edx; 
0x0003bf35: js 0x3bf3f; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003bf85: js 0x3bf8f; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000b4808: js 0x47984a65; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00056e07: js 0x56d8c; call dword ptr [eax]; 
0x0005837b: js 0x58305; stc; call dword ptr [eax - 0x18]; 
0x00058427: js 0x583b1; stc; call dword ptr [eax - 0x18]; 
0x00058556: js 0x584e0; stc; call dword ptr [eax - 0x18]; 
0x000587f6: js 0x58780; stc; call dword ptr [eax - 0x18]; 
0x0005beae: js 0x5bf0b; ret; 
0x0005d29a: js 0x5d299; dec dword ptr [ecx - 0x7c72dbfc]; xchg edx, eax; je 0x5d29e; call dword ptr [ebp + 0x56]; 
0x0005dd8b: js 0x5dde8; ret; 
0x000b3168: js 0x5e6a33c5; pop ebx; ret; 
0x000b3186: js 0x5e6a35e3; pop ebx; ret; 
0x0005f585: js 0x5f510; ret 0xc689; 
0x0005f648: js 0x5f649; jmp ptr [ecx]; ret; 
0x00073ce7: js 0x73c71; stc; call dword ptr [eax - 0x18]; 
0x00073ce7: js 0x73c71; stc; call dword ptr [eax - 0x18]; das; add ah, bh; jmp dword ptr [esi - 0x70]; 
0x00073d94: js 0x73d1e; stc; call dword ptr [eax - 0x18]; 
0x00073d94: js 0x73d1e; stc; call dword ptr [eax - 0x18]; cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00073ecd: js 0x73e57; stc; call dword ptr [eax - 0x18]; 
0x000740a4: js 0x7402e; stc; call dword ptr [eax - 0x18]; 
0x000740a4: js 0x7402e; stc; call dword ptr [eax - 0x18]; jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x0007ea80: js 0x7ea88; ret; 
0x00081414: js 0x81433; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00085d47: js 0x85d58; add byte ptr [ecx + 0x1ab0eac3], al; add byte ptr [ebx - 0x7c72eb14], al; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x00088811: js 0x88813; add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00088848: js 0x8884a; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00088851: js 0x88853; add byte ptr [eax], al; ret; 
0x000889e6: js 0x889ea; add byte ptr [eax], al; ret; 
0x00089254: js 0x89256; add byte ptr [eax], al; pop ebx; ret; 
0x000895c7: js 0x89552; ret 0xca83; 
0x00093f25: js 0x93f30; mov dword ptr [edx + 0x3ad4], eax; xor eax, eax; ret; 
0x0009691f: js 0x96920; jmp dword ptr [esi - 0x70]; 
0x00098afa: js 0x98a94; stc; call dword ptr [eax + 0x68]; 
0x00098b1c: js 0x98ab6; stc; call dword ptr [eax + 0x68]; 
0x00098b5d: js 0x98af7; stc; call dword ptr [eax - 0x73]; 
0x00098fda: js 0x98f74; stc; call dword ptr [eax + 0x68]; 
0x00098ffc: js 0x98f96; stc; call dword ptr [eax + 0x68]; 
0x0009903d: js 0x98fd7; stc; call dword ptr [eax - 0x73]; 
0x0009a03c: js 0x9a068; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0009e3a5: js 0x9e34a; stc; call dword ptr [eax - 0x18]; 
0x000ba684: js 0xba6c6; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bf9ba: js 0xbf967; stc; call dword ptr [eax - 0x18]; 
0x000d1e27: js 0xd1e88; pop esi; ret; 
0x000d2f24: js 0xd2f4b; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d3a63: js 0xd3a8e; ret 0xc269; 
0x000e23b8: js 0xe23ba; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e23b5: js 0xe241f; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000e341d: js 0xe3480; mov eax, 0x166; lea ecx, [ebp - 0x6c3a6]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x000e550f: js 0xe5512; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000e8b50: js 0xe8bad; ret; 
0x000eb4d0: js 0xeb52d; ret; 
0x000ec230: js 0xec28d; ret; 
0x000eeb30: js 0xeeb8d; ret; 
0x000ef880: js 0xef8dd; ret; 
0x000f28b1: js 0xf28e4; rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x000f2bea: js 0xf2bf0; ret; 
0x00197b1d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00170a6b: lahf; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0014c49f: lahf; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000b128d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001341f6: lahf; clc; jmp dword ptr [esi - 0x70]; 
0x00079d09: lahf; cli; jmp dword ptr [esi - 0x70]; 
0x0011a5ab: lahf; cmc; jmp dword ptr [esi - 0x70]; 
0x00147f04: lahf; hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00141efd: lahf; idiv edi; inc dword ptr [ebx - 0x7872f714]; out 0x38, eax; stc; call dword ptr [eax - 0x73]; 
0x0019043b: lahf; jmp 0x190441; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000b3689: lahf; or al, 0; add ecx, 0x10c744; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3676: lahf; or al, 0; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b365a: lahf; or al, 0; add ecx, 0x10c773; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b445d: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00150505: lahf; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00185b9e: lahf; pop ecx; stc; call dword ptr [eax + 0x53]; 
0x00152753: lahf; push eax; stc; call dword ptr [eax + 0x56]; 
0x0014567a: lahf; ret 0xd009; 
0x0010375d: lahf; ret 0xe8c1; 
0x0007f9ad: lahf; ret 3; 
0x0004dea1: lahf; ret; 
0x0009d4a1: lahf; stc; call dword ptr [eax - 0x18]; 
0x00159b91: lahf; std; jmp dword ptr [esi - 0x70]; 
0x00092384: lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092f9a: lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x0016b7f2: lcall 0x18c4, 0x83ffeb79; pop ebx; ret; 
0x000e2ef2: lcall 0x1cc4, 0x83000004; ret; 
0x00125ed0: lcall 0x2454, 0x8b000001; xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00133ae2: lcall 0x2cc4, 0x83fff452; ret; 
0x00034597: lcall 0x518b, 0x90; sub al, 0x81; ret 0x200; 
0x000f9e74: lcall 0x5e5b, 0xf889ffff; pop edi; ret; 
0x0016a05e: lcall 0x73e6, 0x838dfffc; stc; call dword ptr [edi + 0x6a]; 
0x0018989b: lcall 0x79c3, 0x81ffff3d; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00097d52: lcall 0xaf, 0xb8fffa4d; add byte ptr [eax], al; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bbb8d: lcall 0xc031, 0x5e000000; pop ebx; ret; 
0x0008964a: lcall 0xeb10, 0xc483fff9; ret 0xb68d; 
0x00092d17: lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001a2da8: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0016b53a: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x000db257: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000de759: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x000dc093: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000d9bbd: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000d468f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000d7922: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000de3fc: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd729; 
0x000db1d1: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x000d46d8: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00124fd0: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125061: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001354c4: lds eax, ptr [ebp - 0x747bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x7172fb14], al; test byte ptr [edi - 7], ah; dec dword ptr [ebp - 0x698707a]; call dword ptr [ecx - 0x77]; 
0x0003e6ea: lds eax, ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000a0bdf: lds eax, ptr [ebx - 0x127aef3c]; jne 0xa0b39; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00152ab4: lds eax, ptr [ebx - 0x7bf00008]; ret 0xfffc; 
0x0008f957: lds eax, ptr [ebx - 6]; dec dword ptr [ebp - 0x683937f]; call dword ptr [eax - 0x73]; 
0x000409dd: lds eax, ptr [ebx]; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0xa000000], ecx; ret 0xf03; 
0x0019b4e7: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x00040b23: lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x20; call eax; 
0x00024834: lds ebp, ptr [eax - 7]; call dword ptr [eax - 1]; 
0x0009c177: lds ebp, ptr [ecx]; ret 0x4589; 
0x0012cbcf: lds ebp, ptr [ecx]; ret 0x6c01; 
0x00164acb: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0003d839: lds ebx, ptr [ebx + 0x5e]; mov eax, ebp; pop edi; pop ebp; ret; 
0x00033117: lds ebx, ptr [esi]; fstp qword ptr [edi]; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000b4d88: lds ecx, ptr [eax - 0x3e7efff4]; movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009936c: lds ecx, ptr [ebp - 0x197d037d]; call dword ptr [eax + 0x56]; 
0x00104d99: lds ecx, ptr [ebp - 0x64f977d]; call dword ptr [eax - 0x73]; 
0x000c15e8: lds ecx, ptr [ebx + 0x35ba2404]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x850f; 
0x00055fa1: lds ecx, ptr [ebx - 0x365f7b]; dec dword ptr [ecx - 0x36477b]; dec dword ptr [ebx - 0x364f7b]; jmp ptr [ecx]; ret; 
0x00099ba9: lds ecx, ptr [ebx - 0x74b3db8c]; or al, 0x24; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf1: lds ecx, ptr [ebx - 0x74b3db8c]; or al, 0x24; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000998da: lds ecx, ptr [ebx - 0x74f3dbb4]; je 0x99906; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a5678: lds ecx, ptr [edi]; xchg esp, eax; ret 0xc739; 
0x00124b2b: lds ecx, ptr [edx]; ret; 
0x0003d101: lds edi, ptr [eax + 0x1a5]; call dword ptr gs:[0x10]; 
0x0003d0b1: lds edi, ptr [eax + 0xb1]; call dword ptr gs:[0x10]; 
0x0009aff7: lds edi, ptr [ecx]; ret; 
0x00127ffb: lds edi, ptr [edx]; mov ss, word ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0002755d: lds edx, ptr [eax]; add byte ptr [ebp - 0x6813779], cl; call dword ptr [eax - 0x73]; 
0x000b3774: lds edx, ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0010adf7: lds edx, ptr [edi - 0x3b7cffff]; adc byte ptr [eax + eax*8 - 0x137c1f8b], al; or al, 0x8d; xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0015dcf7: lds esi, ptr [esi - 0x3b7c000e]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x0019ee9b: lea eax, [eax + 0x10]; test edx, edx; jne 0x19eeb0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000328ab: lea eax, [eax + 0x11ac]; ret; 
0x0008f9f4: lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x00093dd1: lea eax, [eax + 0x3b0c]; push eax; call 0x8a290; add esp, 0x1c; ret; 
0x0019eff5: lea eax, [eax + 0xa]; pop edi; ret; 
0x0019ef4b: lea eax, [eax + 0xb]; pop edi; ret; 
0x0019f005: lea eax, [eax + 0xc]; pop edi; ret; 
0x0019f015: lea eax, [eax + 0xd]; pop edi; ret; 
0x0019f025: lea eax, [eax + 0xe]; pop edi; ret; 
0x0019ef74: lea eax, [eax + 0xf]; pop edi; ret; 
0x0019ef89: lea eax, [eax + 1]; pop edi; ret; 
0x0019ef99: lea eax, [eax + 2]; pop edi; ret; 
0x0019eee1: lea eax, [eax + 3]; pop edi; ret; 
0x0019efa9: lea eax, [eax + 4]; pop edi; ret; 
0x0019efb5: lea eax, [eax + 5]; pop edi; ret; 
0x0019efc5: lea eax, [eax + 6]; pop edi; ret; 
0x0019ef14: lea eax, [eax + 7]; pop edi; ret; 
0x0019efd5: lea eax, [eax + 8]; pop edi; ret; 
0x0019efe5: lea eax, [eax + 9]; pop edi; ret; 
0x000962ec: lea eax, [eax + eax + 2]; ret; 
0x00094f12: lea eax, [eax + eax - 1]; pop edi; pop ebp; ret; 
0x00094f50: lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x000f28f7: lea eax, [eax + eax - 1]; ret; 
0x0005064b: lea eax, [eax + eax*8 + 6]; call 0x50610; jmp eax; 
0x00051e20: lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000be124: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000bb023: lea eax, [eax + ecx + 0x10]; ret; 
0x000bb033: lea eax, [eax + ecx + 0x20]; ret; 
0x000bb043: lea eax, [eax + ecx + 0x30]; ret; 
0x0018d996: lea eax, [eax + ecx]; pop edi; call 0x17d639; add ebx, 0x40f79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b896: lea eax, [eax + ecx]; pop edi; call 0x17d639; add ebx, 0x42df9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189896: lea eax, [eax + ecx]; pop edi; call 0x17d639; add ebx, 0x44b79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bad73: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bad83: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000bad53: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bb4d3: lea eax, [eax + edx + 0x10]; ret; 
0x000bb4e3: lea eax, [eax + edx + 0x20]; ret; 
0x0016577b: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0017c989: lea eax, [eax + edx + 0x5c]; ret; 
0x000bb4b3: lea eax, [eax + edx - 0x10]; ret; 
0x000bf4ca: lea eax, [eax - 0x15eef4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000be55a: lea eax, [eax - 0x15fc34]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x0011c121: lea eax, [eax - 0x64cac]; call 0x11be10; test eax, eax; je 0x11c138; add esp, 0xc; ret; 
0x0011c0d1: lea eax, [eax - 0x64ccc]; call 0x11be10; test eax, eax; je 0x11c0e8; add esp, 0xc; ret; 
0x00024ece: lea eax, [eax - 0x681e8]; ret; 
0x00024eee: lea eax, [eax - 0x681f0]; ret; 
0x00024ea6: lea eax, [eax - 0x68994]; push eax; push 1; call 0x117b80; add esp, 0x1c; ret; 
0x00178bf5: lea eax, [eax - 0x689d7]; push eax; call 0x115980; add esp, 0x1c; ret; 
0x00162de1: lea eax, [eax - 0x68d10]; push eax; push 0xa; call 0x14bb50; add esp, 0x1c; ret; 
0x00162b11: lea eax, [eax - 0x68d1d]; push eax; push 9; call 0x14bb50; add esp, 0x1c; ret; 
0x00162721: lea eax, [eax - 0x68d2b]; push eax; push 8; call 0x14bb50; add esp, 0x1c; ret; 
0x00161d41: lea eax, [eax - 0x68d46]; push eax; push 5; call 0x14bb50; add esp, 0x1c; ret; 
0x001616f1: lea eax, [eax - 0x68d54]; push eax; push 4; call 0x14bb50; add esp, 0x1c; ret; 
0x00160411: lea eax, [eax - 0x68da8]; push eax; push 3; call 0x14bb50; add esp, 0x1c; ret; 
0x0015f571: lea eax, [eax - 0x68e06]; push eax; push 2; call 0x14bb50; add esp, 0x1c; ret; 
0x0015f201: lea eax, [eax - 0x68e12]; push eax; push 1; call 0x14bb50; add esp, 0x1c; ret; 
0x0015ed81: lea eax, [eax - 0x68e1f]; push eax; push 0; call 0x14bb50; add esp, 0x1c; ret; 
0x000bf2fa: lea eax, [eax - 0x911c4]; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000c014a: lea eax, [eax - 0x91484]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000be4fa: lea eax, [eax - 0x91664]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000a610a: lea eax, [eax - 0x95c24]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a5f5a: lea eax, [eax - 0x95d24]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a505a: lea eax, [eax - 0x95e64]; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x0008e859: lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d0c12: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x000ce38a: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; call dword ptr [eax - 0x75]; 
0x0006fe7e: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0008913f: lea eax, [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000e374b: lea eax, [ebp + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e3634: lea eax, [ebp + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003faf8: lea eax, [ebx + 0x17dc]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0011ac5a: lea eax, [ebx + 0x448c]; add esp, 4; pop ebx; pop esi; ret; 
0x00163be9: lea eax, [ebx + 0xa5cc]; pop ebx; ret; 
0x0014c0f3: lea eax, [ebx + 4]; push eax; call edi; 
0x00041545: lea eax, [ebx + 6]; pop ebx; ret; 
0x0009a322: lea eax, [ebx + ebx]; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x74]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00120111: lea eax, [ebx - 1]; cmp eax, 2; jbe 0x120140; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0007b9d5: lea eax, [ebx - 1]; pop ebx; ret; 
0x000424f7: lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x0019e430: lea eax, [ecx + 0xa]; ret; 
0x0019e440: lea eax, [ecx + 0xb]; ret; 
0x0019e3bb: lea eax, [ecx + 0xc]; ret; 
0x0019e450: lea eax, [ecx + 0xd]; ret; 
0x0019e460: lea eax, [ecx + 0xe]; ret; 
0x0019e470: lea eax, [ecx + 0xf]; ret; 
0x000f3100: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0019e3c0: lea eax, [ecx + 1]; ret; 
0x0019e3d0: lea eax, [ecx + 2]; ret; 
0x0019e3e0: lea eax, [ecx + 3]; ret; 
0x0019e368: lea eax, [ecx + 4]; ret; 
0x0019e3f0: lea eax, [ecx + 5]; ret; 
0x0019e400: lea eax, [ecx + 6]; ret; 
0x0019e410: lea eax, [ecx + 7]; ret; 
0x0019e392: lea eax, [ecx + 8]; ret; 
0x0019e420: lea eax, [ecx + 9]; ret; 
0x000bb06a: lea eax, [ecx + eax + 0x10]; ret; 
0x000bb07a: lea eax, [ecx + eax + 0x20]; ret; 
0x000bb08a: lea eax, [ecx + eax + 0x30]; ret; 
0x000896b4: lea eax, [ecx + eax + 0x4000]; ret; 
0x0006a2a3: lea eax, [ecx + eax - 0x1c6e86]; jmp eax; 
0x00079ee8: lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0003cf70: lea eax, [ecx - 1]; mov dword ptr [edx + 0x1d0], eax; mov eax, ecx; ret; 
0x000b4988: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b499e: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000b49c0: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b49de: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000b49fe: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x00111a54: lea eax, [edi + 0x14]; push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00111cd0: lea eax, [edi + 0x14]; push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000b4a24: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000b4a42: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000b4a62: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b4a82: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b4aa8: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000b4aca: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b4af8: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000b4b18: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000b4b32: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b4b52: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000b4b72: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b4b92: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x001024ab: lea eax, [edi + 0x3f8c]; push eax; call 0x893c0; call dword ptr [esi]; 
0x000b4de1: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b48d0: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x0019d420: lea eax, [edi + 0xa]; pop edi; ret; 
0x000b48ee: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x0019d2e6: lea eax, [edi + 0xb]; pop edi; ret; 
0x000b490e: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x0019d440: lea eax, [edi + 0xc]; pop edi; ret; 
0x000b4932: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x0019d450: lea eax, [edi + 0xd]; pop edi; ret; 
0x000b4952: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x0019d460: lea eax, [edi + 0xe]; pop edi; ret; 
0x000b4972: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x0019d2a0: lea eax, [edi + 0xf]; pop edi; ret; 
0x000b47e4: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x0019d3a0: lea eax, [edi + 1]; pop edi; ret; 
0x000b47f6: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x0019d3b0: lea eax, [edi + 2]; pop edi; ret; 
0x000b480c: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x0019d243: lea eax, [edi + 3]; pop edi; ret; 
0x000b4824: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x0019d3d0: lea eax, [edi + 4]; pop edi; ret; 
0x000b483a: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x0019d3e0: lea eax, [edi + 5]; pop edi; ret; 
0x000b485c: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x0019d3f0: lea eax, [edi + 6]; pop edi; ret; 
0x000b487a: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0019d1fd: lea eax, [edi + 7]; pop edi; ret; 
0x000b4898: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x0019d400: lea eax, [edi + 8]; pop edi; ret; 
0x000b48ae: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x0019d410: lea eax, [edi + 9]; pop edi; ret; 
0x000badaa: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000badba: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000bac9f: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0018ecbd: lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001891e7: lea eax, [edi + eax + 0xa]; pop edi; call 0x17d639; add ebx, 0x45227; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ed4d: lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d3f7: lea eax, [edi + eax + 0xb]; pop edi; call 0x17d639; add ebx, 0x41517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189337: lea eax, [edi + eax + 0xb]; pop edi; call 0x17d639; add ebx, 0x450d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eddd: lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ee6d: lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d6b7: lea eax, [edi + eax + 0xd]; pop edi; call 0x17d639; add ebx, 0x41257; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b5d7: lea eax, [edi + eax + 0xd]; pop edi; call 0x17d639; add ebx, 0x430b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001895d7: lea eax, [edi + eax + 0xd]; pop edi; call 0x17d639; add ebx, 0x44e37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eefd: lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ef8d: lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d977: lea eax, [edi + eax + 0xf]; pop edi; call 0x17d639; add ebx, 0x40f97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b877: lea eax, [edi + eax + 0xf]; pop edi; call 0x17d639; add ebx, 0x42e17; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189877: lea eax, [edi + eax + 0xf]; pop edi; call 0x17d639; add ebx, 0x44b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e7ad: lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a617: lea eax, [edi + eax + 1]; pop edi; call 0x17d639; add ebx, 0x44077; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e83d: lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c797: lea eax, [edi + eax + 2]; pop edi; call 0x17d639; add ebx, 0x42177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a767: lea eax, [edi + eax + 2]; pop edi; call 0x17d639; add ebx, 0x43f27; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188767: lea eax, [edi + eax + 2]; pop edi; call 0x17d639; add ebx, 0x45ca7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e8cd: lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a8b7: lea eax, [edi + eax + 3]; pop edi; call 0x17d639; add ebx, 0x43dd7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001888b7: lea eax, [edi + eax + 3]; pop edi; call 0x17d639; add ebx, 0x45b57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e95d: lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e9ed: lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cbb7: lea eax, [edi + eax + 5]; pop edi; call 0x17d639; add ebx, 0x41d57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ab57: lea eax, [edi + eax + 5]; pop edi; call 0x17d639; add ebx, 0x43b37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188b57: lea eax, [edi + eax + 5]; pop edi; call 0x17d639; add ebx, 0x458b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea7d: lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb0d: lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb9d: lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cfd7: lea eax, [edi + eax + 8]; pop edi; call 0x17d639; add ebx, 0x41937; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018af47: lea eax, [edi + eax + 8]; pop edi; call 0x17d639; add ebx, 0x43747; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188f47: lea eax, [edi + eax + 8]; pop edi; call 0x17d639; add ebx, 0x454c7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ec2d: lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b097: lea eax, [edi + eax + 9]; pop edi; call 0x17d639; add ebx, 0x435f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189097: lea eax, [edi + eax + 9]; pop edi; call 0x17d639; add ebx, 0x45377; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019d7c3: lea eax, [edi - 0x10]; pop edi; ret; 
0x0019d880: lea eax, [edi - 0xa]; pop edi; ret; 
0x0019d870: lea eax, [edi - 0xb]; pop edi; ret; 
0x0019d7e8: lea eax, [edi - 0xc]; pop edi; ret; 
0x0019d860: lea eax, [edi - 0xd]; pop edi; ret; 
0x0019d850: lea eax, [edi - 0xe]; pop edi; ret; 
0x0019d840: lea eax, [edi - 0xf]; pop edi; ret; 
0x0019d8f0: lea eax, [edi - 1]; pop edi; ret; 
0x0019d8e0: lea eax, [edi - 2]; pop edi; ret; 
0x0019d8d0: lea eax, [edi - 3]; pop edi; ret; 
0x0019d83b: lea eax, [edi - 4]; pop edi; ret; 
0x0019d8c0: lea eax, [edi - 5]; pop edi; ret; 
0x0019d8b0: lea eax, [edi - 6]; pop edi; ret; 
0x0019d8a0: lea eax, [edi - 7]; pop edi; ret; 
0x0019d812: lea eax, [edi - 8]; pop edi; ret; 
0x0019d890: lea eax, [edi - 9]; pop edi; ret; 
0x0019d390: lea eax, [edi]; pop edi; ret; 
0x000b106d: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x00086ee3: lea eax, [edx + 0x1a54]; push eax; call 0x893c0; add esp, 0x1c; ret; 
0x000af31e: lea eax, [edx + 0xa]; pop edi; ret; 
0x000af45e: lea eax, [edx + 0xa]; ret; 
0x000b2087: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af20e: lea eax, [edx + 0xb]; pop edi; ret; 
0x000af47e: lea eax, [edx + 0xb]; ret; 
0x000b102e: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000af342: lea eax, [edx + 0xc]; pop edi; ret; 
0x000af4a2: lea eax, [edx + 0xc]; ret; 
0x000af362: lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4c2: lea eax, [edx + 0xd]; ret; 
0x000b2035: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af382: lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4e2: lea eax, [edx + 0xe]; ret; 
0x000af248: lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f8: lea eax, [edx + 0xf]; ret; 
0x000a59a3: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000af266: lea eax, [edx + 1]; pop edi; ret; 
0x000af3a6: lea eax, [edx + 1]; ret; 
0x000af27c: lea eax, [edx + 2]; pop edi; ret; 
0x000af3bc: lea eax, [edx + 2]; ret; 
0x000b2164: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a59c6: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000af194: lea eax, [edx + 3]; pop edi; ret; 
0x000af3c4: lea eax, [edx + 3]; ret; 
0x000a59da: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b0fc1: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000af29a: lea eax, [edx + 4]; pop edi; ret; 
0x000af3da: lea eax, [edx + 4]; ret; 
0x000a59ea: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000af2ac: lea eax, [edx + 5]; pop edi; ret; 
0x000af3ec: lea eax, [edx + 5]; ret; 
0x000a59fe: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000af2ca: lea eax, [edx + 6]; pop edi; ret; 
0x000af3fa: lea eax, [edx + 6]; ret; 
0x000b210d: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a598d: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x000af1c8: lea eax, [edx + 7]; pop edi; ret; 
0x000af408: lea eax, [edx + 7]; ret; 
0x000b0ff3: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000af2de: lea eax, [edx + 8]; pop edi; ret; 
0x000af41e: lea eax, [edx + 8]; ret; 
0x000af300: lea eax, [edx + 9]; pop edi; ret; 
0x000af440: lea eax, [edx + 9]; ret; 
0x000bb4aa: lea eax, [edx + eax + 0x30]; ret; 
0x00137d44: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00067e4c: lea eax, [edx + edi*8 - 1]; call dword ptr [edx + 0x52]; 
0x000efd30: lea eax, [edx + edi*8 - 1]; call dword ptr [esi + 0x52]; 
0x00064be0: lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59f6b]; call dword ptr [esi - 0x18]; 
0x000a3dca: lea eax, [edx - 0x17bfa4]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x000a5eaa: lea eax, [edx - 0x185d14]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x00060b18: lea eax, [edx - 0x20]; mov ecx, eax; mov eax, ebx; cmp cl, 0x5a; jbe 0x61b9f; jmp eax; 
0x0013e6ab: lea eax, [edx - 0x67cf0]; push eax; call 0x34b10; add esp, 0x10; add esp, 0xc; ret; 
0x00057781: lea eax, [edx - 0x6c034]; push eax; call 0x115980; add esp, 0x1c; ret; 
0x000cd106: lea eax, [edx - 0x91c64]; and ch, 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000a2986: lea eax, [edx - 0x95764]; and ch, 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a5de6: lea eax, [edx - 0x9a5c4]; and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a5da6: lea eax, [edx - 0x9a5f4]; and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a33b6: lea eax, [edx - 0x9cad4]; and ch, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a5e66: lea eax, [edx - 0x9e4f4]; and ch, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x000a3143: lea eax, [edx - 0xa4cb4]; and ebx, 1; lea edx, [edx - 0xa0a84]; cmovne eax, edx; pop ebx; ret; 
0x00133413: lea eax, [edx - 0xa4cc4]; and ebx, 1; lea edx, [edx - 0xa0a94]; cmovne eax, edx; pop ebx; ret; 
0x000a3193: lea eax, [edx - 0xa6c94]; and ebx, 1; lea edx, [edx - 0xa1a74]; cmovne eax, edx; pop ebx; ret; 
0x00133463: lea eax, [edx - 0xa6ca4]; and ebx, 1; lea edx, [edx - 0xa1a84]; cmovne eax, edx; pop ebx; ret; 
0x000a29d3: lea eax, [edx - 0xa8c94]; and ebx, 1; lea edx, [edx - 0xa2a54]; cmovne eax, edx; pop ebx; ret; 
0x001333c3: lea eax, [edx - 0xa8ca4]; and ebx, 1; lea edx, [edx - 0xa2a64]; cmovne eax, edx; pop ebx; ret; 
0x000a3211: lea eax, [edx - 0xaa694]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334a1: lea eax, [edx - 0xaa6a4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x000423b9: lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000af254: lea eax, [edx]; pop edi; ret; 
0x000af394: lea eax, [edx]; ret; 
0x00111df9: lea eax, [esi + 0x14]; push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00075296: lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x000bc2f3: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x00137581: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x00082306: lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x001277d7: lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ccf4e: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0014f8be: lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x000837c9: lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00081ff9: lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000bcafe: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0007d475: lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c0257: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000bdb6a: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00029d5b: lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002f1bf: lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x001550ef: lea eax, [esp + 0x994]; push eax; push esi; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x000d3c5c: lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3871: lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x00075677: lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000bb069: lea eax, es:[ecx + eax + 0x10]; ret; 
0x000bada9: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000d3c5b: lea eax, fs:[esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d3870: lea eax, fs:[esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000732b3: lea ebp, [eax - 0x76000005]; ret 0xc889; 
0x0009a068: lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000d0e80: lea ebp, [ecx + ecx*8 - 0x7e720001]; clc; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x000650a0: lea ebp, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x000b2bc0: lea ebp, [edx - 0x3e7efff4]; jl 0xb2b99; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0015036b: lea ebp, [esi - 7]; call dword ptr [eax - 0x18]; 
0x001504fe: lea ebp, [esi - 7]; call dword ptr [eax - 0x73]; 
0x00089b0a: lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0017a9d0: lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008cf03: lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000e23db: lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cd4a: lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000cd0b0: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000cd090: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000cd0a0: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0008b645: lea ebx, [ebp + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000d21f2: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000df662: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008578c: lea ebx, [ecx + 1]; push eax; push esi; call dword ptr [edi + 0xc]; 
0x0011ef5d: lea ebx, [edx + 1]; jne 0x11ef3b; mov eax, esi; pop ebx; pop esi; ret; 
0x0007a3ec: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0006254b: lea ebx, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5934b]; dec dword ptr [ecx - 0x5f343]; jmp dword ptr [ebp - 0x5f]; 
0x0009b6a3: lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x0016ccb3: lea ebx, [esp + 0xf0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0010ab52: lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003d737: lea ebx, [esp + 8]; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008cdac: lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00118cea: lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000415a7: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00058588: lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0016e194: lea ecx, [eax + 0xa76c]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x0003cf5b: lea ecx, [eax + 1]; mov dword ptr [edx + 0x1d4], ecx; ret; 
0x0009591c: lea ecx, [eax - 2]; lock cmpxchg dword ptr [edx], ecx; jne 0x95916; xor eax, eax; pop ebx; ret; 
0x0008da5e: lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e3424: lea ecx, [ebp - 0x6c3a6]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0012554d: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00164abf: lea ecx, [ebx - 0x137cfbbd]; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0004ff25: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00171b58: lea ecx, [ecx - 0x934]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00171f4f: lea ecx, [edi - 0x10]; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009a6bb: lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x000aca4d: lea ecx, [edx + 0x10]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad28d: lea ecx, [edx + 0x10]; jne 0xacfe1; pop ebx; ret; 
0x000b175e: lea ecx, [edx + 0x10]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ad1a5: lea ecx, [edx + 0xa]; jne 0xacfe1; pop ebx; ret; 
0x000b1646: lea ecx, [edx + 0xa]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ad1c3: lea ecx, [edx + 0xb]; jne 0xacfe1; pop ebx; ret; 
0x000b1674: lea ecx, [edx + 0xb]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000aca13: lea ecx, [edx + 0xc]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad1e3: lea ecx, [edx + 0xc]; jne 0xacfe1; pop ebx; ret; 
0x000b16a4: lea ecx, [edx + 0xc]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000acdd7: lea ecx, [edx + 0xd]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad207: lea ecx, [edx + 0xd]; jne 0xacfe1; pop ebx; ret; 
0x000b16d8: lea ecx, [edx + 0xd]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ace07: lea ecx, [edx + 0xe]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad237: lea ecx, [edx + 0xe]; jne 0xacfe1; pop ebx; ret; 
0x000ace37: lea ecx, [edx + 0xf]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad267: lea ecx, [edx + 0xf]; jne 0xacfe1; pop ebx; ret; 
0x000b1738: lea ecx, [edx + 0xf]; jne 0xb1431; pop ebx; ret; 
0x000acc99: lea ecx, [edx + 1]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad079: lea ecx, [edx + 1]; jne 0xacfe1; pop ebx; ret; 
0x000b14c9: lea ecx, [edx + 1]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00081990: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000ad09b: lea ecx, [edx + 2]; jne 0xacfe1; pop ebx; ret; 
0x000b14ec: lea ecx, [edx + 2]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000acce1: lea ecx, [edx + 3]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad0c1: lea ecx, [edx + 3]; jne 0xacfe1; pop ebx; ret; 
0x000b1512: lea ecx, [edx + 3]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ad0d9: lea ecx, [edx + 4]; jne 0xacfe1; pop ebx; ret; 
0x000b153a: lea ecx, [edx + 4]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000796e6: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000accff: lea ecx, [edx + 5]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad0ff: lea ecx, [edx + 5]; jne 0xacfe1; pop ebx; ret; 
0x000b1560: lea ecx, [edx + 5]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000acd21: lea ecx, [edx + 6]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad121: lea ecx, [edx + 6]; jne 0xacfe1; pop ebx; ret; 
0x000acd3f: lea ecx, [edx + 7]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad13f: lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x000ad15d: lea ecx, [edx + 8]; jne 0xacfe1; pop ebx; ret; 
0x000b15ee: lea ecx, [edx + 8]; jne 0xb1431; pop ebx; ret; 
0x000acd63: lea ecx, [edx + 9]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad183: lea ecx, [edx + 9]; jne 0xacfe1; pop ebx; ret; 
0x000b1614: lea ecx, [edx + 9]; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0006c132: lea ecx, [edx - 0x20]; cmp ecx, 0x5a; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x000bf28f: lea ecx, [edx - 9]; dec dword ptr [ebp - 0x6549370]; call dword ptr [edx - 0x73]; 
0x0008eeae: lea ecx, [esi - 0x71524]; mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000bb98d: lea ecx, [esi]; add al, byte ptr [eax]; add al, ch; mov byte ptr [0x81000c1c], al; ret; 
0x001716f4: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00170c64: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x0016d300: lea ecx, [esp + 0x10]; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x00076506: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017171e: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001708f6: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x000dfac7: lea ecx, [esp + 0x14]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000df770: lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00102b30: lea ecx, [esp + 0x14]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000dfb8f: lea ecx, [esp + 0x1c]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00125fea: lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00102ada: lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000df73b: lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0016d247: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016d234: lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000be267: lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000bd5ad: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x000d303e: lea ecx, [esp + 0x5c]; mov dword ptr [esp + 0x20], ecx; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x0009a1f0: lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00125f28: lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d6c18: lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x001265cb: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012524b: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00124fcb: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000df8e3: lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00119488: lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00102a30: lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00125fe9: lea ecx, fs:[esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x000e23b4: lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00065cff: lea edi, [eax - 0x7c000005]; ret 0xc601; 
0x000b2e6b: lea edi, [edi + 0x10]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b44de: lea edi, [edi + 0x10]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4554: lea edi, [edi + 0x13]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2f45: lea edi, [edi + 0x16]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2f75: lea edi, [edi + 0x17]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b467b: lea edi, [edi + 0x19]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b300d: lea edi, [edi + 0x1a]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b303b: lea edi, [edi + 0x1b]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b306b: lea edi, [edi + 0x1c]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b470e: lea edi, [edi + 0x1c]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b3095: lea edi, [edi + 0x1d]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4738: lea edi, [edi + 0x1d]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b30c5: lea edi, [edi + 0x1e]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4768: lea edi, [edi + 0x1e]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b30f5: lea edi, [edi + 0x1f]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4798: lea edi, [edi + 0x1f]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b3125: lea edi, [edi + 0x20]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b47c8: lea edi, [edi + 0x20]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2d83: lea edi, [edi + 0xa]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b43c6: lea edi, [edi + 0xa]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b43f4: lea edi, [edi + 0xb]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2dc1: lea edi, [edi + 0xc]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4424: lea edi, [edi + 0xc]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2de5: lea edi, [edi + 0xd]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4458: lea edi, [edi + 0xd]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4488: lea edi, [edi + 0xe]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2e45: lea edi, [edi + 0xf]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b44b8: lea edi, [edi + 0xf]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2c55: lea edi, [edi + 1]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b42bc: lea edi, [edi + 2]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b42df: lea edi, [edi + 3]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b42fa: lea edi, [edi + 4]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2cda: lea edi, [edi + 5]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b431d: lea edi, [edi + 5]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2cff: lea edi, [edi + 6]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4342: lea edi, [edi + 6]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2d1d: lea edi, [edi + 7]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4360: lea edi, [edi + 7]; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b2d3b: lea edi, [edi + 8]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b2d5e: lea edi, [edi + 9]; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x00163f39: lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00185fb5: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000bb320: lea edx, [eax + 0x10]; and edx, 0xfffffff0; jmp 0xbb380; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00058585: lea edx, [eax + 0x1c]; lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0004ff22: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003f6d0: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a2356: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00041de1: lea edx, [eax + 1]; mov eax, edx; ret; 
0x00140f8e: lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0004252d: lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042077: lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0004247d: lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0002ff75: lea edx, [eax - 0x2011b4]; push edx; push dword ptr [eax + 0x10c4]; call 0x1231b0; add esp, 0x1c; ret; 
0x00042128: lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000423d8: lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x000d572e: lea edx, [ebp - 7]; call dword ptr [eax + 0x57]; 
0x00074c3d: lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x0016c3bd: lea edx, [ebx + 0x38]; push edx; call eax; 
0x0016b89d: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x001580ea: lea edx, [ebx + 0xa20c]; push edx; call eax; 
0x00168c00: lea edx, [ebx + 0xac]; push edx; call eax; 
0x0017d867: lea edx, [ebx - 0x1f4]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x000b6de9: lea edx, [ecx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x001663fb: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016643a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0012a010: lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000330f0: lea edx, [ecx - 0x6c3a6]; mov eax, edx; pop ebx; ret; 
0x001697f1: lea edx, [edi + 8]; push edx; call eax; 
0x000e9000: lea edx, [edx + edi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000cd10f: lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000a3344: lea edx, [edx - 0x174704]; cmove eax, edx; ret; 
0x000a3304: lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x000a3faf: lea edx, [edx - 0x174aa4]; cmove eax, edx; ret; 
0x000a5034: lea edx, [edx - 0x174b34]; cmove eax, edx; ret; 
0x000a3dd4: lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x000a298f: lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x000a5daf: lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a5def: lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x000a337f: lea edx, [edx - 0x1758a4]; cmove eax, edx; ret; 
0x000a33bf: lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x000a5e34: lea edx, [edx - 0x176704]; cmove eax, edx; ret; 
0x000a5eb4: lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000a5e6f: lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x00076305: lea edx, [edx - 0x4e8]; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x001721d7: lea edx, [edx - 0x8f4]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x000a325e: lea edx, [edx - 0x92674]; cmovne eax, edx; ret; 
0x000a31de: lea edx, [edx - 0x92e14]; cmovne eax, edx; ret; 
0x000a294e: lea edx, [edx - 0x93384]; cmovne eax, edx; ret; 
0x000a5f9e: lea edx, [edx - 0x939b4]; cmovne eax, edx; ret; 
0x000a3e0e: lea edx, [edx - 0x93d94]; cmovne eax, edx; ret; 
0x000a5d6e: lea edx, [edx - 0x940b4]; cmovne eax, edx; ret; 
0x000a314c: lea edx, [edx - 0xa0a84]; cmovne eax, edx; pop ebx; ret; 
0x0013341c: lea edx, [edx - 0xa0a94]; cmovne eax, edx; pop ebx; ret; 
0x000a319c: lea edx, [edx - 0xa1a74]; cmovne eax, edx; pop ebx; ret; 
0x0013346c: lea edx, [edx - 0xa1a84]; cmovne eax, edx; pop ebx; ret; 
0x000a29dc: lea edx, [edx - 0xa2a54]; cmovne eax, edx; pop ebx; ret; 
0x001333cc: lea edx, [edx - 0xa2a64]; cmovne eax, edx; pop ebx; ret; 
0x000a321e: lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334ae: lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x0008cb59: lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0007e0fe: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0007e1dd: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00037b47: lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x001645c0: lea edx, [esi - 0xcc604]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001646f1: lea edx, [esi - 0xcc604]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00131ef2: lea edx, [esi - 0xff064]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001714b4: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016a478: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170af6: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a9b: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x00170d96: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00170dce: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0013560e: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356da: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000e8b5b: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00099e08: lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0016d768: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x001710ea: lea edx, [esp + 0x20]; push edx; push esi; call dword ptr [eax]; 
0x00118c6f: lea edx, [esp + 0x28]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010c3e2: lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000d6dbd: lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0016eeac: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0017f70d: lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0003c237: lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00119342: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c064: lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0017149e: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00171466: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad3: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a86: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x000df8b5: lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x00170e1b: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00097aa5: lea edx, [esp + 0xec]; mov ecx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00117f74: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00116cfe: lea edx, [esp + 8]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c59e: lea edx, [esp + 8]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00118e5e: lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef88b: lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000d0021: lea esi, [eax + 0xfffffc9]; xchg ebp, eax; ret 0xff52; 
0x000eb1c8: lea esi, [ebx + edi*8 - 1]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x0019f179: lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d209c: lea esi, [esi]; add eax, 1; ret; 
0x000d20ac: lea esi, [esi]; add eax, 3; ret; 
0x0019e61d: lea esi, [esi]; add edx, 2; jl 0x19e6d0; lea eax, [ecx + 2]; ret; 
0x0019e62d: lea esi, [esi]; add edx, 3; jl 0x19e6d0; lea eax, [ecx + 3]; ret; 
0x0019e63d: lea esi, [esi]; add edx, 5; jl 0x19e6d0; lea eax, [ecx + 5]; ret; 
0x0019e64d: lea esi, [esi]; add edx, 6; jl 0x19e6d0; lea eax, [ecx + 6]; ret; 
0x00163d2c: lea esi, [esi]; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0007b144: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0014d294: lea esi, [esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00133bfd: lea esi, [esi]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000a255c: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0010a77c: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0013419a: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0005e5e2: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0019da1d: lea esi, [esi]; and eax, 0x1f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da4d: lea esi, [esi]; and eax, 0x1ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da2d: lea esi, [esi]; and eax, 0x3f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da3d: lea esi, [esi]; and eax, 0x7f; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00137e49: lea esi, [esi]; and eax, 0xffffff; ret; 
0x0019d9fd: lea esi, [esi]; and eax, 3; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da0d: lea esi, [esi]; and eax, 7; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000bb4b9: lea esi, [esi]; bsf eax, eax; add eax, edx; ret; 
0x000bad4a: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000bb4d9: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bb029: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb039: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000bb15c: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x001881ca: lea esi, [esi]; call 0x17d639; add ebx, 0x46403; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011aadc: lea esi, [esi]; call 0x886e0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003cf0d: lea esi, [esi]; endbr32; call 0x17d641; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0002606d: lea esi, [esi]; endbr32; call 0x17d641; add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00024edd: lea esi, [esi]; endbr32; call 0x17d641; add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x00085e3c: lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00086d3a: lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00163abd: lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00171d0d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0017d29c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d28c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d21c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0017d1fc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00086dbc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x00084acc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x0017190d: lea esi, [esi]; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00086d6a: lea esi, [esi]; endbr32; ret; 
0x000342dc: lea esi, [esi]; endbr32; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00085d89: lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x000e2449: lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00199a3c: lea esi, [esi]; jb 0x199a50; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0019e42c: lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e43c: lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e44c: lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e45c: lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e46c: lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x000f30fd: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0019e3cc: lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3dc: lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3ec: lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3fc: lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e40c: lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f94a: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e41c: lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019d41d: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019d42d: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019d43d: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019d44d: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019d45d: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019d39c: lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x0019d3ad: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x0019d3bd: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x0019d3cd: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x0019d3dd: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x0019d3ed: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x0019d3fd: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x0019d40d: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0019d87d: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019d86d: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019d85d: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019d84d: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0019d8ed: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0019d8dd: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0019d8cd: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0019fbdd: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0019d8bd: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019d8ad: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0019d89d: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0019fbca: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x0019d88d: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x0019d38c: lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x0019ea8c: lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea9c: lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaac: lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eabc: lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea1c: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0019ea2c: lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea3c: lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea4c: lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea5c: lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea6c: lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea7c: lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x0009a065: lea esi, [esi]; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x00102b2c: lea esi, [esi]; lea ecx, [esp + 0x14]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0009a1ec: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00125f21: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00102a29: lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000d20a5: lea esi, [esi]; lea esi, [esi]; add eax, 3; ret; 
0x00088dc6: lea esi, [esi]; lea esi, [esi]; endbr32; ret; 
0x0019e425: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e435: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e445: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e455: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e465: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x0019e3c5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3d5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3e5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3f5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e405: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f943: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e415: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019ea85: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea95: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaa5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eab5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea25: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea35: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea45: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea55: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea65: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea75: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x0019f916: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000d20b5: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0019d054: lea esi, [esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x0019f984: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea14: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d20c4: lea esi, [esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000ace44: lea esi, [esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x000baae4: lea esi, [esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000af24d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000aae8c: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b6dfa: lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013bb64: lea esi, [esi]; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000ace5a: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b34dc: lea esi, [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00165662: lea esi, [esi]; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x001656f9: lea esi, [esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x001656e4: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x00165709: lea esi, [esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x000ace9c: lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000ace89: lea esi, [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0006ce05: lea esi, [esi]; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x00061a9d: lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x0009464c: lea esi, [esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x00124524: lea esi, [esi]; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0008aa9c: lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x0008c98d: lea esi, [esi]; mov eax, 0x16; ret; 
0x000f2864: lea esi, [esi]; mov eax, 0x40; ret; 
0x001265fa: lea esi, [esi]; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012527a: lea esi, [esi]; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008ef5a: lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0008b3d4: lea esi, [esi]; mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000f272a: lea esi, [esi]; mov eax, 0xfffa; pop ebx; ret; 
0x00143434: lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cf65: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000962f1: lea esi, [esi]; mov eax, 1; add esp, 0xc; ret; 
0x0019292c: lea esi, [esi]; mov eax, 1; ja 0x192939; neg eax; ret; 
0x0019956c: lea esi, [esi]; mov eax, 1; ja 0x199579; neg eax; ret; 
0x000d1ecd: lea esi, [esi]; mov eax, 1; jg 0xd1ed9; neg eax; ret; 
0x000a0c5a: lea esi, [esi]; mov eax, 1; ret; 
0x00041c9c: lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0017d33d: lea esi, [esi]; mov eax, 2; add esp, 0xc; ret; 
0x0008e865: lea esi, [esi]; mov eax, 3; ret; 
0x0011b495: lea esi, [esi]; mov eax, dword ptr [eax + 0x378]; pop ebx; ret; 
0x00102654: lea esi, [esi]; mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x102592; call eax; 
0x001026e4: lea esi, [esi]; mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x1025e7; call eax; 
0x0010269c: lea esi, [esi]; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x102592; call eax; 
0x0016e314: lea esi, [esi]; mov eax, dword ptr [ebx + 0x170]; pop ebx; pop esi; pop edi; ret; 
0x001a027a: lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000bc8ad: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000bc8bd: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000bc8cd: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000bc8dd: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000bc8ed: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000bc8fd: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000bc90d: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000bc91d: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000bc92d: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000bc93d: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000bc94d: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000bc89d: lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x00080c5c: lea esi, [esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00080b2c: lea esi, [esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x000a09fc: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00129ce4: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0019f02a: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008a89d: lea esi, [esi]; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x001374f4: lea esi, [esi]; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x0019f91d: lea esi, [esi]; mov eax, ecx; ret; 
0x000b377c: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x0019ddbc: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x0008cf69: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000adae9: lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x0009a46d: lea esi, [esi]; mov ecx, dword ptr [esp + 0x74]; mov eax, 0x104; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0014824c: lea esi, [esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00091caa: lea esi, [esi]; mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00080b65: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x000a0ab4: lea esi, [esi]; mov edx, dword ptr [edi + 0x8c]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00165674: lea esi, [esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000505e4: lea esi, [esi]; mov edx, ebx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000ace7d: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ace6c: lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000ab10d: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b35bd: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000acf2c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf3c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf4c: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000ab01d: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0013814a: lea esi, [esi]; movzx eax, dl; ret; 
0x0019289c: lea esi, [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001928ac: lea esi, [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001928bc: lea esi, [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001928cc: lea esi, [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019287c: lea esi, [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00163aa7: lea esi, [esi]; nop; endbr32; ret; 
0x00094ea7: lea esi, [esi]; nop; mov dword ptr [eax + 4], edx; ret; 
0x0009a87d: lea esi, [esi]; nop; mov dword ptr [edx + 0x370], eax; ret; 
0x00061a18: lea esi, [esi]; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008a778: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x00080d77: lea esi, [esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20d7: lea esi, [esi]; nop; mov eax, 2; ret; 
0x000d20e7: lea esi, [esi]; nop; mov eax, 3; ret; 
0x000d20f7: lea esi, [esi]; nop; mov eax, 4; ret; 
0x000d2107: lea esi, [esi]; nop; mov eax, 5; ret; 
0x000d2117: lea esi, [esi]; nop; mov eax, 6; ret; 
0x000d2127: lea esi, [esi]; nop; mov eax, 7; ret; 
0x00041508: lea esi, [esi]; nop; xor eax, eax; ret; 
0x0008a76c: lea esi, [esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0009209c: lea esi, [esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x00093e4d: lea esi, [esi]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x001375c5: lea esi, [esi]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000893b4: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x000baa6c: lea esi, [esi]; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x000ba71c: lea esi, [esi]; pop ebx; pop esi; ret; 
0x00030ec4: lea esi, [esi]; pop ebx; ret; 
0x0004237d: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00199a2a: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x000b34cc: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000d1eac: lea esi, [esi]; pop edi; pop esi; ret; 
0x000b7179: lea esi, [esi]; pop esi; ret; 
0x0019fb0a: lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x0003982c: lea esi, [esi]; ret; 
0x00085f7a: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0019df5c: lea esi, [esi]; sub edx, 2; jb 0x19e010; lea eax, [edi + 1]; pop edi; ret; 
0x00086a84: lea esi, [esi]; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000798bc: lea esi, [esi]; sub esp, 0x18; push ecx; call 0x7b500; add esp, 0x1c; ret; 
0x000e922d: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x0016eebc: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0016edac: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0009600a: lea esi, [esi]; sub esp, 0xc; mov esi, dword ptr [eax + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000a0bd2: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x000778dd: lea esi, [esi]; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00024df4: lea esi, [esi]; sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000e8b54: lea esi, [esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ef884: lea esi, [esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00163dcc: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016a45c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016ec6d: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0019fbbd: lea esi, [esi]; test ah, 0xf0; jne 0x19fbe0; lea eax, [edi - 8]; pop edi; ret; 
0x0019f96c: lea esi, [esi]; test ah, 1; jne 0x19f990; lea eax, [ecx + 0xc]; ret; 
0x0017d32d: lea esi, [esi]; test al, al; jne 0x17d356; mov eax, 4; add esp, 0xc; ret; 
0x0005772c: lea esi, [esi]; test eax, eax; je 0x57740; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x001a02ec: lea esi, [esi]; tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x000e0599: lea esi, [esi]; xor eax, eax; add esp, 0xc; ret; 
0x00041e4c: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000a024c: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000d1ebc: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000ba87c: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00074294: lea esi, [esi]; xor eax, eax; ret; 
0x0010245d: lea esi, [esi]; xor eax, eax; xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x0010ab4d: lea esi, [esi]; xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00091cdc: lea esi, [esi]; xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x001261d0: lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00164c2d: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0009a402: lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00120140: lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012974f: lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000d209b: lea esi, cs:[esi]; add eax, 1; ret; 
0x00163d2b: lea esi, cs:[esi]; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0014d293: lea esi, cs:[esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000a255b: lea esi, cs:[esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0010a77b: lea esi, cs:[esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00137e48: lea esi, cs:[esi]; and eax, 0xffffff; ret; 
0x000bb4b8: lea esi, cs:[esi]; bsf eax, eax; add eax, edx; ret; 
0x000bb4d8: lea esi, cs:[esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bb028: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb038: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0011aadb: lea esi, cs:[esi]; call 0x886e0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00186138: lea esi, cs:[esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0017d28b: lea esi, cs:[esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00084acb: lea esi, cs:[esi]; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x000e2448: lea esi, cs:[esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0019f98b: lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea1b: lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0009a1eb: lea esi, cs:[esi]; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000d20a4: lea esi, cs:[esi]; lea esi, [esi]; add eax, 3; ret; 
0x00088dc5: lea esi, cs:[esi]; lea esi, [esi]; endbr32; ret; 
0x0019e424: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e434: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e444: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e454: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e464: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x0019e3c4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3d4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3e4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3f4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e404: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f942: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e414: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019ea84: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea94: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaa4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eab4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea24: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea34: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea44: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea54: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea64: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea74: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x0019f915: lea esi, cs:[esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000d20b4: lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0019d053: lea esi, cs:[esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x0019f983: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea13: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d20c3: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000ace43: lea esi, cs:[esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x000baae3: lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0013bb63: lea esi, cs:[esi]; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x001656f8: lea esi, cs:[esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00165708: lea esi, cs:[esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x000ace88: lea esi, cs:[esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x00124523: lea esi, cs:[esi]; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000f2863: lea esi, cs:[esi]; mov eax, 0x40; ret; 
0x0008b3d3: lea esi, cs:[esi]; mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00143433: lea esi, cs:[esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0007c3a3: lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x0019956b: lea esi, cs:[esi]; mov eax, 1; ja 0x199579; neg eax; ret; 
0x000d20cb: lea esi, cs:[esi]; mov eax, 1; ret; 
0x00041c9b: lea esi, cs:[esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x00102653: lea esi, cs:[esi]; mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x102592; call eax; 
0x001026e3: lea esi, cs:[esi]; mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x1025e7; call eax; 
0x0010269b: lea esi, cs:[esi]; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x102592; call eax; 
0x00129ce3: lea esi, cs:[esi]; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x001374f3: lea esi, cs:[esi]; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x000adae8: lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x0014824b: lea esi, cs:[esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00165673: lea esi, cs:[esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000acf2b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf3b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf4b: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0019289b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001928ab: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001928bb: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001928cb: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019287b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00163aa6: lea esi, cs:[esi]; nop; endbr32; ret; 
0x00094ea6: lea esi, cs:[esi]; nop; mov dword ptr [eax + 4], edx; ret; 
0x00061a17: lea esi, cs:[esi]; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008a777: lea esi, cs:[esi]; nop; mov eax, 0x16; ret; 
0x00080d76: lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20d6: lea esi, cs:[esi]; nop; mov eax, 2; ret; 
0x000d20e6: lea esi, cs:[esi]; nop; mov eax, 3; ret; 
0x000d20f6: lea esi, cs:[esi]; nop; mov eax, 4; ret; 
0x000d2106: lea esi, cs:[esi]; nop; mov eax, 5; ret; 
0x000d2116: lea esi, cs:[esi]; nop; mov eax, 6; ret; 
0x000d2126: lea esi, cs:[esi]; nop; mov eax, 7; ret; 
0x00041507: lea esi, cs:[esi]; nop; xor eax, eax; ret; 
0x0009209b: lea esi, cs:[esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x000893b3: lea esi, cs:[esi]; pop ebx; pop esi; pop edi; ret; 
0x000ace4b: lea esi, cs:[esi]; pop ebx; ret; 
0x000b7178: lea esi, cs:[esi]; pop esi; ret; 
0x00088883: lea esi, cs:[esi]; ret; 
0x00086a83: lea esi, cs:[esi]; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0016edab: lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00024df3: lea esi, cs:[esi]; sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000e8b53: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ef883: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0005772b: lea esi, cs:[esi]; test eax, eax; je 0x57740; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x001a02eb: lea esi, cs:[esi]; tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x00163a9b: lea esi, cs:[esi]; xor eax, eax; add esp, 0xc; ret; 
0x00041e4b: lea esi, cs:[esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000d1ebb: lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000ba87b: lea esi, cs:[esi]; xor eax, eax; pop edi; ret; 
0x00074293: lea esi, cs:[esi]; xor eax, eax; ret; 
0x00091cdb: lea esi, cs:[esi]; xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x001261cf: lea esi, fs:[esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0016a45b: lea esi, ss:[esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x000e202c: lea esp, [di - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008da5f: lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00053588: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025a49: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00131e58: lea esp, [ebp - 8]; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x001224df: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00131e4b: lea esp, [ebp - 8]; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x000d6fd4: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000e78c1: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0015ea3b: leave; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x000bb313: leave; add eax, ecx; ret; 
0x0003c8d9: leave; add edi, esi; ret 0; 
0x00041bec: leave; bsr ecx, ecx; shl eax, cl; ret; 
0x00034ab5: leave; call 0x345b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00115efa: leave; call dword ptr gs:[0x10]; 
0x00115efa: leave; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x0008820b: leave; cli; call dword ptr [eax + 0x6a]; 
0x00076e46: leave; cli; jmp dword ptr [esi - 0x70]; 
0x00044745: leave; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0014c740: leave; cmp eax, 2; jne 0x14c750; mov eax, ecx; ret; 
0x0003abfc: leave; fstp st(1); ret; 
0x001620e3: leave; jb 0x1620df; call dword ptr [eax + 0x6a]; 
0x00162137: leave; jb 0x162133; jmp dword ptr [ebp - 0x75]; 
0x001621e3: leave; jb 0x1621df; call dword ptr [eax - 0x18]; 
0x001621e3: leave; jb 0x1621df; call dword ptr [eax - 0x18]; ret; 
0x001023b4: leave; je 0x1023d0; cmp byte ptr [esp + 0x17], 0; jne 0x102460; call ecx; 
0x0011e527: leave; je 0x11e52d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0012da1d: leave; je 0x12da28; xor eax, eax; pop ebx; ret; 
0x00131ce2: leave; je 0x131cf8; ret; 
0x0003d6af: leave; je 0x3d6d8; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0007fda2: leave; je 0x7fda8; mov byte ptr [edx], 0; pop ebx; ret; 
0x00091421: leave; je 0x91822; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000bb30e: leave; je 0xbb320; bsf ecx, ecx; add eax, ecx; ret; 
0x0012bb09: leave; jne 0x12bb18; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bb84: leave; jne 0x12bb90; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bd78: leave; jne 0x12bd80; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c3cd: leave; jne 0x12c3d8; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c42d: leave; jne 0x12c438; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c618: leave; jne 0x12c620; mov eax, edx; pop ebx; pop esi; ret; 
0x00165694: leave; jne 0x1656b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x0017c30f: leave; jne 0x17c318; ret; 
0x0009ab26: leave; jne 0x9ab30; add esp, 8; pop ebx; ret; 
0x000bc51c: leave; jne 0xbc521; xor eax, eax; ret; 
0x000d2177: leave; jne 0xd2158; add eax, 1; ret; 
0x000d214d: leave; jne 0xd2172; ret; 
0x000f5bf3: leave; jnp 0xf5bf2; dec dword ptr [ebx - 0x76e3dbb4]; ret 0x448b; 
0x00118aad: leave; js 0x118ab8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000f2be9: leave; js 0xf2bf0; ret; 
0x00092383: leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092f99: leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x00092d16: leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009451a: leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000b9854: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000df65a: leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00041cf0: leave; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0008f381: leave; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x001467a7: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0003f6d4: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000b41d9: leave; mov esp, 0xc030010; cdq; jmp ecx; 
0x0008a960: leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0003451b: leave; pop ds; add byte ptr [ebx + 0x1c880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000344fb: leave; pop ds; add byte ptr [ebx + 0x9880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000421d1: leave; pop ebx; pop esi; mov eax, ecx; ret; 
0x0002e8b3: leave; ret 0x14; 
0x00041bef: leave; shl eax, cl; ret; 
0x00173153: leave; stc; call dword ptr [eax - 0x18]; 
0x00171bfb: leave; stc; call dword ptr [eax - 0x73]; 
0x001789e6: leave; stc; call dword ptr [edi + 0x56]; 
0x0013afb7: leave; stc; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xe8c0; 
0x0016151b: leave; stc; jmp dword ptr [esi - 0x77]; 
0x0017713e: leave; sti; jmp dword ptr [esi - 0x70]; 
0x000baabb: leave; sub edx, ecx; jbe 0xbaaf0; add eax, ecx; ret; 
0x00160b53: leave; xor ebp, ebp; jmp dword ptr [esi - 0x70]; 
0x000424f3: leave; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x00041cf8: leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000aca18: les eax, ptr [0x5b5f0000]; ret; 
0x0003a6a2: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x0003a630: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00163d31: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00073c99: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00125250: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019d328: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001252e1: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000bb3cd: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x0019e186: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000baf42: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00141afb: les eax, ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007cf47: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00140503: les eax, ptr [ebx + ebx*2]; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00039a8e: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00025ff2: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025079: les eax, ptr [ebx + ebx*2]; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0019682a: les eax, ptr [ebx + ebx*2]; ret; 
0x0016669f: les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001172fa: les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x00165d98: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013769d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008871b: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00091dd1: les eax, ptr [ecx + ecx*4]; fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x00130700: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0014aedd: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00057903: les eax, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0010b509: les eax, ptr [ecx]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000bc8b8: les eax, ptr [ecx]; add byte ptr [eax], al; ret; 
0x0019f971: les eax, ptr [ecx]; jne 0x19f990; lea eax, [ecx + 0xc]; ret; 
0x0012ce7f: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x00167002: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0008e2d8: les eax, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003abf7: les eax, ptr [edx]; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003a595: les eax, ptr [edx]; je 0x3a59b; fchs; ret; 
0x0003a8f5: les eax, ptr [edx]; je 0x3a8fb; fchs; ret; 
0x0019d80a: les eax, ptr [edx]; jne 0x19d8a0; lea eax, [edi - 8]; pop edi; ret; 
0x0019e38a: les eax, ptr [edx]; jne 0x19e420; lea eax, [ecx + 8]; ret; 
0x0019e5c9: les eax, ptr [edx]; jne 0x19e670; add edx, 8; jl 0x19e6d0; lea eax, [ecx + 8]; ret; 
0x0019e9d1: les eax, ptr [edx]; jne 0x19ea80; test ah, 4; jne 0x19ea90; lea eax, [edx + 0xb]; ret; 
0x001990c1: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0008a91a: les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x00104ef0: les ebp, ptr [eax + 0x5b]; ret; 
0x001a2f51: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x000334d2: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00052754: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x00088106: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001861cd: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003c999: les ebp, ptr [eax]; pop ebx; ret; 
0x000d71e0: les ebp, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0016ede3: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00028d0f: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002efe5: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000879a7: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0002352b: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0013b9d1: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038754: les ebp, ptr [ecx + ecx*4]; call 0x5d62e5b7; ret; 
0x000e8120: les ebp, ptr [ecx + ecx*4]; call 0x5d6ddf83; ret; 
0x001057be: les ebp, ptr [ecx + ecx*4]; call 0x5d6fb621; ret; 
0x001058dc: les ebp, ptr [ecx + ecx*4]; call 0x5d6fb73f; ret; 
0x0003d036: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e3862: les ebp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0007bcf1: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00124eee: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x00101fdd: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0006b865: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001440ae: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c7f3: les ebx, ptr [eax + 0x5b000000]; ret; 
0x001a0945: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x0003c553: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e5c4a: les ebx, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e7073: les ebx, ptr [eax + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00163be7: les ebx, ptr [eax]; lea eax, [ebx + 0xa5cc]; pop ebx; ret; 
0x00041543: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x001196e7: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0004204f: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x00041fbd: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042021: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00041f8f: les ebx, ptr [eax]; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00170934: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x000a3541: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003a9c8: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0002456d: les ebx, ptr [eax]; pop ebx; ret; 
0x00089f8f: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00105a9e: les ebx, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000286cf: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0003b97f: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00029dde: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00094f4d: les ebx, ptr [ebx + ebx*2]; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x00079ee5: les ebx, ptr [ebx + ebx*2]; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0011e714: les ebx, ptr [ebx + ebx*2]; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0015f41b: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0003828f: les ebx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000332d8: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00078417: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0002522d: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000844d2: les ebx, ptr [ebx + ebx*2]; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x00079f20: les ebx, ptr [ebx + ebx*2]; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0010c3c0: les ebx, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00183d63: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x00140a15: les ebx, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x000e13e7: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00034bbf: les ebx, ptr [ecx + ecx*4]; call 0x5d62aa22; ret; 
0x0003d821: les ebx, ptr [ecx + ecx*4]; call 0x5d633684; ret; 
0x00079d93: les ebx, ptr [ecx + ecx*4]; call 0x5d66fbf6; ret; 
0x00093782: les ebx, ptr [ecx + ecx*4]; call 0x5d6895e5; ret; 
0x0009b95b: les ebx, ptr [ecx + ecx*4]; call 0x5d6917be; ret; 
0x0009e600: les ebx, ptr [ecx + ecx*4]; call 0x5d694463; ret; 
0x0010560a: les ebx, ptr [ecx + ecx*4]; call 0x5d6fb46d; ret; 
0x0011e6e6: les ebx, ptr [ecx + ecx*4]; call 0x5d714549; ret; 
0x00133def: les ebx, ptr [ecx + ecx*4]; call 0x5d729c52; ret; 
0x0014a6ce: les ebx, ptr [ecx + ecx*4]; call 0x5d740531; ret; 
0x0014c6eb: les ebx, ptr [ecx + ecx*4]; call 0x5d74254e; ret; 
0x000380bb: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000305f6: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0003e62c: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00124ead: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x00167baa: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0014db28: les ebx, ptr [edi - 2]; jmp dword ptr [esi - 0x70]; 
0x000451a0: les ebx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d2e70: les ecx, ptr [eax + 0x5b]; ret; 
0x000fbaaf: les ecx, ptr [eax + edi + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00105716: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0012d857: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0012e393: les ecx, ptr [eax + edx*2]; push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012d577: les ecx, ptr [eax + edx*2]; push ebx; push 0x2000001; call dword ptr [edi + 0x14]; 
0x0012f555: les ecx, ptr [eax + edx*2]; push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e176: les ecx, ptr [eax + edx*2]; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0012fcdc: les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00140f8c: les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00091201: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x00058741: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x0011f4c8: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x0005e5dc: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000505de: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00082f65: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x00165ebb: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x00103763: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x00056d11: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00027166: les ecx, ptr [eax]; pop ebx; ret; 
0x0003aa36: les ecx, ptr [eax]; ret; 
0x0003bd98: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00122c66: les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00096dab: les ecx, ptr [ebp - 0x668ab79]; call dword ptr [eax - 0x73]; 
0x000400d9: les ecx, ptr [ebp - 0x67adb79]; call dword ptr [eax - 0x73]; 
0x00027857: les ecx, ptr [ebx + 0x45c7c84d]; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00035f0c: les ecx, ptr [ebx + eax*4]; ret 0x5201; 
0x000a1cb7: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003b1b2: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0003f0de: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009a05c: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0014d000: les ecx, ptr [ebx + ebx*2]; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0007b1ad: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000a13c1: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x000360cb: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00166016: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x0005bf60: les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000a8299: les ecx, ptr [ebx - 0x7bf03bbb]; ret; 
0x0016125f: les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; aam 0x71; stc; call dword ptr [eax + 0x57]; 
0x00048437: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001336d6: les ecx, ptr [ecx + ebp*8]; ret; 
0x00132fbe: les ecx, ptr [ecx + ebp*8]; sub ecx, dword ptr [eax + 0x6e8fffe]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00133e36: les ecx, ptr [ecx + ebp*8]; xor ebx, dword ptr [edx - 9]; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000be47b: les ecx, ptr [ecx + ebp]; ret; 
0x000763e5: les ecx, ptr [ecx + ecx*4]; call 0x5d66c248; ret; 
0x000bf3f5: les ecx, ptr [ecx + ecx*4]; call 0x5d6b5258; ret; 
0x0010bba1: les ecx, ptr [ecx + ecx*4]; call 0x5d701a04; ret; 
0x0011e768: les ecx, ptr [ecx + ecx*4]; call 0x5d7145cb; ret; 
0x0013780e: les ecx, ptr [ecx + ecx*4]; call 0x5d72d671; ret; 
0x00146d5a: les ecx, ptr [ecx + ecx*4]; call 0x5d73cbbd; ret; 
0x0017da11: les ecx, ptr [ecx + ecx*4]; call 0x5d773874; ret; 
0x0003f830: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000278e5: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x20af737d]; call dword ptr [eax - 0x73]; 
0x0008a82d: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00065929: les ecx, ptr [ecx + ecx*4]; ret 0xc031; 
0x00033f7d: les ecx, ptr [ecx + ecx*4]; ret; 
0x000270b9: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000e3749: les ecx, ptr [ecx*4 + 0x5e5b0245]; pop edi; pop ebp; ret; 
0x000e3632: les ecx, ptr [ecx*4 + 0x5e5b0845]; pop edi; pop ebp; ret; 
0x0009b761: les ecx, ptr [ecx*4 - 0x1963a37a]; call dword ptr [eax + 0x57]; 
0x0009b7df: les ecx, ptr [ecx*4 - 0x1965a37a]; call dword ptr [eax + 0x57]; 
0x0008fa46: les ecx, ptr [ecx*4 - 0x1a14537d]; call dword ptr [eax + 0x56]; 
0x0008fa34: les ecx, ptr [ecx*4 - 0x1a14737d]; call dword ptr [eax + 0x56]; 
0x00033e8d: les ecx, ptr [ecx*4 - 0x6c2517d]; call dword ptr [eax - 1]; 
0x000962e7: les ecx, ptr [edi + ecx]; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00050469: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0019f935: les ecx, ptr [edi]; jne 0x19f950; test dh, 0xf; jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x00040901: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005bead: les edi, ptr [eax + 0x5b]; ret; 
0x001a55b0: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00027e3d: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000bdd50: les edi, ptr [eax + eax]; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x00156e12: les edi, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000a040b: les edi, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x000e0b63: les edi, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0013f7a9: les edi, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009622d: les edi, ptr [eax]; pop ebx; ret; 
0x0002b1bf: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002ad1c: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x001a8f75: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00027c58: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00179510: les edi, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0008bdf7: les edi, ptr [ecx + ecx*4 - 0x18]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00138249: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e2572: les edi, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f5aa: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000868c3: les edi, ptr [ecx + ecx*4]; call 0x5d67c726; ret; 
0x000e0261: les edi, ptr [ecx + ecx*4]; call 0x5d6d60c4; ret; 
0x001284c8: les edi, ptr [ecx + ecx*4]; call 0x5d71e32b; ret; 
0x00138ba8: les edi, ptr [ecx + ecx*4]; call 0x5d72ea0b; ret; 
0x0004f204: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008ecb1: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000d2a24: les edi, ptr [ecx + esi - 0x40]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008b1e7: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00035030: les edi, ptr [ecx]; ret 0x830f; 
0x0008067e: les edi, ptr [ecx]; ret 0x850f; 
0x00144cc7: les edi, ptr [edx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000943c8: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0011b57c: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x0008ade9: les edx, ptr [eax + eax + 0x5e5b0000]; ret; 
0x0003c6d0: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x001777da: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00176b51: les edx, ptr [eax - 0xf770000]; pop ebx; pop esi; ret; 
0x001151c0: les edx, ptr [eax]; adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002ff7e: les edx, ptr [eax]; add byte ptr [eax], al; call 0x1231b0; add esp, 0x1c; ret; 
0x001249bc: les edx, ptr [eax]; add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001405ed: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00133b4e: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009baf2: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003fcae: les edx, ptr [eax]; add esp, 0xc; ret; 
0x0017a250: les edx, ptr [eax]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00165f39: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013d2c7: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000260e7: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0008a2c9: les edx, ptr [eax]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0011f4c5: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00027163: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0009222a: les edx, ptr [eax]; call eax; 
0x0009c264: les edx, ptr [eax]; cmp eax, -1; je 0x9c270; add esp, 0xc; ret; 
0x00169981: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00171f54: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0015dcc0: les edx, ptr [eax]; cmp edx, 1; jg 0x15dce8; add esp, 0x18; pop ebx; ret; 
0x001771fd: les edx, ptr [eax]; cmp edx, 1; jg 0x177228; add esp, 0x18; pop ebx; ret; 
0x00177289: les edx, ptr [eax]; cmp edx, 1; jg 0x1772b0; add esp, 0x18; pop ebx; ret; 
0x00177561: les edx, ptr [eax]; cmp edx, 1; jg 0x177588; add esp, 0x18; pop ebx; ret; 
0x0008e340: les edx, ptr [eax]; cmp edx, 1; jg 0x8e368; add esp, 0x18; pop ebx; ret; 
0x0010a5e4: les edx, ptr [eax]; jmp 0x109fe6; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x00165d24: les edx, ptr [eax]; jmp 0x165c16; call 0x133af0; endbr32; mov eax, 2; ret; 
0x0017a908: les edx, ptr [eax]; jmp 0x17a7c7; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000a0c1c: les edx, ptr [eax]; jmp 0xa0bbe; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000e9594: les edx, ptr [eax]; jmp 0xe8f96; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ebf14: les edx, ptr [eax]; jmp 0xeb916; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ecc64: les edx, ptr [eax]; jmp 0xec676; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000ef564: les edx, ptr [eax]; jmp 0xeef76; sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f02b4: les edx, ptr [eax]; jmp 0xefcc6; sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x0013757f: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0016eda9: les edx, ptr [eax]; lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00122540: les edx, ptr [eax]; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0014072f: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000df4d7: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x0011ae01: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00076ea2: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011a7a2: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e4: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x11a988; call eax; 
0x0012cf6e: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00170819: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0016e942: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea22: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea85: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eae5: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb52: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0003c481: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d944: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0016f0b0: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0003e755: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e878: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0014f568: les edx, ptr [eax]; mov eax, dword ptr [esp]; call eax; 
0x0014f6e5: les edx, ptr [eax]; mov eax, ebx; call eax; 
0x000bf46e: les edx, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017b2d2: les edx, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00095345: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001355d2: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000e119a: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00143023: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00025546: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x0011c717: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013336c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x0013457c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x001860f4: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003fe33: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b3: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7f5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x000912f1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a45: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f51: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x0016e8d2: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x00123804: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001800d0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x0003fa58: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc75: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff45: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffc8: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x000d2db5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd149: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df489: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000253dc: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00025865: les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0014031e: les edx, ptr [eax]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0004229d: les edx, ptr [eax]; pop ebx; add eax, 1; pop esi; pop edi; ret; 
0x0005d6e6: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f6f5: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00118bf6: les edx, ptr [eax]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0013d331: les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x001585ba: les edx, ptr [eax]; push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0014f5e2: les edx, ptr [eax]; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00141e9f: les edx, ptr [eax]; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0016e0ab: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016dabc: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00165887: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x001331f1: les edx, ptr [eax]; test eax, eax; je 0x133200; add esp, 8; pop ebx; ret; 
0x00157c71: les edx, ptr [eax]; test eax, eax; je 0x157c80; sub esp, 0xc; push esi; call eax; 
0x00158001: les edx, ptr [eax]; test eax, eax; je 0x158010; sub esp, 0xc; push esi; call eax; 
0x001652a1: les edx, ptr [eax]; test eax, eax; je 0x1652b0; sub esp, 0xc; push esi; call eax; 
0x00166024: les edx, ptr [eax]; test eax, eax; je 0x16612b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00041497: les edx, ptr [eax]; test eax, eax; je 0x414a8; add esp, 8; pop ebx; ret; 
0x0011ef0d: les edx, ptr [eax]; test eax, eax; jne 0x11eecc; add esp, 0xc; ret; 
0x0016f185: les edx, ptr [eax]; test eax, eax; jne 0x16f170; add esp, 8; pop ebx; ret; 
0x0003c0b6: les edx, ptr [eax]; test eax, eax; jne 0x3c0c8; add esp, 8; pop ebx; ret; 
0x0003c365: les edx, ptr [eax]; test eax, eax; jne 0x3c370; add esp, 8; pop ebx; ret; 
0x000f2195: les edx, ptr [eax]; test eax, eax; jne 0xf21a0; add esp, 8; pop ebx; ret; 
0x001279f2: les edx, ptr [eax]; test eax, eax; js 0x127a00; add esp, 8; pop ebx; ret; 
0x0014d230: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a0be1: les edx, ptr [eax]; test ebp, ebp; jne 0xa0b39; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x0017d7c0: les edx, ptr [eax]; test ebx, ebx; jne 0x17d7d0; add esp, 8; pop ebx; ret; 
0x00039b00: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000f70cc: les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008e28b: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0010c75b: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0012a711: les edx, ptr [ebx + ebx*2]; pop edi; ret; 
0x0003e7dd: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002fd67: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00164701: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0003c5d9: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0011c1d7: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x0013fec2: les edx, ptr [ecx + ecx*4]; call 0x5d735d25; ret; 
0x001273b4: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00056a4d: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00170a70: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000be122: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x001604df: les edx, ptr [edi + edi*8]; je 0x160508; and al, 0x89; ret; 
0x001160d1: les edx, ptr [esi + ebx*2]; pop edi; ret; 
0x000e0ca3: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0009a7bd: les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00119c8b: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0017a4c5: les esi, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00173dcf: les esi, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017a3fd: les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x0008cc66: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0010bdc6: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0016d547: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x0003fc2b: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x000f2232: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x000575b0: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0007fea2: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0010c7c7: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0007fcaa: les esp, ptr [eax + ecx]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003d60e: les esp, ptr [eax]; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003c908: les esp, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008afed: les esp, ptr [eax]; add esp, 0xc; ret; 
0x00157ade: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x001583ae: les esp, ptr [eax]; cmp edx, 1; jg 0x1583d8; add esp, 0x18; pop ebx; ret; 
0x0019d833: les esp, ptr [eax]; jne 0x19d8d0; lea eax, [edi - 4]; pop edi; ret; 
0x0019e3b3: les esp, ptr [eax]; jne 0x19e450; lea eax, [ecx + 0xc]; ret; 
0x0019e5f3: les esp, ptr [eax]; jne 0x19e6a0; add edx, 0xc; jl 0x19e6d0; lea eax, [ecx + 0xc]; ret; 
0x0019e9fa: les esp, ptr [eax]; jne 0x19eab0; test ah, 0x40; jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x00134a49: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x00088348: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d3fa4: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0005e54b: les esp, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000766ff: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011cce0: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00140edd: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x000255f4: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001a9036: les esp, ptr [eax]; ret; 
0x001051d4: les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x00087f57: les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000d4591: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003d242: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003c062: les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0012745f: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00121591: les esp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0004a76c: ljmp 0:0x4b8ffff; add byte ptr [ecx], bh; ret 0x430f; 
0x0017d322: ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x0013813e: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000df5c2: ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x00183b92: ljmp 0x10c4:0x83fff381; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00039820: ljmp 0x11b6:0xfd03118; test dl, dl; jne 0x39808; ret; 
0x000a5a92: ljmp 0x18c4:0x83000162; pop ebx; ret; 
0x000f30a7: ljmp 0x1b8:0x5bed7901; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000d3ce6: ljmp 0x1c24:0x74ff50ff; call 0xd3260; add esp, 0x18; pop ebx; ret; 
0x000a922e: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x00145979: ljmp 0x2901:0x1c246c83; ret 0x828d; 
0x00183c52: ljmp 0x2cc4:0x83fff808; ret; 
0x000d7027: ljmp 0x2fe8:0x505251ff; ret 0xffff; 
0x00186bd2: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00076e76: ljmp 0x450f:0x107f602; ret 0xec83; 
0x00134d8a: ljmp 0x470f:0x9f88357; ret 0xf983; 
0x00134e76: ljmp 0x470f:0x9f88357; ret 0xfb83; 
0x0019df91: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x00180ab9: ljmp 0x558b:0x15e8dff; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret 0xf6a7; 
0x000f231a: ljmp 0x5725:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000b3012: ljmp 0x5b5e:0x5f000005; ret; 
0x0012bca3: ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x0012daa4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x0007ba77: ljmp 0x5bff:0xffffffb8; ret; 
0x001761c4: ljmp 0x5e5b:0x14c483ff; ret; 
0x0017a64a: ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x0018700a: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019dfa1: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x0008eeb1: ljmp 0x824:0x5489fff8; mov esi, 8; call dword ptr gs:[0x10]; 
0x000dff1b: ljmp 0x824:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0019dfb1: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x000bb084: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000f234c: ljmp 0x8d08:0xec83ffff; cwde; and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x000f2402: ljmp 0x8d08:0xec83ffff; sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax + 0x53]; 
0x000f245f: ljmp 0x8d08:0xec83ffff; sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax - 1]; 
0x000bb074: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x000bb064: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x0019dfc1: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x00054a61: ljmp 0x970f:0x9fa8330; ret 0xd284; 
0x00045633: ljmp 0xa40f:0x4c246c8b; ret 0x101; 
0x0004c1db: ljmp 0xa40f:0x5c246c8b; ret 0x101; 
0x0019dfd1: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x0017d3c4: ljmp 0xc031:0x8c483ff; pop ebx; ret; 
0x000bada1: ljmp 0xc229:0xc0bc0f10; jbe 0xbadd0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000badb1: ljmp 0xc229:0xc0bc0f20; jbe 0xbadd0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000badc1: ljmp 0xc229:0xc0bc0f30; jbe 0xbadd0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00041d6a: ljmp 0xc245:0xf20e183; cmovne edx, ebx; pop ebx; ret; 
0x000f1f48: ljmp 0xc283:0x142b60f; add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x0019dfe1: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x000744d5: ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0012b9e1: ljmp 0xd089:0x5b01e283; pop esi; pop edi; ret; 
0x0003af24: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x0019dff1: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x00137e33: ljmp 0xe181:0xc0b70f18; add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0019e001: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x000be558: ljmp 0xea03:0xcc808dff; push esi; inc ecx; jnp 0xbe568; cmove eax, edx; ret; 
0x000bf4c8: ljmp 0xea11:0xc808dff; push esi; inc ecx; jnp 0xbf4d8; cmove eax, edx; ret; 
0x00179087: ljmp 0xec83:0x10c483ff; or byte ptr [ebp - 0x689e47d], cl; call dword ptr [ebp + 0x50]; 
0x000df68c: ljmp 0xf00:0x3b8; inc ebp; ret 0x2ec3; 
0x000be55e: ljmp 0xf04:0x7b41f6ff; inc esp; ret 0x66c3; 
0x00199e4a: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x000be4f8: ljmp 0xf6e9:0x9c808dff; push esi; inc ecx; jnp 0xbe508; cmove eax, edx; ret; 
0x000c0148: ljmp 0xf6eb:0x7c808dff; push esi; inc ecx; jnp 0xc0158; cmove eax, edx; ret; 
0x000bf2f8: ljmp 0xf6ee:0x3c808dff; push esi; inc ecx; jne 0xbf306; cmove eax, edx; ret; 
0x0019144f: ljmp 0xf702:0x89068b04; ret 0xf; 
0x0018e34f: ljmp 0xf702:0x89078b04; ret 0xf; 
0x0013e7ec: lldt word ptr [ebx - 0x77]; ret; 
0x0013e7eb: lldt word ptr es:[ebx - 0x77]; ret; 
0x0018d62a: lock adc al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d6bb8: lock add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x54; stc; call dword ptr [eax - 0x18]; 
0x0016ccb6: lock add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0008f55a: lock add byte ptr [eax], al; add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902ca: lock add byte ptr [eax], al; add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092198: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008930a: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000887b0: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00097f68: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0008cff0: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009223d: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fd3a: lock add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000917bc: lock add byte ptr [eax], al; add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091429: lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x001608fc: lock add byte ptr [eax], al; add byte ptr [ecx], dh; fucomi st(3); adc cl, byte ptr [ebp - 0x7cffd98c]; ret; 
0x0008ab79: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c210: lock add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ebx + 0x1ba241c], 0; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009249e: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000936c6: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090829: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009288e: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009397c: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b96d: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bc68: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091a23: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba44: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b3d9: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c4: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092930: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008937e: lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00153adf: lock add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0017fed6: lock add dword ptr [ebx], 1; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008b968: lock and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000958dc: lock cmpxchg dword ptr [ebx], edx; jne 0x958f0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00094825: lock cmpxchg dword ptr [ebx], esi; jne 0x94830; xor eax, eax; pop ebx; pop esi; ret; 
0x00088d47: lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009591f: lock cmpxchg dword ptr [edx], ecx; jne 0x95916; xor eax, eax; pop ebx; ret; 
0x0009596d: lock cmpxchg dword ptr [edx], ecx; jne 0x95980; xor eax, eax; pop ebx; ret; 
0x0009451b: lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x0008ebec: lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x000944f4: lock dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x0017fe60: lock dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0012eddd: lock dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012ee69: lock dec dword ptr [ebx - 0x72dbdb84]; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012456f: lock dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bl, ah; or al, dh; call dword ptr [ebx + 0x56]; 
0x0009f5ae: lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x0009fbf5: lock dec dword ptr [edi]; inc esp; ret 0xf821; 
0x0009b226: lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x0009f243: lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x001227e8: lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00172177: lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00171f51: lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0013a9c0: lock sub dword ptr [eax - 0xc], 1; je 0x13a9d0; add esp, 4; pop ebx; pop esi; ret; 
0x0009469b: lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0018b2aa: lock xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a29de: lodsb al, byte ptr [esi]; aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000e3e25: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [eax - 0x73], dl; and esp, 0xffffffad; stc; call dword ptr [eax - 0x18]; 
0x0006b866: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00103b24: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00154a76: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; jl 0x154aa2; sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x00125c27: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x001a2f52: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000334d3: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008ea48: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00046dfa: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x76cfdb8c], cl; ret; 
0x0004d3be: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x000c5ea3: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x207bf033], cl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x00168bae: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00095068: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x001224f5: lodsb al, byte ptr [esi]; add eax, dword ptr [eax]; add al, ch; ret 0xfe87; 
0x00128c61: lodsb al, byte ptr [esi]; and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x10019], al; jmp dword ptr [ebp - 0x5f]; 
0x000c5a0b: lodsb al, byte ptr [esi]; and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xef39; 
0x000bd7a7: lodsb al, byte ptr [esi]; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0009472d: lodsb al, byte ptr [esi]; cmp esi, esp; call dword ptr [ebx + 0x50]; 
0x0008eced: lodsb al, byte ptr [esi]; fucom st(5); call dword ptr [eax - 0x73]; 
0x001616f3: lodsb al, byte ptr [esi]; jb 0x1616ef; call dword ptr [eax + 0x6a]; 
0x001617f3: lodsb al, byte ptr [esi]; jb 0x1617ef; call dword ptr [eax - 0x18]; 
0x0002ab16: lodsb al, byte ptr [esi]; jg 0x2ab12; call dword ptr [eax - 0x18]; 
0x0002b762: lodsb al, byte ptr [esi]; jg 0x2b75e; call dword ptr [eax - 0x18]; 
0x0002cdc0: lodsb al, byte ptr [esi]; jg 0x2cdbc; call dword ptr [eax - 0x18]; 
0x0002d9c7: lodsb al, byte ptr [esi]; jg 0x2d9c3; call dword ptr [eax - 0x18]; 
0x0002e190: lodsb al, byte ptr [esi]; jg 0x2e18c; call dword ptr [eax - 0x18]; 
0x0002ed8f: lodsb al, byte ptr [esi]; jg 0x2ed8b; call dword ptr [eax - 0x18]; 
0x00090e66: lodsb al, byte ptr [esi]; jl 0x90e62; call dword ptr [eax - 0x73]; 
0x00090eb6: lodsb al, byte ptr [esi]; jl 0x90eb2; call dword ptr [eax - 0x73]; 
0x00090f96: lodsb al, byte ptr [esi]; jl 0x90f92; call dword ptr [eax - 0x73]; 
0x00091140: lodsb al, byte ptr [esi]; jl 0x9113c; call dword ptr [eax - 0x73]; 
0x0008fa4a: lodsb al, byte ptr [esi]; jmp 0x8fa32; call dword ptr [eax + 0x56]; 
0x0002bee1: lodsb al, byte ptr [esi]; jns 0x2bedd; call dword ptr [eax - 0x73]; 
0x0002c0c3: lodsb al, byte ptr [esi]; jns 0x2c0bf; call dword ptr [eax - 0x73]; 
0x0002c3a2: lodsb al, byte ptr [esi]; jns 0x2c39e; call dword ptr [eax - 0x73]; 
0x0002c49d: lodsb al, byte ptr [esi]; jns 0x2c499; call dword ptr [eax + 0x68]; 
0x0002c4c0: lodsb al, byte ptr [esi]; jns 0x2c4bc; call dword ptr [eax + 0x68]; 
0x0002937a: lodsb al, byte ptr [esi]; jp 0x29376; call dword ptr [eax - 0x73]; 
0x000293ac: lodsb al, byte ptr [esi]; jp 0x293a8; call dword ptr [eax - 0x73]; 
0x00029430: lodsb al, byte ptr [esi]; jp 0x2942c; call dword ptr [eax - 0x73]; 
0x00029453: lodsb al, byte ptr [esi]; jp 0x2944f; call dword ptr [eax + 0x68]; 
0x00029476: lodsb al, byte ptr [esi]; jp 0x29472; call dword ptr [eax + 0x68]; 
0x0002e971: lodsb al, byte ptr [esi]; js 0x2e96d; call dword ptr [eax - 0x73]; 
0x0002ec4d: lodsb al, byte ptr [esi]; js 0x2ec49; call dword ptr [eax - 0x73]; 
0x0002ec88: lodsb al, byte ptr [esi]; js 0x2ec84; call dword ptr [eax - 0x73]; 
0x0002ecab: lodsb al, byte ptr [esi]; js 0x2eca7; call dword ptr [eax + 0x68]; 
0x0002ed67: lodsb al, byte ptr [esi]; js 0x2ed63; call dword ptr [eax + 0x68]; 
0x00105496: lodsb al, byte ptr [esi]; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00150364: lodsb al, byte ptr [esi]; mov cl, dh; call dword ptr [eax - 0x73]; 
0x000b2a3e: lodsb al, byte ptr [esi]; or al, 0; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a19: lodsb al, byte ptr [esi]; or al, 0; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00101aa6: lodsb al, byte ptr [esi]; or bh, cl; call dword ptr [eax - 0x73]; 
0x0004f7e4: lodsb al, byte ptr [esi]; or byte ptr [esp + ecx*4], 0xf8; dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x00165340: lodsb al, byte ptr [esi]; out 0xfc, eax; jmp dword ptr [esi - 0x70]; 
0x000a1389: lodsb al, byte ptr [esi]; ret 0xd; 
0x000d6579: lodsb al, byte ptr [esi]; ret 0xf0; 
0x0016b540: lodsb al, byte ptr [esi]; ret; 
0x0011e970: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x0006a29f: lodsb al, byte ptr [esi]; salc; clc; dec dword ptr [ebp - 0x6e85fe7c]; jecxz 0x6a2a9; jmp eax; 
0x0011a2b1: lodsb al, byte ptr [esi]; sar cl, 1; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00089a54: lodsb al, byte ptr [esi]; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000cb8a2: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000c52ce: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00158e7a: lodsb al, byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x00163bd5: lodsb al, byte ptr [esi]; sub al, 0xf3; call dword ptr [eax - 0x73]; 
0x0008dccb: lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax + 0x68]; 
0x0008df8c: lodsb al, byte ptr [esi]; xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x0009756d: lodsb al, byte ptr [esi]; xchg edi, eax; stc; call dword ptr [eax + 0x68]; 
0x000975a2: lodsb al, byte ptr [esi]; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b41a1: lodsb al, byte ptr [esi]; xchg esp, eax; or al, 0; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000576a9: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f290d: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x0002605b: lodsd eax, dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1098]; ret; 
0x0002607b: lodsd eax, dword ptr [esi]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00078d73: lodsd eax, dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x000df8dd: lodsd eax, dword ptr [esi]; cmp eax, -0x26; jne 0xdf920; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00031c32: lodsd eax, dword ptr [esi]; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00051db2: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000d9f69: lodsd eax, dword ptr [esi]; out 0xff, al; call dword ptr [ebp + 0x55]; 
0x0011d33a: lodsd eax, dword ptr [esi]; pop edi; stc; call dword ptr [eax + 0x55]; 
0x00041d67: lodsd eax, dword ptr [esi]; rcl bl, 1; ljmp 0xc245:0xf20e183; cmovne edx, ebx; pop ebx; ret; 
0x00034b89: lodsd eax, dword ptr [esi]; ret 0x1f; 
0x00136e4f: lodsd eax, dword ptr [esi]; ret 0xffee; 
0x00051dce: lodsd eax, dword ptr [esi]; ret; 
0x000e3e2d: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000d61a3: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00098ff4: lodsd eax, dword ptr [esi]; stc; dec dword ptr [ebx - 0x78727783]; js 0x98f96; stc; call dword ptr [eax + 0x68]; 
0x00178d2b: lodsd eax, dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x00030e3f: lodsd eax, dword ptr [esi]; sub al, 0x10; add byte ptr [ebp - 0x67e3f79], cl; call dword ptr [eax - 0x73]; 
0x000ba1a0: lodsd eax, dword ptr [esi]; xor al, 0xc; add byte ptr [ecx + 0x105ed0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000dad4c: lodsd eax, dword ptr fs:[esi]; stc; call dword ptr [eax - 0x73]; 
0x0010297b: loope 0x1029a1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x001042ea: loope 0x1042e9; call dword ptr [ecx + 0x6a]; 
0x0010deab: loope 0x10deff; int1; jmp dword ptr [ebp - 0x75]; 
0x00120bbe: loope 0x120bcf; xchg ebp, eax; ret; 
0x00120e7e: loope 0x120e7e; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126cec: loope 0x126cdd; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00126d0c: loope 0x126cfd; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00126e7b: loope 0x126e5c; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012736a: loope 0x1272f5; ret 0x448b; 
0x0012755b: loope 0x1274e6; ret 0x448b; 
0x0012802e: loope 0x127fb9; ret 0x448b; 
0x001280ea: loope 0x128075; ret 0x448b; 
0x0012831a: loope 0x1282a5; ret 0x448b; 
0x00133f66: loope 0x133f5a; jmp dword ptr [esi - 0x70]; 
0x0013448a: loope 0x13448b; jmp dword ptr [esi - 0x70]; 
0x00137e39: loope 0x137e3b; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x00138138: loope 0x13813a; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0013a2da: loope 0x13a265; ret 0x25; 
0x00140f89: loope 0x140f8f; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x001488b0: loope 0x14883b; jecxz 0x14883d; ret 0x25; 
0x001553be: loope 0x15541b; pop esi; pop edi; ret; 
0x0015ed83: loope 0x15edf6; stc; call dword ptr [eax + 0x6a]; 
0x0015edd7: loope 0x15ee4a; stc; jmp dword ptr [ebp - 0x75]; 
0x0015ee9b: loope 0x15ef0e; stc; call dword ptr [eax - 0x18]; 
0x0016afae: loope 0x16af39; ret 0x25; 
0x0016f82b: loope 0x16f87f; in al, dx; call dword ptr [eax - 0x73]; 
0x00174898: loope 0x17481d; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x001756eb: loope 0x175676; ret; 
0x00180580: loope 0x18050b; ret 0x25; 
0x00182100: loope 0x18208b; ret 0x25; 
0x00183b4b: loope 0x183b44; jmp dword ptr [esi - 0x70]; 
0x00183f10: loope 0x183e9b; ret 0x25; 
0x0018f4e5: loope 0x18f4e5; inc dword ptr [ecx + 0x3f870c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00191404: loope 0x1913fd; ret 1; 
0x0019d37b: loope 0x19d37d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0002f476: loope 0x2f48c; add byte ptr [0x2019bb], al; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x00030967: loope 0x308f2; ret 0x25; 
0x00030be0: loope 0x30b6b; ret 0x25; 
0x00031d46: loope 0x31d3e; ret 0xf03; 
0x000328a7: loope 0x328ba; add byte ptr [eax], al; lea eax, [eax + 0x11ac]; ret; 
0x00035a78: loope 0x35a03; ret; 
0x0003a593: loope 0x3a58b; les eax, ptr [edx]; je 0x3a59b; fchs; ret; 
0x0003a8f3: loope 0x3a8eb; les eax, ptr [edx]; je 0x3a8fb; fchs; ret; 
0x00041d6c: loope 0x41d8e; cmovne eax, edx; cmovne edx, ebx; pop ebx; ret; 
0x0005797f: loope 0x57904; jmp 0x89d7aa87; or byte ptr [ecx + 0xcc483d0], cl; ret; 
0x0005914b: loope 0x590d0; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0005a88e: loope 0x5a8d0; stc; call dword ptr [eax - 0x18]; 
0x00061a92: loope 0x61a95; mov byte ptr [esp + 0x3c], cl; jmp 0x60e62; lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x00062342: loope 0x62343; inc dword ptr [ebx - 0x17aaeb3c]; ret 0xff63; 
0x00067555: loope 0x67556; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x00070b8d: loope 0x70b8e; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x000924ab: loope 0x924b4; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092c06: loope 0x92c0f; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092e07: loope 0x92e10; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093441: loope 0x9344a; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098737: loope 0x986c2; ret 0x25; 
0x00098c17: loope 0x98ba2; ret 0x25; 
0x0009aa1c: loope 0x9aa0e; cmp eax, 0xb; mov eax, 8; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x000a55de: loope 0xa563b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000b2b2f: loope 0xb2ab4; ret; 
0x000b3667: loope 0xb35ec; ret; 
0x000b3683: loope 0xb3608; ret; 
0x000b377b: loope 0xb370a; je 0xb37a5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000b416f: loope 0xb40f4; ret; 
0x000b4d67: loope 0xb4cec; ret; 
0x000b4d83: loope 0xb4d08; ret; 
0x000b4e7b: loope 0xb4e0a; je 0xb4ea5; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000ba10f: loope 0xba094; ret; 
0x000ba71b: loope 0xba6aa; je 0xba745; add byte ptr [ebx + 0x5e], bl; ret; 
0x000bb3c6: loope 0xbb34b; ret 0x6640; 
0x000bc89c: loope 0xbc82b; jbe 0xbc8a0; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000bca57: loope 0xbca64; add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000d207c: loope 0xd208d; je 0xd20a0; ret; 
0x000e315e: loope 0xe30e9; ret 0x25; 
0x000e97d2: loope 0xe975d; ret 0x25; 
0x000ecea0: loope 0xece2b; ret 0x25; 
0x000f04d0: loope 0xf045b; ret 0x25; 
0x000f20d8: loope 0xf2063; ret 0x25; 
0x000fcb7f: loope 0xfcb80; add esi, esi; ret; 
0x0018ef90: maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000b32fd: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0018d97a: maxps xmm5, xmm0; mov eax, 0x81fffefc; ret; 
0x0018b87a: maxps xmm5, xmm0; mov eax, 0x81ffff1d; ret; 
0x0018987a: maxps xmm5, xmm0; mov eax, 0x81ffff3d; ret; 
0x000f2d56: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098060: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00101334: mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000f2d22: mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009a7be: mov ah, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000d3c5f: mov ah, 0; add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000a0fdd: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x657a380], cl; call dword ptr [eax + 0x68]; 
0x00049fe7: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xf539; 
0x001250dc: mov ah, 0x24; mov al, byte ptr [0xb8000000]; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c3dc: mov ah, 0x24; mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000a6634: mov ah, 0x24; push eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x0019f17a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x00137e4a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000bb4ba: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000bb4da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000bb02a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000bb03a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0018613a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017083a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x00085d8a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000e244a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00125f22: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00102a2a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000d20a6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x00088dc7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0019e426: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x0019e436: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x0019e446: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x0019e456: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x0019e466: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x0019e3c6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x0019e3d6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x0019e3e6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x0019e3f6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x0019e406: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x0019f944: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019e416: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x0019ea86: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x0019ea96: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x0019eaa6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x0019eab6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x0019ea26: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x0019ea36: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x0019ea46: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x0019ea56: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x0019ea66: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x0019ea76: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x0019f917: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000d20b6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0019d055: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x0019f985: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x0019ea15: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d20c5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000ace45: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000baae5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x001656fa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016570a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x000ace8a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000920da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000962f2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x0019f97a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0019df4a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0008cf6a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000adaea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x00163aa8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x00094ea8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00061a19: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008a779: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00080d78: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d20d8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d20e8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d20f8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d2108: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d2118: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d2128: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x00041509: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000b717a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0008897a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000e059a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00179e32: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000bb16a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007656a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00034fe2: mov ah, 0x39; ret 0x820f; 
0x0009a70a: mov ah, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0017e0b4: mov ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x000500cb: mov ah, 0x3f; stc; call dword ptr [edi + 0x6a]; 
0x00119fc1: mov ah, 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0017e038: mov ah, 0x5a; sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0015a9fb: mov ah, 0x70; stc; call dword ptr [eax - 0x18]; 
0x0015ab8e: mov ah, 0x70; stc; call dword ptr [eax - 0x73]; 
0x000e7dbb: mov ah, 0x83; in al, dx; add al, 0x6a; add eax, 0xae4c838d; stc; call dword ptr [eax - 0x73]; 
0x000e3b3f: mov ah, 0x83; in al, dx; or al, 0x8d; adc dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x0012fcda: mov ah, 0x83; les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00058417: mov ah, 0x88; stc; call dword ptr [eax - 0x73]; 
0x000983d8: mov ah, 0x89; ret 0x458b; 
0x000fdd5e: mov ah, 0x97; or al, 9; stc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0009ede8: mov ah, 0xa4; stc; call dword ptr [eax - 0x18]; 
0x0009c69b: mov ah, 0xa7; stc; call dword ptr [eax - 0x73]; 
0x000c00ca: mov ah, 0xab; stc; call dword ptr [eax - 0x18]; 
0x000c00ca: mov ah, 0xab; stc; call dword ptr [eax - 0x18]; dec esp; cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x0008cd44: mov ah, 0xb9; or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x001479f0: mov ah, 0xbf; stc; call dword ptr [eax - 0x73]; 
0x001522e9: mov ah, 0xc2; stc; call dword ptr [eax - 0x18]; 
0x00152381: mov ah, 0xc3; stc; call dword ptr [eax - 0x18]; 
0x0016aecf: mov ah, 0xc6; stc; call dword ptr [eax - 0x73]; 
0x000a5037: mov ah, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x001396d2: mov ah, 0xef; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; 
0x00097cfa: mov ah, 0xf8; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0012700d: mov ah, 0xf9; call dword ptr [eax + 0x55]; 
0x00123649: mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00123639: mov ah, 0xf9; call dword ptr [eax - 0x73]; 
0x00072815: mov ah, 0xff; call dword ptr [ecx + 0x51]; 
0x0006737c: mov ah, 0xff; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x0010f81a: mov ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0010ad8e: mov ah, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00104016: mov ah, 1; add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0014f6e1: mov ah, 2; add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x0002785d: mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x000a5eb7: mov ah, bh; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00103d2b: mov al, 0; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [edx - 0x7d000000], bh; jmp dword ptr [esi]; 
0x0003c3d1: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010b573: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b4fd: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000baf6c: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00168e4d: mov al, 0; add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00168e6f: mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00169590: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000bad0c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000b4e74: mov al, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0018d36a: mov al, 0x15; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00085d4d: mov al, 0x1a; add byte ptr [ebx - 0x7c72eb14], al; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x0018c86a: mov al, 0x20; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b7ea: mov al, 0x2e; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00099400: mov al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00188d6a: mov al, 0x56; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00027076: mov al, 0x7e; stc; call dword ptr [eax - 0x73]; 
0x000260f9: mov al, 0x7e; stc; call dword ptr [edx - 0x73]; 
0x000972c4: mov al, 0x80; add dword ptr [eax], eax; add al, ch; ret 0xff42; 
0x0002d8f7: mov al, 0x80; stc; call dword ptr [eax - 0x73]; 
0x0008cf2d: mov al, 0x83; in al, dx; or al, 0x8d; adc byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000359b6: mov al, 0x83; in al, dx; or al, 0x8d; sbb cl, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x000bf9b4: mov al, 0x83; in al, dx; or al, 0x8d; xchg byte ptr [eax - 0x55], bh; stc; call dword ptr [eax - 0x18]; 
0x00032dd2: mov al, 0x83; js 0x32dea; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x000a8bac: mov al, 0x83; ret 0x8301; 
0x0011ef7f: mov al, 0x83; ret 0xeb03; 
0x0005a590: mov al, 0x89; inc ebp; mov eax, 0xfff977e9; call dword ptr [eax + 0x52]; 
0x000cbb1e: mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x0003374b: mov al, 0x8b; test byte ptr [ebx - 0x7f4], dh; test eax, eax; je 0x33759; call eax; 
0x00035b92: mov al, 0x8d; cmp al, 0x38; stc; call dword ptr [eax - 0x73]; 
0x00073cd7: mov al, 0x8d; stc; call dword ptr [eax - 0x73]; 
0x0016a9c9: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016a9c9: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0016b7ec: mov al, 0x98; add byte ptr [eax], al; add al, ch; lcall 0x18c4, 0x83ffeb79; pop ebx; ret; 
0x000be051: mov al, 0xaa; stc; call dword ptr [eax - 0x18]; 
0x0014b513: mov al, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x000504fc: mov al, 0xde; push es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00182897: mov al, 0xe8; inc ebx; ret 0xfff6; 
0x000f0c67: mov al, 0xe8; ret; 
0x00134a67: mov al, 0xe8; xor eax, 0xffffffff; dec dword ptr [ebp - 0x6470779]; call dword ptr [eax - 0x73]; 
0x0017e19f: mov al, 0xf0; jmp dword ptr [ebp - 0x75]; 
0x00180b94: mov al, 0xf3; call dword ptr [edi - 1]; 
0x0010741f: mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x001054a7: mov al, 0xf9; call dword ptr [eax - 0x18]; 
0x001054a7: mov al, 0xf9; call dword ptr [eax - 0x18]; jo 0x105496; bnd call dword ptr [ebp + 0x57]; 
0x00104985: mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0007899b: mov al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00158ac8: mov al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x00120e75: mov al, 0xff; adc byte ptr [eax], al; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008e378: mov al, 0xff; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00096e2b: mov al, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x0012687e: mov al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004b30c: mov al, 8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00170552: mov al, al; hlt; call ecx; 
0x000f5c79: mov al, byte ptr [0x1000001]; ret; 
0x001a0eac: mov al, byte ptr [0x29000008]; ret 0xc283; 
0x000cf951: mov al, byte ptr [0x29ffffc9]; ret 0x3b8; 
0x0018b3fa: mov al, byte ptr [0x3000432]; sbb al, 0x8b; jmp ebx; 
0x0018897a: mov al, byte ptr [0x300045a]; sbb al, 0x8b; jmp ebx; 
0x00102fc8: mov al, byte ptr [0x30b22e8]; add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0014bbfb: mov al, byte ptr [0x31000000]; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x000fe2b9: mov al, byte ptr [0x3efff909]; jmp eax; 
0x001732c5: mov al, byte ptr [0x50878d50]; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + 0x72], ebx; stc; call dword ptr [eax + 0x6a]; 
0x0007fea3: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x000aca52: mov al, byte ptr [0x5b5f0000]; ret; 
0x000ace3c: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x00025570: mov al, byte ptr [0x65000000]; add eax, dword ptr [0]; ret; 
0x0017d722: mov al, byte ptr [0x65000000]; mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00086d8b: mov al, byte ptr [0x808b001a]; dec esp; push cs; add byte ptr [eax], al; ret; 
0x000f2789: mov al, byte ptr [0x83000000]; cmp al, 2; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x0015f7c5: mov al, byte ptr [0x83000000]; cmp al, 2; or ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x000ff9b5: mov al, byte ptr [0x83000000]; in al, dx; or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x000d520c: mov al, byte ptr [0x83000000]; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x0002714a: mov al, byte ptr [0x85000010]; sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x00024e7a: mov al, byte ptr [0x89000000]; add al, 0x11; mov eax, 0xffffffff; ret; 
0x000c4145: mov al, byte ptr [0x89000000]; fimul dword ptr [ebp - 0x7efb47bc]; ret 0; 
0x00123f19: mov al, byte ptr [0x89000000]; inc esp; and al, 0x7c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0014d7e7: mov al, byte ptr [0x89000000]; ret 0xdb31; 
0x0005db19: mov al, byte ptr [0x89000000]; ret; 
0x00140bef: mov al, byte ptr [0x89000001]; ret; 
0x0017a11c: mov al, byte ptr [0x89000003]; inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00157bdc: mov al, byte ptr [0x8900022f]; xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00092547: mov al, byte ptr [0x8900558b]; ret; 
0x000cf98b: mov al, byte ptr [0x89ffffc9]; test dword ptr [eax - 0x72000037], edx; inc esi; dec dword ptr [edi]; dec edi; ret 0xff31; 
0x00055fa4: mov al, byte ptr [0x89ffffc9]; test dword ptr [eax - 0x74000037], edi; test dword ptr [eax + 0x29ffffc9], esi; ret; 
0x00116e27: mov al, byte ptr [0x8b530011]; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ad7d: mov al, byte ptr [0x8d08ec83]; xchg esi, eax; sti; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x0014d3a7: mov al, byte ptr [0x8d500000]; or dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0014d3ae: mov al, byte ptr [0x8d500000]; or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x00054462: mov al, byte ptr [0x8dffffc9]; xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x00055ba1: mov al, byte ptr [0x8dffffc9]; xchg dword ptr [edi + eax*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000567a4: mov al, byte ptr [0x8dffffc9]; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0003f552: mov al, byte ptr [0x8dfffffc]; test dword ptr [edx + 0x3c], ebx; stc; dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0019e9ac: mov al, byte ptr [0xa8000000]; inc eax; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0009edd2: mov al, byte ptr [0xa82c878d]; stc; call dword ptr [eax - 0x73]; 
0x00094391: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x001250de: mov al, byte ptr [0xb8000000]; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00118d15: mov al, byte ptr [0xb9000000]; add dword ptr [eax + eax], edx; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00094bfb: mov al, byte ptr [0xc4830008]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0003ccc7: mov al, byte ptr [0xc7000000]; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x00175105: mov al, byte ptr [0xc970878d]; stc; call dword ptr [eax - 0x73]; 
0x000c20dc: mov al, byte ptr [0xe9000000]; cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x0016d852: mov al, byte ptr [0xec83fff7]; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x000900e9: mov al, byte ptr [0xf7fffffd]; ret 0; 
0x00164820: mov al, byte ptr [0xfcf2cae8]; jmp dword ptr [esi - 0x70]; 
0x000d580b: mov al, byte ptr [ebx - 0x7c72f314]; outsd dx, dword ptr [esi]; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000af276: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000af3b6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b9619: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaeb6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000aafd6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000af3d4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000aaff4: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b3b4a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b3caa: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b96bb: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b250a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b266a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000af414: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab034: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0019d2e2: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000af250: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000af390: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b95f3: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aae90: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000aafb0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00153ade: mov al, dh; add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000af2a4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000af3e4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000aaed4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000ab004: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b3b6a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b3cca: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b96db: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b252a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b268a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af434: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000ab054: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af260: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000af3a0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000af3b0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000aafd0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b9603: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaea0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000aafc0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0019e615: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x000dfd65: mov bh, 0; add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001147ff: mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001037d9: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0018d563: mov bh, 0x13; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012c37f: mov bh, 0x14; inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x0012b9fd: mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x0012c27f: mov bh, 0x14; inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x0012c07f: mov bh, 0x14; inc edx; and edx, 0x200; mov eax, edx; ret; 
0x0012c17f: mov bh, 0x14; inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x0012be7f: mov bh, 0x14; inc edx; and edx, 0x400; mov eax, edx; ret; 
0x0012c0ff: mov bh, 0x14; inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x0012beff: mov bh, 0x14; inc edx; and edx, 1; mov eax, edx; ret; 
0x0012bf7f: mov bh, 0x14; inc edx; and edx, 2; mov eax, edx; ret; 
0x0012c1ff: mov bh, 0x14; inc edx; and edx, 4; mov eax, edx; ret; 
0x0012bdff: mov bh, 0x14; inc edx; and edx, 8; mov eax, edx; ret; 
0x0018ca63: mov bh, 0x1e; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b5e3: mov bh, 0x30; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007583c: mov bh, 0x30; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0009dcc7: mov bh, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x000819e5: mov bh, 0x39; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009afd0: mov bh, 0x39; ret 0xb374; 
0x00135445: mov bh, 0x44; and al, 4; rol ax, 8; ret; 
0x000ef705: mov bh, 0x48; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0005db65: mov bh, 0x49; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017bc4f: mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0014337a: mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x001190a5: mov bh, 0x54; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d46a1: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x00188b63: mov bh, 0x58; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013b6c7: mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00144868: mov bh, 0x59; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00150a84: mov bh, 0x6e; stc; call dword ptr [eax + 0x6a]; 
0x00161518: mov bh, 0x80; ror cl, cl; stc; jmp dword ptr [esi - 0x77]; 
0x000274c6: mov bh, 0x81; cld; jle 0x274c4; jmp dword ptr [esi - 0x77]; 
0x000344d8: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00027eef: mov bh, 0x85; or al, 0x7f; stc; jmp dword ptr [esi - 0x77]; 
0x000a8fb8: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000586a1: mov bh, 0x8d; xchg dword ptr [ecx + ecx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00037aa4: mov bh, 0x93; in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x00075852: mov bh, 0x94; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00027268: mov bh, 0x97; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x000b4d7b: mov bh, 0xb1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014483f: mov bh, 0xc0; add esp, 0x2c; ret; 
0x00137e36: mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00042120: mov bh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00128910: mov bh, 0xc0; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x000422d0: mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000426ac: mov bh, 0xc2; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x00041ccc: mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00041da0: mov bh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000d94ff: mov bh, 0xe4; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x0007585d: mov bh, 0xe8; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00075847: mov bh, 0xec; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00147a86: mov bh, 0xed; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00139369: mov bh, 0xef; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; 
0x0015c359: mov bh, 0xf2; call dword ptr [eax - 0x18]; 
0x001303ee: mov bh, 0xf9; call dword ptr [eax + 0x6a]; 
0x0012edc3: mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012f736: mov bh, 0xf9; call dword ptr [eax - 0x75]; 
0x00081e67: mov bh, 0xf; add byte ptr [ecx + 0x1aefcac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00186e1b: mov bh, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0005855d: mov bh, 0xfd; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000379c5: mov bh, 0xfe; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009f16b: mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000341b3: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034183: mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034153: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034093: mov bh, 4; push eax; and eax, 0x200; ret; 
0x000340f3: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00034003: mov bh, 4; push eax; and eax, 0x400; ret; 
0x000340c3: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034063: mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034263: mov bh, 4; push eax; and eax, 1; ret; 
0x00034033: mov bh, 4; push eax; and eax, 2; ret; 
0x00034123: mov bh, 4; push eax; and eax, 4; ret; 
0x00033fd3: mov bh, 4; push eax; and eax, 8; ret; 
0x00131cab: mov bh, 4; push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0004053c: mov bh, 7; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0018a099: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0016b0e2: mov bh, ah; jmp dword ptr [esi - 0x70]; 
0x0009a6d7: mov bh, al; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000428c4: mov bh, al; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x00138cd2: mov bh, bl; cli; jmp dword ptr [esi - 0x3f]; 
0x00138cd2: mov bh, bl; cli; jmp dword ptr [esi - 0x3f]; ret; 
0x000f4660: mov bh, byte ptr [ecx]; ret; 
0x0018f210: mov bh, cl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005a840: mov bh, cl; call dword ptr [eax - 0x18]; 
0x0005a1c0: mov bh, cl; call dword ptr [eax - 0x73]; 
0x0013470a: mov bh, cl; dec dword ptr [ebp - 0x4417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0003c461: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003eab9: mov bl, 0; add byte ptr [eax], al; call eax; 
0x0019faf9: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0003c433: mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011a49d: mov bl, 0; add dword ptr [eax], eax; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x000287bd: mov bl, 0x10; add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000260c9: mov bl, 0x4a; adc eax, 0x241c8900; call esi; 
0x0011d15b: mov bl, 0x5b; stc; call dword ptr [eax + 0x55]; 
0x00086e16: mov bl, 0x5c; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000ba1c3: mov bl, 0x5e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0012f68f: mov bl, 0x65; stc; call dword ptr [eax - 0x75]; 
0x001943d3: mov bl, 0x6c; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0012fb23: mov bl, 0x85; stc; call dword ptr [edx + 0x52]; 
0x0002e1ab: mov bl, 0x8b; jl 0x2e1d3; cmp al, 0x8d; xchg esp, ebp; js 0x2e1ae; call dword ptr [eax - 0x73]; 
0x000a0674: mov bl, 0x8c; in eax, dx; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00155d0b: mov bl, 0x94; mov eax, dword ptr [0x7be80000]; aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x000787e8: mov bl, 0xb1; cli; jmp dword ptr [esi - 0x70]; 
0x00155f4b: mov bl, 0xb4; mov eax, dword ptr [0x3be80000]; shr ah, cl; jmp dword ptr [ebp - 0x75]; 
0x00177905: mov bl, 0xb4; or eax, 0xec830000; or byte ptr [ebp - 0x689f245], cl; call dword ptr [edi + 0x56]; 
0x00107c9b: mov bl, 0xcc; adc cl, bh; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0012a679: mov bl, 0xcc; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0017813b: mov bl, 0xd; jbe 0x178138; call dword ptr [esi + 0x57]; 
0x0003c327: mov bl, 0xe0; dec dword ptr [edi]; inc esp; ret 0xe4e9; 
0x00169710: mov bl, 0xec; call dword ptr [eax - 0x73]; 
0x00139721: mov bl, 0xef; call dword ptr [ebx + 0x50]; 
0x00178198: mov bl, 0xef; jne 0x178195; call dword ptr [esi + 0x57]; 
0x0017de6a: mov bl, 0xf0; jmp dword ptr [ebp - 0x75]; 
0x0015c019: mov bl, 0xf2; call dword ptr [eax - 0x18]; 
0x0015c019: mov bl, 0xf2; call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x00123665: mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x00078609: mov bl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00055a82: mov bl, 0xff; dec dword ptr [ebx - 0x360363]; call dword ptr [esi - 0x75]; 
0x0012458a: mov bl, 1; add byte ptr [eax], al; int 0x80; 
0x000f2298: mov bl, 8; add byte ptr [ecx + 0x13eb99c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0016a8a3: mov bl, ch; inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x000a5ead: mov byte ptr [0x41f6ffe7], al; jne 0xa5eb6; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000a5f5d: mov byte ptr [0x41f6fff6], al; jbe 0xa5f74; cmove eax, edx; ret; 
0x000fecc5: mov byte ptr [0x4ba], al; add byte ptr [ecx], ch; ret 0xd101; 
0x0014703b: mov byte ptr [0x4d8bfff5], al; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x000b2c5a: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00165f93: mov byte ptr [0x81000176], al; ret; 
0x000bb993: mov byte ptr [0x81000c1c], al; ret; 
0x00041f5a: mov byte ptr [0x830015e3], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00058366: mov byte ptr [0x868d000d], al; pushfd; mov cl, bh; call dword ptr [eax - 0x73]; 
0x00092dd2: mov byte ptr [0x89000000], al; ret 0xf283; 
0x0017bc82: mov byte ptr [0x89000004], al; ret 0xd139; 
0x0018053a: mov byte ptr [0x89fff3c0], al; ret; 
0x00099adb: mov byte ptr [0x8b000001], al; je 0x99b06; dec esp; call dword ptr gs:[0x10]; 
0x0015951e: mov byte ptr [0x8d500000], al; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x00159460: mov byte ptr [0x8d500000], al; cmp dword ptr [eax + ecx*4], -0xe; call dword ptr [eax - 0x18]; 
0x00159be2: mov byte ptr [0x8d500000], al; cmp dword ptr [edi + ecx*4 - 0x17af000e], 0x6e; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00159ca5: mov byte ptr [0x8d500000], al; or esp, 0xffffff86; int1; call dword ptr [eax - 0x73]; 
0x001596ca: mov byte ptr [0x8d500000], al; sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x00159525: mov byte ptr [0x8d500000], al; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0016d07d: mov byte ptr [0xc483fffc], al; adc byte ptr [ebp - 0x737af040], al; jns 0x16d075; dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x001743ee: mov byte ptr [0xe8fffffe], al; stc; idiv bl; jmp dword ptr [esi - 0x70]; 
0x000ff9a8: mov byte ptr [0xf03ff83], al; test dword ptr [edx - 0x74000008], ecx; mov esp, 0xa024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0019c7ea: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x000ba40e: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f88: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000328a5: mov byte ptr [eax + 0x11e1], dl; lea eax, [eax + 0x11ac]; ret; 
0x000ba494: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b700e: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba518: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7092: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba683: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0019d04b: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x0019d298: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019ee33: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000ba25c: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e26: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba288: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e42: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005750c: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000ba30a: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e94: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00058589: mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0007630e: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000b4d89: mov byte ptr [eax + eax], cl; add ecx, 0x10b1a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d76: mov byte ptr [eax + eax], cl; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d5a: mov byte ptr [eax + eax], cl; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003fafe: mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0016defd: mov byte ptr [eax + esi], 0; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00167b7d: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x167b70; pop ebx; ret; 
0x00141b83: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x0019f0cf: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0011aa7a: mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000a5410: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00119e49: mov byte ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0008a914: mov byte ptr [eax], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0004ab84: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00125517: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125517: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001050f5: mov byte ptr [eax], al; add byte ptr [eax], al; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0019e364: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x0019d7e4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x00104ff6: mov byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00082f24: mov byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0007b31a: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00076318: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000ba220: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b9a53: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b9855: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00058481: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000ba235: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e00: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098af7: mov byte ptr [ebp - 0x6678779], cl; call dword ptr [eax + 0x68]; 
0x00098b5a: mov byte ptr [ebp - 0x6678779], cl; call dword ptr [eax - 0x73]; 
0x0014cb63: mov byte ptr [ebx + 0x4e68], 0; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x0016f069: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0014cadb: mov byte ptr [ebx + 0x5ea8], 0; mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0014c943: mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x000bb479: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00137b51: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x000c0d08: mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x0002573e: mov byte ptr [ebx - 0x72fbdb8c], cl; xchg byte ptr [esi + edi*2 - 7], bh; call dword ptr [eax - 0x73]; 
0x0017785a: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0015f38c: mov byte ptr [ebx - 0xf76fd12], 0x5e; pop edi; pop ebp; ret; 
0x0011ec4f: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013bb68: mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x00096f0e: mov byte ptr [ebx], bh; add byte ptr [eax], al; ret; 
0x000ace83: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000acea2: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000acee4: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000d7377: mov byte ptr [ecx + eax - 0x137d0000], dh; or byte ptr [ebx - 0x72f3dbac], cl; and bh, 0x38; stc; call dword ptr [eax + 0x53]; 
0x000bc7b8: mov byte ptr [ecx + eax], 0; dec ecx; jne 0xbc7b8; pop esi; ret; 
0x000e4f97: mov byte ptr [ecx + edi], al; ret; 
0x000bbf70: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x001374fa: mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x001312ed: mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x0013128d: mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x00188cad: mov byte ptr [ecx - 1], cl; inc dword ptr [ecx + 0x45767c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a1c33: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x000ea2c1: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x0005edc8: mov byte ptr [ecx], 0x83; ret; 
0x000d2a5b: mov byte ptr [ecx], 0x83; xlatb; add byte ptr [ecx], bh; ret; 
0x0012f175: mov byte ptr [ecx], 0x89; ret 0xb70f; 
0x001511ef: mov byte ptr [ecx], 0xeb; ret; 
0x00040c11: mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007a7b0: mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x000ace60: mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b499b: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000b32bb: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b4a21: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000b3341: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000b4aa5: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000b33c5: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b34c5: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b4809: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x000b3169: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000b4837: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000b3187: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b48ab: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x000b31cb: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x0019d2de: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000889b5: mov byte ptr [edi + ecx], cl; add eax, 0x1a847b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x000f4ffd: mov byte ptr [edi - 7], dl; call dword ptr [eax + 0x55]; 
0x000bc37d: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000bc723: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0018700e: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018f249: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0016e195: mov byte ptr [edi], ch; add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x000cb9c1: mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x000b47e2: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000b3142: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000b99b1: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0009aa29: mov byte ptr [edx + 0x3c18], al; ret; 
0x0008a912: mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00137375: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000b6740: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a58f5: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000af279: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000af3b9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b961c: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaeb9: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000aafd9: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b6750: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0018a4d2: mov byte ptr [edx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000af297: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x000af3d7: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b964a: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaec7: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000aaff7: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b6780: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a59f8: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a5938: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000af2db: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000af41b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b96be: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaefb: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab03b: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b9954: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b67f0: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0019c7e5: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x00186815: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018baa4: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0018998c: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b97c: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000a58c0: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x0007fda5: mov byte ptr [edx], 0; pop ebx; ret; 
0x0012d3af: mov byte ptr [edx], 0x20; pop ebx; pop esi; pop edi; ret; 
0x0019d02d: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x19d084; add eax, 0xb; ret; 
0x0012d362: mov byte ptr [edx], 0xa; pop ebx; pop esi; pop edi; ret; 
0x000af252: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000af392: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0018c103: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018a133: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b95f5: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aae92: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000aafb2: mov byte ptr [edx], al; mov eax, edx; ret; 
0x00118ceb: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0018bfbb: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018a00b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00081961: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0009b69c: mov byte ptr [esi + 0x3c04], 1; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x000d37d5: mov byte ptr [esi + 0xf000001], dl; xchg ebp, eax; ret 0xc238; 
0x00033e18: mov byte ptr [esi - 0x73000000], ah; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [esi - 1]; 
0x00061a94: mov byte ptr [esp + 0x3c], cl; jmp 0x60e62; lea esi, [esi]; mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x0008d5f1: mov byte ptr [esp + 0x46], 0; mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0008d5fb: mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0008cdad: mov byte ptr [esp + eax], dh; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000ba234: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0005560e: mov ch, 0; add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365f63], cl; call dword ptr [eax - 1]; 
0x00056623: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x73]; 
0x000cf94a: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x365f43], cl; jmp ptr [ecx]; ret 0x3b8; 
0x00054da7: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000f2f16: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019ea07: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x000f2ee2: mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000a0b1f: mov ch, 0; add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000287e0: mov ch, 0; add byte ptr [ebx - 0x72c3dba4], cl; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x0012ee67: mov ch, 0x4e; lock dec dword ptr [ebx - 0x72dbdb84]; xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00164c27: mov ch, 0x5c; cmp esi, ebx; call dword ptr [esi - 0x73]; 
0x0009c57f: mov ch, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000a3fb2: mov ch, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000e389e: mov ch, 0xe8; dec esp; add al, byte ptr [0x244c8b00]; or byte ptr [ebp - 0x651db7f], cl; call dword ptr [eax - 0x73]; 
0x00126fd4: mov ch, 0xf9; call dword ptr [eax + 0x55]; 
0x0012b1e8: mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00078369: mov ch, 0xfa; jmp dword ptr [esi - 0x70]; 
0x000e89d6: mov ch, 0xfb; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001770b7: mov ch, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000587fd: mov ch, 0xfd; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0014858b: mov ch, 0xfe; dec dword ptr [ebp - 0x63ff77d]; call dword ptr [eax - 0x73]; 
0x00199c4d: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000b4347: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bdd49: mov ch, byte ptr [ecx + eax]; add byte ptr [ebp + 0x3cc492], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000d701e: mov ch, byte ptr [esi + edi]; add byte ptr [ebp - 0x15df736e], cl; call dword ptr [ecx + 0x52]; 
0x000d2090: mov ch, dh; and ch, 0xf; je 0xd20b0; add eax, 2; ret; 
0x0003d0b3: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003d05e: mov cl, 0; add byte ptr [eax], al; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00046c5a: mov cl, 0; add byte ptr [ebx - 0x76ebdbb4], cl; ret 0x1b8; 
0x000b4d60: mov cl, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00088d49: mov cl, 0x11; setne al; movzx eax, al; pop ebx; ret; 
0x000958de: mov cl, 0x13; jne 0x958f0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00094827: mov cl, 0x33; jne 0x94830; xor eax, eax; pop ebx; pop esi; ret; 
0x0010f7db: mov cl, 0x39; int1; jmp dword ptr [ebp - 0x75]; 
0x0009863a: mov cl, 0x50; stc; call dword ptr [eax - 0x18]; 
0x0009c07b: mov cl, 0x51; stc; call dword ptr [eax + 0x53]; 
0x0009c154: mov cl, 0x51; stc; call dword ptr [eax + 0x56]; 
0x0008ebee: mov cl, 0x54; and al, 4; ret; 
0x000e754c: mov cl, 0x56; stc; call dword ptr [eax - 0x18]; 
0x00095921: mov cl, 0xa; jne 0x95916; xor eax, eax; pop ebx; ret; 
0x0009596f: mov cl, 0xa; jne 0x95980; xor eax, eax; pop ebx; ret; 
0x0009451d: mov cl, 0xa; mov eax, 0x10; cmove eax, ecx; ret; 
0x0013d6a6: mov cl, 0xb8; add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00092b7d: mov cl, 0xee; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0010ae08: mov cl, 0xf9; call dword ptr [eax - 0x18]; 
0x0010aaf0: mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x000787e9: mov cl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00178968: mov cl, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000f0ae4: mov cl, 0xfc; call dword ptr [edi - 1]; 
0x000d0ba1: mov cl, 0xfe; inc dword ptr [ebx + 0x6ce910c4]; jmp 0xd0baa; dec dword ptr [ebp - 0x35f37b]; call dword ptr [edi + 0x31]; 
0x001268de: mov cl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00057f85: mov cl, bh; call dword ptr [eax - 0x18]; 
0x00073d95: mov cl, bh; call dword ptr [eax - 0x18]; cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00073ce8: mov cl, bh; call dword ptr [eax - 0x18]; das; add ah, bh; jmp dword ptr [esi - 0x70]; 
0x000740a5: mov cl, bh; call dword ptr [eax - 0x18]; jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x0005849a: mov cl, bh; call dword ptr [eax - 0x18]; jge 0x58459; std; jmp dword ptr [esi - 0x70]; 
0x00073e0c: mov cl, bh; call dword ptr [eax - 0x18]; or edi, edi; sti; jmp dword ptr [esi - 0x70]; 
0x00057f59: mov cl, bh; call dword ptr [eax - 0x73]; 
0x00082f23: mov cl, byte ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x0008ef59: mov cl, byte ptr [ebp + 0xb6]; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x00029a3d: mov cl, byte ptr [ebx - 0x72c3db8c]; xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00150365: mov cl, dh; call dword ptr [eax - 0x73]; 
0x000d2079: mov cl, dl; and cl, 0xf; je 0xd20a0; ret; 
0x000c6d3e: mov cs, word ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f47f2: mov cs, word ptr [eax]; add byte ptr [ecx + 0x13c63fc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000fb723: mov cs, word ptr [ecx - 0x3e7c71fc]; add dword ptr [ecx], ecx; ret 0xf983; 
0x000847e5: mov cs, word ptr [edi]; add byte ptr [ecx + 0x1ac64cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0010880d: mov cs, word ptr [edx + edx - 7]; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000b6e20: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00090dcb: mov dh, 0; add byte ptr [eax], al; add bh, dh; ret 0; 
0x0017fe63: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00092063: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x0012cc73: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x001265fb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012527b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0019d20b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0008ef5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x000f272b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0xfffa], bh; pop ebx; ret; 
0x000a0c5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0018e61b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0005cf0b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x6973f7b], cl; call dword ptr [ebx + 0x50]; 
0x0019f02b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0009600b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x708b0cec], al; or al, 0xff; jo 0x9601d; call dword ptr [eax]; 
0x0005e5e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00138253: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; out 0x38, eax; stc; call dword ptr [eax + 0x53]; 
0x0016b573: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; add bl, byte ptr [ecx - 7]; call dword ptr [edi + 0x56]; 
0x0016e29b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; dec esp; sal ebx, cl; call dword ptr [eax - 0x73]; 
0x0014d113: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7f72f314], al; dec esp; ret 0xfff9; 
0x0013b1ab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x9363], cl; dec dword ptr [ebp + 0x48d4904]; ret; 
0x00088723: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7611142d], cl; ret 0xcceb; 
0x0009b463: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x0013814b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00091cab: mov dh, 0; add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008808b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x0012c9f3: mov dh, 0; add byte ptr [eax], al; add dh, al; inc edx; jmp dword ptr [eax]; 
0x0019edcb: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x0019e306: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000856ec: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0018a131: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00199a43: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000832bf: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00039825: mov dh, 0x11; test dl, dl; jne 0x39808; ret; 
0x00199a46: mov dh, 0x12; sub eax, edx; ret; 
0x00167b7a: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x167b70; pop ebx; ret; 
0x00061a0d: mov dh, 0x14; and al, 0x89; ret; 
0x000cb9c3: mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0014077a: mov dh, 0x18; test ebx, ebx; jne 0x140748; mov eax, 1; pop ebx; ret; 
0x000a8cbb: mov dh, 0x3c; cmp byte ptr [ebp - 0x7c5b8a01], al; ret 0x8301; 
0x00085ef7: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00189aad: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x0005cfb3: mov dh, 0x41; stc; call dword ptr [eax + 0x6a]; 
0x000f1f4a: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xf1f21; xor eax, eax; ret; 
0x00194022: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x00192875: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x001940fe: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x001928e5: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x000ffc38: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0005e636: mov dh, 0x44; push es; aad 0x83; ret 0x101; 
0x0002aebc: mov dh, 0x44; sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x00060b75: mov dh, 0x44; sub al, ah; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00060c34: mov dh, 0x44; sub al, ah; mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000613c5: mov dh, 0x44; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x000610dd: mov dh, 0x44; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x0006135d: mov dh, 0x44; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x0006103f: mov dh, 0x44; sub al, ah; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00061420: mov dh, 0x44; sub eax, esp; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x0006c2a9: mov dh, 0x44; xor ah, al; mov ebp, dword ptr [esp + 0x50]; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006c416: mov dh, 0x44; xor ah, al; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x0006c0ce: mov dh, 0x44; xor al, ah; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0003a199: mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0005f019: mov dh, 0x45; or eax, 0x8901e683; ret; 
0x000fffc6: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0015e924: mov dh, 0x47; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x00101716: mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x0019c812: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001940da: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001928d1: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x00189989: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0018b979: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0019401e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00192871: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001940fa: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001928e1: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00063ded: mov dh, 0x4a; dec byte ptr [ecx + 0x72cb38f3]; ret 0xd938; 
0x00059615: mov dh, 0x50; or al, 0x89; sal dh, 1; ret 0xf40; 
0x00151c91: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005b001: mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x000fbef4: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000a0ba2: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x0005c4f9: mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x0019c885: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0019c816: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00058b97: mov dh, 0x56; or al, 0xf6; ret 0x7401; 
0x0019c845: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0005b6bf: mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x00062d25: mov dh, 0x58; add ecx, ebp; ret; 
0x00107115: mov dh, 0x58; stc; call dword ptr [eax - 0x18]; 
0x001375d9: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x001533e1: mov dh, 0x5a; or dh, dh; ret; 
0x00151b17: mov dh, 0x5d; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x0014ae56: mov dh, 0x5f; pop ebp; ret; 
0x0013e0ec: mov dh, 0x69; stc; call dword ptr [eax + 0x53]; 
0x001376b1: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0011ef79: mov dh, 0x80; jp 0x11ef80; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x000f509e: mov dh, 0x83; in al, dx; or byte ptr [ebp - 0x6a8837d], cl; call dword ptr [eax + 0x55]; 
0x0013ae24: mov dh, 0x85; imul edi, edi, -1; dec dword ptr [edi]; inc esp; ret 0x8588; 
0x0013b24e: mov dh, 0x85; push 0xfffffff; inc ebp; ret 0x8588; 
0x0009a6d6: mov dh, 0x8a; clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x001026ae: mov dh, 0x90; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x1025e7; call eax; 
0x001224f4: mov dh, 0xac; add eax, dword ptr [eax]; add al, ch; ret 0xfe87; 
0x00168036: mov dh, 0xba; cld; jmp dword ptr [esi - 0x70]; 
0x000962d5: mov dh, 0xc0; add eax, 2; add esp, 0xc; ret; 
0x00171fb9: mov dh, 0xc0; add esp, 0x1c; ret; 
0x00115257: mov dh, 0xc0; add esp, 0x4c; ret; 
0x00167099: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x0011c80f: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x0004206f: mov dh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000962ea: mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000f28f5: mov dh, 0xc0; lea eax, [eax + eax - 1]; ret; 
0x0003bdb9: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00124eb0: mov dh, 0xc0; neg eax; ret; 
0x00082f68: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0012ce82: mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x00167005: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00088d4f: mov dh, 0xc0; pop ebx; ret; 
0x0005802c: mov dh, 0xc0; pop edi; ret; 
0x0003cc83: mov dh, 0xc0; ret; 
0x0011137a: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x000961b6: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x0004221f: mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0002828b: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00060b6c: mov dh, 0xc2; mov esi, dword ptr [esp + 0x40]; mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0006103c: mov dh, 0xc2; movzx eax, byte ptr [eax + ebp - 0x20]; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00138151: mov dh, 0xc2; ret; 
0x0004260c: mov dh, 0xc2; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0011e96d: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00041beb: mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cef: mov dh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00100477: mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x2a7e; 
0x0019954a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000d21f0: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0010b469: mov dh, 0xe8; add dword ptr [esi - 0x766ffffe], 0x245c8bda; add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011e4f7: mov dh, 0xe8; dec dword ptr [ecx - 0x5f16efba]; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00147b86: mov dh, 0xed; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00178b18: mov dh, 0xef; jne 0x178b15; call dword ptr [esi + 0x53]; 
0x0016d922: mov dh, 0xf0; stc; call dword ptr [edi + 0x52]; 
0x00107b24: mov dh, 0xf1; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x0012edf9: mov dh, 0xf9; call dword ptr [eax - 0x18]; 
0x0012b1d8: mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x0012fa04: mov dh, 0xf9; call dword ptr [edx + 0x50]; 
0x0016e07a: mov dh, 0xfc; cmp ebx, esi; call dword ptr [ebp - 0x73]; 
0x000586bb: mov dh, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0005d136: mov dh, 0xfd; std; jmp ptr [ecx]; ret; 
0x00126b6e: mov dh, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000acd26: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008742f: mov dh, 2; pop ebx; pop esi; ret; 
0x0017f392: mov dh, 2; pop esi; pop edi; ret; 
0x00081997: mov dh, 2; ret; 
0x0019403d: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x00192884: mov dh, 2; sub eax, ecx; ret; 
0x000a8e31: mov dh, 4; adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x0006cefe: mov dh, 4; push cs; mov dword ptr [esp + 0x14], ebp; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0006c07c: mov dh, 4; push es; mov ecx, dword ptr [edi + eax*4 - 0x72754]; add ecx, ebx; jmp ecx; 
0x000bb973: mov dh, 8; cmp cl, byte ptr [edx]; jne 0xbb97d; xor eax, eax; pop ebx; ret; 
0x0018a009: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019403a: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00192881: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x000ba259: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000ba233: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0015c0dc: mov dh, cl; call dword ptr [eax - 0x73]; 
0x0011dede: mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0003d2ea: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017093a: mov dl, 0x31; cld; jmp dword ptr [esi - 0x70]; 
0x000e830e: mov dl, 0x3f; stc; call dword ptr [eax - 0x77]; 
0x00139a2d: mov dl, 0x3f; stc; call dword ptr [edx - 0x46]; 
0x0005a1d2: mov dl, 0x40; stc; call dword ptr [eax - 0x18]; 
0x0005cf65: mov dl, 0x41; stc; call dword ptr [eax + 0x6a]; 
0x000dd98a: mov dl, 0x57; hlt; inc dword ptr [ebx + 0xbb10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x0013d26a: mov dl, 0x6a; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0014d263: mov dl, 0x6c; ret 0xfff9; 
0x00163c78: mov dl, 0x83; in al, dx; or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x001522cf: mov dl, 0x8b; je 0x1522f7; or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x000b6dc4: mov dl, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00079394: mov dl, 0xa7; cli; jmp dword ptr [esi - 0x70]; 
0x00186e1a: mov dl, 0xb7; cli; jmp dword ptr [esi - 0x70]; 
0x0004783a: mov dl, 0xc2; push cs; add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x000eda79: mov dl, 0xeb; call dword ptr [eax + 0x6a]; 
0x001698e3: mov dl, 0xec; call dword ptr [eax - 0x73]; 
0x00115c12: mov dl, 0xf9; call dword ptr [eax - 0x18]; 
0x0011aa87: mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00098b14: mov dl, 0xf9; dec dword ptr [ebx - 0x78727783]; js 0x98ab6; stc; call dword ptr [eax + 0x68]; 
0x00087e2d: mov dl, 0xf9; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001873ab: mov dl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00072a48: mov dl, 0xff; call dword ptr [ecx + 0x57]; 
0x00126b3b: mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b2f4a: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0012366a: mov dl, 6; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x000b2e4a: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00166362: mov dl, bh; cld; jmp dword ptr [esi - 0x70]; 
0x000dfe22: mov dl, bh; dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00024ba6: mov dl, byte ptr [0xc28b0500]; and byte ptr [eax], al; mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x001032b2: mov dl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b3140: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00166084: mov dl, ch; in al, dx; call dword ptr [ebp + 0x50]; 
0x00159467: mov dl, dh; call dword ptr [eax - 0x18]; 
0x0008eeaf: mov ds, esp; ljmp 0x824:0x5489fff8; mov esi, 8; call dword ptr gs:[0x10]; 
0x001150a8: mov ds, word ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x00103fa1: mov ds, word ptr [edx]; add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x001757c0: mov dword ptr [0x31fff972], eax; call dword ptr [eax + 0x6a]; 
0x000a610d: mov dword ptr [0x41f6fff6], eax; jbe 0xa6124; cmove eax, edx; ret; 
0x0009f166: mov dword ptr [0x42e8fff9], eax; mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000a76a4: mov dword ptr [0x4ba], eax; add byte ptr [ecx], ch; ret 0xd301; 
0x000b4559: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x00088850: mov dword ptr [0x78], eax; ret; 
0x00089252: mov dword ptr [0x78], edx; pop ebx; ret; 
0x00088819: mov dword ptr [0x7c], eax; ret; 
0x000888ff: mov dword ptr [0x7c], ecx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x000888ca: mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0017af69: mov dword ptr [0x83000000], eax; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000fb998: mov dword ptr [0x831e72d7], eax; ret; 
0x000ad2e9: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00132169: mov dword ptr [0x89000000], eax; ret 0x45c7; 
0x0011f179: mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x001253fe: mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00116a82: mov dword ptr [0x8b530011], eax; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001490c3: mov dword ptr [0x8ba172c2], eax; dec ebp; mov word ptr [ebp - 0x63fc77f], cs; call dword ptr [eax - 0x73]; 
0x0011d450: mov dword ptr [0x8d00000c], eax; adc dword ptr [ebx], 0x62; stc; call dword ptr [ecx + 0x51]; 
0x0015a932: mov dword ptr [0x8d500000], eax; cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x0015c012: mov dword ptr [0x8d500000], eax; sub esp, -0x4d; bnd call dword ptr [eax - 0x18]; 
0x0015c012: mov dword ptr [0x8d500000], eax; sub esp, -0x4d; bnd call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x00116b0c: mov dword ptr [0xb8530011], eax; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120e71: mov dword ptr [0xc0c68100], 0x530010ff; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000d6ff0: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001569fa: mov dword ptr [0xe8fffffe], eax; in eax, dx; sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x00023007: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0010394e: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00073fa4: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0008a66c: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005783a: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00166dee: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0007a3ef: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000ba491: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b700b: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba430: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fad: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001664da: mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x00080bf9: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008a980: mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00103976: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0010abbc: mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x00073fab: mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00041586: mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x00171b5e: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008a9b4: mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008195c: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0011913e: mov dword ptr [eax + 0x16], edx; ret; 
0x000ba578: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70d5: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e0bf4: mov dword ptr [eax + 0x18], 0; pop ebx; pop esi; pop edi; ret; 
0x00166deb: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x000ba54a: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70b7: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00058701: mov dword ptr [eax + 0x18], edx; push eax; call 0x58570; add esp, 0x18; pop ebx; ret; 
0x00073fb2: mov dword ptr [eax + 0x18], edx; ret; 
0x00024c12: mov dword ptr [eax + 0x1a30], edx; pop ebx; pop esi; ret; 
0x00024b72: mov dword ptr [eax + 0x1a30], edx; ret; 
0x00086f22: mov dword ptr [eax + 0x1a5c], 0; ret; 
0x001180e6: mov dword ptr [eax + 0x1c], ebx; xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008880b: mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000a9232: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007ae23: mov dword ptr [eax + 0x20], ebx; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0007ae53: mov dword ptr [eax + 0x20], ebx; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00088815: mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0007b4d0: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x00085001: mov dword ptr [eax + 0x24], ebx; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 0xc], edx; pop ebx; ret; 
0x00085031: mov dword ptr [eax + 0x24], ebx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0xc], ecx; pop ebx; ret; 
0x000889a4: mov dword ptr [eax + 0x270], edx; ret; 
0x000889c4: mov dword ptr [eax + 0x274], edx; ret; 
0x000889e4: mov dword ptr [eax + 0x278], edx; ret; 
0x00088a04: mov dword ptr [eax + 0x27c], edx; ret; 
0x0008f9d4: mov dword ptr [eax + 0x284], edx; ret; 
0x001180ef: mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008f9b4: mov dword ptr [eax + 0x28c], edx; ret; 
0x001664be: mov dword ptr [eax + 0x2c], esi; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x001180ec: mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0009aa45: mov dword ptr [eax + 0x32c], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa75: mov dword ptr [eax + 0x330], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aaa5: mov dword ptr [eax + 0x334], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a815: mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7f5: mov dword ptr [eax + 0x33c], edx; ret; 
0x001664c1: mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x0009aad5: mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa4b: mov dword ptr [eax + 0x358], 1; ret; 
0x0009a8a5: mov dword ptr [eax + 0x374], edx; ret; 
0x000993fe: mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0009a708: mov dword ptr [eax + 0x3bb4], 0; ret; 
0x0009a6fe: mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x0009ab05: mov dword ptr [eax + 0x3c14], edx; ret; 
0x001181a2: mov dword ptr [eax + 0x40], edx; pop ebx; pop esi; pop edi; ret; 
0x0017d20c: mov dword ptr [eax + 0x4c], edx; ret; 
0x000e23de: mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0014b841: mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x0007630d: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0017d86d: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0008a665: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0004158d: mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x00085037: mov dword ptr [eax + 0xc], ecx; pop ebx; ret; 
0x000975f5: mov dword ptr [eax + 0xc], ecx; ret; 
0x00080010: mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008884c: mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x001719fe: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x001719be: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x000976ca: mov dword ptr [eax + 0xc], edx; pop ebx; pop esi; pop edi; ret; 
0x00085007: mov dword ptr [eax + 0xc], edx; pop ebx; ret; 
0x001721e4: mov dword ptr [eax + 0xc], edx; ret; 
0x00137ba4: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0008aa95: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0008a79c: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0014bfcc: mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x000ba44e: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fcb: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014bfd2: mov dword ptr [eax + 0xfc], edx; ret; 
0x000ba2ca: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e77: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008aa8e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x001466ff: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00085c34: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0016571e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0003cb07: mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00101f99: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00093b2e: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x001378a3: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00165656: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0007ae26: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016b817: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0016c1e7: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00081993: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0016566e: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00084ffe: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0x24], ebx; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 0xc], edx; pop ebx; ret; 
0x0008502e: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 0x24], ebx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0xc], ecx; pop ebx; ret; 
0x0007ae56: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00058591: mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x000b6e59: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00080bf3: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x001721dd: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00088842: mov dword ptr [eax + 4], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0007fd69: mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x00165681: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00094eb0: mov dword ptr [eax + 4], edx; ret; 
0x00057843: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000d502c: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000ba34e: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6edb: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00146706: mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00140731: mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00101f92: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00085c3b: mov dword ptr [eax + 8], 0; ret; 
0x0008a673: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005762d: mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00085004: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 0xc], edx; pop ebx; ret; 
0x0005858e: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0007fd64: mov dword ptr [eax + 8], ecx; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0007ae59: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000576d9: mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00085034: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0xc], ecx; pop ebx; ret; 
0x000ba330: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ebd: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000cd1f0: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x00119135: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00073f9d: mov dword ptr [eax + 8], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0007ae29: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00168b86: mov dword ptr [eax + 8], edx; ret; 
0x00118b5f: mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x0008faa5: mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000345a5: mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x0016e1a0: mov dword ptr [eax + edx], ecx; ret; 
0x00033749: mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x7f4]; test eax, eax; je 0x33759; call eax; 
0x00033a14: mov dword ptr [eax - 0x40], edi; test edx, edx; je 0x33a25; mov dword ptr [esp + 0x14], eax; call edx; 
0x00172220: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00085c2e: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00093b28: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00101f8c: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00186158: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000975e3: mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3b8c]; mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00165697: mov dword ptr [eax], 0; pop ebx; ret; 
0x0003cb0e: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00165718: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00165650: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00165668: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00165700: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x001656f0: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x0013789d: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001656e8: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x000e8901: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x00094534: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x001656a6: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016567b: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00165710: mov dword ptr [eax], 8; pop ebx; ret; 
0x001656d6: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000d1e13: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00171b56: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x934]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0018e411: mov dword ptr [eax], ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00087e13: mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000b6e24: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2c8: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e75: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00089447: mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0007b5b3: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000796e9: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000ba28b: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e45: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005796c: mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0010133a: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0016b812: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0016c1e2: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0003a78e: mov dword ptr [eax], ecx; ret; 
0x0008ee18: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0006d7ca: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00073df1: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000d7a3e: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00041584: mov dword ptr [eax], edx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0007ae21: mov dword ptr [eax], edx; mov dword ptr [eax + 0x20], ebx; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0007ae51: mov dword ptr [eax], edx; mov dword ptr [eax + 0x20], ebx; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0007fd67: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x00057841: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000d502a: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x001665b5: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00129cee: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000ba247: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e14: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033c04: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00123af6: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00058594: mov dword ptr [eax], edx; ret; 
0x0003fa94: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0007bab2: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008a45f: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0017d42a: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000a8fb9: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x0002325b: mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0016f9a3: mov dword ptr [ebp + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0003e6c2: mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0008b13c: mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x001316b7: mov dword ptr [ebp - 0x120], edx; push dword ptr [ebp - 0x11c]; push ebx; call eax; 
0x00131852: mov dword ptr [ebp - 0x128], edx; push dword ptr [ebp - 0x11c]; push dword ptr [ebp - 0x120]; call eax; 
0x00122c05: mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0007c8a5: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0012a0dc: mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012a290: mov dword ptr [ebp - 0x510], ecx; call dword ptr gs:[0x10]; 
0x00131976: mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x001316b3: mov dword ptr [ebp - 0x74], ecx; push edx; mov dword ptr [ebp - 0x120], edx; push dword ptr [ebp - 0x11c]; push ebx; call eax; 
0x0013184e: mov dword ptr [ebp - 0x74], ecx; push edx; mov dword ptr [ebp - 0x128], edx; push dword ptr [ebp - 0x11c]; push dword ptr [ebp - 0x120]; call eax; 
0x00131973: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x0013128b: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x0013173f: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x001312eb: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x00131a69: mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x00130eab: mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x0013121f: mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x00131451: mov dword ptr [ebp - 0x7c], edi; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x0013128e: mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x00131454: mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00131a63: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x00130ea5: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x00131219: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x00131742: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x001312ee: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x000883cc: mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x00166569: mov dword ptr [ebx + 0x10], eax; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00058006: mov dword ptr [ebx + 0x10], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000850b0: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0009b3b9: mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00147c8a: mov dword ptr [ebx + 0x10], ecx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a0ce8: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x00080c15: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0003bd94: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a09aa: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000580e5: mov dword ptr [ebx + 0x18], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00084792: mov dword ptr [ebx + 0x1a54], 0; add esp, 8; pop ebx; ret; 
0x0008471d: mov dword ptr [ebx + 0x1a58], eax; add esp, 8; pop ebx; ret; 
0x00086e15: mov dword ptr [ebx + 0x1a5c], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a09ad: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000959dc: mov dword ptr [ebx + 0x294], eax; add esp, 0x18; pop ebx; ret; 
0x0007ba13: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00090107: mov dword ptr [ebx + 0x31000001], eax; leave; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0012a678: mov dword ptr [ebx + 0x3cc], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0011cb86: mov dword ptr [ebx + 0x4580], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0011cc18: mov dword ptr [ebx + 0x4580], eax; add esp, 8; pop ebx; ret; 
0x0014cb6a: mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x00083611: mov dword ptr [ebx + 0x50], 0xffffffff; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0014cae2: mov dword ptr [ebx + 0x5e98], 0; call esi; 
0x0017ed63: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0014ca5a: mov dword ptr [ebx + 0x6ed8], 0; call esi; 
0x0014c9d2: mov dword ptr [ebx + 0x7f18], 0; call esi; 
0x0014c94a: mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0014c939: mov dword ptr [ebx + 0x8f64], 0x6374652f; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x00157a7d: mov dword ptr [ebx + 0xa200], eax; add esp, 0x18; pop ebx; ret; 
0x000739de: mov dword ptr [ebx + 0xa4], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0016438d: mov dword ptr [ebx + 0xa60c], eax; add esp, 8; pop ebx; ret; 
0x00073adb: mov dword ptr [ebx + 0xac], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00163ec7: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0013e775: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000882d9: mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0017a120: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x00087ed2: mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008a643: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00104e07: mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0012cf9e: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x000a0ceb: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x00103381: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001034dc: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00103307: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00051f6b: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007ffda: mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0012cefe: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x0005847e: mov dword ptr [ebx + 4], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x00080f12: mov dword ptr [ebx + 4], edx; mov dword ptr [ebx], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x000813aa: mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000917c5: mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x000922ab: mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017a173: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0013e76d: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00140074: mov dword ptr [ebx + 8], eax; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00080c0f: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x00104e01: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0016d2c3: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012cf4e: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0008000d: mov dword ptr [ebx + 8], edx; mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0007bd40: mov dword ptr [ebx - 0x72fbdb84], ecx; xchg eax, ebp; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x000922e7: mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0016f415: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x0009224d: mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0007664f: mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017a6fc: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x000a5fe0: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0016c378: mov dword ptr [ebx], eax; jmp 0x16c282; nop; xor eax, eax; pop ebx; ret; 
0x000813a8: mov dword ptr [ebx], eax; mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000588d9: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0007e773: mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x00164a0b: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000a09b0: mov dword ptr [ebx], eax; push eax; call ecx; 
0x00080f15: mov dword ptr [ebx], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x0007b477: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001719f7: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000695cd: mov dword ptr [ebx], ecx; pop ebx; pop esi; pop edi; ret; 
0x0017d7d8: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x000624f7: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x0006d7c8: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x0007ffd8: mov dword ptr [ebx], edx; mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00148801: mov dword ptr [ebx], esi; jne 0x1487b0; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00097f5e: mov dword ptr [ebx], esi; jne 0x97f00; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00096f09: mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3b88], ecx; ret; 
0x00096f29: mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009b3b6: mov dword ptr [ecx + 0x14], ebx; mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00171945: mov dword ptr [ecx + 0x14], edx; ret; 
0x00089aca: mov dword ptr [ecx + 0x214], 1; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00076316: mov dword ptr [ecx + 0x88], edx; ret; 
0x00089495: mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x001431b2: mov dword ptr [ecx + 0xa], edx; pop ebx; pop esi; pop edi; ret; 
0x0017193d: mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x0016b917: mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x000acec2: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0002fcfb: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x00089444: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x000744d7: mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011e52a: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x000aceb3: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x0003e715: mov dword ptr [ecx + 4], edx; ret 4; 
0x0008a876: mov dword ptr [ecx + 4], edx; ret; 
0x000acf04: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0016b914: mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0008a7d7: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000acef5: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0003cb24: mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010df85: mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x00119bad: mov dword ptr [ecx + eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000e0d85: mov dword ptr [ecx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0002587d: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0007ea95: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x0005885c: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00183bb7: mov dword ptr [ecx + edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0014cf45: mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0005da8f: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00099787: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c3ff: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00024e7e: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000744ab: mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c9667: mov dword ptr [ecx], 0x1fba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000942fc: mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000bc721: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x0006491b: mov dword ptr [ecx], 0xffe7a0e9; call dword ptr [edx - 0x73]; 
0x0007e63c: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0007f4da: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00119b96: mov dword ptr [ecx], eax; cmp eax, ebx; jb 0x119ba0; xor eax, eax; pop ebx; ret; 
0x0008a554: mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003e711: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00137e81: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0009211c: mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0008c95f: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00124370: mov dword ptr [ecx], ebx; int 0x80; 
0x000ace81: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000acea0: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000acec0: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000aceb0: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00137602: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x00080ca0: mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000ace71: mov dword ptr [ecx], edx; pop ebx; ret; 
0x00040cf4: mov dword ptr [ecx], edx; shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0007a5d6: mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008ac21: mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000b49bd: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b49fb: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000b333e: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000b32dd: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b3405: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b4ac7: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b4b15: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000b33e7: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000899cf: mov dword ptr [edi + 0x214], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016a3e1: mov dword ptr [edi + 0x54], edx; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000b49db: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000b32fb: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b4877: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000b31a7: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000b3199: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x0009106b: mov dword ptr [edi + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b320b: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x001036f6: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000b48cd: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000b490b: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x000b31ed: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x001778ff: mov dword ptr [edi - 0x75000000], ebx; mov bl, 0xb4; or eax, 0xec830000; or byte ptr [ebp - 0x689f245], cl; call dword ptr [edi + 0x56]; 
0x000b3500: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0008ac2e: mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00050e48: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00092018: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00050e51: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000b3167: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000b3185: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b31a5: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000b3196: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000b47f4: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b4822: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x000b3520: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b3530: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000a53a8: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x000b3154: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x00137742: mov dword ptr [edi], esi; pop ebx; pop esi; pop edi; ret; 
0x0008a965: mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00096fa8: mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x0007a5d3: mov dword ptr [edx + 0x10], ebx; mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003fb95: mov dword ptr [edx + 0x10], ecx; mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x0003fb98: mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x0017197b: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003be3d: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0007a7ad: mov dword ptr [edx + 0x14], esi; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0003be43: mov dword ptr [edx + 0x18], eax; ret; 
0x000779ce: mov dword ptr [edx + 0x1a20], 0; ret; 
0x000779e7: mov dword ptr [edx + 0x1a24], eax; ret; 
0x0008189e: mov dword ptr [edx + 0x1a34], 0; ret; 
0x000818b7: mov dword ptr [edx + 0x1a38], eax; ret; 
0x00081894: mov dword ptr [edx + 0x1a3c], 0; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00086e9e: mov dword ptr [edx + 0x1a54], 0; ret; 
0x00086eb7: mov dword ptr [edx + 0x1a58], eax; ret; 
0x00088a42: mov dword ptr [edx + 0x1aa8], eax; ret; 
0x000934c6: mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0003cf73: mov dword ptr [edx + 0x1d0], eax; mov eax, ecx; ret; 
0x0003cf5e: mov dword ptr [edx + 0x1d4], ecx; ret; 
0x000f4849: mov dword ptr [edx + 0x20], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010bc88: mov dword ptr [edx + 0x20], esi; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x000898cb: mov dword ptr [edx + 0x214], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000888c6: mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0010bc8b: mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0010bc8e: mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x001186a5: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0009a856: mov dword ptr [edx + 0x368], eax; ret; 
0x0009a881: mov dword ptr [edx + 0x370], eax; ret; 
0x00093f27: mov dword ptr [edx + 0x3ad4], eax; xor eax, eax; ret; 
0x00096f0c: mov dword ptr [edx + 0x3b88], ecx; ret; 
0x000975ef: mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x001186a2: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0010df6d: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f89d: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00082f22: mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x00089449: mov dword ptr [edx + 0x924], 0; ret; 
0x00056a49: mov dword ptr [edx + 0xc], eax; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x0016c27f: mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x00171980: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003be40: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x000af2c7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000af3f7: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b968a: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaee7: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000ab017: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0010bc9e: mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x0010bc3a: mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000af2a9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000af3e9: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b3a48: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x000b3c97: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000b3b47: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b3ca7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b2507: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b2667: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b3cc7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b2687: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b3ba7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b3d07: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2567: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b26c7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b966c: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaed9: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a58da: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000ab009: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00057737: mov dword ptr [edx + 4], eax; ret; 
0x0011e551: mov dword ptr [edx + 4], eax; test eax, eax; je 0x11e55a; mov dword ptr [eax], edx; ret; 
0x00093b81: mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000a59e5: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a5925: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x001034d9: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0018f299: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00057f4f: mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x000af31b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af45b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b96fe: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaf3b: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab07b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0005771d: mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000b2084: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af20b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000af47b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b102b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000af2fd: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000af43d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0008924e: mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x000b96e0: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc3b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae4b: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000adbb4: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000ab05d: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00057656: mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0008f92c: mov dword ptr [edx + 8], ecx; cmp eax, 0x21; jne 0x8f938; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000f3542: mov dword ptr [edx + eax*4], edi; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x000955cd: mov dword ptr [edx + eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0011ce95: mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x00132f7d: mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003cbdd: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c11d: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0007669c: mov dword ptr [edx + eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009fa4d: mov dword ptr [edx + eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0017d72d: mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003a840: mov dword ptr [edx + eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003adfe: mov dword ptr [edx + eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003cccb: mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009593d: mov dword ptr [edx + eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x000e0d2d: mov dword ptr [edx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0011b485: mov dword ptr [edx + eax], 2; xor eax, eax; pop ebx; ret; 
0x00136750: mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001876aa: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0018682f: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186836: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189a1d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ba0d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x00186856: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189ab1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018baa1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001867f2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b939: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001898e5: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b8e5: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001719b6: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00186812: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189936: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b936: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00186832: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001867ef: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018680f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007e75f: mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x00057724: mov dword ptr [edx], 0; ret; 
0x000b1165: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0010bc34: mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x0008a5a2: mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00087eb2: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003ac4c: mov dword ptr [edx], eax; add esp, 4; ret; 
0x000af264: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000af3a4: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b2162: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a59c4: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000af192: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000af3c2: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000a59d8: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b0fbf: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a59e8: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a59fc: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000af274: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000af3b4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000aaeb4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000aafd4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000af3d2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000aaff2: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000af3e2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000ab002: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00089493: mov dword ptr [edx], eax; mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x0005cdb3: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000af2c2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000af3f2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000aaee2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000ab012: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b2652: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b9607: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbcf: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aadd2: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a5904: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000adc82: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000aafc4: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00086a32: mov dword ptr [edx], eax; ret; 
0x00040014: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008a442: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0014e19a: mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x001876a4: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000df6a4: mov dword ptr [edx], ebx; pop ebx; ret; 
0x000e869a: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007b13c: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0011e52d: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0018bf24: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00189f84: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007a3f4: mov dword ptr [edx], ecx; pop ebx; ret; 
0x0003fd08: mov dword ptr [edx], ecx; ret; 
0x00079555: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000e2326: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a59a1: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a58f1: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a58e9: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0005814e: mov dword ptr [esi + 0x10], eax; mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x00096f2c: mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x00101b4b: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010c81a: mov dword ptr [esi + 0x14], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00160fd3: mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00058151: mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x0012c69c: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000f9ee3: mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x00085119: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00086b7f: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0007aea8: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00148240: mov dword ptr [esi + 0x4e24], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x0007f494: mov dword ptr [esi + 0xa4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0007e5e4: mov dword ptr [esi + 0xa4], edx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001513c0: mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00163688: mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0003fc27: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00073b63: mov dword ptr [esi + 4], eax; mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x00086ad5: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00119b0e: mov dword ptr [esi + 4], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016fcfb: mov dword ptr [esi + 8], 1; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00082eaf: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00073b66: mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x000a8f20: mov dword ptr [esi + eax], edx; jne 0xa8f10; pop ebx; pop esi; pop edi; ret; 
0x0004a893: mov dword ptr [esi + edi*8 + 0x247c8bff], edx; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x000855b4: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0007ba11: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003ce54: mov dword ptr [esi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011c05b: mov dword ptr [esp + 0x100c], eax; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0014f55e: mov dword ptr [esp + 0x10], eax; call 0x17ab80; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00127424: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127b55: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127d5d: mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d17: mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00087935: mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00163d20: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008784d: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00165b7b: mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0007cf3f: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00170fdb: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x00171038: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0007b6df: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007b57f: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000e14c7: mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00033a1b: mov dword ptr [esp + 0x14], eax; call edx; 
0x00127b5d: mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dfc07: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00127a94: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001283e4: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006c13e: mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x0006cf01: mov dword ptr [esp + 0x14], ebp; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x00087849: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x001666ee: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0012858e: mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x0008fd45: mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00060c38: mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0006bcd3: mov dword ptr [esp + 0x18], 1; jmp eax; 
0x00061b15: mov dword ptr [esp + 0x18], 1; jmp ebx; 
0x000dfacb: mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012742c: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000891db: mov dword ptr [esp + 0x18], eax; mov ebx, dword ptr [esp + 8]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x001291c0: mov dword ptr [esp + 0x18], eax; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128b0d: mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000df740: mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00128592: mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x0011933c: mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c1ed: mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0006ce08: mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x00094480: mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0009448b: mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003d2e5: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00128495: mov dword ptr [esp + 0x20], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d3042: mov dword ptr [esp + 0x20], ecx; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x00040bc2: mov dword ptr [esp + 0x20], edx; call eax; 
0x0017092c: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00061b30: mov dword ptr [esp + 0x24], 1; jmp ebx; 
0x0016ead7: mov dword ptr [esp + 0x24], 5; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00128585: mov dword ptr [esp + 0x24], eax; mov eax, 0x66; mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x00118ce2: mov dword ptr [esp + 0x24], eax; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001285f9: mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006077b: mov dword ptr [esp + 0x28], 0; jmp ecx; 
0x00061b00: mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0012849d: mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00097ab5: mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00040ad4: mov dword ptr [esp + 0x28], edx; call eax; 
0x0016e935: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00060ab4: mov dword ptr [esp + 0x2c], 1; jmp ebx; 
0x00157bd7: mov dword ptr [esp + 0x2c], eax; call 0x17ab80; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00097ae0: mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00099f5f: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x00061aa0: mov dword ptr [esp + 0x30], 1; jmp ebx; 
0x00127720: mov dword ptr [esp + 0x30], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006bfea: mov dword ptr [esp + 0x34], 0; jmp eax; 
0x0006ce28: mov dword ptr [esp + 0x34], 1; jmp ebx; 
0x00099f63: mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x001277d3: mov dword ptr [esp + 0x34], eax; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127728: mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c025b: mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x0016e8c5: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000bdb6e: mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00061b20: mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x001277db: mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010b7d7: mov dword ptr [esp + 0x38], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012786e: mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00061ad0: mov dword ptr [esp + 0x3c], 1; jmp ebx; 
0x0006ce18: mov dword ptr [esp + 0x40], 1; jmp ebx; 
0x0016b402: mov dword ptr [esp + 0x434], edx; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0006147a: mov dword ptr [esp + 0x44], 0; jmp eax; 
0x00061a20: mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x00099525: mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0006cdfc: mov dword ptr [esp + 0x44], eax; jmp 0x6c301; lea esi, [esi]; mov dword ptr [esp + 0x1c], 1; jmp ebx; 
0x000d319c: mov dword ptr [esp + 0x5c], ebp; push ebx; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00123f13: mov dword ptr [esp + 0x78], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00123f1d: mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00103b21: mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00103b2d: mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000a0abe: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x001274e2: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001155fb: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011f8d7: mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120207: mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00024d96: mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00076459: mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x000878ac: mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00171462: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170acf: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0003a782: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00052125: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0005219f: mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0014d146: mov dword ptr [esp + 4], eax; jmp 0x14c770; nop; xor eax, eax; ret; 
0x0007c39a: mov dword ptr [esp + 4], eax; jmp 0x7aed0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000877aa: mov dword ptr [esp + 4], eax; jmp 0x86bb0; lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x000eb350: mov dword ptr [esp + 4], eax; jmp 0xa3fc0; lea esi, [esi]; xor eax, eax; ret; 
0x00168bb6: mov dword ptr [esp + 4], eax; jmp edx; 
0x00168bb6: mov dword ptr [esp + 4], eax; jmp edx; lea esi, [esi]; endbr32; ret; 
0x00127381: mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012797a: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00127569: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00171647: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x00171647: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; nop; xor eax, eax; ret; 
0x00171623: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0017a503: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00166393: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0008887d: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x001663b7: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; lea esi, [esi]; xor eax, eax; ret; 
0x0008887d: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; lea esi, cs:[esi]; ret; 
0x00076562: mov dword ptr [esp + 4], edx; jmp eax; 
0x00076562: mov dword ptr [esp + 4], edx; jmp eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0003ad4b: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00163eab: mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00105307: mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00115a00: mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011682c: mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00116870: mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00127571: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128a4a: mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128b59: mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0010b95d: mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001274da: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011fbcd: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204fd: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d4d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f0d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0017a910: mov dword ptr [esp + 8], ecx; call eax; 
0x00168bb2: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00171643: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017161f: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016638f: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001663b3: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008d600: mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0003aaa3: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008eeb4: mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00076463: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00060986: mov dword ptr [esp], 0; jmp eax; 
0x00060936: mov dword ptr [esp], 1; jmp eax; 
0x0016d1ab: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0009a6de: mov dword ptr [esp], eax; call esi; 
0x0005215c: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x000dfe2b: mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0012737a: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001280fa: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128035: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00097d70: mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], edi; call esi; 
0x00158515: mov dword ptr [esp], ebp; call edi; 
0x00025f40: mov dword ptr [esp], ebp; call esi; 
0x00027040: mov dword ptr [esp], ebx; call edi; 
0x000260cd: mov dword ptr [esp], ebx; call esi; 
0x0014865b: mov dword ptr [esp], ebx; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00026240: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268da: mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0005e280: mov dword ptr [esp], ebx; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x00097d78: mov dword ptr [esp], edi; call esi; 
0x0005219c: mov dword ptr [esp], edx; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00163f53: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000f4ab6: mov dword ptr [esp], esi; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00163b74: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002f42b: mov dword ptr [esp], esi; call ebx; 
0x00157be0: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00131e36: mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000c025a: mov dword ptr fs:[esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000bdb6d: mov dword ptr fs:[esp + 0x34], edx; push eax; push ebp; call esi; 
0x0008884f: mov dword ptr gs:[0x78], eax; ret; 
0x00089251: mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x00088818: mov dword ptr gs:[0x7c], eax; ret; 
0x000888fe: mov dword ptr gs:[0x7c], ecx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x000888c9: mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x000ba243: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e10: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3150: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00093bda: mov eax, 0; cmova eax, edx; ret; 
0x000e8996: mov eax, 0; cmove edx, eax; mov eax, edx; ret; 
0x000cd0c2: mov eax, 0; cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x00199d72: mov eax, 0; jne 0x19a4f0; pop ebx; ret; 
0x00199bab: mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019b46a: mov eax, 0; jne 0x19b6b0; pop ebx; ret; 
0x0019cb24: mov eax, 0; jne 0x19cd50; pop ebx; ret; 
0x0019cbe1: mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x00116063: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x00124de7: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00124da8: mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00120ed7: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001343dd: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x00099e0c: mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0009a406: mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009a474: mov eax, 0x104; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009a1f4: mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0009a12c: mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009a03e: mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0009a06b: mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000dfacf: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000df8e7: mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00094650: mov eax, 0x10; add esp, 0xc; ret; 
0x0009451f: mov eax, 0x10; cmove eax, ecx; ret; 
0x00163d33: mov eax, 0x10; pop ebx; pop esi; ret; 
0x000934d8: mov eax, 0x10; pop ebx; ret; 
0x00042053: mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x0019f16a: mov eax, 0x10; pop edi; ret; 
0x000df675: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000dfe2e: mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000dfd69: mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00116d02: mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c5a2: mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00089c78: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009962b: mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00099d4c: mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00099bb1: mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099b59: mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000998e3: mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099881: mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099449: mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010530b: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00124528: mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x001052c9: mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001251df: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001251df: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1251f8; ret; 
0x0012696d: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x001269ba: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00115a04: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001181df: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001159bd: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115ac0: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00115c61: mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d67: mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011585d: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00115926: mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010b707: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010c3e6: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00125171: mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0011779d: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00115327: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0011726d: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00116ae2: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0010b57e: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b377: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00116830: mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001167d6: mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00126cf6: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0008cd4d: mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00125e37: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00125df8: mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126447: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00126408: mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0010ab56: mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001179e3: mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00126d3a: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x001261d4: mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00126260: mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00125f2c: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00124e6a: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001267e6: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000e8860: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000e8860: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0010b09d: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00115f3a: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00115ef0: mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00126996: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0011f8df: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011f8a4: mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fba0: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012020f: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x001201d4: mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204d0: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009448f: mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00127d65: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127ca5: mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126d6a: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00125750: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00119337: mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126da7: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012549b: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00125467: mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123f21: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00121a26: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00128277: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00128238: mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126a27: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126dda: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0005dacb: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0003f8ab: mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0009b697: mov eax, 0x163; mov byte ptr [esi + 0x3c04], 1; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x0003f877: mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003d6b2: mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003f736: mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00126e0a: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000e341f: mov eax, 0x166; lea ecx, [ebp - 0x6c3a6]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0008a998: mov eax, 0x16; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x0008a85c: mov eax, 0x16; cmp edx, 2; jbe 0x8a870; ret; 
0x00092453: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a088d: mov eax, 0x16; pop ebx; pop esi; ret; 
0x0008aaa0: mov eax, 0x16; pop ebx; ret; 
0x00092030: mov eax, 0x16; pop esi; pop edi; ret; 
0x0008a780: mov eax, 0x16; ret; 
0x00125341: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x001255a7: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00126e3a: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00126e66: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0010c1f6: mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0008cf09: mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000df8cc: mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000dfa47: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000df65b: mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000dfe01: mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dfcf1: mov eax, 0x197; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dffe9: mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfe9a: mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0009a1a1: mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009a32b: mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00125fee: mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00125ecf: mov eax, 0x19a; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012611e: mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00117929: mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00116874: mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00116756: mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00127d1f: mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00127c08: mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00099bf9: mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00099ada: mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009992b: mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00099807: mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0012957a: mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0003d102: mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003cfe3: mov eax, 0x1a5; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00089147: mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00102ade: mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00126bd2: mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00120119: mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00126b0d: mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126aa7: mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x001268aa: mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126847: mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012687d: mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268dd: mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00126b3a: mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00124589: mov eax, 0x1b3; int 0x80; 
0x0010ad8d: mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00104015: mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00126b6d: mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00126c07: mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x000e2476: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00126a67: mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00126c3a: mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0010b508: mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000cbd98: mov eax, 0x1d4458b; ret 0x1689; 
0x000f2c2d: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001a02f4: mov eax, 0x20; add eax, edx; ret; 
0x000f2796: mov eax, 0x20; cmovne eax, edx; ret; 
0x000f27e6: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00041fc1: mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0010abe0: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00121a00: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00121a00: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003c39a: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0005032a: mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0005da00: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00115810: mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116b10: mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010b026: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00104dc5: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00119b80: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000adae4: mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x00119a36: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x001263a0: mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00118c73: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118fb3: mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x000465b5: mov eax, 0x3904e883; ret; 
0x00102e2a: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00055f18: mov eax, 0x39ffffc9; ret; 
0x00063960: mov eax, 0x39fffffb; ret 0x840f; 
0x00117726: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00117726: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00119c06: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123840: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0010b050: mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e8870: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000e8870: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x00041e2e: mov eax, 0x40; pop ebx; pop esi; sub eax, ecx; ret; 
0x00042025: mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000f2868: mov eax, 0x40; ret; 
0x000e8850: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000e8850: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x00102fd0: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000a3307: mov eax, 0x440fffe8; ret 0x66c3; 
0x001217aa: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001192a0: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011948c: mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00051056: mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x000d4250: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00117220: mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126d16: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x001219da: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f84a: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0017483c: mov eax, 0x5c878d50; test al, 0; add byte ptr [eax - 0x73], dl; xchg edx, ebx; jb 0x174843; call dword ptr [eax + 0x6a]; 
0x001225f0: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b0c0: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010b49a: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0008a894: mov eax, 0x5f; cmovne eax, edx; ret; 
0x00119920: mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011997d: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b0d: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00127385: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128589: mov eax, 0x66; mov dword ptr [esp + 0x14], esi; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x001269ed: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000d6dc1: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d6f50: mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x000d6c1c: mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00083e5c: mov eax, 0x6a000000; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x00126600: mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001702c2: mov eax, 0x6afff9c8; add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x00125280: mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00125007: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00123b36: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001239c6: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001266d6: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00104ffa: mov eax, 0x72; call dword ptr gs:[0x10]; 
0x001219b6: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00024bfc: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1af66370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00126cd6: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00128a4e: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00128b5d: mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00128a08: mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00128cb3: mov eax, 0x75; mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00185fb9: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0011b012: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0003c199: mov eax, 0x77; int 0x80; 
0x000e23b7: mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012436b: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0012150a: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00104e26: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001266ad: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6fd: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0003f6da: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000f2710: mov eax, 0x7e; pop ebx; ret; 
0x0003aba8: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0012678d: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000f26a7: mov eax, 0x7f; cmovne eax, edx; ret; 
0x000f26c6: mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000f26ef: mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000f2681: mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f264e: mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00134c53: mov eax, 0x7fffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00041cf1: mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00041d0f: mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x0002556b: mov eax, 0x808b0020; mov al, byte ptr [0x65000000]; add eax, dword ptr [0]; ret; 
0x00126937: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x000b9f95: mov eax, 0x81000c36; rcr dword ptr [ebx + 0x60], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001267bd: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0018d97d: mov eax, 0x81fffefc; ret; 
0x0018d57d: mov eax, 0x81ffff00; ret; 
0x0018ce7d: mov eax, 0x81ffff07; ret; 
0x0018ca7d: mov eax, 0x81ffff0b; ret; 
0x0018b87d: mov eax, 0x81ffff1d; ret; 
0x0018987d: mov eax, 0x81ffff3d; ret; 
0x00126906: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x00126cb2: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000cd184: mov eax, 0x83fffeeb; les ebx, ptr [eax]; pop ebx; ret; 
0x000f70b4: mov eax, 0x83ffffd9; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00066345: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x00065d00: mov eax, 0x83fffffb; ret 0xc601; 
0x000fa0e0: mov eax, 0x840fd285; pop ds; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x000e8836: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b476: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001266fa: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00125516: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00125516: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0004e046: mov eax, 0x89000000; fisubr dword ptr [ecx]; ret 0xfa83; 
0x00094487: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003d2e1: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00161505: mov eax, 0x8910c483; ret; 
0x000cdd64: mov eax, 0x8bfff65f; jl 0xcdd8f; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x00055faa: mov eax, 0x8bffffc9; test dword ptr [eax + 0x29ffffc9], esi; ret; 
0x00066367: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0006425f: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00103fe8: mov eax, 0x8bfffffe; add ecx, dword ptr [ebx + 0xc2c828c]; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x001156d4: mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x001155ff: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00027f6f: mov eax, 0x8d0cec83; test eax, edi; cmp cl, bh; call dword ptr [edi - 1]; 
0x0010be1a: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011f77b: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0011f747: mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0017a90b: mov eax, 0x90fffffe; mov dword ptr [esp + 8], ecx; call eax; 
0x00120deb: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00120db7: mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0007cd61: mov eax, 0x91f8828d; stc; call dword ptr [eax - 0x73]; 
0x00080d80: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0013e770: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0012a013: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00129fa2: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012a155: mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00123a07: mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000e88e6: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011aac2: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011ec6a: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7fa: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011ec96: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0011f820: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00102c5a: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0008da64: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0008cb5f: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0008da32: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00096284: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00096284: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00102986: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x001029a6: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00102a34: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001253fd: mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00123b5a: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00126c77: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00115fbb: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x00115f87: mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00126add: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x00117750: mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00125c26: mov eax, 0xac; mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0003c190: mov eax, 0xad; int 0x80; 
0x0003c22d: mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d7: mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0008cdb2: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00097ab0: mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00103b28: mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x0008df0b: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00097d56: mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003c3d0: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003d0b2: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0003d05d: mov eax, 0xb1; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003d2e9: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003c460: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c432: mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f2d55: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2d21: mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2f15: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f2ee1: mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001147fe: mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b504: mov eax, 0xb8000000; les eax, ptr [ecx]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0019f0e2: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0010b57a: mov eax, 0xb8000000; xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001322be: mov eax, 0xb86c828d; stc; call dword ptr [eax - 0x73]; 
0x0012672a: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012675a: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000e2e4d: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0003c9ea: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00104e41: mov eax, 0xbe; int 0x80; 
0x00104e41: mov eax, 0xbe; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00119250: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d6fce: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xd6fe8; mov eax, edx; ret; 
0x001265cf: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00126660: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000278e1: mov eax, 0xc483ffff; or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x20af737d]; call dword ptr [eax - 0x73]; 
0x0012524f: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001252e0: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00124fcf: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00125060: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011529d: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000e8900: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000e8900: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000e78d0: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000e78d0: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000e78c0: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000e78c0: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x0010ac26: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0019f136: mov eax, 0xc; pop edi; ret; 
0x00089f4c: mov eax, 0xc; pop esi; pop edi; ret; 
0x000e78b0: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e78b0: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x001218b1: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00121801: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000e78ea: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00102da1: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010b6cd: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x00102f56: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0012164c: mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000e88bd: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x00102ea6: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0012156c: mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000e888d: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac9d: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0010301d: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cfd: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00125b96: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b96: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00125b76: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00125b76: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00126b9a: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011e9ed: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e90d: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000f2cd4: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e1457: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e129f: mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000f9542: mov eax, 0xdd048d; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0010b7db: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00117f78: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0010b8e0: mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010bab8: mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010b85a: mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0008ef60: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00126e80: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x00121947: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a7: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac07: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011cc42: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5d2: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab72: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011e5fd: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e62d: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab9d: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00120f0a: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e65a: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abca: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00089b0d: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008f559: mov eax, 0xf0; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000902c9: mov eax, 0xf0; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092197: mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x00089309: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00097f67: mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008cfef: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0009223c: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008fd39: mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000917bb: mov eax, 0xf0; mov ecx, 7; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091428: mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091cb5: mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009249d: mov eax, 0xf0; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000936c5: mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090828: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009288d: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009397b: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b96c: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bc67: mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091a22: mov eax, 0xf0; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba43: mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b3d8: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c3: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009292f: mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008937d: mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008f382: mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008cfa4: mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008f1ca: mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008bba3: mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008ab09: mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000891e3: mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008c5c1: mov eax, 0xf0; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008be81: mov eax, 0xf0; xor esi, esi; mov ebx, dword ptr [esp + 4]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c20f: mov eax, 0xf0; xor esi, esi; mov ebx, dword ptr [esp]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0017fedf: mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008ab78: mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000946d0: mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008cb0f: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008e25b: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010ac50: mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00186018: mov eax, 0xfadad2e8; jmp dword ptr [esi - 0x70]; 
0x000f2700: mov eax, 0xfc17; pop ebx; ret; 
0x001249c0: mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126812: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000f2771: mov eax, 0xff; cmp edx, 0x9123683e; jne 0xf27e0; ret; 
0x0005a593: mov eax, 0xfff977e9; call dword ptr [eax + 0x52]; 
0x000f2730: mov eax, 0xfffa; pop ebx; ret; 
0x000e3297: mov eax, 0xfffba3e8; jmp dword ptr [ebp - 0x75]; 
0x00104e0a: mov eax, 0xfffffff2; pop ebx; ret; 
0x00025884: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0010a770: mov eax, 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0012442c: mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x00102fc2: mov eax, 0xffffffff; jmp 0x102f69; call 0x133af0; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00085e44: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0002f2ff: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005da92: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003c184: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c402: mov eax, 0xffffffff; pop ebx; ret; 
0x0005800a: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00024e81: mov eax, 0xffffffff; ret; 
0x00058187: mov eax, 1; add esp, 0xc; ret; 
0x00058290: mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0011ae03: mov eax, 1; add esp, 8; pop ebx; ret; 
0x00099288: mov eax, 1; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x00124388: mov eax, 1; call dword ptr gs:[0x10]; 
0x00192930: mov eax, 1; ja 0x192939; neg eax; ret; 
0x00194170: mov eax, 1; ja 0x194179; neg eax; pop ebp; ret; 
0x00199570: mov eax, 1; ja 0x199579; neg eax; ret; 
0x00199860: mov eax, 1; ja 0x199869; neg eax; pop ebp; ret; 
0x00199a20: mov eax, 1; ja 0x199a29; neg eax; ret; 
0x0019a507: mov eax, 1; ja 0x19a510; neg eax; ret; 
0x0019b6f8: mov eax, 1; ja 0x19b701; neg eax; ret; 
0x0019cd71: mov eax, 1; ja 0x19cd7a; neg eax; ret; 
0x0019b386: mov eax, 1; jg 0x19b390; neg eax; ret; 
0x0019b6b1: mov eax, 1; jg 0x19b6c0; neg eax; ret; 
0x0019f7b1: mov eax, 1; jg 0x19f7c0; neg eax; ret; 
0x000d1ed0: mov eax, 1; jg 0xd1ed9; neg eax; ret; 
0x00171940: mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x000bc3a7: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00076ea4: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00073c9b: mov eax, 1; pop ebx; pop esi; ret; 
0x0011f4ca: mov eax, 1; pop ebx; ret; 
0x00050c70: mov eax, 1; pop esi; pop edi; ret; 
0x0005cdb5: mov eax, 1; ret; 
0x00169986: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000f2be3: mov eax, 1; test ecx, ecx; js 0xf2bf0; ret; 
0x001448c3: mov eax, 1; xor eax, 1; pop ebx; ret; 
0x00041ca0: mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0017d340: mov eax, 2; add esp, 0xc; ret; 
0x00041c15: mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00041be5: mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cc6: mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00165b66: mov eax, 2; pop ebx; pop esi; ret; 
0x000d20e0: mov eax, 2; ret; 
0x0008e1a0: mov eax, 3; add esp, 0xc; ret; 
0x001169fb: mov eax, 3; call dword ptr gs:[0x10]; 
0x000df68d: mov eax, 3; cmovne eax, edx; ret; 
0x001169c7: mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0008e868: mov eax, 3; ret; 
0x0017d334: mov eax, 4; add esp, 0xc; ret; 
0x00117bdb: mov eax, 4; call dword ptr gs:[0x10]; 
0x00117ba7: mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0019f08d: mov eax, 4; pop edi; ret; 
0x000d2100: mov eax, 4; ret; 
0x00131e5b: mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x00105718: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d2110: mov eax, 5; ret; 
0x0010ace2: mov eax, 6; call dword ptr gs:[0x10]; 
0x0013616b: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x000990d0: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d2120: mov eax, 6; ret; 
0x000d2130: mov eax, 7; ret; 
0x0017d324: mov eax, 8; add esp, 0xc; ret; 
0x0010af66: mov eax, 8; call dword ptr gs:[0x10]; 
0x0009aa21: mov eax, 8; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x00041f93: mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0019f0e6: mov eax, 8; pop edi; ret; 
0x001152d0: mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00103481: mov eax, 9; pop esi; pop edi; ret; 
0x0016e19b: mov eax, dword ptr [0]; mov dword ptr [eax + edx], ecx; ret; 
0x000e14c2: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010c1e8: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x00155f4d: mov eax, dword ptr [0x3be80000]; shr ah, cl; jmp dword ptr [ebp - 0x75]; 
0x0003f33f: mov eax, dword ptr [0x3c5a858d]; stc; dec dword ptr [ecx - 0x76f7dbbc]; ret 0x77e9; 
0x000a505d: mov eax, dword ptr [0x41f6fff6]; jbe 0xa5074; cmove eax, edx; ret; 
0x000a7546: mov eax, dword ptr [0x4bb]; add byte ptr [ecx], ch; ret; 
0x000ad23c: mov eax, dword ptr [0x5bfffffd]; ret; 
0x000934c1: mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00155d0d: mov eax, dword ptr [0x7be80000]; aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x0018b694: mov eax, dword ptr [0x81ffff1f]; ret; 
0x00189694: mov eax, dword ptr [0x81ffff3f]; ret; 
0x00138eab: mov eax, dword ptr [0x83000002]; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x0007414b: mov eax, dword ptr [0x83fffff9]; les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000a053b: mov eax, dword ptr [0x8b000000]; wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x000d0e7b: mov eax, dword ptr [0x8bfff62e]; lea ebp, [ecx + ecx*8 - 0x7e720001]; clc; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0008f460: mov eax, dword ptr [0x8bfffffd]; je 0x8f48b; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x00156a60: mov eax, dword ptr [0x8d500000]; cmp dword ptr [esi + ebx*2], -0xe; call dword ptr [eax - 0x18]; 
0x00156b25: mov eax, dword ptr [0x8d500000]; sub esp, -0x7c; int1; call dword ptr [eax - 0x73]; 
0x00124b27: mov eax, dword ptr [0xac58100]; ret; 
0x0002346f: mov eax, dword ptr [0xc3810015]; ret 0x20d9; 
0x00179086: mov eax, dword ptr [0xc483ffea]; adc byte ptr [ebx - 0x7c72f714], al; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x50]; 
0x000f2c24: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf2c48; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0016d762: mov eax, dword ptr [0xec83fff7]; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x000499ab: mov eax, dword ptr [0xfffffef]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000e23aa: mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00093ba5: mov eax, dword ptr [8]; ret; 
0x0008ebe5: mov eax, dword ptr [8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0002605e: mov eax, dword ptr [eax + 0x1098]; ret; 
0x0002607e: mov eax, dword ptr [eax + 0x109c]; ret; 
0x0007cf43: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00147f18: mov eax, dword ptr [eax + 0x10]; ret; 
0x0002f47e: mov eax, dword ptr [eax + 0x10c0]; ret; 
0x0017ab69: mov eax, dword ptr [eax + 0x10c]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x0012b2de: mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0011b4b3: mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00087851: mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00171d18: mov eax, dword ptr [eax + 0x14]; ret; 
0x00057aeb: mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x62520; add esp, 0x1c; ret; 
0x0007a8ac: mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x6d7f0; add esp, 0x1c; ret; 
0x000328d5: mov eax, dword ptr [eax + 0x16c]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033ce5: mov eax, dword ptr [eax + 0x16c]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000878b1: mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00131c2c: mov eax, dword ptr [eax + 0x18]; ret; 
0x00140ca5: mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x000bc8b6: mov eax, dword ptr [eax + 0x1c4]; ret; 
0x0003451e: mov eax, dword ptr [eax + 0x1c8]; add eax, dword ptr gs:[0]; ret; 
0x000bc8c6: mov eax, dword ptr [eax + 0x1c8]; ret; 
0x00087f53: mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x00088824: mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x00131e1b: mov eax, dword ptr [eax + 0x1c]; push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00163b87: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x163b97; sub esp, 0xc; push esi; call eax; 
0x00164059: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x164069; sub esp, 0xc; push esi; call eax; 
0x00164f84: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x164f94; sub esp, 0xc; push edi; call eax; 
0x00165cc0: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x165cd0; sub esp, 0xc; push esi; call eax; 
0x001695aa: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1695ba; sub esp, 0xc; push esi; call eax; 
0x0016aac4: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16aad4; sub esp, 0xc; push esi; call eax; 
0x0016ac8f: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16ac9f; sub esp, 0xc; push edi; call eax; 
0x0016c018: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16c028; sub esp, 0xc; push ebp; call eax; 
0x000bc8d6: mov eax, dword ptr [eax + 0x1cc]; ret; 
0x0003cf1e: mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cefe: mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000bc906: mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000bc916: mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000bc926: mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000bc936: mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000bc946: mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000bc956: mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000bc8a6: mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0012b2e4: mov eax, dword ptr [eax + 0x20]; ret; 
0x0011b4b9: mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00165e97: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x000342c4: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034233: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00088905: mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x00169774: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00034294: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000341f3: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0016f8d4: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0003fdd1: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0003445c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003443c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003441c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003439c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000343dc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0003433c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000343bc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003437c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x000342fc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003435c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000343fc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003431c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00086db8: mov eax, dword ptr [eax + 0x34]; ret; 
0x00085b87: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x85b80; ret; 
0x0011b498: mov eax, dword ptr [eax + 0x378]; pop ebx; ret; 
0x0003447c: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0007ea7b: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x7ea88; ret; 
0x0008e82e: mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x00097662: mov eax, dword ptr [eax + 0x3b84]; test eax, eax; jne 0x97677; ret; 
0x0017a4f9: mov eax, dword ptr [eax + 0x3bc]; test eax, eax; je 0x17a510; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0003449c: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0011b490: mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x000415ee: mov eax, dword ptr [eax + 0x40]; ret; 
0x0012ac0d: mov eax, dword ptr [eax + 0x4c]; call 0x12aad0; add esp, 4; ret; 
0x0017d1f8: mov eax, dword ptr [eax + 0x4c]; ret; 
0x001481d2: mov eax, dword ptr [eax + 0x4e28]; test eax, eax; jne 0x1481e7; ret; 
0x0017d218: mov eax, dword ptr [eax + 0x50]; ret; 
0x000328e0: mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d298: mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d228: mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe8: mov eax, dword ptr [eax + 0x64]; ret; 
0x0007b318: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000a0a04: mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x0003453e: mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00088a36: mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x000344fe: mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0002556e: mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x000f2787: mov eax, dword ptr [eax + 0xa0]; cmp dword ptr [edx + eax], 0x26; mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x0003ccc5: mov eax, dword ptr [eax + 0xa0]; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x00101332: mov eax, dword ptr [eax + 0xb4]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00057dcc: mov eax, dword ptr [eax + 0xb8]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x0007a84b: mov eax, dword ptr [eax + 0xb8]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x0013541e: mov eax, dword ptr [eax + 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x00170fe0: mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x00131ded: mov eax, dword ptr [eax + 0xc]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011b9c5: mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x11b9cd; ret; 
0x00086d8e: mov eax, dword ptr [eax + 0xe4c]; ret; 
0x000a0d1c: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0xa0d18; mov eax, ecx; ret; 
0x00170930: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00087939: mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00089441: mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0011b46e: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x001481e0: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x1481ec; cmp dword ptr [eax + 8], edx; jne 0x1481e0; ret; 
0x000a0c50: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa0c48; xor eax, eax; ret; 
0x00118a88: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0008a43c: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00131e33: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0017103d: mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0008a4dc: mov eax, dword ptr [eax + 8]; sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00086a4c: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00034297: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00033cf2: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0017d1bc: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0017d1dc: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000341f6: mov eax, dword ptr [eax + edx*4]; ret; 
0x00080bc8: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b78: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x00091f8c: mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008c90c: mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009a833: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x0009aa03: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a873: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9a880; ret; 
0x0007b13a: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000342c2: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034231: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034292: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000341f1: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003fdcf: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x000328de: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016d19d: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00168fe0: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00168e8d: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0008faf0: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00094978: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e1658: mov eax, dword ptr [eax]; ret; 
0x00091f2c: mov eax, dword ptr [eax]; sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008c8ec: mov eax, dword ptr [eax]; sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00091f4c: mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00081908: mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00081928: mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00030f6c: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0011a7a4: mov eax, dword ptr [eax]; test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e6: mov eax, dword ptr [eax]; test eax, eax; je 0x11a988; call eax; 
0x00086a26: mov eax, dword ptr [eax]; test eax, eax; jne 0x86a20; ret; 
0x0008cb04: mov eax, dword ptr [ebp + 0x18]; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0016c560: mov eax, dword ptr [ebp + 0x3c]; pop edx; push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x0016c54b: mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x0016c5af: mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0016958e: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016f9cc: mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0012b2f7: mov eax, dword ptr [ebp + 4]; call 0x12a720; pop edx; pop ecx; pop eax; ret; 
0x00102658: mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x102592; call eax; 
0x001026e8: mov eax, dword ptr [ebp + 4]; test eax, eax; je 0x1025e7; call eax; 
0x001026a0: mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x102592; call eax; 
0x001026b0: mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x1025e7; call eax; 
0x0007889a: mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x00079c75: mov eax, dword ptr [ebp - 0x20]; sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x000831e2: mov eax, dword ptr [ebp - 0x20]; sub esp, 8; push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x000831ec: mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x000e1b33: mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000e1f8b: mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x00092226: mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00122c0a: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000805e9: mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000e95a4: mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000e9233: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000e949d: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x00179fae: mov eax, dword ptr [ebp - 0x5c]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x000f02c4: mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x000efe43: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f01bd: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5f8]; call dword ptr [eax + 0x18]; 
0x00163ea8: mov eax, dword ptr [ebp]; mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00089dff: mov eax, dword ptr [ebp]; mov ebx, dword ptr [ebp + 4]; mov ecx, dword ptr [ebp + 8]; mov edx, dword ptr [ebp + 0xc]; call dword ptr gs:[0x10]; 
0x00163de9: mov eax, dword ptr [ebp]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016e3b0: mov eax, dword ptr [ebx + 0x108]; pop ebx; pop esi; pop edi; ret; 
0x00163ede: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00080c12: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x00163ece: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00163dd3: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x00163e1e: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00164043: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00165483: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0016e318: mov eax, dword ptr [ebx + 0x170]; pop ebx; pop esi; pop edi; ret; 
0x0016e440: mov eax, dword ptr [ebx + 0x18c]; pop ebx; pop esi; pop edi; ret; 
0x0016e4d0: mov eax, dword ptr [ebx + 0x198]; pop ebx; pop esi; pop edi; ret; 
0x000a0c0d: mov eax, dword ptr [ebx + 0x20]; je 0xa0c20; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x00165e4d: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016baa9: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0016bac5: mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0014c49c: mov eax, dword ptr [ebx + 0x9f7c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00168e4b: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00168e6d: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00104e04: mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x000896ad: mov eax, dword ptr [ebx + 0xc]; pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0016654d: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00164ae3: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001646fd: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00164af6: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0016a41f: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016640d: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016645b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x001645d6: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016a463: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00164ac0: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00087e10: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012cf4b: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0016ec73: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0016ee62: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0008832a: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x0016eec3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0016edb3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0009229c: mov eax, dword ptr [ebx + 8]; test eax, eax; je 0x922b5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x001227d2: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x1227f8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x001966d5: mov eax, dword ptr [ebx + eax*4 - 0x85494]; sub eax, ecx; pop ebx; ret; 
0x00165b74: mov eax, dword ptr [ebx + ecx*4 - 0x118]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0003374c: mov eax, dword ptr [ebx + esi*4 - 0x7f4]; test eax, eax; je 0x33759; call eax; 
0x0016dab9: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0017fe25: mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0016d2c6: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0016d1a6: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00088254: mov eax, dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0016d198: mov eax, dword ptr [ebx]; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00096fa5: mov eax, dword ptr [ecx + 0x10]; mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x0017d720: mov eax, dword ptr [ecx + 0xa0]; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00080b58: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x000af2c4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000af3f4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b9687: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaee4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000ab014: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0014488f: mov eax, dword ptr [ecx + 4]; cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000b3ca4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b3d04: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2654: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000af2a5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000af3e5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000aaed5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000ab005: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b3b8a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3cea: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b254a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b26aa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af454: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab074: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3baa: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b3d0a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b971b: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b256a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b26ca: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b3b6b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b3ccb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b96dc: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b252b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b268b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af474: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab094: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af435: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000ab055: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0007ba62: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x00086a7d: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006a29c: mov eax, dword ptr [ecx + eax*4 - 0x72954]; lea eax, [ecx + eax - 0x1c6e86]; jmp eax; 
0x0003422e: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000341ee: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0012ba99: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0012b959: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0012b6d9: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0012b819: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0012b459: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0012b779: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0012b4f9: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0012b599: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0012b8b9: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0012b3b9: mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000a32ba: mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x000a328a: mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x0005d13e: mov eax, dword ptr [ecx - 7]; call dword ptr [ebx + 0x50]; 
0x0008c981: mov eax, dword ptr [ecx]; and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000af190: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000af3c0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000b0fbd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000af3d0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000aaff0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000af3e0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000ab000: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000af3f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000ab010: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b2650: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b9633: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbcd: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aadd0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000adc80: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000aafe0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00086a30: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x0016909b: mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000af261: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000af3a1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000af3b1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000aafd1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b9604: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaea1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000aafc1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000bb99f: mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x0007b6e4: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007b584: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0016c005: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0010b7d4: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp + 0x38], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001658d0: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x001657dc: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016588c: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0016e0a2: mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x0016e0b0: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016605b: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00166018: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00080c52: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000bc8b0: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000bc8c0: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000bc8d0: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000bc8e0: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000bc8f0: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000bc900: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000bc910: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000bc920: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000bc930: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000bc940: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000bc950: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000bc8a0: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0011b9bf: mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x11b9cd; ret; 
0x00080c60: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00080b22: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0016dab2: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00080b30: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0009454b: mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x9455a; ret; 
0x00123f17: mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x7c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00133694: mov eax, dword ptr [edx + 0xb8]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x00134744: mov eax, dword ptr [edx + 0xb8]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x00171918: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001448d6: mov eax, dword ptr [edx + 4]; cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x00171640: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017161c: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016638c: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001663b0: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x001716f8: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00170c68: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00118ab0: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00087468: mov eax, dword ptr [edx + 8]; mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000a023d: mov eax, dword ptr [edx + eax + 4]; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x000328db: mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033ceb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342bb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003428b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000341ab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003417b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003414b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003408b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340eb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033ffb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340bb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003405b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003425b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003402b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003411b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fcb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00140cab: mov eax, dword ptr [edx + eax]; ret; 
0x00089a58: mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00089fb8: mov eax, dword ptr [edx]; neg eax; sbb eax, eax; and eax, 0x16; ret; 
0x0007b5b5: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0007b735: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x000796eb: mov eax, dword ptr [edx]; ret; 
0x0008335e: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00164f1e: mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00111465: mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000f48f0: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0016ce39: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push edi; call dword ptr [eax + 0x10]; 
0x001710a2: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0016c57a: mov eax, dword ptr [esi]; mov ebx, dword ptr [esp + 0x30]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0016cc60: mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00134261: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0003b994: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0003a791: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003a786: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00186154: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0012ac09: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x12aad0; add esp, 4; ret; 
0x0008e2b9: mov eax, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000bc37f: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0013bb91: mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00121a5c: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00024cb3: mov eax, dword ptr [esp + 0x14]; call eax; 
0x0012d85e: mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0016aab0: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0010a9b1: mov eax, dword ptr [esp + 0x18]; call eax; 
0x00163b70: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009a6da: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x000379fe: mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xbb530; add esp, 0x1c; ret; 
0x0017081b: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x00040b27: mov eax, dword ptr [esp + 0x20]; call eax; 
0x00040ad0: mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 0x28], edx; call eax; 
0x0017f9ff: mov eax, dword ptr [esp + 0x24]; call dword ptr [eax + 0x40]; 
0x00040c15: mov eax, dword ptr [esp + 0x24]; call eax; 
0x000dfc0b: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00040bbe: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x20], edx; call eax; 
0x0012737d: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012797e: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00165bf0: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0012d0f3: mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012756d: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00157be3: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0005e28e: mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002f098: mov eax, dword ptr [esp + 0x34]; call eax; 
0x0007e102: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001549f9: mov eax, dword ptr [esp + 0x38]; call eax; 
0x001274de: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128038: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00168eaa: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00127428: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000bd5b2: mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x0016e944: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea24: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea87: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eae7: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb54: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0002a2b7: mov eax, dword ptr [esp + 0x40]; call eax; 
0x00127b59: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0002dc24: mov eax, dword ptr [esp + 0x44]; call eax; 
0x001283e8: mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ae46: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0016ace4: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000284e3: mov eax, dword ptr [esp + 0x48]; call eax; 
0x0016518d: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000289f1: mov eax, dword ptr [esp + 0x50]; call eax; 
0x00165258: mov eax, dword ptr [esp + 0x5c]; call eax; 
0x001285f5: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00128499: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d3879: mov eax, dword ptr [esp + 0x68]; call eax; 
0x00118ce6: mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00164f6c: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0009805d: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00094484: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003d2de: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003c483: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d946: mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0003aaa7: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008a556: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00127724: mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012786a: mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x38], edi; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000a0a00: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00129ce8: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003a570: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000ba222: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0019eea2: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0014c5e5: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016f0b2: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f101: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x0003e757: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e87a: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x00171cd4: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00137864: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0008a8a0: mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x000818f4: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000342d4: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00135434: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00088a1f: mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x000944f0: mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x0010394a: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00103972: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008a9b0: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00093b24: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0008acb4: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00094530: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00147f14: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00171d14: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0016f8d0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00086db4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1f4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0017d214: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0017d2a4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d294: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d224: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00118a84: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0017d1d8: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x00080bc4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b74: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009a82f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x0009a9ff: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a86f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9a880; ret; 
0x000e1654: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00081904: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00081924: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00171cf4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0010abb4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d204: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008a794: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103924: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00086a44: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f64: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00103914: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00086dc4: mov eax, dword ptr [esp + 4]; ret; 
0x00084ad4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00080b84: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x00080ba4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000bbd21: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0008e1c4: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003ad4f: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008a45b: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00136165: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0018bf26: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0007651b: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034474: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034494: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003bf3b: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x001037db: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001867f5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000bbcf7: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b6e02: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014f56a: mov eax, dword ptr [esp]; call eax; 
0x00033746: mov eax, dword ptr [esp]; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x7f4]; test eax, eax; je 0x33759; call eax; 
0x0017d641: mov eax, dword ptr [esp]; ret; 
0x0002d07c: mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x0016e19a: mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000e14c1: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010c1e7: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000934c0: mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000f2c23: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf2c48; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000e23a9: mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00093ba4: mov eax, dword ptr gs:[8]; ret; 
0x0008ebe4: mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x000887bb: mov eax, ebp; call dword ptr gs:[0x10]; 
0x00040c0d: mov eax, ebp; imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015f716: mov eax, ebp; pop ebp; ret; 
0x000506f5: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x000a0341: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000296fd: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d83c: mov eax, ebp; pop edi; pop ebp; ret; 
0x00034c66: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000c011b: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0014f6e7: mov eax, ebx; call eax; 
0x000bb520: mov eax, ebx; cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a2359: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00060b1d: mov eax, ebx; cmp cl, 0x5a; jbe 0x61b9f; jmp eax; 
0x001374f8: mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x0008195f: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0011e945: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x00165d9a: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x000380bd: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00134a4b: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x00033c6a: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0008871d: mov eax, ebx; pop ebx; pop esi; ret; 
0x0003aeda: mov eax, ebx; pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x00052756: mov eax, ebx; pop ebx; ret 4; 
0x0005e5de: mov eax, ebx; pop ebx; ret; 
0x00137d3f: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0003e713: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0007a3f2: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00079553: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x00028a95: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d3fa6: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000d1f19: mov eax, ecx; pop ebx; pop esi; ret; 
0x00099d61: mov eax, ecx; pop ebx; ret; 
0x00079567: mov eax, ecx; pop edi; ret; 
0x000624b7: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0012d22e: mov eax, ecx; pop esi; pop edi; ret; 
0x00137e83: mov eax, ecx; ret 4; 
0x00033b4c: mov eax, ecx; ret; 
0x0008b4e9: mov eax, edi; call dword ptr gs:[0x10]; 
0x00040b1f: mov eax, edi; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000f9ee1: mov eax, edi; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x000b9589: mov eax, edi; pop ebx; pop edi; ret; 
0x0002f7cd: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005e54d: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000332dc: mov eax, edi; pop edi; pop ebp; ret; 
0x000acbd1: mov eax, edi; pop edi; pop ebx; ret; 
0x000b3780: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x00077ee8: mov eax, edi; pop edi; ret; 
0x0003330f: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00083949: mov eax, edi; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x0008aa09: mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003af7e: mov eax, edx; add esp, 0x1c; ret 4; 
0x00034aa6: mov eax, edx; add esp, 0xc; ret; 
0x00024baa: mov eax, edx; and byte ptr [eax], al; mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x00058180: mov eax, edx; call 0x57f20; mov eax, 1; add esp, 0xc; ret; 
0x00073b90: mov eax, edx; call 0x738f0; mov eax, 1; add esp, 0xc; ret; 
0x00024ce0: mov eax, edx; call dword ptr gs:[0x10]; 
0x000a58f3: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x001879ce: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017c97e: mov eax, edx; mov edx, dword ptr [ecx + 0x10c]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0003d688: mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0014aedf: mov eax, edx; pop ebx; pop edi; ret; 
0x00026283: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001355d4: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00056a4f: mov eax, edx; pop ebx; pop esi; ret 4; 
0x00050e9a: mov eax, edx; pop ebx; pop esi; ret; 
0x000330f6: mov eax, edx; pop ebx; ret; 
0x000a5764: mov eax, edx; pop edi; pop ebp; ret; 
0x00187e31: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00030606: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000507a1: mov eax, edx; pop esi; pop edi; ret; 
0x000330e4: mov eax, edx; ret; 
0x0003a8af: mov eax, edx; shr eax, 0x1f; ret; 
0x0008b23d: mov eax, edx; shr eax, 1; je 0x8b25c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b75d: mov eax, edx; shr eax, 1; je 0x8b77c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b4e2: mov eax, edx; shr eax, 3; je 0x8b518; mov eax, edi; call dword ptr gs:[0x10]; 
0x000ad288: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xacfe1; pop ebx; ret; 
0x000ad1a0: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xacfe1; pop ebx; ret; 
0x000ad1be: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xacfe1; pop ebx; ret; 
0x000ad1de: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xacfe1; pop ebx; ret; 
0x000ad202: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xacfe1; pop ebx; ret; 
0x000ad232: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xacfe1; pop ebx; ret; 
0x000ad262: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xacfe1; pop ebx; ret; 
0x000ad074: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0xacfe1; pop ebx; ret; 
0x000ad096: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0xacfe1; pop ebx; ret; 
0x000ad0bc: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0xacfe1; pop ebx; ret; 
0x000ad0d4: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0xacfe1; pop ebx; ret; 
0x000ad0fa: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0xacfe1; pop ebx; ret; 
0x000ad11c: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0xacfe1; pop ebx; ret; 
0x000ad13a: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x000ad158: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0xacfe1; pop ebx; ret; 
0x000ad17e: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0xacfe1; pop ebx; ret; 
0x0014939f: mov eax, es; stc; call dword ptr [eax - 0x73]; 
0x00082eb2: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0011bc4f: mov eax, esi; jmp dword ptr [esi - 0x70]; 
0x00096008: mov eax, esi; lea esi, [esi]; sub esp, 0xc; mov esi, dword ptr [eax + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0003fc25: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00058027: mov eax, esi; pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x0003b623: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002fe84: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005885f: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a14ab: mov eax, esi; pop ebx; pop esi; ret 4; 
0x0005d7e9: mov eax, esi; pop ebx; pop esi; ret; 
0x00038292: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00040def: mov eax, esi; pop esi; pop edi; ret; 
0x00104099: mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000bb081: mov ebp, 0x10ea83c0; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x30]; ret; 
0x00041ddf: mov ebp, 0x1508dc0; mov eax, edx; ret; 
0x00041dbe: mov ebp, 0x1c083c0; ret; 
0x0004208d: mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x00042162: mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042528: mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042072: mov ebp, 0x1ff083c0; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00042478: mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042123: mov ebp, 0x1ff083c0; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000bb2ba: mov ebp, 0x1ff083c0; sar eax, 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x000424a3: mov ebp, 0x1ff083c2; ret; 
0x000424f2: mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x00041cf7: mov ebp, 0x1ff183c9; shr eax, cl; ret; 
0x000420d9: mov ebp, 0x1ff283d3; add edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x000bb071: mov ebp, 0x20ea83c0; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x20]; ret; 
0x0014342f: mov ebp, 0x2efffffe; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000bb061: mov ebp, 0x30ea83c0; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x10]; ret; 
0x000bb152: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x0007efbf: mov ebp, 0x39000000; ret; 
0x000bb051: mov ebp, 0x40ea83c0; add edx, eax; jl 0xbb090; add eax, ecx; ret; 
0x0019b5ef: mov ebp, 0x5b000000; ret; 
0x000ba906: mov ebp, 0x5ff801c0; ret; 
0x000bb115: mov ebp, 0x5ff801ff; ret; 
0x00167278: mov ebp, 0x81000163; ret; 
0x00135578: mov ebp, 0x81000480; ret; 
0x00129678: mov ebp, 0x8100053f; ret; 
0x0011ed78: mov ebp, 0x810005e8; ret; 
0x0010c778: mov ebp, 0x8100070e; ret; 
0x00194378: mov ebp, 0x81fffe92; ret; 
0x000df89a: mov ebp, 0x83000000; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00057f6f: mov ebp, 0x868dfffd; pop eax; mov cl, bh; call dword ptr [eax - 0x73]; 
0x00134058: mov ebp, 0x8d2efff4; je 0x134085; add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x000905be: mov ebp, 0x8dfffffe; xchg ah, al; xchg ebp, eax; stc; call dword ptr [eax + 0x68]; 
0x00118d14: mov ebp, 0xa0; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012505c: mov ebp, 0xb8530010; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b4186: mov ebp, 0xc030010; cdq; jmp ecx; 
0x000b404f: mov ebp, 0xc030010; xchg ecx, eax; jmp ecx; 
0x0011081e: mov ebp, 0xc483fffa; adc byte ptr [ecx], bh; ret; 
0x000887af: mov ebp, 0xf0; mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0013a1e8: mov ebp, 0xffff2ae9; jmp dword ptr [esi - 0x70]; 
0x00053b54: mov ebp, 0xffffc980; dec dword ptr [ebx - 0x368763]; dec dword ptr [edi]; test byte ptr [edx - 0x7afffff0], dh; fisttp dword ptr [ebx - 0x365f63]; jmp dword ptr [ebp - 0x75]; 
0x000cdf97: mov ebp, 0xffffc9c8; adc byte ptr [ebx - 0x362b43], cl; dec dword ptr [edi]; xchg esp, eax; ret 0xf883; 
0x000628fc: mov ebp, 0xfffffa70; dec dword ptr [edi]; test dword ptr [eax - 0x74fffffd], ebp; test dword ptr [edx + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x000643dc: mov ebp, 0xfffffa70; dec dword ptr [edi]; xchg ebp, eax; ret 0x7ce9; 
0x0003bf37: mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00118d1e: mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e1c2a: mov ebp, dword ptr [eax]; hlt; jmp dword ptr [esi - 0x70]; 
0x00131d93: mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0013da9a: mov ebp, dword ptr [ecx - 7]; call dword ptr [eax + 0x68]; 
0x00117c55: mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0009a6b7: mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0006c2ad: mov ebp, dword ptr [esp + 0x50]; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0017d64d: mov ebp, dword ptr [esp]; ret; 
0x0003d100: mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0b0: mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000998d9: mov ebp, eax; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099921: mov ebp, eax; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00099ba8: mov ebp, eax; mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf0: mov ebp, eax; mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000e00c1: mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00164aca: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0015f710: mov ebp, eax; pop edi; sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x00184ae9: mov ebp, ebp; call dword ptr [eax + 0x6a]; 
0x00080d72: mov ebp, ecx; mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0015b0f1: mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0017a649: mov ebp, edx; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0005707a: mov ebp, es; clc; dec dword ptr [ecx - 0x74ebdbbc]; inc eax; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x00124382: mov ebp, esi; call ebx; 
0x00124382: mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000a319e: mov ebp, fs; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a0675: mov ebp, gs; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0003f6d5: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000e23af: mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x001297ce: mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0018603a: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001298eb: mov ebx, 0x18; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0002f1bd: mov ebx, 0x24448d50; js 0x2f214; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x000b4167: mov ebx, 0x30010bc; or al, 0x91; jmp ecx; 
0x00075ec1: mov ebx, 0x39000001; ret; 
0x00119b7b: mov ebx, 0x53001172; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00117c7b: mov ebx, 0x53001191; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00125c2b: mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00030e7a: mov ebx, 0x810014c7; ret; 
0x0015866f: mov ebx, 0x83000001; in al, dx; or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x0011d245: mov ebx, 0x83000008; in al, dx; or byte ptr [ebp - 0x6a2307d], cl; call dword ptr [eax + 0x55]; 
0x000e9ba6: mov ebx, 0x83000010; ret; 
0x0015ed7a: mov ebx, 0x83000d20; in al, dx; adc al, 0x8d; and cl, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x00094641: mov ebx, 0x83ffffa5; les esp, ptr [eax]; add esp, 0xc; ret; 
0x0006783b: mov ebx, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x00058414: mov ebx, 0x88b4838d; stc; call dword ptr [eax - 0x73]; 
0x001a24ff: mov ebx, 0x89fffff8; ret; 
0x0002f47a: mov ebx, 0x8b002019; add al, 0x10; add byte ptr [eax], al; ret; 
0x001231f1: mov ebx, 0x8dfffff5; jbe 0x1231f8; ret; 
0x001252dc: mov ebx, 0xb8530010; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001152cc: mov ebx, 0xb8530011; or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00128a0d: mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x001654c8: mov ebx, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00128b11: mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00128c00: mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00128cb8: mov ebx, 0xe; mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00128cff: mov ebx, 0xe; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0016d12f: mov ebx, 0xfc69bbe8; jmp dword ptr [esi - 0x70]; 
0x00120e7b: mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0013a9a6: mov ebx, 0xff9144e8; jmp dword ptr [esi - 0x70]; 
0x000320d4: mov ebx, 0xfffdb6e9; push esi; ret 0xf03; 
0x001181e4: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001159f5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115af5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001159c2: mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115ac5: mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x000dfea1: mov ebx, 1; call dword ptr gs:[0x10]; 
0x00023251: mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0009a6af: mov ebx, 1; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x0013e77f: mov ebx, 2; call dword ptr gs:[0x10]; 
0x000415aa: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001290fa: mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0008d932: mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008cda2: mov ebx, 2; mov esi, 8; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00103c72: mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eef6: mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00104076: mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00185fbe: mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012452d: mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00127375: mov ebx, 5; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000415e5: mov ebx, dword ptr [eax + 0x34]; mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x0008e255: mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00093bc1: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008e2c1: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001876a6: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00033cc3: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00136169: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00136169: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009a325: mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x74]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00089e02: mov ebx, dword ptr [ebp + 4]; mov ecx, dword ptr [ebp + 8]; mov edx, dword ptr [ebp + 0xc]; call dword ptr gs:[0x10]; 
0x0012a018: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0012a149: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00129fa7: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012a0cb: mov ebx, dword ptr [ebp - 0x500]; mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0009a070: mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x00104010: mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0009a12a: mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009a19f: mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00136230: mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00131d8b: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00117c53: mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00087a94: mov ebx, dword ptr [edx + 0x3c]; stc; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [eax + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00087a20: mov ebx, dword ptr [edx + 0x3c]; stc; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [edi + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x0019a4d3: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x19a4f0; pop ebx; ret; 
0x00089a5a: mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0008cb07: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008cb50: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0005032f: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0011592b: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001028d4: mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000922e3: mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00120ed3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011835c: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b703: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115323: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126da3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a23: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126aa3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00126843: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126c03: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a63: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00126933: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c73: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00121943: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac03: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125c70: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0005da5f: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001182dc: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00125402: mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0017c2e4: mov ebx, dword ptr [esp + 0x14]; jne 0x17c2f0; pop ebx; ret; 
0x00125176: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e2e90: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00130afd: mov ebx, dword ptr [esp + 0x18]; je 0x130b10; add esp, 8; pop ebx; ret; 
0x00121a58: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00124363: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00117f70: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00118faf: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011b00e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aabe: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c42e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00117f3d: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010acde: mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003c455: mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012545f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f86f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f73f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120daf: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001239ff: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f7f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169bf: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117b9f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af5e: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010af85: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x001029e8: mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011b035: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aae5: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010ad05: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009a036: mov ebx, dword ptr [esp + 0x20]; test ebx, ebx; js 0x9a068; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d6c14: mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x001147fa: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001218ad: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001217fd: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00102d9d: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00102f52: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102ea2: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00103019: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cf9: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010bab4: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115c59: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d5f: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fb98: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204c8: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2d19: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2ed9: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125ed8: mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001156cc: mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016c57c: mov ebx, dword ptr [esp + 0x30]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0016c551: mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x00118e5a: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000dfa43: mov ebx, dword ptr [esp + 0x40]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000df6d9: mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099b51: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099879: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad2: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000997ff: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000dfb8b: mov ebx, dword ptr [esp + 0x50]; lea ecx, [esp + 0x1c]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00129572: mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00102ad2: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00119484: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000d6db9: mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012574c: mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010b8dc: mov ebx, dword ptr [esp + 0x60]; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b856: mov ebx, dword ptr [esp + 0x60]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x001261c8: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00126258: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00126116: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000d6e30: mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00125fe2: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x64]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001179db: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117921: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00136753: mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00116cfa: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c59a: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00125000: mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099442: mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009438e: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000e342f: mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x000893d7: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000893d7: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e144e: mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00116ade: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012533d: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00126bce: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126cae: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125370: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011cc3e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5ce: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab6e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012680e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008c5c8: mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089406: mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00123e02: mov ebx, dword ptr [esp + 0xd0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001269b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126cf2: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00126d36: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e66: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001267e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00115f36: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126992: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00126d66: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121a22: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00126dd6: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e06: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e36: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00126e62: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0003cfdf: mov ebx, dword ptr [esp + 4]; mov eax, 0x1a5; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x001268a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b36: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000e2472: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00126c36: mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c396: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010b022: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00119a32: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00102e26: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00117722: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00117722: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00119c02: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001217a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00126d12: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x001219d6: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f846: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b496: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00123b32: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001239c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001266d2: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001219b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00126cd2: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00121506: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00104e22: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00126902: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000e8832: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b472: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001266f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00125512: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00125512: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010be16: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000e88e2: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011ec66: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011ec92: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00102c56: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102936: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00102962: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00102982: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x001029a2: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00123b56: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0003d059: mov ebx, dword ptr [esp + 4]; mov eax, 0xb1; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00126726: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126756: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e6: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010ac22: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000e78e6: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00125b92: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b72: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00125b72: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00126b96: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f06: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e656: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc6: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00127c9d: mov ebx, dword ptr [esp + 4]; mov ecx, dword ptr [esp + 8]; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008be88: mov ebx, dword ptr [esp + 4]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003d0fa: mov ebx, dword ptr [esp + 4]; mov edx, edi; mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0aa: mov ebx, dword ptr [esp + 4]; mov edx, edi; mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0005da09: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f2cd9: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00126e99: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126969: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115859: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117799: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117269: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b099: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00089143: mov ebx, dword ptr [esp + 8]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00126b09: mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126879: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d9: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad89: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b69: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119979: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b09: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e9: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a9: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f9: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126789: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b9: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c89: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad9: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e49: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115299: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c9: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b9: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8889: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac99: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e9: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e909: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f9: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e629: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab99: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000891df: mov ebx, dword ptr [esp + 8]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c3d5: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115ef5: mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0008c216: mov ebx, dword ptr [esp]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0017d639: mov ebx, dword ptr [esp]; ret; 
0x00102f51: mov ebx, dword ptr cs:[esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102ea1: mov ebx, dword ptr cs:[esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00099441: mov ebx, dword ptr ds:[esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00119483: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012574b: mov ebx, dword ptr fs:[esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0008da2b: mov ebx, eax; and ebx, 0x40; jne 0x8da53; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00061a10: mov ebx, eax; jmp 0x61139; lea esi, cs:[esi]; nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0008da56: mov ebx, eax; jne 0x8d5be; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00089c76: mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00124386: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0008f55e: mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00092899: mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00124583: mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0014865e: mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0008b3e4: mov ebx, edi; call dword ptr gs:[0x10]; 
0x00166b81: mov ebx, edi; in al, dx; call dword ptr [eax - 0x73]; 
0x0008ac1f: mov ebx, edi; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00091069: mov ebx, edi; mov dword ptr [edi + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00081c28: mov ebx, edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000902ce: mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b1cf: mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00121571: mov ebx, edx; call dword ptr gs:[0x10]; 
0x0003c3a6: mov ebx, edx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x001193b9: mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00117732: mov ebx, edx; ret; 
0x001523b5: mov ebx, es; stc; call dword ptr [eax - 0x18]; 
0x0002fd5f: mov ebx, esi; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00099e11: mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117f7d: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00118d19: mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118fb8: mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118fe9: mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a0ccf: mov ecx, 0x5bfff837; pop esi; pop edi; ret; 
0x00124532: mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0009219c: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008930e: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000887b4: mov ecx, 0x80; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0014c87c: mov ecx, 0x8100030d; ret; 
0x0013597c: mov ecx, 0x8100047c; ret; 
0x000e0b7c: mov ecx, 0x810009ca; ret; 
0x000ba094: mov ecx, 0x81000c35; rcr dword ptr [edi + ebx*2 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d94: mov ecx, 0x81000c68; rcr esp, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a507c: mov ecx, 0x81000d85; ret; 
0x0007e67c: mov ecx, 0x81000fef; ret; 
0x00089ad4: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0017a9c6: mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008cff4: mov ecx, 0x81; mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x000893ca: mov ecx, 0x81; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00089afe: mov ecx, 0x81; mov edx, 1; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00092241: mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0011b833: mov ecx, 0x83000000; in al, dx; or al, 0x89; ret; 
0x0017a903: mov ecx, 0x83ffea87; les edx, ptr [eax]; jmp 0x17a7c7; nop; mov dword ptr [esp + 8], ecx; call eax; 
0x00121c03: mov ecx, 0x83fff677; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00133613: mov ecx, 0x83fffbf7; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008fd3e: mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0008bab3: mov ecx, 0x89000000; ret 0xca83; 
0x000fb4d3: mov ecx, 0x8bffffc1; jl 0xfb4fe; adc al, 0x89; ret; 
0x0012b296: mov ecx, 0x8bfffffb; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x1061f380]; call dword ptr [eax + 0x6a]; 
0x00073963: mov ecx, 0x8dfffc03; xchg byte ptr [esp + edi*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x000e23d6: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cd45: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000ffc33: mov ecx, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0003abc4: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003a8c4: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003a559: mov ecx, 0xfffe; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0010401a: mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000bc3ac: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00079560: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x001719f9: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x001719b9: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0014c760: mov ecx, 1; mov eax, ecx; ret; 
0x000d1f22: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000917c0: mov ecx, 7; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00091064: mov ecx, 7; mov ebx, edi; mov dword ptr [edi + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008f560: mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0003c3d9: mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003c459: mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0009142d: mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000a3260: mov ecx, ds; idiv bh; cmovne eax, edx; ret; 
0x00163eb2: mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00163f3d: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000415eb: mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x00076313: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0008cb0a: mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00164193: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0012da19: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x12da28; xor eax, eax; pop ebx; ret; 
0x001898e2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b8e2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00094e9e: mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x94eb0; ret; 
0x00189f82: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008f1c8: mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008943f: mov ecx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0017c30c: mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x17c318; ret; 
0x0008ef35: mov ecx, dword ptr [ebp + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00089e05: mov ecx, dword ptr [ebp + 8]; mov edx, dword ptr [ebp + 0xc]; call dword ptr gs:[0x10]; 
0x0006bc8d: mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x00104082: mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00026243: mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x001407b4: mov ecx, dword ptr [ebp - 0x3fceff8a]; ret; 
0x0012a01e: mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0012a14f: mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00129fad: mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012a0d6: mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0013783c: mov ecx, dword ptr [ebp - 0x646077a]; call dword ptr [eax - 0x73]; 
0x000a0ab3: mov ecx, dword ptr [ebp - 0x74ffd98c]; xchg edi, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0008ab06: mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008aa06: mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000946cd: mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012d159: mov ecx, dword ptr [ebx + ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x001376c3: mov ecx, dword ptr [ebx - 0x74d7db84]; je 0x1376ef; sub al, 0x83; ret 0x8902; 
0x0008bc64: mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008abb6: mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008ac28: mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0006c0d2: mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0006c07f: mov ecx, dword ptr [edi + eax*4 - 0x72754]; add ecx, ebx; jmp ecx; 
0x0006c029: mov ecx, dword ptr [edi + eax*4 - 0x727d4]; add ecx, ebx; jmp ecx; 
0x0006c41a: mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x0006c459: mov ecx, dword ptr [edi + eax*4 - 0x728d4]; add ecx, ebx; jmp ecx; 
0x0007c04e: mov ecx, dword ptr [edx + 0x10]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0008746b: mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00165690: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x1656b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x0007e251: mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x0016b814: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0016c1e4: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x000975e9: mov ecx, dword ptr [edx + 0x3b8c]; mov dword ptr [edx + 0x3b8c], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00129cda: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x129ce8; ret; 
0x00089a5d: mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000d2172: mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd2158; add eax, 1; ret; 
0x00131cdf: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x131cf8; ret; 
0x000d214a: mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd2172; ret; 
0x00118aaa: mov ecx, dword ptr [edx]; test ecx, ecx; js 0x118ab8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000d1df0: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x0008cb53: mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000d1e70: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000d1e90: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x00089c6e: mov ecx, dword ptr [esi + 8]; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00061047: mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00061428: mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x000613c9: mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x000610e1: mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x00061361: mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x000d1d4b: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000b6e40: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6e21: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001023b1: mov ecx, dword ptr [esi]; test ecx, ecx; je 0x1023d0; cmp byte ptr [esp + 0x17], 0; jne 0x102460; call ecx; 
0x001879d0: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00118258: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00124585: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012383c: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00109918: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116ada: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bca: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126caa: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc3a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5ca: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab6a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012680a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00089402: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099756: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00119419: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x001193bb: mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001181d8: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00128bfc: mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00120ecf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00118358: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b6ff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011531f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126d9f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a1f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126a9f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012683f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126bff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a5f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012692f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c6f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012193f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e79f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011abff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125c6c: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001182d8: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011591e: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0005da57: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00185f2f: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001290ff: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001253f5: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0008d66f: mov ecx, dword ptr [esp + 0x18]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001663f7: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00166436: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00097aac: mov ecx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov dword ptr [esp + 0x28], edx; call dword ptr gs:[0x10]; 
0x00121a54: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000d3047: mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x00125463: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f873: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f743: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120db3: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123a03: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f83: mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169c3: mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117ba3: mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af62: mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00125491: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011f771: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a31: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010af89: mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x001550f8: mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x001159b9: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115abc: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x001159fa: mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115afa: mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8d3: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120203: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011fbc9: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204f9: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d49: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f09: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00124da4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001052c5: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115c5d: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d63: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00125df4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126404: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f8a0: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fb9c: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001201d0: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204cc: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00128234: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f2d1d: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2edd: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115c99: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00115d99: mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00097ada: mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001167d2: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116752: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116826: mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011686a: mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x001261cc: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012625c: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012611a: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00125748: mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0009a3fe: mov ecx, dword ptr [esp + 0x74]; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0009a470: mov ecx, dword ptr [esp + 0x74]; mov eax, 0x104; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009a327: mov ecx, dword ptr [esp + 0x74]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000dfcf6: mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dfd6e: mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000dfe25: mov ecx, dword ptr [esp + 0x74]; mov edx, edi; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00128d06: mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0010b23f: mov ecx, dword ptr [esp + 0xa4]; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00115604: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f2cd0: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005da05: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00126e95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126965: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115855: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117795: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117265: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b095: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b05: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126875: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad85: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b65: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119975: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b05: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126785: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c85: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115295: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8885: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e905: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e625: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00093bb9: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00103c79: mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x000998db: mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099923: mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00025548: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x0008a858: mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x8a870; ret; 
0x000f2bdf: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xf2bf0; ret; 
0x0009765e: mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3b84]; test eax, eax; jne 0x97677; ret; 
0x0008b135: mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00127d59: mov ecx, dword ptr [esp + 8]; mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d13: mov ecx, dword ptr [esp + 8]; mov dword ptr [esp + 0x10], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00127ca1: mov ecx, dword ptr [esp + 8]; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000936c1: mov ecx, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001269b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126d32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e62: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00115f32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126d62: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00126dd2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x001268a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00126c32: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c392: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00102e22: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001217a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001219d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f842: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b492: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00121502: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001266f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010be12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011ec62: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00102c52: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102932: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00123b52: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00126722: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126752: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e78e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00126b92: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e652: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000be518: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xbe532; ret; 
0x0008eefd: mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x000d4255: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0008df05: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d937: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00099bae: mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf6: mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0017d651: mov ecx, dword ptr [esp]; ret; 
0x0012384c: mov ecx, eax; cmp eax, 0xfffff000; ja 0x123860; mov eax, ecx; pop ebx; ret; 
0x00099d58: mov ecx, eax; cmp eax, 0xfffff000; ja 0x99d68; mov eax, ecx; pop ebx; ret; 
0x001043e5: mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00060b1b: mov ecx, eax; mov eax, ebx; cmp cl, 0x5a; jbe 0x61b9f; jmp eax; 
0x0010428b: mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000d6fd1: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xd6fe8; mov eax, edx; ret; 
0x00117192: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00104fee: mov ecx, ebp; cmove esi, eax; mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00060b72: mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000586b5: mov ecx, edi; call dword ptr [eax - 0x18]; 
0x00058547: mov ecx, edi; call dword ptr [eax - 0x73]; 
0x00097d5d: mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e00bf: mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dffee: mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00091cba: mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007630b: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0008b9d0: mov ecx, edx; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00127c0d: mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000bbdb9: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0015d385: mov ecx, esi; call dword ptr [eax - 0x73]; 
0x0009944e: mov ecx, esi; call dword ptr gs:[0x10]; 
0x0003f734: mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009438c: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008ef77: mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010b9a9: mov ecx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010babd: mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010baf9: mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010b85f: mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010b959: mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017ff6d: mov ecx, esi; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0003c016: mov ecx, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00131d37: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0012437a: mov ecx, fs; or dh, al; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0003b4aa: mov ecx, ss; add byte ptr [eax], al; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x000e342a: mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0013d0e2: mov edi, 0x39fe5e4c; sar dword ptr [eax], 0xf; dec edi; ret; 
0x000a5d71: mov edi, 0x450ffff6; ret 0x66c3; 
0x000d1ddd: mov edi, 0x5f000000; pop esi; ret; 
0x000b473d: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x00175276: mov edi, 0x81000083; ret; 
0x0015dc76: mov edi, 0x810001f9; ret; 
0x000f2176: mov edi, 0x810008b4; ret; 
0x000e8776: mov edi, 0x8100094e; ret; 
0x000a5a76: mov edi, 0x81000d7b; ret; 
0x000a2376: mov edi, 0x81000db2; ret; 
0x00089f76: mov edi, 0x81000f36; ret; 
0x00079f76: mov edi, 0x81001036; ret; 
0x00041f76: mov edi, 0x810013b6; ret; 
0x0017ec1d: mov edi, 0x83000000; in al, dx; add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0017816d: mov edi, 0x83000003; in al, dx; or byte ptr [ebp - 0x68a0175], cl; call dword ptr [ecx - 0x77]; 
0x001483be: mov edi, 0x838dfff4; in al, dx; jo 0x1483b7; call dword ptr [esi + 0x50]; 
0x0015e72d: mov edi, 0x83fffd53; ret; 
0x0006c13a: mov edi, 0x8900000d; insb byte ptr es:[edi], dx; and al, 0x14; jmp ebx; 
0x00119251: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ad5e: mov edi, 0x8d08ec83; xchg esi, eax; clc; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x000bfb8b: mov edi, 0xc4830006; adc byte ptr [ebp + 0x391b74db], al; ret; 
0x00024e9b: mov edi, 0xec830020; adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x0011675b: mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003bf34: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00118d13: mov edi, dword ptr [ebp + 0xa0]; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000e1f88: mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x00131d90: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00117c58: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00117c58: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x001297d3: mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00185f37: mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011604a: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000e2e98: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00124367: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00128a16: mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00128a46: mov edi, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00129753: mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001156d0: mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0011718a: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00165253: mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0017d645: mov edi, dword ptr [esp]; ret; 
0x000dfdff: mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00118ff3: mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0008d675: mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e129d: mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010b9ab: mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017ff71: mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00125495: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011f775: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a35: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00124ddd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00125e2d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012643d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012826d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000dff1c: mov edi, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bbc9d: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00127c11: mov edi, ebp; call dword ptr gs:[0x10]; 
0x0011f8a9: mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0005e666: mov edi, ecx; call dword ptr [eax - 0x73]; 
0x00127c06: mov edi, ecx; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0018e617: mov edi, edi; jecxz 0x18e5a8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0018f5f7: mov edi, edi; jecxz 0x18f588; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001905f7: mov edi, edi; jecxz 0x190588; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00178175: mov edi, esi; jne 0x178172; call dword ptr [ecx - 0x77]; 
0x00128bfa: mov edi, esi; mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00128cbd: mov edi, esi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x000cbfba: mov edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0016aefb: mov edi, esp; jmp dword ptr [esi - 0x70]; 
0x000a5d64: mov edi, esp; push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf4c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00075054: mov edi, fs; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000a2514: mov edx, 0; cmove eax, edx; ret; 
0x0009767e: mov edx, 0; cmovne eax, edx; ret; 
0x00128cbf: mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00119138: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000426b5: mov edx, 0x10; cmove eax, edx; ret; 
0x0008a88f: mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00042632: mov edx, 0x20; cmove eax, edx; ret; 
0x000f27d3: mov edx, 0x20; cmovne eax, edx; ret; 
0x00089c71: mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ba03c: mov edx, 0x300105f; or al, 0x91; jmp ecx; 
0x00129fb3: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000f27eb: mov edx, 0x40; cmove eax, edx; ret; 
0x00161d43: mov edx, 0x50fff972; push 5; call 0x14bb50; add esp, 0x1c; ret; 
0x0011b4ae: mov edx, 0x64; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x000f26cb: mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x0008b144: mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00092248: mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000f26f4: mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000924a2: mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ab7f: mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b36b: mov edx, 0x7fffffff; xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009082d: mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092892: mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093980: mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b971: mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013541b: mov edx, 0x808b000f; rol byte ptr [eax], 0; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0013a27b: mov edx, 0x81000433; ret; 
0x0010e17b: mov edx, 0x810006f4; ret; 
0x0010c87b: mov edx, 0x8100070d; ret; 
0x000bf57b: mov edx, 0x81000be0; ret; 
0x000b2b93: mov edx, 0x81000caa; shr dword ptr [ecx + 0x30010d1], 0xc; cdq; jmp ecx; 
0x00039702: mov edx, 0x83000000; in al, dx; or byte ptr [ebp - 0x6c1c27b], cl; call dword ptr [eax + 0x53]; 
0x00103d32: mov edx, 0x83000000; jmp dword ptr [esi]; 
0x00115e62: mov edx, 0x83fffffe; in al, dx; or al, 0x8d; xchg byte ptr [edx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x000f3b96: mov edx, 0x89000000; ret; 
0x000f7e02: mov edx, 0x89ffffb2; ret 0xe883; 
0x000c9b62: mov edx, 0x8bfff6a1; jl 0xc9b8d; cmp byte ptr [ebp - 0x653d779], cl; call dword ptr [eax - 0x73]; 
0x000c3e62: mov edx, 0x8bfff6fe; jl 0xc3e8d; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x0005d940: mov edx, 0xc4830002; adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x000f2686: mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f2653: mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00089991: mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000a2844: mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x001198ea: mov edx, 0xffffffff; call 0x119810; sar eax, 0x1f; add esp, 0xc; ret; 
0x001993a5: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0002828d: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000f2791: mov edx, 0xffffffff; mov eax, 0x20; cmovne eax, edx; ret; 
0x00121647: mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00121567: mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00148250: mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x000a2893: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a287f: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000f269d: mov edx, 0xffffffff; pop ebx; cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000784cc: mov edx, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00085e49: mov edx, 0xffffffff; ret; 
0x0011c719: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000898d5: mov edx, 1; call dword ptr gs:[0x10]; 
0x0017a9cb: mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00097f62: mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00091cb0: mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017feda: mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00080b68: mov edx, 1; mov eax, edx; ret; 
0x0008cff9: mov edx, 1; mov ebx, edi; call dword ptr gs:[0x10]; 
0x00118fee: mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00148260: mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x000893cf: mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008bc6c: mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008cf62: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024cd7: mov edx, 1; xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00091a27: mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ba48: mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089b03: mov edx, 1; xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b63e: mov edx, 1; xor esi, esi; lea ebx, [ebp + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b3dd: mov edx, 1; xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1c8: mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092934: mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012a0d1: mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011c0f6: mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00089313: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00089382: mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012a15a: mov edx, 8; call dword ptr gs:[0x10]; 
0x00042614: mov edx, 8; cmove eax, edx; ret; 
0x0017d727: mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00140c9f: mov edx, dword ptr [0]; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x0008fa9f: mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008880f: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00088846: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0014c0ba: mov edx, dword ptr [0xc6810003]; jbe 0x14c10f; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x0008a568: mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00024bae: mov edx, dword ptr [eax + 0x11c]; test edx, edx; je 0x24bb9; ret; 
0x00097647: mov edx, dword ptr [eax + 0x14]; cmp ebx, edx; jne 0x97640; pop ebx; ret; 
0x0016ccb0: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xf0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0016d19f: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00168fe2: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016c580: mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x00163def: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016e932: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000415e8: mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x00080bf6: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008887a: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0016d1a8: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0016433c: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016b409: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0016e8c9: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0015e7cc: mov edx, dword ptr [eax + ebx]; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x0009232c: mov edx, dword ptr [eax]; and edx, 2; je 0x92340; xor eax, eax; ret; 
0x000be51c: mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xbe532; ret; 
0x00101338: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0008cb0d: mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00103948: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0008a498: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0007c016: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0017c657: mov edx, dword ptr [eax]; test edx, edx; jne 0x17c668; add esp, 8; pop ebx; ret; 
0x0003cdde: mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x00089d40: mov edx, dword ptr [ebp + 0x10]; test edx, edx; je 0x89d80; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00089e08: mov edx, dword ptr [ebp + 0xc]; call dword ptr gs:[0x10]; 
0x000268dd: mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0012fcd8: mov edx, dword ptr [ebp - 0x4c]; add esp, 0xc; push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0008a8cd: mov edx, dword ptr [ebx + 0x18]; and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x0003fa91: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00087eaf: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000330df: mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x00125365: mov edx, dword ptr [ebx + ecx]; cmp edx, 0x26; je 0x1253c3; pop ebx; pop esi; ret; 
0x0008b4e0: mov edx, dword ptr [ebx]; mov eax, edx; shr eax, 3; je 0x8b518; mov eax, edi; call dword ptr gs:[0x10]; 
0x00088647: mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x0017c980: mov edx, dword ptr [ecx + 0x10c]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00087dfb: mov edx, dword ptr [ecx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0003459c: mov edx, dword ptr [ecx + 0x2c]; add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x0012a8c0: mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x00128912: mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x0012b9f9: mov edx, dword ptr [ecx + edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0017d791: mov edx, dword ptr [ecx]; in al, dx; jmp dword ptr [esi - 0x70]; 
0x000a0ab8: mov edx, dword ptr [edi + 0x8c]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00165861: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00165678: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x001656a3: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00131cff: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x001656d3: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016b81a: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0016c1ea: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00080c4f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00080b1f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00168b80: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x0007655c: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007655c: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0007645d: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00024e78: mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003c3f7: mov edx, dword ptr [edx + 0xa0]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x001251ff: mov edx, dword ptr [edx + 0xa0]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00089a60: mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00137ba1: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00151c37: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x00033a0d: mov edx, dword ptr [edx + ebx - 0x7f4]; mov dword ptr [eax - 0x40], edi; test edx, edx; je 0x33a25; mov dword ptr [esp + 0x14], eax; call edx; 
0x0007adf3: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7adf0; ret; 
0x00084dd3: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x84dd0; ret; 
0x0008f9f2: mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x000889a2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x000889c2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x000889e2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x00088a02: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x0008f9d2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9b2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x00129cec: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00094e9c: mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x94eb0; ret; 
0x0009aa42: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x32c], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa72: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x330], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aaa2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x334], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a812: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7f2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0009aad2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a8a2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0009ab02: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x000bda31: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000b6e72: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00170fb6: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00171013: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x000ba273: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e30: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00123af4: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000b3170: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba244: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e11: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3151: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00093bbd: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010c6cb: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126e91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126961: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115851: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117791: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117261: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b091: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b01: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126871: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad81: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b61: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119971: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b01: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126781: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c81: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115291: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8881: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e901: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e621: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00058169: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x58180; add esp, 0xc; ret; 
0x00073b79: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x73b90; add esp, 0xc; ret; 
0x00034abb: mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x000404d4: mov edx, dword ptr [esp + 0x14]; call edx; 
0x0008e2bd: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00183b6e: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009975a: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116ad6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bc6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126ca6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc36: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5c6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab66: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00126806: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0011941d: mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00164b19: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00128c05: mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012559e: mov edx, dword ptr [esp + 0x18]; cmp esi, -1; je 0x1255c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00101f7b: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00115922: mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001028d0: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0005da5b: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120ecb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010b6fb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011531b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126d9b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a1b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126a9b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012683b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126bfb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a5b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012692b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c6b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012193b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e79b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011abfb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00185f33: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129103: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00171f2c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x171f40; add esp, 0xc; ret; 
0x0017209c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x1720b0; add esp, 0xc; ret; 
0x0012516d: mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001253f9: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e2e8c: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013336e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x0013457e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x001860f6: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003fe35: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b5: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7f7: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x000912f3: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c7: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a47: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f53: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b3: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x000964ae: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x0009671a: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x00121a50: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001029e4: mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003f87c: mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00125497: mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011f777: mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a37: mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb7: mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f7: mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd7: mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00123367: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x00185fb1: mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000d6c10: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00125ed4: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f2d26: mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0012974b: mov edx, dword ptr [esp + 0x38]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011f8db: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012020b: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d51: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f11: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00117186: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001052ce: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001052ff: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00124ddf: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00125e2f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0012643f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0012826f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0016e8d4: mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x0014e196: mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00099b55: mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009987d: mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad6: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099803: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00128b05: mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00129576: mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00119480: mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001289bc: mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x001050f2: mov edx, dword ptr [esp + 0x88]; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00104ff3: mov edx, dword ptr [esp + 0x88]; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0010b370: mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0010b246: mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010b577: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0010b501: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00171cf8: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007651f: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00120e80: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003ac45: mov edx, dword ptr [esp + 0xc]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0017d1df: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0013674c: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000df6a0: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00127d61: mov edx, dword ptr [esp + 0xc]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d1b: mov edx, dword ptr [esp + 0xc]; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0008ef38: mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008ef73: mov edx, dword ptr [esp + 0xc]; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00040616: mov edx, dword ptr [esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00118f51: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b5f1: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11b602; add esp, 0x1c; ret; 
0x0011cce2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00123806: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001287c2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x0013e9f4: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea43: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x13ea54; add esp, 0x1c; ret; 
0x00140edf: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x0016d4bd: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d9d7: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x001800d2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x0003fa5a: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc77: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff47: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffca: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x000577f1: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x000d2db7: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd14b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df48b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000e788a: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe78a7; add esp, 0x1c; ret; 
0x00093b7d: mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008acdd: mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00034478: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034498: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001481ce: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4e28]; test eax, eax; jne 0x1481e7; ret; 
0x00033cee: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342be: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003428e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00171914: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003d684: mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008f9ee: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x0008899e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x000889be: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x000889de: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889fe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x0008f9ce: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9ae: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x0009a80e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7ee: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0009a89e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0009aafe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x000341ae: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003417e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003414e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003408e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340ee: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033ffe: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340be: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003405e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003425e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003402e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003411e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fce: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00073fa0: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0010abb8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d208: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x001721e0: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008a798: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103928: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0011b3f1: mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008a994: mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x000d6e34: mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00086a48: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b8: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f68: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0017c308: mov edx, dword ptr [esp + 8]; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x17c318; ret; 
0x0010b9a5: mov edx, dword ptr [esp + 8]; mov ecx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010df68: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f898: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0008a978: mov edx, dword ptr [esp + 8]; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0008faf2: mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009497a: mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e00bc: mov edx, dword ptr [esp]; mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dffe2: mov edx, dword ptr [esp]; mov esi, dword ptr [esp + 8]; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0017d63d: mov edx, dword ptr [esp]; ret; 
0x00119be2: mov edx, dword ptr es:[edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0017d726: mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00140c9e: mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x0008fa9e: mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008880e: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00088845: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00040615: mov edx, dword ptr ss:[esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00042051: mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000f2c4d: mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00041fbf: mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00042023: mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0011b039: mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aae9: mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c45e: mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0008b454: mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008bba1: mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0010ad09: mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010af8d: mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00041f91: mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00086a24: mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x86a20; ret; 
0x001a02e0: mov edx, eax; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x0003c2e1: mov edx, ebp; call dword ptr gs:[0x10]; 
0x00097ade: mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001159fe: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011682a: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011686e: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0010bafb: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dfe9f: mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfdfd: mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dff1a: mov edx, ebp; mov edi, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dfcfa: mov edx, ebp; mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00087647: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000505e8: mov edx, ebx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0010428d: mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00126cf0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001267e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00126990: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00121a20: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00126e60: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e2470: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010b020: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00119a30: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00117720: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00117720: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00119c00: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00126d10: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00123b30: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001239c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001266d0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001219b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00126cd0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00104e20: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00126900: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000e8830: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b470: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00125510: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00125510: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000e88e0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011ec90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00102960: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00102980: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x001029a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010ac20: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x00125b90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00125b70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001269b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126d30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e60: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00115f30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126d60: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00126dd0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x001268a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00126c30: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c390: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00102e20: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001217a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001219d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f840: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b490: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00121500: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x001266f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0010be10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011ec60: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00102c50: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102930: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00123b50: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00126720: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126750: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e78e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00126b90: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e650: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x001043e3: mov edx, ebx; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00116048: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0003cfed: mov edx, edi; call dword ptr gs:[0x10]; 
0x00115afe: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b95b: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dfe29: mov edx, edi; mov dword ptr [esp], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0003d0fe: mov edx, edi; mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0ae: mov edx, edi; mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00127c0f: mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0007c1ef: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00083ef7: mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000d6f55: mov edx, esi; call dword ptr gs:[0x10]; 
0x000a53b3: mov edx, esi; mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x0017ff6f: mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0019e38e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0019d80e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x000f9434: mov es, word ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebx - 0x74f3dbbc], cl; je 0xf9464; add al, 0x83; ret; 
0x000a0861: mov esi, 0x3c04; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x0008cefe: mov esi, 0x53053053; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000a6b24: mov esi, 0x5f5e5bc2; pop ebp; ret; 
0x0008f673: mov esi, 0x68fff94f; ret 1; 
0x0015230d: mov esi, 0x68fff96e; imul eax, dword ptr [esi], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + eax*8 - 7], ah; call dword ptr [eax - 0x18]; 
0x0012ac77: mov esi, 0x81000529; ret; 
0x000dd177: mov esi, 0x81000a04; ret; 
0x000bc977: mov esi, 0x81000c0c; ret; 
0x0009fa77: mov esi, 0x81000ddb; ret; 
0x00085577: mov esi, 0x81000f80; ret; 
0x00082e77: mov esi, 0x81000fa7; ret; 
0x000a23be: mov esi, 0x83000199; les ebx, ptr [eax]; pop ebx; ret; 
0x001651a4: mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x000309ef: mov esi, 0x893a3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x0005f826: mov esi, 0x89c68900; ret 0x44c7; 
0x00056bc6: mov esi, 0x8b1b244c; je 0x56bf1; sbb al, 0x89; ret 0xc801; 
0x00098af4: mov esi, 0x8d887d8b; xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax + 0x68]; 
0x0013b1a6: mov esi, 0x8dfffffd; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x9363], cl; dec dword ptr [ebp + 0x48d4904]; ret; 
0x0003f955: mov esi, 0xc4830007; adc byte ptr [ebx - 0x76f7dbb4], cl; ret 0xc085; 
0x000a5614: mov esi, 0xda390114; je 0xa5610; pop ebx; ret; 
0x00060524: mov esi, 0xe8ffffe9; ret; 
0x0019f85e: mov esi, 0xf6000000; ret 0xf0f; 
0x0003225e: mov esi, 0xf600001a; ret 0xf03; 
0x001718f4: mov esi, 0xfc21f6e8; jmp dword ptr [esi - 0x70]; 
0x000a5675: mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x001869c1: mov esi, 0xff6c72e8; inc dword ptr [ecx + 0x475d1c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132c06: mov esi, 0xfff9c4e8; jmp dword ptr [esi - 0x70]; 
0x00124537: mov esi, 5; call dword ptr gs:[0x10]; 
0x0008d93d: mov esi, 8; call dword ptr gs:[0x10]; 
0x0008cda7: mov esi, 8; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0003c232: mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0008d5f6: mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00023256: mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0010407d: mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003c2dc: mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003cfe8: mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00096013: mov esi, dword ptr [eax + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00104090: mov esi, dword ptr [ebp - 0x144]; push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x00097d6d: mov esi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], edi; call esi; 
0x00148659: mov esi, dword ptr [ebx]; mov dword ptr [esp], ebx; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00131d8d: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x001193bf: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125c74: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012457f: mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00116044: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0010c3db: mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0005da63: mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00061043: mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00061424: mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x0012517a: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e2e94: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0005dac3: mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x5daf0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00050326: mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0012010d: mov esi, dword ptr [esp + 0x2c]; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x120140; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x001052d2: mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00105303: mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00124de3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00125e33: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00126443: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00128273: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0011718e: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00128a12: mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00060b6e: mov esi, dword ptr [esp + 0x40]; mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00125c22: mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00118e56: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000df6d5: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00164f1a: mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00099adf: mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099baa: mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf2: mov esi, dword ptr [esp + 0x4c]; mov ecx, dword ptr [esp]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00128b09: mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00102ad6: mov esi, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00125fe6: mov esi, dword ptr [esp + 0x64]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001179df: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117925: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00118c6b: mov esi, dword ptr [esp + 0x78]; lea edx, [esp + 0x28]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001250db: mov esi, dword ptr [esp + 0xa0]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0010b24d: mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0010b50d: mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0009394f: mov esi, dword ptr [esp + 0xc]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0005865c: mov esi, dword ptr [esp + 0xc]; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0009980c: mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000998df: mov esi, dword ptr [esp + 4]; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00099927: mov esi, dword ptr [esp + 4]; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x000dfcfc: mov esi, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dff1e: mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dffe5: mov esi, dword ptr [esp + 8]; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfe96: mov esi, dword ptr [esp + 8]; mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00092861: mov esi, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000dfdf9: mov esi, dword ptr [esp + 8]; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0017d649: mov esi, dword ptr [esp]; ret; 
0x00177859: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00080d74: mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00164c38: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0009a330: mov esi, ebp; call dword ptr gs:[0x10]; 
0x0016986b: mov esi, ebx; call dword ptr [eax - 0x73]; 
0x00119421: mov esi, ebx; call dword ptr gs:[0x10]; 
0x00119340: mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f387: mov esi, ecx; call dword ptr gs:[0x10]; 
0x00126123: mov esi, edi; call dword ptr gs:[0x10]; 
0x0008cfa9: mov esi, edx; call dword ptr gs:[0x10]; 
0x0008fd43: mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000bbc9f: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000bbd1f: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bbcf5: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x001297cb: mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000bbd5f: mov esi, edx; ret; 
0x0015d2c8: mov esi, es; bnd call dword ptr [eax - 0x18]; 
0x0011d4cd: mov esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000cc5cb: mov esi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x001156ca: mov esi, esp; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00042223: mov esp, 0x1508dc0; mov eax, edx; ret; 
0x000e897e: mov esp, 0x17a8090; add byte ptr [ebx + ebx*8 - 0x7d], dh; ret 0xeb02; 
0x000942f5: mov esp, 0x1accc3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x0004223c: mov esp, 0x1c283d0; test eax, eax; cmovne eax, edx; ret; 
0x0006636d: mov esp, 0x1fffffb; ret 0xd801; 
0x00064265: mov esp, 0x1fffffb; ret 0xf001; 
0x001a02f2: mov esp, 0x20b8d2; add byte ptr [eax], al; add eax, edx; ret; 
0x0019b422: mov esp, 0x300033d; sbb al, 0x8b; jmp ebx; 
0x000ba091: mov esp, 0x35b9e8d2; or al, 0; add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba033: mov esp, 0x3617e8d2; or al, 0; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba015: mov esp, 0x3635e8d2; or al, 0; add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0005a030: mov esp, 0x39c829d2; ret 0x8d0f; 
0x00035377: mov esp, 0x3dbd808d; stc; call dword ptr [eax - 0x18]; 
0x0007c8a7: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x001a55b1: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret 4; 
0x00027e3e: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x00179511: mov esp, 0x5b000001; pop esi; pop edi; pop ebp; ret; 
0x00144cc8: mov esp, 0x5b000002; pop esi; pop edi; pop ebp; ret; 
0x00156e13: mov esp, 0x5b000008; pop esi; pop edi; pop ebp; ret; 
0x000b3040: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000b2d40: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000a983a: mov esp, 0x5fd001d2; pop esi; ret; 
0x000bad61: mov esp, 0x5ff801c0; ret; 
0x0012dd02: mov esp, 0x64ee808d; stc; call dword ptr [eax - 1]; 
0x0012dcb1: mov esp, 0x650d808d; stc; call dword ptr [eax - 1]; 
0x000b6d91: mov esp, 0x68b9e8d2; or al, 0; add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d33: mov esp, 0x6917e8d2; or al, 0; add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d15: mov esp, 0x6935e8d2; or al, 0; add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2b8c: mov esp, 0x72da39d2; mov gs, eax; mov edx, 0x81000caa; shr dword ptr [ecx + 0x30010d1], 0xc; cdq; jmp ecx; 
0x000ba155: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41b5: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b75: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013f613: mov esp, 0x7440fa80; int 0x80; 
0x000bad91: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000bada4: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000badc4: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000badb4: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000d353e: mov esp, 0x8024; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x0005ca33: mov esp, 0x8024; add cl, ch; ret 0xfff9; 
0x00171b79: mov esp, 0x810000ba; ret; 
0x0015aa79: mov esp, 0x8100022b; ret; 
0x00156d79: mov esp, 0x81000268; ret; 
0x0014b579: mov esp, 0x81000320; ret; 
0x0014a279: mov esp, 0x81000333; ret; 
0x00133779: mov esp, 0x8100049e; ret; 
0x0011a479: mov esp, 0x81000631; ret; 
0x00101a79: mov esp, 0x810007bb; ret; 
0x000f8879: mov esp, 0x8100084d; ret; 
0x000bd079: mov esp, 0x81000c05; ret; 
0x000a2579: mov esp, 0x81000db0; ret; 
0x00085979: mov esp, 0x81000f7c; ret; 
0x00083679: mov esp, 0x81000f9f; ret; 
0x0007bd79: mov esp, 0x81001018; ret; 
0x0002fd79: mov esp, 0x810014d8; ret; 
0x0011d188: mov esp, 0x83000006; in al, dx; or byte ptr [ebp - 0x6a3d07d], cl; call dword ptr [eax + 0x55]; 
0x000b2a53: mov esp, 0x83ce01d2; ret 0x2910; 
0x000a9844: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x000a985e: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000a9851: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x0017439b: mov esp, 0x83fffffd; in al, dx; or al, 0x8b; jl 0x1743c9; adc byte ptr [ebp - 0x6949b79], cl; call dword ptr [eax - 0x18]; 
0x0017a4fb: mov esp, 0x85000003; sal byte ptr [ebp + ecx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0003dc78: mov esp, 0x86024; add byte ptr [ebx + 0x708d04ec], al; call dword ptr [esi + 0x57]; 
0x00035211: mov esp, 0x891c418d; ret 0x25; 
0x0011d7c9: mov esp, 0x89ffe8a8; inc esi; sbb al, 0xe9; ret; 
0x0010b8d8: mov esp, 0x8b000000; pop esp; and al, 0x60; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000a3128: mov esp, 0x8bfff56b; cdq; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x0013e38c: mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0010c3de: mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000307d1: mov esp, 0x8d0cec83; xchg dword ptr [edx], edi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x000be556: mov esp, 0x8dffea10; or ah, 3; ljmp 0xf04:0x7b41f6ff; inc esp; ret 0x66c3; 
0x0006cd83: mov esp, 0x9024; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x000b406a: mov esp, 0x95e0e8d2; or al, 0; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4045: mov esp, 0x9605e8d2; or al, 0; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ff9b3: mov esp, 0xa024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0019d320: mov esp, 0xa8000000; inc eax; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x000b2a3a: mov esp, 0xac10e8d2; or al, 0; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a15: mov esp, 0xac35e8d2; or al, 0; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00042610: mov esp, 0xbad284c0; or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0004262e: mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000b41a8: mov esp, 0xc030010; cdq; jmp ecx; 
0x000b4168: mov esp, 0xc030010; xchg ecx, eax; jmp ecx; 
0x000cbac3: mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x000426b0: mov esp, 0xd28566c0; mov edx, 0x10; cmove eax, edx; ret; 
0x0005045a: mov esp, 0xe8fff93f; or eax, 0x85fffffb; ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000a284a: mov esp, 0xf042444; inc esp; ret 0xc083; 
0x000428c1: mov esp, 0xf88ad493; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x000f29f3: mov esp, 0xf905c086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0010880c: mov esp, 0xf9124c8e; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000fb991: mov esp, 0xffdffc05; dec dword ptr [edi]; mov dword ptr [0x831e72d7], eax; ret; 
0x000a5e71: mov esp, 0xfffe786; inc esp; ret 0x66c3; 
0x00104092: mov esp, 0xfffffffe; jbe 0x1040b9; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0016c191: mov esp, ebp; call dword ptr [eax - 0x73]; 
0x00171b59: mov esp, ecx; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0003bf3f: mov esp, ecx; jmp edx; 
0x00160b4d: mov esp, es; stc; call dword ptr [eax - 0x18]; 
0x00160b4d: mov esp, es; stc; call dword ptr [eax - 0x18]; leave; xor ebp, ebp; jmp dword ptr [esi - 0x70]; 
0x000ad2e8: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0012c9ea: mov fs, word ptr [edi - 0x73000000]; push eax; add dword ptr [ebp + 0xb6], ecx; add dh, al; inc edx; jmp dword ptr [eax]; 
0x0008cb54: mov fs, word ptr [edx + eax]; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00148241: mov fs, word ptr [esi + ecx*2]; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x000ba171: mov gs, eax; fidiv dword ptr [esp + ecx]; add byte ptr [ecx + 0x105efdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b41d1: mov gs, eax; jp 0xb4169; or al, 0; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b91: mov gs, eax; mov edx, 0x81000caa; shr dword ptr [ecx + 0x30010d1], 0xc; cdq; jmp ecx; 
0x00129de9: mov gs, edi; call dword ptr [eax - 0x18]; 
0x0004dda2: mov ss, ebp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7db84], cl; jmp dword ptr [eax]; 
0x000975b5: mov ss, word ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x00127ffd: mov ss, word ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00046e74: mov ss, word ptr [edi - 0x77000000]; ret; 
0x000f5314: mov ss, word ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x000c916c: mov ss, word ptr [esi - 0x77000000]; ret; 
0x000b3070: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x000ba42f: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fac: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011913d: mov word ptr [eax + 0x16], dx; ret; 
0x000ba549: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70b6: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a0eab: mov word ptr [eax + 0x29000008], fs; ret 0xc283; 
0x000b6e58: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba32f: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ebc: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014f4ff: mov word ptr [eax + eax], es; add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0011ac5c: mov word ptr [eax + eax], es; add esp, 4; pop ebx; pop esi; ret; 
0x000c78ab: mov word ptr [eax + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000c11f3: mov word ptr [eax + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x4fbb7226], cl; add al, 0x81; ret 0; 
0x001173fe: mov word ptr [eax + ecx*4], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x00095355: mov word ptr [eax - 0x1a], es; call dword ptr [eax - 0x73]; 
0x000278ec: mov word ptr [eax - 0x21], ss; call dword ptr [eax - 0x73]; 
0x00133448: mov word ptr [eax - 0xb], gs; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013a3dd: mov word ptr [eax], cs; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x000b6e23: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00041583: mov word ptr [eax], dx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x000ba246: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e13: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001037df: mov word ptr [eax], dx; xor eax, eax; ret; 
0x000a0a06: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr [eax]; 
0x001156d5: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00168b82: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000a0aba: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00115600: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003d495: mov word ptr [eax], es; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d4a9; add esp, 0x9c; ret; 
0x000c4143: mov word ptr [eax], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x47bb7226], cl; add al, 0x81; ret 0; 
0x000d7025: mov word ptr [eax], fs; ljmp 0x2fe8:0x505251ff; ret 0xffff; 
0x0011db89: mov word ptr [ebp + 0x408bfff6], es; je 0x11db1a; push esi; add al, 0x89; ret 0xeac1; 
0x001490c9: mov word ptr [ebp - 0x63fc77f], cs; call dword ptr [eax - 0x73]; 
0x0007d85e: mov word ptr [ebp - 0x76fffffe], ss; ret 0x468b; 
0x001868a9: mov word ptr [ebp - 1], gs; inc dword ptr [ecx + 0x476ebc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001222d0: mov word ptr [ebp - 4], fs; call dword ptr [eax - 0x73]; 
0x001431b1: mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000aceb2: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000acef4: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x00095816: mov word ptr [ecx - 0x1a], cs; call dword ptr [ebx + 0x50]; 
0x000ace80: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ace70: mov word ptr [ecx], dx; pop ebx; ret; 
0x0016e442: mov word ptr [ecx], es; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0010c1f0: mov word ptr [ecx], es; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000b49bc: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000b32dc: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b4ac6: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000b33e6: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b3198: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000b48cc: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000b31ec: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x00087f7e: mov word ptr [edi - 0x1b], gs; call dword ptr [eax - 0x18]; 
0x0006c0d3: mov word ptr [edi - 0x726d4], es; add ecx, ebx; jmp ecx; 
0x0006c080: mov word ptr [edi - 0x72754], es; add ecx, ebx; jmp ecx; 
0x0006c02a: mov word ptr [edi - 0x727d4], es; add ecx, ebx; jmp ecx; 
0x0006c41b: mov word ptr [edi - 0x72854], es; add ecx, ebx; jmp ecx; 
0x0006c45a: mov word ptr [edi - 0x728d4], es; add ecx, ebx; jmp ecx; 
0x000b3166: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000b47f3: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b3153: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b2e70: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00030ec0: mov word ptr [edi], ss; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0010df6c: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f89c: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000af2a8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000af3e8: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b966b: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaed8: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000ab008: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000a59e4: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a5924: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000af2fc: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000af43c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b96df: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaf1c: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab05c: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00186835: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189a1c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ba0c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00186855: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189ab0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018baa0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x000af263: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000af3a3: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000af273: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000af3b3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000aaeb3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000aafd3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b9606: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaea3: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000aafc3: mov word ptr [edx], ax; mov eax, edx; ret; 
0x0018c05b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0018a09b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008f9b6: mov word ptr [edx], es; add byte ptr [eax], al; ret; 
0x000a59a0: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a58f0: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a58e8: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x000a8f1f: mov word ptr [esi + eax], dx; jne 0xa8f10; pop ebx; pop esi; pop edi; ret; 
0x000c3594: mov word ptr [esi - 0x17af0007], es; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x00061048: mov word ptr [esi - 0x72eb4], es; add ecx, ebx; jmp ecx; 
0x00061429: mov word ptr [esi - 0x72f34], es; add ecx, ebx; jmp ecx; 
0x000613ca: mov word ptr [esi - 0x72fb4], es; add ecx, ebx; jmp ecx; 
0x000610e2: mov word ptr [esi - 0x73034], es; add ecx, ebx; jmp ecx; 
0x00061362: mov word ptr [esi - 0x730b4], es; add ecx, ebx; jmp ecx; 
0x0016d719: mov word ptr [esi - 0xd], gs; call dword ptr [eax - 0x48]; 
0x0016d5b4: mov word ptr [esi - 0xd], gs; call dword ptr [edx - 0x73]; 
0x0016da1a: mov word ptr [esi - 0xd], gs; call dword ptr [edx - 0x75]; 
0x00153fc1: mov word ptr [esi], cs; bnd call dword ptr [eax + 0x6a]; 
0x00046df8: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x76cfdb8c], cl; ret; 
0x0004d3bc: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c97db8c], cl; ret 0xf7ff; 
0x000c8f0c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x0004682c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c290c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0004d88c: mov word ptr [esp + esi*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x76bfdb8c], cl; ret; 
0x0010b240: mov word ptr [esp], fs; add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x000d3bdf: mov word ptr [esp], fs; add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00189919: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b919: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00189fb9: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189b4a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb3a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000b4d6d: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x17d651; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d51: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x17d651; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b366d: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x17d651; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00186aae: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb3f: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00186ade: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b0e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b6e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186bce: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186c3e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186c6e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186cae: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189b45: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb35: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00186aa9: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186aa4: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000af240: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aae80: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000ab110: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b6f70: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba630: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b716d: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5d0: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b710d: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5f0: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b712d: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba610: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b714d: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba40a: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f84: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7007: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba46a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fe7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba44a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fc7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3e7: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f74: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba42b: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fa8: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba62c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7169: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5cc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7109: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5ec: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7129: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba60c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7149: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7089: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70cc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ec: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4ec: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7069: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ad: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4ac: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7029: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4cc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7049: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b4b8d: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000b34c0: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b349d: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b4ddc: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b36dc: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000b4b2d: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b343d: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b345d: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b4b6d: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b347d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b35c0: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b4984: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b32b7: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b3317: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b32f7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b32d8: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b3499: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b3439: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b3459: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b3479: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b3399: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b3359: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b3379: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b32a4: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000af244: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aae84: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000ab114: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ba513: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b708d: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba573: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70d0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5a3: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70f0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4f0: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b706d: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba544: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70b1: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4b0: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b702d: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4d0: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b704d: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba390: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f1d: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3b0: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f3d: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3d0: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f5d: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba34a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ed7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba36a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ef7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2e7: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e84: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba32b: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6eb8: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba38c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f19: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3ac: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f39: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3cc: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f59: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000acf24: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000acf34: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf44: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf54: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000acee0: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000acf00: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf10: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000acef0: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf20: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000acf30: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf40: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf50: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000aced0: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b4a7d: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b33c0: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b3400: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b3420: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b33e1: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b339d: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b335d: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b4a5d: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b337d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b35a4: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b492d: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b324d: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b35b4: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b326d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b328d: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b3540: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b4894: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b31c7: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b3207: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b3227: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b31e8: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b35a0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3249: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b35b0: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3269: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b3289: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b31b4: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3bcd: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d2d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9740: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b258d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26ed: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000af33d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af49d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf5d: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0bd: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b3bed: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d4d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9760: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25ad: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b270d: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000af35d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4bd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000aaf7d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0dd: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b3c0d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d6d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9780: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25cd: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b272d: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000af37d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4dd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000aaf9d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000adb60: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000ab0fd: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b3a9c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d8d: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b247c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b274d: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b1068: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b99ac: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b95dc: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc78: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000b672c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b2109: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af1c4: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000af404: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b0fef: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000b6807: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b6827: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af2d7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000af417: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aaef7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab037: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b9950: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000af317: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af457: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aaf37: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab077: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af207: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000af477: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b1027: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000acc37: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae47: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000adbb0: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000ab097: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6847: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b6867: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001a02a4: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9585: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbff: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae04: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000adc29: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000ab024: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000af2f8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000af438: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aaf18: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab058: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af339: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af499: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf59: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af359: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000aaf79: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af379: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000aaf99: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000adb5c: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000ab0f9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b1064: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b95d8: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc74: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000b6728: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b3bc4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b2584: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26e4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3be4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d44: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b2704: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d64: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25c4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b2724: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a93: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d84: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2473: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b2744: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3bc8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d28: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b973b: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b2588: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26e8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3be8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d48: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25a8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b2708: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c08: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d68: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25c8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b2728: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a97: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d88: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2477: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b2748: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af410: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab030: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000af450: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab070: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af470: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab090: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af1c0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000af400: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b0feb: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a02a0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9581: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbfb: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000adc25: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000ab020: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3d20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b26e0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3d40: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b2700: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3d60: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b2720: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3d80: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2740: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af490: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000ab0b0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f0: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b6e90: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2e3: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e80: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31b0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000af334: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af494: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf54: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0b4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d4: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f4: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b6f14: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba514: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b708e: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba574: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70d1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5a4: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70f1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4f1: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b706e: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba545: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b70b2: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4b1: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b702e: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4d1: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b704e: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba391: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f1e: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3b1: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f3e: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3d1: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f5e: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba34b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ed8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba36b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6ef8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2e8: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e85: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba32c: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6eb9: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba38d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f1a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3ad: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f3a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3cd: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f5a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000acf25: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000acf35: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf45: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf55: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000acee1: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000acf01: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000acf11: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000acef1: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000acf21: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000acf31: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000acf41: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000acf51: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000aced1: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b4a7e: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000b33c1: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000b3401: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b3421: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b33e2: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000b339e: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b335e: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b4a5e: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000b337e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b35a5: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b492e: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000b324e: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b35b5: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b326e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b328e: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b3541: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b4895: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000b31c8: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b3208: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b3228: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000b31e9: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b35a1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b324a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b35b1: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b326a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b328a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b31b5: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3bce: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d2e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9741: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b258e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26ee: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000af33e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af49e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf5e: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0be: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b3bee: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d4e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9761: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25ae: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b270e: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000af35e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4be: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000aaf7e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0de: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b3c0e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d6e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9781: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25ce: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b272e: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000af37e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4de: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000aaf9e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000adb61: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000ab0fe: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b3a9d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d8e: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b247d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b274e: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b1069: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b99ad: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b95dd: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc79: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000b672d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b210a: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af1c5: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000af405: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b0ff0: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000b6808: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b6828: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000af2d8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000af418: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aaef8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab038: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b9951: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000af318: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af458: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aaf38: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab078: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af208: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000af478: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b1028: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000acc38: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae48: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000adbb1: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000ab098: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6848: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b6868: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001a02a5: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9586: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc00: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae05: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000adc2a: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000ab025: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000af2f9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000af439: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aaf19: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab059: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000af33a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af49a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf5a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af35a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000aaf7a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af37a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000aaf9a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000adb5d: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000ab0fa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b1065: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b95d9: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000acc75: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000b6729: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b3bc5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b2585: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26e5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3be5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d45: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b2705: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d65: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25c5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b2725: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a94: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d85: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2474: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b2745: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b3bc9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b3d29: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b973c: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b2589: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b26e9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3be9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d49: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b25a9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b2709: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3c09: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d69: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b25c9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b2729: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3a98: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d89: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2478: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b2749: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af411: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000ab031: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000af451: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000ab071: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af471: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000ab091: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af1c1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000af401: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b0fec: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001a02a1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b9582: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000acbfc: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000aae01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000adc26: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000ab021: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3d21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b26e1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b3d41: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b2701: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3d61: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b2721: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b3d81: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b2741: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000af491: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000ab0b1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f1: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b6e91: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba2e4: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e81: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31b1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000af335: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000af495: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000aaf55: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0b5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000af4b5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000ab0d5: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000af4d5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000ab0f5: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b6f15: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00180280: movmskps ebp, xmm0; pop ecx; ret; 
0x00189b4b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb3b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000af241: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aae81: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000ab111: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b6f71: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba631: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b716e: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5d1: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b710e: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5f1: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b712e: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba611: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b714e: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba40b: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f85: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7008: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba46b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fe8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba44b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fc8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3e8: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f75: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba42c: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6fa9: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba62d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b716a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5cd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b710a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba5ed: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b712a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba60d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b714a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b708a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70cd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ed: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4ed: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b706a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b70ae: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4ad: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b702a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba4cd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b704a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b4b8e: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000b34c1: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000b349e: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b4ddd: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000b36dd: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000b4b2e: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000b343e: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b345e: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b4b6e: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000b347e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x000b35c1: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000b4d6e: movq qword ptr [edi], mm0; add edi, 0x10; call 0x17d651; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d52: movq qword ptr [edi], mm0; add edi, 0x10; call 0x17d651; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b366e: movq qword ptr [edi], mm0; add edi, 0x10; call 0x17d651; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4985: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b32b8: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b3318: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b32f8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b32d9: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b349a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b343a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b345a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b347a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b339a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b335a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b337a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b32a5: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x00189f7d: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186aaf: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb40: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x00186adf: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b0f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186b6f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186bcf: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186c3f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186c6f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186caf: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189b46: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bb36: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00186aaa: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186aa5: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186cb3: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189a5d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ba4d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00186c43: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b91d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00186c73: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001899cd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b9bd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000af245: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000aae85: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000ab115: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00189fbc: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189918: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b918: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00189fb8: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001498b5: movsb byte ptr es:[di], byte ptr [si]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0016ed9d: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, bh; je 0x16edc8; sbb al, 0x53; call eax; 
0x000950d8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000c9745: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x39302444], cl; ret; 
0x0010b242: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x0017f330: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0007e5e6: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000d1df8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0011a498: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x0011c891: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x17aff314], al; ret 0xf621; 
0x00121c9d: movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x001098ee: movsb byte ptr es:[edi], byte ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x0018819b: movsb byte ptr es:[edi], byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0009abcd: movsb byte ptr es:[edi], byte ptr [esi]; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00139368: movsb byte ptr es:[edi], byte ptr [esi]; mov bh, 0xef; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; 
0x000b4d8e: movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001498b6: movsb byte ptr es:[edi], byte ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000bbc9b: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0011d2b8: movsb byte ptr es:[edi], byte ptr [esi]; pop esi; stc; call dword ptr [eax + 0x55]; 
0x00179fb0: movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x000b2a1e: movsb byte ptr es:[edi], byte ptr [esi]; rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00045639: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x00119b41: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x811f; 
0x000d3be8: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00175b56: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8903; 
0x00045734: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d3bd6: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc104; 
0x00175b35: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x00178830: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc107; 
0x0010c2a0: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0012af6c: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x0008b2e2: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x000d3547: movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00132b45: movsb byte ptr es:[edi], byte ptr [esi]; sbb ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0009e984: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00164f67: movsb byte ptr es:[edi], byte ptr [esi]; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00067fa9: movsd dword ptr es:[edi], dword ptr [esi]; aam 0xff; dec dword ptr [ecx - 0x5ab6b]; call dword ptr [edx + 0x52]; 
0x00163bec: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; pop ebx; ret; 
0x0003cfe4: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ba15a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41ba: movsd dword ptr es:[edi], dword ptr [esi]; call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b7a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001320a3: movsd dword ptr es:[edi], dword ptr [esi]; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x000796c1: movsd dword ptr es:[edi], dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x000c0477: movsd dword ptr es:[edi], dword ptr [esi]; cmp bh, dh; jmp dword ptr [esi - 0x70]; 
0x0015136b: movsd dword ptr es:[edi], dword ptr [esi]; idiv bh; add esp, 0x1c; ret; 
0x0008a911: movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0014b840: movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000f27e5: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000bbd1e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bbcf4: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00149776: movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0008a519: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000bbcf2: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bbd5b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00041c7e: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00050e3e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x0009efec: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00109a26: movsd dword ptr es:[edi], dword ptr [esi]; stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00159047: movsd dword ptr es:[edi], dword ptr [esi]; stosb byte ptr es:[edi], al; std; jmp dword ptr [esi - 0x70]; 
0x000bbd5d: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000bbcf1: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bbd5a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a6b23: movsx eax, dl; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a5613: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa5610; pop ebx; ret; 
0x000962d4: movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x00171fb8: movzx eax, al; add esp, 0x1c; ret; 
0x00115256: movzx eax, al; add esp, 0x4c; ret; 
0x00167098: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0011c80e: movzx eax, al; add esp, 8; pop ebx; ret; 
0x0004206e: movzx eax, al; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000962e9: movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x000f28f4: movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0003bdb8: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00124eaf: movzx eax, al; neg eax; ret; 
0x00082f67: movzx eax, al; pop ebx; neg eax; ret; 
0x0012ce81: movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x00167004: movzx eax, al; pop ebx; pop esi; ret; 
0x00088d4e: movzx eax, al; pop ebx; ret; 
0x0005802b: movzx eax, al; pop edi; ret; 
0x0003cc82: movzx eax, al; ret; 
0x00111379: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x000961b5: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0004221e: movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0014483e: movzx eax, ax; add esp, 0x2c; ret; 
0x00137e35: movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0004211f: movzx eax, ax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x0012890f: movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x000422cf: movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00137d0e: movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00060b74: movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00060c33: movzx eax, byte ptr [eax + ebp - 0x20]; mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000613c4: movzx eax, byte ptr [eax + ebp - 0x20]; mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x000610dc: movzx eax, byte ptr [eax + ebp - 0x20]; mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x0006135c: movzx eax, byte ptr [eax + ebp - 0x20]; mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x0006103e: movzx eax, byte ptr [eax + ebp - 0x20]; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x0006c0cd: movzx eax, byte ptr [eax + esi - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x00085ef6: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x00199ced: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cd37: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x000856eb: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0018a130: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00199a42: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000832be: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0006141f: movzx eax, byte ptr [ecx + ebp - 0x20]; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x00199545: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x000f1f49: movzx eax, byte ptr [edx + 1]; add edx, 1; test al, al; jne 0xf1f21; xor eax, eax; ret; 
0x0019405d: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x00192894: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0019407d: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001928a4: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019409d: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001928b4: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001940bd: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001928c4: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001940dd: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001928d4: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001940fd: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001928e4: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00194021: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00192874: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0006c2a8: movzx eax, byte ptr [edx + esi - 0x20]; mov ebp, dword ptr [esp + 0x50]; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006c415: movzx eax, byte ptr [edx + esi - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x0008742e: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0017f391: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00081996: movzx eax, byte ptr [edx]; ret; 
0x0019403c: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00192883: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0006c07b: movzx eax, byte ptr [esi + eax]; mov ecx, dword ptr [edi + eax*4 - 0x72754]; add ecx, ebx; jmp ecx; 
0x0006cefd: movzx eax, byte ptr [esi + ecx]; mov dword ptr [esp + 0x14], ebp; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0002828a: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00060b6b: movzx eax, dl; mov esi, dword ptr [esp + 0x40]; mov ecx, ebx; movzx eax, byte ptr [eax + ebp - 0x20]; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x0006103b: movzx eax, dl; movzx eax, byte ptr [eax + ebp - 0x20]; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00138150: movzx eax, dl; ret; 
0x0004260b: movzx eax, dl; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x000426ab: movzx eax, dx; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x000344d7: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x000341b2: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034182: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034152: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034092: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340f2: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00034002: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340c2: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034062: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034262: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034032: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034122: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fd2: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00131caa: movzx eax, word ptr [eax + edx*2]; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x00135444: movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00147a85: movzx ebp, bp; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00147b85: movzx ebp, ch; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x000d21ef: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x00140779: movzx ebx, byte ptr [eax]; test ebx, ebx; jne 0x140748; mov eax, 1; pop ebx; ret; 
0x00144867: movzx ebx, word ptr [ecx + 2]; xor eax, eax; cmp word ptr [edx + 2], bx; je 0x144878; pop ebx; ret; 
0x0011e96c: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00194310: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x194170; pop ebp; xor eax, eax; ret; 
0x00194059: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x00192890: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00194079: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001928a0: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00194099: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001928b0: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001940b9: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001928c0: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001940d9: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001928d0: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001940f9: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001928e0: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0019401d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00192870: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00199ba4: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cbda: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x00189988: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b978: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000bb972: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0xbb97d; xor eax, eax; pop ebx; ret; 
0x0018a008: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194039: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00192880: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00199549: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00041bea: movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cee: movzx ecx, cl; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00041ccb: movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00041d9f: movzx ecx, cx; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00189a18: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018ba08: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0018a098: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00151c90: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x00167b79: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x167b70; pop ebx; ret; 
0x00039824: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x39808; ret; 
0x00199a45: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0019c824: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0019c884: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0019c854: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0019c844: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0019c815: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001037d8: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012c37e: movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x0012b9fc: movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012c27e: movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x0012c07e: movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x0012c17e: movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0012be7e: movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x0012c0fe: movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x0012befe: movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0012bf7e: movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x0012c1fe: movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x0012bdfe: movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x001718f6: mul byte ptr [ecx]; cld; jmp dword ptr [esi - 0x70]; 
0x001208d5: mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x00186cb7: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00167076: neg byte ptr [esi - 0x3b7d0000]; adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x00188623: neg dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cd23: neg dword ptr [ebx]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001990b7: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00196827: neg eax; add esp, 4; pop ebx; ret; 
0x0003d68a: neg eax; cmovs eax, edx; ret; 
0x000bfd2e: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00099785: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003c3fd: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00125205: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00024e76: neg eax; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003ab8b: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00194177: neg eax; pop ebp; ret; 
0x000253de: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x0008e2da: neg eax; pop ebx; pop esi; ret; 
0x000f2ce4: neg eax; pop ebx; ret; 
0x0019ade7: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0019a887: neg eax; pop edi; pop ebx; ret; 
0x0019f6c7: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d1ea7: neg eax; pop edi; pop esi; ret; 
0x000506b3: neg eax; pop esi; pop edi; ret; 
0x00082f6b: neg eax; ret; 
0x00081a2e: neg eax; sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087957: neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186394: neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00025867: neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0005d9d4: neg eax; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00089fba: neg eax; sbb eax, eax; and eax, 0x16; ret; 
0x0003fbd6: neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000df688: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00093bd3: neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011605c: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x000253e4: neg edx; ret; 
0x0009ab06: nop; adc al, 0x3c; add byte ptr [eax], al; ret; 
0x0010abbd: nop; adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0018d78a: nop; adc dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001331ec: nop; adc eax, 0xc483fffe; adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0014f50a: nop; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0018b00a: nop; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00091ffc: nop; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00099445: nop; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00034540: nop; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000943c9: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008cf9e: nop; add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [eax + 0xf0], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x0016e432: nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00088a38: nop; add byte ptr [eax], al; add cl, al; call 0x1e90d4d; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x0006cd85: nop; add byte ptr [eax], al; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x001011a2: nop; add byte ptr [edi], cl; test dword ptr [edx - 0x7c000005], esi; ret 0x8301; 
0x00034299: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0016a9ca: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0016a9ca: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0011b57d: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001777db: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0005763f: nop; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000d217f: nop; add eax, 2; ret; 
0x000c3547: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dh; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00047945: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0005060f: nop; add eax, dword ptr [esp]; ret; 
0x001342af: nop; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017fe2f: nop; add esp, 4; pop ebx; pop esi; ret; 
0x0010130f: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000920cf: nop; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0019da7f: nop; and eax, 0x1fff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da5f: nop; and eax, 0x3ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da8f: nop; and eax, 0x3fff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da6f: nop; and eax, 0x7ff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0019da9f: nop; and eax, 0x7fff; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000bad6f: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000bb4cf: nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000bb4af: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000bb00f: nop; bsr eax, eax; add eax, ecx; ret; 
0x000bb01f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0009a7f6: nop; cmp al, 3; add byte ptr [eax], al; ret; 
0x0009a816: nop; cmp byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x0008e5d6: nop; dec edi; stc; call dword ptr [eax - 0x18]; 
0x001251cf: nop; endbr32; call 0x17d63d; add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0008e81f: nop; endbr32; call 0x17d641; add eax, 0x1a260b; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x0003ceef: nop; endbr32; call 0x17d641; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x0002f46f: nop; endbr32; call 0x17d641; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x0002604f: nop; endbr32; call 0x17d641; add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x0009627f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009627f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008568f: nop; endbr32; mov eax, 0xffffffff; ret; 
0x00165d3f: nop; endbr32; mov eax, 2; ret; 
0x0008881f: nop; endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b98f: nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00171ccf: nop; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000818ef: nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000342cf: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013542f: nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008acaf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00147f0f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00086daf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1ef: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00097fdf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00118a7f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00080bbf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000e164f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00093b9f: nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0008ebdf: nop; endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0013543f: nop; endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00092a5f: nop; endbr32; nop; xor eax, eax; ret; 
0x00104dbf: nop; endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024c2f: nop; endbr32; ret; 
0x0008ac7f: nop; endbr32; xor eax, eax; ret; 
0x0003a70f: nop; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0012df80: nop; in al, dx; ret 0xffef; 
0x00033cf4: nop; inc eax; ret; 
0x0014c199: nop; inc esp; stc; call dword ptr [eax + 0x52]; 
0x0014fa63: nop; inc esp; stc; call dword ptr [eax - 0x18]; 
0x0014fa63: nop; inc esp; stc; call dword ptr [eax - 0x18]; ret; 
0x000bf256: nop; insb byte ptr es:[edi], dx; stosd dword ptr es:[edi], eax; stc; call dword ptr [edx - 0x73]; 
0x000889c5: nop; je 0x889ca; add byte ptr [eax], al; ret; 
0x0009a8a6: nop; je 0x9a8ac; add byte ptr [eax], al; ret; 
0x00088a05: nop; jl 0x88a0a; add byte ptr [eax], al; ret; 
0x00131d96: nop; jmp edx; 
0x00146770: nop; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x000889a5: nop; jo 0x889aa; add byte ptr [eax], al; ret; 
0x000889e5: nop; js 0x889ea; add byte ptr [eax], al; ret; 
0x0002755c: nop; lds edx, ptr [eax]; add byte ptr [ebp - 0x6813779], cl; call dword ptr [eax - 0x73]; 
0x0019e3bf: nop; lea eax, [ecx + 1]; ret; 
0x0003cf6f: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x1d0], eax; mov eax, ecx; ret; 
0x0019fbaf: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x000cd0af: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000cd09f: nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000df76f: nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000330ef: nop; lea edx, [ecx - 0x6c3a6]; mov eax, edx; pop ebx; ret; 
0x001789e5: nop; leave; stc; call dword ptr [edi + 0x56]; 
0x000328a6: nop; loope 0x328ba; add byte ptr [eax], al; lea eax, [eax + 0x11ac]; ret; 
0x000260f8: nop; mov al, 0x7e; stc; call dword ptr [edx - 0x73]; 
0x000b3aaf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000af38f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000aafaf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000af39f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000aafbf: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000a58bf: nop; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x0009aa44: nop; mov dword ptr [eax + 0x32c], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa74: nop; mov dword ptr [eax + 0x330], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aaa4: nop; mov dword ptr [eax + 0x334], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a814: nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7f4: nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0009aad4: nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x358], 1; ret; 
0x0009a8a4: nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0009ab04: nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x00094eaf: nop; mov dword ptr [eax + 4], edx; ret; 
0x000cd1ef: nop; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x000aceaf: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000b34ff: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000b350f: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0009a880: nop; mov dword ptr [edx + 0x370], eax; ret; 
0x00061aff: nop; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x00061b1f: nop; mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x00061a1f: nop; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x0017a90f: nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000e885f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000e885f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0008c83f: nop; mov eax, 0x16; pop ebx; ret; 
0x0008a77f: nop; mov eax, 0x16; ret; 
0x001219ff: nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x001219ff: nop; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000e886f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000e886f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x00102fcf: nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000d6f4f: nop; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x000f270f: nop; mov eax, 0x7e; pop ebx; ret; 
0x00080d7f: nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011f81f: nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00102caf: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003c18f: nop; mov eax, 0xad; int 0x80; 
0x000e78cf: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000e78cf: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000e78bf: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000e78bf: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000e78af: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e78af: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00089308: nop; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000f26ff: nop; mov eax, 0xfc17; pop ebx; ret; 
0x0010a76f: nop; mov eax, 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0013737f: nop; mov eax, 0xffffffff; ret; 
0x0019416f: nop; mov eax, 1; ja 0x194179; neg eax; pop ebp; ret; 
0x0019985f: nop; mov eax, 1; ja 0x199869; neg eax; pop ebp; ret; 
0x000d20df: nop; mov eax, 2; ret; 
0x0008e19f: nop; mov eax, 3; add esp, 0xc; ret; 
0x000d20ef: nop; mov eax, 3; ret; 
0x000d20ff: nop; mov eax, 4; ret; 
0x000d210f: nop; mov eax, 5; ret; 
0x000d211f: nop; mov eax, 6; ret; 
0x000d212f: nop; mov eax, 7; ret; 
0x0017d1be: nop; mov eax, dword ptr [eax]; ret; 
0x001026af: nop; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x1025e7; call eax; 
0x0016e3af: nop; mov eax, dword ptr [ebx + 0x108]; pop ebx; pop esi; pop edi; ret; 
0x000aafdf: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0017163f: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x001663af: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0003a56f: nop; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000944ef: nop; mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x94500; xor eax, eax; ret; 
0x0008a9af: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0009452f: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003bf3a: nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0005817f: nop; mov eax, edx; call 0x57f20; mov eax, 1; add esp, 0xc; ret; 
0x00073b8f: nop; mov eax, edx; call 0x738f0; mov eax, 1; add esp, 0xc; ret; 
0x00024cdf: nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x0019ea0f: nop; mov eax, edx; ret; 
0x0010400f: nop; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0013622f: nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00117f6f: nop; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0014c75f: nop; mov ecx, 1; mov eax, ecx; ret; 
0x000b6e2f: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010b36f: nop; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0017d1de: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000df69f: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x001267df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012698f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00121a1f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00126e5f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e246f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010b01f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00119a2f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0011771f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00119bff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123b2f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001239bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001266cf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001219af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00126ccf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00104e1f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001268ff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000e882f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b46f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012550f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000e88df: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011ec8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010295f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010ac1f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x00125b8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00124e5f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x00115f2f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126d5f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00126dcf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126dff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e2f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012689f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b2f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x00126c2f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c38f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00102e1f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0011f83f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x001214ff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010be0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011ec5f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00102c4f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010292f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012671f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012674f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000e78df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00126b8f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120eff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e64f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abbf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000be555: nop; mov esp, 0x8dffea10; or ah, 3; ljmp 0xf04:0x7b41f6ff; inc esp; ret 0x66c3; 
0x000b34ef: nop; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0008f9b5: nop; mov word ptr [edx], es; add byte ptr [eax], al; ret; 
0x0016d5b3: nop; mov word ptr [esi - 0xd], gs; call dword ptr [edx - 0x73]; 
0x0016da19: nop; mov word ptr [esi - 0xd], gs; call dword ptr [edx - 0x75]; 
0x000af4ef: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000acedf: nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000acecf: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000af3ff: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x001a028f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0005060e: nop; nop; add eax, dword ptr [esp]; ret; 
0x0009627d: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009627d: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00165d3d: nop; nop; endbr32; mov eax, 2; ret; 
0x0003b98d: nop; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000818ed: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0013542d: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000e164e: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00093b9d: nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0013543e: nop; nop; endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00092a5e: nop; nop; endbr32; nop; xor eax, eax; ret; 
0x00024c2e: nop; nop; endbr32; ret; 
0x0008ac7d: nop; nop; endbr32; xor eax, eax; ret; 
0x000e885e: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000e885e: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x001219fd: nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000e886e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000e886e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x0011f81d: nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00102cad: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003c18d: nop; nop; mov eax, 0xad; int 0x80; 
0x000e78ce: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000e78ce: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000e78be: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000e78be: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000e78ad: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000e78ad: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0009452d: nop; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x001267dd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012698d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00121a1d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00126e5d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e246d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010b01e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00119a2d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0011771e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00119bfd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00123b2d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001266cd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001219ad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00126ccd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00104e1e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x001268fd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000e882e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0012550e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000e88dd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011ec8d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010295d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010ac1e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x00125b8e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b6e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0005060c: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x00165d3b: nop; nop; nop; endbr32; mov eax, 2; ret; 
0x00093b9b: nop; nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00024c2c: nop; nop; nop; endbr32; ret; 
0x0008ac7b: nop; nop; nop; endbr32; xor eax, eax; ret; 
0x001219fb: nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0011f81b: nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00102cab: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00024c2a: nop; nop; nop; nop; endbr32; ret; 
0x001219f9: nop; nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x0011f819: nop; nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00102ca9: nop; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009ac60: nop; or al, 0xa8; stc; call dword ptr [edx - 0x73]; 
0x00103977: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010394f: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008a86f: nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0003c197: nop; pop eax; mov eax, 0x77; int 0x80; 
0x00093edf: nop; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0019cd6f: nop; pop ebx; mov eax, 1; ja 0x19cd7a; neg eax; ret; 
0x00170fef: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0019d5cf: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x000422af: nop; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019b36f: nop; pop ebx; xor eax, eax; ret; 
0x0018858a: nop; pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019984f: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x00104a4c: nop; push cs; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0018e50a: nop; push es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00024b63: nop; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x000bf93f: nop; ret 0x4b8b; 
0x000a1334: nop; ret 0xdb31; 
0x000341f8: nop; ret; 
0x001549a9: nop; rol byte ptr [eax], 0; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x00024baf: nop; sbb al, 1; add byte ptr [eax], al; test edx, edx; je 0x24bb9; ret; 
0x0018cc8a: nop; sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009ac7b: nop; stc; jmp dword ptr [esi - 0x70]; 
0x0009aa46: nop; sub al, 3; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0019ef8f: nop; sub edi, 3; jb 0x19f030; lea eax, [eax + 2]; pop edi; ret; 
0x0019ef9f: nop; sub edi, 5; jb 0x19f030; lea eax, [eax + 4]; pop edi; ret; 
0x0019efaf: nop; sub edi, 6; jb 0x19f030; lea eax, [eax + 5]; pop edi; ret; 
0x0019df6f: nop; sub edx, 3; jb 0x19e010; lea eax, [edi + 2]; pop edi; ret; 
0x0019df7f: nop; sub edx, 5; jb 0x19e010; lea eax, [edi + 4]; pop edi; ret; 
0x0019df8f: nop; sub edx, 6; jb 0x19e010; lea eax, [edi + 5]; pop edi; ret; 
0x000e1b2f: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x0016d34f: nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0019fc3f: nop; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0008f9d5: nop; test byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000ba1bd: nop; xor al, 0xc; add byte ptr [ecx + 0x105eb3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009aaa6: nop; xor al, 3; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0009aa76: nop; xor byte ptr [ebx], al; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x00024c13: nop; xor byte ptr [edx], bl; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00024b73: nop; xor byte ptr [edx], bl; add byte ptr [eax], al; ret; 
0x0008ba3f: nop; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009c26f: nop; xor eax, eax; add esp, 0xc; ret; 
0x00091d95: nop; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008b571: nop; xor eax, eax; pop ebx; pop edi; ret; 
0x0008f6f0: nop; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000f310f: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x00131cbf: nop; xor eax, eax; pop ebx; ret; 
0x0004150f: nop; xor eax, eax; ret; 
0x000a56ff: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000420ef: nop; xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x00146c26: not al; out dx, al; dec dword ptr [ebp - 0x6407f7d]; call dword ptr [eax + 0x68]; 
0x00089400: not byte ptr [ebx - 0x75]; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000922e1: not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00128bf8: not byte ptr [ebx - 0x77]; test dword ptr [ebx - 0x44ebdbb4], 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0018d823: not dword ptr [eax]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003a500: not eax; and eax, ecx; ret; 
0x0003ab92: not eax; and eax, edx; ret; 
0x0004215f: not eax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0008e857: not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000422ee: not eax; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000423a0: not eax; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0003a87d: not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0017217c: not eax; shr eax, 0x1f; ret; 
0x0004230f: not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000df660: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008f1cf: not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0004262a: not edx; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0016b8fa: notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000bc89a: notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0019df3f: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00057782: or ah, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x00184ae7: or ah, 0x8b; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000c20ed: or ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x0015d247: or ah, 0xd5; bnd call dword ptr [eax - 1]; 
0x000bc8d7: or ah, 1; add byte ptr [eax], al; ret; 
0x000be55b: or ah, 3; ljmp 0xf04:0x7b41f6ff; inc esp; ret 0x66c3; 
0x001876a8: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000bbd24: or ah, bh; pop edi; ret; 
0x0011d36e: or ah, byte ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x0009f998: or al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ecx; push ebx; stc; call dword ptr [eax - 0x18]; 
0x001513c2: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00163ec9: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x000a36a3: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000c9f63: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0010ac27: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e23d7: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cd46: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0013789f: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00119bb0: or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x001656ea: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x0019f137: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x00089f4d: or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000f2c25: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf2c48; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0011d451: or al, 0; add byte ptr [ebp - 0x69dec7d], cl; call dword ptr [ecx + 0x51]; 
0x0019845e: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006568a: or al, 0; add byte ptr [ebx - 0x5af43], cl; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x0004ce36: or al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; ret; 
0x0004629e: or al, 0; add byte ptr [ebx - 0x7cefdb84], cl; ret; 
0x000ba70f: or al, 0; add ecx, 0x105963; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba204: or al, 0; add ecx, 0x105e6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1df: or al, 0; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1bf: or al, 0; add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1a2: or al, 0; add ecx, 0x105ed0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba103: or al, 0; add ecx, 0x105eef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba175: or al, 0; add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba0e5: or al, 0; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba15e: or al, 0; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba143: or al, 0; add ecx, 0x105f2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba0c0: or al, 0; add ecx, 0x105f32; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba121: or al, 0; add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba096: or al, 0; add ecx, 0x105f5c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba07d: or al, 0; add ecx, 0x105f75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba05c: or al, 0; add ecx, 0x105f96; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba038: or al, 0; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba01a: or al, 0; add ecx, 0x105fd8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f97: or al, 0; add ecx, 0x10605b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6de5: or al, 0; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6dc0: or al, 0; add ecx, 0x1091b2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d96: or al, 0; add ecx, 0x1091dc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d7d: or al, 0; add ecx, 0x1091f5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d5c: or al, 0; add ecx, 0x109216; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d38: or al, 0; add ecx, 0x10923a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d1a: or al, 0; add ecx, 0x109258; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6cfe: or al, 0; add ecx, 0x109274; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4e6f: or al, 0; add ecx, 0x10b02f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d8a: or al, 0; add ecx, 0x10b1a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d77: or al, 0; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d5b: or al, 0; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4264: or al, 0; add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b423f: or al, 0; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b421f: or al, 0; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4202: or al, 0; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4163: or al, 0; add ecx, 0x10bcbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b41d5: or al, 0; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41be: or al, 0; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41a3: or al, 0; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4181: or al, 0; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b408f: or al, 0; add ecx, 0x10bd8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b406f: or al, 0; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b404a: or al, 0; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b376f: or al, 0; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b368a: or al, 0; add ecx, 0x10c744; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3677: or al, 0; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b365b: or al, 0; add ecx, 0x10c773; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2c24: or al, 0; add ecx, 0x10d11a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bff: or al, 0; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bdf: or al, 0; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bc2: or al, 0; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b23: or al, 0; add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2b95: or al, 0; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b7e: or al, 0; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b63: or al, 0; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b41: or al, 0; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2a5f: or al, 0; add ecx, 0x10d25f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a3f: or al, 0; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a1a: or al, 0; add ecx, 0x10d2a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00147850: or al, 0; je 0x14785e; add dword ptr [eax + 8], 1; je 0x14787d; add esp, 0xc; ret; 
0x0011c05e: or al, 0x10; add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0016e1a1: or al, 0x10; ret; 
0x000bf4cc: or al, 0x11; ljmp 0xf04:0x7b41f6ff; inc esp; ret 0x66c3; 
0x001537b8: or al, 0x16; bnd call dword ptr [eax - 0x73]; 
0x000a5e68: or al, 0x1b; idiv bh; and ch, 2; lea edx, [edx - 0x187944]; cmove eax, edx; ret; 
0x0012554e: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00138ad1: or al, 0x1c; add byte ptr [eax], al; add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x00165f89: or al, 0x24; add byte ptr [ecx + 0x28cec], al; add al, ch; mov byte ptr [0x81000176], al; ret; 
0x00099baf: or al, 0x24; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00099bf7: or al, 0x24; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0017d652: or al, 0x24; ret; 
0x000d46a3: or al, 0x29; ret 0x428d; 
0x0007bc5b: or al, 0x29; ret 0x5489; 
0x000f5b33: or al, 0x29; ret 0x5689; 
0x000be47c: or al, 0x29; ret; 
0x00136751: or al, 0x2a; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a1cb8: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x00103bf9: or al, 0x30; in eax, dx; call dword ptr [ebp + 0x6a]; 
0x0011e972: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x00138eb1: or al, 0x31; call dword ptr [ebp + 1]; 
0x0008257c: or al, 0x31; call dword ptr [ebx - 0x18]; 
0x000e1750: or al, 0x31; call dword ptr [esi - 0x18]; 
0x00131d34: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010d36b: or al, 0x31; jmp dword ptr [esi - 0x7d]; 
0x000270ba: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0004009b: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00092406: or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00092b9d: or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x00080b5a: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x000a4922: or al, 0x31; rol byte ptr [ecx], cl; ret; 
0x0007b474: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000ba141: or al, 0x35; or al, 0; add ecx, 0x105f2f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011b7a4: or al, 0x39; fmul dword ptr [edi]; dec edi; ret; 
0x0019a4d5: or al, 0x39; fnstcw word ptr [eax]; jne 0x19a4f0; pop ebx; ret; 
0x001448fa: or al, 0x39; inc ebx; or al, 0x75; ret; 
0x0004242e: or al, 0x39; rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x000a3cf2: or al, 0x39; ret 0x2b73; 
0x0017b6e3: or al, 0x39; ret 0x4074; 
0x000e1451: or al, 0x39; ret 0x470f; 
0x00057088: or al, 0x39; ret 0x820f; 
0x0012c72b: or al, 0x39; ret 0x830f; 
0x000a494d: or al, 0x39; ret 0x840f; 
0x0002d87f: or al, 0x39; ret 0x850f; 
0x00160eba: or al, 0x39; ret 0xc289; 
0x0002bd92: or al, 0x39; ret; 
0x00093dd3: or al, 0x3b; add byte ptr [eax], al; push eax; call 0x8a290; add esp, 0x1c; ret; 
0x0009df14: or al, 0x3d; jmp ptr [edi - 0x78f10000]; ret; 
0x0015850e: or al, 0x50; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x0002818b: or al, 0x50; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a0cbc: or al, 0x50; call edx; 
0x0014f55c: or al, 0x50; mov dword ptr [esp + 0x10], eax; call 0x17ab80; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00157bd5: or al, 0x50; mov dword ptr [esp + 0x2c], eax; call 0x17ab80; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0012d858: or al, 0x50; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0012e394: or al, 0x50; push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012d578: or al, 0x50; push ebx; push 0x2000001; call dword ptr [edi + 0x14]; 
0x0012f556: or al, 0x50; push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e177: or al, 0x50; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0012fcdd: or al, 0x50; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00026239: or al, 0x51; call 0x17ab80; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268d3: or al, 0x52; call 0x17ab80; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x001714a1: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x00171469: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad6: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00170a89: or al, 0x52; push ebx; call dword ptr [eax]; 
0x000df8b8: or al, 0x52; push ebx; call eax; 
0x00170e1e: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x0014f6dd: or al, 0x53; call 0x17ab80; add esp, 0x10; mov eax, ebx; call eax; 
0x0002f424: or al, 0x53; call 0x17ab80; mov dword ptr [esp], esi; call ebx; 
0x00164ac5: or al, 0x53; call dword ptr [eax + 0x10]; 
0x0017ec28: or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x000825b0: or al, 0x53; call dword ptr [edi + 0x44]; 
0x0007b125: or al, 0x53; call dword ptr [esi + 0x10]; 
0x00081a29: or al, 0x53; call dword ptr [esi + 0x30]; 
0x0005bf61: or al, 0x53; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00164f13: or al, 0x55; call 0x10acc0; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0016c00a: or al, 0x55; call dword ptr [eax + 0x10]; 
0x00166030: or al, 0x55; call dword ptr [esi]; 
0x0016c021: or al, 0x55; call eax; 
0x0016ae44: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00025f36: or al, 0x56; call 0x17ab80; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000260c6: or al, 0x56; call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x000326a9: or al, 0x56; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00164048: or al, 0x56; call dword ptr [eax + 0x10]; 
0x000805ee: or al, 0x56; call dword ptr [eax + 0x30]; 
0x000859b1: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00078b1b: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x00075d5d: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x00078ac2: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0017f14c: or al, 0x56; call dword ptr [ebx + 0x44]; 
0x0008562b: or al, 0x56; call dword ptr [edi + 0x34]; 
0x0017f291: or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a0bda: or al, 0x56; call eax; 
0x001245a4: or al, 0x56; call edx; 
0x001245a4: or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016aaae: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016368a: or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0005865f: or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x00131def: or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00158675: or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x00027039: or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x00166061: or al, 0x57; call dword ptr [eax + 0x10]; 
0x0016601e: or al, 0x57; call dword ptr [eax + 8]; 
0x00164f8d: or al, 0x57; call eax; 
0x00164f6a: or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00081ebd: or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x000a5da8: or al, 0x5a; idiv bh; and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000878af: or al, 0x5b; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0009a05d: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0014d001: or al, 0x5b; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0007b1ae: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x000a13c2: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x000360cc: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000976cc: or al, 0x5b; pop esi; pop edi; ret; 
0x000ba225: or al, 0x5b; pop esi; ret; 
0x000896af: or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x00085009: or al, 0x5b; ret; 
0x0003a878: or al, 0x5b; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0012451b: or al, 0x5b; setg al; pop esi; pop edi; ret; 
0x0011cd83: or al, 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00170fe2: or al, 0x5e; pop edi; jmp eax; 
0x0018ede0: or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d55a: or al, 0x5f; call 0x17d639; add ebx, 0x413b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b48a: or al, 0x5f; call 0x17d639; add ebx, 0x43207; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018948a: or al, 0x5f; call 0x17d639; add ebx, 0x44f87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b1030: or al, 0x5f; pop ebx; ret; 
0x000b4910: or al, 0x5f; pop esi; pop ebx; ret; 
0x000af344: or al, 0x5f; ret; 
0x0015d9e0: or al, 0x61; std; jmp dword ptr [esi - 0x70]; 
0x0012506c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x125080; pop ebx; ret; 
0x001252ec: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x125300; pop ebx; ret; 
0x0012666c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x126680; pop ebx; ret; 
0x000893da: or al, 0x65; call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0008884e: or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x0008fa9d: or al, 0x65; mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0014c5e8: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016f0b5: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f104: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x0003af74: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd27: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003e75a: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e87d: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0002554b: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x00118f54: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b5f4: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11b602; add esp, 0x1c; ret; 
0x0011cce5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00123809: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x00127621: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x0012799c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286ac: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287c5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128831: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x0013e99b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9f7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea46: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x13ea54; add esp, 0x1c; ret; 
0x00140ee2: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x0016a26b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4c0: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d9da: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da53: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x001708cf: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709bf: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c76: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d06: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170db5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e3a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ecc: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x00171706: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x00171796: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x00171826: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718b6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171fae: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x0017200e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x00172077: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x00172127: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177103: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00178c8f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d07: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017d26f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800d5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185d81: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x0003fa5d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc7a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff4a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffcd: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f29: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000577f4: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x0009697d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x000bf52a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d2dba: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd14e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df48e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000e788d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe78a7; add esp, 0x1c; ret; 
0x0004b3f3: or al, 0x66; cmp eax, 0x840f0800; ret 2; 
0x0015ec90: or al, 0x67; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xede9; 
0x001138ce: or al, 0x6a; adc al, ch; ret 0xf0f8; 
0x000a0922: or al, 0x6a; add eax, 0x53e5838d; stc; call dword ptr [eax - 0x73]; 
0x00082e1e: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017effa: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0017eed8: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0013ae73: or al, 0x75; ret 0x458b; 
0x001448fd: or al, 0x75; ret; 
0x0002879e: or al, 0x7b; stc; call dword ptr [eax + 0x68]; 
0x000286ec: or al, 0x7b; stc; call dword ptr [eax - 0x73]; 
0x0014068e: or al, 0x7f; ret; 
0x00027ef1: or al, 0x7f; stc; jmp dword ptr [esi - 0x77]; 
0x00089409: or al, 0x80; int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0002aa1d: or al, 0x80; stc; call dword ptr [eax - 0x18]; 
0x001a2f4f: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x000821e5: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001a0943: or al, 0x81; les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x0002b681: or al, 0x81; stc; call dword ptr [eax - 0x73]; 
0x00057733: or al, 0x83; call 0x448003b; ret; 
0x0007d119: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x00080e5d: or al, 0x83; in al, dx; or al, 0x83; ret; 
0x0015b6ae: or al, 0x83; in al, dx; or byte ptr [eax - 0x73], dl; xchg cl, bh; jo 0x15b6b1; call dword ptr [ecx - 1]; 
0x00167f10: or al, 0x83; in al, dx; or byte ptr [ebp - 0x68d057d], cl; call dword ptr [eax - 1]; 
0x0017109e: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00152f1b: or al, 0x83; inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0014d3b4: or al, 0x83; int1; call dword ptr [eax - 0x73]; 
0x000ff9bb: or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x0007e7a3: or al, 0x83; jmp 0x45270ab; pop ebx; pop esi; pop edi; ret; 
0x000bd3a4: or al, 0x83; jmp 0x891b5bcb; rol dword ptr [ebx + 0xb813fe2], 1; add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x00080012: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016669d: or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0017a122: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0011b98e: or al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000571d7: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0005d949: or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0003b97d: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00029ddc: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00096c7d: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003c0bb: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003b1b0: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000c9f9e: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007b1ab: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0007b303: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002ad1a: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00057247: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00163a93: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0003f8d1: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0013d384: or al, 0x83; les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x0003c486: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00056a4b: or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x0003fc29: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x001511ed: or al, 0x83; mov byte ptr [ecx], 0xeb; ret; 
0x000ba873: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x000bfcda: or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000bae23: or al, 0x83; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000d6929: or al, 0x83; ret 0x3909; 
0x00035f0d: or al, 0x83; ret 0x5201; 
0x00169976: or al, 0x83; ret 0x5208; 
0x0002ea5d: or al, 0x83; ret 0x8301; 
0x0009b045: or al, 0x83; ret 0x8901; 
0x000e8553: or al, 0x83; ret 0x8902; 
0x00026acd: or al, 0x83; ret; 
0x00088623: or al, 0x83; retf 0xa801; add ecx, dword ptr [ecx + 0xf182474]; inc esp; ret 0x978b; 
0x000fceab: or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x001379bf: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00137a64: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x00132fea: or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x00124574: or al, 0x85; ror byte ptr [edi], cl; test bl, ah; or al, dh; call dword ptr [ebx + 0x56]; 
0x0011ad5a: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6a6076a], cl; call dword ptr [edx - 0x77]; 
0x0011ad79: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6a6046a], cl; call dword ptr [edx - 0x77]; 
0x001231bf: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x1231d0; ret; 
0x00060b7a: or al, 0x86; jmp ecx; 
0x0015c41b: or al, 0x88; int1; call dword ptr [eax - 0x73]; 
0x0003e710: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000763e6: or al, 0x89; call 0x5d66c248; ret; 
0x000bf3f6: or al, 0x89; call 0x5d6b5258; ret; 
0x0010bba2: or al, 0x89; call 0x5d701a04; ret; 
0x0011e769: or al, 0x89; call 0x5d7145cb; ret; 
0x0013780f: or al, 0x89; call 0x5d72d671; ret; 
0x00146d5b: or al, 0x89; call 0x5d73cbbd; ret; 
0x0017da12: or al, 0x89; call 0x5d773874; ret; 
0x0008aa08: or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003f831: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00096d02: or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x000278e6: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x20af737d]; call dword ptr [eax - 0x73]; 
0x0003bd93: or al, 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0012c829: or al, 0x89; inc edi; adc al, 0x29; ret 0x478b; 
0x0005814d: or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x00086ad4: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00127727: or al, 0x89; inc esp; and al, 0x34; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010b7d6: or al, 0x89; inc esp; and al, 0x38; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008ef76: or al, 0x89; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000fcea7: or al, 0x89; je 0xfce6d; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00064bde: or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59f6b]; call dword ptr [esi - 0x18]; 
0x0006509e: or al, 0x89; lea ebp, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x000eb1c6: or al, 0x89; lea esi, [ebx + edi*8 - 1]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x0013674f: or al, 0x89; or al, 0x2a; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009cb13: or al, 0x89; pop edi; or al, 0x89; ret; 
0x000976c9: or al, 0x89; push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x00035374: or al, 0x89; push ebp; mov esp, 0x3dbd808d; stc; call dword ptr [eax - 0x18]; 
0x0012cf9d: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00084ef3: or al, 0x89; push esi; and al, 1; ret 0x5689; 
0x0008a82e: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0012bb0b: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00175c6c: or al, 0x89; ret 0x25; 
0x00176ce6: or al, 0x89; ret 0x408d; 
0x0012740c: or al, 0x89; ret 0x448b; 
0x0007da6a: or al, 0x89; ret 0x48d; 
0x001a2cb3: or al, 0x89; ret 0x6c89; 
0x00086a23: or al, 0x89; ret 0x8b; 
0x0006592a: or al, 0x89; ret 0xc031; 
0x0008e3fe: or al, 0x89; ret 0xc889; 
0x000939e3: or al, 0x89; ret 0xca81; 
0x000954c2: or al, 0x89; ret 0xca83; 
0x000d83b6: or al, 0x89; ret 0xe083; 
0x0008f6a8: or al, 0x89; ret 0xe281; 
0x0009001c: or al, 0x89; ret 0xe283; 
0x0008771a: or al, 0x89; ret 0xe989; 
0x000a30ee: or al, 0x89; ret 0xf089; 
0x0002c2f0: or al, 0x89; ret 0xfa29; 
0x0003a767: or al, 0x89; ret 0xff25; 
0x0002b451: or al, 0x89; ret; 
0x00092642: or al, 0x89; sal dh, 1; ret 0x7501; 
0x00059617: or al, 0x89; sal dh, 1; ret 0xf40; 
0x0002dde7: or al, 0x89; sbb byte ptr [ebx + 0x1442444], cl; add ecx, ebp; ret; 
0x00180ac0: or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret 0xf6a7; 
0x000eda1f: or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret; 
0x000ee0d7: or al, 0x89; test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x0012ff7c: or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [edi - 0x18]; 
0x0003242b: or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x00094e9b: or al, 0x8b; adc cl, byte ptr [ebx + 0x144a3908]; je 0x94eb0; ret; 
0x00129ceb: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a0a81: or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x001469e5: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x00170a4a: or al, 0x8b; add eax, dword ptr [ebp + 0x316f74c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0014c49b: or al, 0x8b; cmp dword ptr [edi + ebx*4], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00164192: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00131dec: or al, 0x8b; inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e1b32: or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x0016c5ae: or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0016f9cb: or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001645d5: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016a50d: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000bf934: or al, 0x8b; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x0016e0af: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00166017: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x0003a785: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00040590: or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0017add3: or al, 0x8b; inc esp; and al, 0x18; call eax; 
0x00103971: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008a45a: or al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00107e12: or al, 0x8b; je 0x107e3a; sbb byte ptr [esi - 0x18], dl; ret; 
0x00092860: or al, 0x8b; je 0x92888; or byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000931ee: or al, 0x8b; je 0x93216; or byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000998de: or al, 0x8b; je 0x99906; add al, 0xb8; sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f943c: or al, 0x8b; je 0xf9464; add al, 0x83; ret; 
0x000e1f87: or al, 0x8b; jge 0xe1f5f; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x000e21c7: or al, 0x8b; jge 0xe219f; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x0010851a: or al, 0x8b; jl 0x108542; or al, 0x39; ret; 
0x001743a1: or al, 0x8b; jl 0x1743c9; adc byte ptr [ebp - 0x6949b79], cl; call dword ptr [eax - 0x18]; 
0x001a8472: or al, 0x8b; jl 0x1a849a; and al, 0x29; ror byte ptr [ebx - 0x76cbdb8c], 1; ret 0x448b; 
0x000e0675: or al, 0x8b; jl 0xe069d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x00096012: or al, 0x8b; jo 0x96022; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0005da08: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00126e98: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126968: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115858: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117798: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117268: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b098: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b08: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126878: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad88: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b68: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119978: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b08: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126788: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c88: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e48: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115298: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8888: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac98: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e908: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e628: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab98: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0016433b: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00036b63: or al, 0x8b; push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x00093bbc: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000404d3: or al, 0x8b; push esp; and al, 0x14; call edx; 
0x0011f8da: or al, 0x8b; push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012020a: or al, 0x8b; push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00165b73: or al, 0x8b; test byte ptr [ebx - 0x118], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0007645c: or al, 0x8b; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0004f7e6: or al, 0x8c; clc; dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x00074091: or al, 0x8d; adc byte ptr [eax], 0x8e; stc; call dword ptr [eax - 0x73]; 
0x0008cf30: or al, 0x8d; adc byte ptr [ebx + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000e3b42: or al, 0x8d; adc dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x00115bbe: or al, 0x8d; adc esp, -0x4f; stc; call dword ptr [eax - 0x18]; 
0x0008e221: or al, 0x8d; adc esp, -0x6d; stc; call dword ptr [eax - 0x18]; 
0x0008e221: or al, 0x8d; adc esp, -0x6d; stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x00058543: or al, 0x8d; add byte ptr [ecx + ecx*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0016b57a: or al, 0x8d; add dword ptr [edx], 0x59; stc; call dword ptr [edi + 0x56]; 
0x0014c81a: or al, 0x8d; and ah, 0xc1; stc; call dword ptr [eax - 0x73]; 
0x000d7382: or al, 0x8d; and bh, 0x38; stc; call dword ptr [eax + 0x53]; 
0x000ea778: or al, 0x8d; and byte ptr [eax], 0x57; stc; call dword ptr [eax - 0x18]; 
0x000300de: or al, 0x8d; and byte ptr [ebx], 0x3b; stc; call dword ptr [eax + 0x56]; 
0x000658ad: or al, 0x8d; and dword ptr [ebp + 0x42], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00073eba: or al, 0x8d; cmp al, 0x8d; stc; call dword ptr [eax - 0x73]; 
0x0011b9cf: or al, 0x8d; cmp al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x0011bde9: or al, 0x8d; cmp byte ptr [eax], 0xb1; stc; call dword ptr [eax - 0x73]; 
0x0017cdcf: or al, 0x8d; cmp byte ptr [ecx], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00109577: or al, 0x8d; cmp byte ptr [edi], 0x59; stc; call dword ptr [eax - 0x18]; 
0x00140d12: or al, 0x8d; cmp dword ptr [eax + 0x6a], -7; call dword ptr [eax - 0x18]; 
0x000398d7: or al, 0x8d; cmp dword ptr [edx], 0x3b; stc; call dword ptr [eax - 0x18]; 
0x000aca12: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000e374a: or al, 0x8d; inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e3633: or al, 0x8d; inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014c0f2: or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x0018027d: or al, 0x8d; inc ebx; movmskps ebp, xmm0; pop ecx; ret; 
0x0009ba0c: or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x00160de4: or al, 0x8d; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x0009c215: or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x0016926b: or al, 0x8d; je 0x169295; add byte ptr [ecx], ch; ret; 
0x0014676e: or al, 0x8d; nop; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x0009ac5e: or al, 0x8d; nop; or al, 0xa8; stc; call dword ptr [edx - 0x73]; 
0x00073d81: or al, 0x8d; or al, 0x8d; stc; call dword ptr [eax - 0x73]; 
0x000398ff: or al, 0x8d; or dword ptr [edi + 0x3e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00115c0e: or al, 0x8d; or dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00058f29: or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00141617: or al, 0x8d; popfd; add byte ptr [ebx - 7], ch; call dword ptr [ebx - 0x18]; 
0x001415c7: or al, 0x8d; popfd; fldcw word ptr [edx - 7]; call dword ptr [ebx - 0x18]; 
0x000de42a: or al, 0x8d; push 0x24448bff; add al, 0x29; ret; 
0x0016b89c: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x00117406: or al, 0x8d; push ecx; call dword ptr [edx + 0x53]; 
0x00171465: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad2: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x001475db: or al, 0x8d; sbb byte ptr [eax], 0xbf; stc; call dword ptr [eax - 0x73]; 
0x00030107: or al, 0x8d; sbb byte ptr [ecx], 0x3b; stc; call dword ptr [eax + 0x56]; 
0x00139efa: or al, 0x8d; sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x56]; 
0x000359b9: or al, 0x8d; sbb cl, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00146524: or al, 0x8d; sbb dword ptr [eax], -0x42; stc; call dword ptr [eax - 0x73]; 
0x001059b2: or al, 0x8d; sbb dword ptr [edx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x0003e63a: or al, 0x8d; sbb esp, -0x7c; stc; call dword ptr [eax - 0x18]; 
0x00073d83: or al, 0x8d; stc; call dword ptr [eax - 0x73]; 
0x00030127: or al, 0x8d; sub byte ptr [ebx], 0x3b; stc; call dword ptr [eax + 0x56]; 
0x0014768e: or al, 0x8d; sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax + 0x68]; 
0x001474f2: or al, 0x8d; sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0007e57f: or al, 0x8d; sub dword ptr [eax - 4], -1; call dword ptr [eax - 0x73]; 
0x001021c1: or al, 0x8d; sub dword ptr [edi + 0x50fff957], -0x18; ret 0xf7ec; 
0x000d580e: or al, 0x8d; sub dword ptr [edi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x000829a3: or al, 0x8d; sub dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x75]; 
0x000e30e2: or al, 0x8d; sub ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00152940: or al, 0x8d; sub esp, 4; bnd call dword ptr [eax + 0x6a]; 
0x00154a3b: or al, 0x8d; test byte ptr [esp + ebx*2], ah; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; aaa; ret; 
0x0002517f: or al, 0x8d; test dword ptr [eax], esp; jle 0x2517e; call dword ptr [eax - 0x18]; 
0x00122192: or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x00027f72: or al, 0x8d; test eax, edi; cmp cl, bh; call dword ptr [edi - 1]; 
0x0015ee98: or al, 0x8d; test ecx, esp; jno 0x15ee97; call dword ptr [eax - 0x18]; 
0x0005def9: or al, 0x8d; test edx, edi; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x00121d25: or al, 0x8d; xchg byte ptr [eax + edi*8 - 1], cl; dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x000bf9b7: or al, 0x8d; xchg byte ptr [eax - 0x55], bh; stc; call dword ptr [eax - 0x18]; 
0x0002508b: or al, 0x8d; xchg byte ptr [eax], ah; jle 0x2508a; call dword ptr [eax - 0x18]; 
0x000251cb: or al, 0x8d; xchg byte ptr [eax], ah; jle 0x251ca; call dword ptr [eax - 0x18]; 
0x0010ae04: or al, 0x8d; xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0009b7e0: or al, 0x8d; xchg byte ptr [edx + ebx*4 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x00115e68: or al, 0x8d; xchg byte ptr [edx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x0009b762: or al, 0x8d; xchg byte ptr [esp + ebx*4 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x0005f253: or al, 0x8d; xchg byte ptr [esp + ecx*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x00098160: or al, 0x8d; xchg dword ptr [eax + ebx*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x0006d3ee: or al, 0x8d; xchg dword ptr [eax - 0x74], edx; stc; call dword ptr [eax - 0x18]; 
0x00173bb2: or al, 0x8d; xchg dword ptr [ebx + ebp*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x00030772: or al, 0x8d; xchg dword ptr [ebx], esi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x000e3602: or al, 0x8d; xchg dword ptr [edx + 0x56], edx; stc; call dword ptr [eax - 0x18]; 
0x000307d4: or al, 0x8d; xchg dword ptr [edx], edi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00080e1c: or al, 0x8d; xchg dword ptr [esi + ecx*2 - 7], ebx; call dword ptr [eax + 0x56]; 
0x0011db43: or al, 0x8d; xchg ebx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x001580e9: or al, 0x8d; xchg ebx, eax; or al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x00153826: or al, 0x8d; xchg edi, eax; sbb al, 5; bnd call dword ptr [edx + 0x6a]; 
0x0008184f: or al, 0x8d; xor dword ptr [edx + edx*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00131d95: or al, 0x90; jmp edx; 
0x0003bf39: or al, 0x90; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000b2a23: or al, 0x91; jmp ecx; 
0x0007e046: or al, 0x92; stc; call dword ptr [eax - 0x73]; 
0x000b2b4a: or al, 0x99; jmp ecx; 
0x000ba718: or al, 0x99; jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0012aebc: or al, 0x9e; out dx, eax; call dword ptr [eax + 0x6a]; 
0x001580ec: or al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x0016438f: or al, 0xa6; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0019f963: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x0009ac61: or al, 0xa8; stc; call dword ptr [edx - 0x73]; 
0x000e58cb: or al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x0003374a: or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x7f4]; test eax, eax; je 0x33759; call eax; 
0x00115c11: or al, 0xb2; stc; call dword ptr [eax - 0x18]; 
0x0011912d: or al, 0xb4; jg 0x119130; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00123648: or al, 0xb4; stc; call dword ptr [eax - 0x18]; 
0x0019b69f: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x19b6b0; pop ebx; ret; 
0x0017193f: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x0016b919: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00105717: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x000f2cd3: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011cc41: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126811: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125340: or al, 0xb8; js 0x125345; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124fce: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012524e: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00093952: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009292e: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001155fe: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000df674: or al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011e5d1: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ab71: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001265ce: or al, 0xb8; ret; 
0x00126bd1: or al, 0xb8; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116ae1: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d15a: or al, 0xb; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0008c5cb: or al, 0xba; add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014128e: or al, 0xbd; stc; call dword ptr [eax - 0x73]; 
0x00103c7c: or al, 0xbe; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007d5f2: or al, 0xc1; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x0003efff: or al, 0xc1; jmp 0xfd67508; xchg ebp, eax; ret 0xca21; 
0x0005ddd4: or al, 0xc2; push eax; push dword ptr [esp + 0x1c]; call 0x115980; add esp, 0x1c; ret; 
0x001434ea: or al, 0xc6; inc esp; and al, 0x3b; add byte ptr [ecx - 0x76d3db94], cl; int 0x80; 
0x0016e7c2: or al, 0xc7; inc ecx; adc byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x001a66cf: or al, 0xd1; call 0x891f2959; ret; 
0x0012bca1: or al, 0xd3; ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x00056710: or al, 0xd6; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0003ac48: or al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003ac87: or al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003aaaa: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00030e78: or al, 0xe8; mov ebx, 0x810014c7; ret; 
0x00172173: or al, 0xe8; pop es; into; lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0005af68: or al, 0xe8; ret 0x1499; 
0x00133f63: or al, 0xe9; cmpsd dword ptr [esi], dword ptr es:[edi]; loope 0x133f5a; jmp dword ptr [esi - 0x70]; 
0x0013b37b: or al, 0xe9; das; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00133fc3: or al, 0xe9; ja 0x133f87; hlt; jmp dword ptr [esi - 0x70]; 
0x001336d7: or al, 0xe9; ret; 
0x00132fbf: or al, 0xe9; sub ecx, dword ptr [eax + 0x6e8fffe]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00133e37: or al, 0xe9; xor ebx, dword ptr [edx - 9]; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0019983f: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0019954b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0005869f: or al, 0xeb; mov bh, 0x8d; xchg dword ptr [ecx + ecx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0003f631: or al, 0xeb; ret 0x748d; 
0x001774f1: or al, 0xeb; ret 0x838b; 
0x0015dd01: or al, 0xeb; ret; 
0x0009a6bd: or al, 0xed; clc; jmp dword ptr [ebp - 1]; 
0x00139ed5: or al, 0xf1; jmp dword ptr [esi - 0x77]; 
0x0019aa63: or al, 0xf2; call dword ptr [ebx - 0x18]; 
0x00127a76: or al, 0xf6; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00058b99: or al, 0xf6; ret 0x7401; 
0x0009263a: or al, 0xf6; ret 0x7502; 
0x0005b003: or al, 0xf6; ret 0xf01; 
0x0009f499: or al, 0xf6; ret 0xf02; 
0x0013084b: or al, 0xf6; ret 0xf04; 
0x0005b6c1: or al, 0xf6; ret 0xf40; 
0x00104854: or al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00103ff2: or al, 0xf9; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0019ef44: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000962e8: or al, 0xf; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0005046a: or al, 0xf; mov dh, 0xc0; ret; 
0x0008375a: or al, 0xf; test bh, bl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000d1d95: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b2dc3: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b4426: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000aca15: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0009e863: or al, 0xf; xchg ebp, eax; ret 0xe2c1; 
0x001a46e3: or al, 0xf; xchg ebp, eax; ret; 
0x000962d0: or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0019df14: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0016479c: or al, 0xfa; jmp ptr [edx]; push edx; push 4; push ebx; call dword ptr [eax]; 
0x000526d6: or al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0008a8d9: or al, 0xfe; add esp, 8; pop ebx; ret; 
0x0018c9c5: or al, 0xff; inc dword ptr [ecx + 0x41f50c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008af7e: or al, 0xff; jae 0x8af86; call dword ptr [ebx]; 
0x000922a5: or al, 0xff; jae 0x922ad; call dword ptr [ebx]; 
0x00141923: or al, 0xff; je 0x14194b; xor al, ch; arpl word ptr [eax], bx; out dx, al; jmp dword ptr [ebp - 0x5f]; 
0x0014f8b9: or al, 0xff; je 0x14f8e1; and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x001581c7: or al, 0xff; je 0x1581ef; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00024d99: or al, 0xff; je 0x24dc1; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x0002bfb4: or al, 0xff; je 0x2bfdc; cmp al, 0xe8; ret 0x14eb; 
0x0002e8ad: or al, 0xff; je 0x2e8d5; sub al, 0xe8; leave; ret 0x14; 
0x0003e264: or al, 0xff; je 0x3e28c; sub al, ch; ret 0xfffe; 
0x0003ea54: or al, 0xff; je 0x3ea7c; cmp al, 0xe8; ret 0xa39; 
0x0008841d: or al, 0xff; je 0x88445; sub al, 0x52; push ecx; push edi; call eax; 
0x00024457: or al, 0xff; jne 0x24427; call dword ptr [ebp - 0x38]; 
0x00096015: or al, 0xff; jo 0x9601d; call dword ptr [eax]; 
0x000972c2: or al, 0xff; mov al, 0x80; add dword ptr [eax], eax; add al, ch; ret 0xff42; 
0x00155d09: or al, 0xff; mov bl, 0x94; mov eax, dword ptr [0x7be80000]; aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x00155f49: or al, 0xff; mov bl, 0xb4; mov eax, dword ptr [0x3be80000]; shr ah, cl; jmp dword ptr [ebp - 0x75]; 
0x001224f2: or al, 0xff; mov dh, 0xac; add eax, dword ptr [eax]; add al, ch; ret 0xfe87; 
0x000a3484: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a3519: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0003451f: or al, 1; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x0017ab6b: or al, 1; add byte ptr [eax], al; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x00116d03: or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bc8b2: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000bc8c2: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000bc8d2: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000bc8e2: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000bc8f2: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000bc902: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000bc912: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000bc922: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000bc932: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000bc942: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000bc952: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000bc8a2: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0012b2e0: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x0011b4b5: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0011b9c1: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x11b9cd; ret; 
0x0010383a: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000bc8c7: or al, 1; add byte ptr [eax], al; ret; 
0x0017c982: or al, 1; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00140a07: or al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x140a3d; add esp, 0x11c; ret; 
0x00103978: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x00171dbb: or al, 1; jle 0x171dd3; pop ebx; pop esi; pop edi; ret; 
0x0009469e: or al, 1; pop ebx; pop esi; pop edi; ret; 
0x00171cfb: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0009e733: or al, 1; ret 0x448b; 
0x0007d86e: or al, 1; ret 0xc101; 
0x0008b2fa: or al, 1; ret 0xc889; 
0x0010cfb2: or al, 1; ret 0xfa81; 
0x0002f2ac: or al, 1; ret; 
0x00104e70: or al, 5; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011227e: or al, 5; out dx, al; call dword ptr [edx - 0x73]; 
0x0002b9e1: or al, 6; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00199df6: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x001a424a: or al, 9; ret; 
0x000fdd60: or al, 9; stc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x000bbf6c: or al, al; je 0xbbf74; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00148590: or al, al; stc; call dword ptr [eax - 0x73]; 
0x0009d49a: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x61; stc; call dword ptr [eax - 0x18]; 
0x00154987: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x6f], al; stc; call dword ptr [eax - 0x18]; 
0x000e2e32: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004ac02: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003fd04: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00117751: or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00165702: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0011d2e5: or al, byte ptr [eax]; add byte ptr [ebp - 0x6a0d57d], cl; call dword ptr [ecx + 0x51]; 
0x0012f36d: or al, byte ptr [eax]; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x00153396: or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001986ae: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000ede0c: or al, byte ptr [eax]; add byte ptr [ebx - 0x49363], cl; inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x000658a2: or al, byte ptr [eax]; add byte ptr [ebx - 0x58b63], cl; inc dword ptr [ebx - 0x7c72f314]; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000b429d: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008c8cc: or al, byte ptr [eax]; nop; endbr32; xor eax, eax; ret; 
0x00183be8: or al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000fe7b1: or al, byte ptr [ebp - 0x74d58b37]; inc ecx; or byte ptr [ecx], bh; ret 0x474; 
0x00118aab: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x0007b13d: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000e869b: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x00158345: or al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000a14a7: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x001405eb: or al, byte ptr [ecx + 0x110c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014031c: or al, byte ptr [ecx + 0x810c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00099233: or al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00123dbb: or al, byte ptr [ecx + 0xe0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000df676: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019e2c2: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x19e3c0; mov eax, ecx; ret; 
0x00162729: or al, ch; and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x00162748: or al, ch; rcl byte ptr [esi + edi*8 + 0x1cc483ff], cl; ret; 
0x000d42e8: or al, ch; ret 0xcc0; 
0x0012457a: or al, dh; call dword ptr [ebx + 0x56]; 
0x0012456e: or al, dh; dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bl, ah; or al, dh; call dword ptr [ebx + 0x56]; 
0x0012cbbc: or bh, 0x64; stc; call dword ptr [eax - 1]; 
0x001879cc: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001876ac: or bh, ah; mov eax, edx; pop ebx; ret; 
0x0016f2a1: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc1a037d], cl; call dword ptr [eax - 0x73]; 
0x00169861: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc74137d], cl; call dword ptr [eax - 0x73]; 
0x000d0344: or bh, al; dec dword ptr [ebx - 0x360363]; call dword ptr [esi - 0x75]; 
0x0016ead6: or bh, al; inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x000326ad: or bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0018cde5: or bh, bh; inc dword ptr [ecx + 0x41b30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cbbe: or bh, bh; inc dword ptr [ecx + 0x41d57c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00127ef2: or bh, bh; je 0x127eab; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00163e04: or bh, bh; je 0x163e2c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00168ea4: or bh, bh; je 0x168ecc; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x0016baf9: or bh, bh; je 0x16bb21; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x0016c595: or bh, bh; je 0x16c5bd; sbb byte ptr [ebx - 0x75], dl; inc esp; and al, 0x18; call eax; 
0x0016ec75: or bh, bh; je 0x16ec9d; adc al, 0x53; call dword ptr [eax]; 
0x0016ee64: or bh, bh; je 0x16ee8c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0017c061: or bh, bh; je 0x17c089; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00027fa2: or bh, bh; je 0x27fca; and byte ptr [eax - 0x18], dl; ret; 
0x0008832c: or bh, bh; je 0x88354; xor byte ptr [edx + 0x51], dl; call eax; 
0x000c1dc2: or bh, bh; je 0xc1dea; or byte ptr [edx - 0x18], dl; ret; 
0x00159539: or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001432de: or bh, bh; jmp dword ptr [esi - 0x70]; 
0x00092381: or bh, bh; leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092f97: or bh, bh; leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x00092d14: or bh, bh; leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009451e: or bh, byte ptr [eax + 0x10]; cmove eax, ecx; ret; 
0x00165b65: or bh, byte ptr [eax + 2]; pop ebx; pop esi; ret; 
0x000d1f21: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x0009767b: or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00101aa7: or bh, cl; call dword ptr [eax - 0x73]; 
0x0012bbbe: or bh, cl; jmp dword ptr [ebp - 0x75]; 
0x000c3436: or bh, dh; dec dword ptr [ebx - 0x72cbdb8c]; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0017f49b: or bh, dh; ret 0x202; 
0x00118ad6: or bh, dh; ret 0xeff0; 
0x0003acaf: or bh, dh; ret 0xffff; 
0x0008e856: or bh, dh; ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d89f9: or bl, 0x55; stc; call dword ptr [eax + 0x53]; 
0x0008a8a6: or bl, bh; xor eax, eax; ret; 
0x00119aed: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00125c85: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00081962: or bl, byte ptr [ebx + 0x5e]; ret; 
0x0012518d: or bl, byte ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0008e26d: or bl, byte ptr [ebx - 9]; fcomp dword ptr [esi + 0x5f]; ret; 
0x00109669: or bl, byte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x000b48d2: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0018ecc0: or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000e3b3d: or bl, ch; mov ah, 0x83; in al, dx; or al, 0x8d; adc dword ptr [edx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x0003f55f: or bl, ch; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0017c952: or bl, ch; xchg eax, ebp; xchg esi, eax; jno 0x17c954; jmp dword ptr [esi - 0x70]; 
0x00189fb7: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0005cdaa: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00118a8a: or byte ptr [0x100f], ah; ret; 
0x0011b9e1: or byte ptr [0x50fff95a], 0xe8; xor al, 0x83; int1; jmp dword ptr [esi - 0x70]; 
0x0008a913: or byte ptr [eax + 0x1000000], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x00116d01: or byte ptr [eax + 0x10c], bh; call dword ptr gs:[0x10]; 
0x0010c5a1: or byte ptr [eax + 0x10d], bh; call dword ptr gs:[0x10]; 
0x00126e9c: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0010530a: or byte ptr [eax + 0x11c], bh; call dword ptr gs:[0x10]; 
0x0012696c: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x00115a03: or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0011585c: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x0011779c: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x0011726c: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x0011682f: or byte ptr [eax + 0x135], bh; call dword ptr gs:[0x10]; 
0x0010ab55: or byte ptr [eax + 0x13e], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010b09c: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x00127ca4: or byte ptr [eax + 0x151], bh; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003d73a: or byte ptr [eax + 0x163], bh; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008a997: or byte ptr [eax + 0x16], bh; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x00091202: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000dff21: or byte ptr [eax + 0x197], bh; call dword ptr gs:[0x10]; 
0x000dffe8: or byte ptr [eax + 0x197], bh; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dfe99: or byte ptr [eax + 0x197], bh; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00116873: or byte ptr [eax + 0x19e], bh; call dword ptr gs:[0x10]; 
0x00089146: or byte ptr [eax + 0x1a6], bh; xor edx, edx; call dword ptr gs:[0x10]; 
0x00120143: or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x00126b0c: or byte ptr [eax + 0x1ac], bh; call dword ptr gs:[0x10]; 
0x0012687c: or byte ptr [eax + 0x1b0], bh; call dword ptr gs:[0x10]; 
0x001268dc: or byte ptr [eax + 0x1b1], bh; call dword ptr gs:[0x10]; 
0x0010ad8c: or byte ptr [eax + 0x1b4], bh; call dword ptr gs:[0x10]; 
0x00126b6c: or byte ptr [eax + 0x1b6], bh; call dword ptr gs:[0x10]; 
0x00118e61: or byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000b6e25: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x00099d43: or byte ptr [eax + 0x47752f3b], al; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00085e98: or byte ptr [eax + 0x53], dl; call dword ptr [esi + 0x18]; 
0x0007567a: or byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x0008f6ef: or byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x0011997c: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x00123b0c: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x00127574: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x001269ec: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x000d6e37: or byte ptr [eax + 0x68], bh; call dword ptr gs:[0x10]; 
0x00128a4d: or byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00128b5c: or byte ptr [eax + 0x75], bh; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00185fb8: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001266ac: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x0011f6fc: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x0012678c: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x001267bc: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x0013e76f: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00102c8c: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00126adc: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x000e2e4c: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x0011529c: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x0010b6cc: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000e88bc: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000e888c: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x0010ac9c: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x0011e9ec: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x0011e90c: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x0010b960: or byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0011e5fc: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x0011e62c: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x0011ab9c: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x00137aeb: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x2ec3; 
0x000936c4: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009355d: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009397a: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000935b9: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092864: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b6dc: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093a02: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008f1c9: or byte ptr [eax + 0xf0], bh; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000891e2: or byte ptr [eax + 0xf0], bh; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008be80: or byte ptr [eax + 0xf0], bh; xor esi, esi; mov ebx, dword ptr [esp + 4]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c20e: or byte ptr [eax + 0xf0], bh; xor esi, esi; mov ebx, dword ptr [esp]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ba309: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00140076: or byte ptr [eax + 1], bh; add esp, 4; pop ebx; pop esi; ret; 
0x0011f4c9: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x001884d2: or byte ptr [eax + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018e03b: or byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009eb52: or byte ptr [eax + eax], bh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00133447: or byte ptr [eax + ebp*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x000f49bd: or byte ptr [eax + ecx - 0x58], dh; add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], eax; ret 0x7420; 
0x0016e5b5: or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x00151367: or byte ptr [eax - 0x18], dl; movsd dword ptr es:[edi], dword ptr [esi]; idiv bh; add esp, 0x1c; ret; 
0x000b266c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0015b6b1: or byte ptr [eax - 0x73], dl; xchg cl, bh; jo 0x15b6b1; call dword ptr [ecx - 1]; 
0x0010b60b: or byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x3c], ebx; stc; call dword ptr [eax + 0x56]; 
0x000b99b0: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000b96bd: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b250c: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000f49bf: or byte ptr [eax - 0x7f7af0ff], ch; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x00058742: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000a0c92: or byte ptr [eax - 1], dl; jae 0xa0cbb; call edx; 
0x00133b04: or byte ptr [eax], 0x67; stc; call dword ptr [eax - 0x18]; 
0x000248b0: or byte ptr [eax], 0x69; stc; call dword ptr [eax - 0x18]; 
0x0018d8e0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41030; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d780: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41190; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d620: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x412f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d4c0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41450; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d360: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x415b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d200: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41710; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cf40: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x419d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cc80: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41c90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cb20: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c9c0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x41f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c860: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x420b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c700: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x42210; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b7e0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x42eb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b690: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43000; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b150: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43540; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b000: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aeb0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x437e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ad60: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43930; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ac10: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43a80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aac0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43bd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a970: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a820: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43e70; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a6d0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x43fc0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a580: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x44110; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001897e0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x44c30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189690: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x44d80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189540: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x44ed0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001893f0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45020; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001892a0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45170; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189150: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x452c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189000: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45410; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188eb0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45560; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188d60: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x456b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188c10: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45800; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188ac0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45950; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188970: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45aa0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188820: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45bf0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001886d0: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45d40; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188580: or byte ptr [eax], ah; pop edi; call 0x17d639; add ebx, 0x45e90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb035: or byte ptr [eax], ah; ret; 
0x00059081: or byte ptr [eax], al; add byte ptr [eax - 0xd343], al; jmp dword ptr [esi + 0xf]; 
0x00023008: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00140733: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008b13f: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0016f9a5: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0010ba54: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017d325: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0003c3da: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009aa22: or byte ptr [eax], al; add byte ptr [eax], al; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x00042615: or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000920c6: or byte ptr [eax], al; add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0008cda8: or byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0003c233: or byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0008d5f7: or byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00023257: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x000e23ab: or byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0010407e: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003c45a: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003c2dd: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003cfe9: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009142e: or byte ptr [eax], al; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00165712: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00041f94: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0019f0e7: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00093ba6: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000920a1: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x0008ebe6: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0005ecf0: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00140320: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007fcac: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003dc7b: or byte ptr [eax], al; add byte ptr [ebx + 0x708d04ec], al; call dword ptr [esi + 0x57]; 
0x001a07cb: or byte ptr [eax], al; add byte ptr [ebx - 0x768fdbbc], cl; ret 0x6c8d; 
0x0011d246: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; iretd; pop ebp; stc; call dword ptr [eax + 0x55]; 
0x001049c3: or byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xe0c1; 
0x001a0ead: or byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc283; 
0x000b2d05: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001490bf: or byte ptr [eax], al; add byte ptr [edi], cl; mov dword ptr [0x8ba172c2], eax; dec ebp; mov word ptr [ebp - 0x63fc77f], cs; call dword ptr [eax - 0x73]; 
0x0009ac2a: or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009c261: or byte ptr [eax], al; add esp, 0x10; cmp eax, -1; je 0x9c270; add esp, 0xc; ret; 
0x0009abae: or byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00037a07: or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005750e: or byte ptr [eax], al; mov eax, edx; ret; 
0x0003fb00: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000e3a37: or byte ptr [eax], al; stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000cd0c1: or byte ptr [eax], bh; cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x0009c623: or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; add byte ptr [eax - 0x62], 0xf9; call dword ptr [eax - 0x18]; 
0x0008a97e: or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0008a963: or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000bb045: or byte ptr [eax], dh; ret; 
0x000bb025: or byte ptr [eax], dl; ret; 
0x0009a123: or byte ptr [ebp + 0x10479db], al; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb21c: or byte ptr [ebp + 0x390474d2], al; ret 0x6b75; 
0x00078253: or byte ptr [ebp + 0x394874c9], al; ret; 
0x00081ad6: or byte ptr [ebp + 0x396574c9], al; ret; 
0x000795b6: or byte ptr [ebp + 0x397574c9], al; ret; 
0x0008098a: or byte ptr [ebp + 0x3d840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00051183: or byte ptr [ebp + 0x478d0450], cl; add al, 0xf; xchg edx, eax; ret; 
0x0013a3da: or byte ptr [ebp + 0x488c83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x0007ecbd: or byte ptr [ebp + 0x4a840fc9], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0017e6aa: or byte ptr [ebp + 0x4d840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00075676: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00082305: or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x000837c8: or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00081ff8: or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0007d474: or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000df73a: or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0010a9ae: or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000ef88a: or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000df8b4: or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000e8b5a: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x0016d767: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0017f70c: or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00062947: or byte ptr [ebp + 0x52840fc0], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0008578b: or byte ptr [ebp + 0x56500159], cl; call dword ptr [edi + 0xc]; 
0x00079bba: or byte ptr [ebp + 0x5840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00086307: or byte ptr [ebp + 0x58840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b102d: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000b106c: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x000e3027: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000b48ad: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000b48cf: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000b490d: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00076c8a: or byte ptr [ebp + 0x65840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00078ffc: or byte ptr [ebp + 0x6b840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00173f1a: or byte ptr [ebp + 0xa85086], cl; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x72], bl; stc; call dword ptr [eax + 0x6a]; 
0x0018969a: or byte ptr [ebp + 4], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000944f6: or byte ptr [ebp + 7], dh; xor eax, eax; ret; 
0x00088934: or byte ptr [ebp + eax - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0011227b: or byte ptr [ebp - 0x11faf36d], cl; call dword ptr [edx - 0x73]; 
0x000f241e: or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000f22bd: or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000f2492: or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0007e40e: or byte ptr [ebp - 0x167bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001231eb: or byte ptr [ebp - 0x16f78b40], al; mov ebx, 0x8dfffff5; jbe 0x1231f8; ret; 
0x000e057e: or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00099482: or byte ptr [ebp - 0x197b9379], cl; call dword ptr [eax - 0x73]; 
0x00031920: or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000816d6: or byte ptr [ebp - 0x1afa437d], cl; call dword ptr [eax - 0x73]; 
0x00027154: or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x00086661: or byte ptr [ebp - 0x217bf040], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000793da: or byte ptr [ebp - 0x227bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00153271: or byte ptr [ebp - 0x267bf00a], al; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x74fbdb84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x00076795: or byte ptr [ebp - 0x2d7bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000ce494: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363773]; call dword ptr [eax - 0x73]; 
0x00055b3f: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x0007a15f: or byte ptr [ebp - 0x377bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000a922f: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0016b7ba: or byte ptr [ebp - 0x3b7c0010], 0x18; pop ebx; ret; 
0x00080857: or byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00143b60: or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x0007efba: or byte ptr [ebp - 0x427bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00075ebc: or byte ptr [ebp - 0x447bf040], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000ffc2e: or byte ptr [ebp - 0x467bf040], al; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00121cd6: or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x001448c0: or byte ptr [ebp - 0x48], dh; add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000a8fb6: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x0007f7aa: or byte ptr [ebp - 0x4a7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00078527: or byte ptr [ebp - 0x4f7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0007f147: or byte ptr [ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000e95c1: or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f02e1: or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x000c94ba: or byte ptr [ebp - 0x5d71f040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf7db84], cl; jmp dword ptr [eax]; 
0x001789e2: or byte ptr [ebp - 0x6366f45], cl; call dword ptr [edi + 0x56]; 
0x00076f2b: or byte ptr [ebp - 0x637bf040], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001522a3: or byte ptr [ebp - 0x63bd77a], cl; call dword ptr [eax - 0x73]; 
0x0014b533: or byte ptr [ebp - 0x63e3379], cl; call dword ptr [eax - 0x73]; 
0x001372c1: or byte ptr [ebp - 0x646477f], cl; call dword ptr [eax - 0x73]; 
0x00126fd0: or byte ptr [ebp - 0x64ae379], cl; call dword ptr [eax + 0x55]; 
0x00126feb: or byte ptr [ebp - 0x64afb79], cl; call dword ptr [eax + 0x55]; 
0x00127009: or byte ptr [ebp - 0x64b1379], cl; call dword ptr [eax + 0x55]; 
0x00111e3b: or byte ptr [ebp - 0x64e8f7a], cl; call dword ptr [eax - 0x73]; 
0x000e38a7: or byte ptr [ebp - 0x651db7f], cl; call dword ptr [eax - 0x73]; 
0x0009e789: or byte ptr [ebp - 0x6588b7a], cl; call dword ptr [eax - 0x73]; 
0x0009e96d: or byte ptr [ebp - 0x658ab7a], cl; call dword ptr [eax - 0x73]; 
0x0008018e: or byte ptr [ebp - 0x66de779], cl; call dword ptr [eax - 0x73]; 
0x00038242: or byte ptr [ebp - 0x67c336d], cl; call dword ptr [edx - 0x77]; 
0x0003066c: or byte ptr [ebp - 0x67cf779], cl; call dword ptr [eax + 0x56]; 
0x000331fb: or byte ptr [ebp - 0x67cf77b], cl; call dword ptr [eax + 0x56]; 
0x000281f1: or byte ptr [ebp - 0x680c77f], cl; call dword ptr [eax - 0x73]; 
0x00025e1e: or byte ptr [ebp - 0x681577d], cl; call dword ptr [eax - 0x73]; 
0x00177927: or byte ptr [ebp - 0x689e455], cl; call dword ptr [ebp + 0x56]; 
0x0017908e: or byte ptr [ebp - 0x689e47d], cl; call dword ptr [ebp + 0x50]; 
0x0017790c: or byte ptr [ebp - 0x689f245], cl; call dword ptr [edi + 0x56]; 
0x00178139: or byte ptr [ebp - 0x689f24d], cl; call dword ptr [esi + 0x57]; 
0x00178af7: or byte ptr [ebp - 0x68a016a], cl; call dword ptr [edx - 0x77]; 
0x00177942: or byte ptr [ebp - 0x68a016d], cl; call dword ptr [edx - 0x77]; 
0x00178173: or byte ptr [ebp - 0x68a0175], cl; call dword ptr [ecx - 0x77]; 
0x00177965: or byte ptr [ebp - 0x68a1045], cl; call dword ptr [edi + 0x56]; 
0x00178b16: or byte ptr [ebp - 0x68a104a], cl; call dword ptr [esi + 0x53]; 
0x00178196: or byte ptr [ebp - 0x68a104d], cl; call dword ptr [esi + 0x57]; 
0x00167f13: or byte ptr [ebp - 0x68d057d], cl; call dword ptr [eax - 1]; 
0x001619ec: or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x51]; 
0x001623a9: or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x57]; 
0x00161268: or byte ptr [ebp - 0x68e2b80], cl; call dword ptr [eax + 0x57]; 
0x00158178: or byte ptr [ebp - 0x6900b6f], cl; call dword ptr [edx + 0x50]; 
0x00157c62: or byte ptr [ebp - 0x690476d], cl; call dword ptr [edx + 0x50]; 
0x000f2351: or byte ptr [ebp - 0x690da68], cl; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x0011ac82: or byte ptr [ebp - 0x690da7d], cl; call dword ptr [eax - 0x73]; 
0x0014c1b1: or byte ptr [ebp - 0x692d67d], cl; call dword ptr [eax - 1]; 
0x001233eb: or byte ptr [ebp - 0x69ca17d], cl; call dword ptr [eax + 0x56]; 
0x0011d0ec: or byte ptr [ebp - 0x69f417d], cl; call dword ptr [eax + 0x55]; 
0x0011d281: or byte ptr [ebp - 0x6a1ca7d], cl; call dword ptr [eax + 0x55]; 
0x0011d266: or byte ptr [ebp - 0x6a1fc7d], cl; call dword ptr [eax + 0x55]; 
0x0011d24b: or byte ptr [ebp - 0x6a2307d], cl; call dword ptr [eax + 0x55]; 
0x0011d230: or byte ptr [ebp - 0x6a2657d], cl; call dword ptr [eax + 0x55]; 
0x0011d215: or byte ptr [ebp - 0x6a2977d], cl; call dword ptr [eax + 0x55]; 
0x0011d1fa: or byte ptr [ebp - 0x6a2e37d], cl; call dword ptr [eax + 0x55]; 
0x0011d1df: or byte ptr [ebp - 0x6a3277d], cl; call dword ptr [eax + 0x55]; 
0x0011d1c4: or byte ptr [ebp - 0x6a3597d], cl; call dword ptr [eax + 0x55]; 
0x0011d1a9: or byte ptr [ebp - 0x6a38f7d], cl; call dword ptr [eax + 0x55]; 
0x0011d18e: or byte ptr [ebp - 0x6a3d07d], cl; call dword ptr [eax + 0x55]; 
0x0011d173: or byte ptr [ebp - 0x6a4057d], cl; call dword ptr [eax + 0x55]; 
0x0011d158: or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x0011d13d: or byte ptr [ebp - 0x6a4857d], cl; call dword ptr [eax + 0x55]; 
0x0011d122: or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x0011d107: or byte ptr [ebp - 0x6a5437d], cl; call dword ptr [eax + 0x55]; 
0x0011ad80: or byte ptr [ebp - 0x6a6046a], cl; call dword ptr [edx - 0x77]; 
0x0011ad61: or byte ptr [ebp - 0x6a6076a], cl; call dword ptr [edx - 0x77]; 
0x0011ad42: or byte ptr [ebp - 0x6a60d6a], cl; call dword ptr [edx - 0x77]; 
0x000f522d: or byte ptr [ebp - 0x6a85e7d], cl; call dword ptr [eax + 0x55]; 
0x000f5502: or byte ptr [ebp - 0x6a8657d], cl; call dword ptr [eax + 0x55]; 
0x000f540d: or byte ptr [ebp - 0x6a86b7d], cl; call dword ptr [eax + 0x55]; 
0x000f5311: or byte ptr [ebp - 0x6a8717d], cl; call dword ptr [eax + 0x55]; 
0x000f4ffa: or byte ptr [ebp - 0x6a8777d], cl; call dword ptr [eax + 0x55]; 
0x000f50a1: or byte ptr [ebp - 0x6a8837d], cl; call dword ptr [eax + 0x55]; 
0x000f53aa: or byte ptr [ebp - 0x6a8897d], cl; call dword ptr [eax + 0x55]; 
0x000f51d1: or byte ptr [ebp - 0x6a88f7d], cl; call dword ptr [eax + 0x55]; 
0x000f2407: or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax + 0x53]; 
0x000f2464: or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax - 1]; 
0x000d572b: or byte ptr [ebp - 0x6aa727d], cl; call dword ptr [eax + 0x57]; 
0x000d5212: or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x000a086b: or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x0014d221: or byte ptr [ebp - 0x6ac667f], cl; call dword ptr [eax + 0x52]; 
0x00152750: or byte ptr [ebp - 0x6af6079], cl; call dword ptr [eax + 0x56]; 
0x000f50df: or byte ptr [ebp - 0x6b1567d], cl; call dword ptr [eax + 0x55]; 
0x0005e0b9: or byte ptr [ebp - 0x6bd6d7f], cl; call dword ptr [eax + 0x53]; 
0x0005e340: or byte ptr [ebp - 0x6bde97a], cl; call dword ptr [eax + 0x53]; 
0x0005df8a: or byte ptr [ebp - 0x6c03363], cl; call dword ptr [ecx + 0x53]; 
0x00039708: or byte ptr [ebp - 0x6c1c27b], cl; call dword ptr [eax + 0x53]; 
0x0011bc23: or byte ptr [ebp - 0x6c2287a], cl; call dword ptr [eax - 1]; 
0x0011a6c3: or byte ptr [ebp - 0x6c2287d], cl; call dword ptr [eax + 0x6a]; 
0x00142639: or byte ptr [ebp - 0x6c22a79], cl; call dword ptr [eax + 0x53]; 
0x001425b9: or byte ptr [ebp - 0x6c22a79], cl; call dword ptr [eax + 0x56]; 
0x000351f9: or byte ptr [ebp - 0x6c22a80], cl; call dword ptr [eax + 0x53]; 
0x0002fe07: or byte ptr [ebp - 0x6c4fb7d], cl; call dword ptr [eax - 1]; 
0x0002fde9: or byte ptr [ebp - 0x6c5016d], cl; call dword ptr [edx + 0x50]; 
0x00141f03: or byte ptr [ebp - 0x6c71879], cl; call dword ptr [eax - 0x73]; 
0x0013825a: or byte ptr [ebp - 0x6c7187b], cl; call dword ptr [eax + 0x53]; 
0x000d57b5: or byte ptr [ebp - 0x6c7187d], cl; call dword ptr [eax + 0x57]; 
0x0011c4b5: or byte ptr [ebp - 0x6c7187d], cl; call dword ptr [eax - 0x73]; 
0x00123837: or byte ptr [ebp - 0x74bb8a40], al; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00163f38: or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x00030d4c: or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x0008896a: or byte ptr [ebp - 0x74ee8b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00088875: or byte ptr [ebp - 0x74f18b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x001a02db: or byte ptr [ebp - 0x76ef8b40], al; ret 0xc031; 
0x00089250: or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x000b2d3a: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x00076c86: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add dword ptr gs:[eax], eax; add byte ptr [ecx], bh; ret; 
0x00079bb6: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; add eax, 0x39000001; ret; 
0x00080986: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; cmp eax, 0x39000001; ret; 
0x0017e6a6: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; dec ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00078ff8: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x0007e40a: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; jmp 0x3907e418; ret; 
0x0007efb6: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebp, 0x39000000; ret; 
0x00075eb8: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov ebx, 0x39000001; ret; 
0x00062943: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; push edx; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00076f27: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; pushfd; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00080853: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret; 
0x0012319b: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 4], cl; ret; 
0x000ce6f5: or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x00047a3f: or byte ptr [ebp - 0x7b379], cl; call dword ptr [eax + 0x6a]; 
0x000d11c4: or byte ptr [ebp - 0x7b37b], cl; call dword ptr [eax + 0x6a]; 
0x00137d9b: or byte ptr [ebp - 0x7b37d], cl; call dword ptr [eax + 0x6a]; 
0x00178b0f: or byte ptr [ebp - 0x7ccb8b40], al; in al, dx; or byte ptr [ebp - 0x68a104a], cl; call dword ptr [esi + 0x53]; 
0x0009229e: or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x922ad; call dword ptr [ebx]; 
0x0017b280: or byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x0016b132: or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0016b192: or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0016b302: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00175deb: or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x00176605: or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x00163c7b: or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x0016e2a2: or byte ptr [ebp - 0xc2cb37d], cl; call dword ptr [eax - 0x73]; 
0x0016c02a: or byte ptr [ebp - 0xc50e37d], cl; call dword ptr [eax - 0x73]; 
0x001695bc: or byte ptr [ebp - 0xc7bf37d], cl; call dword ptr [eax - 0x73]; 
0x001481e9: or byte ptr [ebp - 0xc], dh; ret; 
0x001313d1: or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0010abec: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10ac00; pop ebx; ret; 
0x0010ac5c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10ac70; pop ebx; ret; 
0x0010b05c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x10b070; pop ebx; ret; 
0x001152dc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1152f0; pop ebx; ret; 
0x0011581c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x115830; pop ebx; ret; 
0x00116b18: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x116b30; pop ebx; ret; 
0x0011722c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x117240; pop ebx; ret; 
0x00117758: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x117770; pop ebx; ret; 
0x00117c88: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x117ca0; pop ebx; ret; 
0x0011925c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x119270; pop ebx; ret; 
0x001192ac: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1192c0; pop ebx; ret; 
0x0011b0cc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11b0e0; pop ebx; ret; 
0x001225fc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x122610; pop ebx; ret; 
0x001249c8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1249e0; pop ebx; ret; 
0x001263ac: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1263c0; pop ebx; ret; 
0x0005da0c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x5da20; pop ebx; ret; 
0x000990d8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x990f0; pop ebx; ret; 
0x000f2cdc: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x0016601a: or byte ptr [ebp - 1], dl; jbe 0x16602b; push edi; call dword ptr [eax + 8]; 
0x0016605d: or byte ptr [ebp - 1], dl; jbe 0x16606e; push edi; call dword ptr [eax + 0x10]; 
0x00087dfa: or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008198d: or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000819cb: or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00093b77: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008acd7: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00093b47: or byte ptr [ebx + 0x137702f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004bf2c: or byte ptr [ebx + 0x1402474], cl; ret 0xf229; 
0x00091f2b: or byte ptr [ebx + 0x1cf8c100], cl; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008c90b: or byte ptr [ebx + 0x1e08300], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00091f4b: or byte ptr [ebx + 0x1fe8c100], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00168e8c: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x001657db: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016c579: or byte ptr [ebx + 0x245c8b06], cl; xor byte ptr [ebx + 0x50532050], cl; call dword ptr [edx + 4]; 
0x0008a43e: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x0009232b: or byte ptr [ebx + 0x2e28310], cl; je 0x92340; xor eax, eax; ret; 
0x00122b44: or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x00164a07: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00121c9a: or byte ptr [ebx + 0x3a496], cl; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x000bf937: or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00080c11: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0016a50a: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0008f92e: or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0016e09e: or byte ptr [ebx + 0x478b04c1], al; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x00163dee: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00163f58: or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0016a462: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x001710a1: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0007b8e7: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x00131e1a: or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000ba28c: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6e46: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a5815: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x0005762f: or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00134b52: or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret 4; 
0x00087215: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00075259: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000397da: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x001a8f73: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret 4; 
0x000881de: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0008e141: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0002c7da: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000cb5d5: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x00151c39: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00056d12: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00058482: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009976f: or byte ptr [ebx + 0x5e], bl; ret; 
0x0007b5b4: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00118f50: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x001287c1: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x000577f0: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x0010a6d2: or byte ptr [ebx + 0x6a14245c], cl; add al, 0x8d; or byte ptr [edx + 0x59], 0xf9; call dword ptr [eax + 0x53]; 
0x00136168: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00136168: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x000fcea0: or byte ptr [ebx + 0x748b8134], cl; or al, 0x89; je 0xfce6d; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0016640c: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016645a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0016ec72: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x0016ee61: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00163dd2: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0016bac4: or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0017c30b: or byte ptr [ebx + 0x75c98508], cl; push es; ret; 
0x0016a41e: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0016588b: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0017d1bb: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x000832bb: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00091f8b: or byte ptr [ebx + 0xdff2500], cl; add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000907a2: or byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00127374: or byte ptr [ebx + 5], bh; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001379be: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00137a63: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0012d22a: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000a5e67: or byte ptr [ebx + ebx], 0xf6; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe786; inc esp; ret 0x66c3; 
0x000975f0: or byte ptr [ebx + edi + 0x48890000], 0xc; ret; 
0x000a3144: or byte ptr [ebx + esi*4 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa0a84]; cmovne eax, edx; pop ebx; ret; 
0x000351f3: or byte ptr [ebx - 0x137c67bb], cl; or byte ptr [ebp - 0x6c22a80], cl; call dword ptr [eax + 0x53]; 
0x0016e0a9: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000f5b05: or byte ptr [ebx - 0x14ebdbac], cl; jge 0x830f8185; ret; 
0x0016a0cb: or byte ptr [ebx - 0x16fbdbbc], cl; dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00030ebd: or byte ptr [ebx - 0x17], bl; mov word ptr [edi], ss; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x001658cf: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00165860: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0003aaa6: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0011c1d5: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x0014bcf7: or byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00086a8a: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000ce39f: or byte ptr [ebx - 0x365363], cl; call dword ptr [eax + 0x52]; 
0x00053fef: or byte ptr [ebx - 0x365f63], cl; call dword ptr [eax + 0x51]; 
0x0012da18: or byte ptr [ebx - 0x367af7b8], cl; je 0x12da28; xor eax, eax; pop ebx; ret; 
0x0008746a: or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0016e7be: or byte ptr [ebx - 0x38f3dbb4], 0x41; adc byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x000fb523: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0007d5ee: or byte ptr [ebx - 0x3ef3db94], cl; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x0016aac3: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16aad4; sub esp, 0xc; push esi; call eax; 
0x00166022: or byte ptr [ebx - 0x3f7aef3c], al; je 0x16612b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00167c97: or byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000f2d50: or byte ptr [ebx - 0x47c7dbac], cl; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f2f10: or byte ptr [ebx - 0x47c7dbac], cl; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129752: or byte ptr [ebx - 0x47cbdb84], cl; jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009394e: or byte ptr [ebx - 0x47f3db8c], cl; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00102e25: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126b95: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e78e5: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126e35: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x126e3e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120f05: or byte ptr [ebx - 0x47fbdba4], cl; jmp 0x120f0d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121505: or byte ptr [ebx - 0x47fbdba4], cl; jns 0x12150d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126b35: or byte ptr [ebx - 0x47fbdba4], cl; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010be15: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001266f5: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008a857: or byte ptr [ebx - 0x47fbdbb4], cl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0006e4a6: or byte ptr [ebx - 0x4f763], cl; call dword ptr [edx + 0x50]; 
0x00064c6a: or byte ptr [ebx - 0x58b63], cl; call dword ptr [ecx + 0x50]; 
0x00066da5: or byte ptr [ebx - 0x58b63], cl; call dword ptr [esi + 0x50]; 
0x000632cc: or byte ptr [ebx - 0x5af43], cl; call dword ptr [eax - 1]; 
0x000c1e7a: or byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x00158570: or byte ptr [ebx - 0x72d7dbbc], cl; xor ah, 0x6f; stc; call dword ptr [eax - 1]; 
0x000dc7f6: or byte ptr [ebx - 0x72dfdb8c], cl; inc ebp; jmp dword ptr [esi - 0x70]; 
0x0014f57c: or byte ptr [ebx - 0x72dfdbbc], cl; xor byte ptr [ebx], 0x6e; stc; call dword ptr [eax + 0x55]; 
0x00152735: or byte ptr [ebx - 0x72ebdb84], cl; xchg eax, esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x001545fe: or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [esi], 0x6f; stc; call dword ptr [eax - 1]; 
0x001529ce: or byte ptr [ebx - 0x72ebdbbc], cl; and bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00152c32: or byte ptr [ebx - 0x72ebdbbc], cl; sbb dl, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x00152b2d: or byte ptr [ebx - 0x72ebdbbc], cl; sub bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x0008299f: or byte ptr [ebx - 0x72f3dba4], cl; sub dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x75]; 
0x000d737e: or byte ptr [ebx - 0x72f3dbac], cl; and bh, 0x38; stc; call dword ptr [eax + 0x53]; 
0x001522ff: or byte ptr [ebx - 0x72f7db8c], 0x86; sub ah, al; stc; call dword ptr [eax - 0x73]; 
0x000f25a8: or byte ptr [ebx - 0x73], dl; adc byte ptr [edi + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x0016eeaa: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0008a4db: or byte ptr [ebx - 0x73ef7c0], cl; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0003bf36: or byte ptr [ebx - 0x746ff398], cl; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x00093bb8: or byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00034497: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0017d1d7: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0016f8cf: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0011d028: or byte ptr [ebx - 0x76afdb84], cl; inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x001274dd: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00154bd3: or byte ptr [ebx - 0x76e7dbb4], cl; fisubr dword ptr [ecx]; ret 0xca39; 
0x000a65a3: or byte ptr [ebx - 0x76e7dbbc], cl; jl 0xa65cf; or al, 1; ret; 
0x0008c723: or byte ptr [ebx - 0x76efdb8c], cl; ret; 
0x0009cb0f: or byte ptr [ebx - 0x76f3db8c], cl; pop edi; or al, 0x89; ret; 
0x00089473: or byte ptr [ebx - 0x76f3dbac], cl; ret; 
0x0011d02f: or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000a3529: or byte ptr [ebx - 0x7cebdb84], cl; ret 0x8301; 
0x00117c57: or byte ptr [ebx - 0x9afb81], cl; adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000871b7: or byte ptr [ebx - 0xe7dbbc], cl; je 0x871e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x00130b1e: or byte ptr [ebx - 1], dl; jae 0x130b53; call eax; 
0x00144572: or byte ptr [ebx], al; add byte ptr [eax], al; add cl, ch; imul edi, ebp, -1; jmp dword ptr [ebp - 0x5f]; 
0x000a6be5: or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x00058590: or byte ptr [ecx + 0x10890450], cl; ret; 
0x0013c920: or byte ptr [ecx + 0x118244c], cl; ret; 
0x0011b3f4: or byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x0003af7d: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x0007ae20: or byte ptr [ecx + 0x20588910], cl; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0007ae50: or byte ptr [ecx + 0x20588910], cl; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0008b2f4: or byte ptr [ecx + 0x24448bc1], cl; or al, 1; ret 0xc889; 
0x0014f53f: or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x691d580], cl; call dword ptr [eax + 0x55]; 
0x001a283a: or byte ptr [ecx + 0x244c8bcb], cl; and al, 0x83; ret; 
0x0007d5e8: or byte ptr [ecx + 0x247c8bc8], cl; or byte ptr [ebx - 0x3ef3db94], cl; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x0002a4d4: or byte ptr [ecx + 0x29008bf3], cl; ret; 
0x000f7f8f: or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x00122c04: or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x00057084: or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x0004c63f: or byte ptr [ecx + 0x3938247c], cl; ret 0x840f; 
0x001859a4: or byte ptr [ecx + 0x3e95bd8], cl; salc; clc; jmp dword ptr [esi - 0x70]; 
0x000a0ce7: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x000ba2c9: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b6e76: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x0007fd66: or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x0007ffd7: or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00087eb1: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x00087e12: or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x00082eb1: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0016e8cb: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000d319b: or byte ptr [ecx + 0x535c246c], cl; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000be0c1: or byte ptr [ecx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x000a5504: or byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x00033cc5: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000cb5bf: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x00164a0a: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x000ad17d: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xacfe1; pop ebx; ret; 
0x000ad19f: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xacfe1; pop ebx; ret; 
0x00096007: or byte ptr [ecx + 0xb68df0], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x708b0cec], al; or al, 0xff; jo 0x9601d; call dword ptr [eax]; 
0x001a55ae: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00112217: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003fc24: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0005796d: or byte ptr [ecx + 0xcc483d0], cl; ret; 
0x0011333a: or byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ad1dd: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xacfe1; pop ebx; ret; 
0x00138136: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0005b388: or byte ptr [ecx + 0xf], al; xchg esp, eax; ret 0x6a52; 
0x0003c3d8: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0011b4b4: or byte ptr [ecx + eax], 0; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0011b9c0: or byte ptr [ecx + eax], 0; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x11b9cd; ret; 
0x000bf4cb: or byte ptr [ecx + edx], 0xea; push esi; inc ecx; jnp 0xbf4d8; cmove eax, edx; ret; 
0x0003a8c3: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00103e69: or byte ptr [ecx - 0x1477b], cl; dec dword ptr [ecx - 0x1434b]; jmp dword ptr [ebp - 0x5f]; 
0x0007c399: or byte ptr [ecx - 0x16fbdbbc], cl; sub eax, 0x2effffeb; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0005af64: or byte ptr [ecx - 0x17f3dbb4], cl; ret 0x1499; 
0x00037ed6: or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x000b26cc: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0007c8a4: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00131e35: or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0008a964: or byte ptr [ecx - 0x3776efbe], cl; ret; 
0x0008000f: or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x000a0afd: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x0008a97f: or byte ptr [ecx - 0x3fceefb0], cl; ret; 
0x0008a79b: or byte ptr [ecx - 0x3fcef3b0], cl; ret; 
0x0010392b: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x00103471: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x00100953: or byte ptr [ecx - 0x3ff001e], al; dec dword ptr [ecx]; retf 0x5489; ret; 
0x0010b9a8: or byte ptr [ecx - 0x4738760f], cl; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00039dfd: or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0006df28: or byte ptr [ecx - 0x54f73], cl; inc dword ptr [ebx + 0x428d25eb]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [esi - 1]; 
0x00065f41: or byte ptr [ecx - 0x59f6b], cl; dec dword ptr [ecx - 0x59773]; call dword ptr [ebx - 0x75]; 
0x000e8eca: or byte ptr [ecx - 0x5d37b], cl; push edi; sar byte ptr [ecx], 1; ret; 
0x000efbfa: or byte ptr [ecx - 0x5e37b], cl; push edi; sar byte ptr [ecx], 1; ret; 
0x0003f9e7: or byte ptr [ecx - 0x7235c622], cl; pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0016d50b: or byte ptr [ecx - 0x72540c29], cl; sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x00127d5c: or byte ptr [ecx - 0x74efdbbc], cl; push esp; and al, 0xc; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d16: or byte ptr [ecx - 0x74efdbbc], cl; push esp; and al, 0xc; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x000c5afa: or byte ptr [ecx - 0x76217629], cl; ret; 
0x001a051e: or byte ptr [ecx - 0x76267633], cl; ret; 
0x0004a037: or byte ptr [ecx - 0x762a7621], cl; ret; 
0x000c149b: or byte ptr [ecx - 0x76b7dbb4], cl; je 0xc14c7; sub byte ptr [ecx], bh; ret 0x840f; 
0x000c910d: or byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x0012eb59: or byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x0016979c: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000b971d: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b256c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x001623a2: or byte ptr [ecx - 0x7cfbdbbc], cl; in al, dx; or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x57]; 
0x00137ae7: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x00032ddb: or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00176653: or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x001663b6: or byte ptr [ecx - 0xfbdbac], cl; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x00171646: or byte ptr [ecx - 0xfbdbac], cl; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a0c14: or byte ptr [ecx - 1], dl; jae 0xa0c3d; call eax; 
0x000248b1: or byte ptr [ecx - 7], ch; call dword ptr [eax - 0x18]; 
0x0016fcfd: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x000dfad0: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010381a: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0016e3b2: or byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00103950: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010617f: or byte ptr [ecx], al; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x00147856: or byte ptr [ecx], al; je 0x14787d; add esp, 0xc; ret; 
0x0009aff5: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0007afee: or byte ptr [ecx], al; ret 0x3e89; 
0x00160e77: or byte ptr [ecx], al; ret 0x5689; 
0x00039f22: or byte ptr [ecx], al; ret 0x8952; 
0x0008756c: or byte ptr [ecx], al; ret 0xc801; 
0x00031284: or byte ptr [ecx], al; ret 0xd139; 
0x0003d757: or byte ptr [ecx], al; ret; 
0x0005f81a: or byte ptr [ecx], al; rol byte ptr [ebp + 0x71840fdb], 1; or dword ptr [eax], eax; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00037e4c: or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x0006fe79: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0008a772: or byte ptr [ecx], al; xor eax, eax; ret; 
0x0008e1c7: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0014a802: or byte ptr [ecx], bh; ret 0x1074; 
0x0003355d: or byte ptr [ecx], bh; ret 0x1474; 
0x001903bc: or byte ptr [ecx], bh; ret 0x1d72; 
0x0018c18c: or byte ptr [ecx], bh; ret 0x2d72; 
0x001758be: or byte ptr [ecx], bh; ret 0x3d75; 
0x000fe7b8: or byte ptr [ecx], bh; ret 0x474; 
0x00172c77: or byte ptr [ecx], bh; ret 0x4c75; 
0x000e9f5a: or byte ptr [ecx], bh; ret 0x830f; 
0x0002b4cf: or byte ptr [ecx], bh; ret 0x840f; 
0x0017ec81: or byte ptr [ecx], bh; ret 0x8c74; 
0x0014f613: or byte ptr [ecx], bh; ret 0xc074; 
0x0017f857: or byte ptr [ecx], bh; ret 0xd889; 
0x001a6b04: or byte ptr [ecx], bh; ret 0xea72; 
0x000a68e0: or byte ptr [ecx], bh; ret 0xeb75; 
0x00052a40: or byte ptr [ecx], bh; ret 0xf272; 
0x0009bd98: or byte ptr [ecx], bh; ret 0xf375; 
0x000f6f02: or byte ptr [ecx], bh; ret 0xf475; 
0x0005853b: or byte ptr [ecx], bh; ret; 
0x001689e2: or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0008147a: or byte ptr [ecx], bl; ret 0x157d; 
0x0009c582: or byte ptr [ecx], ch; ret 0xfa83; 
0x00134bd5: or byte ptr [ecx], ch; ret; 
0x0006fe13: or byte ptr [ecx], ch; ror dword ptr [ecx - 0x4fb63], cl; dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x0006efef: or byte ptr [ecx], ch; ror dword ptr [ecx - 0x52b63], cl; dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x00115ef8: or byte ptr [ecx], dh; leave; call dword ptr gs:[0x10]; 
0x000df658: or byte ptr [ecx], dh; leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008a95e: or byte ptr [ecx], dh; leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00093417: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001674f6: or byte ptr [ecx], dh; ret 0xc889; 
0x0008df08: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d93a: or byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x000df87b: or byte ptr [edi + 0x53], dl; call eax; 
0x0010aafe: or byte ptr [edi + 0x59], 0xf9; call dword ptr [eax - 0x18]; 
0x000b0ff5: or byte ptr [edi + 0x5b], bl; ret; 
0x000b31cd: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d1e97: or byte ptr [edi + 0x5e], bl; ret; 
0x0018eba0: or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00188f4a: or byte ptr [edi - 0x18], bl; call 0x82188e98; ret; 
0x0018af4a: or byte ptr [edi - 0x18], bl; call 0x8218ae78; ret; 
0x00189898: or byte ptr [edi - 0x18], bl; lcall 0x79c3, 0x81ffff3d; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013dbe4: or byte ptr [edi - 1], bl; call dword ptr [ebp + 0x55]; 
0x00133b05: or byte ptr [edi - 7], ah; call dword ptr [eax - 0x18]; 
0x00027ee7: or byte ptr [edi - 7], bh; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [edi + edi*2], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x00138145: or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00137e43: or byte ptr [edi], 0x45; ret 0x2ec3; 
0x0002c486: or byte ptr [edi], 0x85; ret 0xfffc; 
0x000e4d38: or byte ptr [edi], 0xa3; ret 0x830f; 
0x0010baa4: or byte ptr [edi], 0xa3; ret 0xdc73; 
0x00041cf5: or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000c3282: or byte ptr [edi], bl; add byte ptr [eax], al; add cl, ch; xchg edx, eax; jecxz 0xc328a; call dword ptr [eax + 0x31]; 
0x00027eed: or byte ptr [edi], cl; mov bh, 0x85; or al, 0x7f; stc; jmp dword ptr [esi - 0x77]; 
0x00037aa2: or byte ptr [edi], cl; mov bh, 0x93; in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x00082f66: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00165ebc: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x0011e96b: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0019403b: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x00192882: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x000c8aec: or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000bf93d: or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000f806c: or byte ptr [edi], cl; sahf; ret 0x5420; 
0x0019deda: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001997b8: or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000b2d3d: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000d1d7a: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00124ee9: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00124ea8: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00151308: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0005f70e: or byte ptr [edi], cl; xchg esp, eax; ret; 
0x00119137: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00089c70: or byte ptr [edx + 0x21], bh; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0017a2ab: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x0017a332: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x000ef88e: or byte ptr [edx + 0x50], dl; call dword ptr [ecx + 0x20]; 
0x000f2359: or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x0010a6da: or byte ptr [edx + 0x59], 0xf9; call dword ptr [eax + 0x53]; 
0x000ba258: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000a5da7: or byte ptr [edx + ebx*2], 0xf6; inc dword ptr [eax - 0x6d72fd1b]; cmp al, 0xa8; call 0xc24e6db7; ret; 
0x000c1dc6: or byte ptr [edx - 0x18], dl; ret; 
0x000831e7: or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x0007cae4: or byte ptr [edx - 1], ch; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x0011146a: or byte ptr [edx - 1], dl; jbe 0x11147b; call dword ptr [esi + 0x24]; 
0x0011257d: or byte ptr [edx - 1], dl; jbe 0x11258e; call dword ptr [esi + 0x24]; 
0x001136ad: or byte ptr [edx - 1], dl; jbe 0x1136be; call dword ptr [esi + 0x24]; 
0x00080f84: or byte ptr [edx], ah; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00169795: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000bb974: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x001800e4: or byte ptr [edx], bh; sti; jmp dword ptr [esi - 0x70]; 
0x00165e9f: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003e40a: or byte ptr [edx], ch; push edx; call eax; 
0x0007580a: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0017103f: or byte ptr [esi + 0x5f], bl; jmp eax; 
0x000b67f2: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b6ef6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba30c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e96: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6eb7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3a9b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b3d8c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b247b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b274c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000af2d6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000af416: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aaef6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ab036: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000af206: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000af476: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000aae46: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000adbaf: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000ab096: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000af2f7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000af437: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aaf17: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000ab057: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b6727: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b98ea: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x00199ad2: or byte ptr [esi + 3], dl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008eeb7: or byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0012aebb: or byte ptr [esi + ebx*4], 0xef; call dword ptr [eax + 0x6a]; 
0x00086d8f: or byte ptr [esi + ecx], 0; ret; 
0x001537b7: or byte ptr [esi + edx], 0xf2; call dword ptr [eax - 0x73]; 
0x0011acd7: or byte ptr [esi - 0x18], dl; imul ebp, dword ptr [ecx], 6; add byte ptr [ecx + 0x116156c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0013bd26: or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00165bee: or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0010f89b: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x0010df6b: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x0018a09a: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x001431b0: or byte ptr [esi - 0x77], ah; push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0019ff7d: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x000a0b25: or byte ptr [esi - 1], dl; jae 0xa0b4e; call eax; 
0x0004f7e5: or byte ptr [esp + ecx*4], 0xf8; dec dword ptr [ecx - 0x74d7dba4]; pushfd; ret 0x8d30; 
0x000b2dc6: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003aa2e: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0003d878: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x4abd0; add esp, 0x1c; ret; 
0x001620e2: or cl, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x001621e2: or cl, 0x72; stc; call dword ptr [eax - 0x18]; 
0x001621e2: or cl, 0x72; stc; call dword ptr [eax - 0x18]; ret; 
0x00162136: or cl, 0x72; stc; jmp dword ptr [ebp - 0x75]; 
0x001761ce: or cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00054785: or cl, 0xff; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cfec4: or cl, 0xff; inc dword ptr [ebx - 0x2c7c003f]; call dword ptr [ebx + 0x51]; 
0x00055cf7: or cl, 0xff; inc dword ptr [ebx - 0x7bf00008]; add byte ptr [0xd2310000], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0008ee51: or cl, ah; sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x0008b163: or cl, al; call 0x244d3a6c; adc al, 0x89; ret; 
0x0008a4de: or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0003ad52: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000796e5: or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00189895: or cl, byte ptr [ebp - 0x17a0f7fc]; lcall 0x79c3, 0x81ffff3d; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00168765: or cl, byte ptr [ebx + 0x3b18245c]; pop eax; adc al, 0xf; xchg edx, eax; ret 0xd284; 
0x00189f85: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00080b57: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x0018bf25: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00034aa5: or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x000fb521: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0012890e: or cl, byte ptr [edi]; mov bh, 0xc0; mov edx, dword ptr [ecx + eax*4 - 0x6e9f4]; mov eax, edx; ret; 
0x000422ce: or cl, byte ptr [edi]; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000832bd: or cl, byte ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0003a197: or cl, byte ptr [edi]; mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0004221d: or cl, byte ptr [edi]; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000b2d85: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b43c8: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000acd87: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0015328c: or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x0019aa62: or cl, byte ptr [edx + esi*8]; call dword ptr [ebx - 0x18]; 
0x001231ef: or cl, ch; mov ebx, 0x8dfffff5; jbe 0x1231f8; ret; 
0x000bc51b: or cl, cl; jne 0xbc521; xor eax, eax; ret; 
0x00171bfa: or cl, cl; stc; call dword ptr [eax - 0x73]; 
0x0009497d: or cl, dl; call 0xc03a4c0d; ret; 
0x0008a47e: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001182e0: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001181dc: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00128d0d: or dh, 1; call dword ptr gs:[0x10]; 
0x0012437c: or dh, al; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0008a767: or dh, bh; xor eax, eax; ret; 
0x0019b6f5: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19b701; neg eax; ret; 
0x00056e05: or dh, byte ptr [eax + edi*2 - 0x7d]; call dword ptr [eax]; 
0x0007b9bd: or dh, byte ptr [eax + edx + 0x39]; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00093ed6: or dh, byte ptr [eax + edx + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x00038f97: or dh, byte ptr [eax - 0x76000779]; ret; 
0x00088b6a: or dh, byte ptr [ebp + 0x43]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00095970: or dh, byte ptr [ebp + 0xd]; xor eax, eax; pop ebx; ret; 
0x000bb976: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0003a7f5: or dh, byte ptr [ebp + 8]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00095922: or dh, byte ptr [ebp - 0xf]; xor eax, eax; pop ebx; ret; 
0x0006ff2c: or dh, byte ptr [ecx + edi - 0x7d]; ret 0x8904; 
0x000f48a7: or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000643d8: or dh, byte ptr [edi + ecx*8 - 0x7d]; mov ebp, 0xfffffa70; dec dword ptr [edi]; xchg ebp, eax; ret 0x7ce9; 
0x0019efe2: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x0019dfc2: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x0019b383: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x19b390; neg eax; ret; 
0x001467a3: or dh, byte ptr [edx + edx + 0x31]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x00093e44: or dh, byte ptr [edx + edx + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x0006f9cf: or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x00088717: or dh, byte ptr [esi + edx - 0x7d]; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00153351: or dh, byte ptr [esp + ecx*8 - 0x7d]; ret 0x8014; 
0x000cb9c5: or dh, dh; ret 0xf04; 
0x0009b4cb: or dh, dh; ret 0xf0f; 
0x0009d66b: or dh, dh; ret; 
0x0009f99e: or dl, byte ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0009adfe: or dl, byte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0012092e: or dword ptr [0xb8000001], 0x15; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000bc85a: or dword ptr [eax + 0x3c70], 1; xor eax, eax; pop ebx; ret; 
0x00085b80: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x85b80; ret; 
0x0012a012: or dword ptr [eax + 0x92], edi; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0008a770: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0008a97c: or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00118fb9: or dword ptr [eax + eax], edx; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118fea: or dword ptr [eax + eax], edx; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0015c41a: or dword ptr [eax + ecx*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0014989e: or dword ptr [eax - 0x3f], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001491be: or dword ptr [eax - 0x40], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0014d3ac: or dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x000e3a36: or dword ptr [eax], 0; stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000920c5: or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000920a0: or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0014858f: or dword ptr [eax], 0xffffffc0; stc; call dword ptr [eax - 0x73]; 
0x00171bf9: or dword ptr [eax], 0xffffffc9; stc; call dword ptr [eax - 0x73]; 
0x0016e3b1: or dword ptr [eax], 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x001550f3: or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x001551b3: or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; ret; 
0x0009b732: or dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x96486], cl; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x001656d8: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00025880: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0007ea98: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x001152d1: or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00103482: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0009b73c: or dword ptr [eax], eax; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x00069c70: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ce9fc: or dword ptr [eax], eax; add byte ptr [ebx - 0x365363], cl; jmp dword ptr [ebp - 0x75]; 
0x0006425a: or dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0011d261: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; add ebx, dword ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x00089607: or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x0009f4e9: or dword ptr [eax], eax; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x0009e2d3: or dword ptr [eax], eax; add byte ptr [ecx], bh; fisttp word ptr [edi]; xchg ebp, eax; ret; 
0x0008960d: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5c72; 
0x0009c374: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b2c5b: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005f822: or dword ptr [eax], eax; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0005f57e: or dword ptr [eax], eax; add dh, al; inc esp; and al, 0x71; js 0x5f510; ret 0xc689; 
0x00084039: or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0009627a: or dword ptr [eax], eax; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x000944da: or dword ptr [eax], eax; nop; nop; endbr32; xor eax, eax; ret; 
0x00131df3: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0002507f: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x00135606: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d2: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e6ba: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002510a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x0014c857: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; ret; 
0x0014c4a4: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x00131e22: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push esi; call eax; 
0x0003eaaa: or dword ptr [ebp + 0x33], esp; add eax, 0x18; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x00057079: or dword ptr [ebp + eax*8 + 0x4489fff8], 0x408b1424; or byte ptr [ecx + 0x390c2444], cl; ret 0x820f; 
0x000b2d5d: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000acd62: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0xacd6c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00046250: or dword ptr [ebx + 0x1542444], ecx; ret 0xbe0f; 
0x0004cde8: or dword ptr [ebx + 0x1642444], ecx; ret 0xbe0f; 
0x000d7a2e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000a1cd6: or dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x000581f6: or dword ptr [ebx + 0x5e5b14c4], eax; pop edi; pop ebp; ret; 
0x00151c93: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00128c16: or dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x00103913: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0014d3b3: or dword ptr [ebx + eax*4], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0002879d: or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax + 0x68]; 
0x000286eb: or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00117f3a: or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008e2d6: or dword ptr [ebx - 0x2708fb3c], eax; pop ebx; pop esi; ret; 
0x000a0409: or dword ptr [ebx - 0x2776c73c], eax; pop ebx; ret 4; 
0x00052752: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x000d2241: or dword ptr [ebx - 0x3f7afb3e], eax; jne 0xd223c; xor edx, edx; mov eax, edx; ret; 
0x000fcea3: or dword ptr [ebx - 0x76f30d8c], 0x830cc274; rol byte ptr [ecx], 0x39; ret; 
0x0011593e: or dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0014a547: or dword ptr [ebx - 0x7af000c8], eax; cmp dh, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0013110f: or dword ptr [ebx - 0x7af0f808], eax; ret; 
0x0011cb82: or dword ptr [ebx - 0x7c76fb40], eax; add byte ptr [ebp], 0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001695b0: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc7bf37d], cl; call dword ptr [eax - 0x73]; 
0x0016c01e: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc50e37d], cl; call dword ptr [eax - 0x73]; 
0x00024c11: or dword ptr [ecx + 0x1a3090], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x000bf67a: or dword ptr [ecx + 0x1c183d7], 0xffffff83; ret 0x8801; 
0x000bc39d: or dword ptr [ecx + 0x42], eax; test al, al; jne 0xbc398; xor eax, eax; ret; 
0x00137d3e: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0017d8e6: or dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0016b51f: or dword ptr [ecx + 0x74], 0xfffffff9; call dword ptr [edi + 0x56]; 
0x0003c772: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0008a870: or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0016e441: or dword ptr [ecx + eax + 0x5e5b0000], 0x5f; ret; 
0x0009c20a: or dword ptr [ecx + eax], 0; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00142444: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x00142634: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6c22a79], cl; call dword ptr [eax + 0x53]; 
0x0017ce79: or dword ptr [ecx - 0x76dbdbbc], ecx; ret; 
0x0014c10d: or dword ptr [ecx - 0x7cfb6cbc], ecx; ret 0x8301; 
0x0003e123: or dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000df8e8: or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003d6ce: or dword ptr [ecx], eax; ret; 
0x00131c26: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000a0e38: or dword ptr [ecx], edi; ret 0x3374; 
0x001764c2: or dword ptr [ecx], edi; ret; 
0x00039901: or dword ptr [edi + 0x3e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000b48b0: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0017c97b: or dword ptr [edi + 0xf], esi; mov eax, edx; mov edx, dword ptr [ecx + 0x10c]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0018ec30: or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00134d8e: or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x00134e7a: or dword ptr [edi], ecx; inc edi; ret 0xfb83; 
0x00147ef4: or dword ptr [edi], ecx; lahf; ret; 
0x00100475: or dword ptr [edi], ecx; mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x2a7e; 
0x0004208b: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x00042526: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042476: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000b2d60: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000acd65: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000ce6e6: or dword ptr [edi], ecx; xchg byte ptr [edx - 0x74000009], dh; test dword ptr [ecx + ecx*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x000536c0: or dword ptr [edi], ecx; xchg cl, bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00054a65: or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x000a6a22: or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0012b637: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0019efd2: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x0019dfb2: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x00098b13: or dword ptr [edx + 0x7d8bfff9], esi; mov byte ptr [ebp - 0x6678779], cl; call dword ptr [eax + 0x68]; 
0x0008a961: or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0017d6b0: or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0003cbc8: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00141cd1: or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x00115c10: or dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0011d36d: or dword ptr [edx], 0x60; stc; call dword ptr [eax + 0x55]; 
0x000287b0: or dword ptr [esi + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00124593: or dword ptr [esi + 0x5b], ebx; jl 0x24e60; ret; 
0x0013506a: or dword ptr [esi + 0x67], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x001479ff: or dword ptr [esi + 0x6c], 0xe850fff9; push ss; ret; 
0x000baf63: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x0019e243: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bafd3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x000e58ca: or dword ptr [esi + ebp*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00128914: or dword ptr [esi + edx], 0xd089fff9; ret; 
0x000695ca: or dword ptr [esi - 0xe], esi; mov dword ptr [ebx], ecx; pop ebx; pop esi; pop edi; ret; 
0x000764bc: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00170100: or dword ptr [esi], 0x75; stc; call dword ptr [eax - 0x73]; 
0x00087213: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e2447: or dword ptr [esi], ebp; lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0011ac5b: or dword ptr [esp + eax*2 - 0x3b7d0000], 4; pop ebx; pop esi; ret; 
0x001695be: or dword ptr [esp + eax*4], 0xfffffff3; call dword ptr [eax - 0x73]; 
0x0010a4e0: or dword ptr [esp + edx - 4], 0; jmp 0x109eb2; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000e9490: or dword ptr [esp + edx - 4], 0; jmp 0xe8e62; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ebe10: or dword ptr [esp + edx - 4], 0; jmp 0xeb7e2; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ecb60: or dword ptr [esp + edx - 4], 0; jmp 0xec542; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000ef460: or dword ptr [esp + edx - 4], 0; jmp 0xeee42; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000f01b0: or dword ptr [esp + edx - 4], 0; jmp 0xefb92; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5f8]; call dword ptr [eax + 0x18]; 
0x00123647: or dword ptr [esp + esi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0009b73b: or dword ptr fs:[eax], eax; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x001374ea: or eax, 0x1175c085; mov eax, ebx; pop ebx; ret; 
0x0002554e: or eax, 0x14; jne 0x25559; add esp, 0x1c; ret; 
0x000d3e7e: or eax, 0x14; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x000a0918: or eax, 0x1ac38100; add eax, 0xec830019; or al, 0x6a; add eax, 0x53e5838d; stc; call dword ptr [eax - 0x73]; 
0x000acdd9: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00091f90: or eax, 0x2890f00; xor eax, eax; ret; 
0x000ba0e9: or eax, 0x300105f; or al, 0x91; jmp ecx; 
0x000a023c: or eax, 0x402448b; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0019f002: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x0017a502: or eax, 0x4245489; jmp dword ptr [eax + 0x30]; 
0x0019dfe2: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x0003fd52: or eax, 0x5b04c483; pop esi; ret; 
0x00130b02: or eax, 0x5b08c483; ret; 
0x0010c759: or eax, 0x5b54c483; pop esi; ret; 
0x00116f19: or eax, 0x5b64c483; pop esi; ret; 
0x00163c2a: or eax, 0x5e5bc031; pop edi; ret; 
0x00167d3a: or eax, 0x5ec0315b; pop edi; ret; 
0x000b4b31: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x0006c13b: or eax, 0x6c890000; and al, 0x14; jmp ebx; 
0x000b3438: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00088900: or eax, 0x7c; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x000ba5cb: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7108: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00125928: or eax, 0x8100057d; ret; 
0x000b2de7: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b7111: or eax, 0x824448b; pop esi; ret; 
0x0011d260: or eax, 0x83000009; in al, dx; or byte ptr [ebp - 0x6a1fc7d], cl; call dword ptr [eax + 0x55]; 
0x000a1c0e: or eax, 0x830a8890; ret 0x8301; 
0x001264ef: or eax, 0x83fffef4; les esp, ptr [eax]; add esp, 0xc; ret; 
0x00066362: or eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005045f: or eax, 0x85fffffb; ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009f5cd: or eax, 0x878d0000; in al, 0x50; stc; call dword ptr [eax - 0x73]; 
0x0005f01b: or eax, 0x8901e683; ret; 
0x000b445a: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00128c01: or eax, 0x8b000000; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00164338: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0018ee70: or eax, 0x8b1c035f; jmp ebx; 
0x001614ff: or eax, 0x8bfffd26; push ebp; mov eax, 0x8910c483; ret; 
0x0009ed3d: or eax, 0x8d500000; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x00058367: or eax, 0x9c868d00; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0012092f: or eax, 0xb8000001; adc eax, 0x39000000; ret 0x4e0f; 
0x00041c11: or eax, 0xb801e983; add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000ba5d4: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0018c865: or eax, 0xc381ffff; mov al, 0x20; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c8fe: or eax, 0xc381ffff; pop ss; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000db8ce: or eax, 0xc483fffe; adc byte ptr [ecx - 0x76efdbbc], cl; ret 0x448b; 
0x0009469a: or eax, 0xc6b83f0; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000adb4b: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000d0f0f: or eax, 0xe8fff62e; fsubr dword ptr [ebx]; push es; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x00177907: or eax, 0xec830000; or byte ptr [ebp - 0x689f245], cl; call dword ptr [edi + 0x56]; 
0x00178134: or eax, 0xec830000; or byte ptr [ebp - 0x689f24d], cl; call dword ptr [esi + 0x57]; 
0x000acdd6: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b4457: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b2de4: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092d11: or eax, 0xff087b81; leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00092f94: or eax, 0xff087e81; leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x0003a574: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00115057: or eax, 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x0016d9d4: or eax, 1; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0014d003: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0008b451: or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0005cdb0: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0007344d: or eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + eax*2 - 0x17af0007], edx; ret; 
0x000a6951: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000e2e4e: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00095940: or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00128a0e: or eax, dword ptr [eax]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x001656f2: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0011d46b: or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d987d], cl; call dword ptr [edx + 0x52]; 
0x0011d2ff: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a09f7d], cl; call dword ptr [edx + 0x52]; 
0x0013d939: or eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007a5e7: or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00066607: or eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00041590: or eax, dword ptr [eax]; add dword ptr [eax], eax; xor eax, eax; ret; 
0x0005778b: or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x0019f12e: or eax, dword ptr [eax]; je 0x19f1b2; mov eax, 0xc; pop edi; ret; 
0x000bca58: or eax, dword ptr [eax]; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00125367: or eax, dword ptr [ebx + 0x567426fa]; pop ebx; pop esi; ret; 
0x0007b478: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0008877c: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x001655a4: or eax, dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x0013ade0: or eax, dword ptr [ebx - 0x68f0f007]; ret 0xce39; 
0x00088a3e: or eax, dword ptr [ebx - 0x7d76fe20]; test al, 0x1a; add byte ptr [eax], al; ret; 
0x00102fcb: or eax, dword ptr [ebx]; add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0007aaa5: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0017950e: or eax, dword ptr [ecx + 0x1bcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c551: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057a91: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057b9a: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dfe2f: or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dfd6a: or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003a566: or eax, ecx; ret; 
0x0003ab8d: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0016f414: or eax, edi; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00137e7d: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0007664d: or eax, edx; mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118af5: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0008c95d: or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00052123: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0005215a: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001289ba: or eax, edx; mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x001861cf: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00103765: or eax, edx; pop ebx; ret; 
0x0011e953: or eax, edx; ret; 
0x00092118: or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x001227e7: or eax, esi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0011e9cc: or eax, esi; pop esi; pop edi; ret; 
0x000e0582: or ebp, eax; push 0x89fffffc; ret 0xc085; 
0x00024b65: or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x00024b65: or ebp, esp; jmp dword ptr [ebp + 0x33]; adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x00104288: or ebx, 0xffffffff; mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x001297e4: or ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0005da74: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000b48f0: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0018ed50: or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00100479: or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x2a7e; 
0x000ad1c2: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x0002803b: or ecx, dword ptr [ebp - 0x7cffd98c]; ret; 
0x000549b0: or ecx, dword ptr [ebx - 0x367b7b]; inc dword ptr [ecx]; ret 0xbe0f; 
0x000386b3: or ecx, dword ptr [ebx - 0x72ebdbbc]; adc byte ptr [edx], 0x3e; stc; call dword ptr [eax - 1]; 
0x000e1239: or ecx, dword ptr [ecx - 0x16fbdbbc]; popfd; push edi; cld; jmp dword ptr [esi - 0x70]; 
0x000939df: or ecx, dword ptr [ecx - 0x76f3dbac]; ret 0xca81; 
0x0009327f: or ecx, dword ptr [ecx - 0x76f7dbac]; ret 0xca81; 
0x000a07a5: or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000ad1c5: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000b43f6: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000acdb5: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0015f438: or ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x0014bc04: or ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x000fdd61: or ecx, edi; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0011d24d: or edi, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x00092094: or edi, dword ptr [eax + 0x16]; ret; 
0x000f2680: or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x0009aa20: or edi, dword ptr [eax + 8]; cmova eax, ecx; mov byte ptr [edx + 0x3c18], al; ret; 
0x001719f8: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000f2859: or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x0012956e: or edi, eax; je 0x1295d0; mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00101c81: or edi, ecx; call dword ptr [ecx + 0x6a]; 
0x0018cd1e: or edi, edi; inc dword ptr [ecx + 0x41bf7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cc85: or edi, edi; inc dword ptr [ecx + 0x41c90c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018cb25: or edi, edi; inc dword ptr [ecx + 0x41df0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ca5e: or edi, edi; inc dword ptr [ecx + 0x41eb7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015960b: or edi, edi; jmp dword ptr [ebp - 0x75]; 
0x00073e11: or edi, edi; sti; jmp dword ptr [esi - 0x70]; 
0x000c33aa: or edi, esi; dec dword ptr [ebx - 0x72cbdb8c]; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0019f6c6: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d1ea6: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x0004230e: or edi, esi; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00119132: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x0008bba8: or edx, 2; call dword ptr gs:[0x10]; 
0x000f267e: or edx, eax; or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f2857: or edx, eax; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x00118b5d: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x000d6fee: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001291c4: or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0003ab14: or esi, dword ptr [ebp + 9]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0019eff2: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019dfd2: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0008f3c9: or esi, dword ptr [esp - 0x77]; ret 0xdae9; 
0x0011e9c8: or esi, eax; xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x000533b4: or esi, edi; dec dword ptr [ebx - 0x72efdb84]; xchg eax, edi; xchg cl, bh; call dword ptr [eax + 0x68]; 
0x0015319b: or esi, edi; jmp dword ptr [esi - 0x70]; 
0x0004215e: or esi, edi; ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00127b2b: or esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000d7d7b: or esi, esi; ret; 
0x0015249e: or esp, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00159caa: or esp, 0xffffff86; int1; call dword ptr [eax - 0x73]; 
0x00163bea: or esp, 0xffffffa5; add byte ptr [eax], al; pop ebx; ret; 
0x0009a82b: or esp, dword ptr [esi + 0x19]; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9a840; ret; 
0x0008e82a: or esp, dword ptr [esi]; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x00062436: out 0, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011e5d3: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ab73: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019a41b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x0014ace4: out 0x21, eax; ret; 
0x000d7385: out 0x38, eax; stc; call dword ptr [eax + 0x53]; 
0x000d57b8: out 0x38, eax; stc; call dword ptr [eax + 0x57]; 
0x0011c4b8: out 0x38, eax; stc; call dword ptr [eax - 0x73]; 
0x00027b2f: out 0x38, eax; stc; call dword ptr [edx + 0x50]; 
0x0018acb3: out 0x39, eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00186a6a: out 0x42, eax; jo 0x1869ef; ret 0x80; 
0x00189733: out 0x4c, eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011ac8c: out 0x59, eax; stc; call dword ptr [eax - 0x18]; 
0x00141b88: out 0x5b, eax; pop esi; pop edi; ret; 
0x0011d354: out 0x5f, al; stc; call dword ptr [eax + 0x55]; 
0x001529d5: out 0x6e, eax; stc; call dword ptr [eax + 0x53]; 
0x001706f1: out 0x73, al; stc; call dword ptr [eax - 0x73]; 
0x0016cf6e: out 0x73, al; stc; call dword ptr [ecx + 0x6a]; 
0x0016a063: out 0x73, al; stc; call dword ptr [edi + 0x6a]; 
0x000360c9: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00089953: out 0x83, eax; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00106ffb: out 0x83, eax; ret 0xf01; 
0x00025917: out 0x89, al; ret 0x25; 
0x00050a7c: out 0x89, al; ret; 
0x00045e2f: out 0x89, al; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x0004c9ff: out 0x89, al; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29742454], 1; ret; 
0x000259b7: out 0x89, eax; ret 0x25; 
0x000c1b37: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000dbdd2: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xc889; 
0x001156cb: out 0x8b, al; pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000f30fc: out 0x8d, eax; jbe 0xf3100; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00149635: out 0xa6, eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000e89d5: out 0xb5, eax; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00179e29: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0016271b: out 0xc, eax; add byte ptr [ebx - 0x7f72eb14], al; aad 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00056735: out 0xd5, eax; std; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x00184a87: out 0xe9, al; dec dword ptr [ebp + 0x558b015e]; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret; 
0x000ddb98: out 0xe9, al; ret 0xfffe; 
0x000d05c5: out 0xe9, eax; shl ebp, 0xff; dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x0018821b: out 0xf, eax; je 0x188230; call 0x17d639; add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018a21b: out 0xf, eax; je 0x18a230; call 0x17d639; add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018c20d: out 0xf, eax; je 0x18c230; call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e450: out 0xf, eax; je 0x18e470; call 0x17d639; add ebx, 0x407ff; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018f430: out 0xf, eax; je 0x18f450; call 0x17d639; add ebx, 0x3f9df; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00190430: out 0xf, eax; je 0x190450; call 0x17d639; add ebx, 0x3eb9f; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000f4ab3: out 0xf2, al; dec dword ptr [ecx - 0x2d17dbcc]; out 0xf2, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f4abb: out 0xf2, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0016f2b2: out 0xf3, al; call dword ptr [eax - 0x73]; 
0x00074f6c: out 0xf8, al; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00075055: out 0xf8, eax; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x001681ce: out 0xfa, eax; jmp dword ptr [ebp - 0x75]; 
0x00165341: out 0xfc, eax; jmp dword ptr [esi - 0x70]; 
0x0004a82e: out 0xff, al; call dword ptr [eax + 0x31]; 
0x000d9f6a: out 0xff, al; call dword ptr [ebp + 0x55]; 
0x00055ab9: out 0xff, al; dec dword ptr [ebx - 0x362f63]; call dword ptr [eax - 0x73]; 
0x000d9974: out 0xff, al; dec dword ptr [ebx - 0x74ebdbbc]; push eax; adc dh, dh; ret; 
0x0006f6a2: out 0xff, al; jmp dword ptr [ebp - 0x5f]; 
0x00133ecf: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000d9eff: out 0xff, eax; call dword ptr [eax + 0x50]; 
0x000df414: out 0xff, eax; call dword ptr [eax + 0x57]; 
0x0006491f: out 0xff, eax; call dword ptr [edx - 0x73]; 
0x000a5e73: out 0xff, eax; cmove eax, edx; ret; 
0x000c9995: out 0xff, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax], ebp; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00024aaf: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0017d754: out 0xff, eax; jmp ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3e310; add esp, 0x1c; ret; 
0x001a0add: out 0xff, eax; push edi; dec dword ptr [ebp - 0x728fdb94]; je 0x1a0b0d; jl 0x1a0a74; ret; 
0x001a175d: out 0xff, eax; push edi; dec dword ptr [ecx - 0x7683db84]; ret 0xe283; 
0x000a333e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174704]; cmove eax, edx; ret; 
0x000a32fe: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x000a502e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174b34]; cmove eax, edx; ret; 
0x000a5eae: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000805e5: out 1, eax; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000d7d69: out 4, al; add al, 0x66; cmp esi, 0x840f0400; add byte ptr [eax + eax], bl; add dh, dh; ret; 
0x000760f8: out dx, al; aam 0xfa; jmp dword ptr [esi - 0x70]; 
0x000bc1ae: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000bc1b1: out dx, al; add al, 0xf7; ret 0; 
0x000cbcb9: out dx, al; add al, 1; ret 0x5689; 
0x00044aee: out dx, al; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xf3b0bf7], cl; xchg ebp, eax; ret 0xe083; 
0x000bac6e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0015f38e: out dx, al; add cl, byte ptr [ecx + 0x5d5f5ef0]; ret; 
0x000e0c48: out dx, al; add dword ptr [0x89535600], edx; ret; 
0x0012d307: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0002e855: out dx, al; add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00167ff6: out dx, al; add eax, ebp; ret; 
0x00092b7f: out dx, al; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0011eefd: out dx, al; call dword ptr [eax - 0x73]; 
0x00112280: out dx, al; call dword ptr [edx - 0x73]; 
0x0009a331: out dx, al; call dword ptr gs:[0x10]; 
0x0014787b: out dx, al; dec dword ptr [ebp - 0x6403f7f]; call dword ptr [eax - 0x73]; 
0x00147d3c: out dx, al; dec dword ptr [ebp - 0x6406379]; call dword ptr [eax - 0x73]; 
0x00146c28: out dx, al; dec dword ptr [ebp - 0x6407f7d]; call dword ptr [eax + 0x68]; 
0x0014714a: out dx, al; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x001476ac: out dx, al; dec dword ptr [ebx - 0x72f3dbac]; sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax + 0x68]; 
0x0013b423: out dx, al; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000bc99e: out dx, al; idiv bh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000bf2fd: out dx, al; idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x001359b3: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00135477: out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017d7bd: out dx, al; inc dword ptr [ebx - 0x247aef3c]; jne 0x17d7d0; add esp, 8; pop ebx; ret; 
0x0014192b: out dx, al; jmp dword ptr [ebp - 0x5f]; 
0x001491d7: out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015f203: out dx, al; jno 0x15f1ff; call dword ptr [eax + 0x6a]; 
0x0015f257: out dx, al; jno 0x15f253; jmp dword ptr [ebp - 0x75]; 
0x0012554c: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00186b12: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00189d03: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bcb3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0008e826: out dx, al; push cs; add byte ptr [0x1a260b], al; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x0007ec68: out dx, al; push edx; cli; jmp dword ptr [esi - 0x70]; 
0x00171efe: out dx, al; sbb edi, esp; jmp dword ptr [esi - 0x70]; 
0x0012dd05: out dx, al; stc; call dword ptr [eax - 1]; 
0x000ba875: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0019ef6c: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000f27d0: out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000dddef: out dx, eax; add eax, 0x2964c76b; ret; 
0x0019efa1: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0007b951: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00104db3: out dx, eax; bnd jmp dword ptr [esi - 0x70]; 
0x0012aebe: out dx, eax; call dword ptr [eax + 0x6a]; 
0x00129dea: out dx, eax; call dword ptr [eax - 0x18]; 
0x00139722: out dx, eax; call dword ptr [ebx + 0x50]; 
0x00127c12: out dx, eax; call dword ptr gs:[0x10]; 
0x00143a86: out dx, eax; dec dword ptr [ebx - 0x72dfdba4]; and esp, 0xffffffbd; stc; call dword ptr [eax - 0x73]; 
0x0012cc62: out dx, eax; dec dword ptr [ecx + 0x24e82434]; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012b128: out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0012fdaf: out dx, eax; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0012cc6a: out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0013936a: out dx, eax; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; 
0x00126e7d: out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00126ced: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00126d0d: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0017e8ec: out dx, eax; jmp dword ptr [ecx]; 
0x0013289f: out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0012495e: out dx, eax; jmp ptr [ecx]; fidivr dword ptr [ecx]; ret 0x820f; 
0x0003a8c7: out dx, eax; jmp ptr [ecx]; sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x00177968: out dx, eax; jne 0x177964; call dword ptr [edi + 0x56]; 
0x00178199: out dx, eax; jne 0x178195; call dword ptr [esi + 0x57]; 
0x00178b19: out dx, eax; jne 0x178b15; call dword ptr [esi + 0x53]; 
0x00186ae2: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00096f28: out dx, eax; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x00134260: out dx, eax; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x000d1f18: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x0011f8aa: out dx, eax; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00189c33: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018bc03: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0019efe1: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x001551b2: out dx, eax; or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; ret; 
0x0019efd1: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x0019f001: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x0019eff1: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x00152b34: out dx, eax; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x0007b8f7: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x0019efc1: out dx, eax; pop es; jb 0x19f030; lea eax, [eax + 6]; pop edi; ret; 
0x000ba107: out dx, eax; pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0019f011: out dx, eax; push cs; jb 0x19f030; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019efb1: out dx, eax; push es; jb 0x19f030; lea eax, [eax + 5]; pop edi; ret; 
0x000e963f: out dx, eax; push esi; stc; call dword ptr [eax - 0x73]; 
0x001302cd: out dx, eax; ret; 
0x00199ab4: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019a475: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x00199a9f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0019a45b: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x00199a8a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00199a75: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0019a441: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x00199b41: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000443fe: out dx, eax; std; jmp dword ptr [esi - 0x70]; 
0x00159bee: outsb dx, byte ptr [esi]; add bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0014ca5d: outsb dx, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0003d85f: outsb dx, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000830ce: outsb dx, byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0012e38e: outsb dx, byte ptr [esi]; cmp byte ptr [eax], al; add byte ptr [ebx + 0x55500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0013d264: outsb dx, byte ptr [esi]; imul edi, ecx, 0xb2e850ff; push -0x11; jmp dword ptr [esi - 0x70]; 
0x000a6eae: outsb dx, byte ptr [esi]; into; clc; dec dword ptr [ebp - 0x6562370]; call dword ptr [edx - 0x73]; 
0x0017f49a: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x000ba208: outsb dx, byte ptr [esi]; pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000962e2: outsb dx, byte ptr [esi]; sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00186872: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0015273d: outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x0014f528: outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0011a996: outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x0014e2bc: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0014e44f: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0014fdac: outsb dx, byte ptr [esi]; stc; call dword ptr [ecx + 0x50]; 
0x0014fe72: outsb dx, byte ptr [esi]; stc; call dword ptr [ecx - 0x17]; 
0x00084719: outsb dx, byte ptr [esi]; sub eax, 1; mov dword ptr [ebx + 0x1a58], eax; add esp, 8; pop ebx; ret; 
0x0002b7ae: outsb dx, byte ptr [esi]; test dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b7b4; call dword ptr [eax + 0x68]; 
0x0018a3c7: outsb dx, byte ptr [esi]; xor bh, bh; inc dword ptr [ecx + 0x442cdc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003d85e: outsb dx, byte ptr ds:[esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00199a71: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00198b4d: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000af242: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000af4f2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000aae82: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000ab112: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0012158f: outsd dx, dword ptr [esi]; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00085b1e: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0019a2c2: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x0019a222: outsd dx, dword ptr [esi]; dec eax; ret; 
0x00196d46: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00147d53: outsd dx, dword ptr [esi]; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00147d53: outsd dx, dword ptr [esi]; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; ret; 
0x0019a5b8: outsd dx, dword ptr [esi]; jmp 0xb388b524; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0019a7b8: outsd dx, dword ptr [esi]; jmp 0xb388b724; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0019aac5: outsd dx, dword ptr [esi]; jmp 0xb388ba31; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0019ad16: outsd dx, dword ptr [esi]; jmp 0xb388bc82; insb byte ptr es:[edi], dx; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x001943d2: outsd dx, dword ptr [esi]; mov bl, 0x6c; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x0006783a: outsd dx, dword ptr [esi]; mov ebx, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x000b448d: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d5811: outsd dx, dword ptr [esi]; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00199e48: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019a2c7: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x0019a227: outsd dx, dword ptr [esi]; push edx; ret; 
0x000b6f72: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00157bc2: outsd dx, dword ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0015498e: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00156b33: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0011ac86: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00154606: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 1]; 
0x00154539: outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x000f2355: outsd dx, dword ptr [esi]; stc; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x0015cb31: outsd dx, dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x000bae21: pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000bafff: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xbb070; xor eax, eax; ret; 
0x0019e241: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x19e480; xor eax, eax; ret; 
0x000bafd1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xbb050; xor eax, eax; ret; 
0x0019fc0a: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x19fbf0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0018a21c: pcmpeqb mm2, qword ptr [ecx]; call 0x17d639; add ebx, 0x445f4; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018821c: pcmpeqb mm2, qword ptr [ecx]; call 0x17d639; add ebx, 0x46374; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d2094: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x0018c20e: pcmpeqb mm3, qword ptr [edi]; call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d207d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x000baffe: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xbb070; xor eax, eax; ret; 
0x0019e240: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x19e480; xor eax, eax; ret; 
0x000bafd0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xbb050; xor eax, eax; ret; 
0x0009f117: pcmpeqw mm1, qword ptr [ecx - 0x77]; ret; 
0x0019f936: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x0019f905: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x000b3197: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0019e6f3: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x000bac99: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bb4a4: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000baf71: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x0019ddad: pmovmskb eax, mm1; test eax, eax; jne 0x19de80; xor eax, eax; pop edi; ret; 
0x0019e245: pmovmskb eax, mm1; test eax, eax; jne 0x19e480; xor eax, eax; ret; 
0x0019e284: pmovmskb eax, mm1; test eax, eax; jne 0x19e500; xor eax, eax; ret; 
0x000bad3f: pmovmskb eax, mm1; test eax, eax; jne 0xbada0; xor eax, eax; pop edi; ret; 
0x000bad05: pmovmskb eax, mm1; test eax, eax; jne 0xbadc0; xor eax, eax; pop edi; ret; 
0x000bafd5: pmovmskb eax, mm1; test eax, eax; jne 0xbb050; xor eax, eax; ret; 
0x000bb004: pmovmskb eax, mm1; test eax, eax; jne 0xbb070; xor eax, eax; ret; 
0x0019e6f2: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x000bac98: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bb4a3: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000baf70: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0019ddac: pmovmskb eax, xmm1; test eax, eax; jne 0x19de80; xor eax, eax; pop edi; ret; 
0x0019e244: pmovmskb eax, xmm1; test eax, eax; jne 0x19e480; xor eax, eax; ret; 
0x0019e283: pmovmskb eax, xmm1; test eax, eax; jne 0x19e500; xor eax, eax; ret; 
0x000bad3e: pmovmskb eax, xmm1; test eax, eax; jne 0xbada0; xor eax, eax; pop edi; ret; 
0x000bad04: pmovmskb eax, xmm1; test eax, eax; jne 0xbadc0; xor eax, eax; pop edi; ret; 
0x000bafd4: pmovmskb eax, xmm1; test eax, eax; jne 0xbb050; xor eax, eax; ret; 
0x000bb003: pmovmskb eax, xmm1; test eax, eax; jne 0xbb070; xor eax, eax; ret; 
0x000bb30a: pmovmskb ecx, mm0; test ecx, ecx; je 0xbb320; bsf ecx, ecx; add eax, ecx; ret; 
0x000bb309: pmovmskb ecx, xmm0; test ecx, ecx; je 0xbb320; bsf ecx, ecx; add eax, ecx; ret; 
0x0018c9cb: pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009444b: pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x000c966c: pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0004df35: pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5652; 
0x000476b5: pop ds; add byte ptr [eax], al; add cl, ch; dec edx; in eax, 0xff; call dword ptr [eax + 0x31]; 
0x000c3283: pop ds; add byte ptr [eax], al; add cl, ch; xchg edx, eax; jecxz 0xc328a; call dword ptr [eax + 0x31]; 
0x0019da82: pop ds; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x0003451c: pop ds; add byte ptr [ebx + 0x1c880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0003453c: pop ds; add byte ptr [ebx + 0x9080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000344fc: pop ds; add byte ptr [ebx + 0x9880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0003311a: pop ds; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000d1d7d: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00042091: pop ds; add eax, 1; ret; 
0x00198d9d: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000fa0e5: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x000421b4: pop ds; add ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000420dd: pop ds; add edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0016df83: pop ds; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001198f6: pop ds; add esp, 0xc; ret; 
0x00040d58: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x00103761: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x000f70a0: pop ds; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0018c210: pop ds; call 0x17d639; add ebx, 0x42882; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00116050: pop ds; call dword ptr gs:[0x10]; 
0x00070238: pop ds; jmp 0x7023a; dec dword ptr [ebx - 0x4f743]; jmp dword ptr [ebp - 0x75]; 
0x0019da22: pop ds; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000b30f7: pop ds; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b479a: pop ds; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000424f6: pop ds; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x00042166: pop ds; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004252c: pop ds; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042076: pop ds; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0004247c: pop ds; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042127: pop ds; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x00091f50: pop ds; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001155fa: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00041e2d: pop ds; mov eax, 0x40; pop ebx; pop esi; sub eax, ecx; ret; 
0x00117c54: pop ds; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0003ab91: pop ds; not eax; and eax, edx; ret; 
0x0003a87c: pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0012bbbd: pop ds; or bh, cl; jmp dword ptr [ebp - 0x75]; 
0x00052122: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00052159: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00050e52: pop ds; pop ebx; pop esi; pop edi; ret; 
0x000b4b74: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0003aee0: pop ds; pop edi; ret; 
0x0017f9fb: pop ds; push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x24]; call dword ptr [eax + 0x40]; 
0x0003a57c: pop ds; ret; 
0x000bb2be: pop ds; sar eax, 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x00041cfb: pop ds; shr eax, cl; ret; 
0x0003a562: pop ds; shr ecx, 0x10; or eax, ecx; ret; 
0x0003a4fd: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x001227d8: pop ds; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000b476d: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x000be866: pop dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xf039; 
0x0010be1b: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019f90d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x0014c946: pop dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0014c93c: pop dword ptr [eax]; add byte ptr [edi], ch; je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x000d6fda: pop dword ptr [edx]; jbe 0xd6fe8; mov eax, edx; ret; 
0x0014c93b: pop dword ptr fs:[eax]; add byte ptr [edi], ch; je 0x14c9a6; mov byte ptr [ebx + 0x8f68], 0; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x00030365: pop eax; aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00152d13: pop eax; adc al, 0x89; ret; 
0x0016876b: pop eax; adc al, 0xf; xchg edx, eax; ret 0xd284; 
0x00089b0b: pop eax; adc byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x00166def: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x0007a3f0: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00079551: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0016875b: pop eax; adc byte ptr [ecx], bh; fimul word ptr [edi]; xchg edx, eax; ret 0xf339; 
0x0003195a: pop eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x00188b64: pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fa8b6: pop eax; add al, 0xf7; ret; 
0x0008630c: pop eax; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00140d0c: pop eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; js 0x140d81; stc; call dword ptr [eax - 0x18]; 
0x0004e80c: pop eax; add dword ptr [ebx + 0x390c2444], ecx; ret; 
0x000c666f: pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0002c928: pop eax; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x00062d26: pop eax; add ecx, ebp; ret; 
0x00118fcf: pop eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00117f60: pop eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00102dc0: pop eax; add esp, 0x28; pop ebx; ret; 
0x000f4802: pop eax; and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x0018b5dd: pop eax; and bh, bh; inc dword ptr [ecx + 0x430b7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a922b: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000c425e: pop eax; and dword ptr [eax], eax; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x8e; ret 0xf; 
0x0016c27c: pop eax; bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0014e634: pop eax; dec ebx; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x0014cb6c: pop eax; dec esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x000dd843: pop eax; hlt; inc dword ptr [ebx + 0xb910c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdb8c], cl; ret 0x448b; 
0x000a57d4: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000e23dc: pop eax; insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0008cd4b: pop eax; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00160413: pop eax; jb 0x16040f; call dword ptr [eax + 0x6a]; 
0x00160520: pop eax; jb 0x16051c; call dword ptr [eax - 0x18]; 
0x0016085b: pop eax; jb 0x160857; call dword ptr [eax - 0x18]; 
0x0005ceb4: pop eax; jl 0x5ceb4; call dword ptr [ebx + 0x50]; 
0x00025755: pop eax; jle 0x25751; call dword ptr [eax - 0x18]; 
0x000ba4d3: pop eax; jnp 0x5b17c91e; pop esi; ret; 
0x000b7050: pop eax; jnp 0x5e13949b; ret; 
0x000bb327: pop eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x001303ed: pop eax; mov bh, 0xf9; call dword ptr [eax + 0x6a]; 
0x00057f58: pop eax; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0012ee61: pop eax; mov dh, 0xf9; call dword ptr [eax - 0x18]; 
0x00076315: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x00082f21: pop eax; mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x00128494: pop eax; mov dword ptr [esp + 0x20], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129579: pop eax; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0003c198: pop eax; mov eax, 0x77; int 0x80; 
0x000f26ee: pop eax; mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0016c55f: pop eax; mov eax, dword ptr [ebp + 0x3c]; pop edx; push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x00164af5: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00080c51: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00080b21: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0002dc23: pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000bbc9c: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000f2839: pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x0005762e: pop eax; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000351f2: pop eax; or byte ptr [ebx - 0x137c67bb], cl; or byte ptr [ebp - 0x6c22a80], cl; call dword ptr [eax + 0x53]; 
0x0007ae1f: pop eax; or byte ptr [ecx + 0x20588910], cl; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0007ae4f: pop eax; or byte ptr [ecx + 0x20588910], cl; mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00050e4a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x000d1e47: pop eax; pop edi; pop esi; ret; 
0x0016acdf: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00164acc: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00165186: pop eax; pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00165be9: pop eax; pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016528c: pop eax; pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000ba4b3: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7030: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000381ae: pop eax; push dword ptr [ebx + 0x12ac]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0002dc1f: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x001581cb: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000284de: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d45: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x000d5215: pop eax; push ebp; stc; call dword ptr [eax + 0x56]; 
0x001581cf: pop eax; push esi; call edi; 
0x0012b301: pop eax; ret; 
0x000801a2: pop eax; stc; call dword ptr [eax - 0x18]; 
0x00104dad: pop eax; stc; call dword ptr [eax - 0x18]; push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x00104995: pop eax; stc; call dword ptr [eax - 0x18]; xor bl, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0010742b: pop eax; stc; call dword ptr [eax - 0x73]; 
0x00024ee5: pop eax; xchg dword ptr [0xbf4b0500], edx; and byte ptr [eax], al; lea eax, [eax - 0x681f0]; ret; 
0x000b6d1e: pop eax; xchg edx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001664c2: pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000415e6: pop eax; xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00188624: pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00058537: pop ebp; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0011b0c1: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00151b18: pop ebp; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x00121a6a: pop ebp; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000e1c7f: pop ebp; dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000768a4: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x001732d0: pop ebp; jb 0x1732cc; call dword ptr [eax + 0x6a]; 
0x00173e78: pop ebp; jb 0x173e74; call dword ptr [eax + 0x6a]; 
0x00173f24: pop ebp; jb 0x173f20; call dword ptr [eax + 0x6a]; 
0x0017d633: pop ebp; jmp 0x17d490; mov ebx, dword ptr [esp]; ret; 
0x00025113: pop ebp; jmp eax; 
0x00033b4b: pop ebp; mov eax, ecx; ret; 
0x0015f448: pop ebp; mov eax, edx; ret; 
0x000f3405: pop ebp; neg eax; ret; 
0x0003ae6d: pop ebp; not eax; and eax, edx; ret; 
0x00092639: pop ebp; or al, 0xf6; ret 0x7502; 
0x0007406e: pop ebp; or byte ptr [ecx], bh; ret; 
0x0014fadf: pop ebp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000bc10d: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x00198eeb: pop ebp; pop ebx; ret; 
0x001990c5: pop ebp; pop ebx; xor eax, eax; ret; 
0x00117c62: pop ebp; pop edi; pop ebx; ret; 
0x000506f8: pop ebp; pop esi; pop edi; ret; 
0x0017e48f: pop ebp; push esi; sti; jmp dword ptr [esi - 0x70]; 
0x00066daf: pop ebp; ret 0xfffb; 
0x0003b1b7: pop ebp; ret 4; 
0x00023463: pop ebp; ret; 
0x000a6d99: pop ebp; rol byte ptr [ecx], 1; ret; 
0x0011d1fe: pop ebp; stc; call dword ptr [eax + 0x55]; 
0x00194183: pop ebp; xor eax, eax; ret; 
0x001901da: pop ebx; aam 0xfe; inc dword ptr [ecx + 0x3eb7ac3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012b2db: pop ebx; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000253e0: pop ebx; adc edx, 0; neg edx; ret; 
0x0018882b: pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00104011: pop ebx; add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000ba901: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0016e430: pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x0016e4c0: pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x0004229f: pop ebx; add eax, 1; pop esi; pop edi; ret; 
0x0011e947: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000bb290: pop ebx; cmovb eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000a2898: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a2884: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000f268b: pop ebx; cmove eax, edx; ret; 
0x00040deb: pop ebx; cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000f26a2: pop ebx; cmp dword ptr [ecx + eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000e2e59: pop ebx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003f6e6: pop ebx; cmp eax, 0xfffff001; jae 0x24e60; xor eax, eax; ret; 
0x00124595: pop ebx; jl 0x24e60; ret; 
0x00030ebe: pop ebx; jmp 0x32650; lea esi, [esi]; pop ebx; ret; 
0x0008c839: pop ebx; jmp 0x8bcd0; nop; mov eax, 0x16; pop ebx; ret; 
0x0017fe5c: pop ebx; jmp 0x8ee70; lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x0008f009: pop ebx; jmp 0x8ee70; nop; mov eax, 0x16; pop ebx; ret; 
0x000f2724: pop ebx; jmp 0xf2280; lea esi, [esi]; mov eax, 0xfffa; pop ebx; ret; 
0x00076467: pop ebx; jmp eax; 
0x00076467: pop ebx; jmp eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0019efd4: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x00094f4f: pop ebx; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0019e674: pop ebx; lea eax, [ecx + 9]; ret; 
0x00079ee7: pop ebx; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0019dfb4: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x0009202f: pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00089f4b: pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00058009: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00199a1f: pop ebx; mov eax, 1; ja 0x199a29; neg eax; ret; 
0x0019a506: pop ebx; mov eax, 1; ja 0x19a510; neg eax; ret; 
0x0019cd70: pop ebx; mov eax, 1; ja 0x19cd7a; neg eax; ret; 
0x0019b6b0: pop ebx; mov eax, 1; jg 0x19b6c0; neg eax; ret; 
0x0019f7b0: pop ebx; mov eax, 1; jg 0x19f7c0; neg eax; ret; 
0x00050c6f: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00103480: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0016d761: pop ebx; mov eax, dword ptr [0xec83fff7]; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x000878b0: pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00170fdf: pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0017103c: pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0007b6e3: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0007b583: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0007b734: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0008335d: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00034c65: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000624b6: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0012d22d: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0003330e: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00030605: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000507a0: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000330e3: pop ebx; mov eax, edx; ret; 
0x0003a8ae: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x00038291: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00040e2a: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x00083ef6: pop ebx; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x001861d1: pop ebx; movzx eax, al; neg eax; ret; 
0x00144898: pop ebx; movzx eax, al; ret; 
0x0017f390: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0008e26e: pop ebx; neg eax; pop esi; pop edi; ret; 
0x00082f6a: pop ebx; neg eax; ret; 
0x000df687: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00093bd2: pop ebx; neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x000b2ca1: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014d002: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x000506f7: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00194182: pop ebx; pop ebp; xor eax, eax; ret; 
0x0012b2da: pop ebx; pop ebx; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0010d88d: pop ebx; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0003c5de: pop ebx; pop edi; ret; 
0x00119b5a: pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x00151c94: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000bfd50: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x00116aee: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0014ae4f: pop ebx; pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x0007cf49: pop ebx; pop esi; jmp eax; 
0x00094f10: pop ebx; pop esi; lea eax, [eax + eax - 1]; pop edi; pop ebp; ret; 
0x00096f07: pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3b88], ecx; ret; 
0x0003d83a: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00079565: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000421b8: pop ebx; pop esi; mov eax, ecx; ret; 
0x000332da: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00077ee6: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000a5762: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000420e1: pop ebx; pop esi; mov eax, edx; ret; 
0x00058029: pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x0012ce84: pop ebx; pop esi; neg eax; ret; 
0x001224e2: pop ebx; pop esi; pop ebp; ret; 
0x0010b713: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003a6a4: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0017a3ff: pop ebx; pop esi; pop edi; jmp eax; 
0x0015e7cf: pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x000286d1: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0005e65c: pop ebx; pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x0003b1b4: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00023460: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00134a4d: pop ebx; pop esi; pop edi; ret 4; 
0x000255f6: pop ebx; pop esi; pop edi; ret; 
0x000baa70: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x0003fc2d: pop ebx; pop esi; ret 4; 
0x00024c18: pop ebx; pop esi; ret; 
0x0002507b: pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000f33eb: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x00050731: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0011f575: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x000913b1: pop ebx; pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003aedc: pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x000baa19: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x00041e33: pop ebx; pop esi; sub eax, ecx; ret; 
0x000844d4: pop ebx; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x000896b0: pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x00042503: pop ebx; pop esi; xor eax, 0x1f; ret; 
0x0019d5d0: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x000b9f9b: pop ebx; pushal; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00052758: pop ebx; ret 4; 
0x0002456f: pop ebx; ret; 
0x0003a879: pop ebx; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00079f22: pop ebx; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00042433: pop ebx; setb al; ret; 
0x0012451c: pop ebx; setg al; pop esi; pop edi; ret; 
0x0011cdfa: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x00125550: pop ebx; shr eax, cl; and eax, 3; ret; 
0x0011d126: pop ebx; stc; call dword ptr [eax + 0x55]; 
0x0016e3a0: pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x000bf04e: pop ebx; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00041f98: pop ebx; sub eax, edx; ret; 
0x00119940: pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000e8993: pop ebx; test al, al; mov eax, 0; cmove edx, eax; mov eax, edx; ret; 
0x00124376: pop ebx; test eax, eax; jl 0x24e60; je 0x124382; ret; 
0x0016a991: pop ebx; xchg ecx, eax; cld; jmp dword ptr [esi - 0x70]; 
0x00070195: pop ebx; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; call ecx; 
0x0003f759: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x000422b0: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019682e: pop ebx; xor eax, eax; ret; 
0x000567c3: pop ecx; aad 0xfd; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0009b3b7: pop ecx; adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000ba714: pop ecx; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013b6c8: pop ecx; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x0018c4dc: pop ecx; adc edi, edi; inc dword ptr [ecx + 0x424f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00188acb: pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009df63: pop ecx; add al, 0xf6; ret; 
0x00144869: pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0008578d: pop ecx; add dword ptr [eax + 0x56], edx; call dword ptr [edi + 0xc]; 
0x00094bf1: pop ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x17a8f314], al; xor ah, byte ptr [eax - 0x3b7cfff8]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x000a8ba5: pop ecx; add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000c356a: pop ecx; add eax, 0x8d500000; xchg byte ptr [edi], dh; aas; stc; call dword ptr [eax - 0x18]; 
0x000478b9: pop ecx; add eax, 0x8d500000; xchg dword ptr [edi], esi; aas; stc; call dword ptr [eax - 0x18]; 
0x0003fd01: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x001580c6: pop ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001881c1: pop ecx; bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001325dc: pop ecx; call 0xec9625f1; sbb byte ptr [ebp - 0x6992880], cl; call dword ptr [eax - 0x18]; 
0x0007e529: pop ecx; cli; jmp dword ptr [esi - 0x70]; 
0x00058f2b: pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x001381a7: pop ecx; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00104e40: pop ecx; mov eax, 0xbe; int 0x80; 
0x0009f7a2: pop ecx; or dh, dh; ret; 
0x0012b300: pop ecx; pop eax; ret; 
0x0014c0e6: pop ecx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0003be0c: pop ecx; pop edx; ret; 
0x00163e3c: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000bca5b: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00180283: pop ecx; ret; 
0x0011ada0: pop ecx; stc; call dword ptr [eax + 0x50]; 
0x0010a6dc: pop ecx; stc; call dword ptr [eax + 0x53]; 
0x0013057f: pop ecx; stc; call dword ptr [eax + 0x57]; 
0x00107db1: pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x0010957b: pop ecx; stc; call dword ptr [eax - 0x18]; 
0x001098e8: pop ecx; stc; call dword ptr [eax - 0x18]; das; movsb byte ptr es:[edi], byte ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x0011a047: pop ecx; stc; call dword ptr [eax - 1]; 
0x0016b57e: pop ecx; stc; call dword ptr [edi + 0x56]; 
0x0011ad46: pop ecx; stc; call dword ptr [edx - 0x77]; 
0x0011f008: pop ecx; stc; jmp dword ptr [ebp - 0x5f]; 
0x000ba126: pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba01f: pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f9c5a: pop edi; add al, 0x7c; ret 0x9066; 
0x0009039d: pop edi; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor ecx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x0008a895: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000b479d: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000c3405: pop edi; add eax, 0x8d500000; xchg ah, dl; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0004779a: pop edi; add eax, 0x8d500000; xchg esp, edx; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0018e7b1: pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000503bc: pop edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d41d3: pop edi; add esp, 0x24; pop ebx; pop esi; ret; 
0x001906f3: pop edi; call 0x17d639; add ebx, 0x3e81f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905e9: pop edi; call 0x17d639; add ebx, 0x3e929; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001904e2: pop edi; call 0x17d639; add ebx, 0x3ea30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f6f3: pop edi; call 0x17d639; add ebx, 0x3f65f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f5e9: pop edi; call 0x17d639; add ebx, 0x3f769; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f4e2: pop edi; call 0x17d639; add ebx, 0x3f870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e713: pop edi; call 0x17d639; add ebx, 0x4047f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e609: pop edi; call 0x17d639; add ebx, 0x40589; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e502: pop edi; call 0x17d639; add ebx, 0x40690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e2e6: pop edi; call 0x17d639; add ebx, 0x407ec; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d999: pop edi; call 0x17d639; add ebx, 0x40f79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d97b: pop edi; call 0x17d639; add ebx, 0x40f97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d8e2: pop edi; call 0x17d639; add ebx, 0x41030; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d81b: pop edi; call 0x17d639; add ebx, 0x410f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d782: pop edi; call 0x17d639; add ebx, 0x41190; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d6bb: pop edi; call 0x17d639; add ebx, 0x41257; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d622: pop edi; call 0x17d639; add ebx, 0x412f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d55b: pop edi; call 0x17d639; add ebx, 0x413b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d4c2: pop edi; call 0x17d639; add ebx, 0x41450; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d3fb: pop edi; call 0x17d639; add ebx, 0x41517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d362: pop edi; call 0x17d639; add ebx, 0x415b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d29b: pop edi; call 0x17d639; add ebx, 0x41677; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d202: pop edi; call 0x17d639; add ebx, 0x41710; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d13b: pop edi; call 0x17d639; add ebx, 0x417d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d0a2: pop edi; call 0x17d639; add ebx, 0x41870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cfdb: pop edi; call 0x17d639; add ebx, 0x41937; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cf42: pop edi; call 0x17d639; add ebx, 0x419d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ce7b: pop edi; call 0x17d639; add ebx, 0x41a97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cde2: pop edi; call 0x17d639; add ebx, 0x41b30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cd1b: pop edi; call 0x17d639; add ebx, 0x41bf7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cc82: pop edi; call 0x17d639; add ebx, 0x41c90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cbbb: pop edi; call 0x17d639; add ebx, 0x41d57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cb22: pop edi; call 0x17d639; add ebx, 0x41df0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ca5b: pop edi; call 0x17d639; add ebx, 0x41eb7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c9c2: pop edi; call 0x17d639; add ebx, 0x41f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c8fb: pop edi; call 0x17d639; add ebx, 0x42017; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c862: pop edi; call 0x17d639; add ebx, 0x420b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c79b: pop edi; call 0x17d639; add ebx, 0x42177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c702: pop edi; call 0x17d639; add ebx, 0x42210; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c63b: pop edi; call 0x17d639; add ebx, 0x422d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c5a2: pop edi; call 0x17d639; add ebx, 0x42370; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c2cf: pop edi; call 0x17d639; add ebx, 0x42703; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b899: pop edi; call 0x17d639; add ebx, 0x42df9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b87b: pop edi; call 0x17d639; add ebx, 0x42e17; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b7e2: pop edi; call 0x17d639; add ebx, 0x42eb0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b72b: pop edi; call 0x17d639; add ebx, 0x42f67; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b692: pop edi; call 0x17d639; add ebx, 0x43000; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b5db: pop edi; call 0x17d639; add ebx, 0x430b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b542: pop edi; call 0x17d639; add ebx, 0x43150; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b48b: pop edi; call 0x17d639; add ebx, 0x43207; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b3f2: pop edi; call 0x17d639; add ebx, 0x432a0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b33b: pop edi; call 0x17d639; add ebx, 0x43357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b2a2: pop edi; call 0x17d639; add ebx, 0x433f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b1eb: pop edi; call 0x17d639; add ebx, 0x434a7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b152: pop edi; call 0x17d639; add ebx, 0x43540; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b09b: pop edi; call 0x17d639; add ebx, 0x435f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b002: pop edi; call 0x17d639; add ebx, 0x43690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018af4b: pop edi; call 0x17d639; add ebx, 0x43747; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aeb2: pop edi; call 0x17d639; add ebx, 0x437e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018adfb: pop edi; call 0x17d639; add ebx, 0x43897; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ad62: pop edi; call 0x17d639; add ebx, 0x43930; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018acab: pop edi; call 0x17d639; add ebx, 0x439e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ac12: pop edi; call 0x17d639; add ebx, 0x43a80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ab5b: pop edi; call 0x17d639; add ebx, 0x43b37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aac2: pop edi; call 0x17d639; add ebx, 0x43bd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa0b: pop edi; call 0x17d639; add ebx, 0x43c87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a972: pop edi; call 0x17d639; add ebx, 0x43d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a8bb: pop edi; call 0x17d639; add ebx, 0x43dd7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a822: pop edi; call 0x17d639; add ebx, 0x43e70; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a76b: pop edi; call 0x17d639; add ebx, 0x43f27; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a6d2: pop edi; call 0x17d639; add ebx, 0x43fc0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a61b: pop edi; call 0x17d639; add ebx, 0x44077; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a582: pop edi; call 0x17d639; add ebx, 0x44110; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a2bf: pop edi; call 0x17d639; add ebx, 0x44493; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189899: pop edi; call 0x17d639; add ebx, 0x44b79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018987b: pop edi; call 0x17d639; add ebx, 0x44b97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001897e2: pop edi; call 0x17d639; add ebx, 0x44c30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018972b: pop edi; call 0x17d639; add ebx, 0x44ce7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189692: pop edi; call 0x17d639; add ebx, 0x44d80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001895db: pop edi; call 0x17d639; add ebx, 0x44e37; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189542: pop edi; call 0x17d639; add ebx, 0x44ed0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018948b: pop edi; call 0x17d639; add ebx, 0x44f87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001893f2: pop edi; call 0x17d639; add ebx, 0x45020; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018933b: pop edi; call 0x17d639; add ebx, 0x450d7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001892a2: pop edi; call 0x17d639; add ebx, 0x45170; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001891eb: pop edi; call 0x17d639; add ebx, 0x45227; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189152: pop edi; call 0x17d639; add ebx, 0x452c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018909b: pop edi; call 0x17d639; add ebx, 0x45377; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189002: pop edi; call 0x17d639; add ebx, 0x45410; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188f4b: pop edi; call 0x17d639; add ebx, 0x454c7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188eb2: pop edi; call 0x17d639; add ebx, 0x45560; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188dfb: pop edi; call 0x17d639; add ebx, 0x45617; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188d62: pop edi; call 0x17d639; add ebx, 0x456b0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188cab: pop edi; call 0x17d639; add ebx, 0x45767; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188c12: pop edi; call 0x17d639; add ebx, 0x45800; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188b5b: pop edi; call 0x17d639; add ebx, 0x458b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188ac2: pop edi; call 0x17d639; add ebx, 0x45950; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188a0b: pop edi; call 0x17d639; add ebx, 0x45a07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188972: pop edi; call 0x17d639; add ebx, 0x45aa0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001888bb: pop edi; call 0x17d639; add ebx, 0x45b57; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188822: pop edi; call 0x17d639; add ebx, 0x45bf0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018876b: pop edi; call 0x17d639; add ebx, 0x45ca7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001886d2: pop edi; call 0x17d639; add ebx, 0x45d40; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018861b: pop edi; call 0x17d639; add ebx, 0x45df7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188582: pop edi; call 0x17d639; add ebx, 0x45e90; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001882bf: pop edi; call 0x17d639; add ebx, 0x46213; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00095f7b: pop edi; cli; jmp dword ptr [esi - 0x70]; 
0x000a3221: pop edi; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00116068: pop edi; cmova eax, edx; ret; 
0x000bfd32: pop edi; cmovg eax, edx; ret; 
0x0010b715: pop edi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x00131784: pop edi; fdivr qword ptr [ecx]; ret; 
0x0003a6a6: pop edi; fsubp st(1); ret; 
0x0014b549: pop edi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x000b4a60: pop edi; jge 0x5e6a61ae; pop ebx; ret; 
0x0007b588: pop edi; jmp eax; 
0x000b3380: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0012ba98: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0012b958: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0012b6d8: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0012b818: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0012b458: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0012b778: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0012b4f8: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0012b598: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0012b8b8: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0012b3b8: pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0019021c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00187010: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0015e7d1: pop edi; mov eax, edx; ret; 
0x00117920: pop edi; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012b9f8: pop edi; mov edx, dword ptr [ecx + edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x000b4243: pop edi; mov esp, 0xc030010; cdq; jmp ecx; 
0x0011cdff: pop edi; movzx eax, al; ret; 
0x0012c37d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x0012c2fd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012c27d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x0012c07d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x0012c17d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0012be7d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x0012c0fd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x0012befd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0012bf7d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x0012c1fd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x0012bdfd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x0019845d: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0009cb15: pop edi; or al, 0x89; ret; 
0x00093740: pop edi; or al, 0xf6; ret 0x7502; 
0x0012d229: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x00073d5e: pop edi; or byte ptr [ecx], bh; ret; 
0x00121a69: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0017d632: pop edi; pop ebp; jmp 0x17d490; mov ebx, dword ptr [esp]; ret; 
0x00025112: pop edi; pop ebp; jmp eax; 
0x00033b4a: pop edi; pop ebp; mov eax, ecx; ret; 
0x0015f447: pop edi; pop ebp; mov eax, edx; ret; 
0x000f3404: pop edi; pop ebp; neg eax; ret; 
0x0003ae6c: pop edi; pop ebp; not eax; and eax, edx; ret; 
0x0019adc2: pop edi; pop ebp; pop ebx; ret; 
0x001990c4: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003b1b6: pop edi; pop ebp; ret 4; 
0x00023462: pop edi; pop ebp; ret; 
0x00194181: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x000ac982: pop edi; pop ebx; ret; 
0x000b2c40: pop edi; pop esi; pop ebx; ret; 
0x000a983e: pop edi; pop esi; ret; 
0x000b3360: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0010e12d: pop edi; push eax; int1; jmp dword ptr [ebp - 0x75]; 
0x0009e19b: pop edi; push edx; stc; call dword ptr [eax - 0x18]; 
0x000b2a63: pop edi; rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2be3: pop edi; rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00134a4f: pop edi; ret 4; 
0x000255f8: pop edi; ret; 
0x0011d321: pop edi; stc; call dword ptr [eax + 0x55]; 
0x0011d2eb: pop edi; stc; call dword ptr [ecx + 0x51]; 
0x0011d305: pop edi; stc; call dword ptr [edx + 0x52]; 
0x0015f712: pop edi; sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x0018f6fb: pop edi; test byte ptr [ebx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002b6bd: pop edi; xchg byte ptr [eax], al; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00199851: pop edi; xor eax, eax; pop ebp; ret; 
0x000baa72: pop edi; xor eax, eax; ret; 
0x00169952: pop edx; aam 0xff; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0003fb99: pop edx; adc al, 0x5b; pop esi; pop edi; ret; 
0x0007a5d4: pop edx; adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x0018897b: pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e690e: pop edx; add al, 0x83; ret 0x8301; 
0x001a5e3b: pop edx; add al, 0x83; ret 0xc104; 
0x000a59e6: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0007a3ed: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0014486f: pop edx; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000cca5a: pop edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0011ef5e: pop edx; add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x001375da: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0003f9ed: pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x00040bf5: pop edx; add dword ptr [ecx + 0x245489e8], ecx; adc byte ptr [ebx - 0x50f0fb14], al; ret; 
0x000f484a: pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000523f6: pop edx; call ebx; 
0x0005d76b: pop edx; cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013939b: pop edx; cmp al, 0xf9; call dword ptr [eax + 0x55]; 
0x0010b60f: pop edx; cmp al, 0xf9; call dword ptr [eax + 0x56]; 
0x001059b5: pop edx; cmp al, 0xf9; call dword ptr [eax - 0x18]; 
0x00132291: pop edx; cmp al, 0xf9; call dword ptr [eax - 0x73]; 
0x000fe0bd: pop edx; cmp al, 0xf9; dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x0003f558: pop edx; cmp al, 0xf9; dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0003f342: pop edx; cmp al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0x77e9; 
0x0014fd9b: pop edx; cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0011f170: pop edx; cmp al, 0xf9; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0003f432: pop edx; cmp al, 0xf9; inc dword ptr [ebp - 0x277af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x0003f3f2: pop edx; cmp al, 0xf9; inc dword ptr [ebp - 0x767af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x00087a95: pop edx; cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [eax + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00087a21: pop edx; cmp al, 0xf9; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [edi + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000a5da9: pop edx; idiv bh; and ch, 2; lea edx, [edx - 0x1757c4]; cmove eax, edx; ret; 
0x000a5de9: pop edx; idiv bh; and ch, 2; lea edx, [edx - 0x175834]; cmove eax, edx; ret; 
0x0015d715: pop edx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0014d745: pop edx; in eax, dx; jmp dword ptr [ebp - 0x75]; 
0x000a232c: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x0006c40e: pop edx; ja 0x6b829; movzx eax, byte ptr [edx + esi - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x00060b21: pop edx; jbe 0x61b9f; jmp eax; 
0x0006c137: pop edx; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x000a088c: pop edx; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0019a4d4: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x19a4f0; pop ebx; ret; 
0x0009b61a: pop edx; or al, 0x89; ret 0xca83; 
0x00057657: pop edx; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0009d66a: pop edx; or dh, dh; ret; 
0x0009fb2d: pop edx; pop ebx; pop esi; ret; 
0x0012b2ff: pop edx; pop ecx; pop eax; ret; 
0x00163e3b: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000bca5a: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00111d43: pop edx; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000be083: pop edx; pop es; add byte ptr [ebx - 0x72e3dbac], cl; sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x0011d424: pop edx; popal; stc; call dword ptr [eax + 0x55]; 
0x0016ace0: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00164acd: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0016c563: pop edx; push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x00165187: pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00165bea: pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00164af9: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0016528d: pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0003be0d: pop edx; ret; 
0x0011d10b: pop edx; stc; call dword ptr [eax + 0x55]; 
0x0011b9e3: pop edx; stc; call dword ptr [eax - 0x18]; 
0x0011b9e3: pop edx; stc; call dword ptr [eax - 0x18]; xor al, 0x83; int1; jmp dword ptr [esi - 0x70]; 
0x0011c873: pop edx; stc; call dword ptr [eax - 0x39]; 
0x0011ba24: pop edx; stc; call dword ptr [eax - 0x73]; 
0x000f2c4a: pop edx; stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011bf79: pop edx; stc; jmp dword ptr [ebp - 0x75]; 
0x0017e039: pop edx; sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x000bad45: pop edx; xor eax, eax; pop edi; ret; 
0x00047992: pop es; aas; stc; call dword ptr [eax - 0x18]; 
0x0003cf16: pop es; adc al, 0; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef6: pop es; adc al, 0; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x0018e2ef: pop es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e45c: pop es; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0018e95f: pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ca59: pop es; add al, 0x5f; call 0x17d639; add ebx, 0x41eb7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa09: pop es; add al, 0x5f; call 0x17d639; add ebx, 0x43c87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188a09: pop es; add al, 0x5f; call 0x17d639; add ebx, 0x45a07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e83f: pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0008ac2f: pop es; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073cc9: pop es; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00091065: pop es; add byte ptr [eax], al; add byte ptr [ecx + 0x45789fb], cl; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x000917c1: pop es; add byte ptr [eax], al; add byte ptr [ecx - 0x2dcefbad], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x0011eedc: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00047afd: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019da72: pop es; add byte ptr [eax], al; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00199d7a: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x000b2e1b: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bda02: pop es; add byte ptr [ebp - 0x6556b79], cl; call dword ptr [eax - 0x73]; 
0x000bd76d: pop es; add byte ptr [ebp - 0x655777b], cl; call dword ptr [eax - 0x73]; 
0x0004053d: pop es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c34ed: pop es; add byte ptr [ebx - 0x72cbdb8c], cl; xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x000c03f6: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0092: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000be084: pop es; add byte ptr [ebx - 0x72e3dbac], cl; sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x00081d88: pop es; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x0002342e: pop es; add byte ptr [ecx - 0x7872dbfc], cl; xchg edx, eax; je 0x23431; call dword ptr [esi + 0x53]; 
0x000e7e07: pop es; add dword ptr [ecx], eax; ret; 
0x0018e7af: pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00076e79: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0018e9ef: pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0018e8cf: pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000b4d70: pop es; add edi, 0x10; call 0x17d651; add ecx, 0x10b1b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d54: pop es; add edi, 0x10; call 0x17d651; add ecx, 0x10b1d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b3670: pop es; add edi, 0x10; call 0x17d651; add ecx, 0x10c757; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00126f4e: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008c8c1: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d71de: pop es; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0011b394: pop es; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e0b61: pop es; add esp, 0x38; mov eax, edx; pop ebx; ret; 
0x0012793e: pop es; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0003d4a1: pop es; add esp, 0x9c; ret; 
0x0009ab28: pop es; add esp, 8; pop ebx; ret; 
0x00163349: pop es; call 0x14bb50; add esp, 0x1c; ret; 
0x00163368: pop es; call 0x14bc20; add esp, 0x1c; ret; 
0x000b210f: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000adba5: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0010cfd5: pop es; idiv dl; jmp dword ptr [esi + 3]; 
0x00172175: pop es; into; lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0019dfa2: pop es; jb 0x19e010; lea eax, [edi + 6]; pop edi; ret; 
0x0019efc2: pop es; jb 0x19f030; lea eax, [eax + 6]; pop edi; ret; 
0x000ec0b5: pop es; jg 0xec0b3; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0019e662: pop es; jl 0x19e6d0; lea eax, [ecx + 7]; ret; 
0x0019da12: pop es; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x000acd41: pop es; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad141: pop es; jne 0xacfe1; pop ebx; ret; 
0x000b15c2: pop es; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b2d1f: pop es; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4362: pop es; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4987: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000b48ed: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000b4971: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000b4897: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x0019fba8: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x000af31d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af45d: pop es; lea eax, [edx + 0xa]; ret; 
0x000b2034: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000af381: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4e1: pop es; lea eax, [edx + 0xe]; ret; 
0x000acd3e: pop es; lea ecx, [edx + 7]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad13e: pop es; lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x0018ef8f: pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0018d979: pop es; maxps xmm5, xmm0; mov eax, 0x81fffefc; ret; 
0x0018b879: pop es; maxps xmm5, xmm0; mov eax, 0x81ffff1d; ret; 
0x00189879: pop es; maxps xmm5, xmm0; mov eax, 0x81ffff3d; ret; 
0x000bc7b7: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xbc7b8; pop esi; ret; 
0x000b32ba: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000b31ca: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000b331a: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b32fa: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000b320a: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000b322a: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000949ea: pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000b3b8c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b3cec: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b96fd: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b254c: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b26ac: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0005cdb2: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00179085: pop es; mov eax, dword ptr [0xc483ffea]; adc byte ptr [ebx - 0x7c72f714], al; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x50]; 
0x000a32b9: pop es; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x000a3289: pop es; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000ba350: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6edd: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00099d60: pop es; mov eax, ecx; pop ebx; ret; 
0x000b9700: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000aaf3d: pop es; mov eax, edi; pop edi; ret; 
0x000adb64: pop es; mov eax, edx; pop ebx; ret; 
0x000ab07d: pop es; mov eax, edx; ret; 
0x000b32db: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000b31eb: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000b349c: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b343c: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b345c: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b347c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b6ed6: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6f58: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b339c: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b335c: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b337c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000b35a3: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b324c: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b35b3: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b326c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b328c: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000b3c0c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b3d6c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b977f: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25cc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b272c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000af316: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000af456: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aaf36: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ab076: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000af378: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000af4d8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000aaf98: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000adb5b: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000ab0f8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00149815: pop es; movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00171fb7: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x00115255: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x0014483d: pop es; movzx eax, ax; add esp, 0x2c; ret; 
0x00194020: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00192873: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0018eddf: pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d559: pop es; or al, 0x5f; call 0x17d639; add ebx, 0x413b7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b489: pop es; or al, 0x5f; call 0x17d639; add ebx, 0x43207; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189489: pop es; or al, 0x5f; call 0x17d639; add ebx, 0x44f87; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ecbf: pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0018eb9f: pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00188f49: pop es; or byte ptr [edi - 0x18], bl; call 0x82188e98; ret; 
0x0018af49: pop es; or byte ptr [edi - 0x18], bl; call 0x8218ae78; ret; 
0x000bc859: pop es; or dword ptr [eax + 0x3c70], 1; xor eax, eax; pop ebx; ret; 
0x0018ec2f: pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0018ee6f: pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0018ed4f: pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00050e49: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00129118: pop es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00082f08: pop es; pop ebx; pop esi; pop edi; ret; 
0x000a598f: pop es; pop ebx; pop esi; ret; 
0x000acf06: pop es; pop ebx; ret; 
0x0018eb10: pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ce7a: pop es; pop edi; call 0x17d639; add ebx, 0x41a97; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018adfa: pop es; pop edi; call 0x17d639; add ebx, 0x43897; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188dfa: pop es; pop edi; call 0x17d639; add ebx, 0x45617; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018700f: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b31b7: pop es; pop edi; pop esi; pop ebx; ret; 
0x000af1ca: pop es; pop edi; ret; 
0x00188a13: pop es; pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018eb0f: pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f24a: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018eeff: pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018ea7f: pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a24fb: pop es; ret; 
0x001326bc: pop es; sar eax, 5; add esp, 0xc; ret; 
0x00149315: pop es; stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00194024: pop es; sub eax, ecx; pop ebp; ret; 
0x00192877: pop es; sub eax, ecx; ret; 
0x000b15ea: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb1431; pop ebx; ret; 
0x00096a15: pop es; test bh, bh; jmp dword ptr [esi - 0x70]; 
0x0018b493: pop es; xor al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000924ac: pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015133a: pop es; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00092019: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000944f8: pop es; xor eax, eax; ret; 
0x0018c3d7: pop esi; adc bh, bh; inc dword ptr [ecx + 0x4253dc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ba17a: pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba108: pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c3491: pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00047968: pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0018858b: pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00119b0f: pop esi; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0014cade: pop esi; add byte ptr [eax], al; add bh, al; sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0014cae5: pop esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002a087: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x3a], ecx; stc; call dword ptr [eax - 0x18]; 
0x00029459: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5c579], cl; call dword ptr [eax - 0x73]; 
0x00028ef7: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c5c57a], cl; call dword ptr [eax - 0x73]; 
0x00119b5b: pop esi; add eax, ecx; adc edx, 0; ret; 
0x000f3400: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x00151c95: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x001233ee: pop esi; arpl cx, di; call dword ptr [eax + 0x56]; 
0x00156a67: pop esi; bnd call dword ptr [eax - 0x18]; 
0x000baa52: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x001913ec: pop esi; call 0x17d639; add ebx, 0x3dc26; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00033b46: pop esi; cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x000bfd51: pop esi; cmovg eax, edx; pop edi; ret; 
0x0009b654: pop esi; cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0003289e: pop esi; cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x11e1], dl; lea eax, [eax + 0x11ac]; ret; 
0x00116aef: pop esi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0014ae50: pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x001290eb: pop esi; inc ebp; add eax, 0x45c58100; jge 0x129104; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0007cf4a: pop esi; jmp eax; 
0x00094f11: pop esi; lea eax, [eax + eax - 1]; pop edi; pop ebp; ret; 
0x0019fb4e: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00096f08: pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3b88], ecx; ret; 
0x0003d83b: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00079566: pop esi; mov eax, ecx; pop edi; ret; 
0x000421b9: pop esi; mov eax, ecx; ret; 
0x000332db: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00077ee7: pop esi; mov eax, edi; pop edi; ret; 
0x000a5763: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000420e2: pop esi; mov eax, edx; ret; 
0x00129571: pop esi; mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0005802a: pop esi; movzx eax, al; pop edi; ret; 
0x000bfd2d: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0012ce85: pop esi; neg eax; ret; 
0x001993ad: pop esi; pop ebp; pop ebx; ret; 
0x0019938e: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x001224e3: pop esi; pop ebp; ret; 
0x00124594: pop esi; pop ebx; jl 0x24e60; ret; 
0x000b2c41: pop esi; pop ebx; ret; 
0x00124375: pop esi; pop ebx; test eax, eax; jl 0x24e60; je 0x124382; ret; 
0x001906f2: pop esi; pop edi; call 0x17d639; add ebx, 0x3e81f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001905e8: pop esi; pop edi; call 0x17d639; add ebx, 0x3e929; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001904e1: pop esi; pop edi; call 0x17d639; add ebx, 0x3ea30; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f6f2: pop esi; pop edi; call 0x17d639; add ebx, 0x3f65f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f5e8: pop esi; pop edi; call 0x17d639; add ebx, 0x3f769; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f4e1: pop esi; pop edi; call 0x17d639; add ebx, 0x3f870; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e712: pop esi; pop edi; call 0x17d639; add ebx, 0x4047f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e608: pop esi; pop edi; call 0x17d639; add ebx, 0x40589; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e501: pop esi; pop edi; call 0x17d639; add ebx, 0x40690; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010b714: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0003a6a5: pop esi; pop edi; fsubp st(1); ret; 
0x0007b587: pop esi; pop edi; jmp eax; 
0x0012ba97: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0012b957: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0012b6d7: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0012b817: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0012b457: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0012b777: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0012b4f7: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0012b597: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0012b8b7: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0012b3b7: pop esi; pop edi; mov eax, dword ptr [ecx + eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0018f24b: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0015e7d0: pop esi; pop edi; mov eax, edx; ret; 
0x0011cdfe: pop esi; pop edi; movzx eax, al; ret; 
0x0012c37c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x0012c2fc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012c27c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x0012c07c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x0012c17c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0012be7c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x0012c0fc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x0012befc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0012bf7c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x0012c1fc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x0012bdfc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x00121a68: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x0017d631: pop esi; pop edi; pop ebp; jmp 0x17d490; mov ebx, dword ptr [esp]; ret; 
0x000286d2: pop esi; pop edi; pop ebp; jmp eax; 
0x0005e65d: pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x0019adc1: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x001990c3: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003b1b5: pop esi; pop edi; pop ebp; ret 4; 
0x00023461: pop esi; pop edi; pop ebp; ret; 
0x00194180: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x0019a85d: pop esi; pop edi; pop ebx; ret; 
0x00134a4e: pop esi; pop edi; ret 4; 
0x000255f7: pop esi; pop edi; ret; 
0x00199850: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000baa71: pop esi; pop edi; xor eax, eax; ret; 
0x0008cb51: pop esi; push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0008cb08: pop esi; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000ac97e: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001236be: pop esi; push es; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x0003fc2e: pop esi; ret 4; 
0x00024c19: pop esi; ret; 
0x0002507c: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00025107: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0014c854: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x000f33ec: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000f5cc8: pop esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00050732: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0011f576: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x000913b2: pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003aedd: pop esi; shr eax, 0x1f; pop edi; ret; 
0x0011d26a: pop esi; stc; call dword ptr [eax + 0x55]; 
0x000baa1a: pop esi; sub eax, 0x10; pop edi; ret; 
0x00041e34: pop esi; sub eax, ecx; ret; 
0x000844d5: pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x000896b1: pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0015f443: pop esi; sub edx, 2; pop edi; pop ebp; mov eax, edx; ret; 
0x0019fb69: pop esi; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00042504: pop esi; xor eax, 0x1f; ret; 
0x000bba12: pop esi; xor eax, eax; pop ebx; ret; 
0x0019add0: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x0019d5d1: pop esi; xor eax, eax; pop edi; ret; 
0x0009221b: pop esp; adc al, 0xe6; call dword ptr [eax + 0x56]; 
0x0008fba7: pop esp; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000451a1: pop esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00188774: pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001225f1: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00154a3f: pop esp; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; aaa; ret; 
0x000e13e8: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00062642: pop esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x000e500c: pop esp; add dword ptr [ecx + edi], 0x7404875c; jmp 0xe504f; ret 0x850f; 
0x0008b20a: pop esp; add eax, 0x89038b10; ret 0xff0; 
0x000f2292: pop esp; add eax, 0xaae80000; mov bl, 8; add byte ptr [ecx + 0x13eb99c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0008b646: pop esp; add eax, 0xf0b828; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00105a9f: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001408b3: pop esp; add esp, 0x118; pop ebx; ret; 
0x0011592c: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x001028d5: pop esp; and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000922e4: pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00120ed4: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0011835d: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010b704: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115324: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126da4: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a24: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126aa4: pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x00126844: pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126c04: pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a64: pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x00126934: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c74: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x00121944: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e7a4: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ac04: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125c71: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0005da60: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001182dd: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00125403: pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0017c2e5: pop esp; and al, 0x14; jne 0x17c2f0; pop ebx; ret; 
0x00125177: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e2e91: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00130afe: pop esp; and al, 0x18; je 0x130b10; add esp, 8; pop ebx; ret; 
0x00121a59: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00128b0e: pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00124364: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00117f71: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00118fb0: pop esp; and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011b00f: pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aabf: pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c42f: pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00117f3e: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010acdf: pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003c456: pop esp; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00125460: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f870: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f740: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120db0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00123a00: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f80: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169c0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117ba0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010af5f: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010af86: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x001029e9: pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011b036: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aae6: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010ad06: pop esp; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009a037: pop esp; and al, 0x20; test ebx, ebx; js 0x9a068; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d6c15: pop esp; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x001147fb: pop esp; and al, 0x30; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001218ae: pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001217fe: pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00102d9e: pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00102f53: pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102ea3: pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010301a: pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cfa: pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010bab5: pop esp; and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115c5a: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115d60: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fb99: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204c9: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2d1a: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2eda: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00125ed9: pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001156cd: pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016c57d: pop esp; and al, 0x30; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0016c552: pop esp; and al, 0x34; push ebx; call dword ptr [eax + 0x14]; 
0x00118e5b: pop esp; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000dfa44: pop esp; and al, 0x40; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000df6da: pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00099b52: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009987a: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad3: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099800: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000dfb8c: pop esp; and al, 0x50; lea ecx, [esp + 0x1c]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00129573: pop esp; and al, 0x50; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00102ad3: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00119485: pop esp; and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000d6dba: pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012574d: pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010b8dd: pop esp; and al, 0x60; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b857: pop esp; and al, 0x60; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x001261c9: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00126259: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00126117: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000d6e31: pop esp; and al, 0x60; mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00125fe3: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x64]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001179dc: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117922: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00136754: pop esp; and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x00116cfb: pop esp; and al, 0x70; lea edx, [esp + 8]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c59b: pop esp; and al, 0x70; lea edx, [esp + 8]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000893d8: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000893d8: pop esp; and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e144f: pop esp; and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00116adf: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012533e: pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00126bcf: pop esp; and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126caf: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125371: pop esp; and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011cc3f: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5cf: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab6f: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012680f: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008c5c9: pop esp; and al, 0xc; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089407: pop esp; and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001269b7: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00126cf3: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00126d37: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00124e67: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001267e3: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00115f37: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00126993: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00126d67: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121a23: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00126dd7: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00126e07: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00126e37: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00126e63: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0003cfe0: pop esp; and al, 4; mov eax, 0x1a5; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x001268a7: pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x00126b37: pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000e2473: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00126c37: pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003c397: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010b023: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00119a33: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00102e27: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00117723: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00117723: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00119c03: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001217a7: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00126d13: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x001219d7: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0011f847: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0010b497: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00123b33: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x001239c3: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x001266d3: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x001219b3: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00126cd3: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00121507: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00104e23: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00126903: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000e8833: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0010b473: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001266f7: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00125513: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x00125513: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010be17: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000e88e3: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011ec67: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011f7f7: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011ec93: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x00102c57: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00102937: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00102963: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00102983: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x001029a3: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00123b57: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0003d05a: pop esp; and al, 4; mov eax, 0xb1; mov esi, 8; mov edx, edi; call dword ptr gs:[0x10]; 
0x00126727: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x00126757: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003c9e7: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010ac23: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000e78e7: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x00125b93: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x00125b73: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00125b73: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00126b97: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00120f07: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011e657: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011abc7: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00127c9e: pop esp; and al, 4; mov ecx, dword ptr [esp + 8]; mov eax, 0x151; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008be89: pop esp; and al, 4; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003d0fb: pop esp; and al, 4; mov edx, edi; mov ebp, eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003d0ab: pop esp; and al, 4; mov edx, edi; mov ebp, eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x0005da0a: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000f2cda: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00126e9a: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012696a: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011585a: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011779a: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011726a: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010ab53: pop esp; and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010b09a: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0003d738: pop esp; and al, 8; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x00089144: pop esp; and al, 8; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00126b0a: pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012687a: pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268da: pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad8a: pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b6a: pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0011997a: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b0a: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269ea: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266aa: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6fa: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012678a: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267ba: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c8a: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ada: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e4a: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011529a: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6ca: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88ba: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e888a: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac9a: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9ea: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e90a: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5fa: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e62a: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab9a: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000891e0: pop esp; and al, 8; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003c3d6: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00115ef6: pop esp; and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000bb113: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0016525b: pop esp; call eax; 
0x00029d67: pop esp; call edi; 
0x00164c28: pop esp; cmp esi, ebx; call dword ptr [esi - 0x73]; 
0x000a3381: pop esp; cmpsd dword ptr [esi], dword ptr es:[edi]; call 0xc24e4387; ret; 
0x00080e1f: pop esp; dec esi; stc; call dword ptr [eax + 0x56]; 
0x00182cd8: pop esp; fucomi st(3); call dword ptr [eax + 0x6a]; 
0x0015bb90: pop esp; jg 0x15bb90; jmp dword ptr [esi - 0x70]; 
0x0015c4f4: pop esp; jno 0x15c4f0; call dword ptr [eax - 0x18]; 
0x0015c4f4: pop esp; jno 0x15c4f0; call dword ptr [eax - 0x18]; inc edx; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x00159b90: pop esp; lahf; std; jmp dword ptr [esi - 0x70]; 
0x0017475b: pop esp; leave; stc; call dword ptr [eax - 0x73]; 
0x0005a1bf: pop esp; mov bh, cl; call dword ptr [eax - 0x73]; 
0x0003c326: pop esp; mov bl, 0xe0; dec dword ptr [edi]; inc esp; ret 0xe4e9; 
0x000a3fb1: pop esp; mov ch, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000f47f1: pop esp; mov cs, word ptr [eax]; add byte ptr [ecx + 0x13c63fc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000eda78: pop esp; mov dl, 0xeb; call dword ptr [eax + 0x6a]; 
0x000d3041: pop esp; mov dword ptr [esp + 0x20], ecx; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x0016e8c4: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0019f169: pop esp; mov eax, 0x10; pop edi; ret; 
0x0002ad8c: pop esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0008cb4f: pop esp; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0011d4cc: pop esp; mov esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x001876a7: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001876ab: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000e7074: pop esp; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d6fd9: pop esp; pop dword ptr [edx]; jbe 0xd6fe8; mov eax, edx; ret; 
0x000286d0: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003b980: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029ddf: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ba09a: pop esp; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011d29e: pop esp; pop esi; stc; call dword ptr [eax + 0x55]; 
0x0012f371: pop esp; push ds; adc byte ptr [ecx], bh; ret 0x820f; 
0x0012fe41: pop esp; push ds; or al, 0x39; ret 0x820f; 
0x000284da: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ad88: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000290ce: pop esp; push dword ptr [esp + 0x64]; call edi; 
0x000d319f: pop esp; push ebx; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0014b8f9: pop esp; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00147463: pop esp; ret 0x8904; 
0x001013d9: pop esp; ret 7; 
0x00133a90: pop esp; ret; 
0x001943dc: pop esp; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x00086e17: pop esp; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000d21f3: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011d0d5: pop esp; stc; call dword ptr [eax + 0x55]; 
0x0012fac7: pop esp; stc; call dword ptr [edx + 0x50]; 
0x0007e05d: pop esp; sti; dec dword ptr [ebp - 0x66df37a]; call dword ptr [eax - 0x73]; 
0x00104ee1: pop esp; sub edx, dword ptr gs:[0x14]; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x00174840: pop esp; test al, 0; add byte ptr [eax - 0x73], dl; xchg edx, ebx; jb 0x174843; call dword ptr [eax + 0x6a]; 
0x000a0fe5: pop esp; test al, 0xf9; call dword ptr [eax + 0x68]; 
0x00044e41: pop esp; xchg dword ptr [ebx + eax*4], eax; ret; 
0x000e5010: pop esp; xchg dword ptr [esp + esi*2], eax; jmp 0xe504f; ret 0x850f; 
0x0018b883: pop ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0004a636: pop ss; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000bcc4d: pop ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00030ec1: pop ss; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0003fafb: pop ss; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00072b9e: pop ss; add dword ptr [ecx - 0x5236b], ecx; dec dword ptr [ecx - 0x4ff7b]; call dword ptr [edx + 0x52]; 
0x001157d6: pop ss; add esp, 0x74; pop ebx; pop esi; ret; 
0x0018c903: pop ss; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00121d8e: pop ss; arpl cx, di; call dword ptr [ebx - 1]; 
0x000baab8: pop ss; bsf ecx, ecx; sub edx, ecx; jbe 0xbaaf0; add eax, ecx; ret; 
0x000f2701: pop ss; cld; add byte ptr [eax], al; pop ebx; ret; 
0x00080b08: pop ss; cmp dl, bh; jmp dword ptr [esi - 0x70]; 
0x00179935: pop ss; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x00135475: pop ss; fucomp st(6); inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017c675: pop ss; imul ebp, edx, -1; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000b6d36: pop ss; imul ecx, dword ptr [eax + eax], 0x923ac181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2f77: pop ss; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4af7: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000b47e3: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000b47f5: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000b4823: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x0019fb98: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b3521: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000d2078: pop ss; mov cl, dl; and cl, 0xf; je 0xd20a0; ret; 
0x0017ede8: pop ss; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0005771c: pop ss; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x00087848: pop ss; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0016cc5f: pop ss; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000ba57a: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0016f100: pop ss; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x000b70d7: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000330de: pop ss; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x000b3531: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000ba036: pop ss; or al, 0; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a53a9: pop ss; pop ebx; pop esi; pop edi; ret; 
0x000b3143: pop ss; pop edi; pop esi; pop ebx; ret; 
0x001999c3: pop ss; push edi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188e03: pop ss; push esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ab9: pop ss; ret 0x2c73; 
0x0019a47a: pop ss; ret 0x3273; 
0x00199aa4: pop ss; ret 0x3e73; 
0x0019a460: pop ss; ret 0x4c73; 
0x00199a8f: pop ss; ret 0x5073; 
0x00199a7a: pop ss; ret 0x6273; 
0x0019a446: pop ss; ret 0x6673; 
0x00199415: pop ss; ret 0x830f; 
0x000764a4: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000e943d: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000f015d: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5f8]; call esi; 
0x0019f938: pop ss; test dh, 0xf; jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x00057718: pop ss; test eax, eax; jne 0x57734; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000b11cb: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0013f2cb: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x000c9c1d: popal; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e1d16: popal; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ad7f3: popal; jmp dword ptr [esi + 0xf]; 
0x000847e4: popal; mov cs, word ptr [edi]; add byte ptr [ecx + 0x1ac64cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000e341e: popal; mov eax, 0x166; lea ecx, [ebp - 0x6c3a6]; mov edi, 0x1000; mov ebx, dword ptr [esp + 0xc0]; call dword ptr gs:[0x10]; 
0x0011d425: popal; stc; call dword ptr [eax + 0x55]; 
0x00129d2b: popal; stc; call dword ptr [eax - 0x18]; 
0x0015d9e1: popal; std; jmp dword ptr [esi - 0x70]; 
0x00141619: popfd; add byte ptr [ebx - 7], ch; call dword ptr [ebx - 0x18]; 
0x0002ab5a: popfd; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebx; stc; call dword ptr [eax - 0x18]; 
0x0007397f: popfd; add edi, esp; dec dword ptr [ebp - 0x683b37a]; call dword ptr [eax - 0x73]; 
0x00088086: popfd; dec esi; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x001415c9: popfd; fldcw word ptr [edx - 7]; call dword ptr [ebx - 0x18]; 
0x0016615c: popfd; jae 0x166158; call dword ptr [edx + 0x6a]; 
0x0015d454: popfd; jno 0x15d450; call dword ptr [eax - 0x18]; 
0x0015a893: popfd; jo 0x15a88f; call dword ptr [eax + 0x6a]; 
0x0012b127: popfd; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0017e8eb: popfd; out dx, eax; jmp dword ptr [ecx]; 
0x00105ba6: popfd; pop eax; stc; call dword ptr [eax - 0x18]; 
0x00064f3b: popfd; push 0x83fffffa; ret; 
0x00173826: popfd; push 0x89ffffff; jecxz 0x173857; ret; 
0x000e123f: popfd; push edi; cld; jmp dword ptr [esi - 0x70]; 
0x0005d016: popfd; ret 0xf8cc; 
0x00168b4f: popfd; scasd eax, dword ptr es:[edi]; cld; jmp dword ptr [esi - 0x70]; 
0x0009c6af: popfd; stc; call dword ptr [eax - 0x18]; 
0x0014b87f: popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x0016b34f: popfd; xchg esp, edi; jmp dword ptr [esi - 0x70]; 
0x000bf9b2: por mm6, qword ptr [eax - 0x72f3137d]; xchg byte ptr [eax - 0x55], bh; stc; call dword ptr [eax - 0x18]; 
0x000b6fc6: psllq mm1, qword ptr [edi]; jg 0xb6fcb; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7048: psllq mm1, qword ptr [edi]; jg 0xb704d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7148: psllq mm1, qword ptr [edi]; jg 0xb714d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001583e8: psllq mm7, mm7; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0005a5b0: psllq mm7, mm7; call dword ptr [edi + 0x50]; 
0x001a0331: punpckhwd mm0, mm0; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x00104db2: push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x0013d26b: push -0x11; jmp dword ptr [esi - 0x70]; 
0x00170472: push -0x3f; hlt; call ecx; 
0x00115284: push -0x64; call 0x10b4c0; add esp, 0x1c; ret; 
0x00115760: push -0x64; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00115784: push -0x64; call 0x10c1a0; add esp, 0x1c; ret; 
0x001264ec: push -0x64; call 0x115900; add esp, 0x20; add esp, 0xc; ret; 
0x001158e7: push -0x64; call 0x115900; add esp, 0x2c; ret; 
0x001356ff: push -0x7d; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b5114: push -0xa; ret 0x7520; 
0x000b5119: push -0xa; ret 0x7540; 
0x00104e93: push -1; call 0x104fa0; add esp, 0x1c; ret; 
0x00104e6d: push -1; call 0x105380; add esp, 0x1c; ret; 
0x000831e8: push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x0007cae5: push -1; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x0005dbb5: push -1; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x001707c8: push -1; push ebp; push esi; call edi; 
0x001780a2: push -2; stc; jmp dword ptr [ebp - 0x75]; 
0x0015d021: push -3; jmp dword ptr [esi - 0x70]; 
0x00140d16: push -7; call dword ptr [eax - 0x18]; 
0x0014159f: push -7; call dword ptr [ebx - 0x18]; 
0x0003e832: push 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00126601: push 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00102e59: push 0; call 0x102e20; add esp, 0x1c; ret; 
0x00123b8b: push 0; call 0x123dd0; add esp, 0x1c; ret; 
0x0015ed88: push 0; call 0x14bb50; add esp, 0x1c; ret; 
0x0015eda7: push 0; call 0x14bc20; add esp, 0x1c; ret; 
0x00034b6d: push 0; call 0x34b10; add esp, 0x1c; ret; 
0x00036155: push 0; call 0x360e0; add esp, 0x2c; ret; 
0x0003cce7: push 0; call 0x3c570; add esp, 0x1c; ret; 
0x0016b61b: push 0; call 0x74540; add esp, 0x18; pop ebx; ret; 
0x00089edf: push 0; call 0x894b0; add esp, 0x1c; ret; 
0x000bd28a: push 0; call 0xbd7c0; add esp, 0x1c; ret; 
0x000df5bf: push 0; call 0xdf6b0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00131229: push 0; call eax; 
0x000be265: push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00083947: push 0; mov eax, edi; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x00102e57: push 0; push 0; call 0x102e20; add esp, 0x1c; ret; 
0x000be263: push 0; push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00025da4: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0011eb49: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x00025da6: push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x00075c9f: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00082e23: push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017eedd: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0008678a: push 0; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x00082828: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007db56: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007d92d: push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00131a6d: push 0; push 0x1000001; call eax; 
0x0013197a: push 0; push 0x1000002; call edx; 
0x00130eaf: push 0; push 0x1000003; call eax; 
0x00131749: push 0; push 0x1000004; call eax; 
0x00131295: push 0; push 0x1000005; call edx; 
0x0013145b: push 0; push 0x1000006; call ecx; 
0x001312f5: push 0; push 0x1000007; call eax; 
0x0012d6bc: push 0; push 0x2000004; call eax; 
0x00095467: push 0; push 1; push eax; call 0x890b0; add esp, 0x2c; ret; 
0x0007e31b: push 0; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0014a5a3: push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x00104e67: push 0; push dword ptr [esp + 0x18]; push -1; call 0x105380; add esp, 0x1c; ret; 
0x00126377: push 0; push dword ptr [esp + 0x1c]; call 0x126390; add esp, 0x1c; ret; 
0x0016dd75: push 0; push dword ptr [esp + 0x1c]; call 0x16dbe0; add esp, 0x10; add esp, 0xc; ret; 
0x0003e0e7: push 0; push dword ptr [esp + 0x1c]; call 0x3d930; add esp, 0x1c; ret; 
0x0017d757: push 0; push dword ptr [esp + 0x1c]; call 0x3e310; add esp, 0x1c; ret; 
0x0003d879: push 0; push dword ptr [esp + 0x1c]; call 0x4abd0; add esp, 0x1c; ret; 
0x0011ea4d: push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0007f8cb: push 0; push dword ptr [esp + 0x1c]; call 0x789a0; add esp, 0x1c; ret; 
0x00132681: push 0; push dword ptr [esp + 0x1c]; call 0xbbd80; add esp, 0x18; pop ebx; ret; 
0x0003d257: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d1e0; add esp, 0x1c; ret; 
0x000479ab: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x00047af1: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0004e4cb: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x000791d7: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x000c35ab: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36f1: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000c6d71: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc75d0; add esp, 0x1c; ret; 
0x0017f87f: push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x00034b1f: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x0008ebcb: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8ec00; add esp, 0x2c; ret; 
0x000bffd5: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000bdc25: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000bdfc5: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x00114690: push 0; push eax; call 0x1178c0; add esp, 0x10; add esp, 0xc; ret; 
0x0009129d: push 0; push eax; call 0x908d0; add esp, 0x18; pop ebx; ret; 
0x00025da8: push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x00075ca1: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00078683: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00165ea0: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00082e25: push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017eedf: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0008678c: push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x0008282a: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x001226a3: push 0; push ebx; call esi; 
0x000290c4: push 0; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00087862: push 0; push ecx; push edx; call 0x1799f0; add esp, 0x1c; ret; 
0x0016f9aa: push 0; push edi; call dword ptr [eax + 0x14]; 
0x0016ace1: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0014a1a0: push 0; push edi; push ebx; call edx; 
0x00083e60: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0003e40b: push 0; push edx; call eax; 
0x001647a0: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0007d5b1: push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00163e3d: push 0; push esi; call dword ptr [eax + 0x14]; 
0x0007db58: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007580b: push 0; push esi; call dword ptr [ebx + 8]; 
0x0007d92f: push 0; push esi; call dword ptr [edi + 0x40]; 
0x000bde9b: push 0; push esi; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x00131a6f: push 0x1000001; call eax; 
0x0013197c: push 0x1000002; call edx; 
0x00130eb1: push 0x1000003; call eax; 
0x0013174b: push 0x1000004; call eax; 
0x00131297: push 0x1000005; call edx; 
0x0013145d: push 0x1000006; call ecx; 
0x001312f7: push 0x1000007; call eax; 
0x0011ee93: push 0x1018; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0010617c: push 0x1081ee8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x000778e3: push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0002aeba: push 0x1a44b60f; add al, 0x88; inc esp; sbb eax, 0x83028b00; ret; 
0x000ee579: push 0x1fffffb; ret; 
0x0012d57b: push 0x2000001; call dword ptr [edi + 0x14]; 
0x0012e397: push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012d6be: push 0x2000004; call eax; 
0x0012f559: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e17a: push 0x2000006; call dword ptr [ebx + 0x14]; 
0x001657df: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0008cb52: push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001701a7: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x16fee0; add esp, 0x1c; ret; 
0x001701ac: push 0x2260; push dword ptr [esp + 0x1c]; call 0x16fee0; add esp, 0x1c; ret; 
0x0017ce78: push 0x24448909; and al, 0x89; ret; 
0x0008ece5: push 0x24448b52; adc byte ptr [ebp - 0x1a225380], cl; call dword ptr [eax - 0x73]; 
0x000de42c: push 0x24448bff; add al, 0x29; ret; 
0x00179fb4: push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0012771f: push 0x30244489; mov eax, dword ptr [esp + 0xc]; mov dword ptr [esp + 0x34], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ba0e3: push 0x35; or al, 0; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00093723: push 0x39000000; ret 0x6574; 
0x00092fa7: push 0x39000000; ret 0x6974; 
0x0009261a: push 0x39000000; ret 0x7e74; 
0x00092391: push 0x39000000; ret 0x840f; 
0x00091ab6: push 0x39000000; ret 0x850f; 
0x0009b195: push 0x3930c483; ret; 
0x00157a73: push 0x400; call 0x23198; mov dword ptr [ebx + 0xa200], eax; add esp, 0x18; pop ebx; ret; 
0x001585c0: push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x000f558d: push 0x42; stc; call dword ptr [edx + 0x52]; 
0x0003bf38: push 0x448b900c; and al, 8; mov esp, ecx; jmp edx; 
0x0014cb65: push 0x4e; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x000829a6: push 0x4e; stc; call dword ptr [eax - 0x75]; 
0x000289f0: push 0x5024448b; call eax; 
0x0017f5bf: push 0x52016a99; push eax; push esi; call dword ptr [edi + 0x40]; 
0x000be082: push 0x5a; pop es; add byte ptr [ebx - 0x72e3dbac], cl; sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x00133923: push 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x00143c02: push 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x001020af: push 0x5e5bc031; pop edi; ret; 
0x000f2779: push 0x62759123; ret; 
0x000b6de3: push 0x68; or al, 0; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00082825: push 0x6a; add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x001537fc: push 0x6b00000e; ret; 
0x0011acd2: push 0x788d5720; or byte ptr [esi - 0x18], dl; imul ebp, dword ptr [ecx], 6; add byte ptr [ecx + 0x116156c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0011eb69: push 0x8000; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0008a417: push 0x80; push dword ptr [esp + 0x1c]; call 0x8a340; add esp, 0x18; pop ebx; ret; 
0x0008a73b: push 0x80; push dword ptr [esp + 0x1c]; call 0x8a680; add esp, 0x1c; ret; 
0x00093c07: push 0x80; push dword ptr [esp + 0x1c]; call 0x93bb0; add esp, 0x18; pop ebx; ret; 
0x000b15c5: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x001775cd: push 0x81000060; ret; 
0x001771cd: push 0x81000064; ret; 
0x0008cc33: push 0x818d3675; dec esi; stc; call dword ptr [edx + 0x50]; 
0x00064f3c: push 0x83fffffa; ret; 
0x000ed862: push 0x83fffffb; in al, dx; add al, 0x29; ror byte ptr [ecx - 0x49b7b], 1; call dword ptr [eax + 0x6a]; 
0x00035f07: push 0x83ffffff; les ecx, ptr [ebx + eax*4]; ret 0x5201; 
0x00087ece: push 0x89000001; inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000e0584: push 0x89fffffc; ret 0xc085; 
0x00173827: push 0x89ffffff; jecxz 0x173857; ret; 
0x000359e4: push 0x89ffffff; ret; 
0x0014745e: push 0x8b000001; pop esp; ret 0x8904; 
0x0008cb09: push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000c75b4: push 0x8bfff6c7; jl 0xc75df; adc byte ptr [ebp - 0x6790779], cl; call dword ptr [eax + 0x68]; 
0x0009ade5: push 0x8dffffff; xchg byte ptr [eax + ebp*4], bl; stc; call dword ptr [eax - 0x73]; 
0x0014c945: push 0x8f; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x0013a9c2: push 0x97401f4; add esp, 4; pop ebx; pop esi; ret; 
0x000a3179: push 0x998bfff5; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x000c19b5: push 0x9b850f04; add al, 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x00162de8: push 0xa; call 0x14bb50; add esp, 0x1c; ret; 
0x00162e07: push 0xa; call 0x14bc20; add esp, 0x1c; ret; 
0x0003d877: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x4abd0; add esp, 0x1c; ret; 
0x00086d86: push 0xab05000f; mov al, byte ptr [0x808b001a]; dec esp; push cs; add byte ptr [eax], al; ret; 
0x000b6d7c: push 0xc181000c; cmc; xchg ecx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d95: push 0xc181000c; fcom qword ptr [ecx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x000b6de4: push 0xc181000c; lea edx, [ecx + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x000b6dbf: push 0xc181000c; mov dl, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d5b: push 0xc181000c; push ss; xchg edx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008ef37: push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003be41: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0016d305: push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0006749a: push 0xe9fffffa; dec esp; ret 0xffff; 
0x0013b250: push 0xfffffff; inc ebp; ret 0x8588; 
0x00059add: push 0xfffffff; xchg edx, eax; ret 0xf883; 
0x0017ed65: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00024ead: push 1; call 0x117b80; add esp, 0x1c; ret; 
0x0015f208: push 1; call 0x14bb50; add esp, 0x1c; ret; 
0x0015f227: push 1; call 0x14bc20; add esp, 0x1c; ret; 
0x00082e21: push 1; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017effd: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007db54: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007f8c9: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x789a0; add esp, 0x1c; ret; 
0x001406d7: push 1; push dword ptr [esp + 0x1c]; call 0x140600; add esp, 0x1c; ret; 
0x00091e87: push 1; push dword ptr [esp + 0x1c]; call 0x91d40; add esp, 0x1c; ret; 
0x00076417: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x00111a58: push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0003be01: push 1; push dword ptr [esp + 8]; call 0x3bd80; pop ecx; pop edx; ret; 
0x00094669: push 1; push eax; call 0x890b0; add esp, 0x28; pop ebx; ret; 
0x00095469: push 1; push eax; call 0x890b0; add esp, 0x2c; ret; 
0x001645c7: push 1; push ebx; call dword ptr [eax]; 
0x00074c41: push 1; push ebx; call eax; 
0x001226b7: push 1; push ebx; call esi; 
0x0007d2a6: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0017f5c1: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0007529a: push 1; push esi; call edx; 
0x0015f578: push 2; call 0x14bb50; add esp, 0x1c; ret; 
0x0015f597: push 2; call 0x14bc20; add esp, 0x1c; ret; 
0x00178c21: push 2; lea eax, [eax - 0x689d7]; push eax; call 0x115980; add esp, 0x1c; ret; 
0x00075c9d: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0017eedb: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00082826: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00083be5: push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007d92b: push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00139787: push 2; push dword ptr [esp + 0x1c]; call 0x138a90; add esp, 0x1c; ret; 
0x00111dfd: push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001607bf: push 2; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x001646f8: push 2; push ebx; call dword ptr [eax]; 
0x001226ca: push 2; push ebx; call esi; 
0x000df4d2: push 3; add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00160418: push 3; call 0x14bb50; add esp, 0x1c; ret; 
0x00160437: push 3; call 0x14bc20; add esp, 0x1c; ret; 
0x00082e1f: push 3; push 1; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0017effb: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0017eed9: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x001226fb: push 3; push ebx; call edx; 
0x0016e086: push 3; push edi; call dword ptr [eax]; 
0x001616f8: push 4; call 0x14bb50; add esp, 0x1c; ret; 
0x00161717: push 4; call 0x14bc20; add esp, 0x1c; ret; 
0x0016d239: push 4; push eax; call dword ptr [edx + 0x14]; 
0x001647a3: push 4; push ebx; call dword ptr [eax]; 
0x00161d48: push 5; call 0x14bb50; add esp, 0x1c; ret; 
0x00161d67: push 5; call 0x14bc20; add esp, 0x1c; ret; 
0x00034b67: push 5; push dword ptr [esp + 0x18]; push 0; call 0x34b10; add esp, 0x1c; ret; 
0x00034b47: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34b10; add esp, 0x1c; ret; 
0x00111cd4: push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00164c33: push 5; push ebx; call dword ptr [eax]; 
0x00131e1e: push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x001620e8: push 6; call 0x14bb50; add esp, 0x1c; ret; 
0x00162107: push 6; call 0x14bc20; add esp, 0x1c; ret; 
0x0016d24c: push 6; push eax; call dword ptr [edx + 0x14]; 
0x00163348: push 7; call 0x14bb50; add esp, 0x1c; ret; 
0x00163367: push 7; call 0x14bc20; add esp, 0x1c; ret; 
0x00162728: push 8; call 0x14bb50; add esp, 0x1c; ret; 
0x00162747: push 8; call 0x14bc20; add esp, 0x1c; ret; 
0x0016a3e4: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016588f: push 8; push edi; call dword ptr [eax + 0x18]; 
0x00162b18: push 9; call 0x14bb50; add esp, 0x1c; ret; 
0x00162b37: push 9; call 0x14bc20; add esp, 0x1c; ret; 
0x0011d3b4: push cs; adc byte ptr [eax], al; add byte ptr [ebp - 0x69f8b7d], cl; call dword ptr [edx + 0x52]; 
0x000bb98e: push cs; add al, byte ptr [eax]; add al, ch; mov byte ptr [0x81000c1c], al; ret; 
0x0009a6f7: push cs; add byte ptr [0x19673b], al; mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x000993f7: push cs; add byte ptr [0x197a3b], al; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008f9c7: push cs; add byte ptr [0x1a146b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9a7: push cs; add byte ptr [0x1a148b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x0008e827: push cs; add byte ptr [0x1a260b], al; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x0014c8c4: push cs; add byte ptr [eax], al; add al, ch; ret; 
0x0004153e: push cs; add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x00128cb9: push cs; add byte ptr [eax], al; add byte ptr [ecx + 0x100baf7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00086d91: push cs; add byte ptr [eax], al; ret; 
0x00039dc2: push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0014676a: push cs; add byte ptr [ebx - 0x6f72f314], al; jo 0x146732; stc; call dword ptr [edx - 0x73]; 
0x0004783c: push cs; add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x0004a8bf: push cs; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0014656c: push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x0014c171: push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0009bac4: push cs; add byte ptr [ecx + 0x19536ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0009a9f7: push cs; add byte ptr [ecx + 0x19643bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0009a8b5: push cs; add byte ptr [ecx + 0x19657dc2], al; add byte ptr [ebx - 0x72afeb14], al; cmp byte ptr [ecx + 0x68], 0xf9; call dword ptr [eax - 0x18]; 
0x0009a827: push cs; add byte ptr [ecx + 0x19660bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x9a840; ret; 
0x0016d960: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00058171: push cs; add esp, 0xc; ret; 
0x0010ade1: push cs; add esp, 4; pop ebx; pop esi; ret; 
0x00095599: push cs; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00140f79: push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082f41: push cs; add esp, 8; pop ebx; ret; 
0x000958e1: push cs; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000764bd: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00131cb1: push cs; and eax, 1; pop ebx; ret; 
0x00153fc2: push cs; bnd call dword ptr [eax + 0x6a]; 
0x000bbd04: push cs; call ecx; 
0x000b2037: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000d1d4c: push cs; cmp dword ptr [edi], ecx; jne 0xd1ea0; pop edi; pop esi; ret; 
0x000a2649: push cs; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0011b469: push cs; cmp ecx, edx; jne 0x11b460; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x001706fe: push cs; inc esp; in al, dx; call dword ptr [eax - 0x73]; 
0x0019dff2: push cs; jb 0x19e010; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019f012: push cs; jb 0x19f030; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019e6b2: push cs; jl 0x19e6d0; lea eax, [ecx + 0xe]; ret; 
0x00170101: push cs; jne 0x1700fd; call dword ptr [eax - 0x73]; 
0x000ace09: push cs; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad239: push cs; jne 0xacfe1; pop ebx; ret; 
0x000b170a: push cs; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b448a: push cs; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000b4a41: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000b4b51: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000ace06: push cs; lea ecx, [edx + 0xe]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad236: push cs; lea ecx, [edx + 0xe]; jne 0xacfe1; pop ebx; ret; 
0x0017fe5e: push cs; lock dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000b6e41: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006cf00: push cs; mov dword ptr [esp + 0x14], ebp; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x000ba4b4: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0019eea1: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000b7031: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00088879: push cs; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000b6e22: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7128: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b7028: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00199a41: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00087214: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008b9c1: push cs; pop ebx; pop esi; pop edi; ret; 
0x0018ef00: push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018d81a: push cs; pop edi; call 0x17d639; add ebx, 0x410f7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b72a: push cs; pop edi; call 0x17d639; add ebx, 0x42f67; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018972a: push cs; pop edi; call 0x17d639; add ebx, 0x44ce7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b3361: push cs; pop edi; pop esi; pop ebx; ret; 
0x000af384: push cs; pop edi; ret; 
0x00024d94: push cs; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x000af4e4: push cs; ret; 
0x00104a4d: push cs; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000b2b3f: push cs; stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00199840: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0019954c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000b1734: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb1431; pop ebx; ret; 
0x00086a79: push cs; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000a0c11: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x001023b2: push cs; test ecx, ecx; je 0x1023d0; cmp byte ptr [esp + 0x17], 0; jne 0x102460; call ecx; 
0x0007d596: push cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x73371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0012f372: push ds; adc byte ptr [ecx], bh; ret 0x820f; 
0x0018ca64: push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d6fcf: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000e0ed1: push ds; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012762a: push ds; add esp, 0x18; pop ebx; ret; 
0x00091f70: push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003a881: push ds; and eax, edx; ret; 
0x00171cc3: push ds; cld; jmp dword ptr [esi - 0x70]; 
0x0012edfe: push ds; dec edi; lock dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00033118: push ds; fstp qword ptr [edi]; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000b30c7: push ds; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b476a: push ds; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000d2171: push ds; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd2158; add eax, 1; ret; 
0x0012fe42: push ds; or al, 0x39; ret 0x820f; 
0x0010617e: push ds; or byte ptr [ecx], al; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x001255b9: push ds; pop ebx; pop esi; pop edi; ret; 
0x0003ae6b: push ds; pop edi; pop ebp; not eax; and eax, edx; ret; 
0x000b4b54: push ds; pop edi; pop esi; pop ebx; ret; 
0x001251d2: push ds; sti; call 0x17d63d; add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000993f2: push ds; sti; call 0x17d641; add eax, 0x197a3b; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008e822: push ds; sti; call 0x17d641; add eax, 0x1a260b; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x0003cf12: push ds; sti; call 0x17d641; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef2: push ds; sti; call 0x17d641; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x0002f472: push ds; sti; call 0x17d641; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x00026072: push ds; sti; call 0x17d641; add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026052: push ds; sti; call 0x17d641; add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00024ee2: push ds; sti; call 0x17d641; add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x00024ec2: push ds; sti; call 0x17d641; add eax, 0x20bf6b; lea eax, [eax - 0x681e8]; ret; 
0x00096282: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00096282: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00085e42: push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00085692: push ds; sti; mov eax, 0xffffffff; ret; 
0x00163ac2: push ds; sti; mov eax, 1; ret; 
0x00165d32: push ds; sti; mov eax, 2; ret; 
0x00088822: push ds; sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b992: push ds; sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00186152: push ds; sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00171cd2: push ds; sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000818f2: push ds; sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000342d2: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00135432: push ds; sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008acb2: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00147f12: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00171d12: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00086db2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1f2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0017d212: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0017d2a2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d292: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d222: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00118a82: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00080bc2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b72: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e1652: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0017d202: push ds; sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00086dc2: push ds; sti; mov eax, dword ptr [esp + 4]; ret; 
0x00084ad2: push ds; sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00093ba2: push ds; sti; mov eax, dword ptr gs:[8]; ret; 
0x0008ebe2: push ds; sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00171912: push ds; sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00135442: push ds; sti; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00092a62: push ds; sti; nop; xor eax, eax; ret; 
0x00104dc2: push ds; sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024c32: push ds; sti; ret; 
0x000342e2: push ds; sti; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00085d92: push ds; sti; xor eax, eax; ret; 
0x00165e49: push ds; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00122b41: push ds; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x00178eae: push ds; xchg edi, eax; sti; jmp dword ptr [esi - 0x70]; 
0x0002ff7c: push dword ptr [eax + 0x10c4]; call 0x1231b0; add esp, 0x1c; ret; 
0x00163a8c: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016a9c8: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016a9c8: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00084033: push dword ptr [eax + 0x38]; call 0x1156a0; add esp, 0x18; pop ebx; ret; 
0x0016b7eb: push dword ptr [eax + 0x98]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00172171: push dword ptr [eax + 0xc]; call 0x7ef80; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00096016: push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000d2ed1: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x00111468: push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00139095: push dword ptr [eax - 0x77]; ret; 
0x00089f87: push dword ptr [eax]; call 0x23190; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00057dd2: push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x000579f2: push dword ptr [eax]; call 0x62520; add esp, 0x1c; ret; 
0x0007a851: push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8b2: push dword ptr [eax]; call 0x6d7f0; add esp, 0x1c; ret; 
0x00037a02: push dword ptr [eax]; call 0xbb530; add esp, 0x1c; ret; 
0x000d2ed4: push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000bd5b6: push dword ptr [eax]; call edi; 
0x000831ea: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x00122c08: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000379fc: push dword ptr [eax]; mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xbb530; add esp, 0x1c; ret; 
0x00131c5c: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x130450; add esp, 0x1c; ret; 
0x00078b16: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00129f9f: push dword ptr [ebp + 0x38]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0016c54e: push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x00078b19: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00132e3f: push dword ptr [ebp + 0xe]; pop ebx; pop esi; pop edi; ret; 
0x000781d8: push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00079c7e: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007680b: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0017f351: push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x00076518: push dword ptr [ebp + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00131223: push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x00131858: push dword ptr [ebp - 0x11c]; push dword ptr [ebp - 0x120]; call eax; 
0x001316bd: push dword ptr [ebp - 0x11c]; push ebx; call eax; 
0x0013185e: push dword ptr [ebp - 0x120]; call eax; 
0x00079c7b: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007e31d: push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0003644e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x00024458: push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00122c0d: push dword ptr [ebp - 0x38]; call eax; 
0x00179fb6: push dword ptr [ebp - 0x50]; call eax; 
0x000e9239: push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000e959e: push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000efe49: push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f02be: push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x000e94a3: push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000e9442: push dword ptr [ebp - 0x5e8]; call esi; 
0x000f01c3: push dword ptr [ebp - 0x5f8]; call dword ptr [eax + 0x18]; 
0x000f0162: push dword ptr [ebp - 0x5f8]; call esi; 
0x00179fb1: push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0007b59e: push dword ptr [ebp - 0x72]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000bd8d5: push dword ptr [ebp]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0017be04: push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000381af: push dword ptr [ebx + 0x12ac]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00163ee4: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000a0b27: push dword ptr [ebx + 0x24]; call eax; 
0x000a0c94: push dword ptr [ebx + 0x24]; call edx; 
0x00130b20: push dword ptr [ebx + 0x30]; call eax; 
0x0016baac: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00168e51: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0008af7f: push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0017a16a: push dword ptr [ebx + 4]; call dword ptr [edx + 0x39c]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0003e6c6: push dword ptr [ebx + 4]; call eax; 
0x00025d4b: push dword ptr [ebx + 4]; call edi; 
0x00023000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00151990: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00164a0d: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000750eb: push dword ptr [ebx + eax - 0x77]; inc esi; add al, 0x8b; jl 0x75118; xor cl, ch; ret 0xfffe; 
0x0007b94c: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0007b8f2: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00027034: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x00160046: push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000883c5: push dword ptr [ebx]; call 0x17aa60; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x000882d2: push dword ptr [ebx]; call 0x17ab20; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00166c42: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00166554: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x001227dc: push dword ptr [ebx]; call esi; 
0x000319bd: push dword ptr [ebx]; cmp dword ptr [eax], 0x9000011; ret 0x840f; 
0x00151993: push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0017adce: push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00122b48: push dword ptr [ebx]; push esi; call edi; 
0x0003199b: push dword ptr [ebx]; xor dword ptr [eax], 0x9000011; ret 0x850f; 
0x0012437e: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0012437e: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x001255a4: push dword ptr [ecx + ebx - 0x48]; jl 0x1255ab; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00172c6b: push dword ptr [ecx + ebx - 0x75]; dec ebp; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4c75; 
0x00032dd6: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x0004230c: push dword ptr [ecx + ecx - 9]; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00172b4a: push dword ptr [ecx - 7]; call dword ptr [eax + 0x6a]; 
0x001757c3: push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000564eb: push dword ptr [ecx]; call dword ptr [edx - 0x18]; 
0x0007d8cf: push dword ptr [ecx]; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x00151b83: push dword ptr [ecx]; jmp dword ptr [esi - 0x77]; 
0x0017f5dd: push dword ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x000ce80c: push dword ptr [ecx]; rol byte ptr [ebx - 0x363743], cl; call dword ptr [eax]; 
0x00099285: push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x000423da: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000423bb: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x001181f4: push dword ptr [edi + 0x19]; pop ebx; pop esi; pop edi; ret; 
0x001182f3: push dword ptr [edi + 0x1a]; pop ebx; pop esi; pop edi; ret; 
0x00118271: push dword ptr [edi + 0x1c]; pop ebx; pop esi; pop edi; ret; 
0x00118370: push dword ptr [edi + 0x1d]; pop ebx; pop esi; pop edi; ret; 
0x001255b7: push dword ptr [edi + 0x1e]; pop ebx; pop esi; pop edi; ret; 
0x0009963d: push dword ptr [edi + 0x20]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000f2c3d: push dword ptr [edi + 0x40]; add esp, 0x18; pop ebx; ret; 
0x0003c447: push dword ptr [edi + 0x46]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010af76: push dword ptr [edi + 0x47]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010acf2: push dword ptr [edi + 0x4b]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003f88b: push dword ptr [edi + 0x52]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00118fcd: push dword ptr [edi + 0x58]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012518b: push dword ptr [edi + 0xa]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00125c83: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x0010992b: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x0017fef3: push dword ptr [edi + 0xa]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00123852: push dword ptr [edi + 0xb]; mov eax, ecx; pop ebx; ret; 
0x001297e2: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005da72: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x00111a5e: push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00125411: push dword ptr [edi + 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c3e9: push dword ptr [edi + 4]; pop ebx; ret; 
0x000922f8: push dword ptr [edi + 5]; pop ebx; pop esi; pop edi; ret; 
0x0005da18: push dword ptr [edi + 5]; pop ebx; ret; 
0x000e2ea7: push dword ptr [edi + 6]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e1467: push dword ptr [edi + 6]; pop ebx; pop esi; ret; 
0x001251ef: push dword ptr [edi + 6]; ret; 
0x00099d5e: push dword ptr [edi + 7]; mov eax, ecx; pop ebx; ret; 
0x00129116: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001193ce: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x0010c6de: push dword ptr [edi + 7]; pop ebx; pop esi; ret; 
0x000d4266: push dword ptr [edi + 7]; pop ebx; ret; 
0x000be26c: push dword ptr [edi + 8]; call ebx; 
0x000898e5: push dword ptr [edi + 8]; pop ebx; pop esi; pop edi; ret; 
0x0009976d: push dword ptr [edi + 8]; pop ebx; pop esi; ret; 
0x0011593c: push dword ptr [edi + 9]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00128c14: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000990e4: push dword ptr [edi + 9]; pop ebx; ret; 
0x0013c824: push dword ptr [edi + eax*4 - 0x75]; inc ebp; add byte ptr [ecx], bh; ret 0x1274; 
0x0007fbae: push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0017f00e: push dword ptr [edi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000fb00e: push dword ptr [edi + esi*2 - 0x75]; inc edi; sub byte ptr [ebp - 0x76efdb84], cl; ret 0x4489; 
0x0007cae7: push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x000bcb03: push dword ptr [edi]; call ebx; 
0x000bca5d: push dword ptr [edi]; call esi; 
0x00149edd: push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007650b: push dword ptr [edx + 0x98]; call eax; 
0x0017d80b: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0003308e: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x330a0; add esp, 0x1c; ret; 
0x000a50de: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xa50f0; add esp, 0x1c; ret; 
0x0010a973: push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0004061a: push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00164ace: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0010409b: push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x00104096: push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000764ad: push dword ptr [esi + 0x98]; call eax; 
0x0008e26b: push dword ptr [esi + 0xa]; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0011146c: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0016605f: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016601c: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000304a0: push dword ptr [esi + 4]; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010409e: push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000ccf53: push dword ptr [esi + 8]; call ebx; 
0x0008e2d4: push dword ptr [esi + 9]; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x0004249f: push dword ptr [esi + eax + 0xf]; mov ebp, 0x1ff083c2; ret; 
0x0006e027: push dword ptr [esi + ebp - 0x7d]; in al, dx; or al, 0x83; ret; 
0x0017968a: push dword ptr [esi + ebx - 0x7d]; in al, dx; or al, 0x89; ret; 
0x000d9187: push dword ptr [esi + edx - 0x7d]; ret; 
0x00106187: push dword ptr [esi + edx*8 - 0x77]; ret 0xc085; 
0x001666f2: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00040614: push dword ptr [esi]; mov edx, dword ptr [esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017be02: push dword ptr [esi]; push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017adcc: push dword ptr [esi]; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0014f5ef: push dword ptr [esp + 0x10]; call edi; 
0x0007d6f1: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x001585c5: push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00163eea: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0007d6f5: push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000a0c23: push dword ptr [esp + 0x14]; call eax; 
0x00024caf: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016424a: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0014a5a5: push dword ptr [esp + 0x14]; push ebp; call edi; 
0x0016ec76: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00163dd6: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0017abab: push dword ptr [esp + 0x18]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x00178bf1: push dword ptr [esp + 0x18]; lea eax, [eax - 0x689d7]; push eax; call 0x115980; add esp, 0x1c; ret; 
0x0017ab65: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x10c]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x00057ae7: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x62520; add esp, 0x1c; ret; 
0x0007a8a8: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x164]; push dword ptr [eax]; call 0x6d7f0; add esp, 0x1c; ret; 
0x00057dc8: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xb8]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x0007a847: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xb8]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x0012d85a: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x00115280: push dword ptr [esp + 0x18]; push -0x64; call 0x10b4c0; add esp, 0x1c; ret; 
0x0011575c: push dword ptr [esp + 0x18]; push -0x64; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00115780: push dword ptr [esp + 0x18]; push -0x64; call 0x10c1a0; add esp, 0x1c; ret; 
0x00104e8f: push dword ptr [esp + 0x18]; push -1; call 0x104fa0; add esp, 0x1c; ret; 
0x00104e69: push dword ptr [esp + 0x18]; push -1; call 0x105380; add esp, 0x1c; ret; 
0x00123b87: push dword ptr [esp + 0x18]; push 0; call 0x123dd0; add esp, 0x1c; ret; 
0x00034b69: push dword ptr [esp + 0x18]; push 0; call 0x34b10; add esp, 0x1c; ret; 
0x000bd286: push dword ptr [esp + 0x18]; push 0; call 0xbd7c0; add esp, 0x1c; ret; 
0x0011ea49: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0008a737: push dword ptr [esp + 0x18]; push 0x80; push dword ptr [esp + 0x1c]; call 0x8a680; add esp, 0x1c; ret; 
0x0017aba7: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x0017ab61: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x10c]; call dword ptr [eax + 0x398]; add esp, 0x1c; ret; 
0x0003e82b: push dword ptr [esp + 0x18]; push eax; push eax; call 0x3e8a0; add esp, 0x1c; ret; 
0x0016c596: push dword ptr [esp + 0x18]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0009682f: push dword ptr [esp + 0x1c]; call 0x101ff0; add esp, 0x1c; ret; 
0x00105391: push dword ptr [esp + 0x1c]; call 0x105180; add esp, 0x1c; ret; 
0x0010ba4f: push dword ptr [esp + 0x1c]; call 0x10ba60; add esp, 0x1c; ret; 
0x00115893: push dword ptr [esp + 0x1c]; call 0x1158d0; add esp, 0x1c; ret; 
0x0005ddd7: push dword ptr [esp + 0x1c]; call 0x115980; add esp, 0x1c; ret; 
0x0010b010: push dword ptr [esp + 0x1c]; call 0x115a80; add esp, 0x1c; ret; 
0x0011a5c9: push dword ptr [esp + 0x1c]; call 0x11a470; add esp, 0x18; pop ebx; ret; 
0x00024563: push dword ptr [esp + 0x1c]; call 0x11a4f0; add esp, 0x18; pop ebx; ret; 
0x0011cd18: push dword ptr [esp + 0x1c]; call 0x11cd60; add esp, 0x1c; ret; 
0x001190d5: push dword ptr [esp + 0x1c]; call 0x11e560; add esp, 0x10; add esp, 0xc; ret; 
0x001190a0: push dword ptr [esp + 0x1c]; call 0x11e560; add esp, 0x1c; ret; 
0x00122362: push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x00126379: push dword ptr [esp + 0x1c]; call 0x126390; add esp, 0x1c; ret; 
0x001290d1: push dword ptr [esp + 0x1c]; call 0x129670; add esp, 0x1c; ret; 
0x00131c5e: push dword ptr [esp + 0x1c]; call 0x130450; add esp, 0x1c; ret; 
0x0013061e: push dword ptr [esp + 0x1c]; call 0x130500; add esp, 0x18; pop ebx; ret; 
0x00134cb8: push dword ptr [esp + 0x1c]; call 0x134cd0; add esp, 0x1c; ret; 
0x00135018: push dword ptr [esp + 0x1c]; call 0x135030; add esp, 0x1c; ret; 
0x00139789: push dword ptr [esp + 0x1c]; call 0x138a90; add esp, 0x1c; ret; 
0x001406d9: push dword ptr [esp + 0x1c]; call 0x140600; add esp, 0x1c; ret; 
0x00186183: push dword ptr [esp + 0x1c]; call 0x14d4f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001861f3: push dword ptr [esp + 0x1c]; call 0x14e3f0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001864b3: push dword ptr [esp + 0x1c]; call 0x159df0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186523: push dword ptr [esp + 0x1c]; call 0x15ab30; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186653: push dword ptr [esp + 0x1c]; call 0x15c220; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186683: push dword ptr [esp + 0x1c]; call 0x15c560; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00186733: push dword ptr [esp + 0x1c]; call 0x15d4c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0016dd96: push dword ptr [esp + 0x1c]; call 0x16dae0; add esp, 0x10; add esp, 0xc; ret; 
0x0016dd77: push dword ptr [esp + 0x1c]; call 0x16dbe0; add esp, 0x10; add esp, 0xc; ret; 
0x001701b1: push dword ptr [esp + 0x1c]; call 0x16fee0; add esp, 0x1c; ret; 
0x001654ed: push dword ptr [esp + 0x1c]; call 0x170f70; add esp, 0x1c; ret; 
0x001711e5: push dword ptr [esp + 0x1c]; call 0x171050; add esp, 0x1c; ret; 
0x0017e3b3: push dword ptr [esp + 0x1c]; call 0x17dad0; add esp, 0x18; pop ebx; ret; 
0x00041ec3: push dword ptr [esp + 0x1c]; call 0x1a0300; add esp, 0x18; pop ebx; ret; 
0x00041f27: push dword ptr [esp + 0x1c]; call 0x1a0340; add esp, 0x18; pop ebx; ret; 
0x000a0d51: push dword ptr [esp + 0x1c]; call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002fbe0: push dword ptr [esp + 0x1c]; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00102893: push dword ptr [esp + 0x1c]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0002457f: push dword ptr [esp + 0x1c]; call 0x2454a; add esp, 0x1c; ret; 
0x00033091: push dword ptr [esp + 0x1c]; call 0x330a0; add esp, 0x1c; ret; 
0x00034b4d: push dword ptr [esp + 0x1c]; call 0x34b10; add esp, 0x1c; ret; 
0x0003d25d: push dword ptr [esp + 0x1c]; call 0x3d1e0; add esp, 0x1c; ret; 
0x0003e0e9: push dword ptr [esp + 0x1c]; call 0x3d930; add esp, 0x1c; ret; 
0x0003e11e: push dword ptr [esp + 0x1c]; call 0x3e230; add esp, 0x1c; ret; 
0x0017d759: push dword ptr [esp + 0x1c]; call 0x3e310; add esp, 0x1c; ret; 
0x0003fb38: push dword ptr [esp + 0x1c]; call 0x3fb50; add esp, 0x1c; ret; 
0x00041b88: push dword ptr [esp + 0x1c]; call 0x41ba0; add esp, 0x1c; ret; 
0x0003d859: push dword ptr [esp + 0x1c]; call 0x446a0; add esp, 0x1c; ret; 
0x00044689: push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x00047ab9: push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0003d87b: push dword ptr [esp + 0x1c]; call 0x4abd0; add esp, 0x1c; ret; 
0x0004b2c9: push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x0003d8bb: push dword ptr [esp + 0x1c]; call 0x4e640; add esp, 0x1c; ret; 
0x0011eaa1: push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x10; add esp, 0xc; ret; 
0x0011ea4f: push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x00057682: push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x000576a3: push dword ptr [esp + 0x1c]; call 0x62420; add esp, 0x1c; ret; 
0x00057bc2: push dword ptr [esp + 0x1c]; call 0x62520; add esp, 0x1c; ret; 
0x00069571: push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8d3: push dword ptr [esp + 0x1c]; call 0x6d6d0; add esp, 0x1c; ret; 
0x0006d6e1: push dword ptr [esp + 0x1c]; call 0x6d7f0; add esp, 0x1c; ret; 
0x00074552: push dword ptr [esp + 0x1c]; call 0x74410; add esp, 0x1c; ret; 
0x0007f593: push dword ptr [esp + 0x1c]; call 0x757a0; add esp, 0x18; pop ebx; ret; 
0x0007641d: push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x000577b1: push dword ptr [esp + 0x1c]; call 0x77120; add esp, 0x1c; ret; 
0x0007f8b0: push dword ptr [esp + 0x1c]; call 0x787f0; add esp, 0x1c; ret; 
0x0007f8cd: push dword ptr [esp + 0x1c]; call 0x789a0; add esp, 0x1c; ret; 
0x0007fb3d: push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x18; pop ebx; ret; 
0x000574d2: push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x0007fced: push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x18; pop ebx; ret; 
0x000575e2: push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x000801cd: push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x18; pop ebx; ret; 
0x001334ee: push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x1c; ret; 
0x000871ca: push dword ptr [esp + 0x1c]; call 0x87100; add esp, 0x18; pop ebx; ret; 
0x0008a41c: push dword ptr [esp + 0x1c]; call 0x8a340; add esp, 0x18; pop ebx; ret; 
0x0008a740: push dword ptr [esp + 0x1c]; call 0x8a680; add esp, 0x1c; ret; 
0x00091e89: push dword ptr [esp + 0x1c]; call 0x91d40; add esp, 0x1c; ret; 
0x00093c0c: push dword ptr [esp + 0x1c]; call 0x93bb0; add esp, 0x18; pop ebx; ret; 
0x00097fa9: push dword ptr [esp + 0x1c]; call 0x97790; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000996bf: push dword ptr [esp + 0x1c]; call 0x99600; add esp, 0x18; pop ebx; ret; 
0x0009911d: push dword ptr [esp + 0x1c]; call 0x99740; add esp, 0x1c; ret; 
0x000a3fe5: push dword ptr [esp + 0x1c]; call 0xa4000; add esp, 0x1c; ret; 
0x000a50e1: push dword ptr [esp + 0x1c]; call 0xa50f0; add esp, 0x1c; ret; 
0x000a694c: push dword ptr [esp + 0x1c]; call 0xa6960; add esp, 0x1c; ret; 
0x000a6b79: push dword ptr [esp + 0x1c]; call 0xa6c40; add esp, 0x1c; ret; 
0x000a5b1b: push dword ptr [esp + 0x1c]; call 0xa9870; add esp, 0x18; pop ebx; ret; 
0x000cd13f: push dword ptr [esp + 0x1c]; call 0xbbc50; add esp, 0x18; pop ebx; ret; 
0x000cd17f: push dword ptr [esp + 0x1c]; call 0xbbd40; add esp, 0x18; pop ebx; ret; 
0x000a23b9: push dword ptr [esp + 0x1c]; call 0xbbd80; add esp, 0x18; pop ebx; ret; 
0x000a5b77: push dword ptr [esp + 0x1c]; call 0xbbdd0; add esp, 0x18; pop ebx; ret; 
0x000a5ac7: push dword ptr [esp + 0x1c]; call 0xbc300; add esp, 0x18; pop ebx; ret; 
0x001341d5: push dword ptr [esp + 0x1c]; call 0xbe130; add esp, 0x18; pop ebx; ret; 
0x000be3c1: push dword ptr [esp + 0x1c]; call 0xbe1a0; add esp, 0x1c; ret; 
0x000be595: push dword ptr [esp + 0x1c]; call 0xbe5b0; add esp, 0x1c; ret; 
0x00134475: push dword ptr [esp + 0x1c]; call 0xbfd60; add esp, 0x18; pop ebx; ret; 
0x000c05d9: push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36b9: push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000c6d39: push dword ptr [esp + 0x1c]; call 0xc75d0; add esp, 0x1c; ret; 
0x000cb619: push dword ptr [esp + 0x1c]; call 0xcb630; add esp, 0x1c; ret; 
0x000d22a6: push dword ptr [esp + 0x1c]; call 0xcd120; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d3ce9: push dword ptr [esp + 0x1c]; call 0xd3260; add esp, 0x18; pop ebx; ret; 
0x000e2e2d: push dword ptr [esp + 0x1c]; call 0xe2e40; add esp, 0x1c; ret; 
0x000e2eed: push dword ptr [esp + 0x1c]; call 0xe3390; add esp, 0x1c; ret; 
0x0013369a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x0013414a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x000764a9: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0009682b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x101ff0; add esp, 0x1c; ret; 
0x0010538d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x105180; add esp, 0x1c; ret; 
0x0011a5c5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11a470; add esp, 0x18; pop ebx; ret; 
0x0002455f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11a4f0; add esp, 0x18; pop ebx; ret; 
0x0012235e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x001290cd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129670; add esp, 0x1c; ret; 
0x0013061a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x130500; add esp, 0x18; pop ebx; ret; 
0x00034b49: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x34b10; add esp, 0x1c; ret; 
0x0003d259: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d1e0; add esp, 0x1c; ret; 
0x0003e32c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e230; add esp, 0x1c; ret; 
0x00044685: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x00047ab5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0004b2c5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x0005767e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x00057bbe: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62520; add esp, 0x1c; ret; 
0x0007a7ee: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8cf: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d6d0; add esp, 0x1c; ret; 
0x0006d6dd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d7f0; add esp, 0x1c; ret; 
0x0007454e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x74410; add esp, 0x1c; ret; 
0x00076419: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x76330; add esp, 0x1c; ret; 
0x0007f8ac: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x787f0; add esp, 0x1c; ret; 
0x0007fb39: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x18; pop ebx; ret; 
0x000574ce: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x0007fce9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x18; pop ebx; ret; 
0x000575de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x000801c9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x18; pop ebx; ret; 
0x000a6b75: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa6c40; add esp, 0x1c; ret; 
0x000a5b17: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa9870; add esp, 0x18; pop ebx; ret; 
0x000cd13b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbbc50; add esp, 0x18; pop ebx; ret; 
0x001346b4: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbbd40; add esp, 0x18; pop ebx; ret; 
0x000a5b73: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbbdd0; add esp, 0x18; pop ebx; ret; 
0x000a5ac3: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbc300; add esp, 0x18; pop ebx; ret; 
0x001341d1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe130; add esp, 0x18; pop ebx; ret; 
0x000be3bd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe1a0; add esp, 0x1c; ret; 
0x00134471: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbfd60; add esp, 0x18; pop ebx; ret; 
0x000c05d5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36b5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000c6d73: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc75d0; add esp, 0x1c; ret; 
0x000cb615: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcb630; add esp, 0x1c; ret; 
0x000e2ee9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xe3390; add esp, 0x1c; ret; 
0x00133ff6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x62110; add esp, 0x1c; ret; 
0x00134146: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6d400; add esp, 0x1c; ret; 
0x00096827: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x101ff0; add esp, 0x1c; ret; 
0x00105389: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x105180; add esp, 0x1c; ret; 
0x00122379: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x001290c9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129670; add esp, 0x1c; ret; 
0x0003e328: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e230; add esp, 0x1c; ret; 
0x00044681: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x00047ab1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0004b2c1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x00057cb9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62520; add esp, 0x1c; ret; 
0x0006d6d9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d7f0; add esp, 0x1c; ret; 
0x000a6b71: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa6c40; add esp, 0x1c; ret; 
0x000be3b9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe1a0; add esp, 0x1c; ret; 
0x000c05d1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c36b1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000cb611: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcb630; add esp, 0x1c; ret; 
0x0016ee65: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00166410: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016645e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016eda1: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x00163e05: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0017d3a7: push dword ptr [esp + 0x20]; call 0x17d220; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017d3e3: push dword ptr [esp + 0x20]; call 0x17d290; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017d38b: push dword ptr [esp + 0x20]; call 0x17d2a0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011ee63: push dword ptr [esp + 0x20]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0014f8ba: push dword ptr [esp + 0x20]; lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x000d31a1: push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00040610: push dword ptr [esp + 0x20]; push dword ptr [esi]; mov edx, dword ptr [esp + 0xc]; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001223aa: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x00132c5a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x00132eba: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x00131dba: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x0013264a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x001334ea: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x1c; ret; 
0x0017d806: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0012d0ed: push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00149ee0: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012d6b8: push dword ptr [esp + 0x24]; push 0; push 0x2000004; call eax; 
0x0014f8c3: push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x000885c7: push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0005e28a: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x001158e3: push dword ptr [esp + 0x28]; push -0x64; call 0x115900; add esp, 0x2c; ret; 
0x0005dbb1: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x00036151: push dword ptr [esp + 0x28]; push 0; call 0x360e0; add esp, 0x2c; ret; 
0x000bd8d1: push dword ptr [esp + 0x28]; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0017f881: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x00168e57: push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017f885: push dword ptr [esp + 0x28]; push esi; call dword ptr [ebx + 0x40]; 
0x001032ad: push dword ptr [esp + 0x2c]; call 0x104540; add esp, 0x2c; ret; 
0x001158b7: push dword ptr [esp + 0x2c]; call 0x115900; add esp, 0x2c; ret; 
0x0011a845: push dword ptr [esp + 0x2c]; call 0x11a750; add esp, 0x28; pop ebx; ret; 
0x0011a9dd: push dword ptr [esp + 0x2c]; call 0x11a860; add esp, 0x28; pop ebx; ret; 
0x0012f0b9: push dword ptr [esp + 0x2c]; call 0x12ee90; add esp, 0x28; pop ebx; ret; 
0x0013976f: push dword ptr [esp + 0x2c]; call 0x138c50; add esp, 0x2c; ret; 
0x00139895: push dword ptr [esp + 0x2c]; call 0x1397a0; add esp, 0x2c; ret; 
0x0013a01d: push dword ptr [esp + 0x2c]; call 0x139a60; add esp, 0x2c; ret; 
0x0018638b: push dword ptr [esp + 0x2c]; call 0x156c70; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0018644b: push dword ptr [esp + 0x2c]; call 0x159670; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x0016e167: push dword ptr [esp + 0x2c]; call 0x16dfb0; add esp, 0x2c; ret; 
0x0017c4df: push dword ptr [esp + 0x2c]; call 0x17c380; add esp, 0x28; pop ebx; ret; 
0x00034b25: push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x00036125: push dword ptr [esp + 0x2c]; call 0x360e0; add esp, 0x2c; ret; 
0x00040c55: push dword ptr [esp + 0x2c]; call 0x40830; add esp, 0x2c; ret; 
0x000427b3: push dword ptr [esp + 0x2c]; call 0x427c0; add esp, 0x2c; ret; 
0x0004ab7f: push dword ptr [esp + 0x2c]; call 0x4ac10; add esp, 0x2c; ret; 
0x0004e5ef: push dword ptr [esp + 0x2c]; call 0x4e680; add esp, 0x2c; ret; 
0x0004ef8f: push dword ptr [esp + 0x2c]; call 0x4f020; add esp, 0x2c; ret; 
0x0004f65f: push dword ptr [esp + 0x2c]; call 0x4f6f0; add esp, 0x2c; ret; 
0x00077649: push dword ptr [esp + 0x2c]; call 0x77470; add esp, 0x2c; ret; 
0x0005dbb7: push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x00079f95: push dword ptr [esp + 0x2c]; call 0x79db0; add esp, 0x28; pop ebx; ret; 
0x0007a9f1: push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x28; pop ebx; ret; 
0x0007a819: push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0005db89: push dword ptr [esp + 0x2c]; call 0x7fdf0; add esp, 0x2c; ret; 
0x00085d2d: push dword ptr [esp + 0x2c]; call 0x85c50; add esp, 0x28; pop ebx; ret; 
0x0008ebd1: push dword ptr [esp + 0x2c]; call 0x8ec00; add esp, 0x2c; ret; 
0x000996f5: push dword ptr [esp + 0x2c]; call 0x999f0; add esp, 0x2c; ret; 
0x00099725: push dword ptr [esp + 0x2c]; call 0x99cb0; add esp, 0x2c; ret; 
0x000bdd6a: push dword ptr [esp + 0x2c]; call 0xbdd80; add esp, 0x2c; ret; 
0x000c659f: push dword ptr [esp + 0x2c]; call 0xc6630; add esp, 0x2c; ret; 
0x000c9cbf: push dword ptr [esp + 0x2c]; call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5af: push dword ptr [esp + 0x2c]; call 0xca640; add esp, 0x2c; ret; 
0x000cacdf: push dword ptr [esp + 0x2c]; call 0xcad70; add esp, 0x2c; ret; 
0x000d7a7b: push dword ptr [esp + 0x2c]; call 0xd7b80; add esp, 0x2c; ret; 
0x000dadcd: push dword ptr [esp + 0x2c]; call 0xdd110; add esp, 0x2c; ret; 
0x000dae0d: push dword ptr [esp + 0x2c]; call 0xdf450; add esp, 0x2c; ret; 
0x000e879b: push dword ptr [esp + 0x2c]; call 0xe7ff0; add esp, 0x28; pop ebx; ret; 
0x000e86d3: push dword ptr [esp + 0x2c]; call 0xe8620; add esp, 0x28; pop ebx; ret; 
0x001045c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x104540; add esp, 0x2c; ret; 
0x001158b3: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x115900; add esp, 0x2c; ret; 
0x0011a841: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11a750; add esp, 0x28; pop ebx; ret; 
0x0011a9d9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11a860; add esp, 0x28; pop ebx; ret; 
0x0012f0b5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x12ee90; add esp, 0x28; pop ebx; ret; 
0x00139891: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1397a0; add esp, 0x2c; ret; 
0x0013a019: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x139a60; add esp, 0x2c; ret; 
0x0016e163: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x16dfb0; add esp, 0x2c; ret; 
0x00034b21: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x00036121: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x360e0; add esp, 0x2c; ret; 
0x00040c51: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x40830; add esp, 0x2c; ret; 
0x00043f59: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x427c0; add esp, 0x2c; ret; 
0x0004abb9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4ac10; add esp, 0x2c; ret; 
0x0004e629: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4e680; add esp, 0x2c; ret; 
0x0004efc9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4f020; add esp, 0x2c; ret; 
0x0004f699: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4f6f0; add esp, 0x2c; ret; 
0x00077645: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x77470; add esp, 0x2c; ret; 
0x00079f91: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x79db0; add esp, 0x28; pop ebx; ret; 
0x0007a9ed: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x28; pop ebx; ret; 
0x0007a815: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0005db85: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7fdf0; add esp, 0x2c; ret; 
0x00085d29: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x85c50; add esp, 0x28; pop ebx; ret; 
0x0008ebcd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8ec00; add esp, 0x2c; ret; 
0x000996f1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x999f0; add esp, 0x2c; ret; 
0x00099721: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x99cb0; add esp, 0x2c; ret; 
0x000bdd66: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xbdd80; add esp, 0x2c; ret; 
0x000c65d9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc6630; add esp, 0x2c; ret; 
0x000c9cf9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5e9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xca640; add esp, 0x2c; ret; 
0x000cad19: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcad70; add esp, 0x2c; ret; 
0x000d7a77: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd7b80; add esp, 0x2c; ret; 
0x000dae09: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdf450; add esp, 0x2c; ret; 
0x000e8797: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe7ff0; add esp, 0x28; pop ebx; ret; 
0x000e86cf: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe8620; add esp, 0x28; pop ebx; ret; 
0x001045c5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x104540; add esp, 0x2c; ret; 
0x0013988d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1397a0; add esp, 0x2c; ret; 
0x0013a015: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x139a60; add esp, 0x2c; ret; 
0x0016e15f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x16dfb0; add esp, 0x2c; ret; 
0x000360f1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x357f0; add esp, 0x2c; ret; 
0x0003611d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x360e0; add esp, 0x2c; ret; 
0x00040c4d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x40830; add esp, 0x2c; ret; 
0x00043f55: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x427c0; add esp, 0x2c; ret; 
0x0004abb5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4ac10; add esp, 0x2c; ret; 
0x0004e625: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4e680; add esp, 0x2c; ret; 
0x0004efc5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4f020; add esp, 0x2c; ret; 
0x0004f695: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4f6f0; add esp, 0x2c; ret; 
0x00077641: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x77470; add esp, 0x2c; ret; 
0x0007a811: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0005db81: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7fdf0; add esp, 0x2c; ret; 
0x000996ed: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x999f0; add esp, 0x2c; ret; 
0x000bdd62: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xbdd80; add esp, 0x2c; ret; 
0x000c65d5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc6630; add esp, 0x2c; ret; 
0x000c9cf5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc9d50; add esp, 0x2c; ret; 
0x000ca5e5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xca640; add esp, 0x2c; ret; 
0x000cad15: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcad70; add esp, 0x2c; ret; 
0x000d7a73: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd7b80; add esp, 0x2c; ret; 
0x000dae05: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdf450; add esp, 0x2c; ret; 
0x000bffd7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000bdc27: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000880e4: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00083f8d: push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0009463b: push dword ptr [esp + 0x2c]; push edx; call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x0008841e: push dword ptr [esp + 0x2c]; push edx; push ecx; push edi; call eax; 
0x001243c5: push dword ptr [esp + 0x30]; call 0x124320; add esp, 0x2c; ret; 
0x0014f8c7: push dword ptr [esp + 0x30]; call esi; 
0x00076502: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00025d47: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00111a5a: push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00111dff: push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00151995: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00151999: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00088256: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000bdea2: push dword ptr [esp + 0x30]; push ebp; call edi; 
0x00133ad8: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x0008832d: push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00168e73: push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0005e286: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000bde9e: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x000bdfc7: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x000c036b: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00133e76: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x00085ab0: push dword ptr [esp + 0x38]; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x001607bb: push dword ptr [esp + 0x38]; push 2; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x000bffdb: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00081c92: push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x000bdc2f: push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0016c564: push dword ptr [esp + 0x38]; push ebx; call dword ptr [eax + 4]; 
0x00079d83: push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00168ea5: push dword ptr [esp + 0x38]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0013dc45: push dword ptr [esp + 0x3c]; call 0x13d500; add esp, 0x3c; ret; 
0x001607c1: push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x0016cff5: push dword ptr [esp + 0x3c]; call 0x16cd00; add esp, 0x3c; ret; 
0x0003e9e0: push dword ptr [esp + 0x3c]; call eax; 
0x0002f1c8: push dword ptr [esp + 0x3c]; call esi; 
0x0002f094: push dword ptr [esp + 0x3c]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000bdc2b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0013dc41: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x13d500; add esp, 0x3c; ret; 
0x001607ef: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x0016cff1: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x16cd00; add esp, 0x3c; ret; 
0x0002f1c4: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x0013dc3d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x13d500; add esp, 0x3c; ret; 
0x001607eb: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1605f0; add esp, 0x3c; ret; 
0x0016cfed: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x16cd00; add esp, 0x3c; ret; 
0x00084644: push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0016d3ec: push dword ptr [esp + 0x3c]; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008825a: push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000880e8: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x000843e3: push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebp + 0x38]; 
0x00024e00: push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024d9e: push dword ptr [esp + 0x40]; call ecx; 
0x00024d47: push dword ptr [esp + 0x40]; call esi; 
0x00024dfc: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00024d9a: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00024d43: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x000c036f: push dword ptr [esp + 0x40]; push ebp; call esi; 
0x001549f5: push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0014f5eb: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0014f5e7: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00165188: push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001549f1: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0002a2b3: push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0002a2af: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00029d60: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002dc20: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002dc1c: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x001581c8: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000284db: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d42: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x001581cc: push dword ptr [esp + 0x58]; push esi; call edi; 
0x00029d64: push dword ptr [esp + 0x5c]; call edi; 
0x0002ad89: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000284d7: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002ad85: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000290cb: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002bacd: push dword ptr [esp + 0x60]; call esi; 
0x000284df: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000290c7: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002bac9: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x000289e9: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000290cf: push dword ptr [esp + 0x64]; call edi; 
0x000d3c58: push dword ptr [esp + 0x64]; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000d386d: push dword ptr [esp + 0x64]; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0002d079: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000289e5: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002d075: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000d3a9a: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x000289ed: push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000d3a9e: push dword ptr [esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0016424e: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x000a24ec: push dword ptr [esp + 0xc]; call 0xa23d0; add esp, 0xc; test eax, eax; jne 0xa2503; ret; 
0x0004058d: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017add0: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000404d0: push dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x14]; call edx; 
0x0003e9dc: push dword ptr [esp + 0xc]; push dword ptr [esp + 0x3c]; call eax; 
0x0017ec25: push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00081eba: push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00083ada: push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0017f753: push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x000fbef0: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x001585bc: push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0003be03: push dword ptr [esp + 8]; call 0x3bd80; pop ecx; pop edx; ret; 
0x00165beb: push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0017d98e: push dword ptr [esp + eax*8 - 0x77]; ret 0xe283; 
0x000bb111: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x000bf932: push dword ptr [esp + ecx - 0x75]; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x0017e529: push dword ptr [esp - 0x75]; inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0014f5e4: push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x000289e8: push dword ptr fs:[esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002d078: push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000d3a9d: push dword ptr fs:[esp + 0x70]; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0017be03: push dword ptr ss:[ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017adcd: push dword ptr ss:[ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00097648: push eax; adc al, 0x39; sal dword ptr [ebp - 0xe], cl; pop ebx; ret; 
0x00171b5f: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x00171cfd: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0018d4ca: push eax; adc al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ba516: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b7090: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000e0576: push eax; adc byte ptr [ebp - 0x74f88b2e], al; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x0016dab7: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000bb321: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000ba4f3: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b7070: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00073816: push eax; adc byte ptr [ebx - 0x4f763], cl; call dword ptr [edx - 0x77]; 
0x000ba576: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b70d3: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000ba5a6: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000b70f3: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x0008000b: push eax; adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00164ac8: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x164ae1; push ebx; call dword ptr [esi + 0x14]; 
0x001664d1: push eax; adc byte ptr [ecx], al; sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x000ba547: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b70b4: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0017bc50: push eax; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x000d997c: push eax; adc dh, dh; ret; 
0x0014337b: push eax; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x00189344: push eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016433d: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0016b40a: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0007fd6a: push eax; add al, 0x5b; pop esi; ret; 
0x00165682: push eax; add al, 0x5b; ret; 
0x00088843: push eax; add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x000796e2: push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x000f6efe: push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0006d7c6: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0016d1a9: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x001665e3: push eax; add al, 0x89; push ebx; adc bl, ch; ret; 
0x0008887b: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0009d19b: push eax; add al, 0x89; ret 0xf089; 
0x000b6e5a: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x001721de: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00051185: push eax; add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x001511e3: push eax; add al, 0xe9; retf 0xfffe; dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x00023efc: push eax; add al, 0xeb; ret 0xebe8; 
0x0002400c: push eax; add al, 0xeb; ret; 
0x00122e81: push eax; add al, 0xf6; ret 0x7401; 
0x0009611e: push eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19af037d], cl; call dword ptr [ecx + 0x50]; 
0x000344da: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000ee345: push eax; add cl, byte ptr [ecx - 0x46b73]; call dword ptr [edx - 0x77]; 
0x000ed653: push eax; add cl, byte ptr [ecx - 0x4837b]; call dword ptr [edx - 0x77]; 
0x000e9fc3: push eax; add cl, byte ptr [ecx - 0x4877b]; call dword ptr [edx - 0x77]; 
0x0003c229: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d3: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000a30e7: push eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbb4], cl; ret 0xf089; 
0x000a6636: push eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x001038b5: push eax; add dword ptr [eax], eax; add cl, al; jmp 0x5fbc2bc1; ret; 
0x0012c9f0: push eax; add dword ptr [ebp + 0xb6], ecx; add dh, al; inc edx; jmp dword ptr [eax]; 
0x000624f5: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x00061101: push eax; add dword ptr [ecx + 0xc60457], ecx; and eax, 0xfff792e9; jmp dword ptr [esi - 0x70]; 
0x000a2357: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0006490c: push eax; add dword ptr [ecx - 0x49f0fbaa], ecx; add byte ptr [ecx - 0x58f7b], cl; inc dword ptr [ebx - 0x5f16fe39]; out 0xff, eax; call dword ptr [edx - 0x73]; 
0x001611f7: push eax; add eax, 0x18; push eax; call 0x160fe0; add esp, 0x2c; ret; 
0x00076e73: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x000ba2cb: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000b6e78: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x0011bd5b: push eax; add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x0016ccb1: push eax; and byte ptr [ebp + 0xf0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x00088816: push eax; and byte ptr [ebp - 0x5d], ah; jl 0x8881c; add byte ptr [eax], al; ret; 
0x0013f9e6: push eax; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0016c581: push eax; and byte ptr [ebx + 0x50], dl; call dword ptr [edx + 4]; 
0x00163df0: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x000341b5: push eax; and eax, 0x1000; ret; 
0x00034185: push eax; and eax, 0x100; ret; 
0x00034155: push eax; and eax, 0x2000; ret; 
0x00034095: push eax; and eax, 0x200; ret; 
0x000340f5: push eax; and eax, 0x4000; ret; 
0x00034005: push eax; and eax, 0x400; ret; 
0x000340c5: push eax; and eax, 0x8000; ret; 
0x00034065: push eax; and eax, 0x800; ret; 
0x00034265: push eax; and eax, 1; ret; 
0x00034035: push eax; and eax, 2; ret; 
0x00034125: push eax; and eax, 4; ret; 
0x00033fd5: push eax; and eax, 8; ret; 
0x0010be6b: push eax; call 0x10bfa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010beca: push eax; call 0x10c1a0; add esp, 0x10; add esp, 0xc; ret; 
0x00057787: push eax; call 0x115980; add esp, 0x1c; ret; 
0x00114692: push eax; call 0x1178c0; add esp, 0x10; add esp, 0xc; ret; 
0x0011cd47: push eax; call 0x11ce50; add esp, 0x1c; ret; 
0x0002fc30: push eax; call 0x11f840; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002715c: push eax; call 0x1231e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009ac26: push eax; call 0x127050; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00142d66: push eax; call 0x142c60; add esp, 0x14; pop ebx; pop esi; ret; 
0x001611fb: push eax; call 0x160fe0; add esp, 0x2c; ret; 
0x0015850f: push eax; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x00041e98: push eax; call 0x1a0300; add esp, 0x18; pop ebx; ret; 
0x0002818c: push eax; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00102810: push eax; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0013e6b1: push eax; call 0x34b10; add esp, 0x10; add esp, 0xc; ret; 
0x0016b3c2: push eax; call 0x34b10; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e7846: push eax; call 0x34b10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003e830: push eax; call 0x3e8a0; add esp, 0x1c; ret; 
0x0003ff77: push eax; call 0x3fa70; add esp, 0x10; add esp, 0xc; ret; 
0x0003fca7: push eax; call 0x3ffe0; add esp, 0x10; add esp, 0xc; ret; 
0x00058704: push eax; call 0x58570; add esp, 0x18; pop ebx; ret; 
0x0005d363: push eax; call 0x76ee0; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000819e3: push eax; call 0x853a0; add esp, 0x1c; ret; 
0x0009466b: push eax; call 0x890b0; add esp, 0x28; pop ebx; ret; 
0x0009546b: push eax; call 0x890b0; add esp, 0x2c; ret; 
0x000d5489: push eax; call 0x893c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00086ee9: push eax; call 0x893c0; add esp, 0x1c; ret; 
0x001024b1: push eax; call 0x893c0; call dword ptr [esi]; 
0x00093dd7: push eax; call 0x8a290; add esp, 0x1c; ret; 
0x0009129f: push eax; call 0x908d0; add esp, 0x18; pop ebx; ret; 
0x00163be0: push eax; call 0x92320; add esp, 0x18; lea eax, [ebx + 0xa5cc]; pop ebx; ret; 
0x0002814e: push eax; call 0x92320; add esp, 0x1c; ret; 
0x00151368: push eax; call 0xbb960; add esp, 0x1c; ret; 
0x0009ab38: push eax; call 0xbbd80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000d702b: push eax; call 0xd3260; add esp, 0x1c; ret; 
0x000d2ef5: push eax; call 0xd54a0; add esp, 0x1c; ret; 
0x00058662: push eax; call dword ptr [ebp + 0x1c]; 
0x0012d867: push eax; call dword ptr [ebx + 0x14]; 
0x0017a2ad: push eax; call dword ptr [ebx + 0x24]; 
0x0017a334: push eax; call dword ptr [ebx + 0x28]; 
0x00164196: push eax; call dword ptr [ecx + 0x10]; 
0x000e8b60: push eax; call dword ptr [ecx + 0x20]; 
0x00163eb5: push eax; call dword ptr [ecx + 0xc]; 
0x00163f41: push eax; call dword ptr [ecx + 8]; 
0x00164252: push eax; call dword ptr [ecx]; 
0x0016433f: push eax; call dword ptr [edx + 0x10]; 
0x0016d23b: push eax; call dword ptr [edx + 0x14]; 
0x00168fe5: push eax; call dword ptr [edx + 0xc]; 
0x00163df3: push eax; call dword ptr [edx + 4]; 
0x0016b40d: push eax; call dword ptr [edx + 8]; 
0x0016d3f3: push eax; call dword ptr [edx]; 
0x000289f4: push eax; call eax; 
0x0007e106: push eax; call ebx; 
0x0008976d: push eax; call ecx; 
0x0014c0f6: push eax; call edi; 
0x000a0cbd: push eax; call edx; 
0x0007ef70: push eax; cli; jmp dword ptr [esi - 0x70]; 
0x000415e9: push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0009596c: push eax; cmpxchg dword ptr [edx], ecx; jne 0x95980; xor eax, eax; pop ebx; ret; 
0x0017d20d: push eax; dec esp; ret; 
0x001181a3: push eax; inc eax; pop ebx; pop esi; pop edi; ret; 
0x0004ff23: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003f6d1: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0010e12e: push eax; int1; jmp dword ptr [ebp - 0x75]; 
0x00042129: push eax; int1; mov eax, edx; ret; 
0x0009aa07: push eax; jbe 0x9aa10; ret; 
0x00124740: push eax; jmp 0xf1441c9; xchg edi, eax; ret 0xf883; 
0x0010cef5: push eax; jmp dword ptr [esi - 0x7d]; 
0x000ba613: push eax; jnp 0x5b17ca5e; pop esi; ret; 
0x000b7150: push eax; jnp 0x5e13959b; ret; 
0x00057780: push eax; lea eax, [edx - 0x6c034]; push eax; call 0x115980; add esp, 0x1c; ret; 
0x00075295: push eax; lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x000ccf4d: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0002f1be: push eax; lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x000dfb8e: push eax; lea ecx, [esp + 0x1c]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00076e45: push eax; leave; cli; jmp dword ptr [esi - 0x70]; 
0x001236b8: push eax; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00104d73: push eax; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0014f55d: push eax; mov dword ptr [esp + 0x10], eax; call 0x17ab80; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00128b0c: push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00157bd6: push eax; mov dword ptr [esp + 0x2c], eax; call 0x17ab80; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00024d95: push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00128b58: push eax; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00111464: push eax; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00040b26: push eax; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00040c14: push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000d3878: push eax; mov eax, dword ptr [esp + 0x68]; call eax; 
0x0016c550: push eax; mov ebx, dword ptr [esp + 0x34]; push ebx; call dword ptr [eax + 0x14]; 
0x0006c2b0: push eax; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x00129575: push eax; mov edx, dword ptr [esp + 0x58]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00102ad5: push eax; mov esi, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0007b473: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000976cb: push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x00085008: push eax; or al, 0x5b; ret; 
0x0008884d: push eax; or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x00080011: push eax; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00059616: push eax; or al, 0x89; sal dh, 1; ret 0xf40; 
0x0009c214: push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00104853: push eax; or al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000cd0c0: push eax; or byte ptr [eax], bh; cmovne ebx, eax; mov eax, ebx; pop ebx; ret; 
0x0011227a: push eax; or byte ptr [ebp - 0x11faf36d], cl; call dword ptr [edx - 0x73]; 
0x00030d4b: push eax; or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x001481e8: push eax; or byte ptr [ebp - 0xc], dh; ret; 
0x0008198c: push eax; or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000819ca: push eax; or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000ba331: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6ebe: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0016e0a8: push eax; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00086a89: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x00166021: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x16612b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0016e8ca: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00037aa1: push eax; or byte ptr [edi], cl; mov bh, 0x93; in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x00119136: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00151c92: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000b7110: push eax; or eax, 0x824448b; pop esi; ret; 
0x000ba5d3: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00092116: push eax; or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0018c9ca: push eax; pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188aca: push eax; pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba34f: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6edc: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015ed87: push eax; push 0; call 0x14bb50; add esp, 0x1c; ret; 
0x0016b61a: push eax; push 0; call 0x74540; add esp, 0x18; pop ebx; ret; 
0x0014a5a2: push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x0011ea70: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x0008cc32: push eax; push 0x818d3675; dec esi; stc; call dword ptr [edx + 0x50]; 
0x00162de7: push eax; push 0xa; call 0x14bb50; add esp, 0x1c; ret; 
0x00024eac: push eax; push 1; call 0x117b80; add esp, 0x1c; ret; 
0x0015f207: push eax; push 1; call 0x14bb50; add esp, 0x1c; ret; 
0x00111a57: push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00075299: push eax; push 1; push esi; call edx; 
0x0015f577: push eax; push 2; call 0x14bb50; add esp, 0x1c; ret; 
0x00111dfc: push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00160417: push eax; push 3; call 0x14bb50; add esp, 0x1c; ret; 
0x001616f7: push eax; push 4; call 0x14bb50; add esp, 0x1c; ret; 
0x00161d47: push eax; push 5; call 0x14bb50; add esp, 0x1c; ret; 
0x00111cd3: push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x001620e7: push eax; push 6; call 0x14bb50; add esp, 0x1c; ret; 
0x00163347: push eax; push 7; call 0x14bb50; add esp, 0x1c; ret; 
0x00162727: push eax; push 8; call 0x14bb50; add esp, 0x1c; ret; 
0x00162b17: push eax; push 9; call 0x14bb50; add esp, 0x1c; ret; 
0x000ba5f3: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b7130: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e9441: push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000f0161: push eax; push dword ptr [ebp - 0x5f8]; call esi; 
0x000a0c93: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0016baab: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00025daa: push eax; push dword ptr [ebx + 4]; call edi; 
0x00166553: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000423d9: push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000bcb02: push eax; push dword ptr [edi]; call ebx; 
0x000ccf52: push eax; push dword ptr [esi + 8]; call ebx; 
0x0012d859: push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x00115892: push eax; push dword ptr [esp + 0x1c]; call 0x1158d0; add esp, 0x1c; ret; 
0x0005ddd6: push eax; push dword ptr [esp + 0x1c]; call 0x115980; add esp, 0x1c; ret; 
0x0011a5fc: push eax; push dword ptr [esp + 0x1c]; call 0x11a470; add esp, 0x18; pop ebx; ret; 
0x0011cd17: push eax; push dword ptr [esp + 0x1c]; call 0x11cd60; add esp, 0x1c; ret; 
0x00134cb7: push eax; push dword ptr [esp + 0x1c]; call 0x134cd0; add esp, 0x1c; ret; 
0x00135017: push eax; push dword ptr [esp + 0x1c]; call 0x135030; add esp, 0x1c; ret; 
0x0016dd95: push eax; push dword ptr [esp + 0x1c]; call 0x16dae0; add esp, 0x10; add esp, 0xc; ret; 
0x001711e4: push eax; push dword ptr [esp + 0x1c]; call 0x171050; add esp, 0x1c; ret; 
0x0002457e: push eax; push dword ptr [esp + 0x1c]; call 0x2454a; add esp, 0x1c; ret; 
0x0003fb37: push eax; push dword ptr [esp + 0x1c]; call 0x3fb50; add esp, 0x1c; ret; 
0x00041b87: push eax; push dword ptr [esp + 0x1c]; call 0x41ba0; add esp, 0x1c; ret; 
0x0011eaa0: push eax; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x10; add esp, 0xc; ret; 
0x000996be: push eax; push dword ptr [esp + 0x1c]; call 0x99600; add esp, 0x18; pop ebx; ret; 
0x000a5a5c: push eax; push dword ptr [esp + 0x1c]; call 0xbbd80; add esp, 0x18; pop ebx; ret; 
0x000d3ce8: push eax; push dword ptr [esp + 0x1c]; call 0xd3260; add esp, 0x18; pop ebx; ret; 
0x0012235d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x0005767d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x00057bbd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x62520; add esp, 0x1c; ret; 
0x0007a7ed: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x0007a8ce: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d6d0; add esp, 0x1c; ret; 
0x000bce4d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6d7f0; add esp, 0x1c; ret; 
0x0007454d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x74410; add esp, 0x1c; ret; 
0x000574cd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x000575dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x00149edf: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0014f8c2: push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call esi; 
0x0013976e: push eax; push dword ptr [esp + 0x2c]; call 0x138c50; add esp, 0x2c; ret; 
0x0017c4de: push eax; push dword ptr [esp + 0x2c]; call 0x17c380; add esp, 0x28; pop ebx; ret; 
0x001158b2: push eax; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x115900; add esp, 0x2c; ret; 
0x0016bac7: push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0002f1c3: push eax; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call esi; 
0x00024d42: push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x001549f4: push eax; push dword ptr [esp + 0x44]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0002a2ae: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00029d5f: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002dc1b: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002ad84: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002bac8: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x0002d074: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0003e82f: push eax; push eax; call 0x3e8a0; add esp, 0x1c; ret; 
0x0003ff76: push eax; push eax; call 0x3fa70; add esp, 0x10; add esp, 0xc; ret; 
0x0003fca6: push eax; push eax; call 0x3ffe0; add esp, 0x10; add esp, 0xc; ret; 
0x000bdb72: push eax; push ebp; call esi; 
0x0012e395: push eax; push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0017ec9f: push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x00081f26: push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0007d2a9: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00085e99: push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0012d579: push eax; push ebx; push 0x2000001; call dword ptr [edi + 0x14]; 
0x0008864a: push eax; push ecx; call edx; 
0x00170fb9: push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00171016: push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x0016577f: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00165867: push eax; push edi; call dword ptr [edx + 0x18]; 
0x0005c005: push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00163a8f: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00163a8f: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0016a9ce: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000881d4: push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007c8aa: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0007d842: push eax; push edx; push esi; call ecx; 
0x00163b69: push eax; push esi; call 0x165490; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009221f: push eax; push esi; call 0x88830; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0007d5b4: push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0007567b: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000830db: push eax; push esi; call dword ptr [edi + 0x38]; 
0x0017f5c4: push eax; push esi; call dword ptr [edi + 0x40]; 
0x00081ffd: push eax; push esi; call dword ptr [edi + 0x48]; 
0x0008578f: push eax; push esi; call dword ptr [edi + 0xc]; 
0x00083a3c: push eax; push esi; call edx; 
0x000bcafc: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x001550f6: push eax; push esi; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x0012f557: push eax; push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e178: push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0012fcde: push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0011913f: push eax; push ss; ret; 
0x0011d3a0: push eax; pushal; stc; call dword ptr [ecx + 0x51]; 
0x0003b4b6: push eax; ret; 
0x000a6a1e: push eax; rol byte ptr [ebx - 0x69f0f606], 1; ret 0xb60f; 
0x0008880c: push eax; sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0012d336: push eax; sbb al, 0x89; ret; 
0x00058586: push eax; sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00027265: push eax; sbb byte ptr [edi], cl; mov bh, 0x97; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x00131cad: push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x00152754: push eax; stc; call dword ptr [eax + 0x56]; 
0x00097581: push eax; stc; call dword ptr [eax - 0x18]; 
0x0009757a: push eax; stc; call dword ptr [eax - 0x73]; 
0x0009ed38: push eax; stc; jmp ptr [eax + 1]; or eax, 0x8d500000; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x000b2bfd: push eax; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016996c: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00036b65: push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x0016e933: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0016c007: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00173f1d: push eax; test al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x72], bl; stc; call dword ptr [eax + 0x6a]; 
0x001732c9: push eax; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + 0x72], ebx; stc; call dword ptr [eax + 0x6a]; 
0x0018b54a: push eax; xor dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00089d41: push ebp; adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00188ebb: push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00047826: push ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, ebx; stc; call dword ptr [eax - 0x18]; 
0x00118f87: push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a9167: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000b10d7: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00124ff2: push ebp; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00101399: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x001013ae: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00164f14: push ebp; call 0x10acc0; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009a6d4: push ebp; call 0x23190; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0016c00b: push ebp; call dword ptr [eax + 0x10]; 
0x00081c96: push ebp; call dword ptr [eax + 0x1c]; 
0x00084648: push ebp; call dword ptr [esi + 0x20]; 
0x00075ca3: push ebp; call dword ptr [esi + 0x40]; 
0x00166031: push ebp; call dword ptr [esi]; 
0x0016c022: push ebp; call eax; 
0x000bdea6: push ebp; call edi; 
0x000bdb73: push ebp; call esi; 
0x000a01c7: push ebp; cmp edi, ecx; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x00076d3b: push ebp; in al, 0x89; ret; 
0x0012fcd9: push ebp; mov ah, 0x83; les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x000cbb1d: push ebp; mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x000cbd97: push ebp; mov eax, 0x1d4458b; ret 0x1689; 
0x00161504: push ebp; mov eax, 0x8910c483; ret; 
0x0007cd60: push ebp; mov eax, 0x91f8828d; stc; call dword ptr [eax - 0x73]; 
0x001322bd: push ebp; mov eax, 0xb86c828d; stc; call dword ptr [eax - 0x73]; 
0x0016ae45: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00117c52: push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00035376: push ebp; mov esp, 0x3dbd808d; stc; call dword ptr [eax - 0x18]; 
0x00180abf: push ebp; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret 0xf6a7; 
0x000eda1e: push ebp; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret; 
0x0005c4fa: push ebp; or al, 0xf6; ret 0xf01; 
0x0011d2fe: push ebp; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a09f7d], cl; call dword ptr [edx + 0x52]; 
0x0014a19f: push ebp; push 0; push edi; push ebx; call edx; 
0x0012e396: push ebp; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0016605e: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016601b: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00025d46: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0014b8fb: push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0010a9af: push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001658d6: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00081e12: push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00078685: push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00083f91: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0017f75a: push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0016d3f0: push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x000778e5: push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x001707ca: push ebp; push esi; call edi; 
0x0016e084: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x000f4ae1: push ebp; ret; 
0x000309f4: push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x000d4ac8: push ebp; stc; call dword ptr [eax + 0x53]; 
0x000d5216: push ebp; stc; call dword ptr [eax + 0x56]; 
0x000d572f: push ebp; stc; call dword ptr [eax + 0x57]; 
0x000d5812: push ebp; stc; call dword ptr [eax - 0x18]; 
0x000d6bdf: push ebp; stc; call dword ptr [eax - 0x18]; cmp cl, dl; cmc; jmp dword ptr [esi - 0x70]; 
0x0009e7a6: push ebp; stc; dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi - 7], dh; call dword ptr [eax - 0x73]; 
0x000399d3: push ebp; stc; dec dword ptr [edi]; inc ebp; call 0x2b9c6; jmp dword ptr [esi - 0x70]; 
0x000398fa: push ebp; stc; inc dword ptr [ebx - 0x7c72f314]; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0003df5a: push ebp; stc; jmp dword ptr [esi - 0x77]; 
0x000579c7: push ebp; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00143aff: push ebp; sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0003555a: push ebp; test al, 0x89; fsubp st(1); ret; 
0x00174bf4: push ebp; test byte ptr [ecx], al; ret 0xd101; 
0x0004707f: push ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x001665e6: push ebx; adc bl, ch; ret; 
0x000a0ce9: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x0008359d: push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x001890a4: push ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017b6dc: push ebx; add al, 0x29; ret 0x448b; 
0x0017b4c3: push ebx; add al, 0x29; ret 0xea39; 
0x000f3089: push ebx; add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0007ffdb: push ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012ceff: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000c0101: push ebx; add al, 0x83; ret; 
0x0005847f: push ebx; add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001041c1: push ebx; add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0007ba71: push ebx; add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x00028d4b: push ebx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029386: push ebx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00117221: push ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0003fa92: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0008dffd: push ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x6b12c7a], cl; call dword ptr [eax - 0x73]; 
0x00102ec5: push ebx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010a843: push ebx; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017a2af: push ebx; and al, 0x89; ret; 
0x000260f1: push ebx; and byte ptr [ebp - 0x720d8b2e], al; nop; mov al, 0x7e; stc; call dword ptr [edx - 0x73]; 
0x00130e8e: push ebx; and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x0014f6de: push ebx; call 0x17ab80; add esp, 0x10; mov eax, ebx; call eax; 
0x0002f425: push ebx; call 0x17ab80; mov dword ptr [esp], esi; call ebx; 
0x001381a4: push ebx; call 0x5db70; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001645d9: push ebx; call dword ptr [eax + 0x10]; 
0x00164afb: push ebx; call dword ptr [eax + 0x14]; 
0x0016a3e6: push ebx; call dword ptr [eax + 0x18]; 
0x001714a3: push ebx; call dword ptr [eax + 0x20]; 
0x00082e27: push ebx; call dword ptr [eax + 0x24]; 
0x0007b443: push ebx; call dword ptr [eax + 0xc]; 
0x001663ff: push ebx; call dword ptr [eax + 4]; 
0x001645c9: push ebx; call dword ptr [eax]; 
0x001646fa: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00077965: push ebx; call dword ptr [ebp + 0x1c]; 
0x0017ec29: push ebx; call dword ptr [ebp + 0x3c]; 
0x00083e64: push ebx; call dword ptr [ebp + 0x40]; 
0x00086072: push ebx; call dword ptr [ebp + 0xc]; 
0x00081f27: push ebx; call dword ptr [ecx + 0x40]; 
0x0017eee1: push ebx; call dword ptr [edi + 0x24]; 
0x0008678e: push ebx; call dword ptr [edi + 0x2c]; 
0x0007d2aa: push ebx; call dword ptr [edi + 0x40]; 
0x000825b1: push ebx; call dword ptr [edi + 0x44]; 
0x00086435: push ebx; call dword ptr [edi + 0xc]; 
0x0007b126: push ebx; call dword ptr [esi + 0x10]; 
0x00164ad1: push ebx; call dword ptr [esi + 0x14]; 
0x0007b981: push ebx; call dword ptr [esi + 0x18]; 
0x00078687: push ebx; call dword ptr [esi + 0x24]; 
0x00081a2a: push ebx; call dword ptr [esi + 0x30]; 
0x00081ebf: push ebx; call dword ptr [esi + 0x3c]; 
0x0008282c: push ebx; call dword ptr [esi + 0x40]; 
0x00085081: push ebx; call dword ptr [esi + 0xc]; 
0x00074c43: push ebx; call eax; 
0x001226fd: push ebx; call edx; 
0x001226a5: push ebx; call esi; 
0x0016b89e: push ebx; dec esp; push edx; call eax; 
0x000f2837: push ebx; inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x001867c7: push ebx; ja 0x1867ce; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00186e47: push ebx; jae 0x186e4e; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000249e7: push ebx; jae 0x249e3; call dword ptr [eax - 0x18]; 
0x00029d5a: push ebx; lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0008cf02: push ebx; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0004ff21: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003f6cf: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0016eeab: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x00115eef: push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010abdf: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005d9ff: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011580f: push ebx; mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116b0f: push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00104dc4: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00119b7f: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012639f: push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010b04f: push ebx; mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011929f: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d424f: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011721f: push ebx; mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001225ef: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b0bf: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011991f: push ebx; mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011774f: push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003c3cf: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011924f: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012665f: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001252df: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012505f: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010ac4f: push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001249bf: push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000990cf: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001152cf: push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005c007: push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016c59a: push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012d0f2: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00136164: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e23a8: push ebx; mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x001297cd: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00186039: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120e7a: push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a6ae: push ebx; mov ebx, 1; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x001290f9: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000922e2: push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x001193b8: push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00109917: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00089401: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099755: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00125c6b: push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0005da56: push ebx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00128bf9: push ebx; mov edi, esi; mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010c6ca: push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126e90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126960: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115850: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117790: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117260: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b090: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b00: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126870: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad80: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b60: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119970: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b00: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126780: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c80: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115290: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8880: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e900: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e620: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000b36db: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x0012cf9f: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003b1af: push ebx; or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000a0a80: push ebx; or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x00087eb0: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x0008000e: push ebx; or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x00039dfc: push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x7c8b; 
0x0009b4ca: push ebx; or dh, dh; ret 0xf0f; 
0x000f27cf: push ebx; out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x00131a6c: push ebx; push 0; push 0x1000001; call eax; 
0x00131979: push ebx; push 0; push 0x1000002; call edx; 
0x00131294: push ebx; push 0; push 0x1000005; call edx; 
0x0012d57a: push ebx; push 0x2000001; call dword ptr [edi + 0x14]; 
0x00130b1f: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000bca5c: push ebx; push dword ptr [edi]; call esi; 
0x000764a8: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000d31a0: push ebx; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000843e2: push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebp + 0x38]; 
0x00029683: push ebx; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000290c6: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x000289e4: push ebx; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0016c583: push ebx; push eax; call dword ptr [edx + 4]; 
0x0016ccba: push ebx; push eax; call dword ptr [edx + 8]; 
0x0014b8fa: push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0008394b: push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x0017f9fc: push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x24]; call dword ptr [eax + 0x40]; 
0x00073f38: push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00078930: push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00078897: push ebx; push edi; push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x0005bf62: push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00127ff6: push ebx; push esi; add eax, 0x3ac58100; mov ss, word ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001710a5: push ebx; push esi; call dword ptr [eax + 4]; 
0x0007b8e8: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007e321: push ebx; push esi; call eax; 
0x00176f39: push ebx; ret 0xffea; 
0x0010fba9: push ebx; ret; 
0x0013143d: push ebx; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x000f291f: push ebx; setne al; ret; 
0x0014d225: push ebx; stc; call dword ptr [eax + 0x52]; 
0x0009f980: push ebx; stc; call dword ptr [eax - 0x18]; 
0x000a0928: push ebx; stc; call dword ptr [eax - 0x73]; 
0x000a086f: push ebx; stc; call dword ptr [ebx + 0x50]; 
0x0016bdb4: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a0ba3: push ebx; sub dh, dh; ret 0x7502; 
0x00183b6a: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00078ac5: push ebx; xor al, 0x89; ret 0xc483; 
0x0008ceff: push ebx; xor byte ptr [0xa0988d53], al; add al, 0; add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x00119416: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00125c2f: push ebx; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000415a4: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000893d4: push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00151305: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x001892ab: push ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001663fc: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016643b: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000acea3: push ecx; add al, 0x5b; ret; 
0x000744d8: push ecx; add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00148425: push ecx; add dword ptr [ecx], edi; ret 0x830f; 
0x0002623a: push ecx; call 0x17ab80; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000798c3: push ecx; call 0x7b500; add esp, 0x1c; ret; 
0x00170d9b: push ecx; call dword ptr [eax + 4]; 
0x00170dd3: push ecx; call dword ptr [eax]; 
0x00117408: push ecx; call dword ptr [edx + 0x53]; 
0x0008825e: push ecx; call eax; 
0x0008864b: push ecx; call edx; 
0x00104e48: push ecx; cmp eax, 0xfffff001; jae 0x24e60; ret; 
0x000b6cfc: push ecx; imul ecx, dword ptr [eax + eax], 0x9274c181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015c422: push ecx; jno 0x15c41e; call dword ptr [eax - 0x18]; 
0x0015c5c3: push ecx; jno 0x15c5bf; call dword ptr [eax - 0x73]; 
0x000c0256: push ecx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000be2f8: push ecx; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000bd5ac: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x000d303d: push ecx; lea ecx, [esp + 0x5c]; mov dword ptr [esp + 0x20], ecx; push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x001224de: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0018f4e4: push ecx; loope 0x18f4e5; inc dword ptr [ecx + 0x3f870c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000df73f: push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0010a9b0: push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00088072: push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000bd5b1: push ecx; mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x000d3046: push ecx; mov ecx, dword ptr [esp + 0x20]; call ecx; 
0x00163a92: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0016b918: push ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0005b002: push ecx; or al, 0xf6; ret 0xf01; 
0x0018cde4: push ecx; or bh, bh; inc dword ptr [ecx + 0x41b30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001431b3: push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x001758bd: push ecx; or byte ptr [ecx], bh; ret 0x3d75; 
0x000ba125: push ecx; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000acf05: push ecx; pop es; pop ebx; ret; 
0x0016d304: push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x001226fa: push ecx; push 3; push ebx; call edx; 
0x0016d238: push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00164c32: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0016d24b: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x000a0c15: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000be26b: push ecx; push dword ptr [edi + 8]; call ebx; 
0x0007650a: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000880ec: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x001690ee: push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0017ec24: push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0016e8cc: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0016b40c: push ecx; push eax; call dword ptr [edx + 8]; 
0x00083a3b: push ecx; push eax; push esi; call edx; 
0x00077964: push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x001690ed: push ecx; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0016e0a5: push ecx; push edi; call dword ptr [eax + 8]; 
0x00088423: push ecx; push edi; call eax; 
0x000881d2: push ecx; push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00087864: push ecx; push edx; call 0x1799f0; add esp, 0x1c; ret; 
0x00171722: push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001716fb: push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00170c6b: push ecx; push edx; call dword ptr [eax + 4]; 
0x001708fa: push ecx; push edx; call dword ptr [eax]; 
0x001666ec: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000d7029: push ecx; push edx; push eax; call 0xd3260; add esp, 0x1c; ret; 
0x0008394c: push ecx; push esi; call dword ptr [eax + 0x40]; 
0x00170fba: push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00171017: push ecx; push esi; call dword ptr [edx + 8]; 
0x0017f9fd: push ecx; push esi; mov eax, dword ptr [esp + 0x24]; call dword ptr [eax + 0x40]; 
0x001904e4: push ecx; sar esi, 1; inc dword ptr [ecx + 0x3ea30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015400d: push ecx; sbb al, 0x39; ret; 
0x00087dfc: push ecx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0009b92d: push ecx; stc; call dword ptr [eax + 0x53]; 
0x0009c155: push ecx; stc; call dword ptr [eax + 0x56]; 
0x0009adff: push ecx; stc; call dword ptr [eax - 0x18]; 
0x0003459d: push ecx; sub al, 0x81; ret 0x200; 
0x0012269e: push ecx; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000b3342: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x0018d6c3: push edi; adc al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b4aa3: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000b33c3: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000b34c3: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000b4a80: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000b4b90: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000b4b13: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000b3403: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000b3423: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x000b33a0: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b4ac4: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b33e4: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00188cb4: push edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b3188: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x00061104: push edi; add al, 0xc6; add byte ptr [0xfff792e9], ah; jmp dword ptr [esi - 0x70]; 
0x0015327f: push edi; add al, 0xf7; ret 0xfffd; 
0x000b316a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0015249a: push edi; add byte ptr [eax - 0x73], dl; or esp, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x000b480a: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x000979a5: push edi; add dword ptr [ecx], edi; ret 0x830f; 
0x001999c4: push edi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b31a8: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b4878: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x00158676: push edi; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x0002703a: push edi; call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x00097d50: push edi; call 0x3caf0; mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00166062: push edi; call dword ptr [eax + 0x10]; 
0x0016f9ac: push edi; call dword ptr [eax + 0x14]; 
0x001657e1: push edi; call dword ptr [eax + 0x18]; 
0x00079d87: push edi; call dword ptr [eax + 0x1c]; 
0x0016601f: push edi; call dword ptr [eax + 8]; 
0x0016e088: push edi; call dword ptr [eax]; 
0x0007c8ac: push edi; call dword ptr [ebx + 0x38]; 
0x00165780: push edi; call dword ptr [ecx + 0x18]; 
0x00165868: push edi; call dword ptr [edx + 0x18]; 
0x00088424: push edi; call eax; 
0x000b3501: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000e1240: push edi; cld; jmp dword ptr [esi - 0x70]; 
0x000eda17: push edi; dec dword ptr [ebp + 0x558b015e]; or al, 0x89; test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret; 
0x001a0adf: push edi; dec dword ptr [ebp - 0x728fdb94]; je 0x1a0b0d; jl 0x1a0a74; ret; 
0x001a175f: push edi; dec dword ptr [ecx - 0x7683db84]; ret 0xe283; 
0x000c5965: push edi; fsubr st(1); ret; 
0x000dd98b: push edi; hlt; inc dword ptr [ebx + 0xbb10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x0016f323: push edi; in al, dx; call dword ptr [eax - 0x73]; 
0x0010d9de: push edi; int1; jmp dword ptr [ebp - 0x5f]; 
0x000b4b70: push edi; jge 0x5e6a6abe; pop ebx; ret; 
0x000409db: push edi; lds eax, ptr [ebx]; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0xa000000], ecx; ret 0xf03; 
0x000b3480: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0016ace3: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00165257: push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00164f6b: push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0005b6c0: push edi; or al, 0xf6; ret 0xf40; 
0x000b48ac: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000b48ce: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000b490c: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0007c8a3: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00031283: push edi; or byte ptr [ecx], al; ret 0xd139; 
0x000b31cc: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b4b30: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x001888c3: push edi; pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b320c: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x001226a2: push edi; push 0; push ebx; call esi; 
0x001226b6: push edi; push 1; push ebx; call esi; 
0x001226c9: push edi; push 2; push ebx; call esi; 
0x000b3460: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0007680a: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00166c41: push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000284d6: push edi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00073f39: push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00163f40: push edi; push eax; call dword ptr [ecx + 8]; 
0x000881d3: push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00117c51: push edi; push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00164afa: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00078686: push edi; push ebx; call dword ptr [esi + 0x24]; 
0x00081ebe: push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00083f92: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x000df87c: push edi; push ebx; call eax; 
0x0014a1a2: push edi; push ebx; call edx; 
0x0005c006: push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000f25ac: push edi; push edi; stc; call dword ptr [eax - 0x18]; 
0x00040ace: push edi; push edx; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 0x28], edx; call eax; 
0x00088070: push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00078931: push edi; push esi; call dword ptr [eax + 0x2c]; 
0x0017f75b: push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00078898: push edi; push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x0005bf63: push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016528e: push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016d3f1: push edi; push esi; push eax; call dword ptr [edx]; 
0x00083e62: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0016a3e2: push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0008f35c: push edi; ret 0; 
0x00104d32: push edi; ret 0x67; 
0x000d6bc5: push edi; sal ebp, 1; dec dword ptr [ebp - 0x652d37d]; call dword ptr [eax - 0x73]; 
0x000e8ed0: push edi; sar byte ptr [ecx], 1; ret; 
0x000f240b: push edi; stc; call dword ptr [eax + 0x53]; 
0x000f4fe7: push edi; stc; call dword ptr [eax + 0x55]; 
0x000f2320: push edi; stc; call dword ptr [eax + 0x6a]; 
0x000ea77c: push edi; stc; call dword ptr [eax - 0x18]; 
0x001021c5: push edi; stc; call dword ptr [eax - 0x18]; ret 0xf7ec; 
0x000fddd8: push edi; stc; call dword ptr [eax - 0x75]; 
0x000f2468: push edi; stc; call dword ptr [eax - 1]; 
0x000f235b: push edi; stc; call dword ptr [ebx + 0x50]; 
0x000fddd2: push edi; stc; dec dword ptr [ebp - 0x6a87d71]; call dword ptr [eax - 0x75]; 
0x00085628: push edi; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00148835: push edi; xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x0018b343: push edi; xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016d1a4: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0019e068: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x00199a86: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0018915b: push edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002872a: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00028de2: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x3a], ah; stc; call dword ptr [eax - 0x18]; 
0x000293b8: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x3a], esp; stc; call dword ptr [eax - 0x18]; 
0x000acd8a: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0002aac9: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2aacc; call dword ptr [eax - 0x18]; 
0x0002b738: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2b73b; call dword ptr [eax - 0x18]; 
0x0002ce27: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ce2a; call dword ptr [eax - 0x18]; 
0x0002d926: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2d929; call dword ptr [eax - 0x18]; 
0x0002e204: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2e207; call dword ptr [eax - 0x18]; 
0x0002ecfd: push edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jg 0x2ed00; call dword ptr [eax - 0x18]; 
0x0006294c: push edx; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0003f88d: push edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00199a9b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00087865: push edx; call 0x1799f0; add esp, 0x1c; ret; 
0x000268d4: push edx; call 0x17ab80; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0009463f: push edx; call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x000911ea: push edx; call 0x908d0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016dab5: push edx; call dword ptr [eax + 0x10]; 
0x00171723: push edx; call dword ptr [eax + 0x20]; 
0x001716fc: push edx; call dword ptr [eax + 0x24]; 
0x001044bb: push edx; call dword ptr [eax + 0xc]; 
0x00170c6c: push edx; call dword ptr [eax + 4]; 
0x001708fb: push edx; call dword ptr [eax]; 
0x0012fce0: push edx; call dword ptr [ebx + 0x14]; 
0x000781db: push edx; call dword ptr [ebx + 0x1c]; 
0x00163a90: push edx; call dword ptr [ecx + 0xc]; 
0x00163a90: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0016a9cf: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003e40d: push edx; call eax; 
0x0007ec69: push edx; cli; jmp dword ptr [esi - 0x70]; 
0x00199e2b: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00199beb: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00199ebb: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00199c8b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00199f5b: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0016f82c: push edx; in al, dx; call dword ptr [eax - 0x73]; 
0x0010deac: push edx; int1; jmp dword ptr [ebp - 0x75]; 
0x000bdb69: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00074c3c: push edx; lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x0007e0fd: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0007e1dc: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001645bf: push edx; lea edx, [esi - 0xcc604]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001646f0: push edx; lea edx, [esi - 0xcc604]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00131ef1: push edx; lea edx, [esi - 0xff064]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00199e49: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x00096e2a: push edx; mov al, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x001316b6: push edx; mov dword ptr [ebp - 0x120], edx; push dword ptr [ebp - 0x11c]; push ebx; call eax; 
0x00131851: push edx; mov dword ptr [ebp - 0x128], edx; push dword ptr [ebp - 0x11c]; push dword ptr [ebp - 0x120]; call eax; 
0x001666ed: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00040acf: push edx; mov eax, dword ptr [esp + 0x20]; mov dword ptr [esp + 0x28], edx; call eax; 
0x000881d5: push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00040bbd: push edx; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x20], edx; call eax; 
0x0007e101: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000f2818: push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0016ccaf: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xf0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0009a974: push edx; or al, 0x83; ret; 
0x00151c38: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0009aff4: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0015319a: push edx; or esi, edi; jmp dword ptr [esi - 0x70]; 
0x00080c50: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00080b20: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x001645c6: push edx; push 1; push ebx; call dword ptr [eax]; 
0x00074c40: push edx; push 1; push ebx; call eax; 
0x001646f7: push edx; push 2; push ebx; call dword ptr [eax]; 
0x001647a2: push edx; push 4; push ebx; call dword ptr [eax]; 
0x0002ff7b: push edx; push dword ptr [eax + 0x10c4]; call 0x1231b0; add esp, 0x1c; ret; 
0x0011146b: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0011eb03: push edx; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x10; add esp, 0xc; ret; 
0x001223a9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x121c10; add esp, 0x1c; ret; 
0x00132c59: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x62110; add esp, 0x1c; ret; 
0x00132eb9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x6d400; add esp, 0x1c; ret; 
0x00131db9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7f9d0; add esp, 0x1c; ret; 
0x00132649: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x7fc00; add esp, 0x1c; ret; 
0x001334e9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x80040; add esp, 0x1c; ret; 
0x000885c6: push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000bd8d0: push edx; push dword ptr [esp + 0x28]; push dword ptr [ebp]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00133adc: push edx; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x00133e7a: push edx; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x001243c4: push edx; push dword ptr [esp + 0x30]; call 0x124320; add esp, 0x2c; ret; 
0x00084643: push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0010bec9: push edx; push eax; call 0x10c1a0; add esp, 0x10; add esp, 0xc; ret; 
0x0002814d: push edx; push eax; call 0x92320; add esp, 0x1c; ret; 
0x000d702a: push edx; push eax; call 0xd3260; add esp, 0x1c; ret; 
0x000d2ef4: push edx; push eax; call 0xd54a0; add esp, 0x1c; ret; 
0x00058661: push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0017a2ac: push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017a333: push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000e8b5f: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016d76c: push edx; push eax; call edi; 
0x0002457d: push edx; push eax; push dword ptr [esp + 0x1c]; call 0x2454a; add esp, 0x1c; ret; 
0x0017ec9e: push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x00081f25: push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0007d2a8: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0007d5b3: push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x000830da: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0017f5c3: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00164b1d: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x001714a2: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016a47c: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001663fe: push edx; push ebx; call dword ptr [eax + 4]; 
0x0016643d: push edx; push ebx; call dword ptr [eax]; 
0x0007a0da: push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000df8b9: push edx; push ebx; call eax; 
0x0007e320: push edx; push ebx; push esi; call eax; 
0x00170d9a: push edx; push ecx; call dword ptr [eax + 4]; 
0x00170dd2: push edx; push ecx; call dword ptr [eax]; 
0x00088331: push edx; push ecx; call eax; 
0x00088071: push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00088422: push edx; push ecx; push edi; call eax; 
0x0007c8ab: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00135612: push edx; push edi; call eax; 
0x00166c40: push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0017f711: push edx; push esi; call dword ptr [eax + 0x48]; 
0x001710ee: push edx; push esi; call dword ptr [eax]; 
0x001356de: push edx; push esi; call eax; 
0x0007d843: push edx; push esi; call ecx; 
0x000e3605: push edx; push esi; stc; call dword ptr [eax - 0x18]; 
0x0019a2c8: push edx; ret 0xc2bb; 
0x000738ad: push edx; ret 0xffff; 
0x000672b3: push edx; ret; 
0x00131ef8: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000fbef5: push edx; sbb al, 0xf6; ret 0xf08; 
0x0019a2eb: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019a39b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019a24b: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009d4e4: push edx; stc; call dword ptr [eax - 0x18]; 
0x00131d31: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00199ab0: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0005e638: push es; aad 0x83; ret 0x101; 
0x0016cf66: push es; adc al, 0; add byte ptr [ecx - 0x197c7239], cl; jae 0x16cf6a; call dword ptr [ecx + 0x6a]; 
0x000fcb4e: push es; adc byte ptr [edi + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0018e50b: push es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00086783: push es; add al, byte ptr [eax]; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x000f9435: push es; add al, byte ptr [eax]; add byte ptr [ebx - 0x74f3dbbc], cl; je 0xf9464; add al, 0x83; ret; 
0x0013616c: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0002b9e2: push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00099123: push es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00199e82: push es; add byte ptr [eax], al; pop ebx; ret; 
0x000ac97f: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b2f1a: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00140515: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00030060: push es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000d0f16: push es; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x000504fe: push es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0016dc9a: push es; add byte ptr [ebx - 0x7c72fb14], al; cmp bh, al; stc; call dword ptr [ebp + 0x57]; 
0x0011acdc: push es; add byte ptr [ecx + 0x116156c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a593a: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a59fa: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x0019f0cb: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0007b311: push es; add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0009e58e: push es; add dword ptr [eax], eax; add dh, dh; ret; 
0x00161c09: push es; add dword ptr [ecx - 0x16efdbbc], ecx; ret; 
0x00088ae9: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x001160cf: push es; add esp, 0x14; pop esi; pop edi; ret; 
0x001466d9: push es; add esp, 0x18; pop ebx; ret; 
0x0003d240: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b270: push es; add esp, 0x34; pop ebx; pop esi; ret; 
0x00171ef6: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x000855b5: push es; add esp, 4; pop ebx; pop esi; ret; 
0x00041dbc: push es; bsr eax, eax; add eax, 1; ret; 
0x00041ddd: push es; bsr eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000424a1: push es; bsr eax, edx; xor eax, 0x1f; ret; 
0x001620e9: push es; call 0x14bb50; add esp, 0x1c; ret; 
0x00162108: push es; call 0x14bc20; add esp, 0x1c; ret; 
0x00133c46: push es; cmp al, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a3fa9: push es; idiv bh; and ch, 2; lea edx, [edx - 0x174aa4]; cmove eax, edx; ret; 
0x00132fc6: push es; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0012364f: push es; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x0019df92: push es; jb 0x19e010; lea eax, [edi + 5]; pop edi; ret; 
0x0019efb2: push es; jb 0x19f030; lea eax, [eax + 5]; pop edi; ret; 
0x0016e6d9: push es; jg 0x16e6c8; add esp, 4; pop ebx; pop esi; ret; 
0x0019e652: push es; jl 0x19e6d0; lea eax, [ecx + 6]; ret; 
0x00172abe: push es; jmp 0x172ac0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017ac9a: push es; jmp dword ptr [ecx]; 
0x000a8f22: push es; jne 0xa8f10; pop ebx; pop esi; pop edi; ret; 
0x000acd23: push es; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad123: push es; jne 0xacfe1; pop ebx; ret; 
0x000b1594: push es; jne 0xb1431; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b2d01: push es; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x000b4344: push es; jne 0xb4d00; pop edi; pop esi; pop ebx; ret; 
0x000bb089: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000b4951: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000badc9: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000af361: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4c1: push es; lea eax, [edx + 0xd]; ret; 
0x000acd20: push es; lea ecx, [edx + 6]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad120: push es; lea ecx, [edx + 6]; jne 0xacfe1; pop ebx; ret; 
0x000b6e93: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007ba12: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000ba3b4: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f41: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00033c69: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000b9764: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x00077ec9: push es; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000aaf81: push es; mov eax, edi; pop edi; ret; 
0x000ab0e1: push es; mov eax, edx; ret; 
0x000cd1e9: push es; mov eax, esi; pop ebx; pop esi; ret; 
0x0016c57b: push es; mov ebx, dword ptr [esp + 0x30]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0006c07e: push es; mov ecx, dword ptr [edi + eax*4 - 0x72754]; add ecx, ebx; jmp ecx; 
0x000b6f83: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba3e6: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6f73: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b32a3: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba2e6: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e83: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b6f38: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31b3: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3bec: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b3d4c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b975f: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b25ac: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b270c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000af358: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000af4b8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000aaf78: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000ab0d8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x001940fc: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001928e3: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00154986: push es; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x6f], al; stc; call dword ptr [eax - 0x18]; 
0x00119a84: push es; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000e2ea9: push es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a5a00: push es; pop ebx; pop esi; ret; 
0x00041547: push es; pop ebx; ret; 
0x0018ea80: push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018cd1a: push es; pop edi; call 0x17d639; add ebx, 0x41bf7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018acaa: push es; pop edi; call 0x17d639; add ebx, 0x439e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00188caa: push es; pop edi; call 0x17d639; add ebx, 0x45767; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b3271: push es; pop edi; pop esi; pop ebx; ret; 
0x000af2cc: push es; pop edi; ret; 
0x000c34ec: push es; pop es; add byte ptr [ebx - 0x72cbdb8c], cl; xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0016d24d: push es; push eax; call dword ptr [edx + 0x14]; 
0x0007ea81: push es; ret; 
0x00194100: push es; sub eax, ecx; pop ebp; ret; 
0x001928e7: push es; sub eax, ecx; ret; 
0x0016cc61: push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00085df8: push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00128943: push esi; adc al, 0x29; ret 0xca39; 
0x0002fe62: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0017f59d: push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x000b3164: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e6a33c5; pop ebx; ret; 
0x00188d6b: push esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00076a6c: push esi; add al, 0x39; ret; 
0x00170fb7: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00171014: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x0007e1de: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000b3183: push esi; add al, 0x89; js 0x5e6a35e3; pop ebx; ret; 
0x000b3194: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0011d4d4: push esi; add al, 0x89; ret 0xeac1; 
0x0006aca1: push esi; add al, 0x8b; inc esi; or byte ptr [ecx], bh; ret 0x840f; 
0x0007cade: push esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x00127ff7: push esi; add eax, 0x3ac58100; mov ss, word ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00199ad3: push esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba2c6: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e73: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b31a3: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x001151be: push esi; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x00078e1f: push esi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001150f4: push esi; add esp, 0xe4; pop ebx; pop esi; ret; 
0x000f5d36: push esi; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x00084ef5: push esi; and al, 1; ret 0x5689; 
0x000830d3: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00163b6a: push esi; call 0x165490; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00025f37: push esi; call 0x17ab80; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000260c7: push esi; call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x000326aa: push esi; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00092220: push esi; call 0x88830; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00163e21: push esi; call dword ptr [eax + 0x10]; 
0x00163e3f: push esi; call dword ptr [eax + 0x14]; 
0x000778e6: push esi; call dword ptr [eax + 0x1c]; 
0x000ebf4f: push esi; call dword ptr [eax + 0x20]; 
0x00078932: push esi; call dword ptr [eax + 0x2c]; 
0x000805ef: push esi; call dword ptr [eax + 0x30]; 
0x0007b31e: push esi; call dword ptr [eax + 0x34]; 
0x0008394d: push esi; call dword ptr [eax + 0x40]; 
0x0017f712: push esi; call dword ptr [eax + 0x48]; 
0x00163eee: push esi; call dword ptr [eax + 0xc]; 
0x00163dda: push esi; call dword ptr [eax + 4]; 
0x001710ef: push esi; call dword ptr [eax]; 
0x000859b2: push esi; call dword ptr [ebp + 0x30]; 
0x000843e7: push esi; call dword ptr [ebp + 0x38]; 
0x00084237: push esi; call dword ptr [ebp + 0xc]; 
0x0007680e: push esi; call dword ptr [ebx + 0x1c]; 
0x00078b1c: push esi; call dword ptr [ebx + 0x2c]; 
0x00075d5e: push esi; call dword ptr [ebx + 0x30]; 
0x00078ac3: push esi; call dword ptr [ebx + 0x34]; 
0x0007d5b5: push esi; call dword ptr [ebx + 0x40]; 
0x0017f14d: push esi; call dword ptr [ebx + 0x44]; 
0x0007567c: push esi; call dword ptr [ebx + 0x48]; 
0x00164a10: push esi; call dword ptr [ebx + 0xc]; 
0x0007580d: push esi; call dword ptr [ebx + 8]; 
0x0007b8e9: push esi; call dword ptr [edi + 0x18]; 
0x0008562c: push esi; call dword ptr [edi + 0x34]; 
0x000830dc: push esi; call dword ptr [edi + 0x38]; 
0x0007d931: push esi; call dword ptr [edi + 0x40]; 
0x0017f292: push esi; call dword ptr [edi + 0x44]; 
0x00081ffe: push esi; call dword ptr [edi + 0x48]; 
0x00085790: push esi; call dword ptr [edi + 0xc]; 
0x00170fbb: push esi; call dword ptr [edx + 0xc]; 
0x00171018: push esi; call dword ptr [edx + 8]; 
0x0007e322: push esi; call eax; 
0x0007d844: push esi; call ecx; 
0x00122b4a: push esi; call edi; 
0x0007529c: push esi; call edx; 
0x001245a5: push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000ddac0: push esi; hlt; inc dword ptr [ebx + 0xbb10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret 0x448b; 
0x0019c886: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0019c817: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a505f: push esi; inc ecx; jbe 0xa5074; cmove eax, edx; ret; 
0x000a5f5f: push esi; inc ecx; jbe 0xa5f74; cmove eax, edx; ret; 
0x000a610f: push esi; inc ecx; jbe 0xa6124; cmove eax, edx; ret; 
0x000a32ff: push esi; inc ecx; jne 0xa3306; lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x000a333f: push esi; inc ecx; jne 0xa3346; lea edx, [edx - 0x174704]; cmove eax, edx; ret; 
0x000a3dcf: push esi; inc ecx; jne 0xa3dd6; lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x000a502f: push esi; inc ecx; jne 0xa5036; lea edx, [edx - 0x174b34]; cmove eax, edx; ret; 
0x000a5e2f: push esi; inc ecx; jne 0xa5e36; lea edx, [edx - 0x176704]; cmove eax, edx; ret; 
0x000a5eaf: push esi; inc ecx; jne 0xa5eb6; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000bf2ff: push esi; inc ecx; jne 0xbf306; cmove eax, edx; ret; 
0x000a5f2f: push esi; inc ecx; jnp 0xa5f38; cmove eax, edx; ret; 
0x000be4ff: push esi; inc ecx; jnp 0xbe508; cmove eax, edx; ret; 
0x000be55f: push esi; inc ecx; jnp 0xbe568; cmove eax, edx; ret; 
0x000bf4cf: push esi; inc ecx; jnp 0xbf4d8; cmove eax, edx; ret; 
0x000c014f: push esi; inc ecx; jnp 0xc0158; cmove eax, edx; ret; 
0x000bcafd: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0007899a: push esi; mov al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00078899: push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x0005bf64: push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016aaaf: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00163e09: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0017f9fe: push esi; mov eax, dword ptr [esp + 0x24]; call dword ptr [eax + 0x40]; 
0x00165bef: push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00168ea9: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0016518c: push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00130afc: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x130b10; add esp, 8; pop ebx; ret; 
0x001550f7: push esi; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x00165252: push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0012457e: push esi; mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x001297ca: push esi; mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000d46a2: push esi; or al, 0x29; ret 0x428d; 
0x0003b97c: push esi; or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0003fc28: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0011db42: push esi; or al, 0x8d; xchg ebx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x00058b98: push esi; or al, 0xf6; ret 0x7401; 
0x0013084a: push esi; or al, 0xf6; ret 0xf04; 
0x000b2da6: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fb21b: push esi; or byte ptr [ebp + 0x390474d2], al; ret 0x6b75; 
0x000f4b87: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0007afed: push esi; or byte ptr [ecx], al; ret 0x3e89; 
0x0009c581: push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000b43a6: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b7107: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012536c: push esi; pop ebx; pop esi; ret; 
0x00130eae: push esi; push 0; push 0x1000003; call eax; 
0x00131748: push esi; push 0; push 0x1000004; call eax; 
0x0013145a: push esi; push 0; push 0x1000006; call ecx; 
0x001312f4: push esi; push 0; push 0x1000007; call eax; 
0x0012f558: push esi; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012e179: push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0016e085: push esi; push 3; push edi; call dword ptr [eax]; 
0x000781d7: push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00131222: push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x000a0b26: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0016368b: push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000bde9d: push esi; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push ebp; call edi; 
0x00081c91: push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00079d82: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024dfb: push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x0004058c: push esi; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000404cf: push esi; push dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x14]; call edx; 
0x00163df2: push esi; push eax; call dword ptr [edx + 4]; 
0x0016d3f2: push esi; push eax; call dword ptr [edx]; 
0x00166552: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00088649: push esi; push eax; push ecx; call edx; 
0x00081e11: push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0016a466: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00083e63: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0012d0f1: push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001193b7: push esi; push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00125c6a: push esi; push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00125c2e: push esi; push ebx; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00164c31: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00077963: push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0008806f: push esi; push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012fcdf: push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00040bbc: push esi; push edx; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 0x20], edx; call eax; 
0x000885c5: push esi; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00058660: push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0007a0d9: push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00031e5a: push esi; ret 0x7503; 
0x00137121: push esi; ret 0xf02; 
0x00031f0d: push esi; ret 0xf03; 
0x0005c7ae: push esi; ret 0xf40; 
0x00144335: push esi; ret 0xf80; 
0x00064d2c: push esi; ret; 
0x00131df0: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000566c6: push esi; salc; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000f5b58: push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00058152: push esi; sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a5d66: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf4c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a3256: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6d98c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001334a6: push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf55fdc92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000e3503: push esi; stc; call dword ptr [eax - 0x18]; 
0x000e84d2: push esi; stc; call dword ptr [eax - 0x73]; 
0x000ee9b6: push esi; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0017e490: push esi; sti; jmp dword ptr [esi - 0x70]; 
0x00057ac6: push esi; stosb byte ptr es:[edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001666d4: push esi; sub al, 0x89; ret; 
0x00166704: push esi; sub al, 1; ret 0x5689; 
0x0007e0ff: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x0019c846: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000cb8c6: push esi; test dh, dh; dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax - 0x73]; 
0x00166709: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x000f28d3: push esi; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000922df: push esi; xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00188f54: push esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001190db: push esp; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00119086: push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00118ced: push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118d1b: push esp; add byte ptr [eax], al; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00118fba: push esp; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118feb: push esp; add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000bd32d: push esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00163d21: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008784e: push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00093bbe: push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010c6cc: push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00126e92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00126962: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00115852: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00117792: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x00117262: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010b092: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00126b02: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x00126872: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x001268d2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0010ad82: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00126b62: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x00119972: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x00123b02: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x001269e2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x001266a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011f6f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00126782: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x001267b2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00102c82: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00126ad2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000e2e42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00115292: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x0010b6c2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000e88b2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000e8882: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0010ac92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011e9e2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011e902: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011e5f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011e622: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011ab92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00165b7c: push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x001714b5: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0016a479: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170af7: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a9c: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00170d97: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00170dcf: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013560f: push esp; and al, 0x10; push edx; push edi; call eax; 
0x001356db: push esp; and al, 0x10; push edx; push esi; call eax; 
0x0005816a: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x58180; add esp, 0xc; ret; 
0x00073b7a: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x73b90; add esp, 0xc; ret; 
0x00034abc: push esp; and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x000404d5: push esp; and al, 0x14; call edx; 
0x0008e2be: push esp; and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00183b6f: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009975b: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116ad7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bc7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126ca7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc37: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5c7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab67: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00126807: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0011941e: push esp; and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x001666ef: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000e8b5c: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00164b1a: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00128593: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0012559f: push esp; and al, 0x18; cmp esi, -1; je 0x1255c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00101f7c: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00099e09: push esp; and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115923: push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001028d1: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0005da5c: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120ecc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010b6fc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011531c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126d9c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a1c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126a9c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012683c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126bfc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a5c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012692c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c6c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012193c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e79c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011abfc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00185f34: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00129104: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011933d: push esp; and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00171f2d: push esp; and al, 0x18; test edx, edx; jne 0x171f40; add esp, 0xc; ret; 
0x0017209d: push esp; and al, 0x18; test edx, edx; jne 0x1720b0; add esp, 0xc; ret; 
0x0012516e: push esp; and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001253fa: push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e2e8d: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013336f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x0013457f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x001860f7: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003fe36: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b6: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7f8: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x000912f4: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925c8: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a48: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f54: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b4: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x000964af: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x0009671b: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x00040bc3: push esp; and al, 0x20; call eax; 
0x0017092d: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00121a51: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0016d769: push esp; and al, 0x20; push edx; push eax; call edi; 
0x001710eb: push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x001029e5: push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003f87d: push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x00040ad5: push esp; and al, 0x28; call eax; 
0x00125498: push esp; and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003f8a8: push esp; and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00118c70: push esp; and al, 0x28; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011f778: push esp; and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00120de8: push esp; and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00123a38: push esp; and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00115fb8: push esp; and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001169f8: push esp; and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x00117bd8: push esp; and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x0016e936: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00099f60: push esp; and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0010c3e3: push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000d6dbe: push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00123368: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x00185fb2: push esp; and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000d6c11: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00125ed5: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016e8c6: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000bdb6f: push esp; and al, 0x34; push eax; push ebp; call esi; 
0x000f2d27: push esp; and al, 0x38; call dword ptr gs:[0x10]; 
0x0012974c: push esp; and al, 0x38; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011f8dc: push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0012020c: push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d52: push esp; and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f12: push esp; and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00117187: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001052cf: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00105300: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00124de0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x00125e30: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x00126440: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x00128270: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0016eead: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0017f70e: push esp; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0016e8d5: push esp; and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x0014e197: push esp; and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00099b56: push esp; and al, 0x48; mov eax, 0x117; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009987e: push esp; and al, 0x48; mov eax, 0x118; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00099ad7: push esp; and al, 0x48; mov eax, 0x1a2; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00099804: push esp; and al, 0x48; mov eax, 0x1a3; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00128b06: push esp; and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00129577: push esp; and al, 0x58; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00119481: push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001289bd: push esp; and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x00171cf9: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00076520: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x00119343: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0003ac46: push esp; and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00171463: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad0: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017d1e0: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x0013674d: push esp; and al, 0xc; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000df6a1: push esp; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00127d62: push esp; and al, 0xc; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00127d1c: push esp; and al, 0xc; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0011c065: push esp; and al, 0xc; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0003a783: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008ef39: push esp; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008ef74: push esp; and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00040617: push esp; and al, 0xc; push dword ptr [edx]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017149f: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00171467: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00170ad4: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00170a87: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000df8b6: push esp; and al, 0xc; push edx; push ebx; call eax; 
0x00170e1c: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00118f52: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b5f2: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11b602; add esp, 0x1c; ret; 
0x0011cce3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00123807: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001287c3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x0013e9f5: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea44: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13ea54; add esp, 0x1c; ret; 
0x00140ee0: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x0016d4be: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d9d8: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x001800d3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x0003fa5b: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc78: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff48: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffcb: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x000577f2: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x000d2db8: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000dd14c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df48c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000e788b: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe78a7; add esp, 0x1c; ret; 
0x00171648: push esp; and al, 4; jmp dword ptr [eax + 0x20]; 
0x00171648: push esp; and al, 4; jmp dword ptr [eax + 0x20]; nop; xor eax, eax; ret; 
0x00171624: push esp; and al, 4; jmp dword ptr [eax + 0x24]; 
0x0017a504: push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x00166394: push esp; and al, 4; jmp dword ptr [eax + 4]; 
0x0008887e: push esp; and al, 4; jmp dword ptr [eax]; 
0x001663b8: push esp; and al, 4; jmp dword ptr [eax]; lea esi, [esi]; xor eax, eax; ret; 
0x0008887e: push esp; and al, 4; jmp dword ptr [eax]; lea esi, cs:[esi]; ret; 
0x00076563: push esp; and al, 4; jmp eax; 
0x00076563: push esp; and al, 4; jmp eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00093b7e: push esp; and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008acde: push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00117f75: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00034479: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034499: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001481cf: push esp; and al, 4; mov eax, dword ptr [eax + 0x4e28]; test eax, eax; jne 0x1481e7; ret; 
0x00033cef: push esp; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000342bf: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003428f: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00171915: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003ad4c: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003d685: push esp; and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008f9ef: push esp; and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x0008899f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x000889bf: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x000889df: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889ff: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x0008f9cf: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9af: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x0009a80f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7ef: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0009a89f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0009aaff: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x000341af: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003417f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0003414f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003408f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000340ef: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00033fff: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000340bf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003405f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003425f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0003402f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0003411f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00033fcf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008ebef: push esp; and al, 4; ret; 
0x000886d5: push esp; and al, 4; setae al; ret; 
0x00163eac: push esp; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0008d601: push esp; and al, 8; call dword ptr gs:[0x10]; 
0x00073fa1: push esp; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0010abb9: push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d209: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001721e1: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0008a799: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103929: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0011b3f2: push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00116cff: push esp; and al, 8; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x0010c59f: push esp; and al, 8; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x0008a995: push esp; and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x00118e5f: push esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d6e35: push esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00086a49: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b9: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f69: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0003aaa4: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0017c309: push esp; and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x17c318; ret; 
0x0010b9a6: push esp; and al, 8; mov ecx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0008eeb5: push esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010df69: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f899: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0008a979: push esp; and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00076464: push esp; and al, 8; pop ebx; jmp eax; 
0x000ef88c: push esp; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0008faf3: push esp; and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009497b: push esp; and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000330e0: push esp; and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x0003e6c3: push esp; cmp eax, 0x473ff00; call eax; 
0x0009e970: push esp; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000f291d: push esp; inc esi; push ebx; setne al; ret; 
0x000286ff: push esp; jg 0x286fb; call dword ptr [eax - 0x18]; 
0x00028d52: push esp; jg 0x28d4e; call dword ptr [eax - 0x18]; 
0x0002938d: push esp; jg 0x29389; call dword ptr [eax - 0x18]; 
0x000299e1: push esp; jg 0x299dd; call dword ptr [eax - 0x18]; 
0x0002a04e: push esp; jg 0x2a04a; call dword ptr [eax - 0x18]; 
0x0002a9d8: push esp; jg 0x2a9d4; call dword ptr [eax - 0x18]; 
0x0002b0ca: push esp; jg 0x2b0c6; call dword ptr [eax - 0x18]; 
0x0002c0d6: push esp; jg 0x2c0d2; call dword ptr [eax - 0x18]; 
0x0002cd24: push esp; jg 0x2cd20; call dword ptr [eax - 0x18]; 
0x0002d8a1: push esp; jg 0x2d89d; call dword ptr [eax - 0x18]; 
0x0002e0ee: push esp; jg 0x2e0ea; call dword ptr [eax - 0x18]; 
0x0002ec60: push esp; jg 0x2ec5c; call dword ptr [eax - 0x18]; 
0x00102ad9: push esp; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x001167d5: push esp; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00116755: push esp; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0002a2b6: push esp; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0011c1d8: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x00116829: push esp; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0011686d: push esp; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0010c75c: push esp; pop ebx; pop esi; ret; 
0x0016a3e3: push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0002a2b2: push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00029d63: push esp; push dword ptr [esp + 0x5c]; call edi; 
0x000bd5b0: push esp; push ecx; mov eax, dword ptr [esp + 0x3c]; push dword ptr [eax]; call edi; 
0x000328e2: push esp; ret; 
0x0008689d: push esp; sbb al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x00086ecc: push esp; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00181f35: push esp; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000a18c7: push esp; stc; call dword ptr [eax + 0x57]; 
0x00139aea: push esp; stc; call dword ptr [eax + 0x6a]; 
0x000bd782: push esp; stc; call dword ptr [eax - 0x18]; 
0x000c0472: push esp; stc; call dword ptr [eax - 0x18]; movsd dword ptr es:[edi], dword ptr [esi]; cmp bh, dh; jmp dword ptr [esi - 0x70]; 
0x001570b7: push esp; stc; call dword ptr [eax - 1]; 
0x00173e71: push esp; test al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x72], -7; call dword ptr [eax + 0x6a]; 
0x00044fc1: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x00096dae: push esp; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x0018d2a4: push ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00178d23: push ss; add byte ptr [eax], al; add bl, ch; fucomi st(0); ret 0xfbad; 
0x000e3490: push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0008a890: push ss; add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x0010df88: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003c180: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003cbe0: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c120: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011ce98: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00092454: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a088e: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008a85d: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0008a999: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0007669f: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0009fa50: push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00092031: push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0008ffc2: push ss; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00167300: push ss; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016d545: push ss; add esp, 0x74; pop ebx; pop edi; ret; 
0x0007fca8: push ss; add esp, 0x824; pop ebx; pop esi; ret; 
0x00088719: push ss; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001537b9: push ss; bnd call dword ptr [eax - 0x73]; 
0x000bb359: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0005e343: push ss; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000b2f47: push ss; jne 0xb3600; pop edi; pop esi; pop ebx; ret; 
0x0011ac59: push ss; lea eax, [ebx + 0x448c]; add esp, 4; pop ebx; pop esi; ret; 
0x000bb079: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000badb9: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a3210: push ss; lea eax, [edx - 0xaa694]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334a0: push ss; lea eax, [edx - 0xaa6a4]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x0006737b: push ss; mov ah, 0xff; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x000b3141: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x001770b6: push ss; mov ch, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000ba274: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e31: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00123af5: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000b3171: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000f1f32: push ss; mov eax, 1; ret; 
0x000f2ccf: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ba245: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b6e12: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3152: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00084038: push ss; or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00154605: push ss; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 1]; 
0x0003ce55: push ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b4a44: push ss; pop edi; pop esi; pop ebx; ret; 
0x00089fc0: push ss; ret; 
0x0008463f: push ss; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x000b6d60: push ss; xchg edx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9f9c: pushal; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a3956: pushal; add al, 0; add byte ptr [ecx], al; ret; 
0x001883ce: pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00166398: pushal; add al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00087e7b: pushal; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00119921: pushal; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00104d05: pushal; add cl, al; call 0xfe0860f; dec edi; ret 0xd4e9; 
0x001708d8: pushal; add esp, 0x18; pop ebx; ret; 
0x00171628: pushal; and al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00165f27: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0017164c: pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0002bad0: pushal; call esi; 
0x0010625b: pushal; cmp cl, bh; call dword ptr [eax + 0x6a]; 
0x0007a590: pushal; cwde; cli; jmp dword ptr [esi - 0x70]; 
0x0014817d: pushal; hlt; dec dword ptr [ebp - 0x640077b]; call dword ptr [eax - 0x73]; 
0x000b192c: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad43c: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00147d34: pushal; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00119487: pushal; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000d6dbc: pushal; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x001285f8: pushal; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012849c: pushal; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016ebc4: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012574f: pushal; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010b8df: pushal; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010b859: pushal; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0016909a: pushal; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000284e2: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0010c5d2: pushal; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x001261cb: pushal; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012625b: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00126119: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010b958: pushal; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000d6e33: pushal; mov edx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0010b9a4: pushal; mov edx, dword ptr [esp + 8]; mov ecx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00125fe5: pushal; mov esi, dword ptr [esp + 0x64]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001179de: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00117924: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000b429c: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008a8a5: pushal; or bl, bh; xor eax, eax; ret; 
0x0003dc7a: pushal; or byte ptr [eax], al; add byte ptr [ebx + 0x708d04ec], al; call dword ptr [esi + 0x57]; 
0x0008a766: pushal; or dh, bh; xor eax, eax; ret; 
0x0010c7c8: pushal; pop ebx; pop esi; pop edi; ret; 
0x0011d304: pushal; pop edi; stc; call dword ptr [edx + 0x52]; 
0x000bda01: pushal; pop es; add byte ptr [ebp - 0x6556b79], cl; call dword ptr [eax - 0x73]; 
0x000bcc4c: pushal; pop ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000290ca: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002bacc: pushal; push dword ptr [esp + 0x60]; call esi; 
0x000289ec: pushal; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00188eba: pushal; push ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014817c: pushal; pushal; hlt; dec dword ptr [ebp - 0x640077b]; call dword ptr [eax - 0x73]; 
0x0011d0f0: pushal; stc; call dword ptr [eax + 0x55]; 
0x00135256: pushal; stc; call dword ptr [eax - 0x18]; 
0x0011d3a1: pushal; stc; call dword ptr [ecx + 0x51]; 
0x0011d3bb: pushal; stc; call dword ptr [edx + 0x52]; 
0x001333ce: pushfd; aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0004db87: pushfd; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x001a0946: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0003c554: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001369a2: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db8c], cl; ret; 
0x000c8f0e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7db8c], cl; ret 0xf7ff; 
0x0004682e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c290e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00167f09: pushfd; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x68d057d], cl; call dword ptr [eax - 1]; 
0x00150228: pushfd; add dl, dh; call dword ptr [eax - 1]; 
0x0010c3c1: pushfd; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a3259: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x926736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a5d69: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940b36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a3219: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334a9: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x00076f30: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a29be: pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x0017a6f8: pushfd; add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000a30e5: pushfd; and al, 0x50; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbb4], cl; ret 0xf089; 
0x00125001: pushfd; and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001a66c6: pushfd; and al, 0x8c; add byte ptr [eax], al; add byte ptr [ecx - 0x2ef3dba4], cl; call 0x891f2959; ret; 
0x00099443: pushfd; and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009438f: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x000fca56: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0016ccb4: pushfd; and al, 0xf0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0015a939: pushfd; bnd call dword ptr [eax - 0x18]; 
0x00115285: pushfd; call 0x10b4c0; add esp, 0x1c; ret; 
0x00115761: pushfd; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00115785: pushfd; call 0x10c1a0; add esp, 0x1c; ret; 
0x001264ed: pushfd; call 0x115900; add esp, 0x20; add esp, 0xc; ret; 
0x001158e8: pushfd; call 0x115900; add esp, 0x2c; ret; 
0x0015c5d0: pushfd; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x000be4fc: pushfd; jmp 0x4202e4f8; jnp 0xbe508; cmove eax, edx; ret; 
0x000f2319: pushfd; ljmp 0x5725:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000f234b: pushfd; ljmp 0x8d08:0xec83ffff; cwde; and eax, 0x8dfff96f; or byte ptr [edx + 0x57], 0xf9; call dword ptr [ebx + 0x50]; 
0x000f2401: pushfd; ljmp 0x8d08:0xec83ffff; sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax + 0x53]; 
0x000f245e: pushfd; ljmp 0x8d08:0xec83ffff; sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax - 1]; 
0x0014f6e0: pushfd; mov ah, 2; add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x0009dcc6: pushfd; mov bh, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x001596c9: pushfd; mov byte ptr [0x8d500000], al; sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x00115068: pushfd; mov cl, 0xf9; call dword ptr [eax - 0x18]; 
0x0005836b: pushfd; mov cl, bh; call dword ptr [eax - 0x73]; 
0x000a505c: pushfd; mov eax, dword ptr [0x41f6fff6]; jbe 0xa5074; cmove eax, edx; ret; 
0x000b4206: pushfd; mov esp, 0xc030010; cdq; jmp ecx; 
0x00129de8: pushfd; mov gs, edi; call dword ptr [eax - 0x18]; 
0x000e5c4b: pushfd; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00024b64: pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x0009c73a: pushfd; popfd; stc; call dword ptr [eax - 0x18]; 
0x000a3178: pushfd; push 0x998bfff5; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x000d6ba0: pushfd; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000bfd2b: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0004f7dd: pushfd; ret 0x8d2c; 
0x0004f7ef: pushfd; ret 0x8d30; 
0x0005bb9b: pushfd; ret 0xb60f; 
0x0014facf: pushfd; ret 0xfff9; 
0x00111399: pushfd; ret 6; 
0x0004735f: pushfd; ret; 
0x000a3dd6: pushfd; scasd eax, dword ptr es:[edi]; call 0xc24e4ddc; ret; 
0x000a2988: pushfd; test al, 0xf6; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0xab; call 0xc24e3997; ret; 
0x0004780a: pushfd; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0008cbb2: pushfd; xchg ebx, eax; stc; call dword ptr [eax + 0x68]; 
0x0005685c: rcl ah, 0xfd; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x00041d68: rcl bl, 1; ljmp 0xc245:0xf20e183; cmovne edx, ebx; pop ebx; ret; 
0x0007c8a9: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x0012ccec: rcl byte ptr [eax - 0x73]; xchg ebp, edx; stc; call dword ptr [eax - 1]; 
0x0009e73b: rcl byte ptr [eax], 0x39; ret 0x820f; 
0x000a9849: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x001915df: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x00194435: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x0018f11d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x00129e64: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000d1259: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x000bfcdc: rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000b2a1f: rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012a8b6: rcl byte ptr [eax]; cmp eax, dword ptr [ecx + 0x4770]; jae 0x12a8cb; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x000b408d: rcl byte ptr [ebp - 0x3e7efff4], 0x8f; mov ebp, 0xc030010; xchg ecx, eax; jmp ecx; 
0x00173767: rcl byte ptr [edi], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0018915a: rcl byte ptr [edx + 4], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008e3c5: rcl byte ptr [edx - 0x18], 0x44; ret 0xffff; 
0x0016274a: rcl byte ptr [esi + edi*8 + 0x1cc483ff], cl; ret; 
0x000b2b82: rcl cl, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008b23e: rcl cl, 1; call 0xf639cbb9; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b75e: rcl cl, 1; call 0xf639d0d9; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001456be: rcl dword ptr [eax + 0x4dcc], 0xf6; ret 0xf01; 
0x001038b4: rcl dword ptr [eax + 1], 0; add cl, al; jmp 0x5fbc2bc1; ret; 
0x00131b70: rcl dword ptr [eax - 0x73], 0x86; iretd; stc; call dword ptr [eax + 0x57]; 
0x0016d34e: rcl dword ptr [eax - 0x74f3137d], 0x50; add al, 0x50; call dword ptr [edx + 0x10]; 
0x000bae25: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000b2b28: rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2b46: rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1e2: rcl dword ptr [ebx + 0x300105e], 0xc; cdq; jmp ecx; 
0x001666eb: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000ba124: rcl dword ptr [ecx + 0x5f], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba161: rcl dword ptr [edi + ebx*2], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b367a: rcl dword ptr [edi - 0x39], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba05f: rcl dword ptr [esi + 0x300105f], 0xc; xchg ecx, eax; jmp ecx; 
0x001297c9: rcl dword ptr [esi - 0x77]; salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000b6d5f: rcl dword ptr [esi], 0x92; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba1a5: rcl eax, 0x5e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4d5e: rcl ebx, 0xb1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0017d6aa: rcl ebx, 0xe3; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0012b3a5: rcl ebx, 1; call 0x5b14942f; pop esi; pop edi; ret; 
0x0012b445: rcl ebx, 1; call 0x5b1494cf; pop esi; pop edi; ret; 
0x0012b4e5: rcl ebx, 1; call 0x5b14956f; pop esi; pop edi; ret; 
0x0012b585: rcl ebx, 1; call 0x5b14960f; pop esi; pop edi; ret; 
0x0012b6c5: rcl ebx, 1; call 0x5b14974f; pop esi; pop edi; ret; 
0x0012b765: rcl ebx, 1; call 0x5b1497ef; pop esi; pop edi; ret; 
0x0012b805: rcl ebx, 1; call 0x5b14988f; pop esi; pop edi; ret; 
0x0012b8a5: rcl ebx, 1; call 0x5b14992f; pop esi; pop edi; ret; 
0x0012b945: rcl ebx, 1; call 0x5b1499cf; pop esi; pop edi; ret; 
0x0012ba85: rcl ebx, 1; call 0x5b149b0f; pop esi; pop edi; ret; 
0x000b404d: rcl esp, 0xbd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0006cd7e: rcr bl, 0x3c; and al, 0xdb; mov esp, 0x9024; add cl, ch; shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x00120925: rcr bl, 0x3c; and al, 0xdf; jmp 0x8321e20c; or eax, 0xb8000001; adc eax, 0x39000000; ret 0x4e0f; 
0x0012ad71: rcr byte ptr [eax], 0x39; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x001611f9: rcr byte ptr [eax], 0x50; call 0x160fe0; add esp, 0x2c; ret; 
0x00131e4f: rcr byte ptr [ebx + 0x5e], 0x5d; ret; 
0x000270bc: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0004009d: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00094f0f: rcr byte ptr [ebx + 0x5e], 0x8d; inc esp; add bh, bh; pop edi; pop ebp; ret; 
0x00026284: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x001355d5: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00056a50: rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00050e9b: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a5761: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x000420f1: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x0014aee0: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x001861d0: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0007e05c: rcr byte ptr [ebx + edi*8 - 1], 0x8d; xchg byte ptr [edx + edx*4], cl; stc; call dword ptr [eax - 0x73]; 
0x0003e206: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00082f69: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x0005914d: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00122c7e: rcr byte ptr [ebx], 0x89; ret; 
0x000ed8ba: rcr byte ptr [ebx], 0x89; shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x0011137b: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x0018cf4a: rcr byte ptr [ecx], 1; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019add2: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x000a5765: rcr byte ptr [edi + 0x5d], 1; ret; 
0x00187e32: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a983d: rcr byte ptr [edi + 0x5e], 1; ret; 
0x0016a9c6: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0009fb2c: rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x0014c412: rcr byte ptr [edx], 0x89; ret 0x25; 
0x00104666: rcr byte ptr [edx], 0x89; ret 0x8d89; 
0x000ba1a6: rcr byte ptr [esi + 0x10], 1; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0003f75b: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0011cdfd: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x00030607: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000507a2: rcr byte ptr [esi + 0x5f], 1; ret; 
0x000bfd2c: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00030964: rcr byte ptr [esi], 0x89; loope 0x308f2; ret 0x25; 
0x00030bdd: rcr byte ptr [esi], 0x89; loope 0x30b6b; ret 0x25; 
0x0018601a: rcr dl, cl; cli; jmp dword ptr [esi - 0x70]; 
0x000b4184: rcr dword ptr [0x30010bd], 0xc; cdq; jmp ecx; 
0x000b6d1d: rcr dword ptr [eax - 0x6e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2b26: rcr dword ptr [ebx + 0x30010d1], 0xc; xchg ecx, eax; jmp ecx; 
0x00050730: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x000b9f9a: rcr dword ptr [ebx + 0x60], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00137a07: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x00042430: rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x000ba099: rcr dword ptr [edi + ebx*2 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a62: rcr dword ptr [edi - 0x2e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2be2: rcr dword ptr [edi - 0x2f], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4242: rcr dword ptr [edi - 0x44], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2c27: rcr dword ptr [edx], 0xd1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4205: rcr dword ptr [esp + edi*4 + 0xc030010], 0x99; jmp ecx; 
0x000ba01d: rcr eax, 0x5f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00185d19: rcr ebp, cl; cli; jmp dword ptr [esi - 0x70]; 
0x000b2b66: rcr ebx, 0xd1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b6d99: rcr esp, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012554a: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00104de0: rdtsc; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000bbc9a: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0008a910: rep movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0014b83f: rep movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000bbd1d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bbcf3: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0008a518: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000bbd5c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000bbdbb: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bbdb7: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00103736: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0008809a: repne scasd eax, dword ptr es:[edi]; stc; jmp dword ptr [esi - 0x70]; 
0x0002b955: ret 0; 
0x00089714: ret 0x100; 
0x0004563a: ret 0x101; 
0x001a127d: ret 0x1073; 
0x00089a85: ret 0x1074; 
0x000a0a85: ret 0x1089; 
0x0009dca1: ret 0x108; 
0x000bcb78: ret 0x108b; 
0x00060a1a: ret 0x10; 
0x00042052: ret 0x10b8; 
0x000782fa: ret 0x110; 
0x0009210f: ret 0x118b; 
0x00192df1: ret 0x11; 
0x0012192a: ret 0x121; 
0x0013c82b: ret 0x1274; 
0x0004a506: ret 0x127e; 
0x000dfb4a: ret 0x12eb; 
0x00119e2f: ret 0x1375; 
0x0011985d: ret 0x1389; 
0x000254d7: ret 0x13e8; 
0x00056d43: ret 0x13eb; 
0x000dfa1a: ret 0x141b; 
0x000273cc: ret 0x142b; 
0x001a0f59: ret 0x1473; 
0x0003355f: ret 0x1474; 
0x000a9054: ret 0x1489; 
0x0005af6a: ret 0x1499; 
0x0002e8b4: ret 0x14; 
0x0002bfba: ret 0x14eb; 
0x00171938: ret 0x1572; 
0x0008147c: ret 0x157d; 
0x00066d75: ret 0x15; 
0x0010f88a: ret 0x15ab; 
0x001a6af0: ret 0x1673; 
0x000e5004: ret 0x1674; 
0x000badb7: ret 0x1676; 
0x000bb077: ret 0x167c; 
0x000cbd9d: ret 0x1689; 
0x000d6ff6: ret 0x16d; 
0x000dc7b9: ret 0x16e9; 
0x000df6ba: ret 0x177b; 
0x00122f33: ret 0x1789; 
0x0017cfe5: ret 0x178b; 
0x001a6e35: ret 0x1873; 
0x0013f3f5: ret 0x1875; 
0x000bcc8c: ret 0x188b; 
0x0013c30f: ret 0x189; 
0x00170d74: ret 0x18b; 
0x0017b8b2: ret 0x18eb; 
0x000ff685: ret 0x1972; 
0x0013d67f: ret 0x1988; 
0x000dd617: ret 0x19; 
0x000fc4ec: ret 0x1a8; 
0x0009f249: ret 0x1a8b; 
0x00070484: ret 0x1a; 
0x00046c62: ret 0x1b8; 
0x0013ebd1: ret 0x1b9; 
0x000f7efb: ret 0x1be; 
0x000a4465: ret 0x1c74; 
0x00036ece: ret 0x1c8d; 
0x001903be: ret 0x1d72; 
0x0009c2b6: ret 0x1d73; 
0x000ba83e: ret 0x1d75; 
0x000f2c4e: ret 0x1db8; 
0x000d76c6: ret 0x1db9; 
0x00050d20: ret 0x1e89; 
0x000670b2: ret 0x1eeb; 
0x00065eda: ret 0x1f4; 
0x00137a6d: ret 0x1f72; 
0x00050c2d: ret 0x1f74; 
0x0019f8ce: ret 0x1f75; 
0x0011eeba: ret 0x1f7b; 
0x00034b8a: ret 0x1f; 
0x000d3479: ret 0x1fb8; 
0x000345a0: ret 0x200; 
0x0017f49d: ret 0x202; 
0x00027a74: ret 0x2093; 
0x00024b4b: ret 0x20; 
0x00041fc0: ret 0x20b8; 
0x00023474: ret 0x20d9; 
0x00047a19: ret 0x2174; 
0x0014ec2a: ret 0x220b; 
0x0011ebda: ret 0x225b; 
0x00052a20: ret 0x2273; 
0x0011eb8a: ret 0x22ab; 
0x0009eaca: ret 0x236b; 
0x0011ea8a: ret 0x23ab; 
0x0007ea6a: ret 0x23cb; 
0x000f2a0a: ret 0x242; 
0x00092ac9: ret 0x2473; 
0x0003ac31: ret 0x2474; 
0x000d2941: ret 0x24f7; 
0x001022c5: ret 0x2574; 
0x00025919: ret 0x25; 
0x00056cf7: ret 0x2674; 
0x000bada7: ret 0x2676; 
0x000bb067: ret 0x267c; 
0x000ba859: ret 0x275; 
0x000835a0: ret 0x2773; 
0x0013e68a: ret 0x27ab; 
0x0014e66a: ret 0x27cb; 
0x001773c3: ret 0x27e8; 
0x000a9c4a: ret 0x280f; 
0x001a0f45: ret 0x2873; 
0x000cbe90: ret 0x28b; 
0x00059db2: ret 0x2901; 
0x000b2a58: ret 0x2910; 
0x000baef8: ret 0x2940; 
0x0005dc3a: ret 0x294; 
0x000d9c30: ret 0x2964; 
0x0007d5f8: ret 0x2999; 
0x000868aa: ret 0x29; 
0x001a6adc: ret 0x2a73; 
0x00100481: ret 0x2a7e; 
0x0013fc94: ret 0x2b01; 
0x000a3cf4: ret 0x2b73; 
0x001672e3: ret 0x2b8; 
0x00199aba: ret 0x2c73; 
0x00160b66: ret 0x2cf; 
0x0018c18e: ret 0x2d72; 
0x0012fd71: ret 0x2d74; 
0x00090553: ret 0x2d75; 
0x00030568: ret 0x2deb; 
0x000eaa44: ret 0x2e01; 
0x000bb371: ret 0x2e10; 
0x0013ec92: ret 0x2eb8; 
0x00028294: ret 0x2ec3; 
0x0010df5a: ret 0x2edb; 
0x0003029d: ret 0x2f3c; 
0x00034ea2: ret 0x2f72; 
0x000a4856: ret 0x2f74; 
0x0006eed0: ret 0x2f; 
0x0016f001: ret 0x2feb; 
0x00040cea: ret 0x3039; 
0x000fe50a: ret 0x30f; 
0x000bdd3a: ret 0x30fb; 
0x0012466c: ret 0x3113; 
0x0019a47b: ret 0x3273; 
0x000cc7d7: ret 0x328b; 
0x000980b8: ret 0x32e8; 
0x000384f1: ret 0x3325; 
0x000a0e3a: ret 0x3374; 
0x0016b391: ret 0x340c; 
0x0005d9fa: ret 0x343b; 
0x000db818: ret 0x348d; 
0x00130aea: ret 0x34b; 
0x00056981: ret 0x3574; 
0x000bb057: ret 0x367c; 
0x000bd79a: ret 0x369b; 
0x0013ca4a: ret 0x37; 
0x000a54e4: ret 0x3801; 
0x0005d61a: ret 0x381b; 
0x000faa68: ret 0x3839; 
0x000ba823: ret 0x3875; 
0x0009ef29: ret 0x388b; 
0x000a0b06: ret 0x38b; 
0x000285b1: ret 0x3901; 
0x00137532: ret 0x3902; 
0x00039e3a: ret 0x3903; 
0x00041056: ret 0x3904; 
0x0005a7ca: ret 0x3906; 
0x00052a3f: ret 0x3908; 
0x000d692b: ret 0x3909; 
0x00141764: ret 0x390c; 
0x000989a3: ret 0x3910; 
0x0005d50a: ret 0x392b; 
0x000a0b0d: ret 0x3964; 
0x000bad94: ret 0x3976; 
0x000a678e: ret 0x3990; 
0x0017d49a: ret 0x399b; 
0x000d295f: ret 0x39f5; 
0x0003035c: ret 0x3a3c; 
0x0019f8b3: ret 0x3a75; 
0x000e6dd9: ret 0x3a7d; 
0x000663d3: ret 0x3a80; 
0x00039a73: ret 0x3b01; 
0x0005b79d: ret 0x3b2d; 
0x00054dad: ret 0x3b8; 
0x000bd2aa: ret 0x3b8b; 
0x000bd26a: ret 0x3bcb; 
0x0014d24a: ret 0x3beb; 
0x000460f5: ret 0x3c01; 
0x0012d1c6: ret 0x3c6f; 
0x000d2ab3: ret 0x3c8d; 
0x000cd0ea: ret 0x3d4b; 
0x000a34e2: ret 0x3d73; 
0x001758c0: ret 0x3d75; 
0x0005dad8: ret 0x3d; 
0x00199aa5: ret 0x3e73; 
0x0007aff0: ret 0x3e89; 
0x0003cf3a: ret 0x3efb; 
0x0010058f: ret 0x3f8b; 
0x000bb3d7: ret 0x3f; 
0x000cce6a: ret 0x3fcb; 
0x001a52ed: ret 0x4000; 
0x0003cdca: ret 0x406b; 
0x000a344a: ret 0x4073; 
0x001765a9: ret 0x4074; 
0x00151731: ret 0x4089; 
0x00096f99: ret 0x408b; 
0x00054e06: ret 0x408d; 
0x00042024: ret 0x40b8; 
0x00057504: ret 0x40c7; 
0x000a37ac: ret 0x4174; 
0x00141cc1: ret 0x4189; 
0x0005a67c: ret 0x418d; 
0x0011cc6a: ret 0x41cb; 
0x00027a9c: ret 0x420f; 
0x00028953: ret 0x428b; 
0x000bb25e: ret 0x428d; 
0x0003cb4a: ret 0x42eb; 
0x0009b706: ret 0x430; 
0x00039f1c: ret 0x430f; 
0x0003cafa: ret 0x433b; 
0x00167a56: ret 0x4388; 
0x000c1d5e: ret 0x438d; 
0x0013d8ad: ret 0x4439; 
0x0012d102: ret 0x4483; 
0x000288e2: ret 0x4489; 
0x0002d87b: ret 0x448b; 
0x000fa341: ret 0x448d; 
0x000606fe: ret 0x44c6; 
0x0002d148: ret 0x44c7; 
0x00045102: ret 0x44f6; 
0x00041d70: ret 0x450f; 
0x001379c8: ret 0x4572; 
0x000cbc3a: ret 0x4583; 
0x00030638: ret 0x4589; 
0x00030a1c: ret 0x458b; 
0x000bc87a: ret 0x45bb; 
0x000d491c: ret 0x45c7; 
0x0012d634: ret 0x4639; 
0x000752a0: ret 0x4689; 
0x00058f49: ret 0x468b; 
0x00179047: ret 0x468d; 
0x000f5e48: ret 0x46c7; 
0x000d4af8: ret 0x470f; 
0x000fe7ba: ret 0x474; 
0x0014015b: ret 0x4789; 
0x00034f17: ret 0x478b; 
0x001117d7: ret 0x478d; 
0x001664d9: ret 0x4889; 
0x0014b962: ret 0x488d; 
0x001253b8: ret 0x489; 
0x00045446: ret 0x48b; 
0x00041285: ret 0x48d; 
0x000ffea2: ret 0x48e8; 
0x0008b1a4: ret 0x4975; 
0x0019dc73: ret 0x498d; 
0x0003c3ca: ret 0x4a6b; 
0x0009c346: ret 0x4aef; 
0x00119df1: ret 0x4b75; 
0x0017369d: ret 0x4b8; 
0x000bf940: ret 0x4b8b; 
0x00031894: ret 0x4c0f; 
0x0019a461: ret 0x4c73; 
0x00172c79: ret 0x4c75; 
0x000d9142: ret 0x4c80; 
0x0002cfcc: ret 0x4c89; 
0x000db47e: ret 0x4c8b; 
0x000d9d6d: ret 0x4ce9; 
0x0003189f: ret 0x4d0f; 
0x0017f5a0: ret 0x4d72; 
0x00092190: ret 0x4d75; 
0x00062ff9: ret 0x4e0f; 
0x001343a9: ret 0x4e8b; 
0x0010044e: ret 0x4f0f; 
0x0010bf0a: ret 0x4f2b; 
0x0012ff1b: ret 0x4f89; 
0x0010beaa: ret 0x4f8b; 
0x000d4747: ret 0x5005; 
0x0005be0a: ret 0x502b; 
0x000830d9: ret 0x5052; 
0x00199a90: ret 0x5073; 
0x000a0191: ret 0x508d; 
0x00170b08: ret 0x50e9; 
0x0014bd3a: ret 0x50fb; 
0x0004a63b: ret 0x5152; 
0x00035f0f: ret 0x5201; 
0x00169978: ret 0x5208; 
0x000a9bce: ret 0x528d; 
0x001915e2: ret 0x5310; 
0x000a94b6: ret 0x5350; 
0x00172a6b: ret 0x5356; 
0x0002a98c: ret 0x5374; 
0x000ba808: ret 0x5375; 
0x000f7ac6: ret 0x5388; 
0x000cbb23: ret 0x5389; 
0x00108150: ret 0x538d; 
0x00078dbb: ret 0x5403; 
0x000f806f: ret 0x5420; 
0x0013ee32: ret 0x5439; 
0x000d3aef: ret 0x543a; 
0x001469e9: ret 0x5473; 
0x0011b9ba: ret 0x547b; 
0x0013ef94: ret 0x5484; 
0x00049ff9: ret 0x5488; 
0x00046be1: ret 0x5489; 
0x000753f9: ret 0x548b; 
0x00151caa: ret 0x548d; 
0x0012b97a: ret 0x54bb; 
0x001735ca: ret 0x5539; 
0x0019f898: ret 0x5575; 
0x00058e39: ret 0x5589; 
0x000f9ec6: ret 0x5603; 
0x0019a774: ret 0x5608; 
0x0014b81a: ret 0x561b; 
0x0007cbe8: ret 0x562b; 
0x0004df3a: ret 0x5652; 
0x0009c292: ret 0x5657; 
0x0014022f: ret 0x5675; 
0x00084ef8: ret 0x5689; 
0x000f5d3c: ret 0x568b; 
0x0009f5b2: ret 0x568d; 
0x001994d5: ret 0x5708; 
0x00194438: ret 0x5710; 
0x000fe396: ret 0x5723; 
0x0012fbdd: ret 0x572b; 
0x00026dd4: ret 0x574; 
0x0005309f: ret 0x5752; 
0x0009776b: ret 0x578b; 
0x0014b67a: ret 0x57bb; 
0x0009d6b1: ret 0x588d; 
0x000cb52a: ret 0x590b; 
0x0004fbe3: ret 0x5a74; 
0x0016b36a: ret 0x5acb; 
0x00088690: ret 0x5ae8; 
0x0008af31: ret 0x5ae9; 
0x000420df: ret 0x5b01; 
0x00122573: ret 0x5b0; 
0x00089611: ret 0x5c72; 
0x001a2fe9: ret 0x5c89; 
0x000f8fc5: ret 0x5c8b; 
0x000ab3ca: ret 0x5c8d; 
0x000d6d2a: ret 0x5cd; 
0x001993ac: ret 0x5d5e; 
0x0011b0ba: ret 0x5d7b; 
0x000f35c2: ret 0x5d89; 
0x000a686d: ret 0x5de9; 
0x0010b04a: ret 0x5deb; 
0x000a1efe: ret 0x5e5b; 
0x00148937: ret 0x5e74; 
0x000309f8: ret 0x5f3c; 
0x000bb293: ret 0x5f5e; 
0x000d2494: ret 0x5f89; 
0x000d9c39: ret 0x5f8b; 
0x0005b3ba: ret 0x609; 
0x0003ad17: ret 0x611e; 
0x0010ac4a: ret 0x61eb; 
0x0010abda: ret 0x625b; 
0x00199a7b: ret 0x6273; 
0x00043818: ret 0x62e9; 
0x0012474f: ret 0x6375; 
0x0003aa6d: ret 0x63c8; 
0x0011aa3a: ret 0x63fb; 
0x0009a9fa: ret 0x643b; 
0x000d2600: ret 0x64f7; 
0x000765ee: ret 0x6509; 
0x0010a90a: ret 0x652b; 
0x00093728: ret 0x6574; 
0x0009a8b8: ret 0x657d; 
0x0014bade: ret 0x6590; 
0x0009a86a: ret 0x65cb; 
0x001431ab: ret 0x6601; 
0x00138b7a: ret 0x6608; 
0x0009a82a: ret 0x660b; 
0x000b2333: ret 0x6640; 
0x0019a447: ret 0x6673; 
0x00042245: ret 0x66c3; 
0x0003a74f: ret 0x66e6; 
0x000badc7: ret 0x676; 
0x0017a6ca: ret 0x676b; 
0x00104d34: ret 0x67; 
0x000bb087: ret 0x67c; 
0x0002f3df: ret 0x689; 
0x00079b0e: ret 0x68b; 
0x0014c03e: ret 0x6904; 
0x00092fac: ret 0x6974; 
0x0013227d: ret 0x69e9; 
0x0005b38c: ret 0x6a52; 
0x0008e76c: ret 0x6b72; 
0x000fb222: ret 0x6b75; 
0x00051f4e: ret 0x6b89; 
0x0010ad0a: ret 0x6b8; 
0x000a3b2f: ret 0x6be9; 
0x0012cbd1: ret 0x6c01; 
0x0012c9b7: ret 0x6c6; 
0x000f88e1: ret 0x6c74; 
0x0014a7ef: ret 0x6c89; 
0x001a7652: ret 0x6c8b; 
0x001a07d3: ret 0x6c8d; 
0x0017a18a: ret 0x6cab; 
0x0017a13a: ret 0x6cfb; 
0x0009a11a: ret 0x6d1b; 
0x000baae0: ret 0x6deb; 
0x00149f8a: ret 0x6eab; 
0x000dc9a0: ret 0x6eb8; 
0x000c103d: ret 0x6eb; 
0x000d6fc6: ret 0x6eba; 
0x00179e4a: ret 0x6feb; 
0x00059ca3: ret 0x708d; 
0x00099d3a: ret 0x70fb; 
0x00119bca: ret 0x726b; 
0x0007c96b: ret 0x7275; 
0x0003155a: ret 0x728; 
0x00119b7a: ret 0x72bb; 
0x00058b9b: ret 0x7401; 
0x000f6d9c: ret 0x7404; 
0x001a58fc: ret 0x7407; 
0x0007b344: ret 0x7408; 
0x00059624: ret 0x7410; 
0x000761f1: ret 0x7420; 
0x001a4284: ret 0x7439; 
0x0005c792: ret 0x7450; 
0x00036ec7: ret 0x7489; 
0x00060919: ret 0x748b; 
0x0003f633: ret 0x748d; 
0x00050e23: ret 0x7501; 
0x0007d024: ret 0x7502; 
0x00031e0d: ret 0x7503; 
0x000b50fc: ret 0x7504; 
0x0019c7fe: ret 0x7508; 
0x000b5111: ret 0x7510; 
0x0011991a: ret 0x751b; 
0x000777ce: ret 0x7520; 
0x000b511b: ret 0x7540; 
0x0010b3c5: ret 0x7549; 
0x000cc91c: ret 0x7589; 
0x000a802b: ret 0x758b; 
0x00094044: ret 0x768d; 
0x0011b03a: ret 0x76b8; 
0x0011967a: ret 0x77bb; 
0x0003f34b: ret 0x77e9; 
0x000f3458: ret 0x7839; 
0x000f9a25: ret 0x7880; 
0x0005105e: ret 0x789; 
0x0008942a: ret 0x7a0b; 
0x000f844b: ret 0x7b8b; 
0x0011929a: ret 0x7b9b; 
0x0009925a: ret 0x7bdb; 
0x0011924a: ret 0x7beb; 
0x0019e651: ret 0x7c06; 
0x0019e661: ret 0x7c07; 
0x0019e671: ret 0x7c09; 
0x0019e681: ret 0x7c0a; 
0x0019e691: ret 0x7c0b; 
0x0019e6a1: ret 0x7c0d; 
0x0019e6b1: ret 0x7c0e; 
0x0019e6c1: ret 0x7c0f; 
0x001a427b: ret 0x7c39; 
0x000f907d: ret 0x7c80; 
0x0005b130: ret 0x7c83; 
0x00044865: ret 0x7c89; 
0x0002bce8: ret 0x7c8b; 
0x000e066a: ret 0x7cb; 
0x000643e4: ret 0x7ce9; 
0x000990ca: ret 0x7d6b; 
0x00199515: ret 0x7e10; 
0x001a8fca: ret 0x7e6b; 
0x0009261f: ret 0x7e74; 
0x00141148: ret 0x7e8b; 
0x001473a5: ret 0x7e8d; 
0x0006d020: ret 0x7f3c; 
0x000a8eea: ret 0x7f4b; 
0x000a95e7: ret 0x7f7f; 
0x0017bc54: ret 0x7f8; 
0x001a5d4e: ret 0x7fff; 
0x0003919e: ret 0x8001; 
0x0015333c: ret 0x8014; 
0x000f7d41: ret 0x804; 
0x000974ba: ret 0x806; 
0x0017cd3b: ret 0x808b; 
0x0017bd81: ret 0x808d; 
0x001869b5: ret 0x80; 
0x000d45d1: ret 0x80b8; 
0x000f62b1: ret 0x8104; 
0x0008ede8: ret 0x8108; 
0x00119b42: ret 0x811f; 
0x001348b3: ret 0x8166; 
0x0011f6a5: ret 0x8173; 
0x00034fe4: ret 0x820f; 
0x00145980: ret 0x828d; 
0x0017be3b: ret 0x82eb; 
0x0002bc47: ret 0x8301; 
0x0005237f: ret 0x8302; 
0x000a92ab: ret 0x8303; 
0x00050c5b: ret 0x8304; 
0x000a927b: ret 0x8305; 
0x001431a8: ret 0x8308; 
0x000fceaa: ret 0x830c; 
0x00035032: ret 0x830f; 
0x000d21dc: ret 0x8310; 
0x00090851: ret 0x8316; 
0x0012df2d: ret 0x8318; 
0x000bbbe5: ret 0x8320; 
0x000e0381: ret 0x8334; 
0x000411e1: ret 0x833c; 
0x000b2384: ret 0x8340; 
0x001190c5: ret 0x8363; 
0x00146895: ret 0x8366; 
0x000bd457: ret 0x8380; 
0x000a07a8: ret 0x8388; 
0x00097784: ret 0x8389; 
0x0011c4a7: ret 0x838b; 
0x0012cc7a: ret 0x838d; 
0x0019e13e: ret 0x8390; 
0x0004e2b5: ret 0x83e9; 
0x00049a85: ret 0x83ff; 
0x0003009e: ret 0x8401; 
0x000bbe85: ret 0x8404; 
0x0002a5a5: ret 0x840f; 
0x00088a1a: ret 0x841b; 
0x00153f51: ret 0x8489; 
0x0003c045: ret 0x848b; 
0x0004223f: ret 0x8501; 
0x000c04b4: ret 0x8504; 
0x0002d881: ret 0x850f; 
0x00130657: ret 0x8518; 
0x000d0895: ret 0x8539; 
0x000bb42a: ret 0x8540; 
0x0013ae2c: ret 0x8588; 
0x00054d9e: ret 0x8589; 
0x00031951: ret 0x858b; 
0x00033241: ret 0x858d; 
0x0012886a: ret 0x85cb; 
0x000bab1f: ret 0x860f; 
0x001287ea: ret 0x864b; 
0x0014bafd: ret 0x8704; 
0x000a3535: ret 0x872; 
0x0004e5aa: ret 0x874; 
0x0012866a: ret 0x87cb; 
0x000293f7: ret 0x8801; 
0x001375f0: ret 0x8802; 
0x0013c4eb: ret 0x880f; 
0x0013f67c: ret 0x8830; 
0x000e36fc: ret 0x8875; 
0x0014abba: ret 0x889; 
0x0008eb63: ret 0x88; 
0x00028792: ret 0x88e9; 
0x000283d1: ret 0x8901; 
0x000d3be9: ret 0x8902; 
0x00175b57: ret 0x8903; 
0x0002c931: ret 0x8904; 
0x00147061: ret 0x8908; 
0x00024b70: ret 0x8909; 
0x00129e67: ret 0x890c; 
0x0013c45b: ret 0x890f; 
0x000d125c: ret 0x8910; 
0x0019b286: ret 0x8912; 
0x00102268: ret 0x8918; 
0x00030bb6: ret 0x8952; 
0x001a3eac: ret 0x8954; 
0x0017c370: ret 0x895b; 
0x000db70a: ret 0x8964; 
0x00105467: ret 0x8965; 
0x0010d6c6: ret 0x8966; 
0x0012c96d: ret 0x8ae9; 
0x0002c46d: ret 0x8b01; 
0x0003947d: ret 0x8b02; 
0x00062fc9: ret 0x8b04; 
0x000a9260: ret 0x8b06; 
0x00028493: ret 0x8b07; 
0x000fce9f: ret 0x8b08; 
0x000e491b: ret 0x8b0c; 
0x000bbe21: ret 0x8b10; 
0x0012eaba: ret 0x8b18; 
0x000a8f71: ret 0x8b20; 
0x00086a2e: ret 0x8b30; 
0x000fa7b5: ret 0x8b52; 
0x000bdd56: ret 0x8b65; 
0x00041f92: ret 0x8b8; 
0x00086a25: ret 0x8b; 
0x000f268e: ret 0x8bc3; 
0x00059f42: ret 0x8c0f; 
0x00146986: ret 0x8c39; 
0x000d37de: ret 0x8c74; 
0x000a51da: ret 0x8cb; 
0x000310ea: ret 0x8d01; 
0x000511af: ret 0x8d04; 
0x0005a035: ret 0x8d0f; 
0x0004f7de: ret 0x8d2c; 
0x000537c2: ret 0x8d2e; 
0x0004f7f0: ret 0x8d30; 
0x000f220d: ret 0x8d50; 
0x00047730: ret 0x8d52; 
0x000cef5e: ret 0x8d89; 
0x000664e1: ret 0x8d8b; 
0x0003f48c: ret 0x8d8d; 
0x0008a89b: ret 0x8dc3; 
0x000d7578: ret 0x8de9; 
0x00100457: ret 0x8e0f; 
0x000cdebb: ret 0x8eb; 
0x000cc31b: ret 0x8f0f; 
0x00087f0a: ret 0x8f2b; 
0x00089a6b: ret 0x8f8b; 
0x0002c12f: ret 0x901; 
0x0008513d: ret 0x9066; 
0x00087dca: ret 0x906b; 
0x00144beb: ret 0x908; 
0x000dd594: ret 0x908d; 
0x000f279d: ret 0x90c3; 
0x00117c7a: ret 0x91bb; 
0x000423de: ret 0x920f; 
0x00167b5a: ret 0x92db; 
0x000647ed: ret 0x92eb; 
0x0013b634: ret 0x930f; 
0x00040e7c: ret 0x9387; 
0x0009d0b7: ret 0x9389; 
0x00142415: ret 0x93c; 
0x000412d8: ret 0x93eb; 
0x00068e93: ret 0x940f; 
0x0008410a: ret 0x946; 
0x0019f8e9: ret 0x9474; 
0x001a5a55: ret 0x9488; 
0x0006a5d2: ret 0x9489; 
0x000779aa: ret 0x948b; 
0x0011aaea: ret 0x94b8; 
0x0012795a: ret 0x94db; 
0x0005941a: ret 0x950f; 
0x0002f7fd: ret 0x9539; 
0x0005376c: ret 0x9588; 
0x00055647: ret 0x9589; 
0x000821b6: ret 0x9689; 
0x0005776a: ret 0x96cb; 
0x0011774a: ret 0x96eb; 
0x000f5c09: ret 0x972; 
0x0013ff0a: ret 0x977e; 
0x0008862f: ret 0x978b; 
0x0016766a: ret 0x97cb; 
0x0012765a: ret 0x97db; 
0x00177453: ret 0x97e8; 
0x000975da: ret 0x985b; 
0x000e756a: ret 0x98cb; 
0x000643c8: ret 0x98e9; 
0x000a303d: ret 0x98eb; 
0x000574ea: ret 0x994b; 
0x00138178: ret 0x998b; 
0x0012749a: ret 0x999b; 
0x00118d93: ret 0x9b75; 
0x0010335b: ret 0x9b8; 
0x0004a56c: ret 0x9c0f; 
0x0011721a: ret 0x9c1b; 
0x0014745a: ret 0x9c89; 
0x00047a7c: ret 0x9d74; 
0x000edbed: ret 0x9d8d; 
0x000423bf: ret 0x9e0f; 
0x000d700a: ret 0x9e2b; 
0x0007df2f: ret 0x9e3b; 
0x000c3674: ret 0x9e74; 
0x0005127c: ret 0x9e9; 
0x000f8007: ret 0x9eeb; 
0x00056009: ret 0x9f0f; 
0x00096ee6: ret 0x9f4f; 
0x0005043a: ret 0x9fb; 
0x00086e7a: ret 0x9fbb; 
0x00094bad: ret 0xa00; 
0x0005d6f6: ret 0xa0eb; 
0x0006dead: ret 0xa165; 
0x001490c4: ret 0xa172; 
0x00116b0a: ret 0xa32b; 
0x0003ea5a: ret 0xa39; 
0x000e6aa4: ret 0xa3a; 
0x0014244b: ret 0xa3c; 
0x0003a1e9: ret 0xa4eb; 
0x000f5e74: ret 0xa6e9; 
0x0009b8b0: ret 0xa72; 
0x00090456: ret 0xa75; 
0x000e5c86: ret 0xa775; 
0x0012665a: ret 0xa7db; 
0x000f878a: ret 0xa7e; 
0x000f2125: ret 0xa874; 
0x0014898f: ret 0xa875; 
0x0013fef9: ret 0xa87e; 
0x000cb758: ret 0xa8b; 
0x0004867a: ret 0xa; 
0x0012639a: ret 0xaa9b; 
0x000762ea: ret 0xab4b; 
0x000d2acb: ret 0xac0f; 
0x00089892: ret 0xade8; 
0x000650b8: ret 0xae75; 
0x000a5f7a: ret 0xaebb; 
0x00115eea: ret 0xaf4b; 
0x00085eda: ret 0xaf5b; 
0x00133960: ret 0xaf73; 
0x000f879c: ret 0xaf75; 
0x000a5e8a: ret 0xafab; 
0x000a5e4a: ret 0xafeb; 
0x000a5e0a: ret 0xb02b; 
0x000a5dca: ret 0xb06b; 
0x0009184b: ret 0xb073; 
0x000db1fd: ret 0xb08d; 
0x000a5d8a: ret 0xb0ab; 
0x000a5d4a: ret 0xb0eb; 
0x0009afd2: ret 0xb374; 
0x0003c45f: ret 0xb3b8; 
0x001215cd: ret 0xb3eb; 
0x00120ce8: ret 0xb48d; 
0x000e5321: ret 0xb4ff; 
0x000564dc: ret 0xb589; 
0x00063479: ret 0xb58b; 
0x0013ed6c: ret 0xb5e9; 
0x0002584a: ret 0xb5eb; 
0x00030c1f: ret 0xb60f; 
0x0011580a: ret 0xb62b; 
0x00089651: ret 0xb68d; 
0x000a577a: ret 0xb6bb; 
0x0006b9d9: ret 0xb70f; 
0x000f4167: ret 0xb75; 
0x0013569a: ret 0xb79b; 
0x000a8b3b: ret 0xb801; 
0x000dc9a7: ret 0xb850; 
0x000deeac: ret 0xb8; 
0x0006f7ea: ret 0xb; 
0x000d68e1: ret 0xbae9; 
0x0013e77d: ret 0xbb01; 
0x0011efa1: ret 0xbb03; 
0x001252da: ret 0xbb5b; 
0x001152ca: ret 0xbb6b; 
0x0006f50a: ret 0xbc3; 
0x001251da: ret 0xbc5b; 
0x0003c856: ret 0xbc89; 
0x0010a977: ret 0xbc8d; 
0x00082475: ret 0xbce9; 
0x000637ae: ret 0xbd83; 
0x00063271: ret 0xbd8b; 
0x000ea581: ret 0xbd8d; 
0x0012505a: ret 0xbddb; 
0x0008504a: ret 0xbdeb; 
0x00046256: ret 0xbe0f; 
0x000a500a: ret 0xbe2b; 
0x0002dba8: ret 0xbeeb; 
0x0008f831: ret 0xbf0f; 
0x00104d28: ret 0xbf98; 
0x00024e6a: ret 0xbfcb; 
0x00026a94: ret 0xc031; 
0x00134892: ret 0xc069; 
0x000a348a: ret 0xc072; 
0x0014f615: ret 0xc074; 
0x00028008: ret 0xc083; 
0x000a12d3: ret 0xc084; 
0x00026893: ret 0xc085; 
0x000a9aff: ret 0xc0be; 
0x0003a5c5: ret 0xc0d9; 
0x0005f72c: ret 0xc101; 
0x00045735: ret 0xc102; 
0x000d3bd7: ret 0xc104; 
0x00175b36: ret 0xc105; 
0x00178831: ret 0xc107; 
0x00059392: ret 0xc108; 
0x0010c2a1: ret 0xc10c; 
0x0012af6d: ret 0xc110; 
0x00058cf2: ret 0xc11f; 
0x001666e9: ret 0xc129; 
0x00134cda: ret 0xc15b; 
0x00138c41: ret 0xc166; 
0x000d2aa7: ret 0xc169; 
0x0005e6e1: ret 0xc183; 
0x000252ba: ret 0xc189; 
0x001a4477: ret 0xc208; 
0x001a58ea: ret 0xc209; 
0x0004532a: ret 0xc220; 
0x00093627: ret 0xc231; 
0x000d37dc: ret 0xc238; 
0x00040fe2: ret 0xc269; 
0x000d9c2e: ret 0xc26b; 
0x000d6ff4: ret 0xc281; 
0x0003947b: ret 0xc283; 
0x00092d73: ret 0xc289; 
0x0019a2c9: ret 0xc2bb; 
0x000ab54e: ret 0xc301; 
0x000505a1: ret 0xc339; 
0x000a29e4: ret 0xc35b; 
0x000bfd54: ret 0xc35f; 
0x000a351f: ret 0xc372; 
0x000e2fcf: ret 0xc383; 
0x000318a2: ret 0xc389; 
0x00134a9a: ret 0xc39b; 
0x001249ba: ret 0xc47b; 
0x000290da: ret 0xc483; 
0x000d2b8c: ret 0xc501; 
0x0013ecb7: ret 0xc583; 
0x0013d684: ret 0xc589; 
0x0012752a: ret 0xc5; 
0x00065d05: ret 0xc601; 
0x0012d2cd: ret 0xc629; 
0x0012bc01: ret 0xc639; 
0x000a2447: ret 0xc675; 
0x000bd370: ret 0xc680; 
0x0002feb7: ret 0xc689; 
0x00027227: ret 0xc6; 
0x0002d2e5: ret 0xc704; 
0x000fcfa3: ret 0xc708; 
0x0013472a: ret 0xc70b; 
0x000a567b: ret 0xc739; 
0x0002bd14: ret 0xc73; 
0x0002a112: ret 0xc73c; 
0x00090a40: ret 0xc74; 
0x00137525: ret 0xc773; 
0x00025475: ret 0xc789; 
0x0008467a: ret 0xc7bb; 
0x00080e79: ret 0xc7e9; 
0x00056bcf: ret 0xc801; 
0x0010cfa6: ret 0xc839; 
0x0007ae9c: ret 0xc883; 
0x00025b60: ret 0xc889; 
0x00032aad: ret 0xc89; 
0x001459bc: ret 0xc8c1; 
0x000a2327: ret 0xc8d; 
0x0003455a: ret 0xc8db; 
0x00090166: ret 0xc8e9; 
0x0017b2c1: ret 0xc919; 
0x0009f24d: ret 0xc931; 
0x0008b4b4: ret 0xc983; 
0x000a2438: ret 0xc984; 
0x000a68ba: ret 0xc985; 
0x00034b2a: ret 0xc; 
0x00030054: ret 0xca08; 
0x00168342: ret 0xca0f; 
0x0003eff3: ret 0xca21; 
0x00081e03: ret 0xca29; 
0x0007009a: ret 0xca39; 
0x00093285: ret 0xca81; 
0x000895c9: ret 0xca83; 
0x000268bd: ret 0xcac1; 
0x001756a5: ret 0xcb01; 
0x000475fc: ret 0xcb29; 
0x00079e9d: ret 0xcb89; 
0x000a0802: ret 0xcb8; 
0x000d424a: ret 0xcbeb; 
0x000d42ea: ret 0xcc0; 
0x0008872d: ret 0xcceb; 
0x0013412a: ret 0xcd0b; 
0x000d463a: ret 0xcdb8; 
0x0013ade6: ret 0xce39; 
0x00133fda: ret 0xce5b; 
0x00027b5a: ret 0xce80; 
0x00093e15: ret 0xce83; 
0x0010cde0: ret 0xce89; 
0x000a3f8a: ret 0xceab; 
0x0009842c: ret 0xceb; 
0x00093f1a: ret 0xcf1b; 
0x00073efa: ret 0xcf3b; 
0x001470b9: ret 0xcf89; 
0x0017bb56: ret 0xcfeb; 
0x00075864: ret 0xd008; 
0x00075843: ret 0xd009; 
0x00100d53: ret 0xd020; 
0x00103c3a: ret 0xd021; 
0x0004a778: ret 0xd029; 
0x000a3dea: ret 0xd04b; 
0x000d339a: ret 0xd069; 
0x0002f29b: ret 0xd089; 
0x000a3daa: ret 0xd08b; 
0x000a7eed: ret 0xd101; 
0x001a382e: ret 0xd104; 
0x00131edd: ret 0xd108; 
0x00046dec: ret 0xd120; 
0x0003f01b: ret 0xd121; 
0x000d7928: ret 0xd129; 
0x00031286: ret 0xd139; 
0x0014112b: ret 0xd184; 
0x000666c3: ret 0xd189; 
0x001a42d4: ret 0xd201; 
0x0011a14d: ret 0xd231; 
0x000ddddf: ret 0xd26b; 
0x00025468: ret 0xd283; 
0x00054a68: ret 0xd284; 
0x0004038f: ret 0xd285; 
0x0008b2a8: ret 0xd2f7; 
0x00055f6c: ret 0xd301; 
0x001a352f: ret 0xd304; 
0x000e4882: ret 0xd309; 
0x000d7abe: ret 0xd329; 
0x00033aea: ret 0xd34b; 
0x0008afa2: ret 0xd372; 
0x001413fb: ret 0xd384; 
0x00045495: ret 0xd389; 
0x00050fe2: ret 0xd439; 
0x000f38a9: ret 0xd473; 
0x0013fa01: ret 0xd474; 
0x00104d0e: ret 0xd4e9; 
0x0015b774: ret 0xd56; 
0x000a7c79: ret 0xd601; 
0x0012382a: ret 0xd60b; 
0x000fe085: ret 0xd689; 
0x000a4369: ret 0xd701; 
0x000de402: ret 0xd729; 
0x0012370a: ret 0xd72b; 
0x000f8537: ret 0xd739; 
0x0004532c: ret 0xd789; 
0x0013367a: ret 0xd7bb; 
0x00090f37: ret 0xd7e9; 
0x00066372: ret 0xd801; 
0x000f57c6: ret 0xd839; 
0x0004e804: ret 0xd889; 
0x0003a554: ret 0xd8f7; 
0x00063df5: ret 0xd938; 
0x00133ddf: ret 0xd989; 
0x0013348a: ret 0xd9ab; 
0x0013343a: ret 0xd9fb; 
0x00057811: ret 0xd; 
0x000ff087: ret 0xda01; 
0x000e488d: ret 0xda08; 
0x0005d69e: ret 0xda29; 
0x000c054d: ret 0xda39; 
0x001333ea: ret 0xda4b; 
0x001004ab: ret 0xda75; 
0x000a339a: ret 0xda9b; 
0x000a335a: ret 0xdadb; 
0x0008f3cd: ret 0xdae9; 
0x000943a7: ret 0xdaf7; 
0x000a331a: ret 0xdb1b; 
0x000a1335: ret 0xdb31; 
0x000a32da: ret 0xdb5b; 
0x000fdf5f: ret 0xdb85; 
0x000a323a: ret 0xdbfb; 
0x000a31fa: ret 0xdc3b; 
0x0010baa7: ret 0xdc73; 
0x000a31ba: ret 0xdc7b; 
0x001a3022: ret 0xdc7f; 
0x000a316a: ret 0xdccb; 
0x000e4e41: ret 0xdceb; 
0x000a311a: ret 0xdd1b; 
0x00080d3f: ret 0xdd89; 
0x0007c8c7: ret 0xde21; 
0x00102ffa: ret 0xde3b; 
0x000d2651: ret 0xdf11; 
0x00082dba: ret 0xe07b; 
0x00041194: ret 0xe083; 
0x00102d7a: ret 0xe0bb; 
0x0007594b: ret 0xe0c1; 
0x00041c7f: ret 0xe0d3; 
0x000d3a67: ret 0xe10; 
0x00102cda: ret 0xe15b; 
0x0002f383: ret 0xe183; 
0x000f2bda: ret 0xe25b; 
0x0019d7a5: ret 0xe280; 
0x00039811: ret 0xe281; 
0x0002a44f: ret 0xe283; 
0x00058c3c: ret 0xe2c1; 
0x001a0571: ret 0xe2d3; 
0x000ed3b4: ret 0xe329; 
0x000a87c5: ret 0xe372; 
0x0009e5dc: ret 0xe383; 
0x0011b979: ret 0xe475; 
0x000a29aa: ret 0xe48b; 
0x000a296a: ret 0xe4cb; 
0x0003c32c: ret 0xe4e9; 
0x000a292a: ret 0xe50b; 
0x0014c162: ret 0xe589; 
0x000f59a9: ret 0xe5eb; 
0x000a6fc4: ret 0xe672; 
0x000d3354: ret 0xe681; 
0x0003084f: ret 0xe683; 
0x0005277a: ret 0xe6bb; 
0x000d8ec9: ret 0xe6c1; 
0x00052a34: ret 0xe73; 
0x00152df7: ret 0xe74; 
0x000526ea: ret 0xe74b; 
0x000715ae: ret 0xe75; 
0x000fd584: ret 0xe775; 
0x00063c52: ret 0xe783; 
0x001326aa: ret 0xe78b; 
0x0012ad79: ret 0xe801; 
0x000f7c04: ret 0xe804; 
0x000f25ea: ret 0xe84b; 
0x000d5ba5: ret 0xe856; 
0x0011c282: ret 0xe857; 
0x000ff379: ret 0xe872; 
0x001a8746: ret 0xe875; 
0x00056d83: ret 0xe883; 
0x0008bc5c: ret 0xe889; 
0x00050c20: ret 0xe89; 
0x00069f24: ret 0xe8c0; 
0x00050647: ret 0xe8c1; 
0x00104bfa: ret 0xe8e9; 
0x0002cb1f: ret 0xe901; 
0x0007546f: ret 0xe904; 
0x00138c44: ret 0xe908; 
0x0006252a: ret 0xe90b; 
0x000824ea: ret 0xe94b; 
0x000a44c4: ret 0xe972; 
0x0002ae45: ret 0xe983; 
0x0008771c: ret 0xe989; 
0x001a4201: ret 0xe9c1; 
0x0003efe9: ret 0xe9d1; 
0x0018435a: ret 0xe9ed; 
0x0004783b: ret 0xe; 
0x00180d4a: ret 0xea22; 
0x00163647: ret 0xea29; 
0x0017b4c6: ret 0xea39; 
0x001a6b06: ret 0xea72; 
0x0008ad73: ret 0xea75; 
0x000bab35: ret 0xea83; 
0x000a1e2b: ret 0xea89; 
0x0010171a: ret 0xeac0; 
0x0005e15f: ret 0xeac1; 
0x0007f90f: ret 0xead1; 
0x000f1f77: ret 0xeb01; 
0x000e8987: ret 0xeb02; 
0x0011ef81: ret 0xeb03; 
0x0006f32b: ret 0xeb04; 
0x00151b74: ret 0xeb18; 
0x0011ef26: ret 0xeb53; 
0x000926d7: ret 0xeb75; 
0x00050c69: ret 0xeb83; 
0x000e0d4a: ret 0xeb; 
0x00023eff: ret 0xebe8; 
0x000a8e3e: ret 0xec72; 
0x000937c4: ret 0xec75; 
0x001721ba: ret 0xec7b; 
0x00029043: ret 0xec83; 
0x0005e6d6: ret 0xed01; 
0x0009255d: ret 0xed75; 
0x000dbe49: ret 0xed83; 
0x0007c5ad: ret 0xed85; 
0x0015ec9c: ret 0xede9; 
0x000c2846: ret 0xee72; 
0x00059db7: ret 0xee7c; 
0x000c5a16: ret 0xef39; 
0x000a8d52: ret 0xef72; 
0x000f5b5e: ret 0xef7f; 
0x000f5538: ret 0xef89; 
0x00118ad8: ret 0xeff0; 
0x0006426a: ret 0xf001; 
0x00123544: ret 0xf009; 
0x0019e4af: ret 0xf00; 
0x000432a8: ret 0xf01; 
0x000732fe: ret 0xf02; 
0x000be86d: ret 0xf039; 
0x00031d48: ret 0xf03; 
0x0009f4f1: ret 0xf04; 
0x0019e641: ret 0xf05; 
0x0011cbca: ret 0xf065; 
0x0002dd75: ret 0xf06; 
0x00137535: ret 0xf072; 
0x000a7a5c: ret 0xf075; 
0x000424a4: ret 0xf083; 
0x00045c35: ret 0xf089; 
0x0007be30: ret 0xf08; 
0x000d657a: ret 0xf0; 
0x0008b455: ret 0xf0b8; 
0x0019e5fc: ret 0xf0c; 
0x001138d2: ret 0xf0f8; 
0x0009b4cd: ret 0xf0f; 
0x000a3c86: ret 0xf101; 
0x0019d1d3: ret 0xf10; 
0x000c536b: ret 0xf129; 
0x001674e0: ret 0xf131; 
0x0010f3ca: ret 0xf13d; 
0x001013a3: ret 0xf189; 
0x00103f66: ret 0xf20; 
0x00045392: ret 0xf229; 
0x00052a42: ret 0xf272; 
0x0009247b: ret 0xf283; 
0x00040fe4: ret 0xf31d; 
0x000565a3: ret 0xf329; 
0x00168761: ret 0xf339; 
0x00105fca: ret 0xf363; 
0x0011b566: ret 0xf372; 
0x0009bd9a: ret 0xf375; 
0x001a1213: ret 0xf37e; 
0x0008e27e: ret 0xf389; 
0x0013937a: ret 0xf3b1; 
0x00180b1a: ret 0xf3ba; 
0x00121daa: ret 0xf3bd; 
0x0003d68e: ret 0xf3c3; 
0x00058c6e: ret 0xf40; 
0x000a68ee: ret 0xf474; 
0x000a2b81: ret 0xf475; 
0x0012197a: ret 0xf4bb; 
0x0010770a: ret 0xf4f6; 
0x00058c51: ret 0xf50; 
0x001518aa: ret 0xf537; 
0x00049ff2: ret 0xf539; 
0x0012188a: ret 0xf5ab; 
0x0008187a: ret 0xf5bb; 
0x00179b41: ret 0xf604; 
0x001928f4: ret 0xf608; 
0x0011c89a: ret 0xf621; 
0x00115a9f: ret 0xf631; 
0x001217da: ret 0xf65b; 
0x000a9a53: ret 0xf66; 
0x001a760b: ret 0xf67f; 
0x000a948f: ret 0xf685; 
0x00180aca: ret 0xf6a7; 
0x000dc95f: ret 0xf6e9; 
0x000fa73b: ret 0xf701; 
0x000d4646: ret 0xf718; 
0x00111f7d: ret 0xf72; 
0x00093bd1: ret 0xf75b; 
0x000f76e6: ret 0xf775; 
0x000663f1: ret 0xf789; 
0x00183b4a: ret 0xf7e1; 
0x001021ca: ret 0xf7ec; 
0x00046837: ret 0xf7ff; 
0x000624ee: ret 0xf801; 
0x00103f6f: ret 0xf80; 
0x000a263a: ret 0xf80a; 
0x0009fbf9: ret 0xf821; 
0x000234c4: ret 0xf883; 
0x000564c3: ret 0xf889; 
0x000d29f5: ret 0xf894; 
0x00090d01: ret 0xf8c1; 
0x0005d017: ret 0xf8cc; 
0x000c4eda: ret 0xf91d; 
0x000fbb41: ret 0xf939; 
0x00030002: ret 0xf954; 
0x000d7edb: ret 0xf955; 
0x0013819d: ret 0xf967; 
0x000a15ca: ret 0xf96b; 
0x001490d3: ret 0xf96c; 
0x000ea0b4: ret 0xf980; 
0x0006c0c3: ret 0xf983; 
0x00067e83: ret 0xf9e9; 
0x000813f8: ret 0xf; 
0x000a6a32: ret 0xfa01; 
0x0002c2f2: ret 0xfa29; 
0x000727f7: ret 0xfa39; 
0x0010cfb4: ret 0xfa81; 
0x0002874b: ret 0xfa83; 
0x0017fe8a: ret 0xfab; 
0x000330b5: ret 0xfac1; 
0x0002d3d5: ret 0xfae9; 
0x0007374a: ret 0xfaf8; 
0x0004133a: ret 0xfafb; 
0x000d2855: ret 0xfb11; 
0x000f1daa: ret 0xfb32; 
0x00134e7d: ret 0xfb83; 
0x0016feca: ret 0xfb84; 
0x001028f1: ret 0xfb89; 
0x00178d2a: ret 0xfbad; 
0x001a5dad: ret 0xfbc1; 
0x00170a2a: ret 0xfc30; 
0x001111ba: ret 0xfc7b; 
0x00041143: ret 0xfc; 
0x000ede1a: ret 0xfce7; 
0x000d10ba: ret 0xfd7b; 
0x0005ce4a: ret 0xfd7c; 
0x00042fe3: ret 0xfd83; 
0x000e061a: ret 0xfdbf; 
0x000db38a: ret 0xfe08; 
0x000d102a: ret 0xfe0b; 
0x001224fa: ret 0xfe87; 
0x0019fa0a: ret 0xfe89; 
0x0016327a: ret 0xfe9a; 
0x00161c7a: ret 0xfeb0; 
0x0016e6a4: ret 0xfeb8; 
0x00139d7a: ret 0xfed5; 
0x0004e05b: ret 0xfee9; 
0x000ddcca: ret 0xfef4; 
0x0008b210: ret 0xff0; 
0x00052333: ret 0xff19; 
0x0003a72d: ret 0xff25; 
0x00054de5: ret 0xff31; 
0x0004260d: ret 0xff3; 
0x0017b10e: ret 0xff3c; 
0x0003660e: ret 0xff3d; 
0x000972ca: ret 0xff42; 
0x0005ddd5: ret 0xff50; 
0x00086ca5: ret 0xff52; 
0x0006234a: ret 0xff63; 
0x0016b09a: ret 0xff81; 
0x000c9d95: ret 0xff83; 
0x0011a2aa: ret 0xff85; 
0x00140e9a: ret 0xff9b; 
0x000fa9aa: ret 0xff9e; 
0x000687aa: ret 0xffa2; 
0x00068cb4: ret 0xffa7; 
0x000255b7: ret 0xffb8; 
0x0002828c: ret 0xffba; 
0x0004b427: ret 0xffbf; 
0x0005bb7a: ret 0xffc8; 
0x00047062: ret 0xffe8; 
0x00176f3a: ret 0xffea; 
0x001080f4: ret 0xffeb; 
0x00156f17: ret 0xffec; 
0x0009e63a: ret 0xffee; 
0x0012df82: ret 0xffef; 
0x00106efc: ret 0xfff1; 
0x000f6f49: ret 0xfff2; 
0x000d8b2f: ret 0xfff3; 
0x0017e44a: ret 0xfff4; 
0x000c81a6: ret 0xfff5; 
0x0006422d: ret 0xfff6; 
0x000e670a: ret 0xfff7; 
0x0004356a: ret 0xfff8; 
0x0002b5a4: ret 0xfff9; 
0x00039692: ret 0xfffa; 
0x00066db0: ret 0xfffb; 
0x0002c489: ret 0xfffc; 
0x000320ca: ret 0xfffd; 
0x00028c55: ret 0xfffe; 
0x00024584: ret 0xffff; 
0x0004dfeb: ret 1; 
0x0004b3fa: ret 2; 
0x0003172e: ret 3; 
0x0003090a: ret 4; 
0x00109241: ret 5; 
0x0011139a: ret 6; 
0x0008d491: ret 7; 
0x0009ac44: ret 8; 
0x0002468a: ret 9; 
0x00023464: ret; 
0x000e78b1: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x001665b4: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00081e6c: retf 0x1aef; add byte ptr [ebx - 0x77], dl; ret; 
0x0008742b: retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000baabd: retf 0x3076; add eax, ecx; ret; 
0x00136bdd: retf 0x430f; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00072b9b: retf 0x448d; pop ss; add dword ptr [ecx - 0x5236b], ecx; dec dword ptr [ecx - 0x4ff7b]; call dword ptr [edx + 0x52]; 
0x0012ac5c: retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x000be52f: retf 0x474; test edx, edx; jne 0xbe528; ret; 
0x0009f72b: retf 0x488d; jmp dword ptr [ecx]; 
0x000db815: retf 0x490f; ret 0x348d; 
0x000dcc24: retf 0x490f; ret 0xc101; 
0x0010095b: retf 0x5489; ret; 
0x0003f9eb: retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x0014c065: retf 0x5e5b; ret; 
0x00199510: retf 0x761a; sub al, 0x83; ret 0x7e10; 
0x00151338: retf 0x772; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00116049: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00172865: retf 0x820f; ret 0; 
0x0009375c: retf 0x850f; cmp eax, 0x89000001; ret 0xca83; 
0x0008be5c: retf 0x850f; in eax, dx; add dword ptr [eax], eax; add dh, dh; ret; 
0x0008c59c: retf 0x850f; std; add dword ptr [eax], eax; add dh, dh; ret; 
0x00119133: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0012af6a: retf 0xa40f; ret 0xc110; 
0x00088625: retf 0xa801; add ecx, dword ptr [ecx + 0xf182474]; inc esp; ret 0x978b; 
0x000b408b: retf 0xc0e8; xchg ebp, eax; or al, 0; add ecx, 0x10bd8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001487e9: retf 0xc483; or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0019b418: retf 0xc801; call 0x17d639; add ebx, 0x33dbc; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b353: retf 0xc801; call 0x17d639; add ebx, 0x33e81; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ac8: retf 0xc801; call 0x17d639; add ebx, 0x35608; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999b9: retf 0xc801; call 0x17d639; add ebx, 0x35717; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903e4: retf 0xc801; call 0x17d639; add ebx, 0x3eb2c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f3d7: retf 0xc801; call 0x17d639; add ebx, 0x3f979; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e3f7: retf 0xc801; call 0x17d639; add ebx, 0x40799; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c4d8: retf 0xc801; call 0x17d639; add ebx, 0x424f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c3d3: retf 0xc801; call 0x17d639; add ebx, 0x4253d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c1c4: retf 0xc801; call 0x17d639; add ebx, 0x4274c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a4c8: retf 0xc801; call 0x17d639; add ebx, 0x44288; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a3c3: retf 0xc801; call 0x17d639; add ebx, 0x442cd; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018a1b7: retf 0xc801; call 0x17d639; add ebx, 0x444d9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001884c8: retf 0xc801; call 0x17d639; add ebx, 0x46008; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001883c3: retf 0xc801; call 0x17d639; add ebx, 0x4604d; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881b7: retf 0xc801; call 0x17d639; add ebx, 0x46259; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb0be: retf 0xc801; ret; 
0x001911e3: retf 0xc801; sfence; call 0x17d639; add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901d3: retf 0xc801; sfence; call 0x17d639; add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f203: retf 0xc801; sfence; call 0x17d639; add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e02d: retf 0xc801; sfence; call 0x17d639; add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018becd: retf 0xc801; sfence; call 0x17d639; add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f2d: retf 0xc801; sfence; call 0x17d639; add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e2e3: retf 0xc829; pop edi; call 0x17d639; add ebx, 0x407ec; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001913e9: retf 0xc829; pop esi; call 0x17d639; add ebx, 0x3dc26; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba86f: retf 0xc839; ja 0xba880; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0014c063: retf 0xca75; pop ebx; pop esi; ret; 
0x000bb9a1: retf 0xce01; jmp ebx; 
0x000bb0b7: retf 0xd285; je 0xbb090; bsr ecx, edx; add eax, ecx; ret; 
0x000ba079: retf 0xd2e8; xor eax, 0xc181000c; jne 0xba0e2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2b5b: retf 0xda39; jb 0xb2b20; call 0x17d651; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b419b: retf 0xda39; jb 0xb4160; call 0x17d651; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001761c2: retf 0xeacf; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0014b981: retf 0xec75; add esp, 8; pop ebx; ret; 
0x000b2a5b: retf 0xf0e8; stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10d25f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00165882: retf 0xf563; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0019fa9d: retf 0xf66; xlatb; ret; 
0x0005cf98: retf 0xf941; call dword ptr [ecx + 0x50]; 
0x00098b06: retf 0xf950; call dword ptr [eax - 0x73]; 
0x00080545: retf 0xfa3c; jmp dword ptr [esi - 0x70]; 
0x00040fdd: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000d79b5: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x00164822: retf 0xfcf2; jmp dword ptr [esi - 0x70]; 
0x00047952: retf 0xfec3; dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x00099282: retf 0xff4e; push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x000f5587: retf 0xfffa; dec dword ptr [ebp - 0x6bd957d]; call dword ptr [edx + 0x52]; 
0x001511e6: retf 0xfffe; dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x00199984: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x00199e0b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x00199e0b: retf 0xffff; jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009f4e2: retf 3; add byte ptr [ebp + 0x92c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x000ba1d9: retf; add esi, ecx; call 0x17d651; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1b9: retf; add esi, ecx; call 0x17d651; add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4239: retf; add esi, ecx; call 0x17d651; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4219: retf; add esi, ecx; call 0x17d651; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bf9: retf; add esi, ecx; call 0x17d651; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bd9: retf; add esi, ecx; call 0x17d651; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00166fb6: retf; cld; jmp dword ptr [esi - 0x70]; 
0x00104289: retf; dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015df17: retf; jno 0x15df13; call dword ptr [eax + 0x6a]; 
0x0015df4c: retf; jno 0x15df48; call dword ptr [eax + 0x6a]; 
0x0015df7d: retf; jno 0x15df79; call dword ptr [eax + 0x6a]; 
0x0015dfae: retf; jno 0x15dfaa; call dword ptr [eax + 0x6a]; 
0x0015dfdf: retf; jno 0x15dfdb; call dword ptr [eax + 0x6a]; 
0x0015e010: retf; jno 0x15e00c; call dword ptr [eax + 0x6a]; 
0x0002556a: retf; mov eax, 0x808b0020; mov al, byte ptr [0x65000000]; add eax, dword ptr [0]; ret; 
0x00124584: retf; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00147149: retf; out dx, al; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0009202e: retf; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x000d89fa: retf; push ebp; stc; call dword ptr [eax + 0x53]; 
0x0019fc24: retf; test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0014957f: rol al, 1; stc; call dword ptr [eax - 0x73]; 
0x00135449: rol ax, 8; ret; 
0x000f29f5: rol byte ptr [0xf701fff9], 0x3e; jmp edi; 
0x00160bc9: rol byte ptr [eax + 0x440f0039], 0xc8; pop ebx; pop esi; mov eax, ecx; ret; 
0x0003fd4d: rol byte ptr [eax + 0xd75003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00092408: rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00092b9f: rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x000b312a: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a6a8b: rol byte ptr [eax - 0x6bf0cf05], cl; ret 0xb60f; 
0x000a6a2c: rol byte ptr [eax - 0x6bf0cf07], cl; ret 0xfa01; 
0x0012f8e4: rol byte ptr [eax - 0x6bf0d206], 1; ret 0x5f3c; 
0x00160c0f: rol byte ptr [eax - 0x7bf0ffc6], 0x4d; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; sahf; jb 0x160c1a; call dword ptr [eax - 0x18]; 
0x000d2268: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x00135420: rol byte ptr [eax], 0; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001051cf: rol byte ptr [eax], 0; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x001549aa: rol byte ptr [eax], 0; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x00175c25: rol byte ptr [eax], 0; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x5f]; 
0x00105c62: rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret 0x840f; 
0x0008085c: rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret; 
0x00186877: rol byte ptr [eax], 0xf7; ret 0xf; 
0x00102f57: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012164d: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00123e05: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00044cb7: rol byte ptr [eax], 1; add byte ptr [ebx + 0x24448903], cl; cmp al, 0x89; ret 0xc483; 
0x00024451: rol byte ptr [eax], 1; je 0x24470; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00102ea7: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012156d: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0003fbd4: rol byte ptr [eax], cl; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000253e2: rol byte ptr [eax], cl; neg edx; ret; 
0x00119b5f: rol byte ptr [eax], cl; ret; 
0x000bb480: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0005f81c: rol byte ptr [ebp + 0x71840fdb], 1; or dword ptr [eax], eax; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00041dd9: rol byte ptr [ebp + 0xf0674c0], cl; mov ebp, 0x1508dc0; mov eax, edx; ret; 
0x00044807: rol byte ptr [ebp + 0xf102454], cl; xchg ebp, eax; ret 0xb60f; 
0x0004b450: rol byte ptr [ebp + 0xf1c2454], cl; xchg ebp, eax; ret 0xb60f; 
0x00080b5c: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0012cfeb: rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00033a16: rol byte ptr [ebp - 0x76f58b2e], 0x44; and al, 0x14; call edx; 
0x00126fe4: rol byte ptr [ebp - 0x7cc38b2e], 0xec; or byte ptr [ebp - 0x64afb79], cl; call dword ptr [eax + 0x55]; 
0x0012ce59: rol byte ptr [ebp - 0x7cf58a25], 0xc4; add al, 0x5b; pop esi; ret; 
0x0014bb29: rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x14bb38; ret; 
0x000f48a4: rol byte ptr [ebx + 0x2f740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009ac11: rol byte ptr [ebx + 0x440f02f8], cl; ret 0xec83; 
0x000ad097: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x000ad11d: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xacfe1; pop ebx; ret; 
0x000ad13b: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0xacfe1; pop ebx; ret; 
0x000ad1bf: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000ad233: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0xacfe1; pop ebx; ret; 
0x00042479: rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x00042073: rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x00042529: rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x00042124: rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x00042163: rol byte ptr [ebx + 0x508d1ff0], 1; mov eax, edx; ret; 
0x0017f8d8: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0016d9d3: rol byte ptr [ebx + 0x548b01c8], 0x24; or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x000412ba: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x0003ec47: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0005d6e4: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x0011a38a: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x001226ff: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x0005d5e7: rol byte ptr [ebx + 0x5e5b14c4], 0x5f; pop ebp; ret; 
0x000a9627: rol byte ptr [ebx + 0x5e5b14c4], 1; pop edi; pop ebp; ret; 
0x000a353f: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x000419e4: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0007b285: rol byte ptr [ebx + 0x5e5b1cc4], 1; pop edi; pop ebp; ret; 
0x0004172b: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0007ac1a: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x000c9dbf: rol byte ptr [ebx + 0x5e5b4cc4], cl; pop edi; pop ebp; ret; 
0x0004e88b: rol byte ptr [ebx + 0x5e5b5cc4], cl; pop edi; pop ebp; ret; 
0x000a9847: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000a9854: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000a9861: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000a32b4: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xcf4], dl; ret; 
0x000a3284: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe14], dl; ret; 
0x0005b385: rol byte ptr [ebx + 0xf41087f], cl; xchg esp, eax; ret 0x6a52; 
0x00104de2: rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000fb525: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00044733: rol byte ptr [ebx + ebx*8 - 0x7c3dbaf1], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00044708: rol byte ptr [ebx + ebx*8 - 0x7c3dbbf1], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016c024: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc50e37d], cl; call dword ptr [eax - 0x73]; 
0x001695b6: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc7bf37d], cl; call dword ptr [eax - 0x73]; 
0x000c1b39: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000dbdd4: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xc889; 
0x00045e31: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x0004ca01: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ror byte ptr [ebx + 0x29742454], 1; ret; 
0x00050734: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x00049978: rol byte ptr [ebx - 0x2d7cd840], cl; add byte ptr [ecx - 0x769fdbbc], cl; ret; 
0x00166449: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x001306fe: rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x0008c959: rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000ce438: rol byte ptr [ebx - 0x361f7b], 1; call dword ptr [eax]; 
0x000ce80e: rol byte ptr [ebx - 0x363743], cl; call dword ptr [eax]; 
0x000961b7: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x000962d6: rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x000bb052: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x000bb062: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x000bb072: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000bb082: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x0004223d: rol byte ptr [ebx - 0x3f7afe3e], 1; cmovne eax, edx; ret; 
0x00119bdc: rol byte ptr [ebx - 0x3f7c0f20], 0x26; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0004208e: rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x000f48e1: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x00124eec: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00101fdb: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00124eab: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00167ba8: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x000962e5: rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00050467: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00082f63: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00165eb9: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0012ce7d: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x00167000: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x000a0c1a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000a6a1f: rol byte ptr [ebx - 0x69f0f606], 1; ret 0xb60f; 
0x0017d7d1: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0005786b: rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x00170a52: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0005232d: rol byte ptr [ebx - 0x6df0fe07], cl; ret 0xff19; 
0x000bb2bb: rol byte ptr [ebx - 0x73ee010], 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x00134d88: rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x00134e74: rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xfb83; 
0x00161265: rol byte ptr [ebx - 0x7f72f714], 1; aam 0x71; stc; call dword ptr [eax + 0x57]; 
0x0019edc6: rol byte ptr [ebx], 0x5f; ret; 
0x0016576a: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x000391ce: rol byte ptr [ebx], 0x8c; and esp, 0x3efff885; jmp ecx; 
0x000f28b3: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x000f2909: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x00151ca1: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00137e37: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00137e3d: rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x00166567: rol byte ptr [ecx + ecx*4], 0x43; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0011cb84: rol byte ptr [ecx + ecx*4], 0x83; add byte ptr [ebp], 0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000c650f: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00044743: rol byte ptr [ecx + ecx*8 - 0x7c3dbbf1], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000be52c: rol byte ptr [ecx + edi], 0xca; je 0xbe536; test edx, edx; jne 0xbe528; ret; 
0x000f28d5: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0013ee97: rol byte ptr [ecx], 0x39; fmul dword ptr [edi]; inc edx; ret; 
0x000e5001: rol byte ptr [ecx], 0x39; ret 0x1674; 
0x00056cf4: rol byte ptr [ecx], 0x39; ret 0x2674; 
0x0010047e: rol byte ptr [ecx], 0x39; ret 0x2a7e; 
0x000ecf8e: rol byte ptr [ecx], 0x39; ret 0x840f; 
0x000a3532: rol byte ptr [ecx], 0x39; ret 0x872; 
0x000f8787: rol byte ptr [ecx], 0x39; ret 0xa7e; 
0x001004a8: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x0011b976: rol byte ptr [ecx], 0x39; ret 0xe475; 
0x000fd581: rol byte ptr [ecx], 0x39; ret 0xe775; 
0x000f5b5b: rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x001a7608: rol byte ptr [ecx], 0x39; ret 0xf67f; 
0x0004f479: rol byte ptr [ecx], 0x39; ret; 
0x000fc012: rol byte ptr [ecx], 0x39; ror byte ptr [ecx + 0xf68245c], 1; dec esp; ret 0xb60f; 
0x0005bb96: rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000bcafa: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000422a1: rol byte ptr [ecx], 0x5e; pop edi; ret; 
0x0019f181: rol byte ptr [ecx], 0x5f; ret; 
0x000a1cb4: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x00136971: rol byte ptr [ecx], 0x83; ret 0x3904; 
0x000989a0: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x0010dcf6: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x0017d038: rol byte ptr [ecx], 0x83; ret 0x8308; 
0x000293f4: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x00029196: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00028764: rol byte ptr [ecx], 0x83; ret; 
0x000a2510: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000a5fde: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x000bf939: rol byte ptr [ecx], 0x89; inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000777c9: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0x7520; 
0x00133064: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x00130651: rol byte ptr [ecx], 0x8b; dec edx; add al, 0x83; ret 0x8518; 
0x000baf76: rol byte ptr [ecx], 0xc8; ret; 
0x000bb35c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x000bb4c2: rol byte ptr [ecx], 0xd0; ret; 
0x000ba907: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x000baa55: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000a5611: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0xa5610; pop ebx; ret; 
0x00092213: rol byte ptr [ecx], 1; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + edx - 0x1a], ebx; call dword ptr [eax + 0x56]; 
0x0019d29c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0003cf75: rol byte ptr [ecx], 1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000ace0c: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0003cf20: rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x001a0333: rol byte ptr [ecx], 1; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000a6d9a: rol byte ptr [ecx], 1; ret; 
0x000a983b: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x000a4924: rol byte ptr [ecx], cl; ret; 
0x000a9845: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000a9852: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000a985f: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x00102461: rol byte ptr [edi + 0x3f8c87], 0; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x0014bb2b: rol byte ptr [edi + eax*4], 0x10; cmp edx, 1; jg 0x14bb38; ret; 
0x0019edec: rol byte ptr [edi], 0x5f; ret; 
0x00042611: rol byte ptr [edx + edx*8 + 0x8ba], 0; cmove eax, edx; ret; 
0x000a5817: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0019f186: rol byte ptr [edx], 0x5f; ret; 
0x0010becc: rol byte ptr [edx], 1; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00059ad1: rol byte ptr [edx], 1; ror byte ptr [ecx - 0xab4b], 1; dec dword ptr [ebx - 0x974b]; dec dword ptr [edi]; xchg edx, eax; ret 0xf883; 
0x0008f64c: rol byte ptr [esi - 6], 1; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0005064d: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x50610; jmp eax; 
0x0019f19a: rol byte ptr [esi], 0x5f; ret; 
0x000949e7: rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0013813c: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0008b4e3: rol cl, 1; call 0x893828ed; clc; call dword ptr gs:[0x10]; 
0x00140a37: rol cl, 1; call 0xe8dbf55d; scasb al, byte ptr es:[edi]; xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x0003a87e: rol cl, 1; cli; push ds; and eax, edx; ret; 
0x000a58f4: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00077118: rol dh, cl; cli; jmp dword ptr [esi - 0x70]; 
0x000d207a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x00099624: rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0019286c: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001799d9: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000bb7ac: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0xbb7b4; inc eax; pop edi; ret; 
0x000e88be: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e888e: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019e247: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bad41: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000bb006: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bafd7: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x0019e286: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0019ddaf: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000bad07: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00083a37: rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x0011248c: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x0011137d: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x00092424: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x000bd3ab: rol dword ptr [ebx + 0xb813fe2], 1; add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x0016e0a0: rol dword ptr [ebx + ecx*4], 0x47; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x000420da: rol dword ptr [ebx - 0x3d7ce00e], cl; add dword ptr [ebx + 0x5e], ebx; mov eax, edx; ret; 
0x0012d0fa: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x00099296: rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x0007306c: rol dword ptr [ebx - 0x7bf00008], cl; dec ecx; in eax, 0xff; call dword ptr [edx - 0x7d]; 
0x000c9661: rol dword ptr [ebx - 0x7bf0e008], cl; mov dword ptr [ecx], 0x1fba0000; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0008b959: rol dword ptr [ebx], 0x83; clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000421b6: rol dword ptr [ecx], 0x5b; pop esi; mov eax, ecx; ret; 
0x00141761: rol dword ptr [ecx], 0x83; ret 0x390c; 
0x0008ede5: rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000bf67e: rol dword ptr [ecx], 0x83; ret 0x8801; 
0x0013fc62: rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000efd2d: rol dword ptr [ecx], 0x89; lea eax, [edx + edi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000e8ffd: rol dword ptr [ecx], 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000a953a: rol dword ptr [ecx], 0x89; ret; 
0x000a8f69: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000fb728: rol dword ptr [ecx], 9; ret 0xf983; 
0x000a6549: rol dword ptr [ecx], cl; ret; 
0x000b368d: rol dword ptr [edi + eax*8 + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b452b: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000cb89a: rol dword ptr [edx], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x54], -7; call dword ptr [eax - 0x18]; 
0x0003d667: rol dword ptr [esi], 0x83; ret 0x901; 
0x001431ad: rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000b2b81: rol eax, 0xd1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013544a: rol eax, 8; ret; 
0x0003cc26: rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000d6fd2: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000924a9: rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000311a6: rol ecx, 0xe2; add al, 0x8b; dec esp; ret; 
0x000923de: rol ecx, 0xe9; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0009df11: rol ecx, 0xe9; or al, 0x3d; jmp ptr [edi - 0x78f10000]; ret; 
0x0003a55f: rol ecx, 1; call 0x10ed6685; or eax, ecx; ret; 
0x0003be3a: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x001431ae: rol edx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x00024c0f: rol edx, 9; mov dword ptr [eax + 0x1a30], edx; pop ebx; pop esi; ret; 
0x00024b6f: rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x00065eac: ror bl, 0xff; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x0009f5cc: ror byte ptr [0x878d0000], 0xe4; push eax; stc; call dword ptr [eax - 0x73]; 
0x0011e971: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x00101117: ror byte ptr [eax - 0x7cd7dbac], 1; mov byte ptr [ecx], 0x83; ret; 
0x0009bd97: ror byte ptr [eax], 0x39; ret 0xf375; 
0x000f6f01: ror byte ptr [eax], 0x39; ret 0xf475; 
0x00151366: ror byte ptr [eax], 0x50; call 0xbb960; add esp, 0x1c; ret; 
0x0019f1a4: ror byte ptr [eax], 0x5f; ret; 
0x0019a771: ror byte ptr [eax], 0x83; ret 0x5608; 
0x001994d2: ror byte ptr [eax], 0x83; ret 0x5708; 
0x00194111: ror byte ptr [eax], 0x83; ret 0x8308; 
0x0014705e: ror byte ptr [eax], 0x83; ret 0x8908; 
0x001928f1: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0016979b: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00169778: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000415a6: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000d4699: ror byte ptr [ebp + 0x480f0750], 1; ret 0xb70f; 
0x0002903d: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x00025a48: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x000e037b: ror byte ptr [ebp + 0x6b002674], cl; ret 0x8334; 
0x0008e858: ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00076e71: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000d5083: ror byte ptr [ebp - 0x17efdbbc], cl; ret; 
0x000a2355: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x0014b73d: ror byte ptr [ebp - 0x63e6b70], 1; call dword ptr [edx - 0x73]; 
0x00027b2c: ror byte ptr [ebp - 0x6c71869], cl; call dword ptr [edx + 0x50]; 
0x001757b2: ror byte ptr [ebp - 0x72af2bbb], 0x87; insb byte ptr es:[edi], dx; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x31fff972], esp; call dword ptr [eax + 0x6a]; 
0x000b5017: ror byte ptr [ebp - 0x7af0efc0], cl; ret; 
0x0016d504: ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x000a4c1b: ror byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x00136be0: ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00136a8e: ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x124245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00045e39: ror byte ptr [ebx + 0x29642454], 1; ret; 
0x0004ca09: ror byte ptr [ebx + 0x29742454], 1; ret; 
0x00100451: ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x00129cd9: ror byte ptr [ebx + 0x3980044a], 0; je 0x129ce8; ret; 
0x00031897: ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x0016d4bc: ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x16d4d7; add esp, 0x1c; ret; 
0x001289bb: ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x000d2149: ror byte ptr [ebx + 0x75c9850a], 0x22; ret; 
0x00118aa9: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x001a6fbb: ror byte ptr [ebx + 0x9242454], 1; ret 0x448b; 
0x001273ff: ror byte ptr [ebx - 0x17c7dba4], 0xd7; adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001283af: ror byte ptr [ebx - 0x17cbdba4], 0x27; add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00127a6f: ror byte ptr [ebx - 0x17cbdba4], 0x67; or al, 0xf6; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00053a2d: ror byte ptr [ebx - 0x368b6b], 1; jmp ptr [ecx]; ret; 
0x00103c78: ror byte ptr [ebx - 0x41f3dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008eefc: ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011947f: ror byte ptr [ebx - 0x749bdbac], 0x5c; and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00125fe1: ror byte ptr [ebx - 0x749fdba4], 0x74; and al, 0x64; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00102ad1: ror byte ptr [ebx - 0x74afdba4], 0x74; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00118e55: ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d6c0f: ror byte ptr [ebx - 0x74cbdbac], 0x5c; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0012ac08: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x12aad0; add esp, 4; ret; 
0x000428bf: ror byte ptr [ebx - 0x752b6c44], cl; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x001a8478: ror byte ptr [ebx - 0x76cbdb8c], 1; ret 0x448b; 
0x00138b69: ror byte ptr [ebx - 0x76f7dbbc], 1; adc edi, dword ptr [ecx]; ret 0x840f; 
0x0019ee13: ror byte ptr [ebx], 0x5f; ret; 
0x000f267f: ror byte ptr [ebx], 1; mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f2858: ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000f2856: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x0007664e: ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x001245a7: ror byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00136fca: ror byte ptr [ecx + 0x39d829d0], 1; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x0007b476: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0003fb94: ror byte ptr [ecx + 0x5a89104a], 0x14; pop ebx; pop esi; pop edi; ret; 
0x0003ce53: ror byte ptr [ecx + 0x5f5e5b16], 0x5d; ret; 
0x0007f4d9: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x0008d674: ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a94af: ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x00044af3: ror byte ptr [ecx + 0xf3b0bf7], cl; xchg ebp, eax; ret 0xe083; 
0x000fc015: ror byte ptr [ecx + 0xf68245c], 1; dec esp; ret 0xb60f; 
0x000316e0: ror byte ptr [ecx - 0x1c76b], 1; dec dword ptr [ecx - 0x1c37b]; call dword ptr [ebx + 0x52]; 
0x00037f79: ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00037e4e: ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x00052124: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x0003bdba: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000bb51f: ror byte ptr [ecx - 0x3dbaf028], 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00118af6: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000ee576: ror byte ptr [ecx - 0x4977b], 1; inc dword ptr [ecx]; ret; 
0x000ed86a: ror byte ptr [ecx - 0x49b7b], 1; call dword ptr [eax + 0x6a]; 
0x00072bd1: ror byte ptr [ecx - 0x53b7b], 1; dec dword ptr [ebx - 0x4ff7b]; dec dword ptr [ecx - 0x5237b]; call dword ptr [edx + 0x57]; 
0x00035029: ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x0009c57b: ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x001a3a13: ror byte ptr [ecx - 0x7693dbbc], 1; ret 0x4c89; 
0x0002a449: ror byte ptr [ecx - 0x76fe743b], 1; ret 0xe283; 
0x0015f0a9: ror byte ptr [ecx - 0x7ce7dbac], 1; ret 0xf01; 
0x000a6a28: ror byte ptr [ecx - 0x7f2dce29], cl; stc; xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x0004bebe: ror byte ptr [ecx - 0x7ff7db84], 0xfa; jo 0x4be50; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x00059ad4: ror byte ptr [ecx - 0xab4b], 1; dec dword ptr [ebx - 0x974b]; dec dword ptr [edi]; xchg edx, eax; ret 0xf883; 
0x0019f1a9: ror byte ptr [ecx], 0x5f; ret; 
0x0014c10c: ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x0011e974: ror byte ptr [ecx], 0xc8; ret; 
0x0011e9cb: ror byte ptr [ecx], 0xf0; pop esi; pop edi; ret; 
0x000997ec: ror byte ptr [ecx], 1; ret; 
0x0005429c: ror byte ptr [edi], 0; add byte ptr [ebp - 0x6c7af00a], al; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x0002715f: ror byte ptr [edi], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00131b6d: ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x86; iretd; stc; call dword ptr [eax + 0x57]; 
0x0017cfe2: ror byte ptr [edi], 0x44; ret 0x178b; 
0x0011b4bd: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x001042d6: ror byte ptr [edi], 0x44; ret 0xb58b; 
0x0011c0fc: ror byte ptr [edi], 0x44; ret 0xc483; 
0x0015ddb3: ror byte ptr [edi], 0x44; ret 0xec83; 
0x00026ce4: ror byte ptr [edi], 0x44; ret; 
0x0013c6c5: ror byte ptr [edi], 0x45; call 0x10afb6; jmp dword ptr [esi - 0x70]; 
0x00042242: ror byte ptr [edi], 0x45; ret 0x66c3; 
0x0012d631: ror byte ptr [edi], 0x48; ret 0x4639; 
0x000d34dc: ror byte ptr [edi], 0x48; ret 0x548b; 
0x0002fe77: ror byte ptr [edi], 0x48; ret 0xc083; 
0x0003fd8d: ror byte ptr [edi], 0x48; ret 0xc483; 
0x0012d2ca: ror byte ptr [edi], 0x48; ret 0xc629; 
0x000871c1: ror byte ptr [edi], 0x48; ret 0xff50; 
0x00119944: ror byte ptr [edi], 0x49; ret 0x8dc3; 
0x0014fb24: ror byte ptr [edi], 0x4e; ret 0x4489; 
0x00097768: ror byte ptr [edi], 0x4e; ret 0x578b; 
0x00108281: ror byte ptr [edi], 0x4e; ret 0xe883; 
0x0019ee3c: ror byte ptr [edi], 0x5f; ret; 
0x00076c8c: ror byte ptr [edi], 0x84; add dword ptr gs:[eax], eax; add byte ptr [ecx], bh; ret; 
0x00079bbc: ror byte ptr [edi], 0x84; add eax, 0x39000001; ret; 
0x000e9de1: ror byte ptr [edi], 0x84; call dword ptr [ebx]; 
0x0011d467: ror byte ptr [edi], 0x84; cmc; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d987d], cl; call dword ptr [edx + 0x52]; 
0x0011d14f: ror byte ptr [edi], 0x84; cmp al, byte ptr [0xec830000]; or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x000d5c66: ror byte ptr [edi], 0x84; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0008098c: ror byte ptr [edi], 0x84; cmp eax, 0x39000001; ret; 
0x0016ce32: ror byte ptr [edi], 0x84; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0017e6ac: ror byte ptr [edi], 0x84; dec ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00078ffe: ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0; add byte ptr [ecx], bh; ret; 
0x00027b4e: ror byte ptr [edi], 0x84; int1; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x0007e410: ror byte ptr [edi], 0x84; jmp 0x3907e418; ret; 
0x000fbc90: ror byte ptr [edi], 0x84; jmp 0x390fbc98; ret; 
0x0015ea38: ror byte ptr [edi], 0x84; leave; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0011d44d: ror byte ptr [edi], 0x84; mov dword ptr [0x8d00000c], eax; adc dword ptr [ebx], 0x62; stc; call dword ptr [ecx + 0x51]; 
0x0007efbc: ror byte ptr [edi], 0x84; mov ebp, 0x39000000; ret; 
0x00075ebe: ror byte ptr [edi], 0x84; mov ebx, 0x39000001; ret; 
0x0011d242: ror byte ptr [edi], 0x84; mov ebx, 0x83000008; in al, dx; or byte ptr [ebp - 0x6a2307d], cl; call dword ptr [eax + 0x55]; 
0x000ffc30: ror byte ptr [edi], 0x84; mov ecx, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0017816a: ror byte ptr [edi], 0x84; mov edi, 0x83000003; in al, dx; or byte ptr [ebp - 0x68a0175], cl; call dword ptr [ecx - 0x77]; 
0x001651a1: ror byte ptr [edi], 0x84; mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0011d185: ror byte ptr [edi], 0x84; mov esp, 0x83000006; in al, dx; or byte ptr [ebp - 0x6a3d07d], cl; call dword ptr [eax + 0x55]; 
0x0011c88e: ror byte ptr [edi], 0x84; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x17aff314], al; ret 0xf621; 
0x0011d25d: ror byte ptr [edi], 0x84; or eax, 0x83000009; in al, dx; or byte ptr [ebp - 0x6a1fc7d], cl; call dword ptr [eax + 0x55]; 
0x00086309: ror byte ptr [edi], 0x84; pop eax; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00070192: ror byte ptr [edi], 0x84; pop ebx; xor al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; call ecx; 
0x001537f9: ror byte ptr [edi], 0x84; push 0x6b00000e; ret; 
0x0011d3b1: ror byte ptr [edi], 0x84; push cs; adc byte ptr [eax], al; add byte ptr [ebp - 0x69f8b7d], cl; call dword ptr [edx + 0x52]; 
0x0011d2fb: ror byte ptr [edi], 0x84; push ebp; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6a09f7d], cl; call dword ptr [edx + 0x52]; 
0x00062949: ror byte ptr [edi], 0x84; push edx; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00076f2d: ror byte ptr [edi], 0x84; pushfd; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0009ef47: ror byte ptr [edi], 0x84; ret 0; 
0x001a696e: ror byte ptr [edi], 0x84; ret 0x15; 
0x000eae78: ror byte ptr [edi], 0x84; ret 0xfff6; 
0x0017ce57: ror byte ptr [edi], 0x84; ret 2; 
0x000e613f: ror byte ptr [edi], 0x84; ret 3; 
0x0010923e: ror byte ptr [edi], 0x84; ret 5; 
0x00027846: ror byte ptr [edi], 0x84; ret; 
0x0009f4df: ror byte ptr [edi], 0x84; retf 3; add byte ptr [ebp + 0x92c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00080859: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ecx], bh; ret; 
0x0011d2e1: ror byte ptr [edi], 0x84; stosb byte ptr es:[edi], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6a0d57d], cl; call dword ptr [ecx + 0x51]; 
0x0011d119: ror byte ptr [edi], 0x84; sub byte ptr [0xec830000], al; or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x0016403c: ror byte ptr [edi], 0x84; xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0019e188: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000ad454: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b1924: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad434: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000baf44: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000f7d1e: ror byte ptr [edi], 0x85; dec ebx; add dword ptr [eax], eax; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x000ad2ee: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0019e288: ror byte ptr [edi], 0x85; jno 0x19e28f; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bad09: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000e9ba3: ror byte ptr [edi], 0x85; mov ebx, 0x83000010; ret; 
0x0011b830: ror byte ptr [edi], 0x85; mov ecx, 0x83000000; in al, dx; or al, 0x89; ret; 
0x000bac6b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00070481: ror byte ptr [edi], 0x85; ret 0x1a; 
0x0009f0d6: ror byte ptr [edi], 0x85; ret 0xfffe; 
0x000a3652: ror byte ptr [edi], 0x85; ret 1; 
0x00032993: ror byte ptr [edi], 0x85; ret; 
0x00054299: ror byte ptr [edi], 0x85; ror byte ptr [edi], 0; add byte ptr [ebp - 0x6c7af00a], al; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x001196ba: ror byte ptr [edi], 0x85; xchg ebx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbbc], cl; ret; 
0x0019e249: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00033e16: ror byte ptr [edi], 0x88; cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x69a897d], cl; call dword ptr [esi - 1]; 
0x000cca57: ror byte ptr [edi], 0x89; pop edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4bab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x00176061: ror byte ptr [edi], 0x89; ret; 
0x0014623a: ror byte ptr [edi], 0x89; sar ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0013201e: ror byte ptr [edi], 0x89; shl dword ptr [0xfffff000], 0x29; ret; 
0x000c4267: ror byte ptr [edi], 0x8e; ret 0xf; 
0x00055b98: ror byte ptr [edi], 0x8f; dec ebp; jecxz 0x55b9d; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0004705f: ror byte ptr [edi], 0x8f; ret 0xffe8; 
0x001442cf: ror byte ptr [edi], 0x8f; sar ebp, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0010058c: ror byte ptr [edi], 0x94; ret 0x3f8b; 
0x0012d0ff: ror byte ptr [edi], 0x94; ret 0x4483; 
0x000d3aec: ror byte ptr [edi], 0x94; ret 0x543a; 
0x000309f5: ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x0006d01d: ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x00142448: ror byte ptr [edi], 0x94; ret 0xa3c; 
0x0016d3fc: ror byte ptr [edi], 0x94; ret 0xc031; 
0x0003ce31: ror byte ptr [edi], 0x94; ret; 
0x00101fd8: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00050464: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0015e92e: ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x00170b05: ror byte ptr [edi], 0x95; ret 0x50e9; 
0x0016641e: ror byte ptr [edi], 0x95; ret 0xc483; 
0x00080b5e: ror byte ptr [edi], 0x95; ret 0xd089; 
0x000e5f04: ror byte ptr [edi], 0x95; ret 0xe783; 
0x0003a19e: ror byte ptr [edi], 0x95; ret; 
0x00167ba5: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00165eb6: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00166ffd: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x00052b5e: ror byte ptr [edi], 0x95; ror byte ptr [edi], 0x95; ret; 
0x000d479e: ror byte ptr [edi], 0x96; ret 0xe0c1; 
0x0011a2a7: ror byte ptr [edi], 0x9e; ret 0xff85; 
0x00051db0: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000961b4: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x000962d3: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003bdb7: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0015130b: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00042070: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x00042121: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x00141cbe: ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000f5d39: ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x001689e4: ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00119fba: ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00104d0b: ror byte ptr [edi], 1; dec edi; ret 0xd4e9; 
0x001049c7: ror byte ptr [edi], 1; dec esp; ret 0xe0c1; 
0x00104bf7: ror byte ptr [edi], 1; dec esp; ret 0xe8e9; 
0x000cf268: ror byte ptr [edi], 1; dec esp; ret; 
0x00041c87: ror byte ptr [edi], 1; inc ebp; ret; 
0x000fb816: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x6a52; 
0x0004772b: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0012ad74: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a018e: ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x0009df52: ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x000753f6: ror byte ptr [edi], 1; inc edx; ret 0x548b; 
0x00136be8: ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00136a9a: ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00136aa8: ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a1e28: ror byte ptr [edi], 1; inc edx; ret 0xea89; 
0x00161516: ror byte ptr [edi], 1; mov bh, 0x80; ror cl, cl; stc; jmp dword ptr [esi - 0x77]; 
0x000423a1: ror byte ptr [edi], 1; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00039823: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x39808; ret; 
0x000422ef: ror byte ptr [edi], 1; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00042160: ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000bb2b8: ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; sar eax, 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x0005bb99: ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000c425b: ror byte ptr [edi], 1; sbb byte ptr [eax + 0x21], 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x8e; ret 0xf; 
0x0002a441: ror byte ptr [edi], 1; test byte ptr [eax + 0x29000003], dh; ror byte ptr [ecx - 0x76fe743b], 1; ret 0xe283; 
0x000a71df: ror byte ptr [edi], 1; test byte ptr [eax - 0x74ffffea], dl; pop ebp; rol byte ptr [ecx], 1; ret; 
0x000a7691: ror byte ptr [edi], 1; test byte ptr [ebx - 0x75000000], bl; pop ebp; rol byte ptr [ecx], 1; ret; 
0x000ba980: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0006d175: ror byte ptr [edi], cl; dec ecx; ret 0xc183; 
0x000dbb48: ror byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x0006ef59: ror byte ptr [edi], cl; inc esp; ret; 
0x00153adc: ror byte ptr [edi], cl; mov al, dh; add byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00028289: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00090105: ror byte ptr [edi], cl; mov dword ptr [ebx + 0x31000001], eax; leave; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00055d05: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0008b2e0: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00131eda: ror byte ptr [edi], cl; sahf; ret 0xd108; 
0x00124576: ror byte ptr [edi], cl; test bl, ah; or al, dh; call dword ptr [ebx + 0x56]; 
0x0009d662: ror byte ptr [edi], cl; test byte ptr [edi - 0x72fffffd], cl; pop edx; or dh, dh; ret; 
0x000fa0e2: ror byte ptr [edi], cl; test byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x0019c7e7: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000c6665: ror byte ptr [edi], cl; test dword ptr [ebx + eax + 0x7c830000], edx; and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000ede08: ror byte ptr [edi], cl; test dword ptr [edx], esp; or al, byte ptr [eax]; add byte ptr [ebx - 0x49363], cl; inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x00047bf1: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0005f729: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc101; 
0x0003f004: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xca21; 
0x000f65d8: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd009; 
0x00103d7d: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd021; 
0x0003f018: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd121; 
0x0013c53d: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xdb85; 
0x00039319: ror byte ptr [edi], cl; xchg esp, eax; ret; 
0x0019f1ae: ror byte ptr [edx], 0x5f; ret; 
0x00183be7: ror byte ptr [edx], cl; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0018954a: ror byte ptr [esi + 4], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019f1c2: ror byte ptr [esi], 0x5f; ret; 
0x001379c1: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00137a66: ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x000cf5b1: ror cl, 0xff; call dword ptr [eax]; 
0x00054a7f: ror cl, 0xff; call dword ptr [ebx]; 
0x000cee91: ror cl, 0xff; dec dword ptr [ebx - 0x363b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00053746: ror cl, 0xff; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0013afb6: ror cl, 1; stc; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xe8c0; 
0x0016151a: ror cl, cl; stc; jmp dword ptr [esi - 0x77]; 
0x000ba0e8: ror dword ptr [0x300105f], 0xc; xchg ecx, eax; jmp ecx; 
0x0018c864: ror dword ptr [0xc381ffff], 1; mov al, 0x20; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009aa28: ror dword ptr [eax + 0x3c1882], 0; ret; 
0x00188d64: ror dword ptr [eax - 1], 1; inc dword ptr [ecx + 0x456b0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b4429: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000df661: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b6de8: ror dword ptr [ebp + 0x3001091], 0xc; xchg ecx, eax; jmp ecx; 
0x000896b3: ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x0006fe7b: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0019db67: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x000259b2: ror dword ptr [ebp - 0x1876e1c0], 0x89; ret 0x25; 
0x00025912: ror dword ptr [ebp - 0x1976e1c0], 0x89; ret 0x25; 
0x0019ee9a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x19eeb0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00081d81: ror dword ptr [ebx - 0x39dfdb84], 1; add al, 7; add byte ptr [ecx - 0x14ec7407], cl; ret; 
0x00161513: ror dword ptr [ebx - 0x48f02fbb], 0x80; ror cl, cl; stc; jmp dword ptr [esi - 0x77]; 
0x0006280c: ror dword ptr [ebx - 0x5b36b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013afca: ror dword ptr [ebx - 0xbf6b], cl; dec dword ptr [eax]; ret; 
0x00040cf3: ror dword ptr [ecx + 0x10ebc111], cl; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00124385: ror dword ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d353a: ror dword ptr [ecx + 0x24bc89d3], 0x80; add byte ptr [eax], al; add byte ptr [ecx], al; ror dword ptr [edi], 0xa4; ret; 
0x000d3583: ror dword ptr [ecx + 0x4e1c1d3], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00060b1c: ror dword ptr [ecx + 0x5af980d8], 0xf; xchg byte ptr [edi + 0x10], dh; add byte ptr [eax], al; jmp eax; 
0x0007630c: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000d3bd0: ror dword ptr [ecx + 0xfda89c8], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc104; 
0x00103731: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00073855: ror dword ptr [ecx - 0x4ef4b], cl; inc dword ptr [ebx - 0x7bf00002]; insd dword ptr es:[edi], dx; fdivr st(7); call dword ptr [eax - 0x7d]; 
0x0006fe15: ror dword ptr [ecx - 0x4fb63], cl; dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x0006eff1: ror dword ptr [ecx - 0x52b63], cl; dec dword ptr [ebx - 0x4f763]; call dword ptr [eax + 0x52]; 
0x0003a781: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003aaa2: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003ad4a: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00050a78: ror dword ptr [ecx - 0x76190818], 1; ret; 
0x0017f6f5: ror dword ptr [ecx - 0x76ebdbac], 1; ret 0xca29; 
0x0003f561: ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0003be3b: ror dword ptr [ecx], 0x89; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x000b4092: ror dword ptr [edi + 0x30010bd], 0xc; xchg ecx, eax; jmp ecx; 
0x00188974: ror dword ptr [edi + edi*8 - 1], 0x81; ret; 
0x0019fc09: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0013636a: ror dword ptr [edi], 0x82; ret; 
0x0003172b: ror dword ptr [edi], 0x84; ret 3; 
0x000be757: ror dword ptr [edi], 0x85; ret 2; 
0x00047d47: ror dword ptr [edi], 0x95; ror byte ptr [edi], 0x95; ret; 
0x000d3545: ror dword ptr [edi], 0xa4; ret; 
0x00144866: ror dword ptr [edi], 0xb7; pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000baf73: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00045327: ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x000a2435: ror dword ptr [edi], 1; xchg esp, eax; ret 0xc984; 
0x0007d8d3: ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x00133afd: ror dword ptr [edi], cl; add byte ptr [ebx - 0x7f72e714], al; or byte ptr [edi - 7], ah; call dword ptr [eax - 0x18]; 
0x0004735d: ror dword ptr [edi], cl; pushfd; ret; 
0x000f307d: ror dword ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0003fd03: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0008cbbe: ror dword ptr [esi - 7], cl; call dword ptr [eax - 0x73]; 
0x00131df1: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002507d: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00135604: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d0: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e6b8: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00025108: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0014c855: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x0014c4a2: ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00131e20: ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003eaa8: ror eax, 9; xor eax, dword ptr gs:[0x18]; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x000b41d8: ror ecx, 0xbc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000d6fd3: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xd6fe8; mov eax, edx; ret; 
0x000b3772: ror edi, 0xc5; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096285: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00116757: sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000b108e: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0017ed7a: sahf; call 0xf17ed80; xchg esp, eax; ret 0xd008; 
0x0017ee0a: sahf; call 0xf17ee10; xchg esp, eax; ret 0xd008; 
0x0011a563: sahf; cmc; jmp dword ptr [ebp - 0x5f]; 
0x000f92f3: sahf; dec dword ptr [ecx - 0x76a7dbbc]; ret; 
0x00160c1e: sahf; jb 0x160c1a; call dword ptr [eax - 0x18]; 
0x00097f61: sahf; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000b376e: sahf; or al, 0; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0012aebd: sahf; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000f806e: sahf; ret 0x5420; 
0x00131edc: sahf; ret 0xd108; 
0x000d7abd: sahf; ret 0xd329; 
0x0011a2a9: sahf; ret 0xff85; 
0x000a18ce: sahf; ret 0xfffb; 
0x00101297: sahf; ret; 
0x0009c630: sahf; stc; call dword ptr [eax - 0x18]; 
0x001354f3: sahf; stc; call dword ptr [ecx + 0x50]; 
0x000a0c1f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0007df28: sahf; xchg esp, eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x0006d2d8: sal ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000e7849: sal ah, cl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00164a1a: sal al, cl; cld; jmp dword ptr [esi - 0x70]; 
0x0008ebeb: sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00042629: sal bh, 0xd2; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000506b2: sal bh, 0xd8; pop esi; pop edi; ret; 
0x00124eb1: sal bh, 0xd8; ret; 
0x0003d689: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x00132e6f: sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x0008a517: sal bl, 0xa5; pop esi; pop edi; ret; 
0x00042220: sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x000426e9: sal bl, 0xf; mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00042310: sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004262b: sal bl, cl; bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x00042239: sal bl, cl; bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x0014c14c: sal bl, cl; inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000ba07b: sal byte ptr [0xc181000c], cl; jne 0xba0e2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f4ff5: sal byte ptr [eax + ebp*2 - 0x7d], 0xec; or byte ptr [ebp - 0x6a8777d], cl; call dword ptr [eax + 0x55]; 
0x00027071: sal byte ptr [eax + ebp*8 - 0x73], 0x86; mov al, 0x7e; stc; call dword ptr [eax - 0x73]; 
0x0014d21c: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6ac667f], cl; call dword ptr [eax + 0x52]; 
0x0016e30d: sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x0016e42d: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x90; pop esi; pop edi; ret; 
0x0016e4bd: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x94; pop esi; pop edi; ret; 
0x0016e39d: sal byte ptr [eax + edx + 0x5b], 1; sub eax, -0x80; pop esi; pop edi; ret; 
0x001a02dd: sal byte ptr [eax + edx - 0x77], 0xc2; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x000920bd: sal byte ptr [eax + edx - 0x7d], cl; cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000a9863: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000b9f92: sal byte ptr [eax], 0xe8; mov eax, 0x81000c36; rcr dword ptr [ebx + 0x60], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6cf9: sal byte ptr [eax], 0xe8; push ecx; imul ecx, dword ptr [eax + eax], 0x9274c181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00166445: sal byte ptr [ebp + 0x10], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0009207d: sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0008a762: sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x001645d0: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0011b00b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011aabb: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003c42b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010acdb: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010af5b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0017d331: sal byte ptr [ebp + 0x22], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00035df9: sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x00102f4f: sal byte ptr [ebp + 0x2e], 0x8b; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00102e9f: sal byte ptr [ebp + 0x2e], 0x8b; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00103016: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00102cf6: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000d5204: sal byte ptr [ebp + 0x30], 0x80; add byte ptr ds:[edi], cl; test byte ptr [eax - 0x7d000000], ah; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x001647ac: sal byte ptr [ebp + 0x31], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015274b: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or byte ptr [ebp - 0x6af6079], cl; call dword ptr [eax + 0x56]; 
0x001218aa: sal byte ptr [ebp + 0x33], 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001217fa: sal byte ptr [ebp + 0x33], 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00102d9a: sal byte ptr [ebp + 0x33], 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000ad2a1: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x000bb4a0: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000d507f: sal byte ptr [ebp + 0x3e], 0x31; ror byte ptr [ebp - 0x17efdbbc], cl; ret; 
0x00123839: sal byte ptr [ebp + 0x44], 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001226c3: sal byte ptr [ebp + 0x4a], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x000bf966: sal byte ptr [ebp + 0x4c], cl; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016b12d: sal byte ptr [ebp + 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0017c34b: sal byte ptr [ebp + 0xa], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f412: sal byte ptr [ebp + 0xb], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0017c65a: sal byte ptr [ebp + 0xb], cl; add esp, 8; pop ebx; ret; 
0x0003c0b9: sal byte ptr [ebp + 0xc], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003bd91: sal byte ptr [ebp + 0xc], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00171f31: sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x00163c28: sal byte ptr [ebp + 0xd], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00141b40: sal byte ptr [ebp + 0xd], 0x5b; pop esi; pop edi; ret; 
0x00167d38: sal byte ptr [ebp + 0xd], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x0005e5d8: sal byte ptr [ebp + 0xd], 0x83; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0010addf: sal byte ptr [ebp + 0xe], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019ee9f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00088d8e: sal byte ptr [ebp + 0xf], cl; xend; xor eax, eax; add esp, 0xc; ret; 
0x0003cddb: sal byte ptr [ebp + 2], cl; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x001231a1: sal byte ptr [ebp + 4], cl; ret; 
0x0003c368: sal byte ptr [ebp + 5], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001231c5: sal byte ptr [ebp + 8], cl; ret; 
0x001654ac: sal byte ptr [ebp + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d7a2c: sal byte ptr [ebp + 9], cl; add esp, 4; pop ebx; pop esi; ret; 
0x001481e4: sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00034a9e: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x0016f29c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc1a037d], cl; call dword ptr [eax - 0x73]; 
0x0016985c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc74137d], cl; call dword ptr [eax - 0x73]; 
0x000df8db: sal byte ptr [ebp + ebp*4 - 0x7d], 0xf8; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000f23fc: sal byte ptr [ebp + ebx - 0x75], 0x85; pushfd; ljmp 0x8d08:0xec83ffff; sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax + 0x53]; 
0x001665dc: sal byte ptr [ebp + ebx*8 - 0x75], 0x43; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x00098219: sal byte ptr [ebp + ebx*8 - 0x7d], 0xf8; add al, 0x74; fmul dword ptr [ebp - 0x667e779]; call dword ptr [eax - 0x73]; 
0x00094930: sal byte ptr [ebp + ecx + 0x31], 0xc0; add esp, 8; pop ebx; ret; 
0x0017ed60: sal byte ptr [ebp + ecx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0017a500: sal byte ptr [ebp + ecx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x00164336: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00164abd: sal byte ptr [ebp + ecx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0016aaa9: sal byte ptr [ebp + edi - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000fab48: sal byte ptr [ebp + edx - 0x7d], 1; ret; 
0x00096f26: sal byte ptr [ebp - 0x11], 0x89; inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000d1f16: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x00130695: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00134192: sal byte ptr [ebp - 0x15], cl; call 0x1325d0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00157fe5: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00141b86: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x0016f188: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0010adff: sal byte ptr [ebp - 0x20], 0x83; in al, dx; or al, 0x8d; xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x00039828: sal byte ptr [ebp - 0x23], cl; ret; 
0x00122b51: sal byte ptr [ebp - 0x24], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00034619: sal byte ptr [ebp - 0x24], 0x89; ret; 
0x0011af06: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x0011af67: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00177ed3: sal byte ptr [ebp - 0x36], 0x89; ret 0x838b; 
0x0011ad5c: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6a6076a], cl; call dword ptr [edx - 0x77]; 
0x00027f6d: sal byte ptr [ebp - 0x48], 0x83; in al, dx; or al, 0x8d; test eax, edi; cmp cl, bh; call dword ptr [edi - 1]; 
0x001226f4: sal byte ptr [ebp - 0x58], 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x00094c02: sal byte ptr [ebp - 0x5d], 0xe9; ret; 
0x0011ad7b: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6a6046a], cl; call dword ptr [edx - 0x77]; 
0x000f2419: sal byte ptr [ebp - 0x6c], 0x83; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x00042fd8: sal byte ptr [ebp - 0x73], 0x45; inc byte ptr [ebx - 0x6bf00220]; ret 0xfd83; 
0x000c0118: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000bf348: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x000d226b: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x0007adfb: sal byte ptr [ebp - 0xe], cl; ret; 
0x0012eab6: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x001379c4: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00131c24: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x0011e54e: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0016704b: sal byte ptr [ebx + ebx*8 - 0x7d], 0xec; add al, 0x83; ret; 
0x001013b4: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x000574fa: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x5748d; ret 0x40c7; 
0x00087932: sal byte ptr [ebx + edx - 0x77], 0x4c; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0016418d: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0002714f: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x20af536d], cl; call dword ptr [edx + 0x50]; 
0x0012533a: sal byte ptr [ebx + esi - 0x75], cl; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0007e57a: sal byte ptr [ebx + esi*2 - 0x7d], 0xec; or al, 0x8d; sub dword ptr [eax - 4], -1; call dword ptr [eax - 0x73]; 
0x00097644: sal byte ptr [ebx + esi*8 - 0x75], 0x50; adc al, 0x39; sal dword ptr [ebp - 0xe], cl; pop ebx; ret; 
0x0011b9c9: sal byte ptr [ecx + eax - 0x3d], 0x83; in al, dx; or al, 0x8d; cmp al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x00167e14: sal byte ptr [ecx + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x00124591: sal byte ptr [ecx + ecx + 0x5e], 0x5b; jl 0x24e60; ret; 
0x00147ef2: sal byte ptr [ecx + ecx + 0xf], 0x9f; ret; 
0x00042474: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x00042524: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x00042089: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x0017d8e4: sal byte ptr [ecx + ecx - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x0016c01c: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00157c74: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00164f88: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x00089d44: sal byte ptr [ecx + edi + 0x31], cl; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0008a2fc: sal byte ptr [ecx + edx + 0x31], 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x000a56ec: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0xa56e0; mov eax, edx; pop ebx; ret; 
0x0008896c: sal byte ptr [ecx + edx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00158509: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x0005dbbc: sal byte ptr [ecx - 0x3b7cffff], 0x2c; ret; 
0x0015dea7: sal byte ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x000a7447: sal byte ptr [ecx], 1; fucomi st(3); adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x0008b2de: sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00132e6d: sal byte ptr [ecx], 1; sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x000886d1: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x00041c73: sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00082f06: sal byte ptr [edi + eax + 0x5b], 0x5e; pop edi; ret; 
0x000e0579: sal byte ptr [edi + eax - 0x75], cl; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x000df876: sal byte ptr [edi + ebp - 0x7d], 0xec; or byte ptr [edi + 0x53], dl; call eax; 
0x000331f6: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x67cf77b], cl; call dword ptr [eax + 0x56]; 
0x00167d59: sal byte ptr [edi + ebx*8 - 0x7d], 0xec; or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x0002fc9e: sal byte ptr [edi + ecx - 0x7d], 0xf8; add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00143c91: sal byte ptr [edi + edi - 0x7d], 0xec; add al, 0x89; ret; 
0x0017ede6: sal byte ptr [edi + edx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00087846: sal byte ptr [edi + edx - 0x77], 0x4c; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000d2076: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x000764a2: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0016f9c6: sal byte ptr [edi + esi - 0x7d], 0xec; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000d6db6: sal byte ptr [edi + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009afce: sal byte ptr [edi + esi*4 + 0x39], cl; ret 0xb374; 
0x0005855c: sal byte ptr [edi - 0x3b7c0003], 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017a37f: sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x0011e555: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00094feb: sal byte ptr [edx + eax*2 - 0x73], 0x45; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001446f1: sal byte ptr [edx + eax*2 - 0x7d], 0xec; or al, 0x89; ret; 
0x00058533: sal byte ptr [edx + ebp - 0x75], 0x5d; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0016707e: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x00169971: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x000df8af: sal byte ptr [edx + ebx - 0x7d], 0xec; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x0014022b: sal byte ptr [edx + ebx*2 + 0x38], cl; ret 0x5675; 
0x00148bc9: sal byte ptr [edx + ebx*8 - 0x7d], 0xf8; add al, 0x74; xchg byte ptr [ebx - 0x7e7253b3], cl; and al, al; stc; call dword ptr [eax - 0x73]; 
0x0016e293: sal byte ptr [edx + ecx + 0x5b], 0x5e; pop edi; ret; 
0x0004221b: sal byte ptr [edx + ecx + 0xf], 0xb6; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x000422cc: sal byte ptr [edx + ecx + 0xf], 0xb7; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00033a18: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 0x14; call edx; 
0x0011f50b: sal byte ptr [edx + edx + 0x5b], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000922a0: sal byte ptr [edx + edx - 0x7d], 0xec; or al, 0xff; jae 0x922ad; call dword ptr [ebx]; 
0x0008aa03: sal byte ptr [edx + esi - 0x75], cl; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00163c76: sal byte ptr [edx + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xc059379], cl; call dword ptr [eax - 0x73]; 
0x000260f4: sal byte ptr [edx + esi*8 - 0x73], cl; nop; mov al, 0x7e; stc; call dword ptr [edx - 0x73]; 
0x00087e2c: sal byte ptr [edx - 0x3b7c0007], 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0004256e: sal byte ptr [esi + eax + 0xf], cl; mov ebp, 0x1ff083c2; ret; 
0x00077ec7: sal byte ptr [esi + eax - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x00167ce7: sal byte ptr [esi + eax - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00127004: sal byte ptr [esi + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x64b1379], cl; call dword ptr [eax + 0x55]; 
0x0011b467: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00088877: sal byte ptr [esi + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0010139f: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00140f77: sal byte ptr [esi + ecx - 0x7d], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00166407: sal byte ptr [esi + edi - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x000bb357: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x00137a69: sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0014d25f: sal byte ptr [esi + esi - 0x73], 0xb2; insb byte ptr es:[edi], dx; ret 0xfff9; 
0x00146d2b: sal byte ptr [esi + esi*2 - 0x7d], cl; ret 0x8901; 
0x000f50da: sal byte ptr [esi - 0x7d], 0xec; or byte ptr [ebp - 0x6b1567d], cl; call dword ptr [eax + 0x55]; 
0x000a5548: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0xa5540; mov eax, edx; pop ebx; ret; 
0x000fb21e: sal byte ptr [esp + eax + 0x39], cl; ret 0x6b75; 
0x000bbf6d: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0012319d: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x1231a8; ret; 
0x001231c1: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x1231d0; ret; 
0x0013d28a: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x89; ret; 
0x00130b49: sal byte ptr [esp + ebx + 0x50], 0x8d; cmp byte ptr [ecx + 0x68], 0xf9; call dword ptr [eax + 0x6a]; 
0x0013747f: sal byte ptr [esp + ebx*4 + 0x31], cl; fcomi st(6); ret 0x7401; 
0x00124519: sal byte ptr [esp + ecx + 0x5b], cl; setg al; pop esi; pop edi; ret; 
0x0013b379: sal byte ptr [esp + ecx - 0x17], 0x2f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x0019f961: sal byte ptr [esp + ecx - 0x58], 1; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x00126fe6: sal byte ptr [esp + edi - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x64afb79], cl; call dword ptr [eax + 0x55]; 
0x00085c2b: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008a889: sal byte ptr [esp + edx - 0x7d], 0xf8; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00178b11: sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x68a104a], cl; call dword ptr [esi + 0x53]; 
0x00164f65: sal byte ptr [esp - 0x7d], 0xec; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00130b19: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x130b53; call eax; 
0x0014e179: sal cl, 1; call dword ptr [eax - 1]; 
0x000b18cc: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00092644: sal dh, 1; ret 0x7501; 
0x00059619: sal dh, 1; ret 0xf40; 
0x00099622: sal dh, cl; rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000f70c8: sal dl, 0xff; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000be51f: sal dword ptr [ebp + 0x10], 1; ret; 
0x000ba080: sal dword ptr [ebp + 0x5f], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001869c9: sal dword ptr [ebp + 4], 1; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00096fa2: sal dword ptr [ebp - 0xd], 0x8b; inc ecx; adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x000c04bb: sal dword ptr [ebp - 0xe], 0x83; ret; 
0x0011b46b: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0009764b: sal dword ptr [ebp - 0xe], cl; pop ebx; ret; 
0x00137a8c: sal dword ptr [ebx + 0x13], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000ba1c2: sal dword ptr [ebx + 0x300105e], 0xc; cdq; jmp ecx; 
0x000b365e: sal dword ptr [ebx - 0x39], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4d5f: sal dword ptr [ecx + 0xc030010], cl; cdq; jmp ecx; 
0x000a3f79: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x00064c65: sal dword ptr [ecx + ebx - 0x7d], 1; in al, dx; or byte ptr [ebx - 0x58b63], cl; call dword ptr [ecx + 0x50]; 
0x0003a8ca: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x000b4d7a: sal dword ptr [edi + 0x30010b1], 0xc; cdq; jmp ecx; 
0x0014ae52: sal dword ptr [edi + 0x5fb6db6d], 0x5d; ret; 
0x000b6dc3: sal dword ptr [edx + 0x3001091], 0xc; xchg ecx, eax; jmp ecx; 
0x000b6d01: sal dword ptr [edx + edx*4 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0007b9c1: sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ba0c3: sal dword ptr [edx], 0x5f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001371a9: sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x00086a21: sal dword ptr [esp + ecx - 0x77], 0xc2; mov eax, dword ptr [eax]; test eax, eax; jne 0x86a20; ret; 
0x000b6d80: sal ebp, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000d6ba7: sal ebp, 1; dec dword ptr [ebp - 0x652d37d]; call dword ptr [eax - 0x73]; 
0x000d6be5: sal ebp, 1; jmp dword ptr [esi - 0x70]; 
0x000bbc99: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000bbdba: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0016e2a6: sal ebx, cl; call dword ptr [eax - 0x73]; 
0x000d05c3: sal edi, 1; out 0xe9, eax; shl ebp, 0xff; dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x000a31e1: sal esi, 1; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0008dfe1: salc; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edx*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x0019f856: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000c1b32: salc; add byte ptr [ecx - 0x76180810], cl; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x00189fbe: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x001226ce: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008cfaa: salc; call dword ptr gs:[0x10]; 
0x0006a2a0: salc; clc; dec dword ptr [ebp - 0x6e85fe7c]; jecxz 0x6a2a9; jmp eax; 
0x001859aa: salc; clc; jmp dword ptr [esi - 0x70]; 
0x00026ba1: salc; cmp al, 0x89; ret; 
0x00132ef6: salc; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0011b032: salc; idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00186c45: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b91f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00186cb5: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001899cf: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0008af79: salc; jae 0x8afb8; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00080c9f: salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x0008fd44: salc; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000bbca0: salc; mov eax, dword ptr [esp + 4]; ret; 
0x000bbd20: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000bbcf6: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0011af69: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00118f86: salc; push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001297cc: salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000bbd60: salc; ret; 
0x00044cb6: salc; rol byte ptr [eax], 1; add byte ptr [ebx + 0x24448903], cl; cmp al, 0x89; ret 0xc483; 
0x000566a2: salc; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x001564c4: salc; std; jmp dword ptr [esi - 0x70]; 
0x000a0cb9: salc; sub esp, 0xc; push eax; call edx; 
0x0012a210: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0014623d: sar ah, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0019a43b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0019a43b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001208ca: sar bh, 1; je 0x1208f2; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0006722f: sar bh, cl; call dword ptr [eax - 0x73]; 
0x00025f8c: sar bh, cl; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00066340: sar bh, cl; jmp ptr [ebx]; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x0017db24: sar byte ptr [0x593], 1; ja 0x17dd10; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0017f13e: sar byte ptr [0x593], 1; ja 0x17f220; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0017f287: sar byte ptr [0x593], 1; ja 0x17f2a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075d4f: sar byte ptr [0x593], 1; ja 0x75e50; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078ab4: sar byte ptr [0x593], 1; ja 0x78c01; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007b11b: sar byte ptr [0x593], 1; ja 0x7b158; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007b8dd: sar byte ptr [0x593], 1; ja 0x7b910; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00081a1f: sar byte ptr [0x593], 1; ja 0x81a50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00082738: sar byte ptr [0x593], 1; ja 0x82780; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00085621: sar byte ptr [0x593], 1; ja 0x85680; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000856cb: sar byte ptr [0x593], 1; ja 0x856f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000d6fec: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000934d7: sar byte ptr [eax + 0x10], cl; pop ebx; ret; 
0x00122947: sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x00104014: sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001a02f3: sar byte ptr [eax + 0x20], cl; add eax, edx; ret; 
0x000840ef: sar byte ptr [eax + 0x26], 0x29; ret; 
0x000e6332: sar byte ptr [eax + 0x2a], 0x85; fisttp dword ptr [edi]; test bl, ah; add al, 0; add byte ptr [ebp - 0x7cffe2b4], cl; ret; 
0x0011b654: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x0007fbb2: sar byte ptr [eax + 0x33], 1; ret; 
0x0013fddb: sar byte ptr [eax + 0x3a], 0x83; in al, dx; add al, 0x89; ret; 
0x0005e33b: sar byte ptr [eax + 0x3a], 0x83; in al, dx; or byte ptr [ebp - 0x6bde97a], cl; call dword ptr [eax + 0x53]; 
0x0005e42e: sar byte ptr [eax + 0x3f], 0x83; in al, dx; or byte ptr [ebp - 0x6bde97a], cl; call dword ptr [eax + 0x53]; 
0x00135cc0: sar byte ptr [eax + 0x70], 0x89; ret; 
0x0008df0a: sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00077565: sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x00079eb3: sar byte ptr [eax + 0xb], 0x83; ret 0x8304; 
0x000e1456: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000917ba: sar byte ptr [eax + 0xf0], cl; mov ecx, 7; mov dword ptr [ebx + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008cfa3: sar byte ptr [eax + 0xf0], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x00099287: sar byte ptr [eax + 1], cl; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x0014bcf5: sar byte ptr [eax + 8], 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001279f5: sar byte ptr [eax + 8], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0017703c: sar byte ptr [eax + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00093f24: sar byte ptr [eax + 9], 0x89; adc ah, 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0017fe94: sar byte ptr [eax + 9], 0x8b; push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016c21b: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00178e65: sar byte ptr [eax], 0xf; inc esp; ret; 
0x00023250: sar byte ptr [ebx + 1], cl; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x0019f7a4: sar byte ptr [ebx], 0x4a; cld; jne 0x19f7b0; pop ebx; ret; 
0x000886d3: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0017ed78: sar byte ptr [ebx], 0x9e; call 0xf17ed80; xchg esp, eax; ret 0xd008; 
0x0017ee08: sar byte ptr [ebx], 0x9e; call 0xf17ee10; xchg esp, eax; ret 0xd008; 
0x0007df26: sar byte ptr [ebx], 0x9e; xchg esp, eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x0018aaca: sar byte ptr [ebx], 1; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00075850: sar byte ptr [ebx], 1; mov bh, 0x94; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0007585b: sar byte ptr [ebx], 1; mov bh, 0xe8; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00075845: sar byte ptr [ebx], 1; mov bh, 0xec; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x000df8c9: sar byte ptr [ecx + 0x74], cl; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011ec4c: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0002be36: sar byte ptr [ecx - 0x29], 0x2d; ret 0; 
0x0015133c: sar byte ptr [ecx], 0xd1; setne al; ret; 
0x001a4470: sar byte ptr [ecx], 1; je 0x1a4498; adc al, 0xf; xchg ebp, eax; ret 0xc208; 
0x000423dc: sar byte ptr [ecx], 1; ret 0x920f; 
0x000423bd: sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000dc3ec: sar byte ptr [ecx], 1; ret; 
0x000ba119: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x17d651; add ecx, 0x105f51; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4179: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x17d651; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b39: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x17d651; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba156: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x17d651; add ecx, 0x105f14; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41b6: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x17d651; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b76: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x17d651; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba16d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x17d651; add ecx, 0x105efd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41cd: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x17d651; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b8d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x17d651; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f7211: sar byte ptr [ecx], cl; jmp 0xf7224; xchg esp, eax; ret 0xca83; 
0x00073302: sar byte ptr [ecx], cl; ret 0x850f; 
0x000715ac: sar byte ptr [ecx], cl; ret 0xe75; 
0x0018a6da: sar byte ptr [edi], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000426b4: sar byte ptr [edx + 0x10], cl; cmove eax, edx; ret; 
0x00092107: sar byte ptr [edx + 0x200], 0xf; inc esp; ret 0x118b; 
0x00042631: sar byte ptr [edx + 0x20], cl; cmove eax, edx; ret; 
0x001771c6: sar byte ptr [edx + 1], 0xe8; push 0x81000064; ret; 
0x00042613: sar byte ptr [edx + 8], cl; cmove eax, edx; ret; 
0x000a287e: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x000a2513: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x0008cefd: sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0013bb56: sar byte ptr [esi + 5], 0x80; cmp ebp, dword ptr [esi]; je 0x13bb68; add esp, 8; pop ebx; ret; 
0x0008d93c: sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0010407c: sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0016b60c: sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00156a00: sar ch, 1; jmp dword ptr [esi - 0x70]; 
0x0011a2b2: sar cl, 1; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00120bc5: sar cl, 1; jmp dword ptr [ecx]; 
0x001943d5: sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x00103f37: sar dh, 0xff; call dword ptr [ebx - 0x18]; 
0x0013e193: sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x001905ec: sar dh, 1; inc dword ptr [ecx + 0x3e929c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001903e9: sar dh, cl; inc dword ptr [ecx + 0x3eb2cc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00190436: sar dh, cl; inc dword ptr [ecx + 0x3eb9fc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00099d59: sar dword ptr [0xfffff000], 0x77; pop es; mov eax, ecx; pop ebx; ret; 
0x0003c3a7: sar dword ptr [0xfffff001], cl; jae 0x24e60; ret; 
0x0008b9d1: sar dword ptr [eax + 0xf0], 1; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00041c77: sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0013d0e7: sar dword ptr [eax], 0xf; dec edi; ret; 
0x000b4166: sar dword ptr [ebx + 0x30010bc], 0xc; xchg ecx, eax; jmp ecx; 
0x00032258: sar dword ptr [ebx], 1; stc; call dword ptr [eax - 0x18]; 
0x00032258: sar dword ptr [ebx], 1; stc; call dword ptr [eax - 0x18]; mov esi, 0xf600001a; ret 0xf03; 
0x000b2bc5: sar dword ptr [ecx + edx*8 + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001664d4: sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x000b2a42: sar dword ptr [edi - 0x2e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b4222: sar dword ptr [edi - 0x44], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b2c02: sar dword ptr [edi], 0xd1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba03b: sar dword ptr [edx + 0x300105f], 0xc; xchg ecx, eax; jmp ecx; 
0x000b6d3b: sar dword ptr [edx], 0x92; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b4267: sar dword ptr [edx], 0xbc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002f4b7: sar dword ptr [edx], 0xf9; call dword ptr [eax - 0x18]; 
0x0008e21b: sar dword ptr [esi], 1; add byte ptr [ebx - 0x7c72f314], al; aam 0x93; stc; call dword ptr [eax - 0x18]; 
0x000bc899: sar dword ptr [esi], 1; jmp ecx; 
0x000bc899: sar dword ptr [esi], 1; jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x10c]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x00091f2e: sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00091f6e: sar eax, 0x1e; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001198f4: sar eax, 0x1f; add esp, 0xc; ret; 
0x001155f8: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003ab8f: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0003a87a: sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00183d65: sar eax, 0x1f; ret; 
0x0003a4fb: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000888c1: sar eax, 1; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x00089249: sar eax, 1; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008a47f: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012ebdb: sar eax, 1; dec dword ptr [ebx - 0x7cabdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x000f33ed: sar eax, 1; pop edi; pop ebp; ret; 
0x0008a4df: sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00079f23: sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0007c059: sar eax, 2; ret; 
0x000bb2bf: sar eax, 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x001326bd: sar eax, 5; add esp, 0xc; ret; 
0x0017d6dd: sar eax, 5; and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0017d67e: sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0017d6ad: sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x000ba178: sar ebp, 0x5e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b44: sar ebp, 0xd1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001442d2: sar ebp, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000b41a6: sar ebx, 0xbc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007b9d2: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0003cc23: sar ebx, 5; rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0003cbc3: sar ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0003cc79: sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0019a37b: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x0019a37b: sar edi, 0xff; jmp dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00071c55: sar edi, 1; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x0010e2f8: sar edi, 1; jmp dword ptr [ebp - 0x75]; 
0x000678f5: sar edi, cl; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x00065682: sar edi, cl; inc dword ptr [ebp - 0x497af040]; or al, 0; add byte ptr [ebx - 0x5af43], cl; dec dword ptr [ebx - 0x58b7b]; jmp dword ptr [ebp - 0x75]; 
0x0016997d: sar edi, cl; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0003a87f: sar edx, 0x1e; and eax, edx; ret; 
0x0011604e: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0007ba73: sar edx, 2; jmp 0x7ba62; mov eax, 0xffffffff; pop ebx; ret; 
0x0007ba5f: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x000762d9: sar edx, cl; jmp dword ptr [esi - 0x70]; 
0x001904e5: sar esi, 1; inc dword ptr [ecx + 0x3ea30c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a5f5b: sbb ah, 0xa2; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a610b: sbb ah, 0xa3; idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000be040: sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x000c1a40: sbb ah, 0xce; stc; call dword ptr [eax + 0x57]; 
0x000bc917: sbb ah, 1; add byte ptr [eax], al; ret; 
0x0019742e: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000be156: sbb al, 0; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x000d7d74: sbb al, 0; add dh, dh; ret; 
0x00027041: sbb al, 0x24; call edi; 
0x000260ce: sbb al, 0x24; call esi; 
0x0003ace0: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003ac89: sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000d2e92: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003aa30: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0014865c: sbb al, 0x24; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00026241: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0008c217: sbb al, 0x24; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000268db: sbb al, 0x24; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x0017d63a: sbb al, 0x24; ret; 
0x0005e281: sbb al, 0x24; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0012ccea: sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg ebp, edx; stc; call dword ptr [eax - 1]; 
0x0012c8d4: sbb al, 0x29; ret 0xca39; 
0x0002a651: sbb al, 0x29; ret; 
0x00151792: sbb al, 0x31; dec dword ptr [ebx + 0x392c244c]; ret; 
0x0017e03f: sbb al, 0x31; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0003e62d: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001273fd: sbb al, 0x31; ror byte ptr [ebx - 0x17c7dba4], 0xd7; adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001283ad: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x27; add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00127a6d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x67; or al, 0xf6; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000d6c0d: sbb al, 0x31; ror byte ptr [ebx - 0x74cbdbac], 0x5c; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000d1df2: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000e0345: sbb al, 0x39; ret 0x8d0f; 
0x000f879a: sbb al, 0x39; ret 0xaf75; 
0x000f480e: sbb al, 0x39; ret; 
0x000be755: sbb al, 0x39; ror dword ptr [edi], 0x85; ret 2; 
0x000a5b50: sbb al, 0x3d; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000477c4: sbb al, 0x3f; stc; call dword ptr [eax - 0x18]; 
0x00041e97: sbb al, 0x50; call 0x1a0300; add esp, 0x18; pop ebx; ret; 
0x0005d362: sbb al, 0x50; call 0x76ee0; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0011ea9f: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x10; add esp, 0xc; ret; 
0x000a5a5b: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0xbbd80; add esp, 0x18; pop ebx; ret; 
0x000df73e: sbb al, 0x51; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x001645be: sbb al, 0x52; lea edx, [esi - 0xcc604]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001646ef: sbb al, 0x52; lea edx, [esi - 0xcc604]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x0016ee68: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00166413: sbb al, 0x53; call dword ptr [eax + 4]; 
0x00166461: sbb al, 0x53; call dword ptr [eax]; 
0x0016eda4: sbb al, 0x53; call eax; 
0x00163e08: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00094f4e: sbb al, 0x5b; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x00079ee6: sbb al, 0x5b; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0011e715: sbb al, 0x5b; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0015f41c: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00038290: sbb al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000332d9: sbb al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00078418: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0002522e: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00118273: sbb al, 0x5b; pop esi; pop edi; ret; 
0x000a9234: sbb al, 0x5b; pop esi; ret; 
0x000844d3: sbb al, 0x5b; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x00079f21: sbb al, 0x5b; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0011d1fd: sbb al, 0x5d; stc; call dword ptr [eax + 0x55]; 
0x000b4b1a: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000a5a30: sbb al, 0x62; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00088826: sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x000888fd: sbb al, 0x65; mov dword ptr [0x7c], ecx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x88910; ret; 
0x0008880d: sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001318c8: sbb al, 0x65; stc; call dword ptr [eax - 0x75]; 
0x0017081e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0008183e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x000d3e7b: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x00102d13: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102db7: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00103033: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00121817: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218c7: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x001274fc: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x001288bc: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x00133371: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x00134581: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x00144834: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cb5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x001643e8: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x0016d5ea: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d68a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0017ab0b: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x001860f9: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003c98e: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003fe38: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x000504b8: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x0008c7fa: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x00091266: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912f6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925ca: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a4a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f56: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x000964b1: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x0009671d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x000986a5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099d0d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x000d2d38: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d4111: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000df602: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df821: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x00131e1d: sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x000330dc: sbb al, 0x73; pop ss; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x000575ae: sbb al, 0x81; les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0017d6b1: sbb al, 0x82; xor eax, eax; pop ebx; ret; 
0x00171b93: sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0013143e: sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x000a0868: sbb al, 0x83; in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x0010249f: sbb al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00170dbe: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0012cdb0: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00087f55: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000d458f: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000744d3: sbb al, 0x83; ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0011ef53: sbb al, 0x83; ret 0x8801; 
0x001375ee: sbb al, 0x83; ret 0x8802; 
0x000fa218: sbb al, 0x83; ret 0x8904; 
0x000e4919: sbb al, 0x83; ret 0x8b0c; 
0x000f8633: sbb al, 0x83; ret 0xf01; 
0x0002c2c3: sbb al, 0x83; ret; 
0x000f5b59: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000f5cc9: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0008ede3: sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00151364: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0xbb960; add esp, 0x1c; ret; 
0x000871bf: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0016519f: sbb al, 0x85; ror byte ptr [edi], 0x84; mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0016c01a: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00163b89: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x00164f86: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000d6db4: sbb al, 0x85; sal byte ptr [edi + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0004a23f: sbb al, 0x87; stc; call dword ptr [eax - 0x73]; 
0x000e4dde: sbb al, 0x89; aad 0xe9; ret; 
0x0009a6dd: sbb al, 0x89; add al, 0x24; call esi; 
0x00034bc0: sbb al, 0x89; call 0x5d62aa22; ret; 
0x0003d822: sbb al, 0x89; call 0x5d633684; ret; 
0x00079d94: sbb al, 0x89; call 0x5d66fbf6; ret; 
0x00093783: sbb al, 0x89; call 0x5d6895e5; ret; 
0x0009b95c: sbb al, 0x89; call 0x5d6917be; ret; 
0x0009e601: sbb al, 0x89; call 0x5d694463; ret; 
0x0010560b: sbb al, 0x89; call 0x5d6fb46d; ret; 
0x0011e6e7: sbb al, 0x89; call 0x5d714549; ret; 
0x00133df0: sbb al, 0x89; call 0x5d729c52; ret; 
0x0014a6cf: sbb al, 0x89; call 0x5d740531; ret; 
0x0014c6ec: sbb al, 0x89; call 0x5d74254e; ret; 
0x000e0342: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000380bc: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00136c7a: sbb al, 0x89; fdivr dword ptr [ecx]; fimul dword ptr [edi]; inc ebx; ret 0xc289; 
0x001549a5: sbb al, 0x89; fisttp qword ptr [ebx + 0xc090]; add byte ptr [ebx + 0xa080], cl; add byte ptr [ecx - 0x76297631], cl; ret; 
0x000a58d9: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00035a76: sbb al, 0x89; loope 0x35a03; ret; 
0x00032ae6: sbb al, 0x89; out 0x89, al; ret 0x25; 
0x0012daf8: sbb al, 0x89; out 0x89, al; ret; 
0x000f4848: sbb al, 0x89; pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000305f7: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0013c30d: sbb al, 0x89; ret 0x189; 
0x00035214: sbb al, 0x89; ret 0x25; 
0x0008b17a: sbb al, 0x89; ret 0x448b; 
0x0012fbdb: sbb al, 0x89; ret 0x572b; 
0x000a303b: sbb al, 0x89; ret 0x98eb; 
0x0009935f: sbb al, 0x89; ret 0xc031; 
0x00100c85: sbb al, 0x89; ret 0xc085; 
0x00107b2a: sbb al, 0x89; ret 0xc483; 
0x00056bcd: sbb al, 0x89; ret 0xc801; 
0x0007ae9a: sbb al, 0x89; ret 0xc883; 
0x001a6479: sbb al, 0x89; ret 0xe283; 
0x00101718: sbb al, 0x89; ret 0xeac0; 
0x00038e2a: sbb al, 0x89; ret; 
0x000586b4: sbb al, 0x89; stc; call dword ptr [eax - 0x18]; 
0x0013e389: sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000e2325: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000bb99e: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x001867cc: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00132fe7: sbb al, 0x8b; inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000a566f: sbb al, 0x8b; jl 0xa5697; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x001881c6: sbb al, 0x8b; jmp ebx; 
0x00097d6c: sbb al, 0x8b; jne 0x97d70; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], edi; call esi; 
0x00061046: sbb al, 0x8b; mov word ptr [esi - 0x72eb4], es; add ecx, ebx; jmp ecx; 
0x00061427: sbb al, 0x8b; mov word ptr [esi - 0x72f34], es; add ecx, ebx; jmp ecx; 
0x000e2e8f: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00121a57: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010c2f5: sbb al, 0x8b; test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00058587: sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0010cef3: sbb al, 0x8d; push eax; jmp dword ptr [esi - 0x7d]; 
0x0009b4c8: sbb al, 0x8d; push ebx; or dh, dh; ret 0xf0f; 
0x001663fa: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00166439: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000be03e: sbb al, 0x8d; sbb ah, 0xaa; stc; call dword ptr [eax - 0x73]; 
0x0010d88a: sbb al, 0x8d; sbb byte ptr [ebx + 0x59], 0xf9; call dword ptr [eax - 0x18]; 
0x001652f8: sbb al, 0x8d; xchg byte ptr [ebp + eax*8 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f467: sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f669: sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x001652c7: sbb al, 0x8d; xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax - 0x73]; 
0x000a01ab: sbb al, 0x8d; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x000c03fb: sbb al, 0x8d; xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c0044: sbb al, 0x8d; xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000f30eb: sbb al, 0x8e; je 0xf3100; pop ebx; pop esi; ret; 
0x00091e59: sbb al, 0x96; stc; call dword ptr [eax - 0x73]; 
0x0009adeb: sbb al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x00126fd3: sbb al, 0xb5; stc; call dword ptr [eax + 0x55]; 
0x001253fc: sbb al, 0xb8; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00125170: sbb al, 0xb8; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0018822b: sbb al, 0xbb; jmp ebx; 
0x00183d64: sbb al, 0xc1; clc; pop ds; ret; 
0x0011604d: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0012d3ae: sbb al, 0xc6; add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0012d361: sbb al, 0xc6; add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0017013d: sbb al, 0xc8; stc; call dword ptr [edx + 0x6a]; 
0x0014e178: sbb al, 0xd0; int1; call dword ptr [eax - 1]; 
0x00120bc4: sbb al, 0xd0; stc; jmp dword ptr [ecx]; 
0x0015f1fb: sbb al, 0xd; add byte ptr [ebx - 0x7f72eb14], al; out dx, al; jno 0x15f1ff; call dword ptr [eax + 0x6a]; 
0x000df663: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00041f2a: sbb al, 0xe8; adc ah, ah; adc eax, 0x18c48300; pop ebx; ret; 
0x000a3fe8: sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001190d8: sbb al, 0xe8; adc byte ptr [eax + eax], 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000c061a: sbb al, 0xe8; adc byte ptr [ecx], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00041ef6: sbb al, 0xe8; add al, 0xe4; adc eax, 0x18c48300; pop ebx; ret; 
0x0011ebf5: sbb al, 0xe8; add eax, 0x83fff3f4; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0011eed9: sbb al, 0xe8; and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0009710f: sbb al, 0xe8; imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x00183d5c: sbb al, 0xe8; into; jns 0x183d59; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0005e694: sbb al, 0xe8; jbe 0x5e6d2; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000576a6: sbb al, 0xe8; je 0x57657; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006af57: sbb al, 0xe8; jecxz 0x6aedc; sti; inc dword ptr [ebx + 0x148b10c4]; and al, 0x89; ret; 
0x0003d8be: sbb al, 0xe8; jl 0x3d8cf; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0015e74a: sbb al, 0xe8; jmp 0x8115e93f; ret; 
0x000446ca: sbb al, 0xe8; jo 0x446d7; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001654f0: sbb al, 0xe8; jp 0x1654ae; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000e2ef0: sbb al, 0xe8; lcall 0x1cc4, 0x83000004; ret; 
0x000a5a90: sbb al, 0xe8; ljmp 0x18c4:0x83000162; pop ebx; ret; 
0x0004b30a: sbb al, 0xe8; mov al, 8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001190a3: sbb al, 0xe8; mov bh, 0x54; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c6d3c: sbb al, 0xe8; mov cs, word ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cd182: sbb al, 0xe8; mov eax, 0x83fffeeb; les ebx, ptr [eax]; pop ebx; ret; 
0x0017d78f: sbb al, 0xe8; mov edx, dword ptr [ecx]; in al, dx; jmp dword ptr [esi - 0x70]; 
0x000a23bc: sbb al, 0xe8; mov esi, 0x83000199; les ebx, ptr [eax]; pop ebx; ret; 
0x000e2e30: sbb al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010ba52: sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e121: sbb al, 0xe8; or dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a694f: sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00062434: sbb al, 0xe8; out 0, al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d85c: sbb al, 0xe8; outsb dx, byte ptr ds:[esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000579c5: sbb al, 0xe8; push ebp; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00057ac4: sbb al, 0xe8; push esi; stosb byte ptr es:[edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001190f5: sbb al, 0xe8; push esp; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00024582: sbb al, 0xe8; ret 0xffff; 
0x000234d7: sbb al, 0xe8; ret; 
0x00118f84: sbb al, 0xe8; salc; push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016b60a: sbb al, 0xe8; sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x000a5b4e: sbb al, 0xe8; sbb al, 0x3d; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000a5a2e: sbb al, 0xe8; sbb al, 0x62; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00099120: sbb al, 0xe8; sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000577b4: sbb al, 0xe8; stc; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0010b013: sbb al, 0xe8; stosb byte ptr es:[di], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003d89e: sbb al, 0xe8; sub al, 0xd3; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000871cd: sbb al, 0xe8; sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x00069574: sbb al, 0xe8; xchg byte ptr [esi], bh; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00119083: sbb al, 0xe8; xlatb; push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115896: sbb al, 0xe8; xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00041ec6: sbb al, 0xe8; xor al, 0xe4; adc eax, 0x18c48300; pop ebx; ret; 
0x0004a86e: sbb al, 0xe9; call 0x8c04a867; jl 0x4a89b; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x0011d7cf: sbb al, 0xe9; ret; 
0x000fbef6: sbb al, 0xf6; ret 0xf08; 
0x00101f8a: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00143378: sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x000610db: sbb al, 0xf; mov dh, 0x44; sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x00124eae: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x00167bab: sbb al, 0xf; mov dh, 0xc0; ret; 
0x0004608c: sbb al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0007d012: sbb al, 0xf; test bh, dh; add byte ptr [eax], al; add byte ptr [ebp + 0x41890442], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x000d1df5: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000b306d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b4710: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x001a4278: sbb al, 0xf; xchg ebp, eax; ret 0x7c39; 
0x0004b454: sbb al, 0xf; xchg ebp, eax; ret 0xb60f; 
0x0010d035: sbb al, 0xf; xchg ebp, eax; ret; 
0x0014693d: sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x00050d1d: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x00050c1d: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x000d39b5: sbb al, 0xf; xchg esp, eax; ret; 
0x001640d0: sbb al, 0xfa; cld; call dword ptr [eax - 0x73]; 
0x00149edc: sbb al, 0xff; aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000e2eec: sbb al, 0xff; je 0xe2f14; sbb al, 0xe8; lcall 0x1cc4, 0x83000004; ret; 
0x00084032: sbb al, 0xff; jo 0x8406e; call 0x1156a0; add esp, 0x18; pop ebx; ret; 
0x0016a9c7: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0010530c: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019ef10: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00124529: sbb al, 1; add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x001052ca: sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000bc907: sbb al, 1; add byte ptr [eax], al; ret; 
0x00024bb0: sbb al, 1; add byte ptr [eax], al; test edx, edx; je 0x24bb9; ret; 
0x000accc0: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000f1e7a: sbb al, 4; add byte ptr [ebx - 0x46f43], cl; dec dword ptr [ebp - 0x6507379]; call dword ptr [eax - 0x73]; 
0x0018cc8b: sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153829: sbb al, 5; bnd call dword ptr [edx + 0x6a]; 
0x00033cc4: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a091c: sbb al, byte ptr [0xec830019]; or al, 0x6a; add eax, 0x53e5838d; stc; call dword ptr [eax - 0x73]; 
0x00103fa2: sbb al, byte ptr [eax + eax]; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0018ce84: sbb al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002aebe: sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x000942f8: sbb al, byte ptr [eax]; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x0008689e: sbb al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x0012011a: sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008eb75: sbb al, byte ptr [eax]; add byte ptr [ebp + 0x2e], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ee53: sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x0005d8ef: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x397f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00089a55: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00086e18: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00024c15: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x00086ecd: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0019767e: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000cf612: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x00055615: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x365f63], cl; call dword ptr [eax - 1]; 
0x00086e2b: sbb al, byte ptr [eax]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0003225f: sbb al, byte ptr [eax]; add dh, dh; ret 0xf03; 
0x0008e82c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x00086d8c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xe4c]; ret; 
0x00088a1d: sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x88a30; ret; 
0x0008f9ec: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x280]; mov dword ptr [eax], edx; ret; 
0x0008899c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x000889bc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x000889dc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889fc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x0008f9cc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x284], edx; ret; 
0x0008f9ac: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x28c], edx; ret; 
0x000df8b1: sbb al, byte ptr [ebx + 0x548d08ec]; and al, 0xc; push edx; push ebx; call eax; 
0x0011cfbc: sbb al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00116ca3: sbb al, byte ptr [ebx + 0x5e5b74c4]; ret; 
0x0003d60c: sbb al, byte ptr [ecx + 0x220c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0018a1b5: sbb al, byte ptr [ecx]; retf 0xc801; call 0x17d639; add ebx, 0x444d9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001881b5: sbb al, byte ptr [ecx]; retf 0xc801; call 0x17d639; add ebx, 0x46259; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00099122: sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ac9c2: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008e82b: sbb al, byte ptr es:[eax]; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x00136e4d: sbb al, ch; lodsd eax, dword ptr [esi]; ret 0xffee; 
0x000db388: sbb al, ch; ret 0xfe08; 
0x0005bb78: sbb al, ch; ret 0xffc8; 
0x0015c1ba: sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x00124ea3: sbb bh, bh; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0010409d: sbb bh, bh; jbe 0x1040a9; call dword ptr [eax + 0xc]; 
0x00104e8e: sbb bh, bh; je 0x104eb6; sbb byte ptr [edx - 1], ch; call 0x104fa0; add esp, 0x1c; ret; 
0x0011527f: sbb bh, bh; je 0x1152a7; sbb byte ptr [edx - 0x64], ch; call 0x10b4c0; add esp, 0x1c; ret; 
0x0011577f: sbb bh, bh; je 0x1157a7; sbb byte ptr [edx - 0x64], ch; call 0x10c1a0; add esp, 0x1c; ret; 
0x00116c4c: sbb bh, bh; je 0x116c74; sbb byte ptr [edx - 0x64], ch; call 0x10c1a0; add esp, 0x1c; ret; 
0x00119fb4: sbb bh, bh; je 0x119fdc; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x000871bb: sbb bh, bh; je 0x871e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x000a2633: sbb bh, bh; je 0xa265b; adc byte ptr [edx - 0x18], dl; ret 0xf80a; 
0x000bd285: sbb bh, bh; je 0xbd2ad; sbb byte ptr [edx], ch; call 0xbd7c0; add esp, 0x1c; ret; 
0x000d2ed0: sbb bh, bh; jo 0xd2ed8; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d2f1d: sbb bh, bh; jo 0xd2f25; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d2f70: sbb bh, bh; jo 0xd2f78; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x000d2fbd: sbb bh, bh; jo 0xd2fc5; push dword ptr [eax]; call 0xd54a0; add esp, 0x1c; ret; 
0x0019b385: sbb bh, byte ptr [eax + 1]; jg 0x19b390; neg eax; ret; 
0x00030b69: sbb bh, byte ptr [ebx]; stc; call dword ptr [edx + 0x50]; 
0x000bfc0d: sbb bh, byte ptr [ecx]; ret; 
0x0016f392: sbb bh, byte ptr [edx - 1]; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x001182f5: sbb bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x000b4acc: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0012d861: sbb byte ptr [0x2000001], al; push eax; call dword ptr [ebx + 0x14]; 
0x00137e77: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00099e0b: sbb byte ptr [eax + 0x103], bh; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000dface: sbb byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x00115925: sbb byte ptr [eax + 0x129], bh; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000c425d: sbb byte ptr [eax + 0x21], 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x8e; ret 0xf; 
0x0003e82e: sbb byte ptr [eax + 0x50], dl; call 0x3e8a0; add esp, 0x1c; ret; 
0x0003ff75: sbb byte ptr [eax + 0x50], dl; call 0x3fa70; add esp, 0x10; add esp, 0xc; ret; 
0x0003fca5: sbb byte ptr [eax + 0x50], dl; call 0x3ffe0; add esp, 0x10; add esp, 0xc; ret; 
0x00082309: sbb byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x000741f4: sbb byte ptr [eax + 0x57], dl; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000344ff: sbb byte ptr [eax + 0x65000000], 3; add eax, 0; ret; 
0x0012742f: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00160412: sbb byte ptr [eax + 0x72], 0xf9; call dword ptr [eax + 0x6a]; 
0x00119aeb: sbb byte ptr [eax + 0xa], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008fd38: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0019b6f7: sbb byte ptr [eax + 1], bh; ja 0x19b701; neg eax; ret; 
0x0002c927: sbb byte ptr [eax + 3], 0; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x0013616a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0013616a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x000a3dcb: sbb byte ptr [eax + eax*2 - 0x18], 0xff; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x0018d0ab: sbb byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a3177: sbb byte ptr [eax + ebp*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x000a2987: sbb byte ptr [eax + ebp*4 - 0x1a7f000a], 2; lea edx, [edx - 0x1754d4]; cmove eax, edx; ret; 
0x00097d74: sbb byte ptr [eax + edi*8 + 0x243c89ff], dh; call esi; 
0x0014e177: sbb byte ptr [eax + edx*8], 0xf1; call dword ptr [eax - 1]; 
0x00132c2c: sbb byte ptr [eax - 0x18], dl; jge 0x132c11; hlt; jmp dword ptr [esi - 0x70]; 
0x000819e2: sbb byte ptr [eax - 0x18], dl; mov bh, 0x39; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bfcfe: sbb byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x001303ec: sbb byte ptr [eax - 0x49], 0xf9; call dword ptr [eax + 0x6a]; 
0x00165e98: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0018861d: sbb byte ptr [eax - 1], dl; inc dword ptr [ecx + 0x45df7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009aa2a: sbb byte ptr [eax], 0x3c; add byte ptr [eax], al; ret; 
0x00031901: sbb byte ptr [eax], 0x82; stc; call dword ptr [eax - 0x18]; 
0x001475dd: sbb byte ptr [eax], 0xbf; stc; call dword ptr [eax - 0x73]; 
0x00164a9b: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00160fd5: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e0bf6: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00131df7: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x00025083: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0013560a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d6: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e6be: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0018603b: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0002510e: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x0014c85b: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x0014c4a8: sbb byte ptr [eax], al; add byte ptr [eax], al; push eax; call edx; 
0x00131e26: sbb byte ptr [eax], al; add byte ptr [eax], al; push esi; call eax; 
0x00024b6b: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x0003eaae: sbb byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x001298ec: sbb byte ptr [eax], al; add byte ptr [eax], al; xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0011ee94: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0005dd04: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00057f4c: sbb byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00141b3e: sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x000a2302: sbb byte ptr [ebp + 0x5b1075db], al; pop esi; pop edi; ret; 
0x000b4aa7: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000b4ac9: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000b4b17: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0014a19e: sbb byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x0007b332: sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00130b00: sbb byte ptr [ebp + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0009a6d3: sbb byte ptr [ebp - 0x18], dl; mov dh, 0x8a; clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x00097ac4: sbb byte ptr [ebp - 0x199e337f], cl; call dword ptr [eax - 1]; 
0x0003c323: sbb byte ptr [ebp - 0x1f4ca37d], cl; dec dword ptr [edi]; inc esp; ret 0xe4e9; 
0x0004dd9e: sbb byte ptr [ebp - 0x2a71f040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7db84], cl; jmp dword ptr [eax]; 
0x0012f367: sbb byte ptr [ebp - 0x2f7bf037], al; or al, byte ptr [eax]; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x000f9a19: sbb byte ptr [ebp - 0x397c89fc], cl; add dword ptr [ebx + 0x48d7451], ecx; ret 0x7880; 
0x0014077b: sbb byte ptr [ebp - 0x47378a25], al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00174758: sbb byte ptr [ebp - 0x636a37d], cl; call dword ptr [eax - 0x73]; 
0x0010aaec: sbb byte ptr [ebp - 0x64ec77e], cl; call dword ptr [eax - 0x73]; 
0x000960e2: sbb byte ptr [ebp - 0x668fb80], cl; call dword ptr [eax - 0x18]; 
0x000891bd: sbb byte ptr [ebp - 0x66d7f80], cl; call dword ptr [eax - 0x18]; 
0x0005f555: sbb byte ptr [ebp - 0x673af80], cl; call dword ptr [eax - 0x18]; 
0x0005f1ee: sbb byte ptr [ebp - 0x673d380], cl; call dword ptr [eax - 0x18]; 
0x0002511c: sbb byte ptr [ebp - 0x681df80], cl; call dword ptr [eax - 0x18]; 
0x00145d97: sbb byte ptr [ebp - 0x687bf025], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00178bf4: sbb byte ptr [ebp - 0x689d680], cl; call dword ptr [eax - 0x18]; 
0x00163440: sbb byte ptr [ebp - 0x68d0380], cl; call dword ptr [eax - 0x18]; 
0x00162ee0: sbb byte ptr [ebp - 0x68d0f80], cl; call dword ptr [eax - 0x18]; 
0x00162ee0: sbb byte ptr [ebp - 0x68d0f80], cl; call dword ptr [eax - 0x18]; ret; 
0x00162c10: sbb byte ptr [ebp - 0x68d1c80], cl; call dword ptr [eax - 0x18]; 
0x00162820: sbb byte ptr [ebp - 0x68d2a80], cl; call dword ptr [eax - 0x18]; 
0x001621e0: sbb byte ptr [ebp - 0x68d3680], cl; call dword ptr [eax - 0x18]; 
0x001621e0: sbb byte ptr [ebp - 0x68d3680], cl; call dword ptr [eax - 0x18]; ret; 
0x00161e40: sbb byte ptr [ebp - 0x68d4580], cl; call dword ptr [eax - 0x18]; 
0x001617f0: sbb byte ptr [ebp - 0x68d5380], cl; call dword ptr [eax - 0x18]; 
0x0015f670: sbb byte ptr [ebp - 0x68e0580], cl; call dword ptr [eax - 0x18]; 
0x00154a7e: sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x00133b02: sbb byte ptr [ebp - 0x698f780], cl; call dword ptr [eax - 0x18]; 
0x001325e2: sbb byte ptr [ebp - 0x6992880], cl; call dword ptr [eax - 0x18]; 
0x00185b9b: sbb byte ptr [ebp - 0x6a66080], cl; call dword ptr [eax + 0x53]; 
0x00107dad: sbb byte ptr [ebp - 0x6a6fd80], cl; call dword ptr [eax + 0x6a]; 
0x00107d91: sbb byte ptr [ebp - 0x6a71779], cl; call dword ptr [eax - 0x73]; 
0x0010038b: sbb byte ptr [ebp - 0x6a85680], cl; call dword ptr [eax - 1]; 
0x000e83ea: sbb byte ptr [ebp - 0x6a9ad80], cl; call dword ptr [eax - 0x18]; 
0x000bd275: sbb byte ptr [ebp - 0x6b6d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00042fd6: sbb byte ptr [ebp - 0x729a8b40], al; inc ebp; inc byte ptr [ebx - 0x6bf00220]; ret 0xfd83; 
0x0003a1e3: sbb byte ptr [ebp - 0x769e8b40], al; ret 0xa4eb; 
0x00097038: sbb byte ptr [ebp - 0x76dbdbb4], cl; ret 0x4c89; 
0x0012eab4: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00140743: sbb byte ptr [ebp - 0x7cc78b25], al; rol byte ptr [ecx], 1; ret; 
0x00082f3d: sbb byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00171b57: sbb byte ptr [ebp - 0x93377], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0003fa90: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0002dde9: sbb byte ptr [ebx + 0x1442444], cl; add ecx, ebp; ret; 
0x001255a1: sbb byte ptr [ebx + 0x1974fffe], al; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0007bc57: sbb byte ptr [ebx + 0x290c2454], cl; ret 0x5489; 
0x000fa760: sbb byte ptr [ebx + 0x295b2cc4], al; ret 0xf089; 
0x001a4745: sbb byte ptr [ebx + 0x3908245c], cl; ret; 
0x001028d3: sbb byte ptr [ebx + 0x3910245c], cl; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000fa6f2: sbb byte ptr [ebx + 0x3910246c], cl; ret 0x8d0f; 
0x001a388d: sbb byte ptr [ebx + 0x39142444], cl; ret 0x840f; 
0x0002fcf7: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00147040: sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x0008cb06: sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e033f: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0012d85d: sbb byte ptr [ebx + 0x5182444], cl; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x0003fa56: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc73: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003ff43: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffc6: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x0010d88c: sbb byte ptr [ebx + 0x59], 0xf9; call dword ptr [eax - 0x18]; 
0x000ba51a: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b7094: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000d7b76: sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0016496e: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x001470df: sbb byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000286cd: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x0010d147: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0010c54d: sbb byte ptr [ebx + 0x5e5b74c4], al; ret; 
0x0002b1bd: sbb byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x0015e7ce: sbb byte ptr [ebx + 0x5e], bl; pop edi; mov eax, edx; ret; 
0x000a3542: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003a9c9: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000345a7: sbb byte ptr [ebx + 0x5e], bl; ret; 
0x0017d802: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00128b10: sbb byte ptr [ebx + 0xc], bh; call dword ptr gs:[0x10]; 
0x000d94fd: sbb byte ptr [ebx + 0xe4b7], cl; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x00046088: sbb byte ptr [ebx + 0xf1c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00130e82: sbb byte ptr [ebx + 0xfc08503], cl; test byte ptr [ebx - 0x74ffffff], bl; push ebx; and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x0009f113: sbb byte ptr [ebx + edi*2 - 0x58], dh; pcmpeqw mm1, qword ptr [ecx - 0x77]; ret; 
0x00133464: sbb byte ptr [ebx + edx*4 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa1a84]; cmovne eax, edx; pop ebx; ret; 
0x001333c4: sbb byte ptr [ebx + esi*2 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa2a64]; cmovne eax, edx; pop ebx; ret; 
0x0012fabc: sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x655c978d; stc; call dword ptr [edx + 0x50]; 
0x0005869b: sbb byte ptr [ebx - 0x14f3dbac], cl; mov bh, 0x8d; xchg dword ptr [ecx + ecx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000cd107: sbb byte ptr [ebx - 0x1a7f000a], 2; lea edx, [edx - 0x15ec94]; cmove eax, edx; ret; 
0x000cf6ff: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x365363]; call dword ptr [eax + 0x6a]; 
0x000dd3b2: sbb byte ptr [ebx - 0x2bb7c6c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00165cbf: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x165cd0; sub esp, 0xc; push esi; call eax; 
0x0003bd96: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00124366: sbb byte ptr [ebx - 0x47d7db84], cl; js 0x12436e; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x001253f8: sbb byte ptr [ebx - 0x47e3dbac], cl; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0012516c: sbb byte ptr [ebx - 0x47e3dbac], cl; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f43bc: sbb byte ptr [ebx - 0x49f0f314], al; ret; 
0x000701a6: sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x0006f019: sbb byte ptr [ebx - 0x52b7b], cl; inc dword ptr [ecx]; ret; 
0x000c84f7: sbb byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x000e2e8b: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00116ad5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00126bc5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00126ca5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011cc35: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011e5c5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011ab65: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00126805: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00120ece: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010b6fe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011531e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00126d9e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00126a1e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00126a9e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012683e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x00126bfe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x00126a5e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012692e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00126c6e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012193e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011e79e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011abfe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012ec45: sbb byte ptr [ebx - 0x74efdbac], cl; je 0x12ec71; adc al, 1; ret; 
0x0016c599: sbb byte ptr [ebx - 0x75], dl; inc esp; and al, 0x18; call eax; 
0x0014d21e: sbb byte ptr [ebx - 0x7e72f714], al; cdq; push ebx; stc; call dword ptr [eax + 0x52]; 
0x0013e7d4: sbb byte ptr [ebx - 1], dl; jmp dword ptr [esi - 0x70]; 
0x0003189a: sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x00168769: sbb byte ptr [ebx], bh; pop eax; adc al, 0xf; xchg edx, eax; ret 0xd284; 
0x001291c3: sbb byte ptr [ecx + 0x100ce], al; add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00042050: sbb byte ptr [ecx + 0x10b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x000a65a7: sbb byte ptr [ecx + 0x10c247c], cl; ret; 
0x00166ded: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00041fbe: sbb byte ptr [ecx + 0x20b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00124582: sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00116047: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0012cbcb: sbb byte ptr [ecx + 0x29c529da], cl; ret 0x6c01; 
0x000a59c3: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x000a09ac: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x00042022: sbb byte ptr [ecx + 0x40b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0012e8d1: sbb byte ptr [ecx + 0x468b0443], cl; adc al, 0x83; ret; 
0x00087dfd: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000881d1: sbb byte ptr [ecx + 0x57], dl; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000a5903: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00107d7f: sbb byte ptr [ecx + 0x74ff85f8], cl; add eax, 0x75003f80; sbb eax, 0x8b056a57; jl 0x107db5; sbb byte ptr [ebp - 0x6a71779], cl; call dword ptr [eax - 0x73]; 
0x001a6e37: sbb byte ptr [ecx + 0x7c89113c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x001876a3: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00041f90: sbb byte ptr [ecx + 0x8b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x000fe4f7: sbb byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a55c3: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x001334a2: sbb byte ptr [ecx + ebx*2 - 0xb], 0xff; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x001a3967: sbb byte ptr [ecx + edi], al; ret 0x850f; 
0x0004a86a: sbb byte ptr [ecx - 0x16e3dbac], cl; call 0x8c04a867; jl 0x4a89b; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x000850af: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0010c28f: sbb byte ptr [ecx - 0x74540c10], cl; test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000a6788: sbb byte ptr [ecx - 0x76287608], cl; ret 0x3990; 
0x000c7b5b: sbb byte ptr [ecx - 0x76c3dbb4], cl; je 0xc7b87; sub al, 0x39; ret 0x840f; 
0x000f3280: sbb byte ptr [ecx - 0x76ebdba4], cl; ret; 
0x000e0338: sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x001a4088: sbb byte ptr [ecx - 0x7c357603], cl; ret 0x8308; 
0x00040013: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x001619e5: sbb byte ptr [ecx - 0x7cefdbbc], cl; in al, dx; or byte ptr [ebp - 0x68e2b7d], cl; call dword ptr [eax + 0x51]; 
0x001732a0: sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00030109: sbb byte ptr [ecx], 0x3b; stc; call dword ptr [eax + 0x56]; 
0x001222cc: sbb byte ptr [ecx], al; add al, ch; mov word ptr [ebp - 4], fs; call dword ptr [eax - 0x73]; 
0x00060c3b: sbb byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx], al; or al, 0x86; jmp ecx; 
0x000998e4: sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00099882: sbb byte ptr [ecx], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00140816: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0013c924: sbb byte ptr [ecx], al; ret; 
0x001999b7: sbb byte ptr [ecx], al; retf 0xc801; call 0x17d639; add ebx, 0x35717; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d1dd7: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00152034: sbb byte ptr [ecx], bh; imul esp, dword ptr [esp + esi*2], 0x24748b5e; adc al, 0x83; ret 0x8301; 
0x0008e252: sbb byte ptr [ecx], bh; iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0004fbe1: sbb byte ptr [ecx], bh; ret 0x5a74; 
0x0004eb79: sbb byte ptr [ecx], bh; ret 0x840f; 
0x0002921b: sbb byte ptr [ecx], bh; ret; 
0x00172863: sbb byte ptr [ecx], bh; retf 0x820f; ret 0; 
0x00119fb8: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0012ad72: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x001208c8: sbb byte ptr [ecx], bh; sar bh, 1; je 0x1208f2; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000d21e7: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x0002bdaa: sbb byte ptr [ecx], ch; ret; 
0x000a0117: sbb byte ptr [ecx], cl; ret 0xc031; 
0x001289b9: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x0008d672: sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00039821: sbb byte ptr [ecx], dh; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x39808; ret; 
0x000b33c7: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00172947: sbb byte ptr [edi - 0x18], dl; xchg edx, eax; xor eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x001208ce: sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0008862c: sbb byte ptr [edi], cl; inc esp; ret 0x978b; 
0x000274c4: sbb byte ptr [edi], cl; mov bh, 0x81; cld; jle 0x274c4; jmp dword ptr [esi - 0x77]; 
0x00027266: sbb byte ptr [edi], cl; mov bh, 0x97; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x00137e34: sbb byte ptr [edi], cl; mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000a5673: sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000d980c: sbb byte ptr [edi], cl; test ah, dl; add byte ptr [eax], al; add dh, dh; ret; 
0x000a2ca3: sbb byte ptr [edi], cl; test byte ptr [ecx - 0x7cffffff], al; ret 0xe901; 
0x000d9efb: sbb byte ptr [edi], cl; test dword ptr [eax], ebx; out 0xff, eax; call dword ptr [eax + 0x50]; 
0x000d1dda: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000c90e5: sbb byte ptr [edi], cl; xchg edx, eax; ret 0xd120; 
0x00173c75: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x0002ef69: sbb byte ptr [edi], cl; xor byte ptr [eax - 1], 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0005d71e: sbb byte ptr [edi], dh; sbb eax, 0xec838b00; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0013939a: sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x55]; 
0x00139efc: sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax + 0x56]; 
0x00132290: sbb byte ptr [edx + 0x3c], 0xf9; call dword ptr [eax - 0x73]; 
0x0010bec8: sbb byte ptr [edx + 0x50], dl; call 0x10c1a0; add esp, 0x10; add esp, 0xc; ret; 
0x00111d42: sbb byte ptr [edx + 0x59], 0xf9; call dword ptr [eax - 0x18]; 
0x00162e06: sbb byte ptr [edx + 0xa], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f226: sbb byte ptr [edx + 1], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f596: sbb byte ptr [edx + 2], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00160436: sbb byte ptr [edx + 3], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00161716: sbb byte ptr [edx + 4], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00161d66: sbb byte ptr [edx + 5], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00162106: sbb byte ptr [edx + 6], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00163366: sbb byte ptr [edx + 7], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00162746: sbb byte ptr [edx + 8], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00162b36: sbb byte ptr [edx + 9], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00151b1b: sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x00086f23: sbb byte ptr [edx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00115283: sbb byte ptr [edx - 0x64], ch; call 0x10b4c0; add esp, 0x1c; ret; 
0x0011575f: sbb byte ptr [edx - 0x64], ch; call 0x10bfa0; add esp, 0x18; pop ebx; ret; 
0x00115783: sbb byte ptr [edx - 0x64], ch; call 0x10c1a0; add esp, 0x1c; ret; 
0x0016d5b0: sbb byte ptr [edx - 0x73], dl; nop; mov word ptr [esi - 0xd], gs; call dword ptr [edx - 0x73]; 
0x00138188: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x00104e92: sbb byte ptr [edx - 1], ch; call 0x104fa0; add esp, 0x1c; ret; 
0x00104e6c: sbb byte ptr [edx - 1], ch; call 0x105380; add esp, 0x1c; ret; 
0x00123b8a: sbb byte ptr [edx], ch; call 0x123dd0; add esp, 0x1c; ret; 
0x0015eda6: sbb byte ptr [edx], ch; call 0x14bc20; add esp, 0x1c; ret; 
0x00034b6c: sbb byte ptr [edx], ch; call 0x34b10; add esp, 0x1c; ret; 
0x0003cce6: sbb byte ptr [edx], ch; call 0x3c570; add esp, 0x1c; ret; 
0x000bd289: sbb byte ptr [edx], ch; call 0xbd7c0; add esp, 0x1c; ret; 
0x000df5be: sbb byte ptr [edx], ch; call 0xdf6b0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0011ea4c: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x5e000; add esp, 0x1c; ret; 
0x000479aa: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x45040; add esp, 0x1c; ret; 
0x0004aa7a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x482e0; add esp, 0x1c; ret; 
0x0004e4ca: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4bbc0; add esp, 0x1c; ret; 
0x000c35aa: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0f30; add esp, 0x1c; ret; 
0x000c63ea: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc3e80; add esp, 0x1c; ret; 
0x000c9b9a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc75d0; add esp, 0x1c; ret; 
0x0011468f: sbb byte ptr [edx], ch; push eax; call 0x1178c0; add esp, 0x10; add esp, 0xc; ret; 
0x000b42e4: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008806e: sbb byte ptr [esi + 0x57], dl; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00107e16: sbb byte ptr [esi - 0x18], dl; ret; 
0x000a59e3: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0017d31b: sbb byte ptr [esp + eax], bh; jne 0x24aa3; mov eax, 8; add esp, 0xc; ret; 
0x000359bb: sbb cl, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0014975f: sbb cl, al; stc; call dword ptr [eax - 0x73]; 
0x000b300c: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x00060506: sbb cl, byte ptr [ebx + 0x1553e14]; ret; 
0x0006b6e5: sbb cl, byte ptr [ebx + 0x1572914]; ret; 
0x0015ff87: sbb cl, byte ptr [ebx + 0x39682444]; ret 0x840f; 
0x00142018: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x000d21e5: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x00153822: sbb cl, byte ptr [ebx - 0x72f3db84]; xchg edi, eax; sbb al, 5; bnd call dword ptr [edx + 0x6a]; 
0x001876a5: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x0013f9ea: sbb cl, byte ptr [edi]; inc edx; ret 0xb60f; 
0x000b300f: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00173152: sbb cl, cl; stc; call dword ptr [eax - 0x18]; 
0x000d2e8e: sbb dh, bl; jmp 0xdd314b72; add al, 0x24; add esp, 0xc; ret; 
0x00194372: sbb dh, byte ptr [edx - 0xe]; call dword ptr [ebx - 0x18]; 
0x00194372: sbb dh, byte ptr [edx - 0xe]; call dword ptr [ebx - 0x18]; mov ebp, 0x81fffe92; ret; 
0x0009f055: sbb dh, byte ptr [esp + ebp*4 - 0x73]; test dword ptr [edi - 7], esp; call dword ptr [eax - 0x73]; 
0x000d21e9: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x0014192a: sbb dh, ch; jmp dword ptr [ebp - 0x5f]; 
0x0008e825: sbb dh, ch; push cs; add byte ptr [0x1a260b], al; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x001182c5: sbb dh, dh; ret 0x7540; 
0x0019f907: sbb dh, dh; ret 0xf0f; 
0x00152c38: sbb dl, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x000b2c28: sbb dl, cl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009a6fb: sbb dword ptr [bx + si], eax; mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x001023b6: sbb dword ptr [eax + 0x17247c], eax; jne 0x102460; call ecx; 
0x001255a6: sbb dword ptr [eax + 0x17c], edi; call dword ptr gs:[0x10]; 
0x000d3cdc: sbb dword ptr [eax + 0x5000003d], -0x73; sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x0015951c: sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x000d5214: sbb dword ptr [eax + 0x55], -7; call dword ptr [eax + 0x56]; 
0x0016e4d1: sbb dword ptr [eax + 0x5b000001], 0x5e; pop edi; ret; 
0x0014cae3: sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0016051f: sbb dword ptr [eax + 0x72], -7; call dword ptr [eax - 0x18]; 
0x0018cf4b: sbb dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017013c: sbb dword ptr [eax + ecx*8], -7; call dword ptr [edx + 0x6a]; 
0x0016d511: sbb dword ptr [eax + esi*2], -0xd; call dword ptr [edx - 0x73]; 
0x00104da8: sbb dword ptr [eax - 0x73], edx; xor dword ptr [edx], 0x58; stc; call dword ptr [eax - 0x18]; 
0x00104da8: sbb dword ptr [eax - 0x73], edx; xor dword ptr [edx], 0x58; stc; call dword ptr [eax - 0x18]; push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x00173151: sbb dword ptr [eax], -0x37; stc; call dword ptr [eax - 0x18]; 
0x0014975e: sbb dword ptr [eax], -0x3f; stc; call dword ptr [eax - 0x73]; 
0x00146526: sbb dword ptr [eax], -0x42; stc; call dword ptr [eax - 0x73]; 
0x000e3e18: sbb dword ptr [eax], -0x52; stc; call dword ptr [eax - 0x73]; 
0x00033d6b: sbb dword ptr [eax], -0x7d; stc; call dword ptr [esi + 0x50]; 
0x0014c9d3: sbb dword ptr [eax], 0x7f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0005d725: sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000715bc: sbb dword ptr [eax], eax; add byte ptr [ebp - 0x457af025], al; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x000542a5: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x000715c4: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x00163b6d: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0006ef76: sbb dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000993fc: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0009a6fc: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3bb8], 0; mov dword ptr [eax + 0x3bb4], 0; ret; 
0x0009a82d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x0009a9fd: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a86d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9a880; ret; 
0x0009765c: sbb dword ptr [eax], eax; mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3b84]; test eax, eax; jne 0x97677; ret; 
0x0009a80c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7ec: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0009a89c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0009aafc: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c14], edx; ret; 
0x000990cd: sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00099753: sbb dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b44e3: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00173e77: sbb dword ptr [ebp + 0x72], -7; call dword ptr [eax + 0x6a]; 
0x00024c01: sbb dword ptr [ebp - 0x1af66370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012b9cb: sbb dword ptr [ebp - 0x76ea8b37], eax; ret 0xeac1; 
0x0012bb07: sbb dword ptr [ebp - 0x76f38a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0012bb82: sbb dword ptr [ebp - 0x76f68a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0012c3cb: sbb dword ptr [ebp - 0x76f78a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0012bd76: sbb dword ptr [ebp - 0x76fa8a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0011488d: sbb dword ptr [ebx + 0x59], -7; call dword ptr [eax - 0x18]; 
0x0007a7b1: sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00096f06: sbb dword ptr [ebx + 0x5e], ebx; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3b88], ecx; ret; 
0x000f308c: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000522f4: sbb dword ptr [ebx + eax*4], eax; ret; 
0x00107bff: sbb dword ptr [ebx - 0x7cefdbbc], ecx; ret; 
0x0002ea59: sbb dword ptr [ebx - 0x7cf3dbac], ecx; ret 0x8301; 
0x00179090: sbb dword ptr [ebx], 0x76; stc; call dword ptr [ebp + 0x50]; 
0x0009bac2: sbb dword ptr [ebx], 0xe; add byte ptr [ecx + 0x19536ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0003010a: sbb dword ptr [ebx], edi; stc; call dword ptr [eax + 0x56]; 
0x000a5d68: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf4c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a3258: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6d98c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001334a8: sbb dword ptr [ecx + eax - 0x72ff0000], 0xf55fdc92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000522f1: sbb dword ptr [ecx - 0x7cfbe68c], ecx; ret; 
0x0009944a: sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000a989d: sbb dword ptr [ecx], ebp; ret; 
0x00171936: sbb dword ptr [ecx], edi; ret 0x1572; 
0x0008b242: sbb dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00092afd: sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000b4aaa: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0016c02c: sbb dword ptr [edi + ebp*4], -0xd; call dword ptr [eax - 0x73]; 
0x00171bf3: sbb dword ptr [edi], ebp; in al, dx; call dword ptr [eax - 0x73]; 
0x0013d681: sbb dword ptr [edi], ecx; inc ebx; ret 0xc589; 
0x000b467d: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001603d3: sbb dword ptr [edi], esi; std; dec dword ptr [ebp - 0x63b2b7a]; call dword ptr [eax - 0x73]; 
0x001059b4: sbb dword ptr [edx + 0x3c], -7; call dword ptr [eax - 0x18]; 
0x0011d423: sbb dword ptr [edx + 0x61], -7; call dword ptr [eax + 0x55]; 
0x0008cf61: sbb dword ptr [edx + 1], edi; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00096117: sbb dword ptr [edx + edx*2 - 0x5c9a001a], 0x50; add al, byte ptr [eax]; add byte ptr [ebp - 0x19af037d], cl; call dword ptr [ecx + 0x50]; 
0x001596c8: sbb dword ptr [edx - 0x72b00000], -0x7d; cwde; mov byte ptr [0x8d500000], al; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x0019e4b3: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00120e6c: sbb dword ptr [edx], edx; sub al, ch; aad 0xc7; add eax, 0xc0c68100; call dword ptr [eax]; 
0x001233ed: sbb dword ptr [esi + 0x63], -7; call dword ptr [eax + 0x56]; 
0x0004a903: sbb dword ptr [esi + edi*8 + 0x247c8bff], edx; cmp byte ptr [ebp - 0x678e379], cl; call dword ptr [eax - 0x73]; 
0x000b46e3: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009a9fc: sbb dword ptr fs:[eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x9aa10; ret; 
0x0009a86c: sbb dword ptr gs:[eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x9a880; ret; 
0x0009a89b: sbb dword ptr gs:[eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x374], edx; ret; 
0x0016998b: sbb eax, -1; add esp, 0xc; ret; 
0x000b9a50: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b14d5: sbb eax, -1; pop ebx; ret; 
0x000b0d66: sbb eax, -1; pop edi; pop ebx; ret; 
0x000bbc2d: sbb eax, -1; pop esi; pop ebx; ret; 
0x0011248d: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011137e: sbb eax, 0; pop ebx; pop esi; ret; 
0x000574ed: sbb eax, 0x24448b00; add al, 0x8d; xchg edx, eax; ret; 
0x0005d9fd: sbb eax, 0x26b85300; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000b4185: sbb eax, 0x30010bd; or al, 0x99; jmp ecx; 
0x000b3097: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e10a2: sbb eax, 0x5b04c483; pop esi; ret; 
0x00169ba6: sbb eax, 0x5b6cc483; pop esi; pop edi; pop ebp; ret; 
0x000b473a: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0011d1e1: sbb eax, 0x5c; stc; call dword ptr [eax + 0x55]; 
0x000b2cdf: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x00083ca3: sbb eax, 0x6a000001; add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0014ca5b: sbb eax, 0x6e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0007a918: sbb eax, 0x8100102d; ret; 
0x0005d718: sbb eax, 0x810011ff; ret; 
0x000822ff: sbb eax, 0x83000001; in al, dx; or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0002aec2: sbb eax, 0x83028b00; ret; 
0x001150b8: sbb eax, 0x8908ec83; ret; 
0x00026b9f: sbb eax, 0x893cd66b; ret; 
0x00107d8a: sbb eax, 0x8b056a57; jl 0x107db5; sbb byte ptr [ebp - 0x6a71779], cl; call dword ptr [eax - 0x73]; 
0x001645d2: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0002492a: sbb eax, 0x8d001156; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [edi + 0x57]; 
0x0018027a: sbb eax, 0x8d0cec83; inc ebx; movmskps ebp, xmm0; pop ecx; ret; 
0x0018b87e: sbb eax, 0xc381ffff; pop ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001903e2: sbb eax, 0xc801ca01; call 0x17d639; add ebx, 0x3eb2c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018c1c2: sbb eax, 0xc801ca01; call 0x17d639; add ebx, 0x4274c; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005d720: sbb eax, 0xec838b00; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000b4737: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x0018cd24: sbb eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e2477: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005e2db: sbb eax, dword ptr [ebx + 0x5e5b7cc4]; pop edi; pop ebp; ret; 
0x0019ca74: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x001707c4: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x000944bb: sbb eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007fea0: sbb eax, dword ptr [ecx + 0xa0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009a7bb: sbb eax, dword ptr [ecx + 0xb4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000920c4: sbb eax, dword ptr [ecx + 8]; inc eax; xor eax, eax; ret; 
0x0019dcc1: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x00088a1b: sbb eax, dword ptr [edx + ebx + 0x24448b00]; add al, 0x83; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x00178c1a: sbb eax, dword ptr [edx - 0x137cfff5]; adc al, 0x6a; add cl, byte ptr [ebp - 0x689d680]; call dword ptr [eax - 0x18]; 
0x00081a30: sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d36c: sbb eax, eax; add esp, 0x1c; ret; 
0x00186396: sbb eax, eax; add esp, 0x2c; ret; 
0x00025869: sbb eax, eax; add esp, 0xc; ret; 
0x0005d9d6: sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00089fbc: sbb eax, eax; and eax, 0x16; ret; 
0x00050733: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0016d4bb: sbb eax, eax; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x000506b1: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00096e9a: sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0012ac61: sbb eax, eax; ret; 
0x000bb97d: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x000bbc2b: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0016f328: sbb ebp, 0x74; stc; call dword ptr [eax - 0x73]; 
0x00132b46: sbb ebp, edi; jmp dword ptr [esi - 0x70]; 
0x000903dc: sbb ebx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x0004e401: sbb ebx, dword ptr [ecx - 2]; dec dword ptr [ebx - 0x72b7db84]; xchg dword ptr [edi + eax*4], esi; stc; call dword ptr [eax - 0x73]; 
0x000b4afa: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000f31bb: sbb ebx, ebp; ret; 
0x00042431: sbb ebx, edx; pop ebx; setb al; ret; 
0x0014d3ba: sbb ecx, 0x6d; stc; call dword ptr [eax - 0x18]; 
0x0014d54d: sbb ecx, 0x6d; stc; call dword ptr [eax - 0x73]; 
0x00166354: sbb ecx, 0x73; stc; call dword ptr [edx + 0x6a]; 
0x0002f44e: sbb ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0012a00f: sbb ecx, dword ptr [ebp - 0x6d47f6ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000b303a: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x00056bc9: sbb ecx, dword ptr [ebx - 0x76e3db8c]; ret 0xc801; 
0x000b303d: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0009bac3: sbb ecx, dword ptr [esi]; add byte ptr [ecx + 0x19536ec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0003451a: sbb ecx, ecx; pop ds; add byte ptr [ebx + 0x1c880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0014b30f: sbb ecx, edi; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0011137c: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x001491ce: sbb edi, 0x6c; stc; call dword ptr [eax - 0x18]; 
0x001494ee: sbb edi, 0x6c; stc; call dword ptr [eax - 0x18]; daa; test al, 0xee; jmp dword ptr [esi - 0x70]; 
0x001498ae: sbb edi, 0x6c; stc; call dword ptr [eax - 0x18]; movsb byte ptr es:[di], byte ptr [si]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014962e: sbb edi, 0x6c; stc; call dword ptr [eax - 0x18]; out 0xa6, eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0009a12b: sbb edi, dword ptr [eax + 0x106]; call dword ptr gs:[0x10]; 
0x0009a06a: sbb edi, dword ptr [eax + 0x107]; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0009a1a0: sbb edi, dword ptr [eax + 0x198]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f2c2c: sbb edi, dword ptr [eax + 0x1d]; call dword ptr gs:[0x10]; 
0x00136231: sbb edi, dword ptr [eax + 6]; call dword ptr gs:[0x10]; 
0x000bfb94: sbb edi, dword ptr [ecx]; ret; 
0x0013541a: sbb edi, dword ptr [edx - 0x7f74fff1]; rol byte ptr [eax], 0; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00132e09: sbb edi, ebp; jmp dword ptr [esi - 0x70]; 
0x00181f2a: sbb edi, ebx; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x650ab79]; call dword ptr [eax - 0x73]; 
0x000d21f4: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x00075e78: sbb edi, edx; cli; jmp dword ptr [esi - 0x70]; 
0x00171eff: sbb edi, esp; jmp dword ptr [esi - 0x70]; 
0x00073e07: sbb edx, dword ptr [eax - 0x73]; xchg ah, cl; mov cl, bh; call dword ptr [eax - 0x18]; 
0x0014cd32: sbb edx, dword ptr [eax - 0x73]; xchg byte ptr [eax], al; ret 0xfff9; 
0x0015dea3: sbb edx, dword ptr [eax - 0x73]; xchg eax, edx; jno 0x15dea3; call dword ptr [eax + 0x6a]; 
0x00058495: sbb edx, dword ptr [eax - 0x73]; xchg esp, ecx; mov cl, bh; call dword ptr [eax - 0x18]; 
0x0003a8ac: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x00137a08: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x000dad5e: sbb esi, 0x55; stc; call dword ptr [eax - 0x18]; 
0x00179091: sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x50]; 
0x0017792a: sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x56]; 
0x000a5e69: sbb esi, esi; inc dword ptr [eax - 0x6d72fd1b]; mov esp, 0xfffe786; inc esp; ret 0x66c3; 
0x0009d48c: sbb esp, -0x59; stc; call dword ptr [eax - 0x73]; 
0x0003e63c: sbb esp, -0x7c; stc; call dword ptr [eax - 0x18]; 
0x0003faf9: sbb esp, 0x17; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0009a82c: sbb word ptr [eax], ax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x9a840; ret; 
0x0009a80b: sbb word ptr [eax], ax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x338], edx; ret; 
0x0009a7eb: sbb word ptr [eax], ax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x33c], edx; ret; 
0x0003c22e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003c2d8: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0019eefe: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0002751a: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg bl, bl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x001590c0: scasb al, byte ptr es:[edi]; and al, 0x70; stc; call dword ptr [ebp - 0x73]; 
0x001911e7: scasb al, byte ptr es:[edi]; clc; call 0x17d639; add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901d7: scasb al, byte ptr es:[edi]; clc; call 0x17d639; add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f207: scasb al, byte ptr es:[edi]; clc; call 0x17d639; add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e031: scasb al, byte ptr es:[edi]; clc; call 0x17d639; add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bed1: scasb al, byte ptr es:[edi]; clc; call 0x17d639; add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f31: scasb al, byte ptr es:[edi]; clc; call 0x17d639; add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00078c13: scasb al, byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x000df3ea: scasb al, byte ptr es:[edi]; in al, 0xff; call dword ptr [esi + 0x51]; 
0x0014c830: scasb al, byte ptr es:[edi]; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0005cf5e: scasb al, byte ptr es:[edi]; jnp 0x5cf5e; call dword ptr [eax - 0x73]; 
0x00057f6e: scasb al, byte ptr es:[edi]; mov ebp, 0x868dfffd; pop eax; mov cl, bh; call dword ptr [eax - 0x73]; 
0x000e38ab: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00178cab: scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x00140a3e: scasb al, byte ptr es:[edi]; xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x0008df0c: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x000a3dd7: scasd eax, dword ptr es:[edi]; call 0xc24e4ddc; ret; 
0x00168b50: scasd eax, dword ptr es:[edi]; cld; jmp dword ptr [esi - 0x70]; 
0x001876cb: scasd eax, dword ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x00040b22: scasd eax, dword ptr es:[edi]; lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x20; call eax; 
0x0017713d: scasd eax, dword ptr es:[edi]; leave; sti; jmp dword ptr [esi - 0x70]; 
0x00040c10: scasd eax, dword ptr es:[edi]; mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000b4073: scasd eax, dword ptr es:[edi]; mov ebp, 0xc030010; xchg ecx, eax; jmp ecx; 
0x0010d9dd: scasd eax, dword ptr es:[edi]; push edi; int1; jmp dword ptr [ebp - 0x5f]; 
0x001021c4: scasd eax, dword ptr es:[edi]; push edi; stc; call dword ptr [eax - 0x18]; 
0x001021c4: scasd eax, dword ptr es:[edi]; push edi; stc; call dword ptr [eax - 0x18]; ret 0xf7ec; 
0x0007d5f7: scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00039e02: scasd eax, dword ptr es:[edi]; ret 0x7c8b; 
0x0007d282: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00040c01: scasd eax, dword ptr es:[edi]; ret; 
0x000506b0: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x000e9634: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax + 0x68]; 
0x000e85ae: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0008809b: scasd eax, dword ptr es:[edi]; stc; jmp dword ptr [esi - 0x70]; 
0x000886d8: setae al; ret; 
0x000423df: setb al; ret; 
0x000d6ff2: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000342eb: setbe al; ret; 
0x00101fd9: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x000962e3: sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00050465: sete al; add esp, 0xc; movzx eax, al; ret; 
0x0014d234: sete al; add esp, 0xc; ret; 
0x000962d1: sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x000f28f1: sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00080b8b: sete al; movzx eax, al; ret; 
0x000961b2: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x00144895: sete al; pop ebx; movzx eax, al; ret; 
0x0003cde4: sete al; ret; 
0x0017d7d5: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0012451d: setg al; pop esi; pop edi; ret; 
0x0010375c: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x000423c0: setle al; ret; 
0x00124ea9: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00167ba6: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00124eea: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000f48df: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x00166ffe: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00082f61: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00165eb7: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00167095: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0011c80b: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00151309: setne al; movzx eax, al; neg eax; ret; 
0x00088d4b: setne al; movzx eax, al; pop ebx; ret; 
0x0003cc7f: setne al; movzx eax, al; ret; 
0x0011f577: setne al; pop edi; movzx eax, al; ret; 
0x0011cdfb: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000f28ba: setne al; ret; 
0x000949e5: setne al; shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000924a7: setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0016641f: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00080b5f: setne dl; mov eax, edx; ret; 
0x001911e6: sfence; call 0x17d639; add ebx, 0x3dd2a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001901d6: sfence; call 0x17d639; add ebx, 0x3eb7a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f206: sfence; call 0x17d639; add ebx, 0x3f98a; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018e030: sfence; call 0x17d639; add ebx, 0x408e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018bed0: sfence; call 0x17d639; add ebx, 0x427c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189f30: sfence; call 0x17d639; add ebx, 0x444e0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a032c: shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000a9856: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000ba0e0: shl byte ptr [eax], 0xe8; push 0x35; or al, 0; add ecx, 0x105f0d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6de0: shl byte ptr [eax], 0xe8; push 0x68; or al, 0; add ecx, 0x10918d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013a2d7: shl byte ptr [ebx], 0x89; loope 0x13a265; ret 0x25; 
0x00131c21: shl byte ptr [ecx + edi], 0xd0; jae 0x131c30; cmp dword ptr [eax + 4], ecx; jne 0x131c20; mov eax, dword ptr [eax + 0x18]; ret; 
0x0018beda: shl byte ptr [edi], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014703a: shl byte ptr [edx + 0x4d8bfff5], cl; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x0014486c: shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00186873: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00199411: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000baf36: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0019a2ec: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0005060a: shl byte ptr [esi - 0x70], cl; nop; nop; add eax, dword ptr [esp]; ret; 
0x000426b1: shl byte ptr [esi - 0x7b], 0xd2; mov edx, 0x10; cmove eax, edx; ret; 
0x001a5f60: shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x00119be1: shl byte ptr [esi], 0x8b; xchg edx, eax; mov al, byte ptr [0x89000000]; add al, 0x11; mov eax, 0xffffffff; ret; 
0x000f4aba: shl dh, cl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0002f37c: shl dword ptr [0xfffff000], 0x29; ret 0xe183; 
0x000359fc: shl dword ptr [0xfffff000], 0x29; ret; 
0x00166b8f: shl dword ptr [ebp - 7], 1; call dword ptr [eax + 0x6a]; 
0x000ba712: shl dword ptr [ebx + 0x59], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b4d8d: shl dword ptr [ecx + esi*4 + 0xc030010], 0x99; jmp ecx; 
0x0019e6f5: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x0009f247: shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000bb0b5: shl dword ptr [ecx], 1; retf 0xd285; je 0xbb090; bsr ecx, edx; add eax, ecx; ret; 
0x000b2a1d: shl dword ptr [edx + edx*8 + 0xc030010], 0x91; jmp ecx; 
0x0010299b: shl dword ptr [edx + esi*8], 0xff; ret; 
0x000baf3e: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0019e6f1: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x00199ab5: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019a476: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x00199aa0: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0019a45c: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x00199a8b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00199a76: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0019a442: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x00199b42: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019a39c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000bab75: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0019a24c: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b41c1: shl eax, 0xbc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010280d: shl eax, 2; push eax; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x00137d41: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x000913b3: shl eax, 4; pop edi; pop ebp; ret; 
0x0017c986: shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x000949e8: shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0005cda8: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0003cbc6: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00041bf0: shl eax, cl; ret; 
0x0003cc77: shl eax, cl; sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x000d05c7: shl ebp, 0xff; dec dword ptr [ebx - 0x365363]; jmp dword ptr [ebp - 0x75]; 
0x00050e4f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0017d6ab: shl ebx, cl; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00140f88: shl ecx, 4; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x000924aa: shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00137e9d: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00092053: shl edx, 0x1c; and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00052120: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00052157: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00137ae2: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00137ec3: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00155f52: shr ah, cl; jmp dword ptr [ebp - 0x75]; 
0x00141efb: shr al, 0x9f; idiv edi; inc dword ptr [ebx - 0x7872f714]; out 0x38, eax; stc; call dword ptr [eax - 0x73]; 
0x000b419f: shr al, 0xac; xchg esp, eax; or al, 0; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b5f: shr al, 0xec; stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00127528: shr al, 1; ret 0xc5; 
0x000b2a3b: shr al, cl; adc byte ptr [esp + ecx + 0x7fc18100], ch; rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b4046: shr al, cl; add eax, 0x81000c96; rcl esp, 0xbd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba092: shr al, cl; mov ecx, 0x81000c35; rcr dword ptr [edi + ebx*2 + 0x10], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d92: shr al, cl; mov ecx, 0x81000c68; rcr esp, 0x91; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d34: shr al, cl; pop ss; imul ecx, dword ptr [eax + eax], 0x923ac181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba034: shr al, cl; pop ss; or al, 0; add ecx, 0x105fba; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba016: shr al, cl; xor eax, 0x81000c36; rcr eax, 0x5f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d16: shr al, cl; xor eax, 0x81000c69; rcr dword ptr [eax - 0x6e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2a16: shr al, cl; xor eax, 0x81000cac; shl dword ptr [edx + edx*8 + 0xc030010], 0x91; jmp ecx; 
0x00131cae: shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x001026ac: shr bl, 1; mov dh, 0x90; mov eax, dword ptr [ebp + 8]; test eax, eax; je 0x1025e7; call eax; 
0x000b6d7b: shr byte ptr [eax + 0xc], cl; add byte ptr [ecx + 0x1091f5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000d980a: shr byte ptr [eax - 0x2b7bf0e8], 1; add byte ptr [eax], al; add dh, dh; ret; 
0x00163a8a: shr byte ptr [eax], 0xff; jo 0x163aa3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000dc01b: shr byte ptr [eax], 1; ret; 
0x001a03a5: shr byte ptr [ecx - 0x40], 1; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000bad92: shr byte ptr [ecx], 0xc2; jbe 0xbadd0; add eax, edi; pop edi; ret; 
0x000bada5: shr byte ptr [ecx], 0xc2; jbe 0xbadd0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000badb5: shr byte ptr [ecx], 0xc2; jbe 0xbadd0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000badc5: shr byte ptr [ecx], 0xc2; jbe 0xbadd0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000a4e64: shr byte ptr [ecx], 1; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00136fcc: shr byte ptr [ecx], 1; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000fb819: shr byte ptr [ecx], 1; ret 0x6a52; 
0x0004772e: shr byte ptr [ecx], 1; ret 0x8d52; 
0x0012ad77: shr byte ptr [ecx], 1; ret 0xe801; 
0x000a264f: shr byte ptr [ecx], 1; ret 0xf001; 
0x000dbf64: shr byte ptr [ecx], 1; ret; 
0x0017e3fd: shr byte ptr [edx], 0x8d; xchg dword ptr [ecx], edx; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x00126f81: shr byte ptr [edx], 0x8d; xchg eax, eax; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00041c9a: shr byte ptr [esi], cl; lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0006722c: shr cl, 0xe2; sar bh, cl; call dword ptr [eax - 0x73]; 
0x00068cb2: shr cl, 1; ret 0xffa7; 
0x000f5585: shr cl, cl; retf 0xfffa; dec dword ptr [ebp - 0x6bd957d]; call dword ptr [edx + 0x52]; 
0x00146c27: shr dh, 1; dec dword ptr [ebp - 0x6407f7d]; call dword ptr [eax + 0x68]; 
0x001393ce: shr dword ptr [eax - 7], cl; call dword ptr [eax + 0x6a]; 
0x000b2b98: shr dword ptr [ecx + 0x30010d1], 0xc; cdq; jmp ecx; 
0x00153052: shr dword ptr [ecx], cl; ret; 
0x000b4072: shr dword ptr [edi + 0x30010bd], 0xc; xchg ecx, eax; jmp ecx; 
0x0018a974: shr dword ptr [edi + edi*8], 0xff; add ebx, 0x43d20; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba146: shr dword ptr [edi], 0x5f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4e72: shr dword ptr [edi], 0xb0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b7c: shr dword ptr [edx - 0x3e7efff4], 1; rcl cl, 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba207: shr dword ptr [esi + 0x5e], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008faf6: shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001a0338: shr eax, 0x18; ret; 
0x0010375f: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x00091f4e: shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003aede: shr eax, 0x1f; pop edi; ret; 
0x0003a57a: shr eax, 0x1f; ret; 
0x0003a560: shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00088a3c: shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1aa8], eax; ret; 
0x00131caf: shr eax, 0xe; and eax, 1; pop ebx; ret; 
0x0008b23f: shr eax, 1; je 0x8b25c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b75f: shr eax, 1; je 0x8b77c; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009497e: shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00137d12: shr eax, 1; ret; 
0x00050648: shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x50610; jmp eax; 
0x0008b4e4: shr eax, 3; je 0x8b518; mov eax, edi; call dword ptr gs:[0x10]; 
0x0013736f: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0009a850: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x368], eax; ret; 
0x001a0328: shr eax, 4; add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0008190a: shr eax, 4; and eax, 1; ret; 
0x0008192a: shr eax, 5; and eax, 1; ret; 
0x00138134: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0012b3a6: shr eax, cl; and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00125551: shr eax, cl; and eax, 3; ret; 
0x000d6d28: shr eax, cl; ret 0x5cd; 
0x00041cfc: shr eax, cl; ret; 
0x00171cc0: shr eax, cl; sub bl, byte ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x00040cf6: shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00035df1: shr ebx, cl; adc ecx, dword ptr [ebp - 0x7affd98c]; sal byte ptr [ebp + 0x2a], 0x83; ret; 
0x00051ddf: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a563: shr ecx, 0x10; or eax, ecx; ret; 
0x001037bb: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00103733: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000ba106: shr edi, 0x5e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013813d: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00137e32: shr edx, 0x18; movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0003981f: shr edx, 0x18; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x39808; ret; 
0x00041d69: shr edx, cl; and ecx, 0x20; cmovne eax, edx; cmovne edx, ebx; pop ebx; ret; 
0x0012bca2: shr edx, cl; and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x0006cd8a: shr esp, 0xff; jmp dword ptr [esi - 0x70]; 
0x0006cd8a: shr esp, 0xff; jmp dword ptr [esi - 0x70]; mov dword ptr [esp + 0x28], 1; jmp ebx; 
0x0011e96f: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x000889f7: sldt word ptr [0x1a843b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x27c], edx; ret; 
0x000889d7: sldt word ptr [0x1a845b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x278], edx; ret; 
0x000889b7: sldt word ptr [0x1a847b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x274], edx; ret; 
0x00088997: sldt word ptr [0x1a849b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x00086d87: sldt word ptr [0x1aa0ab]; mov eax, dword ptr [eax + 0xe4c]; ret; 
0x00141d01: sldt word ptr [eax]; add byte ptr [ebx + 0xc8b10c4], al; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x0010ac51: sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001488ab: sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x0011e94b: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x0019d9a4: sldt word ptr [eax]; jne 0x19d7a0; xor eax, eax; pop edi; ret; 
0x00060ab1: sldt word ptr [eax]; mov dword ptr [esp + 0x2c], 1; jmp ebx; 
0x0013732e: sldt word ptr [ebx + 0x74ff14ec]; and al, 0x1c; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00133afe: sldt word ptr [ebx - 0x7f72e714]; or byte ptr [edi - 7], ah; call dword ptr [eax - 0x18]; 
0x001325de: sldt word ptr [ebx - 0x7f72e714]; xlatb; stc; call dword ptr [eax - 0x18]; 
0x00088a17: sldt word ptr [ecx + 0x1a841bc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x00085d48: sldt word ptr [ecx + 0x1ab0eac3]; add byte ptr [ebx - 0x7c72eb14], al; pushfd; or ebp, esp; jmp dword ptr [ebp + 0x33]; 
0x000847e6: sldt word ptr [ecx + 0x1ac64cc6]; add byte ptr [ebx - 0x77], dl; ret; 
0x00081e68: sldt word ptr [ecx + 0x1aefcac6]; add byte ptr [ebx - 0x77], dl; ret; 
0x00079eb0: stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x00076803: stc; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x76816; push esi; call dword ptr [ebx + 0x1c]; 
0x000bc691: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0019abfd: stc; add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001994c9: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00151bfd: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000536c3: stc; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000577b7: stc; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0012372d: stc; add dword ptr [edi + 0x2f], edi; add esp, 8; pop ebx; ret; 
0x00090277: stc; add dword ptr [edi], ecx; test dword ptr [ebp + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x39]; 
0x0005232f: stc; add dword ptr [edi], ecx; xchg edx, eax; ret 0xff19; 
0x0018f211: stc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018f43c: stc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001038b2: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010372f: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00165b62: stc; add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0003d66f: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000c9169: stc; and byte ptr [edi], cl; mov ss, word ptr [esi - 0x77000000]; ret; 
0x0011ada1: stc; call dword ptr [eax + 0x50]; 
0x0013d6c0: stc; call dword ptr [eax + 0x51]; 
0x000234d0: stc; call dword ptr [eax + 0x52]; 
0x000351fe: stc; call dword ptr [eax + 0x53]; 
0x000f4fe8: stc; call dword ptr [eax + 0x55]; 
0x000300e3: stc; call dword ptr [eax + 0x56]; 
0x00046003: stc; call dword ptr [eax + 0x57]; 
0x000287a0: stc; call dword ptr [eax + 0x68]; 
0x00024867: stc; call dword ptr [eax + 0x6a]; 
0x0016b7b4: stc; call dword ptr [eax + 0x6a]; add al, ch; or byte ptr [ebp - 0x3b7c0010], 0x18; pop ebx; ret; 
0x00139374: stc; call dword ptr [eax + 0x6a]; add al, ch; ret 0xf3b1; 
0x00162725: stc; call dword ptr [eax + 0x6a]; or al, ch; and dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x00163345: stc; call dword ptr [eax + 0x6a]; pop es; call 0x14bb50; add esp, 0x1c; ret; 
0x001620e5: stc; call dword ptr [eax + 0x6a]; push es; call 0x14bb50; add esp, 0x1c; ret; 
0x000fe0c5: stc; call dword ptr [eax - 0x17]; 
0x0002488e: stc; call dword ptr [eax - 0x18]; 
0x000c3596: stc; call dword ptr [eax - 0x18]; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x0008e226: stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x000906b4: stc; call dword ptr [eax - 0x18]; cli; jmp dword ptr [esi - 0x70]; 
0x00073d96: stc; call dword ptr [eax - 0x18]; cmp bh, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000d6be0: stc; call dword ptr [eax - 0x18]; cmp cl, dl; cmc; jmp dword ptr [esi - 0x70]; 
0x00149771: stc; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00047971: stc; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x00149271: stc; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001494f1: stc; call dword ptr [eax - 0x18]; daa; test al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00073ce9: stc; call dword ptr [eax - 0x18]; das; add ah, bh; jmp dword ptr [esi - 0x70]; 
0x001098e9: stc; call dword ptr [eax - 0x18]; das; movsb byte ptr es:[edi], byte ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x000c00cc: stc; call dword ptr [eax - 0x18]; dec esp; cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00091839: stc; call dword ptr [eax - 0x18]; fbld tbyte ptr [edx + edi*8]; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xb073; 
0x0004792b: stc; call dword ptr [eax - 0x18]; in eax, dx; ret; 
0x0015d527: stc; call dword ptr [eax - 0x18]; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x001496d1: stc; call dword ptr [eax - 0x18]; inc edi; cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001491d1: stc; call dword ptr [eax - 0x18]; inc edi; stosd dword ptr es:[edi], eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015c4f6: stc; call dword ptr [eax - 0x18]; inc edx; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x00159534: stc; call dword ptr [eax - 0x18]; inc esp; or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00156b34: stc; call dword ptr [eax - 0x18]; inc esp; xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000579a1: stc; call dword ptr [eax - 0x18]; ja 0x5796a; std; jmp dword ptr [esi - 0x70]; 
0x000740a6: stc; call dword ptr [eax - 0x18]; jb 0x740a8; sti; jmp dword ptr [esi - 0x70]; 
0x0005849b: stc; call dword ptr [eax - 0x18]; jge 0x58459; std; jmp dword ptr [esi - 0x70]; 
0x001054a8: stc; call dword ptr [eax - 0x18]; jo 0x105496; bnd call dword ptr [ebp + 0x57]; 
0x00160b4f: stc; call dword ptr [eax - 0x18]; leave; xor ebp, ebp; jmp dword ptr [esi - 0x70]; 
0x0013d266: stc; call dword ptr [eax - 0x18]; mov dl, 0x6a; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0003225a: stc; call dword ptr [eax - 0x18]; mov esi, 0xf600001a; ret 0xf03; 
0x001498b1: stc; call dword ptr [eax - 0x18]; movsb byte ptr es:[di], byte ptr [si]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000c0473: stc; call dword ptr [eax - 0x18]; movsd dword ptr es:[edi], dword ptr [esi]; cmp bh, dh; jmp dword ptr [esi - 0x70]; 
0x00073e0d: stc; call dword ptr [eax - 0x18]; or edi, edi; sti; jmp dword ptr [esi - 0x70]; 
0x00149631: stc; call dword ptr [eax - 0x18]; out 0xa6, eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00149811: stc; call dword ptr [eax - 0x18]; pop es; movsd dword ptr es:[edi], dword ptr [esi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00149311: stc; call dword ptr [eax - 0x18]; pop es; stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014b87b: stc; call dword ptr [eax - 0x18]; popfd; test dh, ch; jmp dword ptr [esi - 0x70]; 
0x00104dae: stc; call dword ptr [eax - 0x18]; push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x00148831: stc; call dword ptr [eax - 0x18]; push edi; xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x00147a02: stc; call dword ptr [eax - 0x18]; push ss; ret; 
0x0015c5cc: stc; call dword ptr [eax - 0x18]; pushfd; fdiv st(6), st(0); jmp dword ptr [ebp - 0x75]; 
0x001021c6: stc; call dword ptr [eax - 0x18]; ret 0xf7ec; 
0x0005ce46: stc; call dword ptr [eax - 0x18]; ret 0xfd7c; 
0x00073455: stc; call dword ptr [eax - 0x18]; ret; 
0x0008f648: stc; call dword ptr [eax - 0x18]; rol byte ptr [esi - 6], 1; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x0015c1b6: stc; call dword ptr [eax - 0x18]; sbb bh, 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0008f991: stc; call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 6], eax; jmp dword ptr [esi - 0x70]; 
0x0015c0e4: stc; call dword ptr [eax - 0x18]; xchg esp, eax; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0011b9e4: stc; call dword ptr [eax - 0x18]; xor al, 0x83; int1; jmp dword ptr [esi - 0x70]; 
0x00104996: stc; call dword ptr [eax - 0x18]; xor bl, 0xf2; jmp dword ptr [esi - 0x70]; 
0x00091805: stc; call dword ptr [eax - 0x18]; xor esi, 0xfffffffe; jmp dword ptr [ebp - 0x39]; 
0x0011c874: stc; call dword ptr [eax - 0x39]; 
0x00025747: stc; call dword ptr [eax - 0x73]; 
0x0015d520: stc; call dword ptr [eax - 0x73]; and dword ptr [esi + 0x50fff971], 0xffffffe8; inc ecx; int 0xfe; jmp dword ptr [ebp - 0x75]; 
0x0008f66e: stc; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x000829a8: stc; call dword ptr [eax - 0x75]; 
0x000e8310: stc; call dword ptr [eax - 0x77]; 
0x00024836: stc; call dword ptr [eax - 1]; 
0x00179093: stc; call dword ptr [ebp + 0x50]; 
0x0005d2a4: stc; call dword ptr [ebp + 0x56]; 
0x0016dca3: stc; call dword ptr [ebp + 0x57]; 
0x0016a0ac: stc; call dword ptr [ebp + 0x6a]; 
0x001590c3: stc; call dword ptr [ebp - 0x73]; 
0x0012d48c: stc; call dword ptr [ebp - 1]; 
0x0005cf14: stc; call dword ptr [ebx + 0x50]; 
0x001245fa: stc; call dword ptr [ebx - 0x18]; 
0x0014af6b: stc; call dword ptr [ebx - 0x73]; 
0x00121d90: stc; call dword ptr [ebx - 1]; 
0x0003f15d: stc; call dword ptr [ecx + 0x50]; 
0x0011d2ec: stc; call dword ptr [ecx + 0x51]; 
0x00087a2d: stc; call dword ptr [ecx + 0x52]; 
0x0005df8f: stc; call dword ptr [ecx + 0x53]; 
0x00101c82: stc; call dword ptr [ecx + 0x6a]; 
0x0014fe73: stc; call dword ptr [ecx - 0x17]; 
0x001354da: stc; call dword ptr [ecx - 0x77]; 
0x0015b6b7: stc; call dword ptr [ecx - 1]; 
0x0003f29c: stc; call dword ptr [edi + 0x50]; 
0x0013ba87: stc; call dword ptr [edi + 0x52]; 
0x00178ac2: stc; call dword ptr [edi + 0x53]; 
0x0016b522: stc; call dword ptr [edi + 0x56]; 
0x00024932: stc; call dword ptr [edi + 0x57]; 
0x000500cd: stc; call dword ptr [edi + 0x6a]; 
0x00027f77: stc; call dword ptr [edi - 1]; 
0x00027b31: stc; call dword ptr [edx + 0x50]; 
0x000f558f: stc; call dword ptr [edx + 0x52]; 
0x0016615e: stc; call dword ptr [edx + 0x6a]; 
0x00139a2f: stc; call dword ptr [edx - 0x46]; 
0x000260fb: stc; call dword ptr [edx - 0x73]; 
0x00038247: stc; call dword ptr [edx - 0x77]; 
0x00033d6e: stc; call dword ptr [esi + 0x50]; 
0x00023437: stc; call dword ptr [esi + 0x53]; 
0x0017813e: stc; call dword ptr [esi + 0x57]; 
0x00045fd3: stc; call dword ptr [esi + 0x6a]; 
0x0005d1fe: stc; call dword ptr [esi - 0x77]; 
0x00033e21: stc; call dword ptr [esi - 1]; 
0x00097d5e: stc; call dword ptr gs:[0x10]; 
0x000c23a0: stc; clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00109a27: stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00088088: stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0010245b: stc; dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x0013470b: stc; dec dword ptr [ebp - 0x4417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0009d4cc: stc; dec dword ptr [ebp - 0x658237d]; call dword ptr [eax - 0x73]; 
0x0009f987: stc; dec dword ptr [ebp - 0x6587b79]; call dword ptr [eax - 0x73]; 
0x0009ff56: stc; dec dword ptr [ebp - 0x658bb7d]; call dword ptr [eax - 0x73]; 
0x0013966c: stc; dec dword ptr [ebp - 0x67cef67]; call dword ptr [eax + 0x53]; 
0x001395f1: stc; dec dword ptr [ebp - 0x67cef75]; call dword ptr [eax - 0x77]; 
0x001354d4: stc; dec dword ptr [ebp - 0x698707a]; call dword ptr [ecx - 0x77]; 
0x000fddd3: stc; dec dword ptr [ebp - 0x6a87d71]; call dword ptr [eax - 0x75]; 
0x000f2356: stc; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x000fe0bf: stc; dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x000c0c08: stc; dec dword ptr [ebx + 0x24448903]; cmp al, 0x89; ret 0xc483; 
0x000a01c9: stc; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x0009e7a7: stc; dec dword ptr [ebx - 0x72f7db8c]; xchg byte ptr [edi - 7], dh; call dword ptr [eax - 0x73]; 
0x00098b15: stc; dec dword ptr [ebx - 0x78727783]; js 0x98ab6; stc; call dword ptr [eax + 0x68]; 
0x00098ff5: stc; dec dword ptr [ebx - 0x78727783]; js 0x98f96; stc; call dword ptr [eax + 0x68]; 
0x0011ded7: stc; dec dword ptr [ecx + 0x1c938d16]; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000f2c4b: stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fdd62: stc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x0011d4c6: stc; dec dword ptr [ecx + 0x5c938d16]; mov esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0003f55a: stc; dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x00027262: stc; dec dword ptr [ecx - 0x48f0e7b0]; xchg edi, eax; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x00037a9e: stc; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x00027ee9: stc; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [edi + edi*2], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x0011db83: stc; dec dword ptr [ecx - 0x736c72ea]; test esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0003f344: stc; dec dword ptr [ecx - 0x76f7dbbc]; ret 0x77e9; 
0x0008e5cf: stc; dec dword ptr [ecx - 0x7872af05]; nop; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0013afb8: stc; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xe8c0; 
0x000399d4: stc; dec dword ptr [edi]; inc ebp; call 0x2b9c6; jmp dword ptr [esi - 0x70]; 
0x0014fd9d: stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0011a2b3: stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x001743f3: stc; idiv bl; jmp dword ptr [esi - 0x70]; 
0x0005ff14: stc; inc dword ptr [eax - 0x7af0ac06]; ret; 
0x0011f172: stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0003f434: stc; inc dword ptr [ebp - 0x277af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x000574f7: stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5748d; ret 0x40c7; 
0x0003f3f4: stc; inc dword ptr [ebp - 0x767af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x000f2c6d: stc; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00087e2e: stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00089f8c: stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00087a97: stc; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [eax + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00087a23: stc; inc dword ptr [ebx - 0x72aff314]; xor dword ptr [edi + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000a0936: stc; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [ecx + 0x68], -7; call dword ptr [eax + 0x6a]; 
0x000398fb: stc; inc dword ptr [ebx - 0x7c72f314]; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0008fa43: stc; inc dword ptr [ebx - 0x7c72f33c]; lodsb al, byte ptr [esi]; jmp 0x8fa32; call dword ptr [eax + 0x56]; 
0x000e5511: stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000e3a39: stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000f29f7: stc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00103ff3: stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00089807: stc; jmp dword ptr [ebp - 0x39]; 
0x0011f009: stc; jmp dword ptr [ebp - 0x5f]; 
0x0007787a: stc; jmp dword ptr [ebp - 0x75]; 
0x00120bc6: stc; jmp dword ptr [ecx]; 
0x001943d6: stc; jmp dword ptr [esi + 0xf]; 
0x0008809c: stc; jmp dword ptr [esi - 0x70]; 
0x0002726c: stc; jmp dword ptr [esi - 0x77]; 
0x0014b86f: stc; jmp ptr [eax + 0x12]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [edi + 0x6d], 0xf9; call dword ptr [eax - 0x18]; 
0x00030e4e: stc; jmp ptr [eax + 0x1a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edi - 7], ecx; call dword ptr [eax - 0x18]; 
0x000c33bc: stc; jmp ptr [eax + 0x23]; add eax, 0x8d500000; xchg byte ptr [edi + edi], bl; stc; call dword ptr [eax - 0x18]; 
0x000477ba: stc; jmp ptr [eax + 0x23]; add eax, 0x8d500000; xchg dword ptr [edi + edi], ebx; stc; call dword ptr [eax - 0x18]; 
0x0009c70d: stc; jmp ptr [eax + 0x2c]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x000c358a: stc; jmp ptr [eax + 0x4d]; add eax, 0x8d500000; xchg byte ptr [esi + eax*4 - 0x17af0007], cl; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x00028727: stc; jmp ptr [eax + 0x52]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x3a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00028d48: stc; jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x00029383: stc; jmp ptr [eax + 0x53]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x000c3402: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg ah, dl; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00047797: stc; jmp ptr [eax + 0x5f]; add eax, 0x8d500000; xchg esp, edx; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000c24e9: stc; jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg byte ptr [ebx + 0x3f], dl; stc; call dword ptr [eax - 0x18]; 
0x00047075: stc; jmp ptr [eax + 0x74]; add eax, 0x8d500000; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x0009ed39: stc; jmp ptr [eax + 1]; or eax, 0x8d500000; xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x001551af: stc; jmp ptr [eax - 0x11]; or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; ret; 
0x000976ef: stc; jmp ptr [eax - 0x22]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x000c346b: stc; jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg byte ptr [eax + 0x3f], ch; stc; call dword ptr [eax - 0x18]; 
0x000478d9: stc; jmp ptr [eax - 0x28]; add eax, 0x8d500000; xchg dword ptr [eax + 0x3f], ebp; stc; call dword ptr [eax - 0x18]; 
0x0008dfde: stc; jmp ptr [eax - 0x2a]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + edx*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x0008f473: stc; jmp ptr [eax - 0x34]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + edx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x000cb897: stc; jmp ptr [eax - 0x3f]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x54], -7; call dword ptr [eax - 0x18]; 
0x00073449: stc; jmp ptr [eax - 0x71]; or eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + eax*2 - 0x17af0007], edx; ret; 
0x000be0b8: stc; jmp ptr [eax - 0x75]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; or byte ptr [ecx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x000d61ab: stc; jmp ptr [eax - 0x75]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x000be0db: stc; jmp ptr [eax - 0x76]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp byte ptr [edx + 0x54], 0xf9; call dword ptr [eax - 0x18]; 
0x00028ed7: stc; jmp ptr [eax - 0x79]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00029439: stc; jmp ptr [eax - 0x79]; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00090ebf: stc; jmp ptr [eax - 0x7a]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [esp + edx*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x001603e2: stc; jmp ptr [eax - 0x7f]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x0015b6b5: stc; jo 0x15b6b1; call dword ptr [ecx - 1]; 
0x000f9e73: stc; lcall 0x5e5b, 0xf889ffff; pop edi; ret; 
0x00101f8b: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000e00c0: stc; mov ebp, eax; mov esi, dword ptr [esp + 8]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dffef: stc; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00186854: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00117f39: stc; or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000bfd31: stc; pop edi; cmovg eax, edx; ret; 
0x0019d8a2: stc; pop edi; ret; 
0x00060b20: stc; pop edx; jbe 0x61b9f; jmp eax; 
0x0006c136: stc; pop edx; jbe 0x6cefd; mov dword ptr [esp + 0x14], ebp; jmp ebx; 
0x000bc7be: stc; pop esi; ret; 
0x001757c2: stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000a1507: stc; std; jmp dword ptr [esi - 0x70]; 
0x0019ca71: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000d6fd7: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xd6fe8; mov eax, edx; ret; 
0x000a6a2e: stc; xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x00197fb6: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00192eb2: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0019ae0a: std; add al, 0x76; ret; 
0x0005a838: std; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; mov bh, cl; call dword ptr [eax - 0x18]; 
0x0019f089: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000f2688: std; add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x0019d1df: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0008c59f: std; add dword ptr [eax], eax; add dh, dh; ret; 
0x001939ad: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0005ce4c: std; call dword ptr [eax - 0x73]; 
0x0005ceb6: std; call dword ptr [ebx + 0x50]; 
0x001042eb: std; call dword ptr [ecx + 0x6a]; 
0x000dd3b7: std; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x001603d5: std; dec dword ptr [ebp - 0x63b2b7a]; call dword ptr [eax - 0x73]; 
0x00057f70: std; dec dword ptr [ebp - 0x677a77a]; call dword ptr [eax - 0x73]; 
0x00056737: std; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000566a3: std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000567a0: std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x6790779]; call dword ptr [eax - 0x73]; 
0x0005a78d: std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x0005d29b: std; dec dword ptr [ecx - 0x7c72dbfc]; xchg edx, eax; je 0x5d29e; call dword ptr [ebp + 0x56]; 
0x0003a719: std; fstp st(1); ret; 
0x000587fe: std; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0005855e: std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000e7e01: std; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x00138c27: std; jmp dword ptr [ebp - 0x5f]; 
0x000441af: std; jmp dword ptr [esi - 0x70]; 
0x0005d10b: std; jmp ptr [ecx]; ret; 
0x0016970f: std; mov bl, 0xec; call dword ptr [eax - 0x73]; 
0x00186858: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018baa3: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00199c45: std; mov eax, 0; jne 0x19a506; pop ebx; ret; 
0x0019cc9b: std; mov eax, 0; jne 0x19cd70; pop ebx; ret; 
0x000b42ff: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008c95c: std; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0012495d: std; out dx, eax; jmp ptr [ecx]; fidivr dword ptr [ecx]; ret 0x820f; 
0x0019d8d2: std; pop edi; ret; 
0x000ba179: std; pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b45: std; rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0005d10a: std; std; jmp ptr [ecx]; ret; 
0x0013638a: sti; adc al, 0xf; xchg esp, eax; ret; 
0x000dcbb4: sti; add ch, byte ptr [ecx]; ret; 
0x00030368: sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x001373b9: sti; add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000c5a12: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xef39; 
0x00049fee: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xf539; 
0x001251d3: sti; call 0x17d63d; add edx, 0x10bc5b; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000993f3: sti; call 0x17d641; add eax, 0x197a3b; mov dword ptr [eax + 0x3bb0], 0; ret; 
0x0008e823: sti; call 0x17d641; add eax, 0x1a260b; mov eax, dword ptr [eax + 0x3ad4]; ret; 
0x0003cf13: sti; call 0x17d641; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x0003cef3: sti; call 0x17d641; add eax, 0x1f3f3b; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x00034533: sti; call 0x17d641; add eax, 0x1fc8fb; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x0002f473: sti; call 0x17d641; add eax, 0x2019bb; mov eax, dword ptr [eax + 0x10c0]; ret; 
0x00026073: sti; call 0x17d641; add eax, 0x20adbb; mov eax, dword ptr [eax + 0x109c]; ret; 
0x00026053: sti; call 0x17d641; add eax, 0x20addb; mov eax, dword ptr [eax + 0x1098]; ret; 
0x00025563: sti; call 0x17d641; add eax, 0x20b8cb; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024ee3: sti; call 0x17d641; add eax, 0x20bf4b; lea eax, [eax - 0x681f0]; ret; 
0x00024ec3: sti; call 0x17d641; add eax, 0x20bf6b; lea eax, [eax - 0x681e8]; ret; 
0x00135413: sti; call 0x17d641; add eax, 0xfba1b; mov eax, dword ptr [eax + 0xc0]; add eax, dword ptr gs:[0]; ret; 
0x0014865f: sti; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0008b3e5: sti; call dword ptr gs:[0x10]; 
0x00138cd3: sti; cli; jmp dword ptr [esi - 0x3f]; 
0x00138cd3: sti; cli; jmp dword ptr [esi - 0x3f]; ret; 
0x000e89d7: sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007e05e: sti; dec dword ptr [ebp - 0x66df37a]; call dword ptr [eax - 0x73]; 
0x0017e03a: sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00183aab: sti; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x6508b79]; call dword ptr [eax - 0x73]; 
0x00181f2b: sti; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x650ab79]; call dword ptr [eax - 0x73]; 
0x001766c3: sti; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x6367f7a]; call dword ptr [eax - 0x73]; 
0x000a1500: sti; dec dword ptr [ecx - 0x7917dbe4]; stc; std; jmp dword ptr [esi - 0x70]; 
0x000cd017: sti; dec dword ptr [edi]; inc esp; fmul dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0012ee21: sti; dec esi; lock dec dword ptr [ebx - 0x72dbdb84]; xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0011aae1: sti; fcomi st(6); dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x001346d1: sti; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000dfd23: sti; fimul dword ptr [edi]; inc ebp; ret 0x548b; 
0x0006af5b: sti; inc dword ptr [ebx + 0x148b10c4]; and al, 0x89; ret; 
0x00133615: sti; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x001028fb: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x00073d9c: sti; jmp dword ptr [esi - 0x70]; 
0x00186814: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008ac20: sti; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009106a: sti; mov dword ptr [edi + 4], edx; xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x00189938: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b938: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00096283: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00096283: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00085e43: sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00085693: sti; mov eax, 0xffffffff; ret; 
0x00163ac3: sti; mov eax, 1; ret; 
0x00165d33: sti; mov eax, 2; ret; 
0x00088823: sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003b993: sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00186153: sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00171cd3: sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00137863: sti; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x000818f3: sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000342d3: sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00135433: sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00093b23: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0008acb3: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00147f13: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x00171d13: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00086db3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0017d1f3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0017d213: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0017d2a3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0017d293: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0017d223: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00097fe3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00118a83: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00080bc3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00080b73: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e1653: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00081903: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00081923: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00171cf3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0010abb3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x0017d203: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008a793: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x00103923: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00086a43: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0017d1b3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00030f63: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00086dc3: sti; mov eax, dword ptr [esp + 4]; ret; 
0x00084ad3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00080b83: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x00080ba3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0008e1c3: sti; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00034473: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034493: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00093ba3: sti; mov eax, dword ptr gs:[8]; ret; 
0x0008ebe3: sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00081c29: sti; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000902cf: sti; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000a2843: sti; mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x00171913: sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003d683: sti; mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0008a993: sti; mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x8a9b0; ret; 
0x000b41a7: sti; mov esp, 0xc030010; cdq; jmp ecx; 
0x00135443: sti; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00189987: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018b977: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00092a63: sti; nop; xor eax, eax; ret; 
0x000f48a6: sti; or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000643d7: sti; or dh, byte ptr [edi + ecx*8 - 0x7d]; mov ebp, 0xfffffa70; dec dword ptr [edi]; xchg ebp, eax; ret 0x7ce9; 
0x0011ad83: sti; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x0019d8c2: sti; pop edi; ret; 
0x00104dc3: sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00136163: sti; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d58e1: sti; ret 0xfffa; 
0x00024c33: sti; ret; 
0x0014693c: sti; sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x0015eda3: sti; sub esp, 0x18; push 0; call 0x14bc20; add esp, 0x1c; ret; 
0x0003cce3: sti; sub esp, 0x18; push 0; call 0x3c570; add esp, 0x1c; ret; 
0x00162e03: sti; sub esp, 0x18; push 0xa; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f223: sti; sub esp, 0x18; push 1; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f593: sti; sub esp, 0x18; push 2; call 0x14bc20; add esp, 0x1c; ret; 
0x00160433: sti; sub esp, 0x18; push 3; call 0x14bc20; add esp, 0x1c; ret; 
0x00161713: sti; sub esp, 0x18; push 4; call 0x14bc20; add esp, 0x1c; ret; 
0x00161d63: sti; sub esp, 0x18; push 5; call 0x14bc20; add esp, 0x1c; ret; 
0x00162103: sti; sub esp, 0x18; push 6; call 0x14bc20; add esp, 0x1c; ret; 
0x00163363: sti; sub esp, 0x18; push 7; call 0x14bc20; add esp, 0x1c; ret; 
0x00162743: sti; sub esp, 0x18; push 8; call 0x14bc20; add esp, 0x1c; ret; 
0x00162b33: sti; sub esp, 0x18; push 9; call 0x14bc20; add esp, 0x1c; ret; 
0x000f9ef1: sti; test al, 0xff; dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x000a6a8d: sti; xor byte ptr [edi], cl; xchg esp, eax; ret 0xb60f; 
0x0008b1d0: sti; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000342e3: sti; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00085d93: sti; xor eax, eax; ret; 
0x0010b015: stosb byte ptr es:[di], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00057688: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017c927: stosb byte ptr es:[edi], al; hlt; call dword ptr [eax - 0x18]; 
0x0016a074: stosb byte ptr es:[edi], al; in al, dx; call dword ptr [eax - 0x73]; 
0x000f2297: stosb byte ptr es:[edi], al; mov bl, 8; add byte ptr [ecx + 0x13eb99c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000bbdbc: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b2c23: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d11a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bfe: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bde: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bc1: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d17c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b94: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d1a9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b7d: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d1c0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2b62: stosb byte ptr es:[edi], al; or al, 0; add ecx, 0x10d1db; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011d2e4: stosb byte ptr es:[edi], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6a0d57d], cl; call dword ptr [ecx + 0x51]; 
0x00149276: stosb byte ptr es:[edi], al; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0010860f: stosb byte ptr es:[edi], al; pop eax; stc; call dword ptr [eax - 0x18]; 
0x0011a562: stosb byte ptr es:[edi], al; sahf; cmc; jmp dword ptr [ebp - 0x5f]; 
0x000be052: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x000bd751: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00159048: stosb byte ptr es:[edi], al; std; jmp dword ptr [esi - 0x70]; 
0x000579c8: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a2992: stosd dword ptr es:[edi], eax; call 0xc24e3997; ret; 
0x001879eb: stosd dword ptr es:[edi], eax; cli; jmp dword ptr [esi - 0x70]; 
0x001966d2: stosd dword ptr es:[edi], eax; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x85494]; sub eax, ecx; pop ebx; ret; 
0x00198ee6: stosd dword ptr es:[edi], eax; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001966d9: stosd dword ptr es:[edi], eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x001485fa: stosd dword ptr es:[edi], eax; in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00194403: stosd dword ptr es:[edi], eax; jl 0x1943d6; stc; jmp dword ptr [esi + 0xf]; 
0x00194540: stosd dword ptr es:[edi], eax; jl 0x194513; stc; jmp dword ptr [esi + 0xf]; 
0x001945c5: stosd dword ptr es:[edi], eax; jl 0x194598; stc; jmp dword ptr [esi + 0xf]; 
0x00194655: stosd dword ptr es:[edi], eax; jl 0x194628; stc; jmp dword ptr [esi + 0xf]; 
0x00194708: stosd dword ptr es:[edi], eax; jl 0x1946db; stc; jmp dword ptr [esi + 0xf]; 
0x00194798: stosd dword ptr es:[edi], eax; jl 0x19476b; stc; jmp dword ptr [esi + 0xf]; 
0x00194875: stosd dword ptr es:[edi], eax; jl 0x194848; stc; jmp dword ptr [esi + 0xf]; 
0x00194928: stosd dword ptr es:[edi], eax; jl 0x1948fb; stc; jmp dword ptr [esi + 0xf]; 
0x001949b8: stosd dword ptr es:[edi], eax; jl 0x19498b; stc; jmp dword ptr [esi + 0xf]; 
0x00194a95: stosd dword ptr es:[edi], eax; jl 0x194a68; stc; jmp dword ptr [esi + 0xf]; 
0x00194b48: stosd dword ptr es:[edi], eax; jl 0x194b1b; stc; jmp dword ptr [esi + 0xf]; 
0x00194bd8: stosd dword ptr es:[edi], eax; jl 0x194bab; stc; jmp dword ptr [esi + 0xf]; 
0x00194cb5: stosd dword ptr es:[edi], eax; jl 0x194c88; stc; jmp dword ptr [esi + 0xf]; 
0x00194d68: stosd dword ptr es:[edi], eax; jl 0x194d3b; stc; jmp dword ptr [esi + 0xf]; 
0x00194df8: stosd dword ptr es:[edi], eax; jl 0x194dcb; stc; jmp dword ptr [esi + 0xf]; 
0x00194ed5: stosd dword ptr es:[edi], eax; jl 0x194ea8; stc; jmp dword ptr [esi + 0xf]; 
0x00194f88: stosd dword ptr es:[edi], eax; jl 0x194f5b; stc; jmp dword ptr [esi + 0xf]; 
0x00195018: stosd dword ptr es:[edi], eax; jl 0x194feb; stc; jmp dword ptr [esi + 0xf]; 
0x001950f5: stosd dword ptr es:[edi], eax; jl 0x1950c8; stc; jmp dword ptr [esi + 0xf]; 
0x001951a8: stosd dword ptr es:[edi], eax; jl 0x19517b; stc; jmp dword ptr [esi + 0xf]; 
0x00195238: stosd dword ptr es:[edi], eax; jl 0x19520b; stc; jmp dword ptr [esi + 0xf]; 
0x00195315: stosd dword ptr es:[edi], eax; jl 0x1952e8; stc; jmp dword ptr [esi + 0xf]; 
0x001953c8: stosd dword ptr es:[edi], eax; jl 0x19539b; stc; jmp dword ptr [esi + 0xf]; 
0x00195458: stosd dword ptr es:[edi], eax; jl 0x19542b; stc; jmp dword ptr [esi + 0xf]; 
0x00195545: stosd dword ptr es:[edi], eax; jl 0x195518; stc; jmp dword ptr [esi + 0xf]; 
0x001955f8: stosd dword ptr es:[edi], eax; jl 0x1955cb; stc; jmp dword ptr [esi + 0xf]; 
0x00195688: stosd dword ptr es:[edi], eax; jl 0x19565b; stc; jmp dword ptr [esi + 0xf]; 
0x00195775: stosd dword ptr es:[edi], eax; jl 0x195748; stc; jmp dword ptr [esi + 0xf]; 
0x00195828: stosd dword ptr es:[edi], eax; jl 0x1957fb; stc; jmp dword ptr [esi + 0xf]; 
0x001958b8: stosd dword ptr es:[edi], eax; jl 0x19588b; stc; jmp dword ptr [esi + 0xf]; 
0x00195995: stosd dword ptr es:[edi], eax; jl 0x195968; stc; jmp dword ptr [esi + 0xf]; 
0x00195a48: stosd dword ptr es:[edi], eax; jl 0x195a1b; stc; jmp dword ptr [esi + 0xf]; 
0x00195ad8: stosd dword ptr es:[edi], eax; jl 0x195aab; stc; jmp dword ptr [esi + 0xf]; 
0x00195bb5: stosd dword ptr es:[edi], eax; jl 0x195b88; stc; jmp dword ptr [esi + 0xf]; 
0x00195c68: stosd dword ptr es:[edi], eax; jl 0x195c3b; stc; jmp dword ptr [esi + 0xf]; 
0x00195cf8: stosd dword ptr es:[edi], eax; jl 0x195ccb; stc; jmp dword ptr [esi + 0xf]; 
0x00195dd5: stosd dword ptr es:[edi], eax; jl 0x195da8; stc; jmp dword ptr [esi + 0xf]; 
0x00195e88: stosd dword ptr es:[edi], eax; jl 0x195e5b; stc; jmp dword ptr [esi + 0xf]; 
0x00195f18: stosd dword ptr es:[edi], eax; jl 0x195eeb; stc; jmp dword ptr [esi + 0xf]; 
0x00195ff5: stosd dword ptr es:[edi], eax; jl 0x195fc8; stc; jmp dword ptr [esi + 0xf]; 
0x001960a8: stosd dword ptr es:[edi], eax; jl 0x19607b; stc; jmp dword ptr [esi + 0xf]; 
0x00196138: stosd dword ptr es:[edi], eax; jl 0x19610b; stc; jmp dword ptr [esi + 0xf]; 
0x00196215: stosd dword ptr es:[edi], eax; jl 0x1961e8; stc; jmp dword ptr [esi + 0xf]; 
0x001962c8: stosd dword ptr es:[edi], eax; jl 0x19629b; stc; jmp dword ptr [esi + 0xf]; 
0x00196358: stosd dword ptr es:[edi], eax; jl 0x19632b; stc; jmp dword ptr [esi + 0xf]; 
0x00196435: stosd dword ptr es:[edi], eax; jl 0x196408; stc; jmp dword ptr [esi + 0xf]; 
0x001964e8: stosd dword ptr es:[edi], eax; jl 0x1964bb; stc; jmp dword ptr [esi + 0xf]; 
0x00196578: stosd dword ptr es:[edi], eax; jl 0x19654b; stc; jmp dword ptr [esi + 0xf]; 
0x0019663b: stosd dword ptr es:[edi], eax; jl 0x19660e; stc; jmp dword ptr [esi + 0xf]; 
0x00196921: stosd dword ptr es:[edi], eax; jl 0x1968f4; stc; jmp dword ptr [esi + 0xf]; 
0x00196a70: stosd dword ptr es:[edi], eax; jl 0x196a43; stc; jmp dword ptr [esi + 0xf]; 
0x00196b05: stosd dword ptr es:[edi], eax; jl 0x196ad8; stc; jmp dword ptr [esi + 0xf]; 
0x00196ba5: stosd dword ptr es:[edi], eax; jl 0x196b78; stc; jmp dword ptr [esi + 0xf]; 
0x00196c68: stosd dword ptr es:[edi], eax; jl 0x196c3b; stc; jmp dword ptr [esi + 0xf]; 
0x00196d04: stosd dword ptr es:[edi], eax; jl 0x196cd7; stc; jmp dword ptr [esi + 0xf]; 
0x00196df5: stosd dword ptr es:[edi], eax; jl 0x196dc8; stc; jmp dword ptr [esi + 0xf]; 
0x00196eb8: stosd dword ptr es:[edi], eax; jl 0x196e8b; stc; jmp dword ptr [esi + 0xf]; 
0x00196f54: stosd dword ptr es:[edi], eax; jl 0x196f27; stc; jmp dword ptr [esi + 0xf]; 
0x00197045: stosd dword ptr es:[edi], eax; jl 0x197018; stc; jmp dword ptr [esi + 0xf]; 
0x00197108: stosd dword ptr es:[edi], eax; jl 0x1970db; stc; jmp dword ptr [esi + 0xf]; 
0x001971a4: stosd dword ptr es:[edi], eax; jl 0x197177; stc; jmp dword ptr [esi + 0xf]; 
0x00197295: stosd dword ptr es:[edi], eax; jl 0x197268; stc; jmp dword ptr [esi + 0xf]; 
0x00197358: stosd dword ptr es:[edi], eax; jl 0x19732b; stc; jmp dword ptr [esi + 0xf]; 
0x001973f4: stosd dword ptr es:[edi], eax; jl 0x1973c7; stc; jmp dword ptr [esi + 0xf]; 
0x001974e5: stosd dword ptr es:[edi], eax; jl 0x1974b8; stc; jmp dword ptr [esi + 0xf]; 
0x001975a8: stosd dword ptr es:[edi], eax; jl 0x19757b; stc; jmp dword ptr [esi + 0xf]; 
0x00197644: stosd dword ptr es:[edi], eax; jl 0x197617; stc; jmp dword ptr [esi + 0xf]; 
0x00197735: stosd dword ptr es:[edi], eax; jl 0x197708; stc; jmp dword ptr [esi + 0xf]; 
0x001977f8: stosd dword ptr es:[edi], eax; jl 0x1977cb; stc; jmp dword ptr [esi + 0xf]; 
0x00197894: stosd dword ptr es:[edi], eax; jl 0x197867; stc; jmp dword ptr [esi + 0xf]; 
0x00197985: stosd dword ptr es:[edi], eax; jl 0x197958; stc; jmp dword ptr [esi + 0xf]; 
0x00197a48: stosd dword ptr es:[edi], eax; jl 0x197a1b; stc; jmp dword ptr [esi + 0xf]; 
0x00197ae4: stosd dword ptr es:[edi], eax; jl 0x197ab7; stc; jmp dword ptr [esi + 0xf]; 
0x00197bd5: stosd dword ptr es:[edi], eax; jl 0x197ba8; stc; jmp dword ptr [esi + 0xf]; 
0x00197c98: stosd dword ptr es:[edi], eax; jl 0x197c6b; stc; jmp dword ptr [esi + 0xf]; 
0x00197d34: stosd dword ptr es:[edi], eax; jl 0x197d07; stc; jmp dword ptr [esi + 0xf]; 
0x00197e25: stosd dword ptr es:[edi], eax; jl 0x197df8; stc; jmp dword ptr [esi + 0xf]; 
0x00197ee8: stosd dword ptr es:[edi], eax; jl 0x197ebb; stc; jmp dword ptr [esi + 0xf]; 
0x00197f84: stosd dword ptr es:[edi], eax; jl 0x197f57; stc; jmp dword ptr [esi + 0xf]; 
0x00198075: stosd dword ptr es:[edi], eax; jl 0x198048; stc; jmp dword ptr [esi + 0xf]; 
0x00198138: stosd dword ptr es:[edi], eax; jl 0x19810b; stc; jmp dword ptr [esi + 0xf]; 
0x001981d4: stosd dword ptr es:[edi], eax; jl 0x1981a7; stc; jmp dword ptr [esi + 0xf]; 
0x001982c5: stosd dword ptr es:[edi], eax; jl 0x198298; stc; jmp dword ptr [esi + 0xf]; 
0x00198388: stosd dword ptr es:[edi], eax; jl 0x19835b; stc; jmp dword ptr [esi + 0xf]; 
0x00198424: stosd dword ptr es:[edi], eax; jl 0x1983f7; stc; jmp dword ptr [esi + 0xf]; 
0x00198515: stosd dword ptr es:[edi], eax; jl 0x1984e8; stc; jmp dword ptr [esi + 0xf]; 
0x001985d8: stosd dword ptr es:[edi], eax; jl 0x1985ab; stc; jmp dword ptr [esi + 0xf]; 
0x00198674: stosd dword ptr es:[edi], eax; jl 0x198647; stc; jmp dword ptr [esi + 0xf]; 
0x00198765: stosd dword ptr es:[edi], eax; jl 0x198738; stc; jmp dword ptr [esi + 0xf]; 
0x00198828: stosd dword ptr es:[edi], eax; jl 0x1987fb; stc; jmp dword ptr [esi + 0xf]; 
0x001988c4: stosd dword ptr es:[edi], eax; jl 0x198897; stc; jmp dword ptr [esi + 0xf]; 
0x001989b5: stosd dword ptr es:[edi], eax; jl 0x198988; stc; jmp dword ptr [esi + 0xf]; 
0x00198a78: stosd dword ptr es:[edi], eax; jl 0x198a4b; stc; jmp dword ptr [esi + 0xf]; 
0x00198b14: stosd dword ptr es:[edi], eax; jl 0x198ae7; stc; jmp dword ptr [esi + 0xf]; 
0x00198c05: stosd dword ptr es:[edi], eax; jl 0x198bd8; stc; jmp dword ptr [esi + 0xf]; 
0x00198cc8: stosd dword ptr es:[edi], eax; jl 0x198c9b; stc; jmp dword ptr [esi + 0xf]; 
0x00198d64: stosd dword ptr es:[edi], eax; jl 0x198d37; stc; jmp dword ptr [esi + 0xf]; 
0x00198e3b: stosd dword ptr es:[edi], eax; jl 0x198e0e; stc; jmp dword ptr [esi + 0xf]; 
0x0019a5ed: stosd dword ptr es:[edi], eax; jl 0x19a5c0; stc; jmp dword ptr [esi + 0xf]; 
0x0019a7ed: stosd dword ptr es:[edi], eax; jl 0x19a7c0; stc; jmp dword ptr [esi + 0xf]; 
0x0019aafa: stosd dword ptr es:[edi], eax; jl 0x19aacd; stc; jmp dword ptr [esi + 0xf]; 
0x0019ad4b: stosd dword ptr es:[edi], eax; jl 0x19ad1e; stc; jmp dword ptr [esi + 0xf]; 
0x000e550e: stosd dword ptr es:[edi], eax; js 0xe5512; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00086d8a: stosd dword ptr es:[edi], eax; mov al, byte ptr [0x808b001a]; dec esp; push cs; add byte ptr [eax], al; ret; 
0x000bbdb8: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00148804: stosd dword ptr es:[edi], eax; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000b2b22: stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2b40: stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10d1fd; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2a5e: stosd dword ptr es:[edi], eax; or al, 0; add ecx, 0x10d25f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001491d6: stosd dword ptr es:[edi], eax; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00103737: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x001943db: stosd dword ptr es:[edi], eax; pop esp; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x000d6bde: stosd dword ptr es:[edi], eax; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00177929: stosd dword ptr es:[edi], eax; sbb esi, dword ptr [esi - 7]; call dword ptr [ebp + 0x56]; 
0x000bf9bb: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x000c00cb: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; dec esp; cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x000c0048: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000bf258: stosd dword ptr es:[edi], eax; stc; call dword ptr [edx - 0x73]; 
0x00074f6a: stosd dword ptr es:[edi], eax; sub dh, ah; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0013541c: str word ptr [ebx + 0xc080]; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00047a79: str word ptr [ecx]; ret 0x9d74; 
0x000c3671: str word ptr [ecx]; ret 0x9e74; 
0x00142533: str word ptr [edi]; test dword ptr [ebp - 0x7c000003], esi; ret; 
0x00046000: sub ah, 0x3e; stc; call dword ptr [eax + 0x57]; 
0x0015a7a7: sub ah, 0x96; bnd call dword ptr [eax - 1]; 
0x000a5eab: sub ah, 0xa2; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000bc957: sub ah, 1; add byte ptr [eax], al; ret; 
0x001522a6: sub ah, al; stc; call dword ptr [eax - 0x73]; 
0x00038c62: sub ah, byte ptr [ebp - 0x3b7c0002]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000e22e0: sub ah, byte ptr [edx]; hlt; jmp dword ptr [esi - 0x70]; 
0x000e0947: sub ah, dh; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000e1c2b: sub ah, dh; jmp dword ptr [esi - 0x70]; 
0x00030e40: sub al, 0x10; add byte ptr [ebp - 0x67e3f79], cl; call dword ptr [eax - 0x73]; 
0x0009a069: sub al, 0x1b; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000d3ce4: sub al, 0x21; ljmp 0x1c24:0x74ff50ff; call 0xd3260; add esp, 0x18; pop ebx; ret; 
0x000521a4: sub al, 0x24; add esp, 0x1c; ret; 
0x00097d71: sub al, 0x24; call 0x23190; mov dword ptr [esp], edi; call esi; 
0x00158516: sub al, 0x24; call edi; 
0x00025f41: sub al, 0x24; call esi; 
0x0017d64e: sub al, 0x24; ret; 
0x000de020: sub al, 0x29; ret; 
0x0017e52e: sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0007bcf2: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00102acf: sub al, 0x31; ror byte ptr [ebx - 0x74afdba4], 0x74; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00118e53: sub al, 0x31; ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016b5a5: sub al, 0x33; stc; call dword ptr [eax + 0x52]; 
0x000a33b8: sub al, 0x35; idiv bh; and ch, 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x00118d1f: sub al, 0x38; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000c7b63: sub al, 0x39; ret 0x840f; 
0x00151798: sub al, 0x39; ret; 
0x0010139d: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00045fd0: sub al, 0x3e; stc; call dword ptr [esi + 0x6a]; 
0x0013976d: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x138c50; add esp, 0x2c; ret; 
0x0009463e: sub al, 0x52; call 0x8ec00; add esp, 0x20; add esp, 0xc; ret; 
0x00088421: sub al, 0x52; push ecx; push edi; call eax; 
0x00083f90: sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0016e083: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x0016acde: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000879a8: sub al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0002352c: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001222d7: sub al, 0x63; stc; call dword ptr [eax + 0x68]; 
0x0012cc60: sub al, 0x65; out dx, eax; dec dword ptr [ecx + 0x24e82434]; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00117821: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a1: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x0011b1d6: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0012336a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x00096222: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x0009a2db: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x000d2e05: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d44b5: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000e0a23: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x0013b6d8: sub al, 0x66; cmp ebx, 0x950f0308; ret; 
0x001042e5: sub al, 0x6a; jg 0x1042d1; xor esp, ecx; std; call dword ptr [ecx + 0x6a]; 
0x001264eb: sub al, 0x6a; pushfd; call 0x115900; add esp, 0x20; add esp, 0xc; ret; 
0x00157aa5: sub al, 0x6c; bnd call dword ptr [eax - 0x73]; 
0x0019ca72: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000d1e45: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x0002e155: sub al, 0x79; stc; call dword ptr [eax + 0x68]; 
0x0002dfb9: sub al, 0x79; stc; call dword ptr [eax - 0x73]; 
0x00029ef2: sub al, 0x7a; stc; call dword ptr [eax - 0x73]; 
0x0015bfc0: sub al, 0x7b; std; jmp dword ptr [esi - 0x70]; 
0x000d2c28: sub al, 0x7d; stc; call dword ptr [eax + 0x56]; 
0x000a085f: sub al, 0x80; mov esi, 0x3c04; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6ac307a], cl; call dword ptr [ebx + 0x50]; 
0x00105a9c: sub al, 0x81; les ebx, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00048a89: sub al, 0x81; ret 0; 
0x0003459e: sub al, 0x81; ret 0x200; 
0x0011b656: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x00088643: sub al, 0x83; in al, dx; add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x00085dfb: sub al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00029353: sub al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0016d103: sub al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d727a: sub al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017a3fb: sub al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x00036caf: sub al, 0x83; ret 0x3901; 
0x00199513: sub al, 0x83; ret 0x7e10; 
0x001376cb: sub al, 0x83; ret 0x8902; 
0x001707bb: sub al, 0x83; ret; 
0x00169776: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x0015952b: sub al, 0x86; int1; call dword ptr [eax - 0x73]; 
0x00038755: sub al, 0x89; call 0x5d62e5b7; ret; 
0x000e8121: sub al, 0x89; call 0x5d6ddf83; ret; 
0x001057bf: sub al, 0x89; call 0x5d6fb621; ret; 
0x001058dd: sub al, 0x89; call 0x5d6fb73f; ret; 
0x0003d037: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001434f3: sub al, 0x89; int 0x80; 
0x001664c0: sub al, 0x89; pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000e3863: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0008861d: sub al, 0x89; ret 0x4c89; 
0x0013ee6e: sub al, 0x89; ret 0xb48d; 
0x00128f61: sub al, 0x89; ret 0xc031; 
0x00044922: sub al, 0x89; ret 0xe283; 
0x0014392c: sub al, 0x89; ret; 
0x000341f5: sub al, 0x8b; add al, 0x90; ret; 
0x0016996d: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00129b6a: sub al, 0x8b; inc ebx; sub al, 0x89; ret 0xc031; 
0x0011d0cd: sub al, 0x8b; jl 0x11d0f5; xor byte ptr [ebp - 0x6a3cd7d], cl; call dword ptr [eax + 0x55]; 
0x00034296: sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x0005f1f1: sub al, 0x8c; stc; call dword ptr [eax - 0x18]; 
0x00120110: sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x277602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00098163: sub al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x0019f903: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x0009ed30: sub al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x000be09e: sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x0017c926: sub al, 0xaa; hlt; call dword ptr [eax - 0x18]; 
0x000a2991: sub al, 0xab; call 0xc24e3997; ret; 
0x000b2b21: sub al, 0xab; or al, 0; add ecx, 0x10d19b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000d6b8d: sub al, 0xad; stc; call dword ptr [eax - 0x73]; 
0x0015c358: sub al, 0xb7; bnd call dword ptr [eax - 0x18]; 
0x0010c3e5: sub al, 0xb8; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00147691: sub al, 0xbf; stc; call dword ptr [eax + 0x68]; 
0x001474f5: sub al, 0xbf; stc; call dword ptr [eax - 0x73]; 
0x00099f62: sub al, 0xc7; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103ff1: sub al, 0xc; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0003d8a0: sub al, 0xd3; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008afe6: sub al, 0xe8; adc al, 0x3c; add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x000427b6: sub al, 0xe8; add al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00099728: sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x00120892: sub al, 0xe8; clc; add al, byte ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x00139ed2: sub al, 0xe8; clc; or al, 0xf1; jmp dword ptr [esi - 0x77]; 
0x00119f7e: sub al, 0xe8; cld; add al, byte ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x000dadd0: sub al, 0xe8; cmp ah, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00133ae0: sub al, 0xe8; lcall 0x2cc4, 0x83fff452; ret; 
0x0002e8b1: sub al, 0xe8; leave; ret 0x14; 
0x00183c50: sub al, 0xe8; ljmp 0x2cc4:0x83fff808; ret; 
0x00157bda: sub al, 0xe8; mov al, byte ptr [0x8900022f]; xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0004ab82: sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001032b0: sub al, 0xe8; mov dl, byte ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004ac00: sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00133a8e: sub al, 0xe8; pop esp; ret; 
0x00034b28: sub al, 0xe8; ret 0xc; 
0x0005cc87: sub al, 0xe8; ret; 
0x0005dbba: sub al, 0xe8; sal byte ptr [ecx - 0x3b7cffff], 0x2c; ret; 
0x000901b1: sub al, 0xe8; sub dword ptr [edi - 0x3b7c0001], ecx; adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x0009a9f6: sub al, 0xe; add byte ptr [ecx + 0x19643bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x001903ee: sub al, 0xeb; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017055f: sub al, 0xeb; dec dword ptr [ecx - 0x763e7606]; ret; 
0x00107bfd: sub al, 0xeb; sbb dword ptr [ebx - 0x7cefdbbc], ecx; ret; 
0x00163bd6: sub al, 0xf3; call dword ptr [eax - 0x73]; 
0x00124eef: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x00101fde: sub al, 0xf; mov dh, 0xc0; ret; 
0x0004cc2c: sub al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00141128: sub al, 0xf; xchg ebp, eax; ret 0xd184; 
0x001413f8: sub al, 0xf; xchg ebp, eax; ret 0xd384; 
0x00150ec0: sub al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x000304a5: sub al, 0xff; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00124ee4: sub al, 0xff; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0018aa0e: sub al, 0xff; inc dword ptr [ecx + 0x43c87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a975: sub al, 0xff; inc dword ptr [ecx + 0x43d20c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00183c4c: sub al, 0xff; je 0x183c74; sub al, 0xe8; ljmp 0x2cc4:0x83fff808; ret; 
0x00034b24: sub al, 0xff; je 0x34b4c; sub al, 0xe8; ret 0xc; 
0x000880e7: sub al, 0xff; je 0x8810f; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00099724: sub al, 0xff; je 0x9974c; sub al, 0xe8; add byte ptr [0xc4830000], 0x2c; ret; 
0x000d58db: sub al, 0xff; je 0xd5903; and al, 0xe8; sti; ret 0xfffa; 
0x0008e22b: sub al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0010c3e7: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125172: sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000bc947: sub al, 1; add byte ptr [eax], al; ret; 
0x00166705: sub al, 1; ret 0x5689; 
0x0007ac6d: sub al, 1; ret; 
0x0009aa47: sub al, 3; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x00060b77: sub al, ah; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x00060c36: sub al, ah; mov dword ptr [esp + 0x18], 1; add ecx, dword ptr [esi + eax*4]; jmp ecx; 
0x000613c7: sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x72fb4]; add ecx, ebx; jmp ecx; 
0x000610df: sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x73034]; add ecx, ebx; jmp ecx; 
0x0006135f: sub al, ah; mov ecx, dword ptr [esi + eax*4 - 0x730b4]; add ecx, ebx; jmp ecx; 
0x00061041: sub al, ah; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72eb4]; add ecx, ebx; jmp ecx; 
0x00119e29: sub al, byte ptr [eax - 0x76d00088]; ret 0x1375; 
0x000e6334: sub al, byte ptr [ebp - 0x1c7bf025]; add al, 0; add byte ptr [ebp - 0x7cffe2b4], cl; ret; 
0x00085e95: sub al, byte ptr [ebx + 0x535008ec]; call dword ptr [esi + 0x18]; 
0x00169d0a: sub al, byte ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x00127b8e: sub al, byte ptr [ebx - 0x2776df3c]; pop ebx; pop esi; pop edi; ret; 
0x0003c060: sub al, byte ptr [ecx + 0x124c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010b708: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120e6e: sub al, ch; aad 0xc7; add eax, 0xc0c68100; call dword ptr [eax]; 
0x000f6f46: sub al, ch; inc esp; ret 0xfff2; 
0x000ddcc8: sub al, ch; ret 0xfef4; 
0x0003e268: sub al, ch; ret 0xfffe; 
0x00086fc7: sub al, ch; ret; 
0x00152b33: sub bh, 0x6e; stc; call dword ptr [eax + 0x53]; 
0x0016c197: sub bh, al; stc; call dword ptr [eax - 0x73]; 
0x0018adfe: sub bh, bh; inc dword ptr [ecx + 0x43897c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ad65: sub bh, bh; inc dword ptr [ecx + 0x43930c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ac15: sub bh, bh; inc dword ptr [ecx + 0x43a80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018ab5e: sub bh, bh; inc dword ptr [ecx + 0x43b37c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001158e2: sub bh, bh; je 0x11590a; sub byte ptr [edx - 0x64], ch; call 0x115900; add esp, 0x2c; ret; 
0x0012bbb7: sub bh, bh; je 0x12bbdf; cmp al, 0xe8; pop ds; or bh, cl; jmp dword ptr [ebp - 0x75]; 
0x00036150: sub bh, bh; je 0x36178; sub byte ptr [edx], ch; call 0x360e0; add esp, 0x2c; ret; 
0x001410bb: sub bh, bh; jmp dword ptr [esi - 0x70]; 
0x00179fb5: sub bh, bh; jne 0x179f69; call eax; 
0x000bd8d4: sub bh, bh; jne 0xbd8d8; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00163a8b: sub bh, bh; jo 0x163aa3; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0009a03d: sub bh, byte ptr [eax + 0x107]; call dword ptr gs:[0x10]; 
0x0012442b: sub bh, byte ptr [eax - 1]; add esp, 8; pop ebx; ret; 
0x0011d2ea: sub bl, byte ptr [edi - 7]; call dword ptr [ecx + 0x51]; 
0x00171cc2: sub bl, byte ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x001911f0: sub bl, ch; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00169269: sub bl, ch; or al, 0x8d; je 0x169295; add byte ptr [ecx], ch; ret; 
0x0014badc: sub bl, ch; ret 0x6590; 
0x0011d11c: sub byte ptr [0xec830000], al; or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x0012549a: sub byte ptr [eax + 0x156], bh; call dword ptr gs:[0x10]; 
0x0003f8aa: sub byte ptr [eax + 0x163], bh; call dword ptr gs:[0x10]; 
0x00050329: sub byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00118c72: sub byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x0016577e: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x001284a0: sub byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012436a: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0011f77a: sub byte ptr [eax + 0x90], bh; call dword ptr gs:[0x10]; 
0x00120dea: sub byte ptr [eax + 0x91], bh; call dword ptr gs:[0x10]; 
0x00123a3a: sub byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x00115fba: sub byte ptr [eax + 0xa8], bh; call dword ptr gs:[0x10]; 
0x0008b648: sub byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001169fa: sub byte ptr [eax + 3], bh; call dword ptr gs:[0x10]; 
0x00117bda: sub byte ptr [eax + 4], bh; call dword ptr gs:[0x10]; 
0x0018c219: sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000ccf4c: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x00159519: sub byte ptr [eax - 0x73], dl; sbb dword ptr [eax + 0x500000a2], -0x73; and dword ptr [eax + 0x500000a2], 0xffffff8d; sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x001611f6: sub byte ptr [eax - 0x7d], dl; rcr byte ptr [eax], 0x50; call 0x160fe0; add esp, 0x2c; ret; 
0x00051db6: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x001481d3: sub byte ptr [eax], 0x4e; add byte ptr [eax], al; test eax, eax; jne 0x1481e7; ret; 
0x0012b1d6: sub byte ptr [eax], 0xb6; stc; call dword ptr [eax - 0x73]; 
0x0018c218: sub byte ptr [eax], 4; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00086b81: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008511b: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00116b11: sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e411c: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d1e3a: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x000bdd45: sub byte ptr [ebp + 0x6c8a8bc0], al; add dword ptr [eax], eax; add byte ptr [ebp + 0x3cc492], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x0004037e: sub byte ptr [ebp - 0x1c3e1fbe], cl; add eax, 0x29e0e183; fmul dword ptr [ebp - 0x76dff18c]; ret 0xd285; 
0x0005f71b: sub byte ptr [ebp - 0x4f7af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc101; 
0x00160aec: sub byte ptr [ebp - 0x63b477f], cl; call dword ptr [eax - 0x73]; 
0x0008f3e3: sub byte ptr [ebp - 0x66d7f80], cl; call dword ptr [eax - 0x18]; 
0x000620fd: sub byte ptr [ebp - 0x673af80], cl; call dword ptr [eax - 0x18]; 
0x00163394: sub byte ptr [ebp - 0x68d0380], cl; jmp dword ptr [ebp - 0x75]; 
0x00162e34: sub byte ptr [ebp - 0x68d0f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00162b64: sub byte ptr [ebp - 0x68d1c80], cl; jmp dword ptr [ebp - 0x75]; 
0x00162774: sub byte ptr [ebp - 0x68d2a80], cl; jmp dword ptr [ebp - 0x75]; 
0x00162134: sub byte ptr [ebp - 0x68d3680], cl; jmp dword ptr [ebp - 0x75]; 
0x00161d94: sub byte ptr [ebp - 0x68d4580], cl; jmp dword ptr [ebp - 0x75]; 
0x0015f5c4: sub byte ptr [ebp - 0x68e0580], cl; jmp dword ptr [ebp - 0x75]; 
0x0015f254: sub byte ptr [ebp - 0x68e1180], cl; jmp dword ptr [ebp - 0x75]; 
0x00158574: sub byte ptr [ebp - 0x6900b80], cl; call dword ptr [eax - 1]; 
0x00158652: sub byte ptr [ebp - 0x6904780], cl; call dword ptr [eax - 1]; 
0x0013da97: sub byte ptr [ebp - 0x696747d], cl; call dword ptr [eax + 0x68]; 
0x000d89f7: sub byte ptr [ebp - 0x6aa3480], cl; call dword ptr [eax + 0x53]; 
0x000d7ed8: sub byte ptr [ebp - 0x6aa3d80], cl; call dword ptr [eax + 0x53]; 
0x000d6f00: sub byte ptr [ebp - 0x72b48b0a], al; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000fb00c: sub byte ptr [ebp - 0x74888b01], al; inc edi; sub byte ptr [ebp - 0x76efdb84], cl; ret 0x4489; 
0x000fb013: sub byte ptr [ebp - 0x76efdb84], cl; ret 0x4489; 
0x0004491c: sub byte ptr [ebx + 0x24448903], cl; sub al, 0x89; ret 0xe283; 
0x00117f37: sub byte ptr [ebx + 0x337409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0009f165: sub byte ptr [ebx + 0x42e8fff9], ah; mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0016e938: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0017a32f: sub byte ptr [ebx + 0x505208ec], al; call dword ptr [ebx + 0x28]; 
0x0011ccde: sub byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x000f2409: sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax + 0x53]; 
0x000f2466: sub byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax - 1]; 
0x001692b3: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000d6c70: sub byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0014fc9e: sub byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00029fd2: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x00123366: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x0004cc28: sub byte ptr [ebx + 0xf2c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0014fb20: sub byte ptr [ebx + 0xfc08506], cl; dec esi; ret 0x4489; 
0x001333f7: sub byte ptr [ebx + ebp*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x001707c2: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001707c2: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x000a3194: sub byte ptr [ebx + edx*4 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa1a74]; cmovne eax, edx; pop ebx; ret; 
0x000a29d4: sub byte ptr [ebx + esi*2 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa2a54]; cmovne eax, edx; pop ebx; ret; 
0x00045bd1: sub byte ptr [ebx - 0x45f7dbbc], cl; xor eax, 0x29000000; ret 0x850f; 
0x00118257: sub byte ptr [ebx - 0x47efdbb4], cl; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0012010c: sub byte ptr [ebx - 0x72d3db8c], cl; inc ebx; inc dword ptr [ebx + 0x277602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000d7ed4: sub byte ptr [ebx - 0x72d7dbbc], cl; add dl, 0x55; stc; call dword ptr [eax + 0x53]; 
0x000d89f3: sub byte ptr [ebx - 0x72d7dbbc], cl; or bl, 0x55; stc; call dword ptr [eax + 0x53]; 
0x0011fb97: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001204c7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2df7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2fb7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011d0c9: sub byte ptr [ebx - 0x74d3db8c], cl; jl 0x11d0f5; xor byte ptr [ebp - 0x6a3cd7d], cl; call dword ptr [eax + 0x55]; 
0x00118357: sub byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001182d7: sub byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001a7dd4: sub byte ptr [ebx - 0x76cbdbbc], cl; fisttp qword ptr [ebx - 0x7cbfdba4]; ret; 
0x000fef60: sub byte ptr [ebx - 0x76ebdb84], cl; ret 0xf889; 
0x0017a4a7: sub byte ptr [ebx - 0x7aebdbac], cl; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x00036b66: sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x001376c7: sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x00030129: sub byte ptr [ebx], 0x3b; stc; call dword ptr [eax + 0x56]; 
0x00175b2d: sub byte ptr [ecx + 0x245c89d9], cl; adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x000a69fd: sub byte ptr [ecx + 0x390c245c], cl; ret 0x840f; 
0x0016d237: sub byte ptr [ecx + 0x6a], dl; add al, 0x50; call dword ptr [edx + 0x14]; 
0x000328d6: sub byte ptr [ecx + eax], 0; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033ce6: sub byte ptr [ecx + eax], 0; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000a3212: sub byte ptr [ecx + ebx*2 - 0xb], 0xff; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x0009c372: sub byte ptr [ecx + ecx], 0; add byte ptr [ecx], bh; ret; 
0x000db384: sub byte ptr [ecx - 0x17e7dbac], cl; ret 0xfe08; 
0x00143b00: sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016e934: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x001a4533: sub byte ptr [ecx - 0x76b7dbac], cl; ret 0xeac1; 
0x000dd1ae: sub byte ptr [ecx - 0x76e3db84], cl; ret; 
0x000f4680: sub byte ptr [ecx - 0x76ebdbbc], cl; ret 0x478b; 
0x0011bf77: sub byte ptr [ecx], 0x5a; stc; jmp dword ptr [ebp - 0x75]; 
0x00178bf6: sub byte ptr [ecx], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0011585e: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019dce4: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003cd98: sub byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0003e404: sub byte ptr [ecx], al; add byte ptr [eax], al; sub esp, 8; push 0; push edx; call eax; 
0x000a0b1b: sub byte ptr [ecx], al; je 0xa0bd8; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a0cb6: sub byte ptr [ecx], al; jne 0xa0c90; sub esp, 0xc; push eax; call edx; 
0x00069bd2: sub byte ptr [ecx], al; ret; 
0x000d1e37: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00045a7d: sub byte ptr [ecx], bh; ret 0x840f; 
0x0013fef7: sub byte ptr [ecx], bh; ret 0xa87e; 
0x00051b83: sub byte ptr [ecx], ch; ret 0x5489; 
0x001861ce: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0005b383: sub byte ptr [ecx], dh; rol byte ptr [ebx + 0xf41087f], cl; xchg esp, eax; ret 0x6a52; 
0x00162715: sub byte ptr [edi + 0x1b050001], ch; out 0xc, eax; add byte ptr [ebx - 0x7f72eb14], al; aad 0x72; stc; call dword ptr [eax + 0x6a]; 
0x000d1e77: sub byte ptr [edi + 0x5e], bl; ret; 
0x000d6fd8: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xd6fe8; mov eax, edx; ret; 
0x00147690: sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax + 0x68]; 
0x001474f4: sub byte ptr [edi + edi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x00188a0d: sub byte ptr [edi + edi*8 - 1], cl; add ebx, 0x45a07; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018aa0d: sub byte ptr [edi + edi*8], ch; inc dword ptr [ecx + 0x43c87c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00106ff9: sub byte ptr [edi - 0x7d], dh; ret 0xf01; 
0x0019dedc: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003cf15: sub byte ptr [edi], al; adc al, 0; add eax, 0x1f3f1b; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000fffc4: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00056bc4: sub byte ptr [edi], cl; mov esi, 0x8b1b244c; je 0x56bf1; sbb al, 0x89; ret 0xc801; 
0x00175b42: sub byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00135415: sub byte ptr [edx + 0x1b050004], al; mov edx, 0x808b000f; rol byte ptr [eax], 0; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001616f2: sub byte ptr [edx + esi*2 + 0x6a50fff9], 4; call 0x14bb50; add esp, 0x1c; ret; 
0x001158e6: sub byte ptr [edx - 0x64], ch; call 0x115900; add esp, 0x2c; ret; 
0x0007e100: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x0005dbb4: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x78d80; add esp, 0x2c; ret; 
0x0014f547: sub byte ptr [edx], 0x6e; stc; call dword ptr [eax + 0x55]; 
0x00036154: sub byte ptr [edx], ch; call 0x360e0; add esp, 0x2c; ret; 
0x0009458c: sub byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8ec00; add esp, 0x2c; ret; 
0x000290c3: sub byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00114694: sub byte ptr [edx], dh; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0010bc90: sub byte ptr [esi + 0x5f], bl; ret; 
0x00024ea7: sub byte ptr [esi + esi*2 - 7], 0xff; push eax; push 1; call 0x117b80; add esp, 0x1c; ret; 
0x000a33b7: sub byte ptr [esi - 0x1a7f000a], 2; lea edx, [edx - 0x175904]; cmove eax, edx; ret; 
0x0012495b: sub byte ptr [esi], 0xfd; out dx, eax; jmp ptr [ecx]; fidivr dword ptr [ecx]; ret 0x820f; 
0x0005f1f0: sub byte ptr [esp + ecx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00103ff0: sub byte ptr [esp + ecx], 0xf9; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0014f548: sub ch, byte ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x0014e2bb: sub ch, byte ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0014e44e: sub ch, byte ptr [esi - 7]; call dword ptr [eax - 0x73]; 
0x001506f5: sub ch, ch; jmp dword ptr [ebp - 0x75]; 
0x0009e2c9: sub cl, byte ptr [ebp + 0x47890872]; cmp byte ptr [ebp + 0x92c9b], cl; add byte ptr [ecx], bh; fisttp word ptr [edi]; xchg ebp, eax; ret; 
0x0012243d: sub cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00058535: sub cl, byte ptr [ebx + 0x458b045d]; or byte ptr [ecx], bh; ret; 
0x0012dd04: sub dh, 0x64; stc; call dword ptr [eax - 1]; 
0x0015f202: sub dh, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x0015f256: sub dh, 0x71; stc; jmp dword ptr [ebp - 0x75]; 
0x00074f6b: sub dh, ah; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000a09a8: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0002fd62: sub dh, byte ptr [edi + edi*8]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f1f2c: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xf1f49; mov eax, 1; ret; 
0x000a0ba4: sub dh, dh; ret 0x7502; 
0x00040937: sub dh, dh; ret 0x7503; 
0x00025e0d: sub dl, byte ptr [eax - 0x73]; cmp dword ptr [edx + 0x38], -7; call dword ptr [eax - 0x18]; 
0x0019a562: sub dl, byte ptr [eax]; bnd call dword ptr [ebx - 0x18]; 
0x000d4ac7: sub dl, byte ptr [ebp - 7]; call dword ptr [eax + 0x53]; 
0x0014cb64: sub dword ptr [eax + 0x4e], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x4e58], 0; call esi; 
0x0011d217: sub dword ptr [eax + 0x5d], -7; call dword ptr [eax + 0x55]; 
0x0014cadc: sub dword ptr [eax + 0x5e], -0x39; sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x00087ecd: sub dword ptr [eax + 1], 0x43890000; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f7d6: sub dword ptr [eax - 0x39], -7; call dword ptr [edx + 0x6a]; 
0x00104d9b: sub dword ptr [eax - 0x50], -7; call dword ptr [eax - 0x73]; 
0x0014c944: sub dword ptr [eax - 0x71], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x8f58], 0; call esi; 
0x00168755: sub dword ptr [eax - 0x75000000], 0x58; adc byte ptr [ecx], bh; fimul word ptr [edi]; xchg edx, eax; ret 0xf339; 
0x0013a9c1: sub dword ptr [eax - 0xc], 1; je 0x13a9d0; add esp, 4; pop ebx; pop esi; ret; 
0x0007e581: sub dword ptr [eax - 4], -1; call dword ptr [eax - 0x73]; 
0x0016c196: sub dword ptr [eax], -0x39; stc; call dword ptr [eax - 0x73]; 
0x0010b027: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001378a6: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00104730: sub dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x001747da: sub dword ptr [ebp + 0x75], -7; call dword ptr [eax - 0x18]; 
0x00098ff3: sub dword ptr [ebp + 0x7d8bfff9], ebp; mov byte ptr [ebp - 0x6678779], cl; call dword ptr [eax + 0x68]; 
0x0014c1b4: sub dword ptr [ebp - 7], ebp; call dword ptr [eax - 1]; 
0x0007795f: sub dword ptr [ebx + 0x515604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007a0d5: sub dword ptr [ebx + 0x525604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x00140696: sub dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00114749: sub dword ptr [ebx + 0x5e5b30c4], eax; pop edi; ret; 
0x0013984f: sub dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x0003e21f: sub dword ptr [ebx + 0x6d], -7; call dword ptr [eax - 0x18]; 
0x0009469c: sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0014baef: sub dword ptr [ebx + 0xf20244c], ecx; xchg ebp, eax; ret; 
0x001966d7: sub dword ptr [ebx + ebp*4 - 9], -1; sub eax, ecx; pop ebx; ret; 
0x0012545e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003f86e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f73e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00120dae: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001239fe: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115f7e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001169be: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00117b9e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00141a6f: sub dword ptr [ebx - 7], ebp; call dword ptr [eax - 0x18]; 
0x0015a930: sub dword ptr [ebx], 0; add byte ptr [eax - 0x73], dl; cmp esp, -0x64; bnd call dword ptr [eax - 0x18]; 
0x000399d1: sub dword ptr [ecx + 0x55], -7; dec dword ptr [edi]; inc ebp; call 0x2b9c6; jmp dword ptr [esi - 0x70]; 
0x0011f6bb: sub dword ptr [ecx - 1], -1; dec dword ptr [ecx + 0x6c89112c]; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000d3ce3: sub dword ptr [ecx], -0x16; call dword ptr [eax - 1]; 
0x001570b5: sub dword ptr [ecx], 0x54; stc; call dword ptr [eax - 1]; 
0x00141a6e: sub dword ptr [ecx], 0x6b; stc; call dword ptr [eax - 0x18]; 
0x0014c1b3: sub dword ptr [ecx], 0x6d; stc; call dword ptr [eax - 1]; 
0x00115927: sub dword ptr [ecx], eax; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001021c3: sub dword ptr [edi + 0x50fff957], -0x18; ret 0xf7ec; 
0x000d5810: sub dword ptr [edi + 0x55], -7; call dword ptr [eax - 0x18]; 
0x0006b6e8: sub dword ptr [edi + 1], edx; ret; 
0x0015c357: sub dword ptr [edi + esi*4], -0xe; call dword ptr [eax - 0x18]; 
0x000901b3: sub dword ptr [edi - 0x3b7c0001], ecx; adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x00167043: sub dword ptr [edi - 0x3b7d0000], ebx; adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x0019ab3c: sub dword ptr [edi - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x00184523: sub dword ptr [edi - 0xd], esi; call dword ptr [edi - 1]; 
0x0011d190: sub dword ptr [edi], 0x5c; stc; call dword ptr [eax + 0x55]; 
0x000f558c: sub dword ptr [edx + 0x42], -7; call dword ptr [edx + 0x52]; 
0x000829a5: sub dword ptr [edx + 0x4e], -7; call dword ptr [eax - 0x75]; 
0x00081243: sub dword ptr [edx + eax], -0x1b; call dword ptr [eax - 0x73]; 
0x0011bf78: sub dword ptr [edx - 7], ebx; jmp dword ptr [ebp - 0x75]; 
0x0011d2e9: sub dword ptr [edx], 0x5f; stc; call dword ptr [ecx + 0x51]; 
0x0014e2ba: sub dword ptr [edx], 0x6e; stc; call dword ptr [eax - 0x18]; 
0x0014e44d: sub dword ptr [edx], 0x6e; stc; call dword ptr [eax - 0x73]; 
0x0015952a: sub dword ptr [esi + eax*4], -0xf; call dword ptr [eax - 0x73]; 
0x00178bf7: sub dword ptr [esi - 7], esi; call dword ptr [eax - 0x18]; 
0x0011acdb: sub dword ptr [esi], eax; add byte ptr [ecx + 0x116156c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00157aa4: sub dword ptr [esp + ebp*2], -0xe; call dword ptr [eax - 0x73]; 
0x0014961e: sub eax, -0x40; stc; call dword ptr [eax - 0x73]; 
0x000870d7: sub eax, -0x6f; stc; call dword ptr [eax - 0x73]; 
0x0016e3a1: sub eax, -0x80; pop esi; pop edi; ret; 
0x000baa1b: sub eax, 0x10; pop edi; ret; 
0x00132215: sub eax, 0x29000000; ret 0xd189; 
0x0007c39f: sub eax, 0x2effffeb; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0018696d: sub eax, 0x3000476; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0005d1df: sub eax, 0x39fffdfd; ret; 
0x0002ff51: sub eax, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x001226b2: sub eax, 0x5704ec83; push 1; push ebx; call esi; 
0x00124f08: sub eax, 0x81000587; ret; 
0x0003a908: sub eax, 0x8100142d; ret; 
0x00036408: sub eax, 0x81001472; ret; 
0x000871cf: sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x0009e4cf: sub eax, 0x89fffff0; ret; 
0x00119b81: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001407b0: sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x0016b56e: sub eax, 0x8dffffff; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; add bl, byte ptr [ecx - 7]; call dword ptr [edi + 0x56]; 
0x0013b85a: sub eax, 0xc483fffe; adc byte ptr [ebp - 0x7777f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x00141ea1: sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00137372: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0008471a: sub eax, 1; mov dword ptr [ebx + 0x1a58], eax; add esp, 8; pop ebx; ret; 
0x0002fcf8: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x000779e4: sub eax, 1; mov dword ptr [edx + 0x1a24], eax; ret; 
0x000818b4: sub eax, 1; mov dword ptr [edx + 0x1a38], eax; ret; 
0x00086eb4: sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00057734: sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00050738: sub eax, 1; ret; 
0x0009a84d: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x368], eax; ret; 
0x000961b8: sub eax, 2; add esp, 0xc; ret; 
0x0011a65f: sub eax, dword ptr [0x14]; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0014c5ea: sub eax, dword ptr [0x14]; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016e949: sub eax, dword ptr [0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b9: sub eax, dword ptr [0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea29: sub eax, dword ptr [0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea8c: sub eax, dword ptr [0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaec: sub eax, dword ptr [0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb59: sub eax, dword ptr [0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd9: sub eax, dword ptr [0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016f0b7: sub eax, dword ptr [0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f106: sub eax, dword ptr [0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x00170820: sub eax, dword ptr [0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0003af76: sub eax, dword ptr [0x14]; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd29: sub eax, dword ptr [0x14]; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003e75c: sub eax, dword ptr [0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e87f: sub eax, dword ptr [0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0005bea4: sub eax, dword ptr [0x14]; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x00081840: sub eax, dword ptr [0x14]; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x00104dc6: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0007b8e4: sub eax, dword ptr [ebx + 0x565308ec]; call dword ptr [edi + 0x18]; 
0x0016aae0: sub eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00034da1: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x0012d1b4: sub eax, dword ptr [ebx + 4]; pop ebx; pop esi; pop edi; ret; 
0x0012745d: sub eax, dword ptr [ebx - 0x2776db3c]; pop ebx; pop esi; ret; 
0x000be31c: sub eax, dword ptr [ebx - 0x7bf0fa08]; imul edi, edi, -1; dec dword ptr [ebp - 0x655137a]; call dword ptr [eax - 0x73]; 
0x00080c63: sub eax, dword ptr [edx + 0x10]; ret; 
0x00080b25: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00080b33: sub eax, dword ptr [edx + 0x1c]; ret; 
0x00087473: sub eax, dword ptr [edx + 0xc]; ret; 
0x00080c55: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00086a4f: sub eax, dword ptr [edx + 8]; ret; 
0x0007c056: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0007ed01: sub eax, dword ptr [edx]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00030f6e: sub eax, dword ptr [edx]; ret; 
0x0016669b: sub eax, dword ptr [esi + 0xc]; add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000d0f15: sub eax, dword ptr [esi]; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6532f79]; call dword ptr [eax - 0x73]; 
0x000bc696: sub eax, dword ptr [esp + 4]; ret; 
0x0011a65e: sub eax, dword ptr gs:[0x14]; jne 0x11a66f; add esp, 0x418; pop ebx; ret; 
0x0014c5e9: sub eax, dword ptr gs:[0x14]; jne 0x14c5f6; add esp, 0x1c; ret; 
0x0016e948: sub eax, dword ptr gs:[0x14]; jne 0x16e955; add esp, 0x4c; ret; 
0x0016e9b8: sub eax, dword ptr gs:[0x14]; jne 0x16e9c5; add esp, 0x4c; ret; 
0x0016ea28: sub eax, dword ptr gs:[0x14]; jne 0x16ea35; add esp, 0x4c; ret; 
0x0016ea8b: sub eax, dword ptr gs:[0x14]; jne 0x16ea98; add esp, 0x4c; ret; 
0x0016eaeb: sub eax, dword ptr gs:[0x14]; jne 0x16eaf8; add esp, 0x4c; ret; 
0x0016eb58: sub eax, dword ptr gs:[0x14]; jne 0x16eb65; add esp, 0x4c; ret; 
0x0016ebd8: sub eax, dword ptr gs:[0x14]; jne 0x16ebe5; add esp, 0x4c; ret; 
0x0016f0b6: sub eax, dword ptr gs:[0x14]; jne 0x16f0c3; add esp, 0x1c; ret; 
0x0016f105: sub eax, dword ptr gs:[0x14]; jne 0x16f13c; add esp, 0x1c; ret; 
0x0017081f: sub eax, dword ptr gs:[0x14]; jne 0x17082c; add esp, 0x2c; ret; 
0x0003af75: sub eax, dword ptr gs:[0x14]; jne 0x3af86; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bd28: sub eax, dword ptr gs:[0x14]; jne 0x3bd36; add esp, 0x18; pop ebx; ret; 
0x0003e75b: sub eax, dword ptr gs:[0x14]; jne 0x3e768; add esp, 0x1c; ret; 
0x0003e87e: sub eax, dword ptr gs:[0x14]; jne 0x3e88b; add esp, 0x1c; ret; 
0x0005bea3: sub eax, dword ptr gs:[0x14]; jne 0x5bec6; add esp, 0x78; pop ebx; ret; 
0x0008183f: sub eax, dword ptr gs:[0x14]; jne 0x8185c; add esp, 0x28; pop ebx; ret; 
0x0019b0c5: sub eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013bb95: sub eax, ebx; add esp, 8; pop ebx; ret; 
0x000a4e65: sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016668d: sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00198ee9: sub eax, ecx; pop ebp; pop ebx; ret; 
0x00194025: sub eax, ecx; pop ebp; ret; 
0x001966dc: sub eax, ecx; pop ebx; ret; 
0x0018e2e4: sub eax, ecx; pop edi; call 0x17d639; add ebx, 0x407ec; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001913ea: sub eax, ecx; pop esi; call 0x17d639; add ebx, 0x3dc26; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019adbf: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x000bf04f: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0019a85b: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0019954d: sub eax, ecx; pop esi; pop edi; ret; 
0x00041e35: sub eax, ecx; ret; 
0x000a9837: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000844d6: sub eax, edi; pop edi; pop ebp; ret; 
0x0017ec9b: sub eax, edx; cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0017f13d: sub eax, edx; cmp eax, 0x593; ja 0x17f220; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0017f286: sub eax, edx; cmp eax, 0x593; ja 0x17f2a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075d4e: sub eax, edx; cmp eax, 0x593; ja 0x75e50; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078ab3: sub eax, edx; cmp eax, 0x593; ja 0x78c01; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007b11a: sub eax, edx; cmp eax, 0x593; ja 0x7b158; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081a1e: sub eax, edx; cmp eax, 0x593; ja 0x81a50; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00082737: sub eax, edx; cmp eax, 0x593; ja 0x82780; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00085620: sub eax, edx; cmp eax, 0x593; ja 0x85680; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000856ca: sub eax, edx; cmp eax, 0x593; ja 0x856f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007f4d8: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008a552: sub eax, edx; mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0019c819: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007c8a8: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00041f99: sub eax, edx; ret; 
0x0003abb3: sub eax, edx; shr eax, 0x1f; ret; 
0x0017f8d7: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x00061422: sub eax, esp; mov esi, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esi + eax*4 - 0x72f34]; add ecx, ebx; jmp ecx; 
0x0015f713: sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x000b2c22: sub ebp, dword ptr [edx - 0x3e7efff4]; sbb dl, cl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4066: sub ebx, 0x10; bsf edx, edx; call 0x17d651; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a36: sub ebx, 0x10; bsf edx, edx; call 0x17d651; add ecx, 0x10d27f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000aca4a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad28a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xacfe1; pop ebx; ret; 
0x0014ac2a: sub ebx, 0x6c; stc; call dword ptr [eax + 0x56]; 
0x000ad1a2: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xacfe1; pop ebx; ret; 
0x000ad1c0: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xacfe1; pop ebx; ret; 
0x000aca10: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad1e0: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xacfe1; pop ebx; ret; 
0x000acdd4: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad204: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xacfe1; pop ebx; ret; 
0x000ace04: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad234: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xacfe1; pop ebx; ret; 
0x000ace34: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad264: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xacfe1; pop ebx; ret; 
0x000b1735: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb1431; pop ebx; ret; 
0x000acc96: sub ebx, 1; lea ecx, [edx + 1]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad076: sub ebx, 1; lea ecx, [edx + 1]; jne 0xacfe1; pop ebx; ret; 
0x000ad098: sub ebx, 2; lea ecx, [edx + 2]; jne 0xacfe1; pop ebx; ret; 
0x000accde: sub ebx, 3; lea ecx, [edx + 3]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad0be: sub ebx, 3; lea ecx, [edx + 3]; jne 0xacfe1; pop ebx; ret; 
0x000ad0d6: sub ebx, 4; lea ecx, [edx + 4]; jne 0xacfe1; pop ebx; ret; 
0x000accfc: sub ebx, 5; lea ecx, [edx + 5]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad0fc: sub ebx, 5; lea ecx, [edx + 5]; jne 0xacfe1; pop ebx; ret; 
0x000acd1e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad11e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xacfe1; pop ebx; ret; 
0x000acd3c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad13c: sub ebx, 7; lea ecx, [edx + 7]; jne 0xacfe1; pop ebx; ret; 
0x000ad15a: sub ebx, 8; lea ecx, [edx + 8]; jne 0xacfe1; pop ebx; ret; 
0x000b15eb: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb1431; pop ebx; ret; 
0x000acd60: sub ebx, 9; lea ecx, [edx + 9]; jne 0xacfe0; pop edi; pop ebx; ret; 
0x000ad180: sub ebx, 9; lea ecx, [edx + 9]; jne 0xacfe1; pop ebx; ret; 
0x0014cce4: sub ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0008ef31: sub ebx, dword ptr [ecx + 0x4d8b0005]; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ba1d8: sub ebx, ecx; add esi, ecx; call 0x17d651; add ecx, 0x105e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1b8: sub ebx, ecx; add esi, ecx; call 0x17d651; add ecx, 0x105eb3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4238: sub ebx, ecx; add esi, ecx; call 0x17d651; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4218: sub ebx, ecx; add esi, ecx; call 0x17d651; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bf8: sub ebx, ecx; add esi, ecx; call 0x17d651; add ecx, 0x10d13f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b2bd8: sub ebx, ecx; add esi, ecx; call 0x17d651; add ecx, 0x10d15f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00085f80: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0007b9d0: sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x000ec7e9: sub ebx, esp; jmp 0xecbad; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000ef0e9: sub ebx, esp; jmp 0xef4ad; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000efe39: sub ebx, esp; jmp 0xf01fd; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x001037b8: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000e30e4: sub ecx, 0x3b; stc; call dword ptr [eax - 0x18]; 
0x00050e95: sub ecx, 1; jae 0x50e90; mov eax, edx; pop ebx; pop esi; ret; 
0x00057969: sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0007e7a4: sub ecx, 1; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00041c12: sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00041be2: sub ecx, 1; mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00041cc3: sub ecx, 1; mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00057980: sub ecx, 1; xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x000a0241: sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0002554d: sub ecx, dword ptr [0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x000d3e7d: sub ecx, dword ptr [0x14]; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x00132fc1: sub ecx, dword ptr [eax + 0x6e8fffe]; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013cabd: sub ecx, dword ptr [ebx + 0x39c18900]; ret 0x840f; 
0x0016668a: sub ecx, dword ptr [esi + 0x2c]; sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0002554c: sub ecx, dword ptr gs:[0x14]; jne 0x25559; add esp, 0x1c; ret; 
0x000d3e7c: sub ecx, dword ptr gs:[0x14]; jne 0xd3e8a; add esp, 0x28; pop ebx; ret; 
0x001666ea: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00083a36: sub ecx, eax; sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0003a8c9: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x001905f1: sub ecx, ebp; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003f73d: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x001038b1: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010372e: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000896b2: sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0003a4fe: sub ecx, edx; not eax; and eax, ecx; ret; 
0x0003a55e: sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x000ba874: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0019ef6b: sub edi, 0x10; jb 0x19f030; lea eax, [eax + 0xf]; pop edi; ret; 
0x0019efe0: sub edi, 0xa; jb 0x19f030; lea eax, [eax + 9]; pop edi; ret; 
0x0019eff0: sub edi, 0xb; jb 0x19f030; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019f000: sub edi, 0xd; jb 0x19f030; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019f010: sub edi, 0xe; jb 0x19f030; lea eax, [eax + 0xd]; pop edi; ret; 
0x0019f020: sub edi, 0xf; jb 0x19f030; lea eax, [eax + 0xe]; pop edi; ret; 
0x0019ef80: sub edi, 2; jb 0x19f030; lea eax, [eax + 1]; pop edi; ret; 
0x0019ef90: sub edi, 3; jb 0x19f030; lea eax, [eax + 2]; pop edi; ret; 
0x0019eed8: sub edi, 4; jb 0x19f030; lea eax, [eax + 3]; pop edi; ret; 
0x0019efa0: sub edi, 5; jb 0x19f030; lea eax, [eax + 4]; pop edi; ret; 
0x0019efb0: sub edi, 6; jb 0x19f030; lea eax, [eax + 5]; pop edi; ret; 
0x0019efc0: sub edi, 7; jb 0x19f030; lea eax, [eax + 6]; pop edi; ret; 
0x0019ef0b: sub edi, 8; jb 0x19f030; lea eax, [eax + 7]; pop edi; ret; 
0x0019efd0: sub edi, 9; jb 0x19f030; lea eax, [eax + 8]; pop edi; ret; 
0x0003012a: sub edi, dword ptr [ebx]; stc; call dword ptr [eax + 0x56]; 
0x0016c1c1: sub edi, dword ptr [ecx - 4]; jmp dword ptr [esi - 0x70]; 
0x0018acae: sub edi, edi; inc dword ptr [ecx + 0x439e7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018aac5: sub edi, edi; inc dword ptr [ecx + 0x43bd0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005bb74: sub edi, edi; je 0x5bb9c; sbb al, ch; ret 0xffc8; 
0x00140f2e: sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x000bb083: sub edx, 0x10; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x30]; ret; 
0x0019df3b: sub edx, 0x10; jb 0x19e010; lea eax, [edi + 0xf]; pop edi; ret; 
0x000bb073: sub edx, 0x20; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x20]; ret; 
0x000bb063: sub edx, 0x30; add edx, eax; jl 0xbb090; lea eax, [ecx + eax + 0x10]; ret; 
0x000bb053: sub edx, 0x40; add edx, eax; jl 0xbb090; add eax, ecx; ret; 
0x0003af23: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0019dfc0: sub edx, 0xa; jb 0x19e010; lea eax, [edi + 9]; pop edi; ret; 
0x0019dfd0: sub edx, 0xb; jb 0x19e010; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019df12: sub edx, 0xc; jb 0x19e010; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019dfe0: sub edx, 0xd; jb 0x19e010; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019dff0: sub edx, 0xe; jb 0x19e010; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019e000: sub edx, 0xf; jb 0x19e010; lea eax, [edi + 0xe]; pop edi; ret; 
0x000744d4: sub edx, 1; mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0019df60: sub edx, 2; jb 0x19e010; lea eax, [edi + 1]; pop edi; ret; 
0x0015f444: sub edx, 2; pop edi; pop ebp; mov eax, edx; ret; 
0x0019df70: sub edx, 3; jb 0x19e010; lea eax, [edi + 2]; pop edi; ret; 
0x0019dea7: sub edx, 4; jb 0x19e010; lea eax, [edi + 3]; pop edi; ret; 
0x0019df80: sub edx, 5; jb 0x19e010; lea eax, [edi + 4]; pop edi; ret; 
0x0019df90: sub edx, 6; jb 0x19e010; lea eax, [edi + 5]; pop edi; ret; 
0x0019dfa0: sub edx, 7; jb 0x19e010; lea eax, [edi + 6]; pop edi; ret; 
0x0019ded8: sub edx, 8; jb 0x19e010; lea eax, [edi + 7]; pop edi; ret; 
0x000a922d: sub edx, 8; jne 0xa91f8; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0019dfb0: sub edx, 9; jb 0x19e010; lea eax, [edi + 8]; pop edi; ret; 
0x00102d15: sub edx, dword ptr [0x14]; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102db9: sub edx, dword ptr [0x14]; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00103035: sub edx, dword ptr [0x14]; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00104ee3: sub edx, dword ptr [0x14]; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x00109b96: sub edx, dword ptr [0x14]; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x0011524e: sub edx, dword ptr [0x14]; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x00117823: sub edx, dword ptr [0x14]; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a3: sub edx, dword ptr [0x14]; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x00118f56: sub edx, dword ptr [0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b1d8: sub edx, dword ptr [0x14]; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0011b5f6: sub edx, dword ptr [0x14]; jne 0x11b602; add esp, 0x1c; ret; 
0x0011c08c: sub edx, dword ptr [0x14]; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0011cce7: sub edx, dword ptr [0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00121819: sub edx, dword ptr [0x14]; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218c9: sub edx, dword ptr [0x14]; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x0012336c: sub edx, dword ptr [0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x0012380b: sub edx, dword ptr [0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001274fe: sub edx, dword ptr [0x14]; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x00127623: sub edx, dword ptr [0x14]; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a3: sub edx, dword ptr [0x14]; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x0012799e: sub edx, dword ptr [0x14]; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286ae: sub edx, dword ptr [0x14]; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287c7: sub edx, dword ptr [0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128833: sub edx, dword ptr [0x14]; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x001288be: sub edx, dword ptr [0x14]; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x001289c1: sub edx, dword ptr [0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x00133373: sub edx, dword ptr [0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x00134583: sub edx, dword ptr [0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x0013e99d: sub edx, dword ptr [0x14]; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9f9: sub edx, dword ptr [0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea48: sub edx, dword ptr [0x14]; jne 0x13ea54; add esp, 0x1c; ret; 
0x0014080c: sub edx, dword ptr [0x14]; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408ac: sub edx, dword ptr [0x14]; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x0014096c: sub edx, dword ptr [0x14]; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a0c: sub edx, dword ptr [0x14]; jne 0x140a3d; add esp, 0x11c; ret; 
0x00140ee4: sub edx, dword ptr [0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x00144836: sub edx, dword ptr [0x14]; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cb7: sub edx, dword ptr [0x14]; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x001643ea: sub edx, dword ptr [0x14]; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x0016a26d: sub edx, dword ptr [0x14]; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4c2: sub edx, dword ptr [0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d5ec: sub edx, dword ptr [0x14]; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d68c: sub edx, dword ptr [0x14]; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0016d9dc: sub edx, dword ptr [0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da55: sub edx, dword ptr [0x14]; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x0016e8d9: sub edx, dword ptr [0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x001708d1: sub edx, dword ptr [0x14]; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709c1: sub edx, dword ptr [0x14]; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c78: sub edx, dword ptr [0x14]; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d08: sub edx, dword ptr [0x14]; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170db7: sub edx, dword ptr [0x14]; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e3c: sub edx, dword ptr [0x14]; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ece: sub edx, dword ptr [0x14]; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x00171708: sub edx, dword ptr [0x14]; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x00171798: sub edx, dword ptr [0x14]; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x00171828: sub edx, dword ptr [0x14]; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718b8: sub edx, dword ptr [0x14]; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171fb0: sub edx, dword ptr [0x14]; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x00172010: sub edx, dword ptr [0x14]; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x00172079: sub edx, dword ptr [0x14]; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x00172129: sub edx, dword ptr [0x14]; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177105: sub edx, dword ptr [0x14]; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00178c91: sub edx, dword ptr [0x14]; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d09: sub edx, dword ptr [0x14]; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017ab0d: sub edx, dword ptr [0x14]; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x0017d271: sub edx, dword ptr [0x14]; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800d7: sub edx, dword ptr [0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185d83: sub edx, dword ptr [0x14]; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x001860fb: sub edx, dword ptr [0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003c7ea: sub edx, dword ptr [0x14]; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003c990: sub edx, dword ptr [0x14]; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003cd8e: sub edx, dword ptr [0x14]; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d392: sub edx, dword ptr [0x14]; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d412: sub edx, dword ptr [0x14]; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d49a: sub edx, dword ptr [0x14]; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0003fa5f: sub edx, dword ptr [0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc7c: sub edx, dword ptr [0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003fe3a: sub edx, dword ptr [0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x0003ff4c: sub edx, dword ptr [0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffcf: sub edx, dword ptr [0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f2b: sub edx, dword ptr [0x14]; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000504ba: sub edx, dword ptr [0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x000577f6: sub edx, dword ptr [0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x0005dcfa: sub edx, dword ptr [0x14]; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x0005dd81: sub edx, dword ptr [0x14]; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x0008c7fc: sub edx, dword ptr [0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x00091268: sub edx, dword ptr [0x14]; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912f8: sub edx, dword ptr [0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925cc: sub edx, dword ptr [0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a4c: sub edx, dword ptr [0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f58: sub edx, dword ptr [0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b8: sub edx, dword ptr [0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x00096224: sub edx, dword ptr [0x14]; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x000964b3: sub edx, dword ptr [0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x0009671f: sub edx, dword ptr [0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x0009697f: sub edx, dword ptr [0x14]; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x000986a7: sub edx, dword ptr [0x14]; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099d0f: sub edx, dword ptr [0x14]; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x0009a2dd: sub edx, dword ptr [0x14]; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x000bf52c: sub edx, dword ptr [0x14]; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d2d3a: sub edx, dword ptr [0x14]; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d2dbc: sub edx, dword ptr [0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000d2e07: sub edx, dword ptr [0x14]; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d2e67: sub edx, dword ptr [0x14]; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x000d4113: sub edx, dword ptr [0x14]; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000d44b7: sub edx, dword ptr [0x14]; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000dd150: sub edx, dword ptr [0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df490: sub edx, dword ptr [0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000df604: sub edx, dword ptr [0x14]; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df823: sub edx, dword ptr [0x14]; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x000e09c9: sub edx, dword ptr [0x14]; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0a25: sub edx, dword ptr [0x14]; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000e0acf: sub edx, dword ptr [0x14]; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000e788f: sub edx, dword ptr [0x14]; jne 0xe78a7; add esp, 0x1c; ret; 
0x000e8b46: sub edx, dword ptr [0x14]; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4c6: sub edx, dword ptr [0x14]; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec226: sub edx, dword ptr [0x14]; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb26: sub edx, dword ptr [0x14]; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef876: sub edx, dword ptr [0x14]; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x00086a7a: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00086a88: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0007ba70: sub edx, dword ptr [ebx + 4]; sar edx, 2; jmp 0x7ba62; mov eax, 0xffffffff; pop ebx; ret; 
0x0007ba5c: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x00102d14: sub edx, dword ptr gs:[0x14]; jne 0x102d69; add esp, 0x28; pop ebx; ret; 
0x00102db8: sub edx, dword ptr gs:[0x14]; jne 0x102e19; add esp, 0x28; pop ebx; ret; 
0x00103034: sub edx, dword ptr gs:[0x14]; jne 0x103089; add esp, 0x28; pop ebx; ret; 
0x00104ee2: sub edx, dword ptr gs:[0x14]; jne 0x104f93; add esp, 0x68; pop ebx; ret; 
0x00109b95: sub edx, dword ptr gs:[0x14]; jne 0x109bb6; add esp, 0x78; pop ebx; ret; 
0x0011524d: sub edx, dword ptr gs:[0x14]; jne 0x11525d; movzx eax, al; add esp, 0x4c; ret; 
0x00117822: sub edx, dword ptr gs:[0x14]; jne 0x117830; add esp, 0x38; pop ebx; ret; 
0x001178a2: sub edx, dword ptr gs:[0x14]; jne 0x1178b0; add esp, 0x38; pop ebx; ret; 
0x00118f55: sub edx, dword ptr gs:[0x14]; jne 0x118f69; add esp, 0x1c; ret; 
0x0011b1d7: sub edx, dword ptr gs:[0x14]; jne 0x11b1e5; add esp, 0x38; pop ebx; ret; 
0x0011b5f5: sub edx, dword ptr gs:[0x14]; jne 0x11b602; add esp, 0x1c; ret; 
0x0011c08b: sub edx, dword ptr gs:[0x14]; jne 0x11c0af; add esp, 0x1018; pop ebx; ret; 
0x0011cce6: sub edx, dword ptr gs:[0x14]; jne 0x11ccf3; add esp, 0x1c; ret; 
0x00121818: sub edx, dword ptr gs:[0x14]; jne 0x121879; add esp, 0x28; pop ebx; ret; 
0x001218c8: sub edx, dword ptr gs:[0x14]; jne 0x121929; add esp, 0x28; pop ebx; ret; 
0x0012336b: sub edx, dword ptr gs:[0x14]; jne 0x123387; add esp, 0x3c; ret; 
0x0012380a: sub edx, dword ptr gs:[0x14]; jne 0x123817; add esp, 0x1c; ret; 
0x001274fd: sub edx, dword ptr gs:[0x14]; jne 0x127529; add esp, 0x28; pop ebx; ret; 
0x00127622: sub edx, dword ptr gs:[0x14]; jne 0x127649; add esp, 0x18; pop ebx; ret; 
0x001276a2: sub edx, dword ptr gs:[0x14]; jne 0x1276c9; add esp, 0x18; pop ebx; ret; 
0x0012799d: sub edx, dword ptr gs:[0x14]; jne 0x1279c9; add esp, 0x18; pop ebx; ret; 
0x001286ad: sub edx, dword ptr gs:[0x14]; jne 0x1286d9; add esp, 0x18; pop ebx; ret; 
0x001287c6: sub edx, dword ptr gs:[0x14]; jne 0x1287d3; add esp, 0x1c; ret; 
0x00128832: sub edx, dword ptr gs:[0x14]; jne 0x128859; add esp, 0x18; pop ebx; ret; 
0x001288bd: sub edx, dword ptr gs:[0x14]; jne 0x1288e9; add esp, 0x28; pop ebx; ret; 
0x001289c0: sub edx, dword ptr gs:[0x14]; jne 0x1289d4; add esp, 0x7c; ret; 
0x00133372: sub edx, dword ptr gs:[0x14]; jne 0x133385; add esp, 0x2c; ret; 
0x00134582: sub edx, dword ptr gs:[0x14]; jne 0x134595; add esp, 0x2c; ret; 
0x0013e99c: sub edx, dword ptr gs:[0x14]; jne 0x13e9bd; add esp, 0x18; pop ebx; ret; 
0x0013e9f8: sub edx, dword ptr gs:[0x14]; jne 0x13ea05; add esp, 0x1c; ret; 
0x0013ea47: sub edx, dword ptr gs:[0x14]; jne 0x13ea54; add esp, 0x1c; ret; 
0x0014080b: sub edx, dword ptr gs:[0x14]; jne 0x140854; add esp, 0x118; pop ebx; ret; 
0x001408ab: sub edx, dword ptr gs:[0x14]; jne 0x140910; add esp, 0x118; pop ebx; ret; 
0x0014096b: sub edx, dword ptr gs:[0x14]; jne 0x1409bb; add esp, 0x118; pop ebx; ret; 
0x00140a0b: sub edx, dword ptr gs:[0x14]; jne 0x140a3d; add esp, 0x11c; ret; 
0x00140ee3: sub edx, dword ptr gs:[0x14]; jne 0x140f2c; add esp, 0x1c; ret; 
0x00144835: sub edx, dword ptr gs:[0x14]; jne 0x144845; movzx eax, ax; add esp, 0x2c; ret; 
0x00148cb6: sub edx, dword ptr gs:[0x14]; jne 0x148cc4; add esp, 0x28; pop ebx; ret; 
0x001643e9: sub edx, dword ptr gs:[0x14]; jne 0x1643f7; add esp, 0x28; pop ebx; ret; 
0x0016a26c: sub edx, dword ptr gs:[0x14]; jne 0x16a2e8; add esp, 0x18; pop ebx; ret; 
0x0016d4c1: sub edx, dword ptr gs:[0x14]; jne 0x16d4d7; add esp, 0x1c; ret; 
0x0016d5eb: sub edx, dword ptr gs:[0x14]; jne 0x16d607; add esp, 0x28; pop ebx; ret; 
0x0016d68b: sub edx, dword ptr gs:[0x14]; jne 0x16d6a7; add esp, 0x28; pop ebx; ret; 
0x0016d9db: sub edx, dword ptr gs:[0x14]; jne 0x16d9e8; add esp, 0x1c; ret; 
0x0016da54: sub edx, dword ptr gs:[0x14]; jne 0x16da6f; add esp, 0x18; pop ebx; ret; 
0x0016e8d8: sub edx, dword ptr gs:[0x14]; jne 0x16e8e5; add esp, 0x4c; ret; 
0x001708d0: sub edx, dword ptr gs:[0x14]; jne 0x170939; add esp, 0x18; pop ebx; ret; 
0x001709c0: sub edx, dword ptr gs:[0x14]; jne 0x170a29; add esp, 0x18; pop ebx; ret; 
0x00170c77: sub edx, dword ptr gs:[0x14]; jne 0x170cb6; add esp, 0x18; pop ebx; ret; 
0x00170d07: sub edx, dword ptr gs:[0x14]; jne 0x170d46; add esp, 0x18; pop ebx; ret; 
0x00170db6: sub edx, dword ptr gs:[0x14]; jne 0x170ddb; add esp, 0x18; pop ebx; ret; 
0x00170e3b: sub edx, dword ptr gs:[0x14]; jne 0x170e74; add esp, 0x18; pop ebx; ret; 
0x00170ecd: sub edx, dword ptr gs:[0x14]; jne 0x170f14; add esp, 0x18; pop ebx; ret; 
0x00171707: sub edx, dword ptr gs:[0x14]; jne 0x171746; add esp, 0x18; pop ebx; ret; 
0x00171797: sub edx, dword ptr gs:[0x14]; jne 0x1717d6; add esp, 0x18; pop ebx; ret; 
0x00171827: sub edx, dword ptr gs:[0x14]; jne 0x171865; add esp, 0x18; pop ebx; ret; 
0x001718b7: sub edx, dword ptr gs:[0x14]; jne 0x1718f5; add esp, 0x18; pop ebx; ret; 
0x00171faf: sub edx, dword ptr gs:[0x14]; jne 0x171fbf; movzx eax, al; add esp, 0x1c; ret; 
0x0017200f: sub edx, dword ptr gs:[0x14]; jne 0x17201f; movzx eax, al; add esp, 0x1c; ret; 
0x00172078: sub edx, dword ptr gs:[0x14]; jne 0x172086; add esp, 0x18; pop ebx; ret; 
0x00172128: sub edx, dword ptr gs:[0x14]; jne 0x172136; add esp, 0x18; pop ebx; ret; 
0x00177104: sub edx, dword ptr gs:[0x14]; jne 0x17713c; add esp, 0x18; pop ebx; ret; 
0x00178c90: sub edx, dword ptr gs:[0x14]; jne 0x178ca9; add esp, 0x18; pop ebx; ret; 
0x00178d08: sub edx, dword ptr gs:[0x14]; jne 0x178d29; add esp, 0x18; pop ebx; ret; 
0x0017ab0c: sub edx, dword ptr gs:[0x14]; jne 0x17ab1a; add esp, 0x28; pop ebx; ret; 
0x0017d270: sub edx, dword ptr gs:[0x14]; jne 0x17d27e; add esp, 0x18; pop ebx; ret; 
0x001800d6: sub edx, dword ptr gs:[0x14]; jne 0x1800e3; add esp, 0x1c; ret; 
0x00185d82: sub edx, dword ptr gs:[0x14]; jne 0x185da7; add esp, 0x18; pop ebx; ret; 
0x001860fa: sub edx, dword ptr gs:[0x14]; jne 0x186107; add esp, 0x2c; ret; 
0x0003c7e9: sub edx, dword ptr gs:[0x14]; jne 0x3c807; add esp, 0x98; pop ebx; ret; 
0x0003c98f: sub edx, dword ptr gs:[0x14]; jne 0x3c9cc; add esp, 0x28; pop ebx; ret; 
0x0003cd8d: sub edx, dword ptr gs:[0x14]; jne 0x3cdbb; add esp, 0x128; pop ebx; ret; 
0x0003d391: sub edx, dword ptr gs:[0x14]; jne 0x3d3af; add esp, 0x98; pop ebx; ret; 
0x0003d411: sub edx, dword ptr gs:[0x14]; jne 0x3d42f; add esp, 0x98; pop ebx; ret; 
0x0003d499: sub edx, dword ptr gs:[0x14]; jne 0x3d4a9; add esp, 0x9c; ret; 
0x0003fa5e: sub edx, dword ptr gs:[0x14]; jne 0x3fa6b; add esp, 0x1c; ret; 
0x0003fc7b: sub edx, dword ptr gs:[0x14]; jne 0x3fc88; add esp, 0x1c; ret; 
0x0003fe39: sub edx, dword ptr gs:[0x14]; jne 0x3fe46; add esp, 0x2c; ret; 
0x0003ff4b: sub edx, dword ptr gs:[0x14]; jne 0x3ff58; add esp, 0x1c; ret; 
0x0003ffce: sub edx, dword ptr gs:[0x14]; jne 0x3ffdb; add esp, 0x1c; ret; 
0x00040f2a: sub edx, dword ptr gs:[0x14]; jne 0x40f6c; add esp, 0x18; pop ebx; ret; 
0x000504b9: sub edx, dword ptr gs:[0x14]; jne 0x504c6; add esp, 0x2c; ret; 
0x000577f5: sub edx, dword ptr gs:[0x14]; jne 0x5780f; add esp, 0x1c; ret; 
0x0005dcf9: sub edx, dword ptr gs:[0x14]; jne 0x5dd0a; add esp, 0x1018; pop ebx; ret; 
0x0005dd80: sub edx, dword ptr gs:[0x14]; jne 0x5dd8e; add esp, 0x78; pop ebx; ret; 
0x0008c7fb: sub edx, dword ptr gs:[0x14]; jne 0x8c808; add esp, 0x2c; ret; 
0x00091267: sub edx, dword ptr gs:[0x14]; jne 0x91275; add esp, 0x28; pop ebx; ret; 
0x000912f7: sub edx, dword ptr gs:[0x14]; jne 0x91304; add esp, 0x2c; ret; 
0x000925cb: sub edx, dword ptr gs:[0x14]; jne 0x925d8; add esp, 0x2c; ret; 
0x00092a4b: sub edx, dword ptr gs:[0x14]; jne 0x92a58; add esp, 0x2c; ret; 
0x00092f57: sub edx, dword ptr gs:[0x14]; jne 0x92f64; add esp, 0x2c; ret; 
0x000933b7: sub edx, dword ptr gs:[0x14]; jne 0x933c4; add esp, 0x2c; ret; 
0x00096223: sub edx, dword ptr gs:[0x14]; jne 0x96277; add esp, 0x38; pop ebx; ret; 
0x000964b2: sub edx, dword ptr gs:[0x14]; jne 0x964d7; add esp, 0x2c; ret; 
0x0009671e: sub edx, dword ptr gs:[0x14]; jne 0x96747; add esp, 0x2c; ret; 
0x0009697e: sub edx, dword ptr gs:[0x14]; jne 0x969a7; add esp, 0x18; pop ebx; ret; 
0x000986a6: sub edx, dword ptr gs:[0x14]; jne 0x986b4; add esp, 0x28; pop ebx; ret; 
0x00099d0e: sub edx, dword ptr gs:[0x14]; jne 0x99d1c; add esp, 0x28; pop ebx; ret; 
0x0009a2dc: sub edx, dword ptr gs:[0x14]; jne 0x9a2ea; add esp, 0x38; pop ebx; ret; 
0x000bf52b: sub edx, dword ptr gs:[0x14]; jne 0xbf55c; add esp, 0x18; pop ebx; ret; 
0x000d2d39: sub edx, dword ptr gs:[0x14]; jne 0xd2d57; add esp, 0x28; pop ebx; ret; 
0x000d2dbb: sub edx, dword ptr gs:[0x14]; jne 0xd2dc8; add esp, 0x1c; ret; 
0x000d2e06: sub edx, dword ptr gs:[0x14]; jne 0xd2e14; add esp, 0x38; pop ebx; ret; 
0x000d2e66: sub edx, dword ptr gs:[0x14]; jne 0xd2e74; add esp, 0x48; pop ebx; ret; 
0x000d4112: sub edx, dword ptr gs:[0x14]; jne 0xd4159; add esp, 0x28; pop ebx; ret; 
0x000d44b6: sub edx, dword ptr gs:[0x14]; jne 0xd44d8; add esp, 0x38; pop ebx; ret; 
0x000dd14f: sub edx, dword ptr gs:[0x14]; jne 0xdd15c; add esp, 0x1c; ret; 
0x000df48f: sub edx, dword ptr gs:[0x14]; jne 0xdf49c; add esp, 0x1c; ret; 
0x000df603: sub edx, dword ptr gs:[0x14]; jne 0xdf642; add esp, 0x28; pop ebx; ret; 
0x000df822: sub edx, dword ptr gs:[0x14]; jne 0xdf830; add esp, 0x28; pop ebx; ret; 
0x000e09c8: sub edx, dword ptr gs:[0x14]; jne 0xe09d9; add esp, 0xe8; pop ebx; ret; 
0x000e0a24: sub edx, dword ptr gs:[0x14]; jne 0xe0a32; add esp, 0x38; pop ebx; ret; 
0x000e0ace: sub edx, dword ptr gs:[0x14]; jne 0xe0adf; add esp, 0xe8; pop ebx; ret; 
0x000e788e: sub edx, dword ptr gs:[0x14]; jne 0xe78a7; add esp, 0x1c; ret; 
0x000e8b45: sub edx, dword ptr gs:[0x14]; jne 0xe8b66; add esp, 0x78; pop ebx; ret; 
0x000eb4c5: sub edx, dword ptr gs:[0x14]; jne 0xeb4e6; add esp, 0x78; pop ebx; ret; 
0x000ec225: sub edx, dword ptr gs:[0x14]; jne 0xec246; add esp, 0x78; pop ebx; ret; 
0x000eeb25: sub edx, dword ptr gs:[0x14]; jne 0xeeb46; add esp, 0x78; pop ebx; ret; 
0x000ef875: sub edx, dword ptr gs:[0x14]; jne 0xef896; add esp, 0x78; pop ebx; ret; 
0x000bad93: sub edx, eax; jbe 0xbadd0; add eax, edi; pop edi; ret; 
0x000bada6: sub edx, eax; jbe 0xbadd0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000badb6: sub edx, eax; jbe 0xbadd0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000badc6: sub edx, eax; jbe 0xbadd0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000bb2c2: sub edx, eax; lea eax, [edx + 3]; ret; 
0x0017193b: sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x000830d8: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00166c3e: sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00050646: sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x50610; jmp eax; 
0x00119941: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000ba078: sub edx, ecx; call 0x17d651; add ecx, 0x105f75; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b408a: sub edx, ecx; call 0x17d651; add ecx, 0x10bd8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b2a5a: sub edx, ecx; call 0x17d651; add ecx, 0x10d25f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000baabc: sub edx, ecx; jbe 0xbaaf0; add eax, ecx; ret; 
0x001766c1: sub edx, esp; sti; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x6367f7a]; call dword ptr [eax - 0x73]; 
0x0012d306: sub esi, 1; jae 0x12d2e0; add esp, 4; pop ebx; pop esi; ret; 
0x0015f38d: sub esi, 2; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00166550: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00050644: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x50610; jmp eax; 
0x001a0234: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001564c3: sub esi, edx; std; jmp dword ptr [esi - 0x70]; 
0x0015c017: sub esp, -0x4d; bnd call dword ptr [eax - 0x18]; 
0x0015c017: sub esp, -0x4d; bnd call dword ptr [eax - 0x18]; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x000d6bbe: sub esp, -0x54; stc; call dword ptr [eax - 0x18]; 
0x0009d49f: sub esp, -0x61; stc; call dword ptr [eax - 0x18]; 
0x00156b2a: sub esp, -0x7c; int1; call dword ptr [eax - 0x73]; 
0x00099475: sub esp, -0x80; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00102e54: sub esp, 0x14; push 0; push 0; call 0x102e20; add esp, 0x1c; ret; 
0x00126374: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x126390; add esp, 0x1c; ret; 
0x0003e0e4: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x3d930; add esp, 0x1c; ret; 
0x001406d4: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x140600; add esp, 0x1c; ret; 
0x00091e84: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x91d40; add esp, 0x1c; ret; 
0x00139784: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x138a90; add esp, 0x1c; ret; 
0x0017e3b0: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x17dad0; add esp, 0x18; pop ebx; ret; 
0x00102890: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0007f590: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x757a0; add esp, 0x18; pop ebx; ret; 
0x0011ee60: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00093dce: sub esp, 0x18; lea eax, [eax + 0x3b0c]; push eax; call 0x8a290; add esp, 0x1c; ret; 
0x00086ee0: sub esp, 0x18; lea eax, [edx + 0x1a54]; push eax; call 0x893c0; add esp, 0x1c; ret; 
0x0015eda4: sub esp, 0x18; push 0; call 0x14bc20; add esp, 0x1c; ret; 
0x0003cce4: sub esp, 0x18; push 0; call 0x3c570; add esp, 0x1c; ret; 
0x00162e04: sub esp, 0x18; push 0xa; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f224: sub esp, 0x18; push 1; call 0x14bc20; add esp, 0x1c; ret; 
0x0015f594: sub esp, 0x18; push 2; call 0x14bc20; add esp, 0x1c; ret; 
0x00160434: sub esp, 0x18; push 3; call 0x14bc20; add esp, 0x1c; ret; 
0x00161714: sub esp, 0x18; push 4; call 0x14bc20; add esp, 0x1c; ret; 
0x00161d64: sub esp, 0x18; push 5; call 0x14bc20; add esp, 0x1c; ret; 
0x00162104: sub esp, 0x18; push 6; call 0x14bc20; add esp, 0x1c; ret; 
0x00163364: sub esp, 0x18; push 7; call 0x14bc20; add esp, 0x1c; ret; 
0x00162744: sub esp, 0x18; push 8; call 0x14bc20; add esp, 0x1c; ret; 
0x00162b34: sub esp, 0x18; push 9; call 0x14bc20; add esp, 0x1c; ret; 
0x000819e0: sub esp, 0x18; push eax; call 0x853a0; add esp, 0x1c; ret; 
0x000798c0: sub esp, 0x18; push ecx; call 0x7b500; add esp, 0x1c; ret; 
0x0014b30d: sub esp, 0x19; stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0009a6b4: sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x712f4]; call dword ptr gs:[0x10]; 
0x001483c2: sub esp, 0x70; int1; call dword ptr [esi + 0x50]; 
0x00089764: sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x0014c0f0: sub esp, 0xc; lea eax, [ebx + 4]; push eax; call edi; 
0x001024a8: sub esp, 0xc; lea eax, [edi + 0x3f8c]; push eax; call 0x893c0; call dword ptr [esi]; 
0x0016c3ba: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0016b89a: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x00168bfd: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x001697ee: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0007b315: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0016d19a: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00168fdd: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016c5ac: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0016f9c9: sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x000e1b30: sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000e9230: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000e949a: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5e8]; call dword ptr [eax + 0x18]; 
0x000efe40: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f01ba: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5f8]; call dword ptr [eax + 0x18]; 
0x00163e1b: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00165e4a: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00164ae0: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001645d3: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016eec0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0016edb0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0016e0ad: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016daaf: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00163eaf: sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00164190: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x000e1f85: sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x38]; push esi; call eax; 
0x0016cc62: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00164339: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00096010: sub esp, 0xc; mov esi, dword ptr [eax + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00089edc: sub esp, 0xc; push 0; call 0x894b0; add esp, 0x1c; ret; 
0x00024455: sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000e959b: sub esp, 0xc; push dword ptr [ebp - 0x5b4]; mov eax, dword ptr [ebp - 0x5c0]; call dword ptr [eax + 0x10]; 
0x000f02bb: sub esp, 0xc; push dword ptr [ebp - 0x5c4]; mov eax, dword ptr [ebp - 0x5d0]; call dword ptr [eax + 0x10]; 
0x0008af7c: sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x001227d9: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000a0c20: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0015850c: sub esp, 0xc; push eax; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x000a0cba: sub esp, 0xc; push eax; call edx; 
0x0016c008: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0016602e: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0016c01f: sub esp, 0xc; push ebp; call eax; 
0x0016ae42: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0014f6db: sub esp, 0xc; push ebx; call 0x17ab80; add esp, 0x10; mov eax, ebx; call eax; 
0x0002f422: sub esp, 0xc; push ebx; call 0x17ab80; mov dword ptr [esp], esi; call ebx; 
0x00164ac3: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x000825ae: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007b123: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081a27: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00026237: sub esp, 0xc; push ecx; call 0x17ab80; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00158673: sub esp, 0xc; push edi; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x00027037: sub esp, 0xc; push edi; call 0x17ab80; mov dword ptr [esp], ebx; call edi; 
0x0016ce3c: sub esp, 0xc; push edi; call dword ptr [eax + 0x10]; 
0x00164f8b: sub esp, 0xc; push edi; call eax; 
0x00164f68: sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x000268d1: sub esp, 0xc; push edx; call 0x17ab80; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x48]; call edx; 
0x00025f34: sub esp, 0xc; push esi; call 0x17ab80; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000260c4: sub esp, 0xc; push esi; call 0x17ab80; mov dword ptr [esp], ebx; call esi; 
0x00164046: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000805ec: sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000859af: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00075d5b: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078ac0: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0017f14a: sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x00085629: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0017f28f: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000a0bd8: sub esp, 0xc; push esi; call eax; 
0x001245a2: sub esp, 0xc; push esi; call edx; 
0x001245a2: sub esp, 0xc; push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0016aaac: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0003e6b5: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000df4b4: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xdf4c8; add esp, 0xc; ret; 
0x000df5a4: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xdf5b8; add esp, 0xc; ret; 
0x00131d32: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00152942: sub esp, 4; bnd call dword ptr [eax + 0x6a]; 
0x0003acdc: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x00088644: sub esp, 4; mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x00183b6b: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001707c5: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x00086787: sub esp, 4; push 0; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x000778e0: sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00078b13: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00079c78: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0017bdff: sub esp, 4; push dword ptr [esi]; push dword ptr [ebp]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017adc9: sub esp, 4; push dword ptr [esi]; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017d803: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0012d6b5: sub esp, 4; push dword ptr [esp + 0x24]; push 0; push 0x2000004; call eax; 
0x000764ff: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00081eb7: sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00024d3f: sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0007d83f: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x000764a5: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000843df: sub esp, 4; push ebx; push dword ptr [esp + 0x3c]; push esi; call dword ptr [ebp + 0x38]; 
0x00073f35: sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0007892d: sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00078894: sub esp, 4; push ebx; push edi; push esi; mov eax, dword ptr [ebp - 0x20]; call dword ptr [eax + 0x2c]; 
0x001226f7: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0017ec21: sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00083a38: sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0012269f: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x001226b3: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x001226c6: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00076807: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00084640: sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x000781d4: sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00081c8e: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00079d7f: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00024df8: sub esp, 4; push esi; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00081e0e: sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00077960: sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007a0d6: sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000830d5: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0016e09c: sub esp, 8; add ecx, 4; mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x0016a508: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00122b42: sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0011cc10: sub esp, 8; call 0x11c820; mov dword ptr [ebx + 0x4580], eax; add esp, 8; pop ebx; ret; 
0x0003aa2c: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x00082303: sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000837c6: sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00081ff6: sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007d472: sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075674: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00085789: sub esp, 8; lea ebx, [ecx + 1]; push eax; push esi; call dword ptr [edi + 0xc]; 
0x000df738: sub esp, 8; lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00163f36: sub esp, 8; lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000e8b58: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016d765: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0017f70a: sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000df8b2: sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000ef888: sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00122c02: sub esp, 8; mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x00164a08: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000d3199: sub esp, 8; mov dword ptr [esp + 0x5c], ebp; push ebx; push dword ptr [esp + 0x20]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00168e8a: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00163dd0: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016bac2: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00168e6a: sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016a41c: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016640a: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x00166458: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016a460: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016ec70: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0016ee5f: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x001658cd: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x001657d9: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00165889: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0017109f: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00163f56: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00163dec: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016585e: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x000831e5: sub esp, 8; push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x24]; call dword ptr [eax + 0xc]; 
0x0007cae2: sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x00165e9d: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003e408: sub esp, 8; push 0; push edx; call eax; 
0x00075808: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00163e02: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0005e283: sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0003e9d9: sub esp, 8; push dword ptr [esp + 0xc]; push dword ptr [esp + 0x3c]; call eax; 
0x000e943e: sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000f015e: sub esp, 8; push eax; push dword ptr [ebp - 0x5f8]; call esi; 
0x000a0c90: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00085e96: sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0010a9ac: sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016eea8: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x00130b1c: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0007b8e5: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000a0c12: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000df879: sub esp, 8; push edi; push ebx; call eax; 
0x0017a2a9: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017a330: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000a0b23: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00116b0b: sub esp, dword ptr [ebx - 0x47acffef]; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00134a7f: sub esp, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0009a80a: sub esp, dword ptr [esi + 0x19]; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3389089]; add byte ptr [eax], al; ret; 
0x000cd126: syscall; 
0x000b45ed: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019d832: test ah, 0x20; jne 0x19d8d0; lea eax, [edi - 4]; pop edi; ret; 
0x0019e3b2: test ah, 0x20; jne 0x19e450; lea eax, [ecx + 0xc]; ret; 
0x0019e5f2: test ah, 0x20; jne 0x19e6a0; add edx, 0xc; jl 0x19e6d0; lea eax, [ecx + 0xc]; ret; 
0x0019e9f9: test ah, 0x20; jne 0x19eab0; test ah, 0x40; jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x0019d376: test ah, 0x40; jne 0x19d460; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019dd32: test ah, 0x40; jne 0x19de70; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019ea02: test ah, 0x40; jne 0x19eac0; lea eax, [edx + 0xf]; ret; 
0x0019fbc0: test ah, 0xf0; jne 0x19fbe0; lea eax, [edi - 8]; pop edi; ret; 
0x0019f934: test ah, 0xf; jne 0x19f950; test dh, 0xf; jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x0019f970: test ah, 1; jne 0x19f990; lea eax, [ecx + 0xc]; ret; 
0x0003abf6: test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003a594: test ah, 2; je 0x3a59b; fchs; ret; 
0x0003a8f4: test ah, 2; je 0x3a8fb; fchs; ret; 
0x0019d809: test ah, 2; jne 0x19d8a0; lea eax, [edi - 8]; pop edi; ret; 
0x0019e389: test ah, 2; jne 0x19e420; lea eax, [ecx + 8]; ret; 
0x0019e5c8: test ah, 2; jne 0x19e670; add edx, 8; jl 0x19e6d0; lea eax, [ecx + 8]; ret; 
0x0019e9d0: test ah, 2; jne 0x19ea80; test ah, 4; jne 0x19ea90; lea eax, [edx + 0xb]; ret; 
0x0019dd09: test ah, 4; jne 0x19de40; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019e9d9: test ah, 4; jne 0x19ea90; lea eax, [edx + 0xb]; ret; 
0x00052327: test ah, bl; add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6df0fe07], cl; ret 0xff19; 
0x0015ad85: test ah, ch; jmp dword ptr [ebp - 0x75]; 
0x0019ac00: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0005907f: test ah, dh; or byte ptr [eax], al; add byte ptr [eax - 0xd343], al; jmp dword ptr [esi + 0xf]; 
0x000d980e: test ah, dl; add byte ptr [eax], al; add dh, dh; ret; 
0x001073b9: test ah, dl; add eax, 0x1bf0000; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00172b44: test al, 0; add byte ptr [eax - 0x73], dl; cmp edi, 0x71; stc; call dword ptr [eax + 0x6a]; 
0x00173e72: test al, 0; add byte ptr [eax - 0x73], dl; sbb dword ptr [ebp + 0x72], -7; call dword ptr [eax + 0x6a]; 
0x00173f1e: test al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x72], bl; stc; call dword ptr [eax + 0x6a]; 
0x001732ca: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + 0x72], ebx; stc; call dword ptr [eax + 0x6a]; 
0x001757ba: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x31fff972], esp; call dword ptr [eax + 0x6a]; 
0x00174841: test al, 0; add byte ptr [eax - 0x73], dl; xchg edx, ebx; jb 0x174843; call dword ptr [eax + 0x6a]; 
0x001725f3: test al, 0; add byte ptr [eax - 0x73], dl; xchg esi, ecx; jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x0019e594: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x19e6d0; lea eax, [ecx + 4]; ret; 
0x00115fbc: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019e9b4: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0010b373: test al, 0; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00115f88: test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010b249: test al, 0; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00168e53: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017717e: test al, 0; add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x00088a44: test al, 0x1a; add byte ptr [eax], al; ret; 
0x00120bc3: test al, 0x1c; sar cl, 1; jmp dword ptr [ecx]; 
0x0019d7e0: test al, 0x20; jne 0x19d870; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019e360: test al, 0x20; jne 0x19e3f0; lea eax, [ecx + 4]; ret; 
0x0019e590: test al, 0x20; jne 0x19e640; add edx, 4; jl 0x19e6d0; lea eax, [ecx + 4]; ret; 
0x0019e9a8: test al, 0x20; jne 0x19ea50; test al, 0x40; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x000d2ff4: test al, 0x24; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0002c3b5: test al, 0x3a; stc; call dword ptr [eax - 0x18]; 
0x0019d324: test al, 0x40; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x0019dce0: test al, 0x40; jne 0x19de10; lea eax, [edi + 7]; pop edi; ret; 
0x0019e358: test al, 0x40; jne 0x19e400; test al, 0x20; jne 0x19e3f0; lea eax, [ecx + 4]; ret; 
0x0019e9b0: test al, 0x40; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x0007f768: test al, 0x49; cli; jmp dword ptr [esi - 0x70]; 
0x00088995: test al, 0x4c; sldt word ptr [0x1a849b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x270], edx; ret; 
0x0014cadd: test al, 0x5e; add byte ptr [eax], al; add bh, al; sbb dword ptr [eax + 0x5e], 0; add byte ptr [eax], al; call esi; 
0x0008d074: test al, 0x6c; cli; inc dword ptr [ebx - 0x17a9f314]; aas; ret; 
0x00025e01: test al, 0x7e; stc; call dword ptr [eax - 0x73]; 
0x001226f6: test al, 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0016ef67: test al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000ff6a0: test al, 0x83; ret; 
0x0007b334: test al, 0x88; add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0003555b: test al, 0x89; fsubp st(1); ret; 
0x000901de: test al, 0x95; stc; call dword ptr [eax - 0x73]; 
0x0009b288: test al, 0x99; stc; call dword ptr [eax + 0x6a]; 
0x00103bf8: test al, 0xc; xor ch, ch; call dword ptr [ebp + 0x6a]; 
0x000a5db2: test al, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0014656b: test al, 0xe; add byte ptr [ebx - 0x77], dl; ret; 
0x00149456: test al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0019faf5: test al, 0xf0; jne 0x19fbb0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a2989: test al, 0xf6; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0xab; call 0xc24e3997; ret; 
0x000a0fe6: test al, 0xf9; call dword ptr [eax + 0x68]; 
0x0009adec: test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009ac62: test al, 0xf9; call dword ptr [edx - 0x73]; 
0x0019f85a: test al, 0xf; jne 0x19f920; test dl, 0xf; jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x0006c9c9: test al, 0xfe; dec dword ptr [ebx - 0x76cfdbb4]; ret; 
0x000f9ef2: test al, 0xff; dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x00126bd3: test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092193: test al, 1; je 0x921e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0019f964: test al, 1; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x000934d4: test al, 1; jne 0x934aa; mov eax, 0x10; pop ebx; ret; 
0x0019d7bb: test al, 2; jne 0x19d840; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019e1db: test al, 2; jne 0x19e3c0; mov eax, ecx; ret; 
0x0019e4e9: test al, 2; jne 0x19e610; add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x0019e985: test al, 2; jne 0x19ea20; test al, 4; jne 0x19ea30; lea eax, [edx + 3]; ret; 
0x0019dcbd: test al, 4; jne 0x19dde0; lea eax, [edi + 3]; pop edi; ret; 
0x0019e1d3: test al, 4; jne 0x19e3d0; test al, 2; jne 0x19e3c0; mov eax, ecx; ret; 
0x0019e98d: test al, 4; jne 0x19ea30; lea eax, [edx + 3]; ret; 
0x0008085b: test al, al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0019f960: test al, al; je 0x19f970; test al, 1; jne 0x19f980; lea eax, [ecx + 4]; ret; 
0x0009492f: test al, al; je 0x94940; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001099ad: test al, al; jne 0x109992; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0017d330: test al, al; jne 0x17d356; mov eax, 4; add esp, 0xc; ret; 
0x000bc3a0: test al, al; jne 0xbc398; xor eax, eax; ret; 
0x000e895d: test al, al; jne 0xe8942; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000eb2dd: test al, al; jne 0xeb2c2; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000ec03d: test al, al; jne 0xec022; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000ee93d: test al, al; jne 0xee922; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000ef68d: test al, al; jne 0xef672; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000f1f50: test al, al; jne 0xf1f21; xor eax, eax; ret; 
0x000e8994: test al, al; mov eax, 0; cmove edx, eax; mov eax, edx; ret; 
0x0007a163: test al, cl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001608fb: test al, dh; add byte ptr [eax], al; add byte ptr [ecx], dh; fucomi st(3); adc cl, byte ptr [ebp - 0x7cffd98c]; ret; 
0x0012f36b: test al, dl; or al, byte ptr [eax]; add byte ptr [ebx + 0x39101e5c], cl; ret 0x820f; 
0x0007669b: test bh, 4; add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0005d12e: test bh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x24917e1], cl; std; jmp ptr [ecx]; ret; 
0x00096a16: test bh, bh; jmp dword ptr [esi - 0x70]; 
0x000c5eaa: test bh, bl; add dword ptr [eax], eax; add byte ptr [ecx + 0x39efd3d7], cl; ret; 
0x0008375c: test bh, bl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0007d014: test bh, dh; add byte ptr [eax], al; add byte ptr [ebp + 0x41890442], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x000adb44: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000e6338: test bl, ah; add al, 0; add byte ptr [ebp - 0x7cffe2b4], cl; ret; 
0x00124578: test bl, ah; or al, dh; call dword ptr [ebx + 0x56]; 
0x00044709: test bl, bl; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x00044734: test bl, bl; cmovne eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0006ef74: test bl, ch; sbb dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x001695c7: test bl, dh; call dword ptr [eax + 0x55]; 
0x001695c0: test bl, dh; call dword ptr [eax - 0x73]; 
0x00079bbe: test byte ptr [0x39000001], al; ret; 
0x0008098e: test byte ptr [0x39000001], bh; ret; 
0x0011d25f: test byte ptr [0x83000009], cl; in al, dx; or byte ptr [ebp - 0x6a1fc7d], cl; call dword ptr [eax + 0x55]; 
0x0004df2f: test byte ptr [0xba000002], dl; pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5652; 
0x00034298: test byte ptr [eax + 0x200], dl; ret; 
0x0002a443: test byte ptr [eax + 0x29000003], dh; ror byte ptr [ecx - 0x76fe743b], 1; ret 0xe283; 
0x0008cf9d: test byte ptr [eax + 0x31000000], dl; sar byte ptr [eax + 0xf0], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x00055cff: test byte ptr [eax + 0x31000005], al; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0007f14b: test byte ptr [eax + 0x39000000], ch; ret; 
0x00119de3: test byte ptr [eax + 0x39000000], cl; ret; 
0x0007852b: test byte ptr [eax + 0x39000000], dh; ret; 
0x001997b1: test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00126f97: test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000bbe00: test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x001a7fb6: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add bh, dh; ret 0; 
0x001a5259: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add bh, dh; ret; 
0x0005ed01: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x3910247c], cl; ret; 
0x001a6772: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x00105c60: test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0019f131: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000bcc3b: test byte ptr [eax + eax], bh; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0010c295: test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00145e43: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x00069c81: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x3918246c], cl; ret; 
0x0003d2df: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014f508: test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0010c2f7: test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0016c5a7: test byte ptr [eax - 0x137d0000], dh; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x000687a4: test byte ptr [eax - 0x16000009], dh; ret 0xffa2; 
0x0019f0e1: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0016b8f4: test byte ptr [eax - 0x6c990], dl; notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000a71e1: test byte ptr [eax - 0x74ffffea], dl; pop ebp; rol byte ptr [ecx], 1; ret; 
0x00105c5a: test byte ptr [eax - 0x75000000], bl; test byte ptr [eax + eax*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000ed033: test byte ptr [eax - 0x7bfffff1], ch; ror byte ptr [edi], 0x84; ret; 
0x000d520b: test byte ptr [eax - 0x7d000000], ah; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x000a64f9: test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x000a388e: test byte ptr [eax*4 + 0x10c74c0], bh; ret; 
0x00084ad8: test byte ptr [eax], 0x80; jne 0x84ae0; ret; 
0x00080b88: test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x00080ba8: test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0007aaf7: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6df7d], cl; call dword ptr [eax - 0x73]; 
0x000c20da: test byte ptr [eax], ah; add byte ptr [eax], al; add cl, ch; cmp eax, -1; call dword ptr [esi + 0x6a]; 
0x000e8837: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124fc7: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00125003: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0002bac4: test byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x000d7d72: test byte ptr [eax], al; sbb al, 0; add dh, dh; ret; 
0x00103f60: test byte ptr [eax], bh; add al, 0; add dh, dh; ret 0xf20; 
0x0011d11b: test byte ptr [eax], ch; add eax, 0xec830000; or byte ptr [ebp - 0x6a4d97d], cl; call dword ptr [eax + 0x55]; 
0x001042a9: test byte ptr [eax], dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x000344d9: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0007efbe: test byte ptr [ebp + 0x39000000], bh; ret; 
0x0007f7ae: test byte ptr [ebp + 0x39000000], dh; ret; 
0x00066c06: test byte ptr [ebp + eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00166352: test byte ptr [ebp - 0x68c267d], cl; call dword ptr [edx + 0x6a]; 
0x000905bd: test byte ptr [ebp - 0x72000002], bh; xchg ah, al; xchg ebp, eax; stc; call dword ptr [eax + 0x68]; 
0x0004d886: test byte ptr [ebp - 0x74fffff5], bl; mov word ptr [esp + esi*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x76bfdb8c], cl; ret; 
0x0008913e: test byte ptr [ebp - 0x75000000], cl; pop esp; and al, 8; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000e4daf: test byte ptr [ebp - 0x7c00000a], dl; ret; 
0x000fa18e: test byte ptr [ebp - 0x7cfffffe], cl; ret; 
0x00153336: test byte ptr [ebp - 0x7d000000], bl; ret 0x8014; 
0x000a0b1e: test byte ptr [ebp - 0x7d000000], dh; in al, dx; or byte ptr [esi - 1], dl; jae 0xa0b4e; call eax; 
0x00089b09: test byte ptr [ebp - 0xf47efa8], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014c1d4: test byte ptr [ebp - 7], ch; call dword ptr [eax - 0x73]; 
0x0017476e: test byte ptr [ebp - 7], dh; call dword ptr [eax - 0x18]; 
0x0008c215: test byte ptr [ebx + 0x1ba241c], 0; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000a0cb4: test byte ptr [ebx + 0x28], 1; jne 0xa0c90; sub esp, 0xc; push eax; call edx; 
0x00075ec0: test byte ptr [ebx + 0x39000001], bh; ret; 
0x000896ac: test byte ptr [ebx + 0x5e5b0c43], 0x29; ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x000893d6: test byte ptr [ebx + 0x650c245c], -1; adc eax, 0x10; pop ebx; pop esi; ret; 
0x000ba900: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00165b75: test byte ptr [ebx - 0x118], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x000c5fb6: test byte ptr [ebx - 0x45ffffff], cl; pop ss; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x0011d44f: test byte ptr [ebx - 0x72fffff4], ah; adc dword ptr [ebx], 0x62; stc; call dword ptr [ecx + 0x51]; 
0x000f81fe: test byte ptr [ebx - 0x74000002], al; xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x0004f7d7: test byte ptr [ebx - 0x74dbdbac], -0x64; ret 0x8d2c; 
0x00130e88: test byte ptr [ebx - 0x74ffffff], bl; push ebx; and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x000a7693: test byte ptr [ebx - 0x75000000], bl; pop ebp; rol byte ptr [ecx], 1; ret; 
0x0008da26: test byte ptr [ebx - 0x76000005], dl; ret; 
0x00164bc8: test byte ptr [ebx - 0x77000000], bl; ret; 
0x0011d244: test byte ptr [ebx - 0x7cfffff8], bh; in al, dx; or byte ptr [ebp - 0x6a2307d], cl; call dword ptr [eax + 0x55]; 
0x0011d100: test byte ptr [ebx - 0x7cfffffd], dh; in al, dx; or byte ptr [ebp - 0x6a5437d], cl; call dword ptr [eax + 0x55]; 
0x0015866e: test byte ptr [ebx - 0x7cffffff], bh; in al, dx; or al, 0x57; call 0x17ab80; mov dword ptr [esp], ebp; call edi; 
0x00178af0: test byte ptr [ebx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x68a016a], cl; call dword ptr [edx - 0x77]; 
0x00177920: test byte ptr [ebx - 0x7d000000], dh; in al, dx; or byte ptr [ebp - 0x689e455], cl; call dword ptr [ebp + 0x56]; 
0x001997ba: test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0003374d: test byte ptr [ebx - 0x7f4], dh; test eax, eax; je 0x33759; call eax; 
0x0008b134: test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x001966d6: test byte ptr [ebx - 0x85494], al; sub eax, ecx; pop ebx; ret; 
0x001778a1: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0018f6fc: test byte ptr [ebx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016c000: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00101aa4: test byte ptr [ebx], al; lodsb al, byte ptr [esi]; or bh, cl; call dword ptr [eax - 0x73]; 
0x00064258: test byte ptr [ebx], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0016b5a3: test byte ptr [ebx], al; sub al, 0x33; stc; call dword ptr [eax + 0x52]; 
0x00097664: test byte ptr [ebx], bh; add byte ptr [eax], al; test eax, eax; jne 0x97677; ret; 
0x0002fe00: test byte ptr [ebx], bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; add al, 0x3b; stc; call dword ptr [eax - 1]; 
0x000398d0: test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; cmp bh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x000ce9fa: test byte ptr [ebx], dl; or dword ptr [eax], eax; add byte ptr [ebx - 0x365363], cl; jmp dword ptr [ebp - 0x75]; 
0x000a3217: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa014]; cmovne eax, edx; ret; 
0x001334a7: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xaa024]; cmovne eax, edx; ret; 
0x000bf300: test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000a3340: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174704]; cmove eax, edx; ret; 
0x000a3300: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174794]; cmove eax, edx; ret; 
0x000a5030: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x174b34]; cmove eax, edx; ret; 
0x000a3dd0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x175064]; cmove eax, edx; ret; 
0x000a5e30: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x176704]; cmove eax, edx; ret; 
0x000a5eb0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1875c4]; cmove eax, edx; ret; 
0x000a5060: test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000a5f30: test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00090833: test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ffc32: test byte ptr [ecx + 0xf000001], bh; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00094bef: test byte ptr [ecx + ebx*2], ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x17a8f314], al; xor ah, byte ptr [eax - 0x3b7cfff8]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0012d15c: test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000916ef: test byte ptr [ecx - 0x72000003], cl; xchg esp, ebx; xchg ebp, eax; stc; call dword ptr [eax - 0x73]; 
0x0006a29d: test byte ptr [ecx - 0x72954], al; lea eax, [ecx + eax - 0x1c6e86]; jmp eax; 
0x0008f45f: test byte ptr [ecx - 0x74000003], ah; je 0x8f48b; sbb al, 0x8d; xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x00186831: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00138eaa: test byte ptr [ecx - 0x7cfffffe], ah; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x000a2ca5: test byte ptr [ecx - 0x7cffffff], al; ret 0xe901; 
0x001313ca: test byte ptr [ecx - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0015ee91: test byte ptr [ecx - 0x7d000000], cl; in al, dx; or al, 0x8d; test ecx, esp; jno 0x15ee97; call dword ptr [eax - 0x18]; 
0x00131453: test byte ptr [ecx - 0x837b], cl; call dword ptr [esi + 0x6a]; 
0x000a32bb: test byte ptr [ecx - 0xcf4], dl; ret; 
0x000a328b: test byte ptr [ecx - 0xe14], dl; ret; 
0x000944d9: test byte ptr [ecx], 0; nop; nop; endbr32; xor eax, eax; ret; 
0x0008b371: test byte ptr [ecx], 0xc3; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0019cbe8: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0006a2a4: test byte ptr [ecx], al; jp 0x6a239; jecxz 0x6a2a9; jmp eax; 
0x00174bf5: test byte ptr [ecx], al; ret 0xd101; 
0x0014c1ca: test byte ptr [ecx], bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; test byte ptr [ebp - 7], ch; call dword ptr [eax - 0x73]; 
0x000adb9a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0011d1f3: test byte ptr [edi + eax - 0x137d0000], ch; or byte ptr [ebp - 0x6a2e37d], cl; call dword ptr [eax + 0x55]; 
0x0009d664: test byte ptr [edi - 0x72fffffd], cl; pop edx; or dh, dh; ret; 
0x0016ce34: test byte ptr [edi - 0x75000000], ah; inc esi; cmp al, 0x83; in al, dx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0017f494: test byte ptr [edi - 0x75000000], dl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x000d5724: test byte ptr [edi - 0x7cfffffd], al; in al, dx; or byte ptr [ebp - 0x6aa727d], cl; call dword ptr [eax + 0x57]; 
0x0017816c: test byte ptr [edi - 0x7cfffffd], bh; in al, dx; or byte ptr [ebp - 0x68a0175], cl; call dword ptr [ecx - 0x77]; 
0x001994cc: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00145d9b: test byte ptr [edi - 0x9ffffff], dl; ret 0xf08; 
0x001354d2: test byte ptr [edi - 7], ah; dec dword ptr [ebp - 0x698707a]; call dword ptr [ecx - 0x77]; 
0x00156c04: test byte ptr [edi - 7], ch; call dword ptr [eax - 0x18]; 
0x0019c883: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000cdeb8: test byte ptr [edi], -0x6b; ret 0x8eb; 
0x000637ab: test byte ptr [edi], -0x6b; ret 0xbd83; 
0x001a58e7: test byte ptr [edi], -0x6b; ret 0xc209; 
0x00103c37: test byte ptr [edi], -0x6b; ret 0xd021; 
0x000fe5a7: test byte ptr [edi], -0x6c; ret 0xd008; 
0x000542a1: test byte ptr [edi], -0x7b; xchg ebx, eax; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x0004629a: test byte ptr [edi], -0x7c; dec byte ptr [eax + eax]; add byte ptr [ebx - 0x7cefdb84], cl; ret; 
0x0004ce32: test byte ptr [edi], -0x7c; inc esp; or al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; ret; 
0x000f3b93: test byte ptr [edi], -0x7c; mov edx, 0x89000000; ret; 
0x00083e17: test byte ptr [edi], -0x7c; ret 0; 
0x001315a7: test byte ptr [edi], -0x7c; ret 0xfffb; 
0x000ed4f2: test byte ptr [edi], -0x7c; ret; 
0x000b4506: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f220a: test byte ptr [edi], 0x44; ret 0x8d50; 
0x0008d527: test byte ptr [edi], 0x49; ret; 
0x001233e4: test byte ptr [edi], ah; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop esi; arpl cx, di; call dword ptr [eax + 0x56]; 
0x000adba4: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000fa0e4: test byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7ce7dbbc], cl; ret 0x8904; 
0x0014abe4: test byte ptr [edx + 0x39000001], dh; ret 0x840f; 
0x0008e172: test byte ptr [edx + 0x80], 0x10; jne 0x8e188; xor eax, eax; add esp, 0xc; ret; 
0x000309e9: test byte ptr [edx + 0xf000001], dh; mov esi, 0x893a3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x0011d2e3: test byte ptr [edx - 0x72fffff6], ch; sub dword ptr [edx], 0x5f; stc; call dword ptr [ecx + 0x51]; 
0x000f3b95: test byte ptr [edx - 0x77000000], bh; ret; 
0x00053b61: test byte ptr [edx - 0x7afffff0], dh; fisttp dword ptr [ebx - 0x365f63]; jmp dword ptr [ebp - 0x75]; 
0x00039701: test byte ptr [edx - 0x7d000000], bh; in al, dx; or byte ptr [ebp - 0x6c1c27b], cl; call dword ptr [eax + 0x53]; 
0x00103d31: test byte ptr [edx - 0x7d000000], bh; jmp dword ptr [esi]; 
0x000bbddd: test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x0019c7e9: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000acce6: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0005816d: test byte ptr [edx], 0x20; je 0x58180; add esp, 0xc; ret; 
0x00073b7d: test byte ptr [edx], 0x20; je 0x73b90; add esp, 0xc; ret; 
0x0002dfae: test byte ptr [edx], ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0008f9d6: test byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0011d151: test byte ptr [edx], bh; add eax, 0xec830000; or byte ptr [ebp - 0x6a44c7d], cl; call dword ptr [eax + 0x55]; 
0x00088a1c: test byte ptr [edx], bl; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x88a30; ret; 
0x001147f5: test byte ptr [esi + 4], bh; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011d187: test byte ptr [esi + eax - 0x137d0000], bh; or byte ptr [ebp - 0x6a3d07d], cl; call dword ptr [eax + 0x55]; 
0x000663cd: test byte ptr [esi - 0x76ffffd7], dl; ret 0x3a80; 
0x001651a3: test byte ptr [esi - 0x7c000002], bh; in al, dx; or al, 0x56; call eax; 
0x00030665: test byte ptr [esi - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0x67cf779], cl; call dword ptr [eax + 0x56]; 
0x00025e31: test byte ptr [esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0011d1be: test byte ptr [esi], 0; add byte ptr [ebx - 0x7c72f714], al; cmpsb byte ptr [esi], byte ptr es:[edi]; pop esp; stc; call dword ptr [eax + 0x55]; 
0x00085df7: test byte ptr [esi], 0x80; jne 0x85e28; add esp, 4; pop ebx; pop esi; ret; 
0x0007b310: test byte ptr [esi], 2; jne 0x7b378; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0011d3b3: test byte ptr [esi], cl; adc byte ptr [eax], al; add byte ptr [ebp - 0x69f8b7d], cl; call dword ptr [edx + 0x52]; 
0x0006d1e0: test byte ptr [esp + eax*4], ah; add byte ptr [eax], al; add al, ch; xchg ebp, eax; ret; 
0x0017818f: test byte ptr [esp + eax], cl; add byte ptr [ebx - 0x4c72f714], al; out dx, eax; jne 0x178195; call dword ptr [esi + 0x57]; 
0x00103b22: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x00154a74: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; jl 0x154aa2; sbb byte ptr [ebp - 0x6913379], cl; call dword ptr [eax - 0x18]; 
0x00095066: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000d3872: test byte ptr [esp + ebp*8], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x00154a3d: test byte ptr [esp + ebx*2], ah; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; aaa; ret; 
0x0004db85: test byte ptr [esp + ebx*4], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x00047159: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x0004ce34: test byte ptr [esp + ecx], al; add byte ptr [ebx - 0x7cdfdb84], cl; ret; 
0x001550f0: test byte ptr [esp + edx*4], ah; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x0010c20d: test byte ptr [esp + edx], ah; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x000d3c5d: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x68; call eax; 
0x0009805e: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016004a: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000c9743: test byte ptr [esp], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x39302444], cl; ret; 
0x00192914: test ch, 0x40; jne 0x1928e0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00138496: test ch, al; add dword ptr [eax], eax; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x0019f088: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000793de: test ch, bl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0004dfe2: test ch, cl; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0017795e: test ch, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x4472f714], al; out dx, eax; jne 0x177964; call dword ptr [edi + 0x56]; 
0x000adb4e: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0011d469: test ch, dh; or eax, dword ptr [eax]; add byte ptr [ebp - 0x69d987d], cl; call dword ptr [edx + 0x52]; 
0x0019286b: test cl, 0x40; jne 0x1928e0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00099623: test cl, 0x40; jne 0x99650; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0011d1a2: test cl, al; add eax, 0xec830000; or byte ptr [ebp - 0x6a38f7d], cl; call dword ptr [eax + 0x55]; 
0x0003d701: test cl, bh; call dword ptr [eax - 0x18]; 
0x0003e211: test cl, bh; call dword ptr [eax - 0x73]; 
0x0003e2dd: test cl, bh; call dword ptr [edx - 0x73]; 
0x00153275: test cl, bl; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x74fbdb84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x000ba982: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0007e412: test cl, ch; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0015ea3a: test cl, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x00044744: test cl, cl; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x00027b50: test cl, dh; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x0014e2b5: test cl, dh; call dword ptr [eax - 0x73]; 
0x0019d045: test dh, 0x20; jne 0x19d090; test dh, 0x40; jne 0x19d094; add eax, 0xf; ret; 
0x0019d04a: test dh, 0x40; jne 0x19d094; add eax, 0xf; ret; 
0x0019d297: test dh, 0x40; jne 0x19d470; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019ee32: test dh, 0x40; jne 0x19f1c1; add eax, 0xf; pop edi; ret; 
0x0019f939: test dh, 0xf; jne 0x19f9a0; lea eax, [ecx + 0xc]; ret; 
0x0019d02c: test dh, 2; jne 0x19d080; test dh, 4; jne 0x19d084; add eax, 0xb; ret; 
0x0019d031: test dh, 4; jne 0x19d084; add eax, 0xb; ret; 
0x0019d2dd: test dh, 4; jne 0x19d470; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019ee09: test dh, 4; jne 0x19f1ad; add eax, 0xb; pop edi; ret; 
0x00099486: test dh, ah; call dword ptr [eax - 0x73]; 
0x0019f0ce: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0004629c: test dh, bh; or al, 0; add byte ptr [ebx - 0x7cefdb84], cl; ret; 
0x0002d5a5: test dh, bl; add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00086665: test dh, bl; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014b880: test dh, ch; jmp dword ptr [esi - 0x70]; 
0x000cb889: test dh, dh; dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax - 0x73]; 
0x0019f855: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0019d005: test dl, 0x20; jne 0x19d070; test dl, 0x40; jne 0x19d074; add eax, 7; ret; 
0x0019d00a: test dl, 0x40; jne 0x19d074; add eax, 7; ret; 
0x0019d1f4: test dl, 0x40; jne 0x19d470; lea eax, [edi + 7]; pop edi; ret; 
0x0019ede2: test dl, 0x40; jne 0x19f199; add eax, 7; pop edi; ret; 
0x0019f862: test dl, 0xf; jne 0x19f9a0; lea eax, [ecx + 4]; ret; 
0x0019cfe6: test dl, 2; jne 0x19d060; test dl, 4; jne 0x19d064; add eax, 3; ret; 
0x0019cfeb: test dl, 4; jne 0x19d064; add eax, 3; ret; 
0x0019d23a: test dl, 4; jne 0x19d470; lea eax, [edi + 3]; pop edi; ret; 
0x0019edbc: test dl, 4; jne 0x19f185; add eax, 3; pop edi; ret; 
0x00091423: test dl, bh; add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0018a19b: test dl, bh; jmp dword ptr [esi - 0x70]; 
0x00066360: test dl, ch; or eax, 0x858b0000; mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x000715ba: test dl, ch; sbb dword ptr [eax], eax; add byte ptr [ebp - 0x457af025], al; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4f77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f4e1: test dl, cl; add eax, dword ptr [eax]; add byte ptr [ebp + 0x92c87], cl; add byte ptr [ecx - 0x9efdbbc], cl; ret 0xf04; 
0x00076799: test dl, dl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d2075: test dl, dl; je 0xd2090; mov cl, dl; and cl, 0xf; je 0xd20a0; ret; 
0x00039827: test dl, dl; jne 0x39808; ret; 
0x000a2512: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00042612: test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x00028288: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000ad1c7: test dword ptr [0x5bfffffe], edx; ret; 
0x000ad09f: test dword ptr [0x5bffffff], edi; ret; 
0x000bba0d: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x000b2cde: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x0009375e: test dword ptr [0x89000001], edi; ret 0xca83; 
0x0008b0df: test dword ptr [0x89000003], edi; ret 0xca83; 
0x000b1926: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad456: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000ad436: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00031e56: test dword ptr [0xf6ffffff], esi; ret 0x7503; 
0x00055faf: test dword ptr [eax + 0x29ffffc9], esi; ret; 
0x0014bbfa: test dword ptr [eax + 0x31000000], esp; fild dword ptr [ebx + 0xf0b023c]; xchg ebp, eax; ret; 
0x0006395f: test dword ptr [eax + 0x39fffffb], edi; ret 0x840f; 
0x000ace3b: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000acd43: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x000baf6b: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x00135255: test dword ptr [eax + 0x67], esp; stc; call dword ptr [eax - 0x18]; 
0x000b429b: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019a2b1: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000b2cbb: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00199bb1: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019d31f: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x19d3f0; lea eax, [edi + 7]; pop edi; ret; 
0x000f543e: test dword ptr [eax + eax + 0x4f60000], ecx; inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0010b8d7: test dword ptr [eax + eax + 0x5c8b0000], edi; and al, 0x60; mov eax, 0xdd; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000d1df7: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000b2d3f: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000b2d87: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d11c6: test dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax + 0x6a]; 
0x0013d250: test dword ptr [eax - 0x44], ecx; stc; call dword ptr [eax - 0x73]; 
0x00135245: test dword ptr [eax - 0x47], eax; stc; call dword ptr [eax - 0x73]; 
0x0019e9ab: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x19ea60; lea eax, [edx + 7]; ret; 
0x000cf990: test dword ptr [eax - 0x72000037], edx; inc esi; dec dword ptr [edi]; dec edi; ret 0xff31; 
0x0019e9b3: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x0019d7e3: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0002a9ba: test dword ptr [eax - 0x74000003], ecx; jl 0x2a9e6; cmp byte ptr [ebp - 0x6861379], cl; call dword ptr [eax - 0x73]; 
0x00066366: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0006425e: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00055fa9: test dword ptr [eax - 0x74000037], edi; test dword ptr [eax + 0x29ffffc9], esi; ret; 
0x00062903: test dword ptr [eax - 0x74fffffd], ebp; test dword ptr [edx + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x00180ac2: test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret 0xf6a7; 
0x000eda21: test dword ptr [eax - 0x76000005], eax; fsubr st(0); ret; 
0x000641fb: test dword ptr [eax - 0x76000005], ebp; ret 0xc085; 
0x00055fa3: test dword ptr [eax - 0x76000037], esp; test dword ptr [eax - 0x74000037], edi; test dword ptr [eax + 0x29ffffc9], esi; ret; 
0x000fc69b: test dword ptr [eax - 0x76fffffe], edx; ret; 
0x0019e1bb: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x00066344: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000ea771: test dword ptr [eax - 0x7c000005], edx; in al, dx; or al, 0x8d; and byte ptr [eax], 0x57; stc; call dword ptr [eax - 0x18]; 
0x0014d813: test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0019e593: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001994c3: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00158b8b: test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0016958f: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x000f49c3: test dword ptr [eax - 0xa000000], eax; ret 0x7420; 
0x0007d015: test dword ptr [eax], 0x428d0000; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7502; 
0x00103f69: test dword ptr [eax], eax; add al, 0; add dh, dh; ret 0xf80; 
0x000acddb: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000cc30e: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00036b5b: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbbc], cl; push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x0009b8a8: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000cc7d1: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000cb752: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0010b477: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002b746: test dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b769: test dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b76e; call dword ptr [eax - 0x73]; 
0x0002b7af: test dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, ecx; jns 0x2b7b4; call dword ptr [eax + 0x68]; 
0x0014ed03: test dword ptr [eax], eax; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0006bc8f: test dword ptr [eax], eax; add ecx, ebx; jmp ecx; 
0x00163a67: test dword ptr [eax], eax; std; jmp dword ptr [esi - 0x70]; 
0x0015c8b3: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0019ec70: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0009f164: test dword ptr [eax], ebp; mov dword ptr [0x42e8fff9], eax; mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0015b343: test dword ptr [eax], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0009f06c: test dword ptr [eax], ebx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b42e3: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9efd: test dword ptr [eax], ebx; out 0xff, eax; call dword ptr [eax + 0x50]; 
0x000ede5e: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000ea80a: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x57]; 
0x0014e73b: test dword ptr [eax], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0013c533: test dword ptr [eax], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7aebdbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xdb85; 
0x00027ee6: test dword ptr [eax], ecx; jg 0x27ee3; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [edi + edi*2], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x001556c3: test dword ptr [eax], edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00121c93: test dword ptr [eax], edi; add eax, 0x458b0000; or byte ptr [ebx + 0x3a496], cl; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x000f2420: test dword ptr [eax], edi; jmp 0xf2423; call dword ptr [eax - 1]; 
0x000c9d8b: test dword ptr [eax], edx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xff83; 
0x000367d8: test dword ptr [eax], edx; cmp eax, 0x3eea01ff; jmp edx; 
0x00090fa8: test dword ptr [eax], edx; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0015ae7b: test dword ptr [eax], esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000cadab: test dword ptr [eax], esp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xff83; 
0x00025181: test dword ptr [eax], esp; jle 0x2517e; call dword ptr [eax - 0x18]; 
0x0003971d: test dword ptr [ebp + 0x3e], eax; stc; call dword ptr [eax + 0x53]; 
0x0019b5ee: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0019a35c: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0019a17c: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x00199c4c: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x000bba81: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000b4346: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x00199fa6: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000b306f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b303f: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0009027a: test dword ptr [ebp + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x39]; 
0x0012b290: test dword ptr [ebp - 0x16000005], edx; mov ecx, 0x8bfffffb; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x1061f380]; call dword ptr [eax + 0x6a]; 
0x000b18c6: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0019d1d6: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019e336: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0019e566: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0019d836: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x0019e2e6: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0009f0d0: test dword ptr [ebp - 0x7a000002], esi; ror byte ptr [edi], 0x85; ret 0xfffe; 
0x00142536: test dword ptr [ebp - 0x7c000003], esi; ret; 
0x0019e56e: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x000df899: test dword ptr [ebp - 0x7d000000], edi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00125f15: test dword ptr [ebp - 0x7d000000], edx; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0019e5f6: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x0009efea: test dword ptr [ebp - 7], esi; call dword ptr [eax - 0x18]; 
0x0012fb24: test dword ptr [ebp - 7], esp; call dword ptr [edx + 0x52]; 
0x0019d7be: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019e33e: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0005ce50: test dword ptr [ebx + 0x41], edi; stc; call dword ptr [eax + 0x6a]; 
0x000b4558: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000d1d50: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0019d1f8: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00199d78: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000b4588: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b2ca0: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c6667: test dword ptr [ebx + eax + 0x7c830000], edx; and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000accbf: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013e38b: test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013e382: test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00106839: test dword ptr [ebx + edi*8 - 0x137c0001], ecx; or al, 0x8d; and byte ptr [eax], 0x57; stc; call dword ptr [eax - 0x18]; 
0x0012a215: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000e9951: test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x000ee0d9: test dword ptr [ebx + edi*8 - 1], ebx; call dword ptr [eax - 0x18]; 
0x0012a1d3: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x0006f4f9: test dword ptr [ebx + edi*8 - 1], ecx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; 
0x0006f4f9: test dword ptr [ebx + edi*8 - 1], ecx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef7b], cl; call dword ptr [esi - 0x18]; ret 0xbc3; 
0x000ed656: test dword ptr [ebx + edi*8 - 1], edi; call dword ptr [edx - 0x77]; 
0x00121d80: test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4af7b]; call dword ptr [eax - 0x73]; 
0x00121faa: test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; fcom dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x4e], dh; stc; call dword ptr [eax + 0x6a]; 
0x00121cc9: test dword ptr [ebx + edi*8 - 1], esi; dec dword ptr [edi]; test dword ptr [edx + eax - 0x137d0000], edx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000ed86c: test dword ptr [ebx + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x000ee420: test dword ptr [ebx + edi*8 - 1], esp; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000ed886: test dword ptr [ebx + edi*8 - 1], esp; inc dword ptr [ecx]; ret; 
0x0013a2a1: test dword ptr [ebx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x5f]; 
0x001654c7: test dword ptr [ebx - 0x3b7d0000], edi; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00128bfb: test dword ptr [ebx - 0x44ebdbb4], 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0004bf28: test dword ptr [ebx - 0x74f7dbac], 0x1402474; ret 0xf229; 
0x00045388: test dword ptr [ebx - 0x74fbdbac], 0x1382474; ret 0xf229; 
0x000e9ba5: test dword ptr [ebx - 0x7cfffff0], edi; ret; 
0x0019ee0d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x0009a1df: test dword ptr [ebx - 0x7d000000], ebx; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0017af68: test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000b1198: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x0019edae: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0018f5f2: test dword ptr [ebx], 0x8b1c0300; jmp ebx; 
0x0019a17d: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000b43f8: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ad310: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ad330: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b42c0: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bd780: test dword ptr [ecx + 0x54], ecx; stc; call dword ptr [eax - 0x18]; 
0x00199e80: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000a0cce: test dword ptr [ecx + 0x5bfff837], edi; pop esi; pop edi; ret; 
0x000ad23b: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000ad143: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000d1e12: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000b2d62: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x0019b562: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0019e28a: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b2e92: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b4382: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0005d0ee: test dword ptr [ecx + eax*2 - 7], ebp; call dword ptr [ebx + 0x50]; 
0x000d1d97: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000bd32c: test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d1d67: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0008ade3: test dword ptr [ecx + eax], esp; add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x000ce6ee: test dword ptr [ecx + ecx*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x00140fe8: test dword ptr [ecx + edi*8], edi; call dword ptr [eax + 0x51]; 
0x00173b5b: test dword ptr [ecx - 0x16000004], ebp; ret; 
0x00050a74: test dword ptr [ecx - 0x762e763a], 0x89e6f7e8; ret; 
0x000ce432: test dword ptr [ecx - 0x76fffff5], ecx; rol byte ptr [ebx - 0x361f7b], 1; call dword ptr [eax]; 
0x0008bab2: test dword ptr [ecx - 0x77000000], edi; ret 0xca83; 
0x00092bd1: test dword ptr [ecx - 0x77000000], edx; ret 0xf283; 
0x00197fb0: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00164675: test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011b832: test dword ptr [ecx - 0x7d000000], edi; in al, dx; or al, 0x89; ret; 
0x000409e3: test dword ptr [ecx - 0xa000000], ecx; ret 0xf03; 
0x0019eeca: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x00066d9e: test dword ptr [ecx], 0x83d689d2; in al, dx; or byte ptr [ebx - 0x58b63], cl; call dword ptr [esi + 0x50]; 
0x0005de99: test dword ptr [ecx], eax; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x000b44e2: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b43ca: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001271e9: test dword ptr [ecx], esp; stc; call dword ptr [eax - 0x18]; 
0x000ad125: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000d1ddc: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000b476c: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000b473c: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000b445c: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b4364: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x0017d31f: test dword ptr [edi + 0x77], edi; ljmp 0:0x8b8ff; add esp, 0xc; ret; 
0x000b479c: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b448c: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b2e6f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00199df5: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00027ef0: test dword ptr [edi + edi*2], ecx; stc; jmp dword ptr [esi - 0x77]; 
0x0012aeb5: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x1061f380]; call dword ptr [eax + 0x6a]; 
0x0009fcd1: test dword ptr [edi + edi*8 - 1], eax; jmp dword ptr [ebp - 0x5f]; 
0x000358e3: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [eax - 0x73]; 
0x00175e4c: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [ecx + 0x6a]; 
0x0005960f: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [edi]; mov dh, 0x50; or al, 0x89; sal dh, 1; ret 0xf40; 
0x00175ded: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax + 0x6a]; 
0x000a8b2d: test dword ptr [edi + edi*8 - 1], ebx; inc dword ptr [ebx + 0x440ffff8]; ret; 
0x0016b19a: test dword ptr [edi + edi*8 - 1], ecx; call dword ptr [eax + 0x56]; 
0x0013ac34: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x6a]; 
0x0013128f: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [ebx + 0x6a]; 
0x00131455: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [esi + 0x6a]; 
0x00175dab: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000358f0: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax - 0x73]; 
0x0012ff7e: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [edi - 0x18]; 
0x0003242d: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x0016b194: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x00025de3: test dword ptr [edi + edi*8 - 1], esi; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0005a0fb: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x0016b304: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x000dfd64: test dword ptr [edi - 0x48000000], esi; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a030: test dword ptr [edi - 0x74000002], esi; jl 0x2a05c; cmp al, 0x8d; xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00170a6a: test dword ptr [edi - 0x7d000000], ebx; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0019e5cc: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001153cf: test dword ptr [edi - 0x7d000000], esp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b128c: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00103f72: test dword ptr [edi - 0x9fffffd], esi; ret 0xf02; 
0x0019eef4: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x0009efd7: test dword ptr [edi - 7], esp; call dword ptr [eax - 0x73]; 
0x0019c814: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001899d1: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b47cc: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000d1d7c: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000b44bc: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b1104: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0003f557: test dword ptr [edx + 0x3c], ebx; stc; dec dword ptr [ecx - 0x14f7dbbc]; ror dword ptr [ecx - 0x76fbdbbc], cl; ret 0x8d8d; 
0x0003f341: test dword ptr [edx + 0x3c], ebx; stc; dec dword ptr [ecx - 0x76f7dbbc]; ret 0x77e9; 
0x0003f431: test dword ptr [edx + 0x3c], ebx; stc; inc dword ptr [ebp - 0x277af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x0003f3f1: test dword ptr [edx + 0x3c], ebx; stc; inc dword ptr [ebp - 0x767af00a]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x000bbb8c: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000aca51: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b2f79: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x000b2f49: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x000b2e49: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x000b2c59: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x0019e4a9: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x19e6d0; mov eax, ecx; ret; 
0x000acd89: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b3099: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00121ccf: test dword ptr [edx + eax - 0x137d0000], edx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x00152072: test dword ptr [edx + eax], ecx; add byte ptr [ebx - 0x7cd7db84], cl; ret 0x8301; 
0x000acd67: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000acdb7: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000f234a: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x690da68], cl; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x000f2400: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax + 0x53]; 
0x000f245d: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6a89480], cl; call dword ptr [eax - 1]; 
0x000f25a1: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebx - 0x73], dl; adc byte ptr [edi + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x0011c871: test dword ptr [edx + ebx*2 - 7], ecx; call dword ptr [eax - 0x39]; 
0x00066713: test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax + 0x53]; 
0x000e8cb4: test dword ptr [edx + edi*8 - 1], eax; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xf8c1; 
0x00062e67: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000681aa: test dword ptr [edx + edi*8 - 1], ebp; inc dword ptr [ecx]; ret; 
0x00067702: test dword ptr [edx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x17]; 
0x00066191: test dword ptr [edx + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x000f02e3: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [eax - 0x75]; 
0x0006263b: test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebx + 0x15c80]; add byte ptr [ecx - 0x56b7b], cl; call dword ptr [edi - 0x18]; 
0x00062909: test dword ptr [edx + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x000ff9ad: test dword ptr [edx - 0x74000008], ecx; mov esp, 0xa024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x001a37a1: test dword ptr [edx - 0x76fffff9], edx; ret 0x6c8d; 
0x00092dd1: test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x001011a5: test dword ptr [edx - 0x7c000005], esi; ret 0x8301; 
0x000f9c51: test dword ptr [edx - 0x7c000006], esi; ret; 
0x00031f09: test dword ptr [edx - 0x9000002], eax; ret 0xf03; 
0x00031ff9: test dword ptr [edx - 0x9000003], edx; ret 0xf03; 
0x0019eddd: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x000b30f9: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x0019a561: test dword ptr [edx], ebp; adc dl, dh; call dword ptr [ebx - 0x18]; 
0x00194371: test dword ptr [edx], ebx; jb 0x194367; call dword ptr [ebx - 0x18]; 
0x00194371: test dword ptr [edx], ebx; jb 0x194367; call dword ptr [ebx - 0x18]; mov ebp, 0x81fffe92; ret; 
0x000ac9c1: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0019aa61: test dword ptr [edx], ecx; or al, 0xf2; call dword ptr [ebx - 0x18]; 
0x000b2de9: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00107413: test dword ptr [edx], esi; adc byte ptr [eax], al; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ecx; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x000b30c9: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000ede0a: test dword ptr [edx], esp; or al, byte ptr [eax]; add byte ptr [ebx - 0x49363], cl; inc dword ptr [ebx - 0x17acf314]; ret 0xfce7; 
0x000acd25: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x0013d263: test dword ptr [esi + 0x69], ebp; stc; call dword ptr [eax - 0x18]; 
0x0013d263: test dword ptr [esi + 0x69], ebp; stc; call dword ptr [eax - 0x18]; mov dl, 0x6a; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0017bc49: test dword ptr [esi + 0xf000002], esp; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x000ac97d: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b2da5: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b2c7d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b43a5: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b467f: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003ef13: test dword ptr [esi + ebx*8 - 0x20], edi; call dword ptr [eax - 0x73]; 
0x000319b9: test dword ptr [esi + edi*8 - 1], ebx; push dword ptr [ebx]; cmp dword ptr [eax], 0x9000011; ret 0x840f; 
0x001085f1: test dword ptr [esi + edi*8 - 1], edx; dec dword ptr [ebx - 0x72efdb84]; xchg esp, edx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00031997: test dword ptr [esi + edi*8 - 1], edx; push dword ptr [ebx]; xor dword ptr [eax], 0x9000011; ret 0x850f; 
0x000e3501: test dword ptr [esi + edx*2 - 7], eax; call dword ptr [eax - 0x18]; 
0x0019d1c5: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0019d80d: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x001a3739: test dword ptr [esi - 0x76fffff9], edx; ret 0x6c8d; 
0x0019ee36: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x0019ede6: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x001196e1: test dword ptr [esi - 0x7d000000], eax; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000b1596: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b108d: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x0019edd4: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x0019eefd: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x0019f85d: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x0009e58d: test dword ptr [esi], eax; add dword ptr [eax], eax; add dh, dh; ret; 
0x0019d22d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000acc9d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b2dc5: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00090ec8: test dword ptr [esp + edx*4 - 7], ebp; call dword ptr [eax - 0x18]; 
0x000426b2: test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x00041503: test eax, 0x2effffe2; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000b2b99: test eax, 0x30010d1; or al, 0x99; jmp ecx; 
0x000f7ffe: test eax, 0x4b8; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9eeb; 
0x0015538c: test eax, 0x81000282; ret; 
0x000859ab: test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00197fb1: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00141a59: test eax, 0xbd90838d; stc; call dword ptr [eax - 0x73]; 
0x0007a7c7: test eax, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c81a1: test eax, 0xe9fffff5; ret 0xfff5; 
0x00173b5c: test eax, 0xe9fffffc; ret; 
0x001051ce: test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0011c0fb: test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0011b4bc: test eax, eax; cmove eax, edx; ret; 
0x00042241: test eax, eax; cmovne eax, edx; ret; 
0x00119943: test eax, eax; cmovns eax, edx; ret; 
0x0012cfec: test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0010265b: test eax, eax; je 0x102592; call eax; 
0x001026b3: test eax, eax; je 0x1025e7; call eax; 
0x0011a7a6: test eax, eax; je 0x11a7f0; call eax; 
0x0011a8e8: test eax, eax; je 0x11a988; call eax; 
0x0011b9c8: test eax, eax; je 0x11b9cd; ret; 
0x0011c0dc: test eax, eax; je 0x11c0e8; add esp, 0xc; ret; 
0x0011c12c: test eax, eax; je 0x11c138; add esp, 0xc; ret; 
0x0011e554: test eax, eax; je 0x11e55a; mov dword ptr [eax], edx; ret; 
0x0012319c: test eax, eax; je 0x1231a4; test edx, edx; jne 0x1231a8; ret; 
0x001231c0: test eax, eax; je 0x1231c8; test edx, edx; jne 0x1231d0; ret; 
0x001231ec: test eax, eax; je 0x1231f8; jmp 0x1227b0; lea esi, [esi]; ret; 
0x00124590: test eax, eax; je 0x12459d; pop esi; pop ebx; jl 0x24e60; ret; 
0x00130b18: test eax, eax; je 0x130b40; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x001331f3: test eax, eax; je 0x133200; add esp, 8; pop ebx; ret; 
0x0013b354: test eax, eax; je 0x13b360; add eax, 0x10; jmp 0x13a9b0; ret; 
0x0013b378: test eax, eax; je 0x13b388; jmp 0x13a9b0; lea esi, [esi]; ret; 
0x001466d6: test eax, eax; je 0x1466e0; add esp, 0x18; pop ebx; ret; 
0x001481e3: test eax, eax; je 0x1481ec; cmp dword ptr [eax + 8], edx; jne 0x1481e0; ret; 
0x00157c73: test eax, eax; je 0x157c80; sub esp, 0xc; push esi; call eax; 
0x00158003: test eax, eax; je 0x158010; sub esp, 0xc; push esi; call eax; 
0x00163b8a: test eax, eax; je 0x163b97; sub esp, 0xc; push esi; call eax; 
0x00163e13: test eax, eax; je 0x163efd; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016405c: test eax, eax; je 0x164069; sub esp, 0xc; push esi; call eax; 
0x0016403b: test eax, eax; je 0x1640d4; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016418c: test eax, eax; je 0x1641a3; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00164335: test eax, eax; je 0x164346; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00164379: test eax, eax; je 0x164388; add esp, 8; pop ebx; ret; 
0x00164abc: test eax, eax; je 0x164a4d; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00164f64: test eax, eax; je 0x164f0c; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00164f87: test eax, eax; je 0x164f94; sub esp, 0xc; push edi; call eax; 
0x001651a0: test eax, eax; je 0x165066; sub esp, 0xc; push esi; call eax; 
0x001652a3: test eax, eax; je 0x1652b0; sub esp, 0xc; push esi; call eax; 
0x00165cc3: test eax, eax; je 0x165cd0; sub esp, 0xc; push esi; call eax; 
0x00165e46: test eax, eax; je 0x165e68; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00166026: test eax, eax; je 0x16612b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00168bf9: test eax, eax; je 0x168c0c; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x001695ad: test eax, eax; je 0x1695ba; sub esp, 0xc; push esi; call eax; 
0x001697ea: test eax, eax; je 0x1697fa; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016aac7: test eax, eax; je 0x16aad4; sub esp, 0xc; push esi; call eax; 
0x0016aaa8: test eax, eax; je 0x16aae9; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016ac92: test eax, eax; je 0x16ac9f; sub esp, 0xc; push edi; call eax; 
0x0016c01b: test eax, eax; je 0x16c028; sub esp, 0xc; push ebp; call eax; 
0x0016c3b6: test eax, eax; je 0x16c3c6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0016ce31: test eax, eax; je 0x16cee0; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push edi; call dword ptr [eax + 0x10]; 
0x0016e292: test eax, eax; je 0x16e2a0; pop ebx; pop esi; pop edi; ret; 
0x0016f22a: test eax, eax; je 0x16f23a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016f943: test eax, eax; je 0x16f953; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0016f9c5: test eax, eax; je 0x16fa00; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0017a4ff: test eax, eax; je 0x17a510; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00033753: test eax, eax; je 0x33759; call eax; 
0x0003cb03: test eax, eax; je 0x3cb17; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00041499: test eax, eax; je 0x414a8; add esp, 8; pop ebx; ret; 
0x00041db9: test eax, eax; je 0x41dc3; bsr eax, eax; add eax, 1; ret; 
0x00041dda: test eax, eax; je 0x41de4; bsr eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00041dfa: test eax, eax; je 0x41e04; bsr eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00041e69: test eax, eax; je 0x41e73; bsr eax, eax; add eax, 1; ret; 
0x00042088: test eax, eax; je 0x42095; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x000420a8: test eax, eax; je 0x420b5; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00057730: test eax, eax; je 0x57740; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00076558: test eax, eax; je 0x76570; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x000779e0: test eax, eax; je 0x779f0; sub eax, 1; mov dword ptr [edx + 0x1a24], eax; ret; 
0x000818b0: test eax, eax; je 0x818c0; sub eax, 1; mov dword ptr [edx + 0x1a38], eax; ret; 
0x00082f05: test eax, eax; je 0x82f10; pop ebx; pop esi; pop edi; ret; 
0x00085c2a: test eax, eax; je 0x85c42; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00086eb0: test eax, eax; je 0x86ec0; sub eax, 1; mov dword ptr [edx + 0x1a58], eax; ret; 
0x00087931: test eax, eax; je 0x87948; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0009229f: test eax, eax; je 0x922b5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000bb356: test eax, eax; je 0xbb370; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000d6db5: test eax, eax; je 0xd6e30; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000df875: test eax, eax; je 0xdf8a8; sub esp, 8; push edi; push ebx; call eax; 
0x000e058a: test eax, eax; je 0xe05a0; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x00124377: test eax, eax; jl 0x24e60; je 0x124382; ret; 
0x00102cf5: test eax, eax; jne 0x102d28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00102d99: test eax, eax; jne 0x102dd0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00102e9e: test eax, eax; jne 0x102ed0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00102f4e: test eax, eax; jne 0x102f80; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00103015: test eax, eax; jne 0x103048; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010acda: test eax, eax; jne 0x10ad00; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010adde: test eax, eax; jne 0x10adf0; add esp, 4; pop ebx; pop esi; ret; 
0x0010af5a: test eax, eax; jne 0x10af80; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011aaba: test eax, eax; jne 0x11aae0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011b00a: test eax, eax; jne 0x11b030; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x0011ef0f: test eax, eax; jne 0x11eecc; add esp, 0xc; ret; 
0x00121563: test eax, eax; jne 0x1215a0; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00121643: test eax, eax; jne 0x121680; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x001217f9: test eax, eax; jne 0x121830; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x001218a9: test eax, eax; jne 0x1218e0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001227d5: test eax, eax; jne 0x1227f8; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00123838: test eax, eax; jne 0x123880; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00130694: test eax, eax; jne 0x130684; add esp, 4; pop ebx; pop esi; ret; 
0x00131cdb: test eax, eax; jne 0x131cf0; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x131cf8; ret; 
0x001374eb: test eax, eax; jne 0x137500; mov eax, ebx; pop ebx; ret; 
0x00141b3f: test eax, eax; jne 0x141b50; pop ebx; pop esi; pop edi; ret; 
0x00141b85: test eax, eax; jne 0x141b70; pop ebx; pop esi; pop edi; ret; 
0x0014771e: test eax, eax; jne 0x147730; add esp, 4; pop ebx; pop esi; ret; 
0x001481d8: test eax, eax; jne 0x1481e7; ret; 
0x00157fe4: test eax, eax; jne 0x157fd0; add esp, 4; pop ebx; pop esi; ret; 
0x001645cf: test eax, eax; jne 0x1645f0; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001647ab: test eax, eax; jne 0x1647e0; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001654ab: test eax, eax; jne 0x1654b8; add esp, 4; pop ebx; pop esi; ret; 
0x0016f187: test eax, eax; jne 0x16f170; add esp, 8; pop ebx; ret; 
0x0017c34a: test eax, eax; jne 0x17c358; add esp, 4; pop ebx; pop esi; ret; 
0x0019ddb0: test eax, eax; jne 0x19de80; xor eax, eax; pop edi; ret; 
0x0019e6f8: test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x0019e248: test eax, eax; jne 0x19e480; xor eax, eax; ret; 
0x0019e287: test eax, eax; jne 0x19e500; xor eax, eax; ret; 
0x0003c0b8: test eax, eax; jne 0x3c0c8; add esp, 8; pop ebx; ret; 
0x0003c367: test eax, eax; jne 0x3c370; add esp, 8; pop ebx; ret; 
0x0003c42a: test eax, eax; jne 0x3c450; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00057719: test eax, eax; jne 0x57734; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005e5d7: test eax, eax; jne 0x5e5e8; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0007e24d: test eax, eax; jne 0x7e260; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00081890: test eax, eax; jne 0x818b4; mov dword ptr [edx + 0x1a3c], 0; mov dword ptr [edx + 0x1a34], 0; ret; 
0x00085b8a: test eax, eax; jne 0x85b80; ret; 
0x00086a28: test eax, eax; jne 0x86a20; ret; 
0x00088908: test eax, eax; jne 0x88910; ret; 
0x00097668: test eax, eax; jne 0x97677; ret; 
0x000a0c53: test eax, eax; jne 0xa0c48; xor eax, eax; ret; 
0x000a0d21: test eax, eax; jne 0xa0d18; mov eax, ecx; ret; 
0x000a24f8: test eax, eax; jne 0xa2503; ret; 
0x000bad42: test eax, eax; jne 0xbada0; xor eax, eax; pop edi; ret; 
0x000bad08: test eax, eax; jne 0xbadc0; xor eax, eax; pop edi; ret; 
0x000bafd8: test eax, eax; jne 0xbb050; xor eax, eax; ret; 
0x000bb007: test eax, eax; jne 0xbb070; xor eax, eax; ret; 
0x000bb49f: test eax, eax; jne 0xbb4e0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000d2245: test eax, eax; jne 0xd223c; xor edx, edx; mov eax, edx; ret; 
0x000f2197: test eax, eax; jne 0xf21a0; add esp, 8; pop ebx; ret; 
0x000f2c29: test eax, eax; jne 0xf2c48; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001279f4: test eax, eax; js 0x127a00; add esp, 8; pop ebx; ret; 
0x0017703b: test eax, eax; js 0x177048; add esp, 4; pop ebx; pop esi; ret; 
0x0017fe93: test eax, eax; js 0x17fea0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007ea7e: test eax, eax; js 0x7ea88; ret; 
0x00093f23: test eax, eax; js 0x93f30; mov dword ptr [edx + 0x3ad4], eax; xor eax, eax; ret; 
0x00101fd7: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x00050463: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0014d232: test eax, eax; sete al; add esp, 0xc; ret; 
0x00167ba4: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00165eb5: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0016641d: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00080b5d: test eax, eax; setne dl; mov eax, edx; ret; 
0x000acd03: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0003f439: test eax, ebx; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x0005afbb: test eax, ecx; add al, byte ptr [eax]; add dh, dh; ret 0xf50; 
0x00027f74: test eax, edi; cmp cl, bh; call dword ptr [edi - 1]; 
0x000b2d03: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ace0b: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x0008be5e: test ebp, ebp; add dword ptr [eax], eax; add dh, dh; ret; 
0x0009a3fa: test ebp, ebp; je 0x9a470; mov ecx, dword ptr [esp + 0x74]; lea esi, [esp + 0x3c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a0be3: test ebp, ebp; jne 0xa0b39; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x0010497d: test ebp, ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x64f837d], cl; call dword ptr [eax - 0x73]; 
0x0019d1de: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0008c59e: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret; 
0x001939ac: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0015b5b1: test ebp, edi; jmp dword ptr [esi - 0x70]; 
0x000b42fe: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b1136: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000baf46: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00054f66: test ebx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x36374b], cl; call dword ptr [edi - 1]; 
0x00091152: test ebx, ebx; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00091152: test ebx, ebx; dec edi; stc; call dword ptr [eax - 0x18]; ret; 
0x0017a2a5: test ebx, ebx; je 0x17a2d0; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x0017a32c: test ebx, ebx; je 0x17a358; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x0012ce5a: test ebx, ebx; jne 0x12ce68; add esp, 4; pop ebx; pop esi; ret; 
0x0014077c: test ebx, ebx; jne 0x140748; mov eax, 1; pop ebx; ret; 
0x0017d7c2: test ebx, ebx; jne 0x17d7d0; add esp, 8; pop ebx; ret; 
0x0017f0ae: test ebx, ebx; jne 0x17f0c0; add esp, 8; pop ebx; ret; 
0x00082f3e: test ebx, ebx; jne 0x82f50; add esp, 8; pop ebx; ret; 
0x000a2303: test ebx, ebx; jne 0xa2317; pop ebx; pop esi; pop edi; ret; 
0x0009a124: test ebx, ebx; jns 0x9a12c; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x0009a03a: test ebx, ebx; js 0x9a068; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000b4428: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb7ab: test ecx, 0xff0000; je 0xbb7b4; inc eax; pop edi; ret; 
0x000d1db2: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b0e42: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000b4712: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x001642af: test ecx, ebp; ret 0xfffe; 
0x001023b3: test ecx, ecx; je 0x1023d0; cmp byte ptr [esp + 0x17], 0; jne 0x102460; call ecx; 
0x0011e526: test ecx, ecx; je 0x11e52d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0012da1c: test ecx, ecx; je 0x12da28; xor eax, eax; pop ebx; ret; 
0x00131ce1: test ecx, ecx; je 0x131cf8; ret; 
0x0003d6ae: test ecx, ecx; je 0x3d6d8; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0007fda1: test ecx, ecx; je 0x7fda8; mov byte ptr [edx], 0; pop ebx; ret; 
0x00091420: test ecx, ecx; je 0x91822; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000bb30d: test ecx, ecx; je 0xbb320; bsf ecx, ecx; add eax, ecx; ret; 
0x0012bb08: test ecx, ecx; jne 0x12bb18; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bb83: test ecx, ecx; jne 0x12bb90; mov eax, edx; pop ebx; pop esi; ret; 
0x0012bd77: test ecx, ecx; jne 0x12bd80; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c3cc: test ecx, ecx; jne 0x12c3d8; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c42c: test ecx, ecx; jne 0x12c438; mov eax, edx; pop ebx; pop esi; ret; 
0x0012c617: test ecx, ecx; jne 0x12c620; mov eax, edx; pop ebx; pop esi; ret; 
0x00165693: test ecx, ecx; jne 0x1656b8; mov dword ptr [eax], 0; pop ebx; ret; 
0x0017c30e: test ecx, ecx; jne 0x17c318; ret; 
0x0009ab25: test ecx, ecx; jne 0x9ab30; add esp, 8; pop ebx; ret; 
0x000d2176: test ecx, ecx; jne 0xd2158; add eax, 1; ret; 
0x000d214c: test ecx, ecx; jne 0xd2172; ret; 
0x00118aac: test ecx, ecx; js 0x118ab8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000f2be8: test ecx, ecx; js 0xf2bf0; ret; 
0x0004780b: test ecx, edi; call dword ptr [eax - 0x18]; 
0x000400dd: test ecx, edi; call dword ptr [eax - 0x73]; 
0x001713cd: test ecx, edx; stc; call dword ptr [eax + 0x6a]; 
0x00090e78: test ecx, esi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x0015ee9a: test ecx, esp; jno 0x15ee97; call dword ptr [eax - 0x18]; 
0x000b1164: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000b125c: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0019e750: test edi, edi; je 0x19e7b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0005dac7: test edi, edi; je 0x5daf0; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000bb110: test edi, edi; je 0xbb170; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00132e3e: test edi, edi; jne 0x132e50; pop ebx; pop esi; pop edi; ret; 
0x000a0ccb: test edi, edi; jne 0x2448c; pop ebx; pop esi; pop edi; ret; 
0x0003644d: test edi, edi; jne 0x36420; pop ebx; pop esi; pop edi; ret; 
0x001050f0: test edi, edi; mov edx, dword ptr [esp + 0x88]; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000cfb26: test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36374b]; call dword ptr [edi - 1]; 
0x0013825c: test edi, esp; cmp cl, bh; call dword ptr [eax + 0x53]; 
0x0014131d: test edi, esp; cmp cl, bh; call dword ptr [eax + 0x57]; 
0x0011c86a: test edi, esp; cmp cl, bh; call dword ptr [eax - 0x73]; 
0x000b3011: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00196881: test edx, ebp; dec ebp; bnd call dword ptr [ebx - 0x18]; 
0x000bb3d1: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x000b2d21: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b4321: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005cf97: test edx, ecx; inc ecx; stc; call dword ptr [ecx + 0x50]; 
0x0005defb: test edx, edi; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x000b3129: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00125339: test edx, edx; je 0x125370; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00140f76: test edx, edx; je 0x140f88; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00167ce6: test edx, edx; je 0x167cf0; add esp, 4; pop ebx; pop esi; ret; 
0x00167db6: test edx, edx; je 0x167dc0; add esp, 4; pop ebx; pop esi; ret; 
0x00167e76: test edx, edx; je 0x167e80; add esp, 4; pop ebx; pop esi; ret; 
0x0016daab: test edx, edx; je 0x16dabe; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0019b1eb: test edx, edx; je 0x19b1d0; add eax, ecx; pop ebx; pop esi; ret; 
0x00024bb4: test edx, edx; je 0x24bb9; ret; 
0x00033547: test edx, edx; je 0x3354d; call edx; 
0x00033a17: test edx, edx; je 0x33a25; mov dword ptr [esp + 0x14], eax; call edx; 
0x0004256d: test edx, edx; je 0x42577; bsr eax, edx; xor eax, 0x1f; ret; 
0x0004258d: test edx, edx; je 0x42597; bsr eax, edx; xor eax, 0x1f; ret; 
0x00088876: test edx, edx; je 0x88888; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008896b: test edx, edx; je 0x88980; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00089d43: test edx, edx; je 0x89d80; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008aa02: test edx, edx; je 0x8aa38; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000bb0b8: test edx, edx; je 0xbb090; bsr ecx, edx; add eax, ecx; ret; 
0x001231a0: test edx, edx; jne 0x1231a8; ret; 
0x001231c4: test edx, edx; jne 0x1231d0; ret; 
0x00171f30: test edx, edx; jne 0x171f40; add esp, 0xc; ret; 
0x001720a0: test edx, edx; jne 0x1720b0; add esp, 0xc; ret; 
0x0017c659: test edx, edx; jne 0x17c668; add esp, 8; pop ebx; ret; 
0x0019ee9e: test edx, edx; jne 0x19eeb0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0007adfa: test edx, edx; jne 0x7adf0; ret; 
0x00084dda: test edx, edx; jne 0x84dd0; ret; 
0x00088d8d: test edx, edx; jne 0x88da0; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008a761: test edx, edx; jne 0x8a780; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0009207c: test edx, edx; jne 0x92090; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000b2c19: test edx, edx; jne 0xb2b8b; call 0x17d651; add ecx, 0x10d11a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4259: test edx, edx; jne 0xb41cb; call 0x17d651; add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba1f9: test edx, edx; jne 0xba16b; call 0x17d651; add ecx, 0x105e6e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000be532: test edx, edx; jne 0xbe528; ret; 
0x000d1f15: test edx, edx; jne 0xd1f08; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d226a: test edx, edx; jne 0xd2260; mov eax, ecx; pop ebx; ret; 
0x000d7a2b: test edx, edx; jne 0xd7a38; add esp, 4; pop ebx; pop esi; ret; 
0x00090104: test edx, edx; jns 0x9028f; xor ecx, ecx; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000df8c8: test edx, edx; jns 0xdf940; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000426b3: test edx, edx; mov edx, 0x10; cmove eax, edx; ret; 
0x00042630: test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0003cde2: test edx, edx; sete al; ret; 
0x0005b6b9: test edx, esi; add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x000938b9: test edx, esi; add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x00101710: test edx, esi; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x00044aed: test esi, ebp; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xf3b0bf7], cl; xchg ebp, eax; ret 0xe083; 
0x000bac6d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0002e854: test esi, ebp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0019d1cd: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000acce5: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0011db8a: test esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0010a48a: test esi, esi; je 0x10a4a5; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000d6f01: test esi, esi; je 0xd6f50; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e943a: test esi, esi; je 0xe9455; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000ebdba: test esi, esi; je 0xebdd5; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000ecb0a: test esi, esi; je 0xecb25; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000ef40a: test esi, esi; je 0xef425; sub esp, 8; push eax; push dword ptr [ebp - 0x5e8]; call esi; 
0x000f015a: test esi, esi; je 0xf0175; sub esp, 8; push eax; push dword ptr [ebp - 0x5f8]; call esi; 
0x001553bb: test esi, esi; jne 0x1553a0; pop ebx; pop esi; pop edi; ret; 
0x00025fed: test esi, esi; jne 0x25fd4; add esp, 4; pop ebx; pop esi; ret; 
0x0003f67c: test esi, esi; jne 0x3f664; add esp, 4; pop ebx; pop esi; ret; 
0x000865ef: test esi, esi; jne 0x865d8; add esp, 4; pop ebx; pop esi; ret; 
0x0008c1ed: test esi, esp; add dword ptr [eax], eax; add dh, dh; ret; 
0x000aca17: test esp, eax; add eax, 0x5b5f0000; ret; 
0x0019edb7: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0019a69f: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000ccea1: test esp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0019fa03: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0019d1ef: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000d1dc7: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0002d48f: test esp, esi; add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00042221: tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004260e: tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x000426ae: tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0004262c: tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0004223a: tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x001a02e4: tzcnt edx, edx; add eax, edx; ret; 
0x001a02f0: tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x0018c705: ud0; inc dword ptr [ecx + 0x42210c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018c63e: ud0; inc dword ptr [ecx + 0x422d7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016e5e9: ud1; ret; 
0x0002444d: ud2; cmp dword ptr [ebp - 0x30], 0; je 0x24470; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00140c9c: verr word ptr [ebp - 0x75]; adc eax, 0; mov eax, dword ptr [eax + 0x1c0]; mov eax, dword ptr [edx + eax]; ret; 
0x00056881: wait; aam 0xfd; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x000c19b9: wait; add al, 0; add byte ptr [ebx - 0x7af7dbbc], cl; ror byte ptr [edi], 0x85; ret; 
0x0009a1e0: wait; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0005d366: wait; add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000a0540: wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0005a81a: wait; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0019a5e5: wait; jl 0x19a5b8; stc; jmp dword ptr [esi + 0xf]; 
0x0019a7e5: wait; jl 0x19a7b8; stc; jmp dword ptr [esi + 0xf]; 
0x0019aaf2: wait; jl 0x19aac5; stc; jmp dword ptr [esi + 0xf]; 
0x0019ad43: wait; jl 0x19ad16; stc; jmp dword ptr [esi + 0xf]; 
0x0016ae3f: wait; jmp 0x16ae41; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00024e9a: wait; mov edi, 0xec830020; adc byte ptr [eax - 0x25], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6899380], cl; call dword ptr [eax + 0x6a]; 
0x0017ea9b: wait; out dx, eax; jmp dword ptr [ecx]; 
0x0019a5c5: wait; pop esp; sar cl, 1; jmp dword ptr [esi + 0xf]; 
0x000b2b27: wait; rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00134a9b: wait; ret; 
0x0009b184: xchg ah, ah; cdq; stc; call dword ptr [eax + 0x6a]; 
0x000905c3: xchg ah, al; xchg ebp, eax; stc; call dword ptr [eax + 0x68]; 
0x000905ec: xchg ah, al; xchg ebp, eax; stc; call dword ptr [eax + 0x6a]; 
0x0009069e: xchg ah, al; xchg ebp, eax; stc; call dword ptr [eax - 0x73]; 
0x000c4976: xchg ah, bl; into; stc; call dword ptr [eax + 0x57]; 
0x00028d3e: xchg ah, ch; jp 0x28d3b; call dword ptr [eax - 0x73]; 
0x00028dd5: xchg ah, ch; jp 0x28dd2; call dword ptr [eax - 0x73]; 
0x00028ecd: xchg ah, ch; jp 0x28eca; call dword ptr [eax - 0x73]; 
0x00028ef0: xchg ah, ch; jp 0x28eed; call dword ptr [eax + 0x68]; 
0x00028f13: xchg ah, ch; jp 0x28f10; call dword ptr [eax + 0x68]; 
0x000546d2: xchg ah, ch; stc; call dword ptr [eax + 0x57]; 
0x000be327: xchg ah, ch; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00057f9f: xchg ah, ch; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00073e0a: xchg ah, cl; mov cl, bh; call dword ptr [eax - 0x18]; 
0x00073e0a: xchg ah, cl; mov cl, bh; call dword ptr [eax - 0x18]; or edi, edi; sti; jmp dword ptr [esi - 0x70]; 
0x0012b125: xchg ah, cl; popfd; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0009bd41: xchg ah, dh; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00108ae9: xchg ah, dl; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x000c340b: xchg ah, dl; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0009c7af: xchg al, al; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0005a863: xchg al, al; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0009c6ad: xchg al, al; popfd; stc; call dword ptr [eax - 0x18]; 
0x0009c7c2: xchg al, al; push ecx; stc; call dword ptr [eax - 0x18]; 
0x001522b8: xchg al, bh; ret 0xfff9; 
0x000c24df: xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c34f4: xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00091e68: xchg al, bh; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0005a784: xchg al, ch; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0002750d: xchg al, cl; jle 0x2750a; call dword ptr [eax - 0x73]; 
0x0002753d: xchg al, cl; jle 0x2753a; call dword ptr [eax - 0x73]; 
0x000d0e61: xchg al, dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a5e72: xchg bh, ah; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0013192f: xchg bh, al; stc; call dword ptr [ecx + 0x50]; 
0x00197fbc: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000904d9: xchg bh, bh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c33e8: xchg bh, bh; push esp; stc; call dword ptr [eax - 0x18]; 
0x000a086d: xchg bh, cl; push ebx; stc; call dword ptr [ebx + 0x50]; 
0x00131b73: xchg bh, cl; stc; call dword ptr [eax + 0x57]; 
0x0011ba29: xchg bl, al; aas; stc; call dword ptr [eax - 0x18]; 
0x00027520: xchg bl, bl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0008f67e: xchg bl, bl; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00148836: xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x0008e002: xchg bl, dl; dec esi; stc; call dword ptr [eax - 0x73]; 
0x001603df: xchg byte ptr [0x68fff972], al; add dword ptr [eax], 0x8d500000; xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x00091ffb: xchg byte ptr [eax + 0x39000002], dl; ret; 
0x000c3474: xchg byte ptr [eax + 0x3f], ch; stc; call dword ptr [eax - 0x18]; 
0x0008e061: xchg byte ptr [eax + 0x4f], cl; stc; call dword ptr [eax - 0x18]; 
0x00025754: xchg byte ptr [eax + 0x7e], bl; stc; call dword ptr [eax - 0x18]; 
0x0007f495: xchg byte ptr [eax + eax - 0xf770000], ah; pop ebx; pop esi; pop edi; ret; 
0x0002c509: xchg byte ptr [eax + eax*4], cl; stc; call dword ptr [eax - 0x18]; 
0x0002c391: xchg byte ptr [eax + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0009adea: xchg byte ptr [eax + ebp*4], bl; stc; call dword ptr [eax - 0x73]; 
0x00057f83: xchg byte ptr [eax + ecx*4], ah; stc; call dword ptr [eax - 0x18]; 
0x00121d27: xchg byte ptr [eax + edi*8 - 1], cl; dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x00111e3d: xchg byte ptr [eax - 0x4f], dh; stc; call dword ptr [eax - 0x73]; 
0x000bf9b9: xchg byte ptr [eax - 0x55], bh; stc; call dword ptr [eax - 0x18]; 
0x0009c6f3: xchg byte ptr [eax - 0x63], al; stc; call dword ptr [eax - 0x18]; 
0x0005837a: xchg byte ptr [eax - 0x78], bh; stc; call dword ptr [eax - 0x18]; 
0x00073ce6: xchg byte ptr [eax - 0x78], bh; stc; call dword ptr [eax - 0x18]; das; add ah, bh; jmp dword ptr [esi - 0x70]; 
0x00057f57: xchg byte ptr [eax - 0x78], bl; stc; call dword ptr [eax - 0x73]; 
0x000c34dd: xchg byte ptr [eax - 0x7b], ch; stc; call dword ptr [eax - 0x18]; 
0x000cf3cd: xchg byte ptr [eax], ah; iretd; stc; call dword ptr [eax + 0x53]; 
0x0002508d: xchg byte ptr [eax], ah; jle 0x2508a; call dword ptr [eax - 0x18]; 
0x000251cd: xchg byte ptr [eax], ah; jle 0x251ca; call dword ptr [eax - 0x18]; 
0x00089605: xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx + 0x92086], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x0008960b: xchg byte ptr [eax], ah; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x5c72; 
0x001098e6: xchg byte ptr [eax], ah; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000c3497: xchg byte ptr [eax], ah; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x001196e2: xchg byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x001266fb: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002b69b: xchg byte ptr [eax], al; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0014cd35: xchg byte ptr [eax], al; ret 0xfff9; 
0x0005a83e: xchg byte ptr [eax], bh; mov bh, cl; call dword ptr [eax - 0x18]; 
0x000c99c0: xchg byte ptr [eax], ch; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0009c6d0: xchg byte ptr [eax], cl; sahf; stc; call dword ptr [eax - 0x18]; 
0x000c354d: xchg byte ptr [eax], dh; test ecx, edi; call dword ptr [eax - 0x18]; 
0x000c61f1: xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0008f645: xchg byte ptr [eax], dl; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00057f96: xchg byte ptr [ebp + 0x6afff942], ah; and byte ptr [eax - 0x73], dl; xchg ah, ch; xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00057f7a: xchg byte ptr [ebp + 0x6afff942], ah; and dword ptr [eax - 0x73], edx; xchg byte ptr [eax + ecx*4], ah; stc; call dword ptr [eax - 0x18]; 
0x0014fade: xchg byte ptr [ebp + 0x6e], bl; stc; call dword ptr [eax - 0x18]; 
0x00173f23: xchg byte ptr [ebp + 0x72], bl; stc; call dword ptr [eax + 0x6a]; 
0x001652fa: xchg byte ptr [ebp + eax*8 - 7], ch; call dword ptr [eax - 0x73]; 
0x0009c716: xchg byte ptr [ebp + ebx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0007395c: xchg byte ptr [ebp + ecx*4 - 7], dh; call dword ptr [eax - 0x18]; 
0x00131910: xchg byte ptr [ebp + edi*2 - 7], cl; call dword ptr [eax - 0x75]; 
0x0008f469: xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; 
0x0008f66b: xchg byte ptr [ebp + edx*4 - 7], ch; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x00088479: xchg byte ptr [ebp + esi*2 - 0x1b], bh; call dword ptr [eax - 0x18]; 
0x0013b68e: xchg byte ptr [ebp - 0x75000000], bl; add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x000cc315: xchg byte ptr [ebx + 0x39043944], cl; ret 0x8f0f; 
0x000c24f2: xchg byte ptr [ebx + 0x3f], dl; stc; call dword ptr [eax - 0x18]; 
0x00111e50: xchg byte ptr [ebx + 0x59], ah; stc; call dword ptr [eax - 0x18]; 
0x001150c4: xchg byte ptr [ebx + 0x59], bl; stc; call dword ptr [eax - 0x18]; 
0x001220ca: xchg byte ptr [ebx + 0x63], cl; stc; call dword ptr [eax + 0x57]; 
0x00152318: xchg byte ptr [ebx + eax*8 - 7], ah; call dword ptr [eax - 0x18]; 
0x0015234c: xchg byte ptr [ebx + eax*8], bh; stc; call dword ptr [eax - 0x18]; 
0x0013ba84: xchg byte ptr [ebx + edi*4 - 7], ah; call dword ptr [edi + 0x52]; 
0x00148829: xchg byte ptr [ebx - 0x7872f314], al; adc byte ptr [edx - 0x17af0007], 0x57; xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x00148bd0: xchg byte ptr [ebx - 0x7e7253b3], cl; and al, al; stc; call dword ptr [eax - 0x73]; 
0x0019ee37: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x0007e055: xchg byte ptr [ebx], bh; dec esi; stc; call dword ptr [eax - 0x18]; 
0x0002e196: xchg byte ptr [ebx], bl; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x001222d6: xchg byte ptr [ebx], ch; stc; call dword ptr [eax + 0x68]; 
0x001652c9: xchg byte ptr [ecx + 0x73], ch; stc; call dword ptr [eax - 0x73]; 
0x00029b2e: xchg byte ptr [ecx + eax*4 - 7], al; call dword ptr [eax - 0x73]; 
0x0009b73a: xchg byte ptr [ecx + ecx], ah; add byte ptr [ebp - 0x1963d37a], cl; call dword ptr [eax + 0x57]; 
0x0010ae06: xchg byte ptr [ecx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x000c81a0: xchg byte ptr [ecx - 0x1600000b], ch; ret 0xfff5; 
0x000f7ef9: xchg byte ptr [ecx], ch; ret 0x1be; 
0x000c3507: xchg byte ptr [ecx], dl; aas; stc; call dword ptr [eax - 0x18]; 
0x000c0c06: xchg byte ptr [ecx], dl; stc; dec dword ptr [ebx + 0x24448903]; cmp al, 0x89; ret 0xc483; 
0x00060b23: xchg byte ptr [edi + 0x10], dh; add byte ptr [eax], al; jmp eax; 
0x0015498c: xchg byte ptr [edi + 0x6f], al; stc; call dword ptr [eax - 0x18]; 
0x00028ee0: xchg byte ptr [edi + edi*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00028d51: xchg byte ptr [edi + edi*2 - 7], dl; call dword ptr [eax - 0x18]; 
0x000c33c5: xchg byte ptr [edi + edi], bl; stc; call dword ptr [eax - 0x18]; 
0x000f2344: xchg byte ptr [edi - 0x74ffffff], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x690da68], cl; dec dword ptr [ebp - 0x6a8b580]; call dword ptr [ebx + 0x50]; 
0x0006c139: xchg byte ptr [edi - 0x76fffff3], bh; insb byte ptr es:[edi], dx; and al, 0x14; jmp ebx; 
0x0012780e: xchg byte ptr [edi - 0x77000000], dl; ret; 
0x0019ab45: xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001996be: xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x0011d320: xchg byte ptr [edi - 7], bl; call dword ptr [eax + 0x55]; 
0x0009e78b: xchg byte ptr [edi - 7], dh; call dword ptr [eax - 0x73]; 
0x0009e96f: xchg byte ptr [edi - 7], dl; call dword ptr [eax - 0x73]; 
0x000c34ba: xchg byte ptr [edi], al; aas; stc; call dword ptr [eax - 0x18]; 
0x0019767c: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00198d9c: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00196f8c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001986ac: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c3570: xchg byte ptr [edi], dh; aas; stc; call dword ptr [eax - 0x18]; 
0x00121d8d: xchg byte ptr [edi], dl; arpl cx, di; call dword ptr [ebx - 1]; 
0x0013b699: xchg byte ptr [edx + 0x39000000], dl; ret 0x820f; 
0x00028de8: xchg byte ptr [edx + 0x3a], ah; stc; call dword ptr [eax - 0x18]; 
0x00121fb3: xchg byte ptr [edx + 0x4e], dh; stc; call dword ptr [eax + 0x6a]; 
0x0008dcdd: xchg byte ptr [edx + 0x4f], ah; stc; call dword ptr [eax - 0x18]; 
0x0008e03f: xchg byte ptr [edx + 0x4f], dh; stc; call dword ptr [eax - 0x18]; 
0x00111e80: xchg byte ptr [edx + 0x59], bh; stc; call dword ptr [eax - 0x18]; 
0x0014cd25: xchg byte ptr [edx + eax*8], dh; stc; call dword ptr [eax - 0x73]; 
0x0011ba22: xchg byte ptr [edx + ebx*2], ah; stc; call dword ptr [eax - 0x73]; 
0x0009b7e2: xchg byte ptr [edx + ebx*4 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x0008689c: xchg byte ptr [edx + ebx], dl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17a8f314], al; ret 0x29; 
0x0005a1be: xchg byte ptr [edx + ecx*4 - 7], bl; call dword ptr [eax - 0x73]; 
0x00029b51: xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax + 0x68]; 
0x000299cd: xchg byte ptr [edx + edi*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x0007e045: xchg byte ptr [edx + edx*4], cl; stc; call dword ptr [eax - 0x73]; 
0x00115e6a: xchg byte ptr [edx + esi*4 - 7], al; call dword ptr [eax - 0x18]; 
0x000ce6e8: xchg byte ptr [edx - 0x74000009], dh; test dword ptr [ecx + ecx*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x7b350], cl; call dword ptr [esi + 0x53]; 
0x0010b46c: xchg byte ptr [edx], al; add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00028efc: xchg byte ptr [edx], bh; cmp bh, cl; call dword ptr [eax - 0x73]; 
0x00109668: xchg byte ptr [edx], cl; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0009adfd: xchg byte ptr [edx], cl; push ecx; stc; call dword ptr [eax - 0x18]; 
0x00028f03: xchg byte ptr [esi + 0x3a], cl; stc; call dword ptr [eax - 0x18]; 
0x000c352a: xchg byte ptr [esi + 0x3f], bh; stc; call dword ptr [eax - 0x18]; 
0x0008f672: xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x0015230c: xchg byte ptr [esi + 0x68fff96e], bh; imul eax, dword ptr [esi], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + eax*8 - 7], ah; call dword ptr [eax - 0x18]; 
0x000c3593: xchg byte ptr [esi + eax*4 - 0x17af0007], cl; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x00025744: xchg byte ptr [esi + edi*2 - 7], bh; call dword ptr [eax - 0x73]; 
0x000f30df: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x00091e58: xchg byte ptr [esi + edx*4], bl; stc; call dword ptr [eax - 0x73]; 
0x00069576: xchg byte ptr [esi], bh; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005e342: xchg byte ptr [esi], dl; inc edx; stc; call dword ptr [eax + 0x53]; 
0x001603eb: xchg byte ptr [esp + eax*8 - 7], ch; call dword ptr [eax - 0x18]; 
0x0009b764: xchg byte ptr [esp + ebx*4 - 0x1a], bl; call dword ptr [eax + 0x57]; 
0x0005f255: xchg byte ptr [esp + ecx*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x00073930: xchg byte ptr [esp + edi*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0008f47c: xchg byte ptr [esp + edx*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0009e982: xchg byte ptr [esp], al; stc; call dword ptr [eax - 0x18]; 
0x0008e009: xchg ch, ah; dec esi; stc; call dword ptr [eax - 0x18]; 
0x00104623: xchg ch, ch; push edi; stc; call dword ptr [eax - 0x18]; 
0x0005a88d: xchg cl, ah; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000536c2: xchg cl, bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00045009: xchg cl, bh; call dword ptr [eax + 0x68]; 
0x000477a2: xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000c3595: xchg cl, bh; call dword ptr [eax - 0x18]; add byte ptr [edi], 0xf7; jmp dword ptr [esi - 0x70]; 
0x00047970: xchg cl, bh; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x000478f4: xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0015b6b4: xchg cl, bh; jo 0x15b6b1; call dword ptr [ecx - 1]; 
0x000a1506: xchg cl, bh; std; jmp dword ptr [esi - 0x70]; 
0x0015952c: xchg cl, dh; call dword ptr [eax - 0x73]; 
0x0008f61d: xchg cl, dh; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000905cf: xchg dh, al; dec edi; stc; call dword ptr [eax - 0x73]; 
0x001761e0: xchg dh, al; jne 0x1761dd; call dword ptr [eax - 0x18]; 
0x001766df: xchg dh, al; jne 0x1766dc; call dword ptr [eax - 0x18]; 
0x00027550: xchg dh, cl; cmp cl, bh; call dword ptr [eax - 0x18]; 
0x0005a8b2: xchg dh, cl; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000c3451: xchg dh, dh; stc; call dword ptr [eax - 0x18]; 
0x0012ef0d: xchg dl, dh; dec dword ptr [ebx - 0x3b7cd7b9]; adc byte ptr [ebx - 0x72affb14], al; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x00083ca2: xchg dword ptr [0x6a000001], ebx; add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000822fe: xchg dword ptr [0x83000001], ebx; in al, dx; or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00024ee6: xchg dword ptr [0xbf4b0500], edx; and byte ptr [eax], al; lea eax, [eax - 0x681f0]; ret; 
0x00024ec6: xchg dword ptr [0xbf6b0500], edx; and byte ptr [eax], al; lea eax, [eax - 0x681e8]; ret; 
0x000f5c78: xchg dword ptr [eax + 0x1000001], esp; ret; 
0x000478e2: xchg dword ptr [eax + 0x3f], ebp; stc; call dword ptr [eax - 0x18]; 
0x00083e5b: xchg dword ptr [eax + 0x6a000000], edi; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x00147d33: xchg dword ptr [eax + 0x6c], esp; stc; call dword ptr [eax - 0x18]; 
0x00091ce4: xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00075803: xchg dword ptr [eax + 2], ecx; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x000a15c5: xchg dword ptr [eax + 3], eax; add al, ch; ret 0xf96b; 
0x0002aa1c: xchg dword ptr [eax + eax*4], ecx; stc; call dword ptr [eax - 0x18]; 
0x0002ab83: xchg dword ptr [eax + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x000b4e6e: xchg dword ptr [eax + eax], ecx; add ecx, 0x10b02f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001757b8: xchg dword ptr [eax + ebp*4], ebp; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x31fff972], esp; call dword ptr [eax + 0x6a]; 
0x0009ed2f: xchg dword ptr [eax + ebp*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x0017483f: xchg dword ptr [eax + ebp*4], ebx; add byte ptr [eax - 0x73], dl; xchg edx, ebx; jb 0x174843; call dword ptr [eax + 0x6a]; 
0x00098b0c: xchg dword ptr [eax + ebx*4 - 7], ecx; call dword ptr [eax - 0x18]; 
0x00098162: xchg dword ptr [eax + ebx*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x00098626: xchg dword ptr [eax + ebx*4], esi; stc; call dword ptr [eax - 0x73]; 
0x0006c081: xchg dword ptr [eax + ebx*8 - 0x26fe0008], ebp; jmp ecx; 
0x0002eccd: xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x00047a41: xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax + 0x6a]; 
0x00045d9d: xchg dword ptr [eax + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x000c239c: xchg dword ptr [eax - 0x18], edx; in eax, dx; stc; clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00175107: xchg dword ptr [eax - 0x37], esi; stc; call dword ptr [eax - 0x73]; 
0x00147164: xchg dword ptr [eax - 0x42], ebx; stc; call dword ptr [eax - 0x18]; 
0x0012ee60: xchg dword ptr [eax - 0x4a], ebx; stc; call dword ptr [eax - 0x18]; 
0x000e9632: xchg dword ptr [eax - 0x51], eax; stc; call dword ptr [eax + 0x68]; 
0x000ee860: xchg dword ptr [eax - 0x51], ebp; stc; call dword ptr [eax - 0x73]; 
0x00098af9: xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax + 0x68]; 
0x00098b5c: xchg dword ptr [eax - 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x0006d3f0: xchg dword ptr [eax - 0x74], edx; stc; call dword ptr [eax - 0x18]; 
0x000f29ed: xchg dword ptr [eax - 0x74ffffff], esi; mov esp, 0xf905c086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00047879: xchg dword ptr [eax - 0x7b], ebp; stc; call dword ptr [eax - 0x18]; 
0x0002ab60: xchg dword ptr [eax - 0x80], ebx; stc; call dword ptr [eax - 0x18]; 
0x0019efa5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0019e645: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x0019df85: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x0008fd3f: xchg dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x001858c4: xchg dword ptr [eax], eax; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x000c8aa3: xchg dword ptr [eax], ebp; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000a01c0: xchg dword ptr [eax], ebx; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00098222: xchg dword ptr [eax], ebx; cwde; stc; call dword ptr [eax - 0x73]; 
0x00080190: xchg dword ptr [eax], ebx; xchg edx, eax; stc; call dword ptr [eax - 0x73]; 
0x001725f1: xchg dword ptr [eax], edi; test al, 0; add byte ptr [eax - 0x73], dl; xchg esi, ecx; jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x0014bb2d: xchg dword ptr [eax], edx; cmp edx, 1; jg 0x14bb38; ret; 
0x000c52cc: xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0004794b: xchg dword ptr [eax], esi; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0004796e: xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0004796e: xchg dword ptr [eax], esp; xchg cl, bh; call dword ptr [eax - 0x18]; cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x001396c3: xchg dword ptr [ebp + 0x68], edi; stc; call dword ptr [eax - 0x73]; 
0x001732cf: xchg dword ptr [ebp + 0x72], ebx; stc; call dword ptr [eax + 0x6a]; 
0x000dfa3e: xchg dword ptr [ebp - 0x75000000], ebp; pop esp; and al, 0x40; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x001757bf: xchg dword ptr [ebx + 0x31fff972], esp; call dword ptr [eax + 0x6a]; 
0x0004707e: xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x00141f0c: xchg dword ptr [ebx + 0x6b], edx; stc; call dword ptr [eax - 0x18]; 
0x00044fc2: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x00044e42: xchg dword ptr [ebx + eax*4], eax; ret; 
0x00173bb4: xchg dword ptr [ebx + ebp*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x000c00c9: xchg dword ptr [ebx + ebp*4 - 0x17af0007], esi; dec esp; cmp al, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00030e57: xchg dword ptr [ebx + edi - 7], ecx; call dword ptr [eax - 0x18]; 
0x0008dfe7: xchg dword ptr [ebx + edx*4 - 7], eax; call dword ptr [eax - 0x18]; 
0x0008f995: xchg dword ptr [ebx - 6], eax; jmp dword ptr [esi - 0x70]; 
0x000a0561: xchg dword ptr [ebx - 7], edx; call dword ptr [eax - 0x18]; 
0x00134a7e: xchg dword ptr [ebx], ebp; stc; call dword ptr [eax - 0x18]; 
0x00082d6b: xchg dword ptr [ebx], edi; dec esi; stc; call dword ptr [eax - 0x18]; 
0x000ee873: xchg dword ptr [ebx], edx; push edi; stc; call dword ptr [eax - 0x18]; 
0x00030774: xchg dword ptr [ebx], esi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x000bda15: xchg dword ptr [ecx + 0x54], ecx; stc; call dword ptr [eax - 0x18]; 
0x00129d2a: xchg dword ptr [ecx + 0x64], esp; stc; call dword ptr [eax - 0x18]; 
0x00078abb: xchg dword ptr [ecx + 1], eax; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0002b680: xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000781cf: xchg dword ptr [ecx + eax], ecx; add byte ptr [ebx - 0xa9fb14], al; jne 0x781e3; push edx; call dword ptr [ebx + 0x1c]; 
0x000586a3: xchg dword ptr [ecx + ecx*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000586b3: xchg dword ptr [ecx + ecx*4], ebx; stc; call dword ptr [eax - 0x18]; 
0x0002d8d3: xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0002d5af: xchg dword ptr [ecx + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0002e154: xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002dfb8: xchg dword ptr [ecx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00030b8f: xchg dword ptr [ecx - 0x7c000005], eax; ret 0x8901; 
0x000859aa: xchg dword ptr [ecx - 0x7d000000], ebp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0006ff2a: xchg dword ptr [ecx], edi; or dh, byte ptr [ecx + edi - 0x7d]; ret 0x8904; 
0x0006f9cd: xchg dword ptr [ecx], edi; or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x00047905: xchg dword ptr [ecx], edx; aas; stc; call dword ptr [eax - 0x18]; 
0x0003eab2: xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x0017e401: xchg dword ptr [ecx], edx; inc edx; stc; call dword ptr [eax + 0x6a]; 
0x00092d1a: xchg dword ptr [ecx], esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0012ee3d: xchg dword ptr [ecx], esp; stc; call dword ptr [eax - 0x18]; 
0x00102462: xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x00147d52: xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; 
0x00147d52: xchg dword ptr [edi + 0x6c], ebp; stc; call dword ptr [eax - 0x18]; ret; 
0x0014b548: xchg dword ptr [edi + 0x6d], ebx; stc; call dword ptr [eax - 0x18]; 
0x00189493: xchg dword ptr [edi + 4], ecx; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00055ba6: xchg dword ptr [edi + eax*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0004706b: xchg dword ptr [edi + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x0004a23e: xchg dword ptr [edi + eax*4], ebx; stc; call dword ptr [eax - 0x73]; 
0x0004dafb: xchg dword ptr [edi + eax*4], esi; stc; call dword ptr [eax - 0x73]; 
0x00181f34: xchg dword ptr [edi + ebp*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x00183ab4: xchg dword ptr [edi + ebp*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000e85ac: xchg dword ptr [edi + ebp*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00102463: xchg dword ptr [edi + edi - 0x77d0000], ecx; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x0002938c: xchg dword ptr [edi + edi*2 - 7], edx; call dword ptr [eax - 0x18]; 
0x00029442: xchg dword ptr [edi + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00147106: xchg dword ptr [edi + edi*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x00146da5: xchg dword ptr [edi + edi*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000477c3: xchg dword ptr [edi + edi], ebx; stc; call dword ptr [eax - 0x18]; 
0x00096dad: xchg dword ptr [edi + edx*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x000976f8: xchg dword ptr [edi + edx*4 - 7], esp; call dword ptr [eax - 0x18]; 
0x00096dc0: xchg dword ptr [edi + edx*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0006c41c: xchg dword ptr [edi + edx*8 - 0x26fe0008], ebp; jmp ecx; 
0x0017ec1c: xchg dword ptr [edi - 0x7d000000], edi; in al, dx; add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00047991: xchg dword ptr [edi], eax; aas; stc; call dword ptr [eax - 0x18]; 
0x0002ed95: xchg dword ptr [edi], ecx; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + edi*2 - 7], ebp; call dword ptr [eax - 0x73]; 
0x000a01ad: xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x000478bf: xchg dword ptr [edi], esi; aas; stc; call dword ptr [eax - 0x18]; 
0x00086eca: xchg dword ptr [edx + 0x1a54], eax; cmp eax, 1; jg 0x86ee0; ret; 
0x000293be: xchg dword ptr [edx + 0x3a], esp; stc; call dword ptr [eax - 0x18]; 
0x0010b60e: xchg dword ptr [edx + 0x3c], ebx; stc; call dword ptr [eax + 0x56]; 
0x000fe0bc: xchg dword ptr [edx + 0x3c], ebx; stc; dec dword ptr [ebp - 0x6b15671]; call dword ptr [eax - 0x17]; 
0x0014b525: xchg dword ptr [edx + 0x4f], esp; stc; call dword ptr [eax - 0x18]; 
0x000bdd21: xchg dword ptr [edx + 0x54], edi; stc; call dword ptr [eax - 0x18]; 
0x000e3604: xchg dword ptr [edx + 0x56], edx; stc; call dword ptr [eax - 0x18]; 
0x0014fe70: xchg dword ptr [edx + 0x6e], edi; stc; call dword ptr [ecx - 0x17]; 
0x00073452: xchg dword ptr [edx + eax*2 - 0x17af0007], edx; ret; 
0x0005e674: xchg dword ptr [edx + eax*2], esi; stc; call dword ptr [eax - 0x18]; 
0x000899d0: xchg dword ptr [edx + eax], edx; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0017c925: xchg dword ptr [edx + ebp*4], ebp; hlt; call dword ptr [eax - 0x18]; 
0x00029ef1: xchg dword ptr [edx + edi*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00163c7d: xchg dword ptr [edx + edi*8 - 0xd], ebp; call dword ptr [eax - 0x73]; 
0x00082d58: xchg dword ptr [edx + edx*4 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0016b11d: xchg dword ptr [edx], ebp; je 0x16b11a; call dword ptr [eax + 0x53]; 
0x0016d1bb: xchg dword ptr [edx], ebp; je 0x16d1b8; call dword ptr [eax - 0x73]; 
0x000d4ac6: xchg dword ptr [edx], ebp; push ebp; stc; call dword ptr [eax + 0x53]; 
0x0009f99d: xchg dword ptr [edx], ecx; push ebx; stc; call dword ptr [eax - 0x18]; 
0x0002945e: xchg dword ptr [edx], edi; cmp bh, cl; call dword ptr [eax - 0x73]; 
0x000307d6: xchg dword ptr [edx], edi; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x00029465: xchg dword ptr [esi + 0x3a], ecx; stc; call dword ptr [eax - 0x18]; 
0x000477e6: xchg dword ptr [esi + 0x3f], edi; stc; call dword ptr [eax - 0x18]; 
0x0008e083: xchg dword ptr [esi + 0x4f], edi; stc; call dword ptr [eax - 0x18]; 
0x00139371: xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; 
0x00139371: xchg dword ptr [esi + 0x65], esi; stc; call dword ptr [eax + 0x6a]; add al, ch; ret 0xf3b1; 
0x00134c88: xchg dword ptr [esi + 0x67], eax; stc; call dword ptr [eax - 0x18]; 
0x0007cadd: xchg dword ptr [esi + 2], edx; add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [ebx + 0xc]; 
0x0014f526: xchg dword ptr [esi + ebp*2], edi; stc; call dword ptr [eax + 0x55]; 
0x00080e1e: xchg dword ptr [esi + ecx*2 - 7], ebx; call dword ptr [eax + 0x56]; 
0x000400eb: xchg dword ptr [esi + edi - 7], esp; call dword ptr [eax - 0x18]; 
0x0012edf7: xchg dword ptr [esi + esi*4], esi; stc; call dword ptr [eax - 0x18]; 
0x00086782: xchg dword ptr [esi], eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [edi + 0x2c]; 
0x0009f5d8: xchg dword ptr [esi], esp; stc; call dword ptr [eax - 0x18]; 
0x00099484: xchg dword ptr [esp + eax*4 - 0x1a], ebp; call dword ptr [eax - 0x73]; 
0x0018aa13: xchg dword ptr [esp + eax], edi; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009221a: xchg dword ptr [esp + edx - 0x1a], ebx; call dword ptr [eax + 0x56]; 
0x000e5011: xchg dword ptr [esp + esi*2], eax; jmp 0xe504f; ret 0x850f; 
0x0009ed42: xchg dword ptr [esp - 7], ecx; call dword ptr [eax - 0x18]; 
0x00126f85: xchg eax, eax; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x000976e5: xchg eax, eax; xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x00107d93: xchg eax, ebp; pop eax; stc; call dword ptr [eax - 0x73]; 
0x0007bd46: xchg eax, ebp; xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x0017c954: xchg eax, ebp; xchg esi, eax; jno 0x17c954; jmp dword ptr [esi - 0x70]; 
0x0012ede4: xchg eax, ebx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x0004782c: xchg eax, ebx; stc; call dword ptr [eax - 0x18]; 
0x00098172: xchg eax, ebx; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00027561: xchg eax, ecx; jle 0x2755e; call dword ptr [eax - 0x73]; 
0x0010741d: xchg eax, ecx; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x00107101: xchg eax, ecx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00045007: xchg eax, edi; xchg cl, bh; call dword ptr [eax + 0x68]; 
0x000478f2: xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00098232: xchg eax, edi; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x0015dea6: xchg eax, edx; jno 0x15dea3; call dword ptr [eax + 0x6a]; 
0x000d0d83: xchg eax, edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0017db2b: xchg eax, esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0015273b: xchg eax, esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x53]; 
0x0019d1d7: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00125f16: xchg ebp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x000a282f: xchg ebp, eax; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000ed774: xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00092afb: xchg ebp, eax; inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00164794: xchg ebp, eax; insb byte ptr es:[edi], dx; cmp dh, bl; call dword ptr [edx - 0x73]; 
0x0005db18: xchg ebp, eax; mov al, byte ptr [0x89000000]; ret; 
0x00134057: xchg ebp, eax; mov ebp, 0x8d2efff4; je 0x134085; add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x0006636c: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00064264: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000b408e: xchg ebp, eax; or al, 0; add ecx, 0x10bd8f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b406e: xchg ebp, eax; or al, 0; add ecx, 0x10bdaf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008b13e: xchg ebp, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000df413: xchg ebp, eax; out 0xff, eax; call dword ptr [eax + 0x57]; 
0x00140fa7: xchg ebp, eax; push -7; call dword ptr [eax - 0x18]; 
0x00035f06: xchg ebp, eax; push 0x83ffffff; les ecx, ptr [ebx + eax*4]; ret 0x5201; 
0x0011cdfc: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0015e930: xchg ebp, eax; ret 0x3a3c; 
0x00085be4: xchg ebp, eax; ret 0x40c7; 
0x00170b07: xchg ebp, eax; ret 0x50e9; 
0x00151ca9: xchg ebp, eax; ret 0x548d; 
0x000c103c: xchg ebp, eax; ret 0x6eb; 
0x001a427a: xchg ebp, eax; ret 0x7c39; 
0x000643e3: xchg ebp, eax; ret 0x7ce9; 
0x0012d7f7: xchg ebp, eax; ret 0x8b52; 
0x000cdeba: xchg ebp, eax; ret 0x8eb; 
0x000643c7: xchg ebp, eax; ret 0x98e9; 
0x0004480d: xchg ebp, eax; ret 0xb60f; 
0x000637ad: xchg ebp, eax; ret 0xbd83; 
0x00063864: xchg ebp, eax; ret 0xbd8b; 
0x0005f72b: xchg ebp, eax; ret 0xc101; 
0x001a4476: xchg ebp, eax; ret 0xc208; 
0x001a58e9: xchg ebp, eax; ret 0xc209; 
0x00093626: xchg ebp, eax; ret 0xc231; 
0x000d37db: xchg ebp, eax; ret 0xc238; 
0x0015f43a: xchg ebp, eax; ret 0xc483; 
0x00114a55: xchg ebp, eax; ret 0xca08; 
0x0003eff2: xchg ebp, eax; ret 0xca21; 
0x000f65da: xchg ebp, eax; ret 0xd009; 
0x00103c39: xchg ebp, eax; ret 0xd021; 
0x00080b60: xchg ebp, eax; ret 0xd089; 
0x0015328e: xchg ebp, eax; ret 0xd120; 
0x0003f01a: xchg ebp, eax; ret 0xd121; 
0x0014112a: xchg ebp, eax; ret 0xd184; 
0x001a42d3: xchg ebp, eax; ret 0xd201; 
0x001413fa: xchg ebp, eax; ret 0xd384; 
0x000a243e: xchg ebp, eax; ret 0xd789; 
0x0013c53f: xchg ebp, eax; ret 0xdb85; 
0x00044af9: xchg ebp, eax; ret 0xe083; 
0x0008aa79: xchg ebp, eax; ret 0xe2c1; 
0x0009e5db: xchg ebp, eax; ret 0xe383; 
0x000e5f06: xchg ebp, eax; ret 0xe783; 
0x0013afc1: xchg ebp, eax; ret 0xe8c0; 
0x000be86c: xchg ebp, eax; ret 0xf039; 
0x0015e937: xchg ebp, eax; ret 0xf389; 
0x000d0027: xchg ebp, eax; ret 0xff52; 
0x0003a1a0: xchg ebp, eax; ret; 
0x00101d89: xchg ebp, eax; rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x000f48e0: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x00124eeb: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00124eaa: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00167ba7: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00082f62: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00165eb8: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0012ce7c: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x00166fff: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x000949e6: xchg ebp, eax; rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000924a8: xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00047d49: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0015130a: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0008f7eb: xchg ebp, eax; stc; call dword ptr [eax + 0x68]; 
0x0008f82a: xchg ebp, eax; stc; call dword ptr [eax + 0x6a]; 
0x0008f952: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0008f46b: xchg ebp, eax; stc; call dword ptr [eax - 0x73]; 
0x0008f66d: xchg ebp, eax; stc; call dword ptr [eax - 0x73]; xchg byte ptr [esi + 0x68fff94f], bh; ret 1; 
0x0005a78c: xchg ebp, eax; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x0015a51a: xchg ebp, eax; std; jmp dword ptr [esi - 0x70]; 
0x0012ccef: xchg ebp, edx; stc; call dword ptr [eax - 1]; 
0x0010859c: xchg ebp, esp; pop eax; stc; call dword ptr [eax - 0x18]; 
0x000c0470: xchg ebp, esp; push esp; stc; call dword ptr [eax - 0x18]; 
0x0012d489: xchg ebp, esp; stc; call dword ptr [ebp - 1]; 
0x000428c2: xchg ebx, eax; aam 0x8a; clc; inc dword ptr [ecx]; fistp qword ptr [esi]; jmp edi; 
0x0014c110: xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x001a17b0: xchg ebx, eax; add al, 0x83; ret; 
0x000b1199: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000f80b0: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x000f8204: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x000be098: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub al, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x001196bd: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbbc], cl; ret; 
0x0002c38b: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0002ab7d: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x0009c369: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x72ebdbbc], cl; sub byte ptr [ecx + ecx], 0; add byte ptr [ecx], bh; ret; 
0x0017f289: xchg ebx, eax; add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000856cd: xchg ebx, eax; add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081a21: xchg ebx, eax; add eax, 0x29770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00085e90: xchg ebx, eax; add eax, 0x2a770000; sub esp, 8; push eax; push ebx; call dword ptr [esi + 0x18]; 
0x0007b8df: xchg ebx, eax; add eax, 0x2b770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0007b11d: xchg ebx, eax; add eax, 0x35770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008273a: xchg ebx, eax; add eax, 0x40770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00085623: xchg ebx, eax; add eax, 0x57770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000859a5: xchg ebx, eax; add eax, 0x870f0000; test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00163201: xchg ebx, eax; cmc; inc dword ptr [ebx + 0x448d10c4]; push es; add dword ptr [ecx - 0x16efdbbc], ecx; ret; 
0x00079508: xchg ebx, eax; cmpsb byte ptr [esi], byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x00037aa5: xchg ebx, eax; in al, 0x83; stc; jmp dword ptr [esi - 0x77]; 
0x0018a2c7: xchg ebx, eax; inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011db45: xchg ebx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x00097cf9: xchg ebx, eax; mov ah, 0xf8; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00075053: xchg ebx, eax; mov edi, fs; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0011db88: xchg ebx, eax; mov word ptr [ebp + 0x408bfff6], es; je 0x11db1a; push esi; add al, 0x89; ret 0xeac1; 
0x000b4263: xchg ebx, eax; or al, 0; add ecx, 0x10bc3a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001580eb: xchg ebx, eax; or al, 0xa2; add byte ptr [eax], al; push edx; call eax; 
0x0011227d: xchg ebx, eax; or al, 5; out dx, al; call dword ptr [edx - 0x73]; 
0x0010742a: xchg ebx, eax; pop eax; stc; call dword ptr [eax - 0x73]; 
0x000f2c49: xchg ebx, eax; pop edx; stc; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ba1e3: xchg ebx, eax; pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011d4cb: xchg ebx, eax; pop esp; mov esi, esi; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00104852: xchg ebx, eax; push eax; or al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00135f94: xchg ebx, eax; ret 0xfd83; 
0x000542a4: xchg ebx, eax; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x36577b], al; jmp eax; 
0x0008cbb3: xchg ebx, eax; stc; call dword ptr [eax + 0x68]; 
0x0008cf34: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0008e225: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; bound ebp, qword ptr [edi + edi*8]; jmp dword ptr [esi - 0x70]; 
0x0008d05c: xchg ebx, eax; stc; call dword ptr [eax - 0x73]; 
0x000bcc3a: xchg ebx, eax; test byte ptr [eax + eax], bh; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0016aa41: xchg ebx, ebp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0015df16: xchg ebx, ecx; jno 0x15df13; call dword ptr [eax + 0x6a]; 
0x0015df4b: xchg ebx, ecx; jno 0x15df48; call dword ptr [eax + 0x6a]; 
0x0015df7c: xchg ebx, ecx; jno 0x15df79; call dword ptr [eax + 0x6a]; 
0x0015dfad: xchg ebx, ecx; jno 0x15dfaa; call dword ptr [eax + 0x6a]; 
0x0015dfde: xchg ebx, ecx; jno 0x15dfdb; call dword ptr [eax + 0x6a]; 
0x0015e00f: xchg ebx, ecx; jno 0x15e00c; call dword ptr [eax + 0x6a]; 
0x0008cbbd: xchg ebx, edx; dec esi; stc; call dword ptr [eax - 0x73]; 
0x0007bd59: xchg ebx, esp; dec ebp; stc; call dword ptr [eax - 0x18]; 
0x0011f19b: xchg ecx, eax; aam 0x62; stc; call dword ptr [edx + 0x50]; 
0x00047929: xchg ecx, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x00047929: xchg ecx, eax; aas; stc; call dword ptr [eax - 0x18]; in eax, dx; ret; 
0x00034536: xchg ecx, eax; adc al, 0; add eax, 0x1fc8fb; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034516: xchg ecx, eax; adc al, 0; add eax, 0x1fc91b; mov eax, dword ptr [eax + 0x1c8]; add eax, dword ptr gs:[0]; ret; 
0x000344f6: xchg ecx, eax; adc al, 0; add eax, 0x1fc93b; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0018c5a4: xchg ecx, eax; adc bh, bh; inc dword ptr [ecx + 0x42370c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b6d82: xchg ecx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015812b: xchg ecx, eax; adc dh, bl; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00117c7c: xchg ecx, eax; adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001020cb: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x3fac93], cl; add byte ptr [ecx], bh; ret 0x850f; 
0x0016403f: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0018d0a4: xchg ecx, eax; add eax, 0xc381ffff; jo 0x18d0c4; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018b2a4: xchg ecx, eax; and edi, edi; inc dword ptr [ecx + 0x433f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016a992: xchg ecx, eax; cld; jmp dword ptr [esi - 0x70]; 
0x0015508e: xchg ecx, eax; cmp byte ptr [edi - 7], ch; call dword ptr [edx + 0x50]; 
0x0015817a: xchg ecx, eax; hlt; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x0015a045: xchg ecx, eax; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0012a8c1: xchg ecx, eax; je 0x12a90b; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0006a2a7: xchg ecx, eax; jecxz 0x6a2a9; jmp eax; 
0x000b2a24: xchg ecx, eax; jmp ecx; 
0x000f277b: xchg ecx, eax; jne 0xf27e0; ret; 
0x00076317: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005885e: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017c981: xchg ecx, eax; or al, 1; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0011f16f: xchg ecx, eax; pop edx; cmp al, 0xf9; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000d62d4: xchg ecx, eax; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00106efb: xchg ecx, eax; ret 0xfff1; 
0x0007bd48: xchg ecx, eax; stc; call dword ptr [eax - 0x73]; 
0x00077879: xchg ecx, eax; stc; jmp dword ptr [ebp - 0x75]; 
0x0002b78b: xchg ecx, eax; test dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0005a78b: xchg ecx, eax; xchg ebp, eax; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x00024b8e: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000b41bc: xchg ecx, eax; xchg esp, eax; or al, 0; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00047bea: xchg ecx, ebp; add byte ptr [eax], al; add byte ptr [esi - 0x7b], ah; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00076802: xchg ecx, edi; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x76816; push esi; call dword ptr [ebx + 0x1c]; 
0x00057f69: xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x0004706d: xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x0017070b: xchg ecx, edx; stc; call dword ptr [eax + 0x6a]; 
0x0015a9f5: xchg ecx, esi; call dword ptr [eax - 0x73]; 
0x00091708: xchg ecx, esi; dec edi; stc; call dword ptr [eax - 0x18]; 
0x00028d35: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x72bbdb8c], cl; xchg ah, ch; jp 0x28d3b; call dword ptr [eax - 0x73]; 
0x000dfe9b: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dffea: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00145d9c: xchg edi, eax; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00138c25: xchg edi, eax; and ch, bh; jmp dword ptr [ebp - 0x5f]; 
0x00027269: xchg edi, eax; cld; jle 0x27266; jmp dword ptr [esi - 0x77]; 
0x0018ae03: xchg edi, eax; cmp byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189883: xchg edi, eax; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009f985: xchg edi, eax; inc ebx; stc; dec dword ptr [ebp - 0x6587b79]; call dword ptr [eax - 0x73]; 
0x00070b8c: xchg edi, eax; loope 0x70b8e; dec dword ptr [ebx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x000bbd5e: xchg edi, eax; mov esi, edx; ret; 
0x000a0ab9: xchg edi, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x000fdd5f: xchg edi, eax; or al, 9; stc; dec dword ptr [ecx + 0x3efe01d0]; jmp esi; 
0x000b4365: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00027b2e: xchg edi, eax; out 0x38, eax; stc; call dword ptr [edx + 0x50]; 
0x0014fd9a: xchg edi, eax; pop edx; cmp al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0012fac6: xchg edi, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0011d3d6: xchg edi, eax; pushal; stc; call dword ptr [eax + 0x55]; 
0x0013ade5: xchg edi, eax; ret 0xce39; 
0x0014693f: xchg edi, eax; ret 0xd008; 
0x00054a67: xchg edi, eax; ret 0xd284; 
0x000e488c: xchg edi, eax; ret 0xda08; 
0x00124746: xchg edi, eax; ret 0xf883; 
0x00066c75: xchg edi, eax; ret; 
0x00153828: xchg edi, eax; sbb al, 5; bnd call dword ptr [edx + 0x6a]; 
0x0018ce83: xchg edi, eax; sbb al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00030b68: xchg edi, eax; sbb bh, byte ptr [ebx]; stc; call dword ptr [edx + 0x50]; 
0x0009756e: xchg edi, eax; stc; call dword ptr [eax + 0x68]; 
0x0004501a: xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00096daf: xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x0015a311: xchg edi, eax; std; jmp dword ptr [esi - 0x70]; 
0x00178eaf: xchg edi, eax; sti; jmp dword ptr [esi - 0x70]; 
0x000e963e: xchg edi, ebp; push esi; stc; call dword ptr [eax - 0x73]; 
0x000e84d0: xchg edi, ecx; push esi; stc; call dword ptr [eax - 0x73]; 
0x000c9b5b: xchg edi, edi; push esp; stc; call dword ptr [eax - 0x18]; 
0x0002918c: xchg edi, esi; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000805e4: xchg edi, esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0014b06b: xchg edi, esp; cmp cl, bh; call dword ptr [eax + 0x53]; 
0x00141f05: xchg edi, esp; cmp cl, bh; call dword ptr [eax - 0x73]; 
0x000b6d03: xchg edx, eax; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012a014: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x0013b69a: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0012a156: xchg edx, eax; add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x000bbdde: xchg edx, eax; add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000a33c0: xchg edx, eax; cld; cmpsb byte ptr [esi], byte ptr es:[edi]; call 0xc24e43c7; ret; 
0x000a5e35: xchg edx, eax; cld; cwde; call 0xc24e6e3c; ret; 
0x000a3345: xchg edx, eax; cld; mov eax, 0x440fffe8; ret 0x66c3; 
0x000a5eb5: xchg edx, eax; cmp al, 0x8a; out 0xff, eax; cmove eax, edx; ret; 
0x000a5db0: xchg edx, eax; cmp al, 0xa8; call 0xc24e6db7; ret; 
0x0007645e: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000a5d6f: xchg edx, eax; dec esp; mov edi, 0x450ffff6; ret 0x66c3; 
0x001334af: xchg edx, eax; fcomp qword ptr [edi - 0xb]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0006110a: xchg edx, eax; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000a31df: xchg edx, eax; in al, dx; sal esi, 1; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00149f53: xchg edx, eax; in eax, dx; jmp dword ptr [ebp - 0x5f]; 
0x0005e0bc: xchg edx, eax; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000cd110: xchg edx, eax; insb byte ptr es:[edi], dx; adc ebp, edx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a3305: xchg edx, eax; insb byte ptr es:[edi], dx; mov eax, 0x440fffe8; ret 0x66c3; 
0x000a3e0f: xchg edx, eax; insb byte ptr es:[edi], dx; ret 0xfff6; 
0x00023435: xchg edx, eax; je 0x23431; call dword ptr [esi + 0x53]; 
0x0005d2a2: xchg edx, eax; je 0x5d29e; call dword ptr [ebp + 0x56]; 
0x000c3288: xchg edx, eax; jecxz 0xc328a; call dword ptr [eax + 0x31]; 
0x0013346d: xchg edx, eax; jl 0x133455; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a294f: xchg edx, eax; jl 0xa291e; idiv bh; cmovne eax, edx; ret; 
0x000a314d: xchg edx, eax; jl 0xa3145; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0011a5aa: xchg edx, eax; lahf; cmc; jmp dword ptr [esi - 0x70]; 
0x000bdd4f: xchg edx, eax; les edi, ptr [eax + eax]; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000a29dd: xchg edx, eax; lodsb al, byte ptr [esi]; aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000bd7a6: xchg edx, eax; lodsb al, byte ptr [esi]; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00024e79: xchg edx, eax; mov al, byte ptr [0x89000000]; add al, 0x11; mov eax, 0xffffffff; ret; 
0x00057f8a: xchg edx, eax; mov ebp, 0x868dfffd; pop eax; mov cl, bh; call dword ptr [eax - 0x73]; 
0x000a319d: xchg edx, eax; mov ebp, fs; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a325f: xchg edx, eax; mov ecx, ds; idiv bh; cmovne eax, edx; ret; 
0x000a5e70: xchg edx, eax; mov esp, 0xfffe786; inc esp; ret 0x66c3; 
0x00168b81: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000d7024: xchg edx, eax; mov word ptr [eax], fs; ljmp 0x2fe8:0x505251ff; ret 0xffff; 
0x000a3380: xchg edx, eax; pop esp; cmpsd dword ptr [esi], dword ptr es:[edi]; call 0xc24e4387; ret; 
0x000a3fb0: xchg edx, eax; pop esp; mov ch, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0004a8be: xchg edx, eax; push cs; add byte ptr [ebx - 0x72c7db84], cl; xchg eax, edi; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x001333cd: xchg edx, eax; pushfd; aad 0xf5; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0017a6f7: xchg edx, eax; pushfd; add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000a3dd5: xchg edx, eax; pushfd; scasd eax, dword ptr es:[edi]; call 0xc24e4ddc; ret; 
0x00050d1f: xchg edx, eax; ret 0x1e89; 
0x0005105d: xchg edx, eax; ret 0x789; 
0x000d0894: xchg edx, eax; ret 0x8539; 
0x0019b0ba: xchg edx, eax; ret 0xb60f; 
0x000d6ff3: xchg edx, eax; ret 0xc281; 
0x00046deb: xchg edx, eax; ret 0xd120; 
0x0016876e: xchg edx, eax; ret 0xd284; 
0x00050c1f: xchg edx, eax; ret 0xe89; 
0x00168760: xchg edx, eax; ret 0xf339; 
0x00059ae2: xchg edx, eax; ret 0xf883; 
0x00052332: xchg edx, eax; ret 0xff19; 
0x0005118b: xchg edx, eax; ret; 
0x00081853: xchg edx, eax; stc; call dword ptr [eax - 0x18]; 
0x00148830: xchg edx, eax; stc; call dword ptr [eax - 0x18]; push edi; xchg bl, dh; jmp dword ptr [esi - 0x70]; 
0x00091804: xchg edx, eax; stc; call dword ptr [eax - 0x18]; xor esi, 0xfffffffe; jmp dword ptr [ebp - 0x39]; 
0x0007e047: xchg edx, eax; stc; call dword ptr [eax - 0x73]; 
0x0012ffda: xchg edx, eax; stc; call dword ptr [eax - 0x75]; 
0x0008cc6f: xchg edx, eax; stc; call dword ptr [edx + 0x50]; 
0x00089f8b: xchg edx, eax; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0015a8e4: xchg edx, eax; std; jmp dword ptr [esi - 0x70]; 
0x000a2990: xchg edx, eax; sub al, 0xab; call 0xc24e3997; ret; 
0x000bd279: xchg edx, eax; xchg esp, eax; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0017294a: xchg edx, eax; xor eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x00091836: xchg edx, ebp; dec edi; stc; call dword ptr [eax - 0x18]; 
0x000837c1: xchg edx, ebx; add eax, 0xec830000; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00174846: xchg edx, ebx; jb 0x174843; call dword ptr [eax + 0x6a]; 
0x00098b05: xchg edx, ecx; push eax; stc; call dword ptr [eax - 0x73]; 
0x00155181: xchg edx, edi; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0017d3c1: xchg edx, esp; jbe 0x17d3af; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0011774c: xchg esi, eax; adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00051671: xchg esi, eax; add al, 0x83; ret 0x8501; 
0x0005166a: xchg esi, eax; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000df65c: xchg esi, eax; add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d37d6: xchg esi, eax; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x0008cb5a: xchg esi, eax; and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0015a7a9: xchg esi, eax; bnd call dword ptr [eax - 1]; 
0x0012fa02: xchg esi, eax; clc; mov dh, 0xf9; call dword ptr [edx + 0x50]; 
0x0011ad63: xchg esi, eax; clc; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x001645c1: xchg esi, eax; cld; cmp ebx, esi; call dword ptr [edx + 0x6a]; 
0x0007a771: xchg esi, eax; cli; jmp dword ptr [esi - 0x70]; 
0x00154537: xchg esi, eax; daa; outsd dx, dword ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x001645b5: xchg esi, eax; dec esp; add ah, dh; call dword ptr [edx - 0x73]; 
0x0017c956: xchg esi, eax; jno 0x17c954; jmp dword ptr [esi - 0x70]; 
0x000a09fb: xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00139a2c: xchg esi, eax; mov dl, 0x3f; stc; call dword ptr [edx - 0x46]; 
0x0007e5e5: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00121c9c: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x5cf0f820], al; ret 0x830f; 
0x000b4049: xchg esi, eax; or al, 0; add ecx, 0x10bdd4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00150434: xchg esi, eax; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0011ad44: xchg esi, eax; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x000ba060: xchg esi, eax; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0019fb4d: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00123686: xchg esi, eax; push es; int1; dec dword ptr [ebp - 0x64b8b7d]; call dword ptr [eax - 0x73]; 
0x000a6a24: xchg esi, eax; ret 0xb60f; 
0x001373bc: xchg esi, eax; ret 0xd008; 
0x000d47a0: xchg esi, eax; ret 0xe0c1; 
0x0003036b: xchg esi, eax; ret; 
0x000d479d: xchg esi, eax; ror byte ptr [edi], 0x96; ret 0xe0c1; 
0x00095d98: xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x00091e5a: xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0011ad82: xchg esi, eax; sti; pop ecx; stc; call dword ptr [edx - 0x77]; 
0x00092f9d: xchg esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6974; 
0x001725f8: xchg esi, ecx; jb 0x1725f5; call dword ptr [eax + 0x6a]; 
0x0004789c: xchg esi, esi; stc; call dword ptr [eax - 0x18]; 
0x001706f0: xchg esi, esp; jae 0x1706ed; call dword ptr [eax - 0x73]; 
0x00024b8f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x0007d597: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x73371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0008adea: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003c6d1: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x001250d7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00092387: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0007630f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007df29: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x00075853: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x000bbe01: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0016e4c2: xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0016b403: xchg esp, eax; and al, 0x34; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x000a3954: xchg esp, eax; and al, 0x60; add al, 0; add byte ptr [ecx], al; ret; 
0x001a58f5: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x00104ff4: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [eax + 0x72], bh; call dword ptr gs:[0x10]; 
0x001a3385: xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x0010b371: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x0010b247: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010b578: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x0010b502: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00031a88: xchg esp, eax; and al, byte ptr [eax]; add byte ptr [ebx - 0x1d373], cl; dec dword ptr [ebp - 0x67e077f]; call dword ptr [eax - 0x73]; 
0x00165e93: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000bd27a: xchg esp, eax; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00031a82: xchg esp, eax; cmp edi, ecx; call dword ptr [eax - 0x18]; 
0x0009f5c6: xchg esp, eax; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax + 0x68]; 
0x0015c0e8: xchg esp, eax; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x00073453: xchg esp, eax; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00073453: xchg esp, eax; inc edx; stc; call dword ptr [eax - 0x18]; ret; 
0x0015d38b: xchg esp, eax; jno 0x15d387; call dword ptr [eax - 0x18]; 
0x0015d51e: xchg esp, eax; jno 0x15d51a; call dword ptr [eax - 0x73]; 
0x0005bd1b: xchg esp, eax; mov bh, cl; call dword ptr [eax - 0x73]; 
0x0012ee84: xchg esp, eax; mov dh, 0xf9; call dword ptr [eax - 0x18]; 
0x00155d0c: xchg esp, eax; mov eax, dword ptr [0x7be80000]; aam 0xec; jmp dword ptr [ebp - 0x75]; 
0x0003c015: xchg esp, eax; mov ecx, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x000b423e: xchg esp, eax; or al, 0; add ecx, 0x10bc5f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b421e: xchg esp, eax; or al, 0; add ecx, 0x10bc7f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4201: xchg esp, eax; or al, 0; add ecx, 0x10bc9c; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4162: xchg esp, eax; or al, 0; add ecx, 0x10bcbb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b41d4: xchg esp, eax; or al, 0; add ecx, 0x10bcc9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41bd: xchg esp, eax; or al, 0; add ecx, 0x10bce0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b41a2: xchg esp, eax; or al, 0; add ecx, 0x10bcfb; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4180: xchg esp, eax; or al, 0; add ecx, 0x10bd1d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001550f2: xchg esp, eax; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov ecx, dword ptr [esp + 0x30]; call ecx; 
0x00128913: xchg esp, eax; or dword ptr [esi + edx], 0xd089fff9; ret; 
0x000f5410: xchg esp, eax; push edi; stc; call dword ptr [eax + 0x55]; 
0x0017d7d6: xchg esp, eax; ret 0x1389; 
0x0003035b: xchg esp, eax; ret 0x3a3c; 
0x0010058e: xchg esp, eax; ret 0x3f8b; 
0x0012d101: xchg esp, eax; ret 0x4483; 
0x00152f25: xchg esp, eax; ret 0x4489; 
0x0014d820: xchg esp, eax; ret 0x448b; 
0x00057870: xchg esp, eax; ret 0x48b; 
0x00031cbb: xchg esp, eax; ret 0x4c89; 
0x000d3aee: xchg esp, eax; ret 0x543a; 
0x0013ef93: xchg esp, eax; ret 0x5484; 
0x000309f7: xchg esp, eax; ret 0x5f3c; 
0x0005b38b: xchg esp, eax; ret 0x6a52; 
0x000c6672: xchg esp, eax; ret 0x7c83; 
0x0006d01f: xchg esp, eax; ret 0x7f3c; 
0x00142414: xchg esp, eax; ret 0x93c; 
0x00124547: xchg esp, eax; ret 0x940f; 
0x0007df2e: xchg esp, eax; ret 0x9e3b; 
0x0014244a: xchg esp, eax; ret 0xa3c; 
0x000a6a90: xchg esp, eax; ret 0xb60f; 
0x000d381a: xchg esp, eax; ret 0xc031; 
0x00143e64: xchg esp, eax; ret 0xc083; 
0x00151004: xchg esp, eax; ret 0xc084; 
0x0012e272: xchg esp, eax; ret 0xc085; 
0x00045329: xchg esp, eax; ret 0xc220; 
0x001861ca: xchg esp, eax; ret 0xc483; 
0x000a567a: xchg esp, eax; ret 0xc739; 
0x000a2437: xchg esp, eax; ret 0xc984; 
0x00030053: xchg esp, eax; ret 0xca08; 
0x000f71af: xchg esp, eax; ret 0xca83; 
0x00075863: xchg esp, eax; ret 0xd008; 
0x00075842: xchg esp, eax; ret 0xd009; 
0x00100d52: xchg esp, eax; ret 0xd020; 
0x000e4881: xchg esp, eax; ret 0xd309; 
0x0003c01c: xchg esp, eax; ret 0xec83; 
0x0015ec9b: xchg esp, eax; ret 0xede9; 
0x000c5a15: xchg esp, eax; ret 0xef39; 
0x00049ff1: xchg esp, eax; ret 0xf539; 
0x000c10ff: xchg esp, eax; ret 0xf883; 
0x000e8cbe: xchg esp, eax; ret 0xf8c1; 
0x000a6a31: xchg esp, eax; ret 0xfa01; 
0x00042fe2: xchg esp, eax; ret 0xfd83; 
0x000c9d94: xchg esp, eax; ret 0xff83; 
0x0003027e: xchg esp, eax; ret; 
0x0012e326: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x00101fda: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x000962e4: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00050466: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0004bebd: xchg esp, eax; ror byte ptr [ecx - 0x7ff7db84], 0xfa; jo 0x4be50; ror dword ptr [edi], 1; xchg esp, eax; ret 0xc220; 
0x000961b3: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x000962d2: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003bdb6: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0017ed77: xchg esp, eax; sar byte ptr [ebx], 0x9e; call 0xf17ed80; xchg esp, eax; ret 0xd008; 
0x0017ee07: xchg esp, eax; sar byte ptr [ebx], 0x9e; call 0xf17ee10; xchg esp, eax; ret 0xd008; 
0x0008f47e: xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x000906b3: xchg esp, eax; stc; call dword ptr [eax - 0x18]; cli; jmp dword ptr [esi - 0x70]; 
0x0008f990: xchg esp, eax; stc; call dword ptr [eax - 0x18]; xchg dword ptr [ebx - 6], eax; jmp dword ptr [esi - 0x70]; 
0x0005a821: xchg esp, eax; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x000bd9e5: xchg esp, eax; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0006c9c8: xchg esp, eax; test al, 0xfe; dec dword ptr [ebx - 0x76cfdbb4]; ret; 
0x000cb888: xchg esp, eax; test dh, dh; dec dword ptr [ebp - 0x6533b7d]; call dword ptr [eax - 0x73]; 
0x000367d7: xchg esp, eax; test dword ptr [eax], edx; cmp eax, 0x3eea01ff; jmp edx; 
0x0002a74c: xchg esp, ebp; jns 0x2a749; call dword ptr [eax - 0x73]; 
0x0002a9c4: xchg esp, ebp; jns 0x2a9c1; call dword ptr [eax - 0x73]; 
0x0002aa2c: xchg esp, ebp; jns 0x2aa29; call dword ptr [eax + 0x68]; 
0x0002aa4f: xchg esp, ebp; jns 0x2aa4c; call dword ptr [eax + 0x68]; 
0x0002aadf: xchg esp, ebp; jns 0x2aadc; call dword ptr [eax - 0x73]; 
0x0002e17c: xchg esp, ebp; js 0x2e179; call dword ptr [eax - 0x73]; 
0x0002e1b1: xchg esp, ebp; js 0x2e1ae; call dword ptr [eax - 0x73]; 
0x0002e1f7: xchg esp, ebp; js 0x2e1f4; call dword ptr [eax - 0x73]; 
0x0012700b: xchg esp, ebp; mov ah, 0xf9; call dword ptr [eax + 0x55]; 
0x0010a676: xchg esp, ebp; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x00058488: xchg esp, ebp; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0005e664: xchg esp, ebp; mov edi, ecx; call dword ptr [eax - 0x73]; 
0x000c03fd: xchg esp, ebp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000a01e3: xchg esp, ebx; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00148727: xchg esp, ebx; ja 0x14871c; call dword ptr [ebx + 0x50]; 
0x0002aacf: xchg esp, ebx; jg 0x2aacc; call dword ptr [eax - 0x18]; 
0x0002b73e: xchg esp, ebx; jg 0x2b73b; call dword ptr [eax - 0x18]; 
0x0002ce2d: xchg esp, ebx; jg 0x2ce2a; call dword ptr [eax - 0x18]; 
0x0002d92c: xchg esp, ebx; jg 0x2d929; call dword ptr [eax - 0x18]; 
0x0002e20a: xchg esp, ebx; jg 0x2e207; call dword ptr [eax - 0x18]; 
0x0002ed03: xchg esp, ebx; jg 0x2ed00; call dword ptr [eax - 0x18]; 
0x001551b8: xchg esp, ebx; ret; 
0x000c0046: xchg esp, ebx; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000916f5: xchg esp, ebx; xchg ebp, eax; stc; call dword ptr [eax - 0x73]; 
0x0002b0b6: xchg esp, ecx; jns 0x2b0b3; call dword ptr [eax - 0x73]; 
0x0002b1e0: xchg esp, ecx; jns 0x2b1dd; call dword ptr [eax - 0x73]; 
0x0002b6fb: xchg esp, ecx; jns 0x2b6f8; call dword ptr [eax + 0x68]; 
0x0002b771: xchg esp, ecx; jns 0x2b76e; call dword ptr [eax - 0x73]; 
0x0002b7b7: xchg esp, ecx; jns 0x2b7b4; call dword ptr [eax + 0x68]; 
0x0012edc1: xchg esp, ecx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00058498: xchg esp, ecx; mov cl, bh; call dword ptr [eax - 0x18]; 
0x00058498: xchg esp, ecx; mov cl, bh; call dword ptr [eax - 0x18]; jge 0x58459; std; jmp dword ptr [esi - 0x70]; 
0x00154a80: xchg esp, ecx; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00107430: xchg esp, ecx; pop eax; stc; call dword ptr [eax - 0x18]; 
0x0016b350: xchg esp, edi; jmp dword ptr [esi - 0x70]; 
0x0015ef70: xchg esp, edx; jno 0x15ef6d; call dword ptr [eax + 0x55]; 
0x001085fb: xchg esp, edx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x000477a0: xchg esp, edx; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x0008cbc4: xchg esp, esp; dec esi; stc; call dword ptr [eax - 0x18]; 
0x0009f5d1: xchg esp, esp; push eax; stc; call dword ptr [eax - 0x73]; 
0x00088d91: xend; xor eax, eax; add esp, 0xc; ret; 
0x001a03a3: xgetbv; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00127405: xlatb; adc dh, dh; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00125b97: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000d2a5e: xlatb; add byte ptr [ecx], bh; ret; 
0x000eb207: xlatb; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [ebx], 0x57; stc; call dword ptr [eax - 0x18]; 
0x0018c643: xlatb; and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00166363: xlatb; cld; jmp dword ptr [esi - 0x70]; 
0x00075e79: xlatb; cli; jmp dword ptr [esi - 0x70]; 
0x0002fd18: xlatb; cmp bh, cl; call dword ptr [eax - 0x18]; 
0x00179965: xlatb; fcos; jmp dword ptr [esi - 0x70]; 
0x0010e905: xlatb; fdiv st(2), st(0); jmp dword ptr [esi + 3]; 
0x000adb45: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0016f815: xlatb; inc edx; cld; call dword ptr [eax - 0x73]; 
0x0008ab03: xlatb; jae 0x8aad0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0007fba5: xlatb; jg 0x7fbb1; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0016b8b5: xlatb; js 0x16b8a3; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000bb3cc: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x0019e185: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000baf41: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000d6fef: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001359b2: xlatb; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0011af08: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0011aa96: xlatb; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x0018d143: xlatb; pop ss; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00189343: xlatb; push eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009f41e: xlatb; push edx; stc; call dword ptr [eax - 0x18]; 
0x00119085: xlatb; push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019dc72: xlatb; ret 0x498d; 
0x000bab78: xlatb; ret 0xc085; 
0x000a9b32: xlatb; ret; 
0x0019fa9c: xlatb; retf 0xf66; xlatb; ret; 
0x000bb47f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0019e246: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bad40: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000bb005: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000bafd6: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x0019e285: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0019ddae: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000bad06: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0019ee99: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x19eeb0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000baf72: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x0019e6f4: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x19e320; xor eax, eax; ret; 
0x001325e5: xlatb; stc; call dword ptr [eax - 0x18]; 
0x0002b745: xlatb; test dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [ecx + eax*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0005a845: xlatb; xchg esp, eax; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x675a37a]; call dword ptr [eax - 0x73]; 
0x00144655: xlatb; xor eax, dword ptr [eax]; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x00158576: xor ah, 0x6f; stc; call dword ptr [eax - 1]; 
0x001476d8: xor ah, 0xbe; stc; call dword ptr [eax - 0x18]; 
0x0006c2ab: xor ah, al; mov ebp, dword ptr [esp + 0x50]; mov ecx, dword ptr [ebp + eax*4]; add ecx, ebx; jmp ecx; 
0x0006c418: xor ah, al; mov ecx, dword ptr [edi + eax*4 - 0x72854]; add ecx, ebx; jmp ecx; 
0x00170a2b: xor ah, bh; jmp dword ptr [esi - 0x70]; 
0x00094bfa: xor ah, byte ptr [eax - 0x3b7cfff8]; adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x00088ec6: xor al, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x76efdbac], cl; ret; 
0x0006abea: xor al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x16abdbbc], cl; ret; 
0x00115898: xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001263a1: xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000818a0: xor al, 0x1a; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000f4ab7: xor al, 0x24; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00163b75: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0002f42c: xor al, 0x24; call ebx; 
0x00157be1: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0014f5e5: xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0017d64a: xor al, 0x24; ret; 
0x00131e37: xor al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00166a27: xor al, 0x29; ret 0xfa01; 
0x00061752: xor al, 0x29; ret; 
0x0012872b: xor al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00027b2a: xor al, 0x31; ror byte ptr [ebp - 0x6c71869], cl; call dword ptr [edx + 0x50]; 
0x000d1e72: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0013d6af: xor al, 0x39; ret 0x470f; 
0x0005e675: xor al, 0x42; stc; call dword ptr [eax - 0x18]; 
0x0007e105: xor al, 0x50; call ebx; 
0x000ccf51: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000bdb71: xor al, 0x50; push ebp; call esi; 
0x000c0255: xor al, 0x51; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000bdb68: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00133e79: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x7a910; add esp, 0x2c; ret; 
0x0016c554: xor al, 0x53; call dword ptr [eax + 0x14]; 
0x00164c30: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0011c4bf: xor al, 0x5a; stc; call dword ptr [eax - 0x18]; 
0x001186a7: xor al, 0x5b; pop esi; pop edi; ret; 
0x0003fc2c: xor al, 0x5b; pop esi; ret 4; 
0x000f2233: xor al, 0x5b; pop esi; ret; 
0x001476a3: xor al, 0x6b; stc; call dword ptr [eax - 0x18]; 
0x00162de2: xor al, 0x72; stc; call dword ptr [eax + 0x6a]; 
0x00162ee2: xor al, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00162ee2: xor al, 0x72; stc; call dword ptr [eax - 0x18]; ret; 
0x00162e36: xor al, 0x72; stc; jmp dword ptr [ebp - 0x75]; 
0x0011bdb3: xor al, 0x74; ret 0x4c8b; 
0x0011ef7d: xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x000d1e75: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0002ab84: xor al, 0x80; stc; call dword ptr [eax - 0x18]; 
0x0010c15a: xor al, 0x81; les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00178b13: xor al, 0x83; in al, dx; or byte ptr [ebp - 0x68a104a], cl; call dword ptr [esi + 0x53]; 
0x0011b9e8: xor al, 0x83; int1; jmp dword ptr [esi - 0x70]; 
0x0003fdd3: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003c997: xor al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x001294e0: xor al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0012eb0a: xor al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00077544: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00084293: xor al, 0x83; ret 0x8901; 
0x0002d2e3: xor al, 0x83; ret 0xc704; 
0x0003f99b: xor al, 0x83; ret; 
0x000d5c64: xor al, 0x85; ror byte ptr [edi], 0x84; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00077563: xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0004dafc: xor al, 0x87; stc; call dword ptr [eax - 0x73]; 
0x000e18c2: xor al, 0x88; add esi, esi; ret 0xf02; 
0x000fb80f: xor al, 0x89; call 0x391598d7; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x6a52; 
0x00115d9c: xor al, 0x89; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001a7dd8: xor al, 0x89; fisttp qword ptr [ebx - 0x7cbfdba4]; ret; 
0x0011f8d6: xor al, 0x89; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120206: xor al, 0x89; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00128a49: xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011fbcc: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204fc: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d4c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f0c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000d994f: xor al, 0x89; je 0xd9977; xor byte ptr [ecx - 0x16cbdbbc], cl; jmp edi; 
0x001664c3: xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0009a0d3: xor al, 0x89; ret 0x408b; 
0x001a847c: xor al, 0x89; ret 0x448b; 
0x00128f7c: xor al, 0x89; ret 0xc031; 
0x00078ac6: xor al, 0x89; ret 0xc483; 
0x00142e43: xor al, 0x89; ret 0xcac1; 
0x0014f511: xor al, 0x89; ret; 
0x0007cf7c: xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x000d83b2: xor al, 0x8b; jl 0xd83da; or al, 0x89; ret 0xe083; 
0x000d6c13: xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00125ed7: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000415e7: xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0016e8c8: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x001277d6: xor al, 0x8d; inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00185fb4: xor al, 0x8d; jl 0x185fdc; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000c24dd: xor al, 0x8d; xchg al, bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x000c34f2: xor al, 0x8d; xchg al, bh; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x000c61ef: xor al, 0x8d; xchg byte ptr [eax], dl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000c52ca: xor al, 0x8d; xchg dword ptr [eax], edx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00081852: xor al, 0x92; stc; call dword ptr [eax - 0x18]; 
0x00098627: xor al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x00078c12: xor al, 0xae; cli; jmp dword ptr [esi - 0x70]; 
0x0012edf8: xor al, 0xb6; stc; call dword ptr [eax - 0x18]; 
0x00124da7: xor al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126407: xor al, 0xb8; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00125df7: xor al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00129756: xor al, 0xb8; jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f2d20: xor al, 0xb8; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2ee0: xor al, 0xb8; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001052c8: xor al, 0xb8; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0014cd26: xor al, 0xc2; stc; call dword ptr [eax - 0x73]; 
0x000ba203: xor al, 0xc; add byte ptr [ecx + 0x105e6ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1de: xor al, 0xc; add byte ptr [ecx + 0x105e93c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1be: xor al, 0xc; add byte ptr [ecx + 0x105eb3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba1a1: xor al, 0xc; add byte ptr [ecx + 0x105ed0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba174: xor al, 0xc; add byte ptr [ecx + 0x105efdc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba15d: xor al, 0xc; add byte ptr [ecx + 0x105f14c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000567e8: xor al, 0xd5; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x00041ec8: xor al, 0xe4; adc eax, 0x18c48300; pop ebx; ret; 
0x001283b3: xor al, 0xe8; daa; add esi, esi; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000fb4d1: xor al, 0xe8; mov ecx, 0x8bffffc1; jl 0xfb4fe; adc al, 0x89; ret; 
0x00127a73: xor al, 0xe8; or al, 0xf6; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000745d8: xor al, 0xe8; ret 0xfffc; 
0x000d9957: xor al, 0xe9; jmp edi; 
0x000a3379: xor al, 0xf6; inc dword ptr [eax - 0x6d72fd1b]; pop esp; cmpsd dword ptr [esi], dword ptr es:[edi]; call 0xc24e4387; ret; 
0x0003445e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003443e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0003441e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0003439e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000343de: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0003433e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000343be: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0003437e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x000342fe: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0003435e: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x000343fe: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0003431e: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x001043e0: xor al, 0xfe; dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002fd63: xor al, 0xff; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0018a1bc: xor al, 0xff; inc dword ptr [ecx + 0x444d9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a221: xor al, 0xff; inc dword ptr [ecx + 0x445f4c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0018a1d2: xor al, 0xff; inc dword ptr [ecx + 0x44683c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c036e: xor al, 0xff; je 0xc0396; inc eax; push ebp; call esi; 
0x00156b39: xor al, 0xff; jmp dword ptr [ebp - 0x75]; 
0x001405f8: xor al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0011cc58: xor al, 0xff; ret; 
0x000d1d68: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000bc8a7: xor al, 1; add byte ptr [eax], al; ret; 
0x000deca4: xor al, 1; jl 0xdeccc; add al, 0x89; ret 0xfa29; 
0x0003308f: xor al, 2; push dword ptr [esp + 0x1c]; call 0x330a0; add esp, 0x1c; ret; 
0x000a50df: xor al, 2; push dword ptr [esp + 0x1c]; call 0xa50f0; add esp, 0x1c; ret; 
0x0009aaa7: xor al, 3; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0016b405: xor al, 4; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000575b1: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0018b1f4: xor al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016c5a8: xor al, 5; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x00111469: xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0006c0d0: xor al, ah; mov ecx, dword ptr [edi + eax*4 - 0x726d4]; add ecx, ebx; jmp ecx; 
0x0011e973: xor al, al; or eax, ecx; ret; 
0x000b30ca: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x0018b3fb: xor al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00144786: xor al, byte ptr [eax]; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00070196: xor al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; call ecx; 
0x000e2327: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00127fb2: xor al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000e0ca1: xor al, byte ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x0015274d: xor al, byte ptr [ebx - 0x7872f714]; lahf; push eax; stc; call dword ptr [eax + 0x56]; 
0x0009c075: xor al, byte ptr [ebx - 0x7a72fb14]; mov cl, 0x51; stc; call dword ptr [eax + 0x53]; 
0x0010b57f: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00141927: xor al, ch; arpl word ptr [eax], bx; out dx, al; jmp dword ptr [ebp - 0x5f]; 
0x000579f3: xor al, ch; daa; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d2f22: xor al, ch; js 0xd2f4b; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005db63: xor al, ch; mov bh, 0x49; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b9f93: xor al, ch; mov eax, 0x81000c36; rcr dword ptr [ebx + 0x60], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6cfa: xor al, ch; push ecx; imul ecx, dword ptr [eax + eax], 0x9274c181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a1a47: xor al, ch; ret; 
0x000ad41c: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0014abfb: xor bh, al; inc esp; ret 4; 
0x0018a61e: xor bh, bh; inc dword ptr [ecx + 0x44077c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a585: xor bh, bh; inc dword ptr [ecx + 0x44110c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a3c8: xor bh, bh; inc dword ptr [ecx + 0x442cdc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00111a5d: xor bh, bh; ja 0x111a6d; call dword ptr [edi + 0x24]; 
0x00111cd9: xor bh, bh; ja 0x111ce9; call dword ptr [edi + 0x24]; 
0x00112b7d: xor bh, bh; ja 0x112b8d; call dword ptr [edi + 0x24]; 
0x00112df9: xor bh, bh; ja 0x112e09; call dword ptr [edi + 0x24]; 
0x00113cad: xor bh, bh; ja 0x113cbd; call dword ptr [edi + 0x24]; 
0x00113f29: xor bh, bh; ja 0x113f39; call dword ptr [edi + 0x24]; 
0x00025d4a: xor bh, bh; jae 0x25d52; call edi; 
0x00111e02: xor bh, bh; jbe 0x111e12; call dword ptr [esi + 0x24]; 
0x00112f22: xor bh, bh; jbe 0x112f32; call dword ptr [esi + 0x24]; 
0x00114052: xor bh, bh; jbe 0x114062; call dword ptr [esi + 0x24]; 
0x00088259: xor bh, bh; je 0x88281; cmp al, 0x51; call eax; 
0x00140a3f: xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x000ba681: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0018f3bb: xor bh, dl; jmp dword ptr [esi - 0x70]; 
0x0010499a: xor bl, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0003a6d0: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00104dac: xor bl, byte ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x00104dac: xor bl, byte ptr [eax - 7]; call dword ptr [eax - 0x18]; push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x000ba0c4: xor bl, byte ptr [edi + 0x10]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00095f7a: xor bl, byte ptr [edi - 6]; jmp dword ptr [esi - 0x70]; 
0x0008cf00: xor byte ptr [0xa0988d53], al; add al, 0; add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x001159bc: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00115abf: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00119336: xor byte ptr [eax + 0x154], bh; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000993ff: xor byte ptr [eax + 0x3b], 0; add byte ptr [eax], al; ret; 
0x001147fd: xor byte ptr [eax + 0xb7], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001218b0: xor byte ptr [eax + 0xcb], bh; call dword ptr gs:[0x10]; 
0x00121800: xor byte ptr [eax + 0xcc], bh; call dword ptr gs:[0x10]; 
0x00102da0: xor byte ptr [eax + 0xce], bh; call dword ptr gs:[0x10]; 
0x00102f55: xor byte ptr [eax + 0xd0], bh; call dword ptr gs:[0x10]; 
0x00102ea5: xor byte ptr [eax + 0xd2], bh; call dword ptr gs:[0x10]; 
0x0010301c: xor byte ptr [eax + 0xd5], bh; call dword ptr gs:[0x10]; 
0x00102cfc: xor byte ptr [eax + 0xd6], bh; call dword ptr gs:[0x10]; 
0x0010bab7: xor byte ptr [eax + 0xdd], bh; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0018b5e4: xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014faac: xor byte ptr [eax - 0x3e], 0xf9; call dword ptr [eax - 0x18]; 
0x00046cbb: xor byte ptr [eax - 0x7bf0cfc8], al; ret; 
0x000d5206: xor byte ptr [eax - 0x7bf0ffc2], al; mov al, byte ptr [0x83000000]; in al, dx; or byte ptr [ebp - 0x6aaa77d], cl; call dword ptr [eax + 0x56]; 
0x000a2a1e: xor byte ptr [eax - 1], 0x2a; cmp ecx, eax; jne 0xa2a18; mov eax, edx; pop ebx; ret; 
0x0002ef6b: xor byte ptr [eax - 1], 0xff; jmp dword ptr [ebp - 0x5f]; 
0x000248cf: xor byte ptr [eax], 0x69; stc; call dword ptr [eax - 0x18]; 
0x001322d0: xor byte ptr [eax], 0xb8; stc; call dword ptr [eax - 0x18]; 
0x0016deff: xor byte ptr [eax], al; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x000ba680: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0018d8ea: xor byte ptr [eax], dl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00085df9: xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d1e60: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00076505: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x000b4de0: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x0014f90d: xor byte ptr [ebp - 0x10], 0x39; ret; 
0x0008bf2c: xor byte ptr [ebp - 0x1a522380], cl; call dword ptr [eax - 0x73]; 
0x00033e14: xor byte ptr [ebp - 0x5977f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x69a897d], cl; call dword ptr [esi - 1]; 
0x0017313f: xor byte ptr [ebp - 0x636b37d], cl; call dword ptr [eax - 0x73]; 
0x0008c3c5: xor byte ptr [ebp - 0x66d7f80], cl; call dword ptr [eax - 0x18]; 
0x0015a890: xor byte ptr [ebp - 0x68f627a], cl; call dword ptr [eax + 0x6a]; 
0x0011a992: xor byte ptr [ebp - 0x691457d], cl; call dword ptr [eax + 0x6a]; 
0x00150a81: xor byte ptr [ebp - 0x691487a], cl; call dword ptr [eax + 0x6a]; 
0x0011a7fa: xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax + 0x6a]; 
0x0011a4a3: xor byte ptr [ebp - 0x6973f7d], cl; call dword ptr [eax - 1]; 
0x0011d0d1: xor byte ptr [ebp - 0x6a3cd7d], cl; call dword ptr [eax + 0x55]; 
0x0009b1db: xor byte ptr [ebp - 0x6aebf80], cl; call dword ptr [eax - 0x18]; 
0x00024e29: xor byte ptr [ebp - 0x6c7c57d], cl; call dword ptr [eax - 1]; 
0x00024e46: xor byte ptr [ebp - 0x6c7df7d], cl; call dword ptr [eax - 1]; 
0x000432a2: xor byte ptr [ebp - 0x7cff528c], cl; ret 0xf01; 
0x000d5de9: xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x0016f8d6: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0016c57f: xor byte ptr [ebx + 0x50532050], cl; call dword ptr [edx + 4]; 
0x000b6cf7: xor byte ptr [ebx + 0x51e830c0], al; imul ecx, dword ptr [eax + eax], 0x9274c181; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012d575: xor byte ptr [ebx + 0x53500cc4], al; push 0x2000001; call dword ptr [edi + 0x14]; 
0x0016670a: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x000ba236: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b6e01: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x0007ba15: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00135d9c: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0002826f: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0003a62e: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0002c029: xor byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x0017a3fe: xor byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0008cc67: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00171b8d: xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00137a5e: xor byte ptr [ebx + 0x84c8d17], cl; or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x000b3767: xor byte ptr [ebx + esi*8 - 0x1f170001], 0x9e; or al, 0; add ecx, 0x10c5cf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9f90: xor byte ptr [ebx - 0x4717cf40], al; or al, 0; add ecx, 0x10605b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001156cf: xor byte ptr [ebx - 0x47c3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124da3: xor byte ptr [ebx - 0x47cbdbb4], cl; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00126403: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00125df3: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f2d1c: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f2edc: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001052c4: xor byte ptr [ebx - 0x47cbdbb4], cl; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00054a62: xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x0012974a: xor byte ptr [ebx - 0x72c7dbac], cl; je 0x129776; or byte ptr [ebx - 0x47cbdb84], cl; jne 0x12975a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00185fb0: xor byte ptr [ebx - 0x72cbdbac], cl; jl 0x185fdc; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00139188: xor byte ptr [ebx - 0x72ebdbbc], cl; add byte ptr [edx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0007cf78: xor byte ptr [ebx - 0x74cbdb8c], cl; adc esi, esi; ret 0xf08; 
0x00115d98: xor byte ptr [ebx - 0x76cbdbb4], cl; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011f8d2: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00120202: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011fbc8: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x001204f8: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f2d48: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000f2f08: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00088619: xor byte ptr [ebx - 0x76d3db8c], cl; ret 0x4c89; 
0x00127723: xor byte ptr [ebx - 0x76f3dbbc], cl; inc esp; and al, 0x34; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0005dadf: xor byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x001425b6: xor byte ptr [ebx - 0x7872f714], al; aad 0x3d; stc; call dword ptr [eax + 0x56]; 
0x00062ef3: xor byte ptr [ebx - 0x79f0f608], al; imul eax, dword ptr [edi], 0; add byte ptr [ebx - 0x58b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d4def: xor byte ptr [ebx - 0x79f0f608], al; ret 0xfffe; 
0x0014f582: xor byte ptr [ebx], 0x6e; stc; call dword ptr [eax + 0x55]; 
0x0009aa77: xor byte ptr [ebx], al; add byte ptr [eax], al; mov dword ptr [eax + 0x358], 1; ret; 
0x0018cdea: xor byte ptr [ebx], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001159fd: xor byte ptr [ecx + 0x244489ea], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00115afd: xor byte ptr [ecx + 0x244489fa], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0007ba10: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00152f18: xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00128034: xor byte ptr [ecx + 0x448b2404], cl; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0017a4c6: xor byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00173dd0: xor byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000943c6: xor byte ptr [ecx + 0x90c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00119134: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x000a2431: xor byte ptr [ecx + 0xfd138f2], cl; xchg esp, eax; ret 0xc984; 
0x000d9953: xor byte ptr [ecx - 0x16cbdbbc], cl; jmp edi; 
0x00141319: xor byte ptr [ecx - 0x187a7239], cl; cmp cl, bh; call dword ptr [eax + 0x57]; 
0x0010baf8: xor byte ptr [ecx - 0x7615760f], cl; inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00129434: xor byte ptr [ecx - 0x76bbdbac], cl; ret 0xc031; 
0x00157ffc: xor byte ptr [ecx - 1], dl; inc dword ptr [ebx - 0x3f7aef3c]; je 0x158010; sub esp, 0xc; push esi; call eax; 
0x000248d0: xor byte ptr [ecx - 7], ch; call dword ptr [eax - 0x18]; 
0x0017d6b2: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x000920a5: xor byte ptr [ecx], 0xc0; ret; 
0x000dd308: xor byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x0011726e: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bb065: xor byte ptr [ecx], al; ret 0x267c; 
0x00051ac3: xor byte ptr [ecx], al; ret; 
0x0018ad6a: xor byte ptr [ecx], bh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d1e5d: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000f399c: xor byte ptr [ecx], bh; ret 0x4e0f; 
0x000e4b86: xor byte ptr [ecx], bh; ret 0x840f; 
0x0009b198: xor byte ptr [ecx], bh; ret; 
0x001013b2: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00136be4: xor byte ptr [ecx], ch; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00136a92: xor byte ptr [ecx], ch; fmul dword ptr [ebx + 0x124245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00172a69: xor byte ptr [ecx], ch; ret 0x5356; 
0x000a5c86: xor byte ptr [ecx], ch; ret; 
0x0012b632: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0012bffa: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x000b36e0: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a9864: xor byte ptr [edi + 0x5e], bl; ret; 
0x0017adc4: xor byte ptr [edi - 1], 0xff; inc dword ptr [ebx + 0x36ff04ec]; push dword ptr [ebx]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000badc2: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000ad2e6: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a6a8e: xor byte ptr [edi], cl; xchg esp, eax; ret 0xb60f; 
0x000a6a2f: xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x000a6abc: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00088330: xor byte ptr [edx + 0x51], dl; call eax; 
0x00133adb: xor byte ptr [edx - 1], dl; je 0x133b04; sub al, 0xe8; lcall 0x2cc4, 0x83fff452; ret; 
0x0018a199: xor byte ptr [edx], 0x84; cli; jmp dword ptr [esi - 0x70]; 
0x00188199: xor byte ptr [edx], 0xa4; cli; jmp dword ptr [esi - 0x70]; 
0x00186799: xor byte ptr [edx], 0xbe; cli; jmp dword ptr [esi - 0x70]; 
0x0019e24c: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024c14: xor byte ptr [edx], bl; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00024b74: xor byte ptr [edx], bl; add byte ptr [eax], al; ret; 
0x000bffd4: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00199ab1: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0019dc6f: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x000bac8b: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0016e677: xor byte ptr [esi + eax - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017ea97: xor byte ptr [esi - 0x18], dl; jb 0x17ea37; out dx, eax; jmp dword ptr [ecx]; 
0x0005b3b7: xor byte ptr [esi - 0x18], dl; ret 0x609; 
0x001897ea: xor byte ptr [esp + eax], cl; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b421d: xor byte ptr [esp + ecx + 0x7fc18100], dl; mov esp, 0xc030010; cdq; jmp ecx; 
0x0019df16: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0009b9a7: xor ch, byte ptr [ecx]; ret 0x850f; 
0x00145a4f: xor ch, byte ptr [ecx]; ret; 
0x000bb156: xor ch, ch; add eax, ecx; pop edi; ret; 
0x00103bfa: xor ch, ch; call dword ptr [ebp + 0x6a]; 
0x00089389: xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008940a: xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008940a: xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008b139: xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0008ac2b: xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008ba40: xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091ce2: xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x001497ff: xor cl, al; stc; call dword ptr [eax - 0x73]; 
0x00120bb5: xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x000a59a2: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x000e2c9b: xor cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000a8f61: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x0012f684: xor cl, byte ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x65b3808d; stc; call dword ptr [eax - 0x75]; 
0x000286e5: xor cl, byte ptr [ebx - 0x72c3dba4]; or dword ptr [ebx + edi*2], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0008aa05: xor cl, byte ptr [ebx - 0x776f3b5]; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000a58f2: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000dcfcf: xor cl, ch; in al, 0xff; call dword ptr [ebx + 0x51]; 
0x00060522: xor cl, ch; mov esi, 0xe8ffffe9; ret; 
0x000750f4: xor cl, ch; ret 0xfffe; 
0x00044b87: xor cl, ch; ret; 
0x000df3e8: xor cl, ch; scasb al, byte ptr es:[edi]; in al, 0xff; call dword ptr [esi + 0x51]; 
0x000b9853: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000b190c: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000f6d9a: xor dh, dh; ret 0x7404; 
0x0018e3d9: xor dl, 0x41; cli; jmp dword ptr [esi - 0x70]; 
0x001904ea: xor dl, ch; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012a8b9: xor dword ptr [eax + 0x47], 0xb730000; mov edx, dword ptr [ecx + 0x4774]; add word ptr [edx + eax*2], 1; ret; 
0x00087a9e: xor dword ptr [eax + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000f51d3: xor dword ptr [eax + 0x57], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x0011d1ab: xor dword ptr [eax + 0x5c], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x0016e319: xor dword ptr [eax + 1], 0; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0018b54b: xor dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00168e6e: xor dword ptr [eax - 0x1000000], 0x74; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x00168e4c: xor dword ptr [eax - 0x1000000], 0xffffffb3; test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0003199d: xor dword ptr [eax], 0x9000011; ret 0x850f; 
0x0012369b: xor dword ptr [eax], 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x001497fe: xor dword ptr [eax], 0xffffffc1; stc; call dword ptr [eax - 0x73]; 
0x0012bfd3: xor dword ptr [ebp - 0x76ea8b37], eax; ret; 
0x001647ae: xor dword ptr [ebx + 0x438b0cec], eax; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0007a5d7: xor dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00177392: xor dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x000254a6: xor dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x000764fe: xor dword ptr [ebx + 0x74ff04ec], eax; and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0008865f: xor dword ptr [ebx - 0x2776df3c], eax; pop ebx; pop esi; pop edi; ret; 
0x00118fae: xor dword ptr [ebx - 0x47dfdba4], ecx; add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000e953e: xor dword ptr [ebx - 0x5af7b], ecx; jmp dword ptr [ebp - 0x75]; 
0x000f025e: xor dword ptr [ebx - 0x5bf7b], ecx; jmp dword ptr [ebp - 0x75]; 
0x00115d5e: xor dword ptr [ebx - 0x74cfdba4], ecx; dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0014e383: xor dword ptr [ebx], 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00159531: xor dword ptr [ebx], 0x70; stc; call dword ptr [eax - 0x18]; 
0x00159531: xor dword ptr [ebx], 0x70; stc; call dword ptr [eax - 0x18]; inc esp; or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001596e4: xor dword ptr [ebx], 0x70; stc; call dword ptr [eax - 0x73]; 
0x000500da: xor dword ptr [ebx], ecx; add byte ptr [ebx - 0x76a8eb3c], al; ret; 
0x0003ecd3: xor dword ptr [ecx + 0x3e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00033c03: xor dword ptr [ecx + 0x5f5e5b10], ecx; pop ebp; ret; 
0x0015c0e2: xor dword ptr [ecx - 7], esi; call dword ptr [eax - 0x18]; 
0x0015c0e2: xor dword ptr [ecx - 7], esi; call dword ptr [eax - 0x18]; xchg esp, eax; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0015c283: xor dword ptr [ecx - 7], esi; call dword ptr [eax - 0x73]; 
0x0015c0e1: xor dword ptr [ecx], 0x71; stc; call dword ptr [eax - 0x18]; 
0x0015c0e1: xor dword ptr [ecx], 0x71; stc; call dword ptr [eax - 0x18]; xchg esp, eax; fdivp st(6); jmp dword ptr [ebp - 0x75]; 
0x0015c282: xor dword ptr [ecx], 0x71; stc; call dword ptr [eax - 0x73]; 
0x00116ae3: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001208e1: xor dword ptr [ecx], eax; add byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x000b43cb: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00087a2a: xor dword ptr [edi + 0x4e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x0018d204: xor dword ptr [edi + edi*8], eax; inc dword ptr [ecx + 0x41710c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00159d83: xor dword ptr [edx + 0x70], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0011c4be: xor dword ptr [edx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00081851: xor dword ptr [edx + edx*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0007b72f: xor dword ptr [edx - 1], 0xffffffff; call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x00104dab: xor dword ptr [edx], 0x58; stc; call dword ptr [eax - 0x18]; 
0x00104dab: xor dword ptr [edx], 0x58; stc; call dword ptr [eax - 0x18]; push -0x11; bnd jmp dword ptr [esi - 0x70]; 
0x0011d0d3: xor dword ptr [edx], 0x5c; stc; call dword ptr [eax + 0x55]; 
0x000f53ac: xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x00079eea: xor dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0012ef1b: xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x00024864: xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0002492f: xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [edi + 0x57]; 
0x00033e1e: xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [esi - 1]; 
0x001996b5: xor dword ptr [esi - 0x7cffffff], 0xffffffed; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00189004: xor dword ptr [esi - 1], eax; inc dword ptr [ecx + 0x45410c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011afdb: xor eax, 0x18c483ff; pop ebx; ret; 
0x0004208f: xor eax, 0x1f; add eax, 1; ret; 
0x00042164: xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004252a: xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00042074: xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0004247a: xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00042125: xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000424a5: xor eax, 0x1f; ret; 
0x000bb2bc: xor eax, 0x1f; sar eax, 3; sub edx, eax; lea eax, [edx + 3]; ret; 
0x00045bd7: xor eax, 0x29000000; ret 0x850f; 
0x00102c01: xor eax, 0x530012e2; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0007b122: xor eax, 0x530cec83; call dword ptr [esi + 0x10]; 
0x0017182f: xor eax, 0x5b18c483; ret; 
0x0009564d: xor eax, 0x5b24c483; pop esi; ret; 
0x0009bf92: xor eax, 0x5e5bf889; pop edi; ret; 
0x00146c1f: xor eax, 0x6b; stc; call dword ptr [eax - 0x18]; 
0x0015a900: xor eax, 0x8100022d; ret; 
0x00159e00: xor eax, 0x81000238; ret; 
0x0014e400: xor eax, 0x810002f2; ret; 
0x0014d500: xor eax, 0x81000301; ret; 
0x000ba018: xor eax, 0x81000c36; rcr eax, 0x5f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b6d18: xor eax, 0x81000c69; rcr dword ptr [eax - 0x6e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b2a18: xor eax, 0x81000cac; shl dword ptr [edx + edx*8 + 0xc030010], 0x91; jmp ecx; 
0x00094fd0: xor eax, 0x8908ec83; ret; 
0x001167d7: xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000ba142: xor eax, 0xc181000c; das; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba07c: xor eax, 0xc181000c; jne 0xba0e2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba0e4: xor eax, 0xc181000c; or eax, 0x300105f; or al, 0x91; jmp ecx; 
0x000ba102: xor eax, 0xc181000c; out dx, eax; pop esi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba095: xor eax, 0xc181000c; pop esp; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba120: xor eax, 0xc181000c; push ecx; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba05b: xor eax, 0xc181000c; xchg esi, eax; pop edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba0bf: xor eax, 0xc181000c; xor bl, byte ptr [edi + 0x10]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001265ca: xor eax, 0xc244c8d; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012524a: xor eax, 0xc244c8d; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001446ea: xor eax, 0xc4830000; adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0017294b: xor eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x000a33b9: xor eax, 0xe580fff6; add cl, byte ptr [ebp - 0x1759036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00031e57: xor eax, 0xf6ffffff; ret 0x7503; 
0x0003a19b: xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x00134a69: xor eax, 0xffffffff; dec dword ptr [ebp - 0x6470779]; call dword ptr [eax - 0x73]; 
0x0005667c: xor eax, 0xffffffff; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x001448c8: xor eax, 1; pop ebx; ret; 
0x00131df5: xor eax, dword ptr [0x18]; call eax; 
0x00025081: xor eax, dword ptr [0x18]; jmp eax; 
0x00135608: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d4: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e6bc: xor eax, dword ptr [0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002510c: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x0014c859: xor eax, dword ptr [0x18]; pop edi; pop ebp; ret; 
0x0014c4a6: xor eax, dword ptr [0x18]; push eax; call edx; 
0x00131e24: xor eax, dword ptr [0x18]; push esi; call eax; 
0x0003eaac: xor eax, dword ptr [0x18]; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x0018b2ab: xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00119a37: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00144656: xor eax, dword ptr [eax]; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000384f4: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x001649e5: xor eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000585f4: xor eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000255f2: xor eax, dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000e01af: xor eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x001660a4: xor eax, dword ptr [ebx - 0x72affb14]; xor dword ptr [esi + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0003fca9: xor eax, dword ptr [ebx]; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x001a031d: xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x0010b378: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a0323: xor eax, dword ptr [ecx]; ret 0xd089; 
0x0007fbb4: xor eax, dword ptr [ecx]; ret; 
0x00131df4: xor eax, dword ptr gs:[0x18]; call eax; 
0x00025080: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00135607: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x001356d3: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003e6bb: xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002510b: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0014c858: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x0014c4a5: xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00131e23: xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003eaab: xor eax, dword ptr gs:[0x18]; xchg dword ptr [ecx], edx; cmp edx, 1; jg 0x3eb70; call eax; 
0x0011a389: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003e907: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00088d94: xor eax, eax; add esp, 0xc; ret; 
0x00039b02: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003fa96: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000f30e8: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xf3100; pop ebx; pop esi; ret; 
0x000df4b7: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xdf4c8; add esp, 0xc; ret; 
0x000df5a7: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xdf5b8; add esp, 0xc; ret; 
0x000342e4: xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0019f7a3: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x19f7b0; pop ebx; ret; 
0x0015133b: xor eax, eax; cmp ecx, edx; setne al; ret; 
0x000f28d4: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000f28b2: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000a3283: xor eax, eax; cmp edx, 0x40; ja 0xa3291; mov eax, dword ptr [ecx + edx*4 - 0xe14]; ret; 
0x000a32b3: xor eax, eax; cmp edx, 0x40; ja 0xa32c1; mov eax, dword ptr [ecx + edx*4 - 0xcf4]; ret; 
0x000f2908: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000886d2: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0014486b: xor eax, eax; cmp word ptr [edx + 2], bx; je 0x144878; pop ebx; ret; 
0x0003d735: xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x163; xor edx, edx; call dword ptr gs:[0x10]; 
0x0011c062: xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0007b475: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0008a874: xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000a53ca: xor eax, eax; mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x0009b695: xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c04], 1; lea ebx, [esi + 0x3bfc]; call dword ptr gs:[0x10]; 
0x0010c1f4: xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000e14ce: xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00102ad0: xor eax, eax; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00125fe0: xor eax, eax; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x64]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00129cd8: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x129ce8; ret; 
0x000d2148: xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd2172; ret; 
0x00058167: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x58180; add esp, 0xc; ret; 
0x00073b77: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x73b90; add esp, 0xc; ret; 
0x000d6c0e: xor eax, eax; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011947e: xor eax, eax; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00050324: xor eax, eax; mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00118e54: xor eax, eax; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011e9ca: xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x00199852: xor eax, eax; pop ebp; ret; 
0x0008a649: xor eax, eax; pop ebx; pop edi; ret; 
0x00131e4e: xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x000270bb: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004009c: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0003fe82: xor eax, eax; pop ebx; pop esi; ret; 
0x0003bd9a: xor eax, eax; pop ebx; ret; 
0x0019add1: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x0019a870: xor eax, eax; pop edi; pop ebx; ret; 
0x000d1d34: xor eax, eax; pop edi; pop esi; ret; 
0x000ba880: xor eax, eax; pop edi; ret; 
0x0009fb2b: xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x0003f75a: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x000422b1: xor eax, eax; pop esi; pop edi; ret; 
0x0008a516: xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003cb14: xor eax, eax; ret; 
0x001050ee: xor eax, eax; test edi, edi; mov edx, dword ptr [esp + 0x88]; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003cde0: xor eax, eax; test edx, edx; sete al; ret; 
0x000426e8: xor eax, eax; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x001a02e2: xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x00102460: xor eax, eax; xchg dword ptr [edi + 0x3f8c], eax; cmp eax, 1; jg 0x1024a8; call dword ptr [esi]; 
0x00040cff: xor eax, ebx; pop ebx; ret; 
0x0003a8cb: xor eax, ecx; shr eax, 0x1f; ret; 
0x000423db: xor eax, edx; cmp edx, eax; setb al; ret; 
0x000423bc: xor eax, edx; cmp edx, eax; setle al; ret; 
0x00039822: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x39808; ret; 
0x0011d409: xor ebp, 0x60; stc; call dword ptr [eax + 0x55]; 
0x0014f583: xor ebp, dword ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x0014e384: xor ebp, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0012459d: xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00160b54: xor ebp, ebp; jmp dword ptr [esi - 0x70]; 
0x0012fdae: xor ebp, edi; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x00183b93: xor ebx, 0x10c483ff; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0005a45d: xor ebx, 0x40; stc; call dword ptr [eax + 0x57]; 
0x00089649: xor ebx, dword ptr [edx - 0x3b7c0007]; adc bl, ch; ret 0xb68d; 
0x00133e39: xor ebx, dword ptr [edx - 9]; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000d4259: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000d4259: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xd4270; pop ebx; ret; 
0x0008cf67: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00103b1f: xor ebx, ebx; mov dword ptr [esp + 0xac], eax; mov eax, 0xaf; mov dword ptr [esp + 0xb8], 0; call dword ptr gs:[0x10]; 
0x000be420: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00119417: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00131d35: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00024cdc: xor ebx, ebx; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000424f4: xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; pop esi; ret; 
0x00041cf9: xor ecx, 0x1f; shr eax, cl; ret; 
0x000903a3: xor ecx, 0x4f; stc; call dword ptr [eax - 0x18]; 
0x0014d554: xor ecx, 0x6d; stc; call dword ptr [eax - 0x18]; 
0x00117f3c: xor ecx, dword ptr [ebx - 0x47dfdba4]; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012533c: xor ecx, dword ptr [ebx - 0x47f3dba4]; js 0x125345; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014865a: xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x000a54dc: xor ecx, dword ptr [ecx - 0x760e7605]; aad 0x83; ret 0x3801; 
0x00034ab4: xor ecx, ecx; call 0x345b0; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00115ef9: xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00115ef9: xor ecx, ecx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x115f10; pop ebx; ret; 
0x0014c73f: xor ecx, ecx; cmp eax, 2; jne 0x14c750; mov eax, ecx; ret; 
0x00094519: xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000df659: xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0008f380: xor ecx, ecx; mov eax, 0xf0; mov esi, ecx; call dword ptr gs:[0x10]; 
0x001467a6: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0003f6d3: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008a95f: xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000421d0: xor ecx, ecx; pop ebx; pop esi; mov eax, ecx; ret; 
0x000234cd: xor edi, 0x3f; stc; call dword ptr [eax + 0x52]; 
0x00030775: xor edi, dword ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x000a34e0: xor edi, dword ptr [ecx]; ret 0x3d73; 
0x0016b5a6: xor edi, ecx; call dword ptr [eax + 0x52]; 
0x000954b6: xor edi, edi; dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0018a4cd: xor edi, edi; inc dword ptr [ecx + 0x44288c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0018a2c2: xor edi, edi; inc dword ptr [ecx + 0x44493c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017adcf: xor edi, edi; je 0x17adf7; or al, 0x8b; inc esp; and al, 0x18; call eax; 
0x0017aee7: xor edi, edi; je 0x17af0f; or al, 0x8b; inc esp; and al, 0x18; call eax; 
0x001253f3: xor edi, edi; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00077ee4: xor edi, edi; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000420db: xor edx, 0x1f; add edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x001180e9: xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0004249d: xor edx, 0xffffffff; je 0x424a8; bsr eax, edx; xor eax, 0x1f; ret; 
0x000424bd: xor edx, 0xffffffff; je 0x424c8; bsr eax, edx; xor eax, 0x1f; ret; 
0x00024b69: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x00024b68: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a30], edx; ret; 
0x0014bb28: xor edx, edx; add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x14bb38; ret; 
0x001306fd: xor edx, edx; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x00166448: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003d6b7: xor edx, edx; call dword ptr gs:[0x10]; 
0x00104de1: xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x000d6feb: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00132e6e: xor edx, edx; div ebx; pop ebx; pop esi; pop edi; ret; 
0x0010ab50: xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000415a5: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008ebea: xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00057983: xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0009211a: xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x00104013: xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0008df09: xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008cfa2: xor edx, edx; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00099286: xor edx, edx; mov eax, 1; call 0x991f0; mov dword ptr [esp], esi; call ebx; 
0x0012ac07: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x12aad0; add esp, 4; ret; 
0x0016649c: xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x000813ad: xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0008faa8: xor edx, edx; mov eax, edx; ret; 
0x0002324f: xor edx, edx; mov ebx, 1; mov esi, 8; mov dword ptr [ebp + 0x135c], 1; call dword ptr gs:[0x10]; 
0x00103c77: xor edx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008eefb: xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00097d5b: xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008d673: xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008cefc: xor edx, edx; mov esi, 0x53053053; lea ebx, [eax + 0x4a0]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0008d93b: xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010407b: xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0009106e: xor edx, edx; mov esi, edx; call dword ptr gs:[0x10]; 
0x000a5700: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000420f0: xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x00041ca5: xor edx, edx; pop ebx; ret; 
0x0003f73b: xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00099621: xor edx, edx; test cl, 0x40; jne 0x99650; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0012cfea: xor edx, edx; test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00080b5b: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x00042238: xor edx, edx; tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x00091ce0: xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x001208d4: xor esi, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00091809: xor esi, 0xfffffffe; jmp dword ptr [ebp - 0x39]; 
0x00159532: xor esi, dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x00159532: xor esi, dword ptr [eax - 7]; call dword ptr [eax - 0x18]; inc esp; or bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001596e5: xor esi, dword ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x00094828: xor esi, dword ptr [ebp + 5]; xor eax, eax; pop ebx; pop esi; ret; 
0x00148802: xor esi, dword ptr [ebp - 0x55]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00097f5f: xor esi, dword ptr [ebp - 0x62]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x001a031b: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x001a0321: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x00167502: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x0016736f: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret; 
0x00167504: xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x00167371: xor esi, dword ptr [ecx]; ret; 
0x00090162: xor esi, dword ptr [edi + eax - 0x77]; ret 0xc8e9; 
0x001509c1: xor esi, edi; jmp dword ptr [esi - 0x70]; 
0x000566eb: xor esi, edx; std; dec dword ptr [ebx - 0x365f43]; dec dword ptr [ebp - 0x678b379]; call dword ptr [eax - 0x73]; 
0x0008b370: xor esi, esi; add ebx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001778a0: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00090832: xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089318: xor esi, esi; call dword ptr gs:[0x10]; 
0x00081f22: xor esi, esi; cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x000adae1: xor esi, esi; jmp 0xacba0; lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x000b1fb1: xor esi, esi; jmp 0xb0f90; lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x00089b08: xor esi, esi; lea ebx, [eax + 0x10]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b643: xor esi, esi; lea ebx, [ebp + eax + 0x28]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00089d47: xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000887b9: xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000893d5: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000893d5: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008c5c6: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008be86: xor esi, esi; mov ebx, dword ptr [esp + 4]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c214: xor esi, esi; mov ebx, dword ptr [esp]; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092897: xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b3e2: xor esi, esi; mov ebx, edi; call dword ptr gs:[0x10]; 
0x0008b1cd: xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ff58: xor esi, esi; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00128d04: xor esi, esi; mov ecx, dword ptr [esp + 0x90]; or dh, 1; call dword ptr gs:[0x10]; 
0x0008b133: xor esi, esi; mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0017fee4: xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00092246: xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0008ab7d: xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bb9f: xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x0008b44f: xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000bb580: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x000922e0: xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x000893ff: xor esi, esi; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0019eebc: xor esi, esi; ret 0xf01; 
0x00089387: xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008b976: xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011d2d1: xor esp, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x001236d3: xor esp, 0x63; stc; call dword ptr [eax - 0x18]; 
0x001a021c: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001042e9: xor esp, ecx; std; call dword ptr [ecx + 0x6a]; 
0x0017093b: xor esp, edi; jmp dword ptr [esi - 0x70]; 
0x001858b9: xor esp, edx; cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x64eff79]; call dword ptr [eax - 0x73]; 

47383 gadgets found
