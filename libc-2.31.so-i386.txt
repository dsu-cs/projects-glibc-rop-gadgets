


Gadgets
=======


0x0013b94e: aaa; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0013bb1f: aaa; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00037a54: aaa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00139933: aaa; add byte ptr [eax], al; jmp dword ptr [eax + 8]; 
0x0013a61a: aaa; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013cb89: aaa; add byte ptr [eax], al; pop ebx; pop esi; pop edi; jmp eax; 
0x0013978e: aaa; add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 4]; 
0x001396e6: aaa; add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax]; 
0x0009f604: aaa; call ebx; 
0x0009f565: aaa; call esi; 
0x000e4563: aaa; idiv edi; dec dword ptr [ebp - 0x12f7b]; dec dword ptr [ebp - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x0007d445: aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x00101bb6: aaa; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000f5d04: aaa; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ece88: aaa; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecc48: aaa; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000f5d28: aaa; mov edi, dword ptr [edi - 0x108]; mov eax, 0x36; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00083025: aaa; mov esp, 0xb48d0008; add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x0011a443: aaa; pop esi; pop edi; ret; 
0x0013b0e3: aaa; push dword ptr [ebx + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003387f: aaa; push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ce4f5: aaa; ret 0xfffa; 
0x00033841: aaa; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000fbfa8: aaa; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000c66da: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013f257: aad 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x0010a7ab: aad 0x57; cli; call dword ptr [eax - 0x75]; 
0x00044b96: aad 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00107eca: aad 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008abf8: aad 0x83; ret 0x3801; 
0x000a1a6f: aad 0x83; ret; 
0x00067ee0: aad 0x89; ret 0x748d; 
0x00068130: aad 0x89; ret 0xb0e9; 
0x00068107: aad 0x89; ret 0xd9e9; 
0x0007b834: aad 0x89; ret 0xeac1; 
0x0002d592: aad 0x89; ret 0xee85; 
0x00075c99: aad 0x89; ret; 
0x00133d87: aad 0xae; std; jmp dword ptr [esi - 0x70]; 
0x0010765f: aad 0xc6; inc eax; jmp dword ptr [eax]; 
0x0012bb0d: aad 0xee; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0008b4ea: aad 0xf9; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x0005e96a: aad 0xf9; dec dword ptr [ebx - 0x2dff7d7c]; stc; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x00141702: aad 0xfc; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56e4b79]; call dword ptr [eax - 0x73]; 
0x00082b58: aad 0xfc; jmp dword ptr [ebp - 0x5f]; 
0x00152e8b: aad 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ee84e: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ee7d5: aam 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000b24a8: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000c6b4e: aam 0x11; add byte ptr [ecx + 0x154cec], al; add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x000891dc: aam 0x29; ret 0x28b; 
0x00089271: aam 0x29; ret 0x748d; 
0x001315dc: aam 0x2a; cli; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00025772: aam 0x2e; cli; call dword ptr [eax - 0x18]; 
0x00029411: aam 0x3a; adc dword ptr [eax], eax; add eax, 0x1babeb; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x0014609d: aam 0x66; movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00019125: aam 0x6b; cli; call dword ptr [eax - 0x18]; 
0x00025762: aam 0x6e; cli; call dword ptr [eax - 0x73]; 
0x000835d3: aam 0x83; in al, dx; or al, 0x50; call edx; 
0x00077363: aam 0x83; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, ebx; call dword ptr [eax + 0xc]; 
0x00088da2: aam 0x83; ret 0xf01; 
0x000c640d: aam 0x83; ret; 
0x00089d61: aam 0x85; ror byte ptr [edi], 0x89; ret 0; 
0x0002698d: aam 0x88; push ebp; ror byte ptr [ecx + 0x2fa80f2], 0xf; xchg esi, eax; ret 0x550a; 
0x0008a6e1: aam 0x89; inc ebp; add byte ptr [ebp + 0x1b8d2], 0; add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x000fd565: aam 0x89; inc ebp; fmul dword ptr [ebx - 0x7f7247bb]; int 0x4c; cli; call dword ptr [eax - 0x18]; 
0x000fd488: aam 0x89; inc ebp; fmul dword ptr [ebx - 0x7f7247bb]; xor al, 0x97; cli; call dword ptr [eax - 0x18]; 
0x000738f3: aam 0x89; ret 0xf889; 
0x000fc6ab: aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x000ce72b: aam 0x8b; mov esp, 0xf9fc3481; inc dword ptr [ecx]; iretd; jmp edi; 
0x0008b3fa: aam 0x8c; cli; call dword ptr [eax - 0x18]; 
0x0008b3fa: aam 0x8c; cli; call dword ptr [eax - 0x18]; cmp al, 0xda; stc; jmp dword ptr [esi - 0x70]; 
0x00100fd8: aam 0x97; cli; call dword ptr [eax - 0x73]; 
0x0011693a: aam 0x9b; cli; call dword ptr [eax - 0x73]; 
0x00031c11: aam 0xb2; adc byte ptr [eax], al; add eax, 0x1b23eb; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00096bfe: aam 0xb6; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00080020: aam 0xb9; add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0005182d: aam 0xb; add al, ch; mov eax, 0x81000eb6; ret 0x27cb; 
0x0009488e: aam 0xd7; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0016bca5: aam 0xea; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00120e0a: aam 0xf7; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000ed826: aam 0xf8; dec dword ptr [ebx - 0x76abdbb4]; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000a6c7b: aam 0xf9; call dword ptr [ebx - 1]; 
0x000b28b3: aam 0xf; lahf; ret; 
0x0013177b: aam 0xfd; jmp dword ptr [esi - 0x70]; 
0x0014fa4c: aam 0xfe; inc dword ptr [ecx + 0x40671c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014faa6: aam 0xfe; inc dword ptr [ecx + 0x406d7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0014fa5c: aam 0xfe; inc dword ptr [ecx + 0x40761c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005af71: aam 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00055d2c: aam 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0010222c: aam 1; add byte ptr [eax], al; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00152feb: aam 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ba6b: aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00161442: aas; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000dfed2: aas; cli; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x001017ad: aas; cwde; int1; jmp dword ptr [esi - 0x70]; 
0x00049570: aas; fdiv st(7), st(0); dec dword ptr [ebx - 0x365b63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x00152b03: aas; fld dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012e606: aas; hlt; call dword ptr [eax - 0x48]; 
0x0012e4a3: aas; hlt; call dword ptr [edx - 0x73]; 
0x0012e907: aas; hlt; call dword ptr [edx - 0x75]; 
0x00152003: aas; in al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c27fe: aas; inc edi; cli; call dword ptr [ecx + 0x50]; 
0x0014b5c3: aas; inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001613e2: aas; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000cc7cd: aas; jne 0xcc7e9; mov eax, 1; pop ebx; ret; 
0x00101c06: aas; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0009632d: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015af9d: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00076970: aas; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000264ab: aas; xchg esp, eax; clc; call dword ptr [ebp + 3]; 
0x00116939: adc ah, 0x9b; cli; call dword ptr [eax - 0x73]; 
0x0010a9d2: adc ah, bh; lock inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0002f7bd: adc ah, bl; sub al, 0x24; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015d392: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000dec99: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000a286b: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7e377626], cl; ret 0; 
0x00075804: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x00030e01: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c6621: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x001005b1: adc al, 0; add byte ptr [eax], al; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001006a6: adc al, 0; add byte ptr [eax], al; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100726: adc al, 0; add byte ptr [eax], al; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x001007b9: adc al, 0; add byte ptr [eax], al; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x00100831: adc al, 0; add byte ptr [eax], al; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c19: adc al, 0; add byte ptr [eax], al; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100c91: adc al, 0; add byte ptr [eax], al; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d06: adc al, 0; add byte ptr [eax], al; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00100d91: adc al, 0; add byte ptr [eax], al; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00101035: adc al, 0; add byte ptr [eax], al; jne 0x10103f; add esp, 0x1c; ret; 
0x001013af: adc al, 0; add byte ptr [eax], al; jne 0x1013c0; add esp, 0x7c; ret; 
0x0010e8e1: adc al, 0; add byte ptr [eax], al; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e951: adc al, 0; add byte ptr [eax], al; jne 0x10e965; add esp, 0x2c; ret; 
0x00115792: adc al, 0; add byte ptr [eax], al; jne 0x11579c; add esp, 0x2c; ret; 
0x0011ce4b: adc al, 0; add byte ptr [eax], al; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0011cea7: adc al, 0; add byte ptr [eax], al; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011cef3: adc al, 0; add byte ptr [eax], al; jne 0x11cefd; add esp, 0x1c; ret; 
0x001245d8: adc al, 0; add byte ptr [eax], al; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0012e3b5: adc al, 0; add byte ptr [eax], al; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e4dc: adc al, 0; add byte ptr [eax], al; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e57c: adc al, 0; add byte ptr [eax], al; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x0012e8cc: adc al, 0; add byte ptr [eax], al; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0012e943: adc al, 0; add byte ptr [eax], al; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x0012f707: adc al, 0; add byte ptr [eax], al; jne 0x12f711; add esp, 0x4c; ret; 
0x0012f777: adc al, 0; add byte ptr [eax], al; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e7: adc al, 0; add byte ptr [eax], al; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f857: adc al, 0; add byte ptr [eax], al; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8ba: adc al, 0; add byte ptr [eax], al; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f91a: adc al, 0; add byte ptr [eax], al; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f987: adc al, 0; add byte ptr [eax], al; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa07: adc al, 0; add byte ptr [eax], al; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012fde5: adc al, 0; add byte ptr [eax], al; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x0012febd: adc al, 0; add byte ptr [eax], al; jne 0x12fef4; add esp, 0x1c; ret; 
0x0013167e: adc al, 0; add byte ptr [eax], al; jne 0x131688; add esp, 0x2c; ret; 
0x0013170f: adc al, 0; add byte ptr [eax], al; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317ef: adc al, 0; add byte ptr [eax], al; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00131a96: adc al, 0; add byte ptr [eax], al; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b26: adc al, 0; add byte ptr [eax], al; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131be1: adc al, 0; add byte ptr [eax], al; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c4a: adc al, 0; add byte ptr [eax], al; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce6: adc al, 0; add byte ptr [eax], al; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132496: adc al, 0; add byte ptr [eax], al; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132526: adc al, 0; add byte ptr [eax], al; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b6: adc al, 0; add byte ptr [eax], al; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132646: adc al, 0; add byte ptr [eax], al; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x00132c8e: adc al, 0; add byte ptr [eax], al; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132cde: adc al, 0; add byte ptr [eax], al; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x00132d37: adc al, 0; add byte ptr [eax], al; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d97: adc al, 0; add byte ptr [eax], al; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x00137413: adc al, 0; add byte ptr [eax], al; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00138bd8: adc al, 0; add byte ptr [eax], al; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x00139630: adc al, 0; add byte ptr [eax], al; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d5: adc al, 0; add byte ptr [eax], al; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139777: adc al, 0; add byte ptr [eax], al; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x00139e9d: adc al, 0; add byte ptr [eax], al; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x0013cade: adc al, 0; add byte ptr [eax], al; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f5: adc al, 0; add byte ptr [eax], al; jne 0x13f8ff; add esp, 0x1c; ret; 
0x00145441: adc al, 0; add byte ptr [eax], al; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x0002fd14: adc al, 0; add byte ptr [eax], al; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e7: adc al, 0; add byte ptr [eax], al; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00031528: adc al, 0; add byte ptr [eax], al; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x000316ce: adc al, 0; add byte ptr [eax], al; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x00031e80: adc al, 0; add byte ptr [eax], al; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031ef0: adc al, 0; add byte ptr [eax], al; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x00034378: adc al, 0; add byte ptr [eax], al; jne 0x34382; add esp, 0x2c; ret; 
0x00034498: adc al, 0; add byte ptr [eax], al; jne 0x344a2; add esp, 0x2c; ret; 
0x00034d6a: adc al, 0; add byte ptr [eax], al; jne 0x34d74; add esp, 0x1c; ret; 
0x00034dbd: adc al, 0; add byte ptr [eax], al; jne 0x34dc7; add esp, 0x1c; ret; 
0x00034e0a: adc al, 0; add byte ptr [eax], al; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e5d: adc al, 0; add byte ptr [eax], al; jne 0x34e67; add esp, 0x1c; ret; 
0x00034eaa: adc al, 0; add byte ptr [eax], al; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034efd: adc al, 0; add byte ptr [eax], al; jne 0x34f07; add esp, 0x1c; ret; 
0x000508cc: adc al, 0; add byte ptr [eax], al; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x00050e84: adc al, 0; add byte ptr [eax], al; jne 0x50e97; add esp, 0x1c; ret; 
0x000744be: adc al, 0; add byte ptr [eax], al; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x000acb5a: adc al, 0; add byte ptr [eax], al; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b314a: adc al, 0; add byte ptr [eax], al; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31ca: adc al, 0; add byte ptr [eax], al; jne 0xb31d4; add esp, 0x1c; ret; 
0x000b3215: adc al, 0; add byte ptr [eax], al; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000b3275: adc al, 0; add byte ptr [eax], al; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000b42a2: adc al, 0; add byte ptr [eax], al; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000bc70e: adc al, 0; add byte ptr [eax], al; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee0e: adc al, 0; add byte ptr [eax], al; jne 0xbee18; add esp, 0x1c; ret; 
0x000bf001: adc al, 0; add byte ptr [eax], al; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x000bff67: adc al, 0; add byte ptr [eax], al; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfffa: adc al, 0; add byte ptr [eax], al; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x000c7ec9: adc al, 0; add byte ptr [eax], al; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca409: adc al, 0; add byte ptr [eax], al; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df429: adc al, 0; add byte ptr [eax], al; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff39: adc al, 0; add byte ptr [eax], al; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb3ed: adc al, 0; add byte ptr [eax], al; jne 0xeb407; add esp, 0x1c; ret; 
0x000eb54a: adc al, 0; add byte ptr [eax], al; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000eb789: adc al, 0; add byte ptr [eax], al; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x000ec11e: adc al, 0; add byte ptr [eax], al; jne 0xec128; add esp, 0x1c; ret; 
0x000ec175: adc al, 0; add byte ptr [eax], al; jne 0xec17f; add esp, 0x1c; ret; 
0x000ef13c: adc al, 0; add byte ptr [eax], al; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000f56db: adc al, 0; add byte ptr [eax], al; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x000f5f64: adc al, 0; add byte ptr [eax], al; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75d1: adc al, 0; add byte ptr [eax], al; jne 0xf75db; add esp, 0x1c; ret; 
0x000f814a: adc al, 0; add byte ptr [eax], al; jne 0xf815f; add esp, 0x3c; ret; 
0x000f81bb: adc al, 0; add byte ptr [eax], al; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc25: adc al, 0; add byte ptr [eax], al; jne 0xfbc2f; add esp, 0x1c; ret; 
0x000fce21: adc al, 0; add byte ptr [eax], al; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x000ff34e: adc al, 0; add byte ptr [eax], al; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x000c0993: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0005ec5f: adc al, 0; add byte ptr [ebx + 0x525304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00053e0b: adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret; 
0x00043b86: adc al, 0; add byte ptr [ebx - 0x4c14ef3c], al; nop; add eax, dword ptr [esp]; ret; 
0x0012de37: adc al, 0; add byte ptr [ecx - 0x4f7c723b], cl; popal; cli; call dword ptr [ecx + 0x6a]; 
0x0006659e: adc al, 0; add byte ptr [ecx], bh; ret 0x820f; 
0x000a1a6d: adc al, 0x11; aad 0x83; ret; 
0x00127ebb: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x127eb0; pop ebx; ret; 
0x0013f636: adc al, 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00081d92: adc al, 0x1e; add byte ptr [eax], al; pop ebx; ret; 
0x001249da: adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0002fa8f: adc al, 0x24; fstp dword ptr [eax]; fld dword ptr [esp]; add esp, 4; ret; 
0x0013ceee: adc al, 0x24; ret; 
0x00124154: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0016a053: adc al, 0x29; ret 0x448b; 
0x00107e8f: adc al, 0x29; ret 0x728d; 
0x00087ef0: adc al, 0x29; ret 0x748d; 
0x0008830c: adc al, 0x29; ret 0x8b90; 
0x00107839: adc al, 0x29; ret; 
0x00072203: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000dd7ac: adc al, 0x31; rol byte ptr [ebp - 0x72f08b25], cl; je 0xdd7dc; add byte ptr [eax - 0x7c69eb77], dl; ret 0x3901; 
0x00036c63: adc al, 0x31; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0016761b: adc al, 0x31; ror byte ptr [ecx], cl; test dword ptr [ecx], 0x247c0bef; and byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0008678b: adc al, 0x39; ret 0x1373; 
0x0003bfcb: adc al, 0x39; ret; 
0x000293d1: adc al, 0x3b; adc dword ptr [eax], eax; add eax, 0x1bac2b; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x00101c05: adc al, 0x3f; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00076c1f: adc al, 0x41; cli; call dword ptr [eax - 0x75]; 
0x00103d80: adc al, 0x42; and edx, 0x1000; mov eax, edx; ret; 
0x00103416: adc al, 0x42; and edx, 0x100; mov eax, edx; ret; 
0x00103c80: adc al, 0x42; and edx, 0x2000; mov eax, edx; ret; 
0x00103a80: adc al, 0x42; and edx, 0x200; mov eax, edx; ret; 
0x00103b80: adc al, 0x42; and edx, 0x4000; mov eax, edx; ret; 
0x00103880: adc al, 0x42; and edx, 0x400; mov eax, edx; ret; 
0x00103b00: adc al, 0x42; and edx, 0x8000; mov eax, edx; ret; 
0x00103900: adc al, 0x42; and edx, 1; mov eax, edx; ret; 
0x00103980: adc al, 0x42; and edx, 2; mov eax, edx; ret; 
0x00103c00: adc al, 0x42; and edx, 4; mov eax, edx; ret; 
0x00103800: adc al, 0x42; and edx, 8; mov eax, edx; ret; 
0x000ef972: adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efcb3: adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efc42: adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0012377a: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x0012377a: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x00068deb: adc al, 0x50; push esi; call dword ptr [ebx + 0x48]; 
0x000ef435: adc al, 0x51; mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000c7ede: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x00124db4: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x001248e2: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0012faa9: adc al, 0x53; call dword ptr [eax]; 
0x0005de47: adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x00080c52: adc al, 0x55; call eax; 
0x00123fd9: adc al, 0x56; call dword ptr [eax + 4]; 
0x0001b500: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0006d8cf: adc al, 0x5b; pop esi; pop edi; ret; 
0x00025c86: adc al, 0x5b; pop esi; ret; 
0x0006e567: adc al, 0x5e; pop edi; jmp eax; 
0x000951b3: adc al, 0x5f; pop esi; pop ebx; ret; 
0x000c6912: adc al, 0x6a; add byte ptr [edx], ch; call 0xc68c0; add esp, 0x1c; ret; 
0x00138b7e: adc al, 0x6a; add ch, al; mov edx, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x0007967e: adc al, 0x6a; add eax, ebp; lcall 0x18c4, 0x83fffff8; pop ebx; ret; 
0x0003a774: adc al, 0x72; cli; call dword ptr [eax - 0x18]; 
0x00049a74: adc al, 0x72; cli; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x0003a774: adc al, 0x72; cli; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x00139447: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000d1cd0: adc al, 0x74; hlt; dec dword ptr [ecx + 0xce82434]; je 0xd1ccf; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00072db5: adc al, 0x7b; cli; call dword ptr [eax - 0x18]; 
0x0007ae12: adc al, 0x7c; cli; call dword ptr [eax - 0x18]; 
0x0007c694: adc al, 0x7d; cli; call dword ptr [eax - 1]; 
0x000cd287: adc al, 0x81; les ebx, ptr [eax + ebp + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000cec57: adc al, 0x81; les ebx, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000b4a23: adc al, 0x83; clc; cmp ecx, dword ptr [edi]; inc edi; ret 0xc86b; 
0x00060e8f: adc al, 0x83; in al, dx; add al, 0x53; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x000b777b: adc al, 0x83; jle 0xb778f; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000bfb15: adc al, 0x83; jmp dword ptr [ebx + 0xf]; 
0x0012570d: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000f593b: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000744c3: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00022172: adc al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00080a8a: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0001e7cf: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00037418: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000686bf: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000737ff: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0007adb3: adc al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00022a38: adc al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00073db3: adc al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000b6912: adc al, 0x83; ret 0x3909; 
0x000b2b24: adc al, 0x83; ret 0x89ff; 
0x0005b0ab: adc al, 0x83; ret; 
0x0001f198: adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0008b07b: adc al, 0x83; stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0008afbb: adc al, 0x83; stc; or byte ptr [edi + 0x1c], dh; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0009f8cd: adc al, 0x85; ror byte ptr [edi], 0x84; ret 0; 
0x000ed716: adc al, 0x85; ror byte ptr [edi], 0x85; inc ecx; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0002adfb: adc al, 0x85; ror byte ptr [edi], 0x85; ret 0; 
0x000ffb5b: adc al, 0x85; sal byte ptr [eax + esi - 0x48], cl; js 0xffb64; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00107e84: adc al, 0x85; sar byte ptr [eax], 0xf; dec ecx; inc ebx; adc al, 0x29; ret 0x728d; 
0x0007c86b: adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001328dc: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x00133dc7: adc al, 0x89; dec ebp; mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000352a2: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0006d72b: adc al, 0x89; fmul dword ptr [eax + 0x4c4830a]; pop ebx; pop esi; ret; 
0x000729ed: adc al, 0x89; jae 0x72a09; pop ebx; pop esi; pop edi; ret; 
0x0013cb33: adc al, 0x89; je 0x13cb5b; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0013cb81: adc al, 0x89; je 0x13cba9; adc byte ptr [ecx + 0x376483], cl; add byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x001014bd: adc al, 0x89; pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00030afe: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00074011: adc al, 0x89; push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x0013189d: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00169d69: adc al, 0x89; ret 0x3bb; 
0x001330b7: adc al, 0x89; ret 0x4489; 
0x00112b8c: adc al, 0x89; ret 0x808b; 
0x0010edc2: adc al, 0x89; ret 0x998b; 
0x0011c903: adc al, 0x89; ret 0xc085; 
0x00108416: adc al, 0x89; ret 0xc483; 
0x00120563: adc al, 0x89; ret 0xc985; 
0x000d55b1: adc al, 0x89; ret 0xd339; 
0x00043211: adc al, 0x89; ret 0xeac1; 
0x000dc200: adc al, 0x89; ret 0xf889; 
0x0008630c: adc al, 0x89; ret 0xf901; 
0x00021bb9: adc al, 0x89; ret; 
0x00120dfb: adc al, 0x8b; adc cl, byte ptr [ecx - 0x74f7dbac]; add byte ptr [ecx - 0x16fbdbbc], cl; adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0012c878: adc al, 0x8b; dec ecx; or byte ptr [ebx + 0xf770ff8], al; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x000ef259: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00100319: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe09: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00100259: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d69: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbb9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc19: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdae9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d99: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffd9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0007c868: adc al, 0x8b; inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0012570a: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0013b3ea: adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x00100898: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100796: adc al, 0x8b; inc esp; and al, 0x40; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100b68: adc al, 0x8b; inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff32b: adc al, 0x8b; inc esp; and al, 0x54; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0009c306: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00098e80: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00031b61: adc al, 0x8b; je 0x31b89; sbb byte ptr [ebx - 0x7aefdbb4], cl; fisttp dword ptr [edi]; xchg esp, eax; ret 0xf685; 
0x00031bc1: adc al, 0x8b; je 0x31be9; sbb byte ptr [ebx - 0x7aefdbb4], cl; fisttp dword ptr [edi]; xchg esp, eax; ret 0xf685; 
0x000ba8ec: adc al, 0x8b; mov word ptr [ebx - 0x61170], es; add ecx, ebx; jmp ecx; 
0x000ba847: adc al, 0x8b; mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x0005ed5e: adc al, 0x8b; pop edi; sbb byte ptr [ecx], ch; ret; 
0x000f661c: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x000faf52: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58c1: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ee8e2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef192: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003b2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00100142: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00100032: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00100182: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00100222: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd22: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb82: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000f5921: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00050f6e: adc al, 0x8b; pop esp; and al, 0xc; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00145380: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00101787: adc al, 0x8b; push esp; and al, 0x1c; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008b41e: adc al, 0x8b; xor dword ptr [eax - 2], 0xffffffff; jmp dword ptr [ebp - 1]; 
0x00116937: adc al, 0x8d; adc ah, 0x9b; cli; call dword ptr [eax - 0x73]; 
0x00078cfe: adc al, 0x8d; adc dword ptr [eax + 4], -0x17; jmp dword ptr [ebp + 0x33]; 
0x0009f40f: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x000e1732: adc al, 0x8d; and al, 0x49; cli; call dword ptr [eax - 0x77]; 
0x000e8dd7: adc al, 0x8d; and byte ptr [edx], 0x4b; cli; call dword ptr [eax + 0x6a]; 
0x000efbff: adc al, 0x8d; cmp byte ptr [eax + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x000bf27a: adc al, 0x8d; dec esp; and al, 0x14; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000bf37e: adc al, 0x8d; dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e9eff: adc al, 0x8d; sub byte ptr [ebp + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x000e96ca: adc al, 0x8d; sub byte ptr [edx + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x0007fa77: adc al, 0x8d; sub dword ptr [eax - 0x72000577], -0x6d; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x0002e567: adc al, 0x8d; test dword ptr [ebx], eax; xor bh, dl; call dword ptr [eax + 0x53]; 
0x000a2576: adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000e8f26: adc al, 0x8d; xchg byte ptr [eax], cl; dec ebx; cli; call dword ptr [eax - 0x73]; 
0x00038236: adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0007f699: adc al, 0x8d; xchg dword ptr [eax], ecx; mov bh, dl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x000e19e6: adc al, 0x8d; xchg dword ptr [ebx + edx*4], edx; cli; call dword ptr [eax - 0x73]; 
0x000e1903: adc al, 0x8d; xchg edx, esp; dec ecx; cli; call dword ptr [eax - 0x73]; 
0x0009ff38: adc al, 0x8e; cli; call dword ptr [eax - 0x18]; 
0x000e19e9: adc al, 0x93; cli; call dword ptr [eax - 0x73]; 
0x000e7e1a: adc al, 0x95; cli; call dword ptr [eax + 0x68]; 
0x000e7bdf: adc al, 0x95; cli; call dword ptr [eax - 0x73]; 
0x000f757d: adc al, 0x96; cli; call dword ptr [eax - 0x73]; 
0x0011543d: adc al, 0x9b; cli; dec dword ptr [ebp - 0x58fd757]; call dword ptr [eax + 0x55]; 
0x001200f3: adc al, 0xa1; cli; call dword ptr [eax + 0x68]; 
0x00134848: adc al, 0xa4; std; jmp dword ptr [esi - 0x70]; 
0x001326e3: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00132a5a: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000f7030: adc al, 0xb8; jnp 0xf7035; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f71bc: adc al, 0xb8; jnp 0xf71c1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6d50: adc al, 0xb8; jp 0xf6d55; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6edc: adc al, 0xb8; jp 0xf6ee1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007c6f2: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000bf27e: adc al, 0xb8; or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000f4667: adc al, 0xbf; or byte ptr [eax], al; add byte ptr [eax], al; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00025794: adc al, 0xe4; call dword ptr [edx - 1]; 
0x00025746: adc al, 0xe4; call dword ptr [esi + 0x31]; 
0x001285b5: adc al, 0xe8; mov ch, 0x56; cld; jmp dword ptr [ebp - 0x77]; 
0x000e2520: adc al, 0xe8; ret 0xf36b; 
0x000b54c7: adc al, 0xe8; ret; 
0x000cdc57: adc al, 0xe9; ret 0xfffa; 
0x000e1954: adc al, 0xe9; ret 0xfffb; 
0x000d3389: adc al, 0xe9; ret; 
0x00086944: adc al, 0xeb; ret; 
0x000f57e8: adc al, 0xf6; ret 0x7540; 
0x0001abce: adc al, 0xf6; ret 0xf01; 
0x0004fa83: adc al, 0xf6; ret 0xf50; 
0x0001a958: adc al, 0xf6; ret; 
0x0001b53c: adc al, 0xf7; ficomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00074996: adc al, 0xf; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x000a3a6a: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b24a5: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000c7b12: adc al, 0xf; xchg dword ptr [ecx + 1], ecx; add byte ptr [eax], al; mov ecx, dword ptr [edx + eax*4 - 0x60590]; add ecx, edx; jmp ecx; 
0x000c72a3: adc al, 0xf; xchg dword ptr [ecx + eax], edi; add byte ptr [ebx - 0x9bf796c], cl; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x00037cb4: adc al, 0xf; xchg ebp, eax; ret 0xb60f; 
0x0010921b: adc al, 0xf; xchg ebp, eax; ret 0xc985; 
0x00128a57: adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x00119803: adc al, 0xf; xchg esp, eax; ret; 
0x0014ba65: adc al, 0xff; inc dword ptr [ecx + 0x43f98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00124436: adc al, 0xff; je 0x12445e; adc al, 0xff; je 0x124462; je 0x124490; call dword ptr [ecx]; 
0x0012443a: adc al, 0xff; je 0x124462; je 0x124490; call dword ptr [ecx]; 
0x00138b4c: adc al, 0xff; je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; 
0x00138b4c: adc al, 0xff; je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; ret; 
0x00034fa6: adc al, 0xff; je 0x34fce; sbb byte ptr [eax + 0x50], dl; call 0x34fc0; add esp, 0x1c; ret; 
0x000b54c3: adc al, 0xff; je 0xb54eb; adc al, 0xe8; ret; 
0x000c1cfc: adc al, 0xff; je 0xc1d24; xor byte ptr [ebp + 0x504c2444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x000ff372: adc al, 0xff; je 0xff39a; sbb byte ptr [edx], ch; call 0xfff00; add esp, 0x1c; ret; 
0x0006be28: adc al, 0xff; jne 0x6be38; push esi; call dword ptr [ebx + 0x2c]; 
0x0009fa62: adc al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00031326: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x000db6a6: adc al, 1; cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x0008ad1d: adc al, 1; cmp edx, ebx; je 0x8ad18; pop ebx; ret; 
0x00132719: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000bee28: adc al, 1; je 0xbee30; add esp, 0xc; ret; 
0x0014fa45: adc al, 1; retf 0xc801; call 0x13cee5; add ebx, 0x40671; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ea65: adc al, 1; retf 0xc801; call 0x13cee5; add ebx, 0x41491; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00116683: adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x0014e95f: adc al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014eacc: adc al, 4; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00132a46: adc al, 4; mov eax, 1; ret; 
0x00136ec2: adc al, 5; add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x00022a94: adc al, 6; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x000a7df3: adc al, bh; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x0014ec82: adc al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000332d1: adc al, byte ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0005ebd1: adc al, byte ptr [eax]; add byte ptr [ebx - 0x4a00f714], al; xchg esp, eax; idiv edi; call dword ptr [edx - 0x77]; 
0x000814e4: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax], ebp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007f693: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [eax], ecx; mov bh, dl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00064026: adc al, byte ptr [eax]; add byte ptr [ebx - 0x88b4b], cl; inc dword ptr [ebx - 0x7276fb14]; pushal; idiv edi; call dword ptr [esi - 1]; 
0x00033412: adc al, byte ptr [eax]; add byte ptr [ebx - 0xf47378b], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001643ba: adc al, byte ptr [eax]; add byte ptr [ecx + 0x24548be9], cl; and al, 0x29; ret 0x741b; 
0x000192e6: adc al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000336b7: adc al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033eaf: adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0x850f; 
0x000337cd: adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0xab75; 
0x0001beb3: adc al, byte ptr [eax]; add eax, 0x1c814b; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001be93: adc al, byte ptr [eax]; add eax, 0x1c816b; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001b5b3: adc al, byte ptr [eax]; add eax, 0x1c8a4b; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0001b063: adc al, byte ptr [eax]; add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x0001b043: adc al, byte ptr [eax]; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x001316ad: adc al, byte ptr [ebx + 0x1d7401f8]; cmp eax, 2; sete al; movzx eax, al; ret; 
0x000b284d: adc al, byte ptr [ebx + 0x4827c]; lea ecx, [eax + 1]; jne 0xb2830; mov eax, ecx; ret; 
0x000fc15d: adc al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x001275ec: adc al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000f5119: adc al, byte ptr [ebx + 0x5e5b34c4]; ret; 
0x0016b712: adc al, byte ptr [ebx - 0x4c00f714]; sar bh, 0xff; call dword ptr [eax - 0x18]; 
0x000637b2: adc al, byte ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x0008b080: adc al, byte ptr [ebx]; test byte ptr [eax - 0x61fe8], cl; jmp eax; 
0x0006d9c4: adc al, byte ptr [ecx + 0x24cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007e72c: adc al, byte ptr [ecx + 0xbfffffe]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x000815b0: adc al, byte ptr [ecx + 0xbffffff]; add byte ptr [edi], cl; inc edi; ret 0xc083; 
0x00095a3a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b9a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0009b5ad: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000943fa: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0009455a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a5a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bba: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0009441a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0009457a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a7a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bda: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0009443a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0009459a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095909: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bfa: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e9: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945ba: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000e8d2a: adc al, byte ptr [ecx]; hlt; jmp dword ptr [esi - 0x70]; 
0x00091282: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cea2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000912c2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cee2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000912e2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008cf02: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00091032: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x00091272: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x00092e5d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00163c52: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f3: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea6d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc72: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008fa97: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x0008ce92: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00095b92: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x00094552: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095bb2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094572: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095bd2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094592: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095bf2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000945b2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00091302: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cf22: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091322: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf42: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091342: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf62: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ad9a3: adc al, byte ptr [esi]; add byte ptr [ebp - 0x56fcf7b], cl; call dword ptr [eax - 0x73]; 
0x000a4dba: adc al, byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x00098d02: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c155: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf2: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095022: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000192e5: adc al, byte ptr fs:[eax]; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00096be3: adc al, ch; adc byte ptr [ebx + 0xa], ah; add byte ptr [ecx + 0xeb6e7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000954e3: adc al, ch; adc byte ptr [edx + 0xa], bh; add byte ptr [ecx + 0xecc87c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00030b16: adc al, ch; leave; ret; 
0x00118e26: adc al, ch; mov ecx, 0x81000240; ret; 
0x001086b7: adc al, ch; ret; 
0x000d4e8f: adc al, ch; stosd dword ptr es:[edi], eax; mov bl, 0xff; inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000dcd6f: adc al, ch; stosd dword ptr es:[edi], eax; ret 0xfff3; 
0x00096bc7: adc al, ch; sub al, 0x63; or al, byte ptr [eax]; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954c7: adc al, ch; sub al, 0x7a; or al, byte ptr [eax]; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00107a36: adc al, ch; test eax, 0x81000354; ret; 
0x000ea536: adc al, ch; test eax, 0x81000529; ret; 
0x00078136: adc al, ch; test eax, 0x81000c4d; ret; 
0x00072236: adc al, ch; test eax, 0x81000cac; ret; 
0x00071536: adc al, ch; test eax, 0x81000cb9; ret; 
0x0013e536: adc al, ch; test eax, 0x81ffffe9; ret; 
0x0009d2a5: adc al, dh; ret; 
0x00145ab3: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000f8664: adc bh, al; add dword ptr [eax + 0x23], 0; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010791e: adc bh, al; inc esi; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4689; 
0x00073ced: adc bh, bh; add bl, ch; ror dword ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0014be55: adc bh, bh; inc dword ptr [ecx + 0x43ba8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bc4e: adc bh, bh; inc dword ptr [ecx + 0x43dafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00123fd5: adc bh, bh; je 0x123ffd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0006ffa5: adc bh, bh; je 0x6ffcd; adc byte ptr [ebx + 0x571c247c], cl; call dword ptr [ebx + 0x40]; 
0x000b96c7: adc bh, bh; je 0xb96ef; add al, 0x89; ret; 
0x00032808: adc bh, bh; jne 0x3280c; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00060055: adc bh, bh; mov ch, 0x34; idiv edi; call dword ptr [eax - 0x18]; 
0x000ea785: adc bh, byte ptr [ecx]; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x00051cfe: adc bh, byte ptr [ecx]; ret 0x850f; 
0x0001b455: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x00102d60: adc bh, dh; ret 0xff80; 
0x0002f584: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002f503: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0002f579: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00096832: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0015ccad: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x00068abd: adc bl, ch; lds ecx, ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x00043b8b: adc bl, ch; mov bl, 0x66; nop; add eax, dword ptr [esp]; ret; 
0x0016c229: adc bl, ch; mov byte ptr [0xfb39afe8], al; jmp dword ptr [esi - 0x70]; 
0x0008377f: adc bl, ch; mov dl, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x00124cb6: adc bl, ch; mov esi, 0xfe9fa2e8; jmp dword ptr [esi - 0x70]; 
0x0011b535: adc bl, ch; mov esp, 0xff3723e8; dec dword ptr [ebp - 0x562c779]; call dword ptr [eax - 0x73]; 
0x00132698: adc bl, ch; movsb byte ptr es:[edi], byte ptr [esi]; call 0x10ec60; ret; 
0x0012fef1: adc bl, ch; ret 0x67e8; 
0x000d14c3: adc bl, ch; ret 0xb48d; 
0x0013be79: adc bl, ch; ret; 
0x0008354d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00098e56: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e17: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098fd8: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098ed8: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010eb86: adc byte ptr [0x3ff], bh; ja 0x10eb95; sar eax, 5; add esp, 0xc; ret; 
0x00030663: adc byte ptr [0x80000000], ah; ret; 
0x000faf56: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x000f58c5: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x000f5801: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ee8e6: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x000ef196: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x001003b6: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x00100146: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x000f5861: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0013978c: adc byte ptr [eax + 0x37], 0; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 4]; 
0x001396e4: adc byte ptr [eax + 0x37], 0; add byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x0009c303: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098e7d: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x0009c387: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098f01: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x00096914: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001088a9: adc byte ptr [eax + 0x57], 0xfa; call dword ptr [eax - 1]; 
0x000951b0: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x00095234: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x00095334: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000f7f9b: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0005e818: adc byte ptr [eax + 0x76], 0xfa; call dword ptr [eax - 0x18]; 
0x00100036: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x00100186: adc byte ptr [eax + 0xa3], bh; call dword ptr gs:[0x10]; 
0x00100226: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x000fdd26: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x000fdcb6: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x000fdb86: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x000bee40: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000f84be: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x0006a3a1: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0012704c: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00101947: adc byte ptr [eax + 1], bh; ret; 
0x00076734: adc byte ptr [eax + 4], 0xe9; jmp dword ptr [ebp + 0x33]; 
0x0012e346: adc byte ptr [eax + eax], dh; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000eb4aa: adc byte ptr [eax + esi*8 - 1], dh; test byte ptr [ebx + 0x56], 0x80; pop ebx; cmove eax, ecx; ret; 
0x000fb44c: adc byte ptr [eax - 0x53], 0xfa; dec dword ptr [edi]; xchg ebp, eax; ret 0xda21; 
0x0001b01c: adc byte ptr [eax - 0x55], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x59b3f80], cl; call dword ptr [eax + 0x6a]; 
0x0010cabf: adc byte ptr [eax - 0x66], 0xfa; call dword ptr [eax - 0x18]; 
0x0010cabf: adc byte ptr [eax - 0x66], 0xfa; call dword ptr [eax - 0x18]; jbe 0x10ca8b; int1; jmp dword ptr [esi - 0x70]; 
0x0012bf89: adc byte ptr [eax - 0x73], dl; sbb dword ptr [ebx], -6; call dword ptr [eax - 0x73]; 
0x000c6dab: adc byte ptr [eax - 0x73], dl; sbb dword ptr [esi], 0x48; cli; call dword ptr [eax + 0x68]; 
0x000ee79d: adc byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + 0x4b], bh; cli; call dword ptr [eax + 0x6a]; 
0x0013c20a: adc byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; jne 0x13c206; call dword ptr [eax - 0x18]; 
0x0010c1d9: adc byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; pop eax; cli; call dword ptr [ebx + 0x50]; 
0x0009e58e: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00113d4a: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013f5f5: adc byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00085508: adc byte ptr [eax], 0x48; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000851c8: adc byte ptr [eax], 0x68; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000843ea: adc byte ptr [eax], 0x76; ljmp 0xd089:0xd0440fff; ret; 
0x00120a93: adc byte ptr [eax], 0xa0; cli; call dword ptr [eax - 0x18]; 
0x0009d2d5: adc byte ptr [eax], ah; ret; 
0x000ee1e8: adc byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x00107921: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4689; 
0x000c583c: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f56fe: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00143256: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00031182: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x00050f41: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x000b402d: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000b4145: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000b42ff: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x000c093f: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000e1e05: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec093: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec3b1: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3e1: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec411: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000ec705: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ec8d6: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec906: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ecb85: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000ed311: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f567d: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5975: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e5: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f6201: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f6231: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f7b87: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000f9101: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f92d9: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000f9321: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f9351: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9385: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b5: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000fd229: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000c6948: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0012598a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001258ee: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001258c2: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00030dfc: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c5d81: adc byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x00030e08: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00031152: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000ecace: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x0013f784: adc byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 9; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00030e16: adc byte ptr [eax], al; add byte ptr [eax], al; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000eb3ac: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x000b6c05: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000510d1: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011961f: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00162b1b: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0007b378: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007b422: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00027962: adc byte ptr [eax], al; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x0015b8de: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0009f442: adc byte ptr [eax], al; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0002795c: adc byte ptr [eax], al; add byte ptr [ecx + 0x10d086], cl; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x0013dcdf: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000505ef: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00059dd1: adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000efdc1: adc byte ptr [eax], al; add byte ptr [ecx], al; sar byte ptr [0x1000], 0xf; inc edx; ret 0x489; 
0x0013dc6e: adc byte ptr [eax], al; add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg eax, ebp; xor edi, edx; call dword ptr [eax + 0x6a]; 
0x000efdc8: adc byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x489; 
0x000c828a: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x00031c33: adc byte ptr [eax], al; add eax, 0x1b23cb; mov eax, dword ptr [eax + 0x48]; ret; 
0x00031c13: adc byte ptr [eax], al; add eax, 0x1b23eb; mov eax, dword ptr [eax + 0x4c]; ret; 
0x000319f3: adc byte ptr [eax], al; add eax, 0x1b260b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0014f794: adc byte ptr [eax], bh; ret 0x840f; 
0x00165b23: adc byte ptr [eax], ch; add byte ptr [eax], al; add cl, ch; ret; 
0x001259e9: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0009d2c5: adc byte ptr [eax], dl; ret; 
0x000b56cc: adc byte ptr [ebp + 0x13840fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x57]; 
0x00033958: adc byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; call dword ptr [esi]; 
0x00075f1d: adc byte ptr [ebp + 0x292678c0], al; ret; 
0x000f9268: adc byte ptr [ebp + 0x310c2454], cl; leave; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000ea781: adc byte ptr [ebp + 0x391278db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x0003bfc7: adc byte ptr [ebp + 0x391474d2], al; ret; 
0x000aca81: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x000ac998: adc byte ptr [ebp + 0x392374db], al; ret; 
0x000f2793: adc byte ptr [ebp + 0x393374c0], al; ret; 
0x0012bef5: adc byte ptr [ebp + 0x3d840fc0], al; out 0xee, eax; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x000c8308: adc byte ptr [ebp + 0x4850fc0], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x00070b0c: adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x000327a6: adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0006d3f7: adc byte ptr [ebp + 0x5889045a], cl; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00034174: adc byte ptr [ebp + 0x5bc775db], al; pop esi; pop edi; ret; 
0x0016bbcc: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x000e5eca: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x0011affc: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x000ded79: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0009680d: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x0009682f: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x0009686d: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000968f1: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x00096a01: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0012d59f: adc byte ptr [ebp + 0x63840fc0], al; add eax, 0xec830000; or al, 0x8b; inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x000ec947: adc byte ptr [ebp + 0x6a2478c0], al; call dword ptr [esi + 0x57]; 
0x0012cfc8: adc byte ptr [ebp + 0x7840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000b6eed: adc byte ptr [ebp + 0x7a880fc0], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ebx - 0x7e72f714]; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x0006ca6f: adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x000db8e8: adc byte ptr [ebp + 0xfc789db], al; xchg esp, eax; ret 0xf685; 
0x000822cd: adc byte ptr [ebp - 0x161def7a], cl; dec dword ptr [ecx + 0x5f5e5b07]; ret; 
0x00093613: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000e1da3: adc byte ptr [ebp - 0x31b6f00a], al; call dword ptr gs:[0x10]; 
0x000b018b: adc byte ptr [ebp - 0x35f343], cl; call dword ptr [eax - 0x48]; 
0x000486c0: adc byte ptr [ebp - 0x35f363], cl; call dword ptr [eax - 0x48]; 
0x0002ca0c: adc byte ptr [ebp - 0x39f80], cl; call dword ptr [eax - 0x75]; 
0x00126659: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0001b8a2: adc byte ptr [ebp - 0x3f6af040], al; add esp, 0xc; movzx eax, al; neg eax; ret; 
0x00126110: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00122ddd: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x00028df7: adc byte ptr [ebp - 0x427bf040], al; add edi, edi; call dword ptr [edx + 0x52]; 
0x000f92cc: adc byte ptr [ebp - 0x47e08b37], al; sub eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f9198: adc byte ptr [ebp - 0x47f3dbac], cl; inc eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x001151c3: adc byte ptr [ebp - 0x564c779], cl; call dword ptr [eax - 0x73]; 
0x0011543a: adc byte ptr [ebp - 0x564eb7f], cl; dec dword ptr [ebp - 0x58fd757]; call dword ptr [eax + 0x55]; 
0x001153bc: adc byte ptr [ebp - 0x5651780], cl; call dword ptr [eax + 0x55]; 
0x001152dc: adc byte ptr [ebp - 0x5653f79], cl; call dword ptr [eax - 0x73]; 
0x00114f74: adc byte ptr [ebp - 0x5655f79], cl; call dword ptr [eax - 0x73]; 
0x0007d43c: adc byte ptr [ebp - 0x5761b79], cl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007d34d: adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d329: adc byte ptr [ebp - 0x576277a], cl; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x0012e059: adc byte ptr [ebp - 0x59dcb79], cl; call dword ptr [eax - 0x73]; 
0x0013147e: adc byte ptr [ebp - 0x59e4f7a], cl; call dword ptr [eax - 0x73]; 
0x00117217: adc byte ptr [ebp - 0x5a33b80], cl; call dword ptr [eax - 1]; 
0x00115284: adc byte ptr [ebp - 0x5a3d880], cl; call dword ptr [eax - 0x73]; 
0x00115376: adc byte ptr [ebp - 0x5a3ed7f], cl; call dword ptr [eax - 0x73]; 
0x00114fba: adc byte ptr [ebp - 0x5a3ff80], cl; call dword ptr [eax + 0x6a]; 
0x00114ccd: adc byte ptr [ebp - 0x5a40d7d], cl; call dword ptr [eax - 1]; 
0x00114d5a: adc byte ptr [ebp - 0x5a43780], cl; call dword ptr [eax + 0x6a]; 
0x0011540f: adc byte ptr [ebp - 0x5a45579], cl; call dword ptr [eax - 0x73]; 
0x0011523e: adc byte ptr [ebp - 0x5a47e80], cl; call dword ptr [eax - 0x42]; 
0x001152ab: adc byte ptr [ebp - 0x5a8467d], cl; call dword ptr [eax + 0x6a]; 
0x000f22b2: adc byte ptr [ebp - 0x5b48680], cl; call dword ptr [eax - 0x18]; 
0x00114f45: adc byte ptr [ebp - 0x5b4dd80], cl; call dword ptr [eax + 0x6a]; 
0x0008321b: adc byte ptr [ebp - 0x5bb887d], cl; call dword ptr [esi + 0x6a]; 
0x0004fa79: adc byte ptr [ebp - 0x5cd9b45], cl; dec dword ptr [ecx - 0x9ebdb84]; ret 0xf50; 
0x000f896d: adc byte ptr [ebp - 0x5cefe6f], cl; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00114fe8: adc byte ptr [ebp - 0x5cefe80], cl; call dword ptr [eax + 0x56]; 
0x0010d5e7: adc byte ptr [ebp - 0x6f7bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x000e2c04: adc byte ptr [ebp - 0x74188a01], al; jl 0xe2c30; add al, 0x8d; xchg dword ptr [eax], esp; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e279c: adc byte ptr [ebp - 0x74188a0a], al; je 0xe27c8; add al, 0x8d; xchg byte ptr [eax], ah; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e2b44: adc byte ptr [ebp - 0x74188a0a], al; je 0xe2b70; adc byte ptr [ebx - 0x72fbdba4], cl; add dword ptr [eax - 0x22], -0x11; call dword ptr [eax + 0x6a]; 
0x000294ff: adc byte ptr [ebp - 0x74238a40], al; jl 0x2952b; or al, 0x89; ret; 
0x00124d53: adc byte ptr [ebp - 0x746e8b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000c6406: adc byte ptr [ebp - 0x74828b40], al; inc ebp; aam 0x83; ret; 
0x0012dd44: adc byte ptr [ebp - 0x74988b40], al; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000dcdc4: adc byte ptr [ebp - 0x74a88b40], al; je 0xdcdf0; adc byte ptr [ecx + 0x568b0846], cl; and al, 0xe9; ret; 
0x001324d9: adc byte ptr [ebp - 0x74efdbac], cl; inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x00131ad9: adc byte ptr [ebp - 0x74efdbac], cl; inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x0016284d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00101986: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x0013a15a: adc byte ptr [ebp - 0x77], ah; add esi, dword ptr [ecx]; fucomi st(3); ret; 
0x0016b84e: adc byte ptr [ebp - 0x787ff7d], cl; call dword ptr [eax - 1]; 
0x0015b8d7: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001567d3: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0008e8bc: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x000808b1: adc byte ptr [ebp - 0x7c158a40], al; ret; 
0x00116be3: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016bd3b: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016b6dc: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012806f: adc byte ptr [ebp - 0x7c1c8b40], al; in al, dx; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x0013b0f0: adc byte ptr [ebp - 0x7c348740], al; ret; 
0x00124b2b: adc byte ptr [ebp - 0x7c348b40], al; ret; 
0x00125637: adc byte ptr [ebp - 0x7c358b40], al; ret; 
0x0012399c: adc byte ptr [ebp - 0x7c498b40], al; in al, dx; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x001251e3: adc byte ptr [ebp - 0x7c568b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0012734a: adc byte ptr [ebp - 0x7c588b40], al; in al, dx; add al, 0x83; ret; 
0x001256d1: adc byte ptr [ebp - 0x7c5a8b40], al; ret; 
0x00125878: adc byte ptr [ebp - 0x7c5b8b40], al; ret; 
0x00130730: adc byte ptr [ebp - 0x7cc48b40], al; in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0012811e: adc byte ptr [ebp - 0x7cd28b40], al; in al, dx; add al, 0x83; ret; 
0x000fa05e: adc byte ptr [ebp - 0x7cd28b40], al; ret; 
0x000f7bdd: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x0001dce1: adc byte ptr [ebp - 0x7cd58b40], al; ret; 
0x000ee790: adc byte ptr [ebp - 0x7ce08b40], al; in al, dx; add al, 0x89; ret; 
0x0013cb56: adc byte ptr [ebp - 0x7ce28b40], al; in al, dx; or byte ptr [ebp - 0x59b656d], cl; call dword ptr [edx + 0x50]; 
0x00108950: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x0010c8e3: adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x00127378: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x00122dc6: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x5bc377f], cl; call dword ptr [eax + 0x52]; 
0x0013d03d: adc byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000fa0bd: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x00137356: adc byte ptr [ebp - 0x7cf28740], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00125736: adc byte ptr [ebp - 0x7cf28a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016b9da: adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x0010dbce: adc byte ptr [ebp - 0x7cf28b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000418d7: adc byte ptr [ebp - 0x7cf38b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000c5b52: adc byte ptr [ebp - 0x7cf68a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000273d6: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0013bf14: adc byte ptr [ebp - 0x7cf88a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00116dc0: adc byte ptr [ebp - 0x87bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp + 3]; 
0x0002d4fe: adc byte ptr [ebp - 0x8fef884], cl; rol byte ptr [ecx], 1; ret; 
0x00087209: adc byte ptr [ebp - 0x8fef98c], cl; rol byte ptr [ecx], 1; ret; 
0x000ca848: adc byte ptr [ebp - 0xb7af040], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x00132f4f: adc byte ptr [ebp - 0xc7af040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x59cd97d], cl; call dword ptr [ebp + 0x6a]; 
0x000a492c: adc byte ptr [ebp - 8], al; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x00083575: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x83570; xor eax, eax; ret; 
0x0012e994: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0004e9b1: adc byte ptr [ebx + 0x3918245c], cl; ret; 
0x0004eb01: adc byte ptr [ebx + 0x3924245c], cl; ret; 
0x00070120: adc byte ptr [ebx + 0x43891c43], cl; or al, 1; ret 0xc8d; 
0x0011667d: adc byte ptr [ebx + 0x438b1853], cl; adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x00034d5f: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db2: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x0012e045: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000fe373: adc byte ptr [ebx + 0x458801e0], al; or byte ptr [eax - 0x7c72ebbb], cl; ret 0xfa4d; 
0x0012efb8: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000e0f2f: adc byte ptr [ebx + 0x4b8d10c6], al; add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x0012e999: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x001324dd: adc byte ptr [ebx + 0x51520441], cl; call dword ptr [eax + 0x24]; 
0x00131add: adc byte ptr [ebx + 0x51520441], cl; call dword ptr [eax + 4]; 
0x0006ffa9: adc byte ptr [ebx + 0x571c247c], cl; call dword ptr [ebx + 0x40]; 
0x0009d112: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0009c0b8: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098c85: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00070611: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0001bf24: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0006e2df: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0001b4fd: adc byte ptr [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret; 
0x000807f4: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0001d3bf: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00029639: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00123bcb: adc byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00020bf0: adc byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; jmp eax; 
0x0001fd08: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0013cb37: adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0004f232: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00024fe2: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034d62: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db5: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x00034e02: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e55: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea2: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef5: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000b31c2: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000f81b3: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x0013f8ed: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x000bc706: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee06: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000ec116: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x00131676: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x0010e8d9: adc byte ptr [ebx + 0x651c244c], cl; sub ecx, dword ptr [0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e949: adc byte ptr [ebx + 0x651c244c], cl; sub ecx, dword ptr [0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x0011578a: adc byte ptr [ebx + 0x651c244c], cl; sub ecx, dword ptr [0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x00034370: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034490: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x0012f76f: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7df: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f84f: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b2: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f912: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f97f: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012f9ff: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012f6ff: adc byte ptr [ebx + 0x653c244c], cl; sub ecx, dword ptr [0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x000ea936: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000fcf6e: adc byte ptr [ebx + 0x74c08500], cl; pop ebx; call eax; 
0x0013bf12: adc byte ptr [ebx + 0x75d28510], cl; pop es; add esp, 8; pop ebx; ret; 
0x00096be5: adc byte ptr [ebx + 0xa], ah; add byte ptr [ecx + 0xeb6e7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0010158f: adc byte ptr [ebx + 0xd], bh; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000a3a66: adc byte ptr [ebx + 0xf142454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0011a46f: adc byte ptr [ebx + 1], bl; salc; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x000bfa21: adc byte ptr [ebx + eax], dh; adc byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000c4ebe: adc byte ptr [ebx - 0x10750], cl; jmp dword ptr [ebp - 0x75]; 
0x000fa2c5: adc byte ptr [ebx - 0x10761], cl; dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x00037e23: adc byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x001361da: adc byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00037c17: adc byte ptr [ebx - 0x1077f], cl; jmp dword ptr [ebp - 0x39]; 
0x001452b7: adc byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0010ff02: adc byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x75]; 
0x00145228: adc byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x77]; 
0x000c6364: adc byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e4819: adc byte ptr [ebx - 0x10f80], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011cdbe: adc byte ptr [ebx - 0x13f77], cl; jmp dword ptr [ebp - 0x75]; 
0x00083ecc: adc byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x000f06c2: adc byte ptr [ebx - 0x16f7dbac], cl; ret; 
0x0013a16f: adc byte ptr [ebx - 0x17f80], cl; jmp dword ptr [ebp - 0x77]; 
0x0012f18f: adc byte ptr [ebx - 0x1834d], cl; jmp dword ptr [ebp - 0x75]; 
0x000808c8: adc byte ptr [ebx - 0x19b79], cl; jmp dword ptr [ebp - 0x75]; 
0x00034107: adc byte ptr [ebx - 0x19f65], cl; jmp dword ptr [ebp - 0x77]; 
0x0003a65f: adc byte ptr [ebx - 0x1a16dbf4], cl; out 0xff, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x00126002: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x000f83ff: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000bfa24: adc byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00047f97: adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000ae8fc: adc byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x000b07a0: adc byte ptr [ebx - 0x36376b], cl; call ebx; 
0x0007060e: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x001248dc: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0006194c: adc byte ptr [ebx - 0x3b7d0000], dl; adc byte ptr [ecx], bh; ret; 
0x00078ecc: adc byte ptr [ebx - 0x3b8a0008], al; add esp, 4; pop ebx; pop esi; ret; 
0x0006d5ac: adc byte ptr [ebx - 0x3e76fb3c], al; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d8633: adc byte ptr [ebx - 0x3e7cfb40], al; add al, 0x39; ret; 
0x00123872: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x123883; sub esp, 0xc; push esi; call eax; 
0x00124250: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x124261; sub esp, 0xc; push esi; call eax; 
0x00125203: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x125214; sub esp, 0xc; push esi; call eax; 
0x001254cb: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x12535a; sub esp, 0xc; push edi; call eax; 
0x001255ac: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1255bd; sub esp, 0xc; push edi; call eax; 
0x0012a655: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x12a666; sub esp, 0xc; push esi; call eax; 
0x0012bd5a: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x12bd6b; sub esp, 0xc; push edi; call eax; 
0x0012cfe3: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x12cff4; sub esp, 0xc; push ebp; call eax; 
0x000273d3: adc byte ptr [ebx - 0x3f7aefba], cl; je 0x273e4; sub esp, 0xc; push esi; call eax; 
0x00083577: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0x83570; xor eax, eax; ret; 
0x000ec6f5: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0xec718; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x0009bf4b: adc byte ptr [ebx - 0x3f7cdf3a], al; and al, ch; mov byte ptr [0x81000a0f], al; sar dword ptr [0x3000e64], 0xc; xchg ecx, eax; jmp ecx; 
0x00098c4b: adc byte ptr [ebx - 0x3f7cdf3a], al; and al, ch; mov byte ptr [0x81000a42], al; sar dword ptr [ebp + 0x3000e96], 0xc; xchg ecx, eax; jmp ecx; 
0x0007b3b6: adc byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000b771f: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000c97e6: adc byte ptr [ebx - 0x46b6b], cl; jmp dword ptr [esi - 0x77]; 
0x000fdbbd: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fffdd: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fdc1d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fdaed: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef25d: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126799: adc byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0011edda: adc byte ptr [ebx - 0x4c72f314], al; in al, 0x5e; cli; call dword ptr [esi - 0x18]; 
0x0011ee06: adc byte ptr [ebx - 0x4c72f314], al; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011edae: adc byte ptr [ebx - 0x4c72f314], al; xlatb; pop esi; cli; call dword ptr [esi - 0x18]; 
0x000e542a: adc byte ptr [ebx - 0x5136b], cl; inc dword ptr [ebp + 0x77840fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x5177b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000a3b9c: adc byte ptr [ebx - 0x57ccf16], al; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x00051f2b: adc byte ptr [ebx - 0x57ffe40], al; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00054015: adc byte ptr [ebx - 0x5f373], cl; dec dword ptr [ebx - 0x5fb6b]; inc dword ptr [ebp + 0x1f840fc0]; cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x0005f7b8: adc byte ptr [ebx - 0x6bf0f505], al; ret; 
0x00132e1d: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000b0e8f: adc byte ptr [ebx - 0x70f0fc07], al; ret 0xffdc; 
0x00084a73: adc byte ptr [ebx - 0x72f3db94], cl; push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x000e2b4c: adc byte ptr [ebx - 0x72fbdba4], cl; add dword ptr [eax - 0x22], -0x11; call dword ptr [eax + 0x6a]; 
0x000ddfb6: adc byte ptr [ebx - 0x74bbdbb4], cl; sbb byte ptr [ebx + 0x3c8da904], cl; ret; 
0x00050f6a: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001004a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100064: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6814: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef224: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6654: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff254: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100104: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae14: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff34: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff64: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee874: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6964: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6994: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee844: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf14: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb14: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0006e563: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0006e6c3: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000756ed: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0003aeb4: adc byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x00100939: adc byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00101088: adc byte ptr [ebx - 0x76c3dbbc], cl; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007da83: adc byte ptr [ebx - 0x76dbdbb4], cl; ret 0xc483; 
0x000dd3c9: adc byte ptr [ebx - 0x76e3dbac], cl; inc ebp; and byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000217a7: adc byte ptr [ebx - 0x76e3dbb4], cl; ret; 
0x000f473f: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000dbf40: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x448b; 
0x000788d5: adc byte ptr [ebx - 0x76f7dbb4], cl; ret; 
0x000f6ed4: adc byte ptr [ebx - 0x76fbdbac], cl; inc esp; and al, 0x14; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b4: adc byte ptr [ebx - 0x76fbdbac], cl; inc esp; and al, 0x14; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000eb375: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0006eb97: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00081ab4: adc byte ptr [ebx - 0x77cf740], al; or dword ptr [edi + 0x4b], esi; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x000b3c05: adc byte ptr [ebx - 0x77cfc20], al; add dword ptr [edi], ecx; xchg esp, eax; ret 0x2be9; 
0x00115c95: adc byte ptr [ebx - 0x7972f314], al; pop ebp; pop esp; cli; call dword ptr [eax - 0x18]; 
0x0008f173: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000296c5: adc byte ptr [ebx - 0x7a72f714], al; mov al, 0x70; cli; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000212ad: adc byte ptr [ebx - 0x7acbdbbc], cl; sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x000fe1d0: adc byte ptr [ebx - 0x7adfdbac], cl; ror byte ptr [edi], 0x84; das; or al, 0; add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x000ffb57: adc byte ptr [ebx - 0x7aebdbb4], cl; sal byte ptr [eax + esi - 0x48], cl; js 0xffb64; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005353a: adc byte ptr [ebx - 0x7af00108], al; ret; 
0x0005964e: adc byte ptr [ebx - 0x7af09908], al; ret; 
0x000f8356: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x5b28b6a], cl; call dword ptr [edx - 0x77]; 
0x000f8375: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x5b3f36a], cl; call dword ptr [edx - 0x77]; 
0x0005dda1: adc byte ptr [ebx - 0x7bf00008], al; movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00065383: adc byte ptr [ebx - 0x7bf00008], al; ret; 
0x001238ee: adc byte ptr [ebx - 0x7c72f73c], al; and byte ptr [edx], dh; add byte ptr [eax], al; pop ebx; ret; 
0x0008b077: adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0008afb7: adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x1c], dh; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x000ece65: adc byte ptr [ebx - 0x9d7dbac], cl; ret 0x7540; 
0x000ecc25: adc byte ptr [ebx - 0x9dbdbac], cl; ret 0x7540; 
0x0003262b: adc byte ptr [ebx - 0xaafb14], al; je 0x32657; xor al, 0x56; call edi; 
0x0008320d: adc byte ptr [ebx - 0xbf7d], cl; dec dword ptr [ebx + 0x1e3493]; add byte ptr [ecx + 0x77838d10], cl; inc esp; cli; call dword ptr [esi + 0x6a]; 
0x001367c2: adc byte ptr [ebx - 0xcb7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00081e80: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0014539f: adc byte ptr [ebx - 9], bl; fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x001023b3: adc byte ptr [ebx], bh; and dword ptr [esi + 0xb730000], 0x26a8918b; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0006ca6a: adc byte ptr [ebx], bh; push eax; add al, 0x73; adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x001130ea: adc byte ptr [ebx], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001268ca: adc byte ptr [ebx], ch; push esi; or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x000c8286: adc byte ptr [ecx + 0x1000fa], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x000c5907: adc byte ptr [ecx + 0x10c483d8], cl; pop ebx; pop esi; pop edi; ret; 
0x00031323: adc byte ptr [ecx + 0x114c4], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000352e7: adc byte ptr [ecx + 0x14c483d8], cl; pop ebx; pop esi; ret; 
0x000c0a9b: adc byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d45ed: adc byte ptr [ecx + 0x244c3bc1], cl; add al, 0x75; ret; 
0x00102b79: adc byte ptr [ecx + 0x26c886], cl; add byte ptr [ebp - 0xe18ff7a], cl; dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x0010c5f5: adc byte ptr [ecx + 0x294083], cl; add byte ptr [ebp - 0x7c808b40], al; in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x0013cb85: adc byte ptr [ecx + 0x376483], cl; add byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x00124ec4: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0009c3e7: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098f44: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x0009c417: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098f64: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00096984: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00031204: adc byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x0006b575: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000b344c: adc byte ptr [ecx + 0x5168247c], cl; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x00131739: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x00072c11: adc byte ptr [ecx + 0x53891856], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000dcdcc: adc byte ptr [ecx + 0x568b0846], cl; and al, 0xe9; ret; 
0x0006d3fd: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0006c7ae: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0013ccd9: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x0004a8a8: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x00083600: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x000b4f48: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x00095274: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x00095294: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x00084057: adc byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x0010180d: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0011b518: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x000821ab: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000bfb78: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00083c99: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret 4; 
0x00069a35: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0001d6d7: adc byte ptr [ecx + 0x74c085c1], cl; ret 0xec83; 
0x0008308b: adc byte ptr [ecx + 0x74c085c7], cl; mov byte ptr [ebx - 0x7c72f714], 0x6a; inc esp; cli; call dword ptr [eax + 0x56]; 
0x0005069f: adc byte ptr [ecx + 0x78c085c3], cl; cmp al, byte ptr [ebx - 0x7972f714]; in eax, dx; xor edi, edx; call dword ptr [eax + 0x53]; 
0x000505bc: adc byte ptr [ecx + 0x78c085c3], cl; cmp eax, 0x8d08ec83; xchg ch, ch; xor edi, edx; call dword ptr [eax + 0x53]; 
0x000857d3: adc byte ptr [ecx + 0x7e183d1], cl; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x00138947: adc byte ptr [ecx + 0xbccbb], cl; add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x0010ed99: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00042f56: adc byte ptr [ecx + 0xfc085c6], cl; test byte ptr [edi + edi*8 - 1], ch; dec dword ptr [ebx - 0x76fbdbb4]; ret 0xc889; 
0x000e3c7e: adc byte ptr [ecx + 0xfc085c6], cl; test ch, al; or byte ptr [eax], al; add byte ptr [ebx - 0x17b73], cl; call dword ptr [ebx + 0x29]; 
0x000f1b80: adc byte ptr [ecx + 0xfc085c7], cl; test byte ptr [0x8b000002], al; pop ebp; sub dh, dh; ret; 
0x00074522: adc byte ptr [ecx + 0xfc085c7], cl; test byte ptr [ebx - 0x76ffffff], al; ret 0xda29; 
0x000b56e7: adc byte ptr [ecx + 0xfc085c7], cl; test dh, cl; add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; inc ebp; ret 0xfffb; 
0x00121de2: adc byte ptr [ecx + 0xfc98503], cl; xchg ebp, eax; ret 0xc085; 
0x000f6563: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x000ecb70: adc byte ptr [ecx - 0x101], ch; jne 0xecb98; test ah, 1; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000e3662: adc byte ptr [ecx - 0x1537b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0010e9bb: adc byte ptr [ecx - 0x16f3dbb4], cl; cmp edi, dword ptr [esi + esi*8]; jmp dword ptr [esi - 0x70]; 
0x0010ea7b: adc byte ptr [ecx - 0x16f3dbb4], cl; fild dword ptr [ecx - 0xa]; jmp dword ptr [esi - 0x70]; 
0x0010d3bb: adc byte ptr [ecx - 0x16f3dbb4], cl; sti; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x0007f4fb: adc byte ptr [ecx - 0x17f3dbb4], cl; mov ebx, 0x89fffff0; ret; 
0x0011609b: adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c9e48: adc byte ptr [ecx - 0x49f7b], cl; inc dword ptr [ebx]; test dword ptr [ebx + edi*8 - 1], esi; dec dword ptr [ecx - 0x4977b]; inc dword ptr [ecx]; ret; 
0x000e50dd: adc byte ptr [ecx - 0x53b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00053a1b: adc byte ptr [ecx - 0x5ab7b], cl; inc dword ptr [ebx - 0x7af00008]; imul esi, edx, -1; dec dword ptr [ebx - 0x5a77b]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x00056863: adc byte ptr [ecx - 0x5ab7b], cl; inc dword ptr [ebx - 0x7af00008]; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00056071: adc byte ptr [ecx - 0x5ab7b], cl; inc dword ptr [ebx - 0x7bf00008]; ret; 
0x000fcbfa: adc byte ptr [ecx - 0x73], dl; mov ebp, ebp; pop ebx; cli; call dword ptr [ecx + 0x50]; 
0x000329ba: adc byte ptr [ecx - 0x75], dl; je 0x329e3; sub byte ptr [ecx + 0x5624244c], cl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013cb2f: adc byte ptr [ecx - 0x76ebdb84], cl; je 0x13cb5b; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x001452ec: adc byte ptr [ecx - 0x76f7dbbc], cl; fcomp dword ptr [ebx - 0x17]; inc edi; stosb byte ptr es:[edi], al; cli; jmp dword ptr [esi - 0x70]; 
0x00025d74: adc byte ptr [ecx - 0x7ae7dba4], cl; sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x58fbf79], cl; call dword ptr [eax + 0x56]; 
0x00039b0e: adc byte ptr [ecx - 0x7c2ed628], cl; ret 0xd31d; 
0x0006d591: adc byte ptr [ecx - 0x7ccd7638], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00024bb5: adc byte ptr [ecx - 0x7cfbdb84], cl; ret 0x8d01; 
0x00064c7f: adc byte ptr [ecx - 0x7ef0ef8b], cl; ret 0xffef; 
0x000650a9: adc byte ptr [ecx - 0x7ef0efbb], cl; ret 0xfff4; 
0x0011bb37: adc byte ptr [ecx - 0x977b], cl; jmp dword ptr [ebp - 0x75]; 
0x00070a18: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00070b12: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00124d61: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x124d79; push ebx; call dword ptr [esi + 0x14]; 
0x001028b1: adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013661c: adc byte ptr [ecx - 0xe343], cl; dec dword ptr [ecx - 0xdf63]; dec dword ptr [ecx - 0xcf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0004a82b: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x00084683: adc byte ptr [ecx - 0xf76a43a], cl; pop esi; pop edi; ret; 
0x000b6f10: adc byte ptr [ecx - 0xfb7b], cl; inc dword ptr [ebp + 0x51840fc0]; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0001b02c: adc byte ptr [ecx], ah; or eax, 0x1cc48300; ret; 
0x0012ea42: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0013d45c: adc byte ptr [ecx], al; add byte ptr [eax], al; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x0009c6e6: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0007ba94: adc byte ptr [ecx], al; pop eax; add al, 0x89; ret; 
0x0006f93b: adc byte ptr [ecx], al; ret 0x532b; 
0x000d0fb1: adc byte ptr [ecx], al; ret 0x5c89; 
0x0009cef5: adc byte ptr [ecx], al; ret 0x67c; 
0x0002772f: adc byte ptr [ecx], al; ret 0xd139; 
0x00042307: adc byte ptr [ecx], al; ret; 
0x00151e96: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x3e660; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151d91: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x3e6a5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb46: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x431f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ca41: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x43235; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ab36: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x44f80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aa31: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x44fc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148b36: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x46d00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148a31: adc byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x46d45; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016bf9f: adc byte ptr [ecx], bh; div dword ptr [ebp - 0x14]; pop ebx; pop esi; pop edi; ret; 
0x000b3abf: adc byte ptr [ecx], bh; lds esi, ptr [eax + edi*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x00033f0f: adc byte ptr [ecx], bh; ret 0x1177; 
0x001078a2: adc byte ptr [ecx], bh; ret 0x1977; 
0x0007f5eb: adc byte ptr [ecx], bh; ret 0x3973; 
0x000a3830: adc byte ptr [ecx], bh; ret 0x4c8b; 
0x00116686: adc byte ptr [ecx], bh; ret 0x6273; 
0x000596e4: adc byte ptr [ecx], bh; ret 0x840f; 
0x0007fa28: adc byte ptr [ecx], bh; ret 0x870f; 
0x000a6572: adc byte ptr [ecx], bh; ret 0x8c8b; 
0x00033f20: adc byte ptr [ecx], bh; ret 0xef76; 
0x0001b10d: adc byte ptr [ecx], bh; ret; 
0x000b2908: adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x0005f185: adc byte ptr [ecx], bh; ror dword ptr [edi], 0x85; ret 0xfff5; 
0x0006e977: adc byte ptr [ecx], bh; sal byte ptr [edi - 0xc], 1; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x00077da2: adc byte ptr [ecx], bh; sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x0004f406: adc byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010669e: adc byte ptr [ecx], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00083621: adc byte ptr [ecx], ch; ret 0x408b; 
0x00049ee3: adc byte ptr [ecx], ch; ret 0x4439; 
0x000751e1: adc byte ptr [ecx], ch; ret 0x4489; 
0x00049ebd: adc byte ptr [ecx], ch; ret 0xbe0f; 
0x000348e0: adc byte ptr [ecx], ch; ret 0xc269; 
0x00087365: adc byte ptr [ecx], ch; ret 0xc8d; 
0x00161a19: adc byte ptr [ecx], ch; ret 0xe183; 
0x00072d05: adc byte ptr [ecx], ch; ret 0xea39; 
0x0007623a: adc byte ptr [ecx], ch; ret 0xfa39; 
0x0005f2f3: adc byte ptr [ecx], ch; ret; 
0x00084f37: adc byte ptr [ecx], cl; ret 0x448b; 
0x000a14d8: adc byte ptr [ecx], cl; ret 0x5489; 
0x000b2f13: adc byte ptr [ecx], cl; ret 0x6d74; 
0x00037f13: adc byte ptr [ecx], cl; ret 0x840f; 
0x00163fcd: adc byte ptr [ecx], cl; ret 0x848b; 
0x0003ac31: adc byte ptr [ecx], cl; ret 0x850f; 
0x000b2f9b: adc byte ptr [ecx], cl; ret 0x858d; 
0x000ee806: adc byte ptr [ecx], cl; ret 0xa975; 
0x000c0a77: adc byte ptr [ecx], cl; ret 0xffb8; 
0x00086bf9: adc byte ptr [ecx], cl; ret; 
0x00113cfa: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0006ea73: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0010b1a9: adc byte ptr [ecx], dh; rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0011e8c1: adc byte ptr [ecx], dh; shr byte ptr [edx + 2], 0x8d; xor ecx, 0x2f; cli; call dword ptr [eax + 0x51]; 
0x0006d11c: adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x00092edf: adc byte ptr [edi + 0x5b], bl; ret; 
0x0009512d: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008b6ba: adc byte ptr [edi + 0x5e], bl; ret; 
0x000f06b7: adc byte ptr [edi + 0x6a], dl; add ebp, eax; inc eax; mov ebp, 0xc483ffff; adc byte ptr [ebx - 0x16f7dbac], cl; ret; 
0x0002590c: adc byte ptr [edi], 0x2f; cli; call dword ptr [eax + 0x56]; 
0x00147d37: adc byte ptr [edi], cl; adc byte ptr [edx + 0x58], 0xfc; jmp dword ptr [esi - 0x70]; 
0x0014ea47: adc byte ptr [edi], cl; add byte ptr [edx - 0x15], 0xfb; jmp dword ptr [esi - 0x70]; 
0x0014fa27: adc byte ptr [edi], cl; and byte ptr [edx - 0x25], 0xfb; jmp dword ptr [esi - 0x70]; 
0x00146167: adc byte ptr [edi], cl; and byte ptr [edx], 0x74; cld; jmp dword ptr [esi - 0x70]; 
0x0016291d: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0012c0ea: adc byte ptr [edi], cl; dec edi; ret 0x5057; 
0x000b8c0d: adc byte ptr [edi], cl; inc ebx; ret 0x4c80; 
0x0004da63: adc byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0009bec5: adc byte ptr [edi], cl; mov esp, 0x102be8d2; or al, byte ptr [eax]; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bc5: adc byte ptr [edi], cl; mov esp, 0x432be8d2; or al, byte ptr [eax]; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095ed8: adc byte ptr [edi], cl; mov esp, 0x7018e8d2; or al, byte ptr [eax]; add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009cc12: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x001618ed: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000eadb8: adc byte ptr [edi], cl; test ah, bh; add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x00108b01: adc byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x0015e92e: adc byte ptr [edi], cl; test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret; 
0x0016261e: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00096350: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094cdd: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x001628a2: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x0008e8bf: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x00162782: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000b2490: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00092cb0: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00160b7b: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0015e463: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0015cfdc: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x001675dc: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xd008; 
0x00147a17: adc byte ptr [edi], cl; xor byte ptr [edx + 0x5b], 0xfc; jmp dword ptr [esi - 0x70]; 
0x00150a17: adc byte ptr [edi], cl; xor byte ptr [edx - 0x35], 0xfb; jmp dword ptr [esi - 0x70]; 
0x00148057: adc byte ptr [edi], cl; xor byte ptr [edx], 0x55; cld; jmp dword ptr [esi - 0x70]; 
0x001324b1: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 0x20]; 
0x00131bc1: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x00131ab1: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x0013220f: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x0012b50b: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x00131929: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x001318c6: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x0011b979: adc byte ptr [edx + 0x56], dl; call eax; 
0x0011b8b1: adc byte ptr [edx + 0x57], dl; call eax; 
0x00147d39: adc byte ptr [edx + 0x58], 0xfc; jmp dword ptr [esi - 0x70]; 
0x000954e5: adc byte ptr [edx + 0xa], bh; add byte ptr [ecx + 0xecc87c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00032122: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x35e60; add esp, 0x1c; ret; 
0x000b2aab: adc byte ptr [edx + 0xf000007], dh; dec eax; ret 0x44c7; 
0x000f9934: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00069a62: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x00029a62: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x29a20; add esp, 0x1c; ret; 
0x00029a42: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x29a20; add esp, 0x1c; ret; 
0x000e1e32: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x00085c43: adc byte ptr [edx + ebx - 0x7d], dh; ret; 
0x000dab77: adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00073915: adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x000a7539: adc byte ptr [edx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x0012e37d: adc byte ptr [edx - 0x73], dl; nop; sar byte ptr [esi], 1; hlt; call dword ptr [edx - 0x75]; 
0x0012479a: adc byte ptr [edx - 0x73], dl; xchg esi, eax; mov al, 0xdc; hlt; call dword ptr [edx - 0x73]; 
0x0013f5f6: adc byte ptr [edx], bl; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000c5832: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0xc5850; add esp, 0x1c; ret; 
0x000ff41e: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0xff430; add esp, 0x18; pop ebx; ret; 
0x00031d62: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x31ca0; add esp, 0x1c; ret; 
0x0006c4c2: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x001240d0: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0009beec: adc byte ptr [edx], cl; add byte ptr [ecx + 0xe64a5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009becb: adc byte ptr [edx], cl; add byte ptr [ecx + 0xe64c6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009bea7: adc byte ptr [edx], cl; add byte ptr [ecx + 0xe64eac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009be89: adc byte ptr [edx], cl; add byte ptr [ecx + 0xe6508c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009be06: adc byte ptr [edx], cl; add byte ptr [ecx + 0xe658bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0001beb2: adc byte ptr [edx], dl; add byte ptr [0x1c814b], al; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001be92: adc byte ptr [edx], dl; add byte ptr [0x1c816b], al; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0006e6c7: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0015d3a7: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0015a663: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0016151a: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00161532: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009cbad: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x00132b15: adc byte ptr [esi + 8], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x000d26fe: adc byte ptr [esi + ecx - 0x77], dh; ret; 
0x00028c1f: adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000291bf: adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002918f: adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000281bb: adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0004d2a6: adc byte ptr [esi + edi*8 - 0x9a0001], 0x30; push dword ptr [esp + 0x1c]; call 0x4abe0; add esp, 0x1c; ret; 
0x00083ece: adc byte ptr [esi + edi*8 - 0x9a0001], 0x30; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x87c00; add esp, 0x1c; ret; 
0x000aa45e: adc byte ptr [esi + edi*8 - 0x9a0001], 0x30; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaa5e0; add esp, 0x1c; ret; 
0x0004193c: adc byte ptr [esi + edi*8 - 0x9a0001], 0x30; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0013aa4e: adc byte ptr [esi - 0x3f], ah; call 0x1012e659; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0011ff10: adc byte ptr [esi - 0x73], dl; sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x0009c3b8: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098f25: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00096935: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x00095255: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000daba4: adc byte ptr [esi - 0x7f], ah; loope 0xdaba8; add esi, esi; ret; 
0x0013b03e: adc byte ptr [esi*2 - 0xf7d72e8], al; popal; cmc; jmp dword ptr [esi - 9]; 
0x0007bdb8: adc byte ptr [esi], 0; mov ecx, dword ptr [ecx + 0x1dfc]; test ecx, ecx; jne 0x7bdd0; ret; 
0x0001fd63: adc byte ptr [esi], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0010a7aa: adc ch, 0x57; cli; call dword ptr [eax - 0x75]; 
0x000f7b82: adc ch, byte ptr [eax]; call dword ptr gs:[0x10]; 
0x000f7b82: adc ch, byte ptr [eax]; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000b4361: adc ch, byte ptr [ecx]; ret 0x38b; 
0x000b43cc: adc ch, byte ptr [ecx]; ret 0xc269; 
0x0001e274: adc ch, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00055d75: adc ch, cl; or eax, 0x8bffffd2; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x00131d4a: adc cl, bh; std; jmp dword ptr [esi - 0x70]; 
0x00094c5a: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0012a2d4: adc cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000850e0: adc cl, byte ptr [ebp - 0x14679f70]; inc dword ptr [eax - 0x7f72fd1b]; xor byte ptr [eax + 0x450ffff7], 0xd0; mov eax, edx; ret; 
0x0011c78f: adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x000e5fd7: adc cl, byte ptr [ebx + 0x246c8b01]; xor byte ptr [ecx], bh; ret 0x2674; 
0x00044a2f: adc cl, byte ptr [ebx - 0x7cfb7eac]; ret 0x8901; 
0x00101945: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000911a6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x00091306: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdc6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf26: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091326: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf46: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091346: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf66: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00120dfd: adc cl, byte ptr [ecx - 0x74f7dbac]; add byte ptr [ecx - 0x16fbdbbc], cl; adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00103413: adc cl, byte ptr [edi]; mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x0009bfe3: adc cl, byte ptr [edi]; or al, byte ptr [eax]; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001267ce: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00098d86: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e4561: adc cl, ch; aaa; idiv edi; dec dword ptr [ebp - 0x12f7b]; dec dword ptr [ebp - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x000bed47: adc cl, ch; idiv bh; call dword ptr [edx + 0x51]; 
0x000e5bb3: adc cl, ch; inc ebp; idiv edi; dec dword ptr [ebp - 0x4e77b]; dec dword ptr [ecx - 0x50373]; call dword ptr [eax - 0x73]; 
0x000daf6e: adc cl, ch; pushfd; idiv edi; call dword ptr [eax - 1]; 
0x0005ad00: adc cl, ch; ret 0xffd9; 
0x000627b3: adc cl, ch; ret 0xfffe; 
0x0012b116: adc cl, ch; ret; 
0x00028e0c: adc cl, ch; stosd dword ptr es:[edi], eax; add edi, edi; call dword ptr [eax - 0x73]; 
0x000b8a1d: adc dh, 0x46; cli; call dword ptr [eax + 0x56]; 
0x0012edfc: adc dh, al; add al, 0x30; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001012f8: adc dh, byte ptr [edi + 0xa]; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x000e7ffa: adc dh, byte ptr [edi + 0xf]; mov esi, dword ptr [esp + 0xc]; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x000223b3: adc dh, dh; ret 0xf06; 
0x0006ebd7: adc dh, dh; ret 0xf08; 
0x000b91fe: adc dh, dh; ret; 
0x000c67c8: adc dh, dl; add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00096032: adc dl, al; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0010edef: adc dl, byte ptr [ebx - 0x18]; or dl, byte ptr [ebx]; hlt; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00100fe7: adc dword ptr [0x50fffa56], -0x18; dec esi; jle 0x100fe3; jmp dword ptr [esi - 0x70]; 
0x000ba8ef: adc dword ptr [eax + 0x1fff9ee], -0x27; jmp ecx; 
0x0010c613: adc dword ptr [eax + 0x29], 0; add byte ptr [ebp - 0x5a7347d], cl; call dword ptr [eax - 1]; 
0x00117631: adc dword ptr [eax + 0x2c], 0; add byte ptr [ebp - 0x74f18b40], al; add dword ptr [eax + 0xf], 0; add bl, ch; ret; 
0x001179a8: adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x00134806: adc dword ptr [eax + 0x4a], -6; call dword ptr [eax + 0x6a]; 
0x0002a8fc: adc dword ptr [eax + 0x5c], -0x1c; call dword ptr [eax - 0x77]; 
0x0012a900: adc dword ptr [eax + 0x6d], -0xc; call dword ptr [eax - 0x73]; 
0x00078d00: adc dword ptr [eax + 4], -0x17; jmp dword ptr [ebp + 0x33]; 
0x0014ed8c: adc dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007bdb2: adc dword ptr [eax + eax], ecx; add ecx, 0x16824b; mov ecx, dword ptr [ecx + 0x1dfc]; test ecx, ecx; jne 0x7bdd0; ret; 
0x00127ebc: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x127eb0; pop ebx; ret; 
0x000b4fbb: adc dword ptr [eax - 0x7cc70000], -0x48; and byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x0002a62c: adc dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002a755: adc dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002a6e5: adc dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x505; 
0x0002812b: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007d436: adc dword ptr [eax], eax; add byte ptr [ebx - 0x72efdb84], cl; xchg esp, esp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0002b715: adc dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002cfe4: adc dword ptr [eax], eax; add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x0002a794: adc dword ptr [eax], eax; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00029413: adc dword ptr [eax], eax; add eax, 0x1babeb; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293f3: adc dword ptr [eax], eax; add eax, 0x1bac0b; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x000293d3: adc dword ptr [eax], eax; add eax, 0x1bac2b; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x00024d53: adc dword ptr [eax], eax; add eax, 0x1bf2ab; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x0001c5cc: adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call edi; 
0x0001bf07: adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call esi; 
0x0001c07b: adc dword ptr [eax], eax; mov dword ptr [esp], ebx; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x00024d15: adc dword ptr [eax], eax; mov dword ptr [esp], esi; call ebx; 
0x0011af62: adc dword ptr [eax], eax; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c7479: adc dword ptr [eax], eax; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xc7490; ret; 
0x00112212: adc dword ptr [ebp + 0x5a], -6; call dword ptr [eax - 0x18]; 
0x001123f7: adc dword ptr [ebp + 0x5a], -6; call dword ptr [eax - 0x73]; 
0x0002112b: adc dword ptr [ebp], edi; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x0009ecfe: adc dword ptr [ebx + 0x1c7402f8], eax; xor eax, eax; ret; 
0x0012617b: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0005d984: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00024c39: adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x000ec7f5: adc dword ptr [ebx + 0x5e5b70c4], eax; pop edi; ret; 
0x0011b07b: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0007388d: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x0012c51a: adc dword ptr [ebx + 0x62], -6; call dword ptr [esi + 0x57]; 
0x00025506: adc dword ptr [ebx + 0xc7403f8], eax; add esp, 8; pop ebx; ret; 
0x00077238: adc dword ptr [ebx + 1], 0; add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x0011543c: adc dword ptr [ebx + ebx*4], 0xa98dfffa; sub byte ptr [eax - 6], dh; call dword ptr [eax + 0x55]; 
0x00072db4: adc dword ptr [ebx + edi*2], -6; call dword ptr [eax - 0x18]; 
0x00108655: adc dword ptr [ebx - 0x13f77], ecx; jmp dword ptr [ebp - 0x75]; 
0x0002911c: adc dword ptr [ebx - 0x16b7f], ecx; jmp dword ptr [ebp - 0x75]; 
0x001171a3: adc dword ptr [ebx - 0x17aff314], eax; jecxz 0x1171cd; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x0012689e: adc dword ptr [ebx - 0x2f76fb3c], eax; pop ebx; pop esi; ret; 
0x0015d33e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15d349; neg eax; ret; 
0x00069b46: adc dword ptr [ebx - 0x74f7dbbc], ecx; push esp; and al, 0xc; add esp, 0x1c; ret; 
0x001055ac: adc dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0005e3f6: adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x00111512: adc dword ptr [ebx], 0x5a; cli; call dword ptr [eax - 0x18]; 
0x00111703: adc dword ptr [ebx], 0x5a; cli; call dword ptr [eax - 0x73]; 
0x0009de72: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0002332b: adc dword ptr [ebx], ebx; add byte ptr [ebx - 0x72b7db84], cl; xchg esp, ebp; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x00132eba: adc dword ptr [ebx], ecx; add byte ptr [ebx - 0x417fb14], al; ret; 
0x0012c430: adc dword ptr [ecx + 0x3c870fc6], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [ebx - 0x5d9a0], es; add ecx, ebx; jmp ecx; 
0x000f98e3: adc dword ptr [ecx + 0x4c], -6; call dword ptr [eax - 0x18]; 
0x0002d58e: adc dword ptr [ecx - 0x762a7618], ecx; ret 0xee85; 
0x001200f2: adc dword ptr [ecx], -6; call dword ptr [eax + 0x68]; 
0x00024d52: adc dword ptr [ecx], 0xf2ab0500; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x0008169a: adc dword ptr [ecx], ebp; ret 0xf989; 
0x000d8631: adc dword ptr [ecx], ecx; adc byte ptr [ebx - 0x3e7cfb40], al; add al, 0x39; ret; 
0x00096810: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000fcf67: adc dword ptr [edi + edi*8 - 0x3b7c0001], 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0ab: adc dword ptr [edi + edi*8 - 0x3b7c0001], 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0xfd1a0; call eax; 
0x001210d8: adc dword ptr [edi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x000dedbf: adc dword ptr [edi], 3; cli; call dword ptr [ecx + 0x6a]; 
0x000c2fc3: adc dword ptr [edx + 0x47], -6; call dword ptr [eax - 0x73]; 
0x0002a85b: adc dword ptr [edx + ebx], 0; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001e273: adc dword ptr [edx], 0x2e; cli; call dword ptr [eax - 0x73]; 
0x00042e3f: adc dword ptr [esi + 0x33], -6; call dword ptr [eax - 0x18]; 
0x0008ed21: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x0010c5e8: adc dword ptr [esi], 0x2c; cli; call dword ptr [eax - 0x18]; 
0x000fecf1: adc dword ptr [esi], 0x4d; cli; call dword ptr [eax - 0x18]; 
0x000f9d7b: adc dword ptr [esp], 0; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000f9d23: adc dword ptr [esp], 0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000f9da5: adc dword ptr [esp], 0; add esp, 8; pop ebx; ret; 
0x0009de71: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00143255: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00031181: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x00050f40: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x000b402c: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000b4144: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000b42fe: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x000c093e: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000e1e04: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec092: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec3b0: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3e0: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec410: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000ec704: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ec8d5: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec905: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ecb84: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000ed310: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f567c: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5974: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e4: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f6200: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f6230: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f7b86: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000f9100: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f92d8: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000f9320: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f9350: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9384: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b4: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000fd228: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000c6947: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00030dfb: adc eax, 0x10; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c5d80: adc eax, 0x10; mov eax, 1; int 0x80; 
0x00030e07: adc eax, 0x10; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00031151: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000ecacd: adc eax, 0x10; mov ebx, edx; ret; 
0x0013f783: adc eax, 0x10; mov ecx, 9; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00030e15: adc eax, 0x10; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000eb3ab: adc eax, 0x10; neg eax; pop ebx; ret; 
0x000b6c04: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0011961e: adc eax, 0x10; pop ebx; ret; 
0x0007b377: adc eax, 0x10; ret; 
0x001005b0: adc eax, 0x14; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001006a5: adc eax, 0x14; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100725: adc eax, 0x14; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x001007b8: adc eax, 0x14; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x00100830: adc eax, 0x14; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c18: adc eax, 0x14; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100c90: adc eax, 0x14; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d05: adc eax, 0x14; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00100d90: adc eax, 0x14; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00101034: adc eax, 0x14; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea6: adc eax, 0x14; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011cef2: adc eax, 0x14; jne 0x11cefd; add esp, 0x1c; ret; 
0x00132c8d: adc eax, 0x14; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132cdd: adc eax, 0x14; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x0013cadd: adc eax, 0x14; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f4: adc eax, 0x14; jne 0x13f8ff; add esp, 0x1c; ret; 
0x00145440: adc eax, 0x14; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x00031527: adc eax, 0x14; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x00031e7f: adc eax, 0x14; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031eef: adc eax, 0x14; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x00034377: adc eax, 0x14; jne 0x34382; add esp, 0x2c; ret; 
0x00034497: adc eax, 0x14; jne 0x344a2; add esp, 0x2c; ret; 
0x000508cb: adc eax, 0x14; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x00050e83: adc eax, 0x14; jne 0x50e97; add esp, 0x1c; ret; 
0x000b3214: adc eax, 0x14; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000bc70d: adc eax, 0x14; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee0d: adc eax, 0x14; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3ec: adc eax, 0x14; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec11d: adc eax, 0x14; jne 0xec128; add esp, 0x1c; ret; 
0x000ec174: adc eax, 0x14; jne 0xec17f; add esp, 0x1c; ret; 
0x000ef13b: adc eax, 0x14; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000f5f63: adc eax, 0x14; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75d0: adc eax, 0x14; jne 0xf75db; add esp, 0x1c; ret; 
0x000f8149: adc eax, 0x14; jne 0xf815f; add esp, 0x3c; ret; 
0x000ff34d: adc eax, 0x14; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x0013f7a8: adc eax, 0x18; call edx; 
0x0012147d: adc eax, 0x18; push edx; call eax; 
0x0001a6c6: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0001af35: adc eax, 0x1ba; add byte ptr [ecx], dh; fisttp dword ptr [ebp - 0x2f76ff8a]; call dword ptr gs:[0x10]; 
0x0009c98a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x000c0eea: adc eax, 0x560cec83; call eax; 
0x0012e4e1: adc eax, 0x5b28c483; ret; 
0x000c6879: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x0008f038: adc eax, 0x5bfffffe; ret; 
0x00116736: adc eax, 0x5c88868d; cli; call dword ptr [ecx - 0x77]; 
0x0015edcc: adc eax, 0x81fffde1; ret; 
0x000751c7: adc eax, 0x83000002; in al, dx; or byte ptr [ebp + 0x50342444], cl; push ebx; call dword ptr [esi + 0x48]; 
0x0008555c: adc eax, 0x8300768d; ret 0x8b20; 
0x0010b4bc: adc eax, 0x8300768d; rol byte ptr [ecx], 0x89; ret 0xe2c1; 
0x00089830: adc eax, 0x8394758b; ret 0xf01; 
0x0008913e: adc eax, 0x83cc7d8b; ret 0xf01; 
0x00088d9f: adc eax, 0x83d4758b; ret 0xf01; 
0x0008a333: adc eax, 0x83d47d8b; ret 0xf01; 
0x00100533: adc eax, 0x8914c483; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00054471: adc eax, 0x8bffffe9; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10768]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x00028104: adc eax, 0x8d000011; and al, 0x10; add byte ptr [eax], al; ret; 
0x00167130: adc eax, 0x8dfffff5; je 0x16715d; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x0015b43e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0014b915: adc eax, 0xc381ffff; call 0x314bd5f; sbb al, 0x8b; jmp ebx; 
0x0014b9ae: adc eax, 0xc381ffff; dec edi; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00060d22: adc eax, 0xec830000; add al, 0x53; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x000aff2e: adc eax, 0xec830000; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36376b]; dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000b242a: adc eax, 0xf390e8b; jne 0xb2580; pop edi; pop esi; ret; 
0x0014eb7b: adc eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c6f81: adc eax, dword ptr [eax]; add byte ptr [eax + 0x7f], bh; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x0009f809: adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0015b68e: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0004874d: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0011dbef: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x7a72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x0009c1bc: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d49: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1dc: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d69: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c159: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf6: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c19d: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d2a: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1fe: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d8b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c21e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dab: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c23e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dcb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000dda80: adc eax, dword ptr [ebp - 0x74a48b2e]; inc edx; or byte ptr [ebp + 0x390474c0], al; ret; 
0x0007b45c: adc eax, dword ptr [ebp - 0x7ce08a2e]; pushal; or dh, bh; xor eax, eax; ret; 
0x0009eba4: adc eax, dword ptr [ebp - 6]; call dword ptr [eax - 0x18]; 
0x00124387: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x001640d3: adc eax, dword ptr [ebx + 0x490f0ce9]; ror dword ptr [ecx + 0x5f8c1cd], 0xf6; rcr dword ptr [edi], 0xf; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x000f587c: adc eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0010d988: adc eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0001bcee: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000c201b: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000f5f0e: adc eax, dword ptr [ebx + 0x5e5b34c4]; ret; 
0x000c57fc: adc eax, dword ptr [ebx + 0xbafff8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x00081632: adc eax, dword ptr [ebx + eax*4]; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x0007b6b8: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1c839c9; mov dword ptr [edx + 0x150], eax; ret; 
0x0001beff: adc eax, dword ptr [ebx - 0x17a9f314]; xchg ebp, edx; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call esi; 
0x0001ce56: adc eax, dword ptr [ebx - 0x17a9f314]; xor dh, al; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call esi; 
0x001635bc: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0008ed96: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x0008eda6: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x0008edb6: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x0008edc6: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x0008ed52: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0008ed72: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed82: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed62: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed92: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008eda2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edb2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edc2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008ed42: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x00095416: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x00095426: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000953b2: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x00096706: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00095039: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00095079: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x00095099: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0009505a: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x00095412: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950bb: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095422: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950db: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000950fb: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095026: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x00095a3f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b9f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0009b5b2: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000943ff: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0009455f: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x00095a5f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bbf: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0009b5d2: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x0009441f: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0009457f: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x00095a7f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bdf: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0009b5f2: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x0009443f: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0009459f: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x0009590e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bff: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000942ee: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000945bf: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x00093f7b: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00091036: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x00091276: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x00092e61: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00098679: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x00098699: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00091149: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x00091289: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cd69: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008cea9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0009b7c2: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00091189: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912c9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cda9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008cee9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00091079: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000912e9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x00092e99: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x0008eaa9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x0008ccb9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008fa22: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x0008cf09: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000986b9: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000986d9: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00163c56: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f7: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea71: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc76: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x0008fa9b: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x0008ce96: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x0009116a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000912aa: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cd8a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008ceca: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000911ab: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0009130b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdcb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf2b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000911cb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0009132b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cdeb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf4b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000911eb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0009134b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008ce0b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008f9ce: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x0008cf6b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00092ed6: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b44a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eae6: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x0009859a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x00095a36: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b96: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000943f6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x00094556: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a56: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bb6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094416: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x00094576: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a76: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bd6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094436: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x00094596: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095905: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bf6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e5: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945b6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0004a058: adc eax, edi; add byte ptr [edi], ch; jbe 0x49fe9; ret 0x40c7; 
0x0007b7db: adc ebp, dword ptr [ecx]; ret 0xd139; 
0x0012e1d9: adc ebp, ebx; ret 0x748d; 
0x00042d05: adc ebp, ebx; xor eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [eax + 0x39ff428d], dl; ret; 
0x0013daf4: adc ebp, edi; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax - 0x6bf08dc2]; ret; 
0x0004992b: adc ebp, esi; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x0009c322: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e9f: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c342: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ebf: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00062c57: adc ebx, dword ptr [eax]; add byte ptr [ebx - 0x6f72f314], al; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x00088af7: adc ebx, dword ptr [ebx + 0x5e]; ret; 
0x000311d9: adc ebx, dword ptr [ebx + 0x8b90004]; add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00096850: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b256c: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000951cf: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000968cf: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000951ef: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00111513: adc ebx, dword ptr [edx - 6]; call dword ptr [eax - 0x18]; 
0x00111704: adc ebx, dword ptr [edx - 6]; call dword ptr [eax - 0x73]; 
0x0008ac51: adc ebx, ebp; adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x000c876a: adc ecx, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0011066c: adc ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x0005191b: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x0009c202: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d8f: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c222: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098daf: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c242: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dcf: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d2928: adc ecx, dword ptr [ebp + 0xf3d244c]; mov dh, 0x14; ret 0xc083; 
0x000963c3: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0011a69b: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0008ac53: adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x0002817a: adc ecx, dword ptr [ebx + 0x5b248354]; mov eax, edx; ret; 
0x0005813d: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0009679f: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000950bf: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000950df: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000950ff: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000963c6: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000911af: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x0009130f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0008cdcf: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0008cf2f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000911cf: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x0009132f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0008cdef: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0008cf4f: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000911ef: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x0009134f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0008ce0f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0008f9d2: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x0008cf6f: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x00092eda: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b81e: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0009b44e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eaea: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x0009859e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000c4399: adc edi, dword ptr [ebp - 0x3b7c0008]; and byte ptr [ecx - 0x72651439], cl; je 0xc43cd; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000b1529: adc edi, dword ptr [ecx - 9]; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x0014bd9e: adc edi, edi; inc dword ptr [ecx + 0x43c5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bd05: adc edi, edi; inc dword ptr [ecx + 0x43cf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bbb5: adc edi, edi; inc dword ptr [ecx + 0x43e48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bafe: adc edi, edi; inc dword ptr [ecx + 0x43effc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011603c: adc edi, edx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0001b459: adc edx, 0; neg edx; ret; 
0x0009c385: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098eff: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c3e5: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f42: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c415: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f62: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c362: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098edf: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c3b6: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f23: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000968ef: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x00095232: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x00095272: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095292: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095253: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0009520f: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0001c079: adc edx, esp; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x0002fbbc: adc esi, dword ptr [ebp + 0x11]; fadd st(0); add esp, 8; pop ebx; ret; 
0x00041729: adc esi, dword ptr [edi - 2]; dec dword ptr [ebx - 0x976b]; dec dword ptr [ebp - 0x58c137e]; call dword ptr [eax + 0x68]; 
0x00069ff5: adc esi, esi; cli; jmp dword ptr [esi - 0x70]; 
0x00070a1c: adc esi, esi; ret 0x7402; 
0x00070b16: adc esi, esi; ret 0xf02; 
0x0007097a: adc esi, esi; ret 0xf08; 
0x0006abe4: adc esi, esi; ret 0xf20; 
0x0010edf3: adc esi, esp; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00100fd7: adc esp, -0x69; cli; call dword ptr [eax - 0x73]; 
0x00120e09: adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00025771: adc esp, 0x2e; cli; call dword ptr [eax - 0x18]; 
0x00025761: adc esp, 0x6e; cli; call dword ptr [eax - 0x73]; 
0x00117219: add ah, 0x5c; cli; call dword ptr [eax - 1]; 
0x00120c2b: add ah, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x00041722: add ah, 0x73; cli; call dword ptr [eax - 0x18]; 
0x00065e03: add ah, al; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x000ec8ea: add ah, bh; bnd jmp dword ptr [esi - 0x70]; 
0x000d1a3a: add ah, bh; inc dword ptr [eax - 0x6bf0f907]; ret 0x7b89; 
0x0014335a: add ah, byte ptr [ebx - 0x3b7c0006]; sbb al, 0xc1; clc; pop ds; ret; 
0x00095a37: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b97: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000943f7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x00094557: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a57: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bb7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094417: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x00094577: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a77: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bd7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094437: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x00094597: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095906: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bf7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e6: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945b7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000911ac: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x0009130c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x0008cdcc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x0008cf2c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000911cc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x0009132c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x0008cdec: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x0008cf4c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000911ec: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x0009134c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x0008ce0c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x0008f9cf: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x0008cf6c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x00092ed7: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b44b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eae7: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x0009859b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0009dbf0: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d580: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0009dc59: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00091253: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0008ce73: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00094fd5: add ah, byte ptr [esi - 0x77]; js 0x5e685235; pop ebx; ret; 
0x0007e039: add al, 0; add al, ch; mov edi, 0x89ffffdb; ret; 
0x00028ec0: add al, 0; add al, ch; sbb byte ptr [ebx - 0x3b7cfffb], dh; or al, 0x89; ret; 
0x000a7534: add al, 0; add byte ptr [eax - 0x73], dl; adc byte ptr [edx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x000c223c: add al, 0; add byte ptr [eax - 0x73], dl; or dword ptr [ecx - 0x72b00000], 0xffffff83; add bl, ch; in eax, dx; call dword ptr [eax - 0x18]; 
0x0011799c: add al, 0; add byte ptr [eax - 0x73], dl; sub dword ptr [eax + 0x2c], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x00049a6e: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; 
0x00049a6e: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x0003a76e: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x0003a76e: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x00034014: add al, 0; add byte ptr [eax - 1], dl; je 0x3403f; sbb al, 0xe8; maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x0007c426: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b974d2], al; ret 0xb574; 
0x0013cbd5: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000ed15c: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00019002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000f59d2: add al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00162a3e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000b27e1: add al, 0; add byte ptr [eax], al; ret; 
0x0003ac27: add al, 0; add byte ptr [eax], dl; add byte ptr [eax - 0x3b7cfb0c], al; adc byte ptr [ecx], cl; ret 0x850f; 
0x0013e790: add al, 0; add byte ptr [ebx + 0x448d08ec], al; and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0012c414: add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0003b32a: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004a0fc: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x0002771d: add al, 0; add byte ptr [ebx - 0x1c373], cl; dec dword ptr [ebx - 0x1bb6b]; dec dword ptr [ebx + 0x110194c]; ret 0xd139; 
0x00046b26: add al, 0; add byte ptr [ebx - 0x363f7b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0005937c: add al, 0; add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x62f84], bl; jmp eax; 
0x00052526: add al, 0; add byte ptr [ebx - 0x59b63], cl; inc dword ptr [ecx + 0x400fa]; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x00165630: add al, 0; add byte ptr [ebx - 0x76f7db84], cl; ret 0x44c7; 
0x000ef714: add al, 0; add byte ptr [ecx + 0x3d182454], cl; add byte ptr [eax + eax], al; add byte ptr [edi], cl; inc edx; ret; 
0x000f7bb1: add al, 0; add byte ptr [ecx - 0x72f3dbbc], cl; xor bh, 0x4b; cli; jmp dword ptr [ebp - 0x75]; 
0x0010bf7c: add al, 0; add byte ptr [ecx], al; call eax; 
0x000cf2de: add al, 0; add byte ptr [ecx], ch; ret 0x4be; 
0x00094f9b: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003ca72: add al, 0; add byte ptr [edi], cl; dec edi; ret 0xf001; 
0x00052532: add al, 0; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x000ef71d: add al, 0; add byte ptr [edi], cl; inc edx; ret; 
0x00108282: add al, 0; add byte ptr [edx], al; call eax; 
0x00075a4b: add al, 0; add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x000f89dc: add al, 0; add byte ptr [esi - 0x18], dl; dec ebx; ret 0xfff7; 
0x0007e8a4: add al, 0; add dh, dh; ret; 
0x000f7e43: add al, 0; add eax, 0xec1bb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000f67f3: add al, 0; add eax, 0xed80b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00145b8d: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00148833: add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148898: add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000f6713: add al, 0; add edx, 0xed8eb; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00031c73: add al, 0; je 0x31c90; lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x000b2851: add al, 0; lea ecx, [eax + 1]; jne 0xb2830; mov eax, ecx; ret; 
0x0008b0ee: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x0008b026: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000311db: add al, 0; mov ecx, 8; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000352bb: add al, 0; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000c0adc: add al, 0; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x000cde7e: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0006421f: add al, 0x10; sub esp, 4; push dword ptr [ebp - 0x8e8]; push edi; push dword ptr [ebp - 0x89c]; call eax; 
0x0002ca3a: add al, 0x11; add byte ptr [ecx + 0x1b75c3c3], al; add byte ptr [ecx + 0x1ecec], al; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011af61: add al, 0x11; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0013f773: add al, 0x19; add byte ptr [eax], al; test eax, eax; jne 0x13f79b; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0007a9c6: add al, 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0006cfd7: add al, 0x1e; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00045094: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x0002f74b: add al, 0x24; add esp, 0x14; pop ebx; pop esi; ret; 
0x000453c6: add al, 0x24; add esp, 0xc; ret; 
0x0002fa78: add al, 0x24; add esp, 4; ret; 
0x0002f873: add al, 0x24; add esp, 8; ret; 
0x0013bf2a: add al, 0x24; call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012e04c: add al, 0x24; call dword ptr [edx + 0x10]; 
0x000262d7: add al, 0x24; call edx; 
0x00045379: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x000453fd: add al, 0x24; fld xword ptr [esp]; add esp, 0x14; ret; 
0x001004fc: add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001009bc: add al, 0x24; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00043b91: add al, 0x24; ret; 
0x0013aaaf: add al, 0x29; ret 0x143b; 
0x00077242: add al, 0x29; ret 0x5052; 
0x0013acd7: add al, 0x29; ret 0x543b; 
0x00080ee9: add al, 0x29; ret 0xda21; 
0x00070ae8: add al, 0x29; ret 0xfac1; 
0x0005169d: add al, 0x29; ret; 
0x00029cac: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013a95f: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00116788: add al, 0x2c; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0012edfe: add al, 0x30; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0011b6b2: add al, 0x31; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x00079a83: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00101933: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x101940; ret; 
0x00073b74: add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x00074014: add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000b6c52: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0008ac9e: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ac62: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x00080c04: add al, 0x39; fmul dword ptr [edi]; inc edi; ret; 
0x000d9318: add al, 0x39; ret 0x2b75; 
0x0013f852: add al, 0x39; ret 0x4976; 
0x000ce06a: add al, 0x39; ret 0xd67f; 
0x000f77b0: add al, 0x39; ret 0xf372; 
0x000dcaef: add al, 0x39; ret 0xf375; 
0x00048065: add al, 0x39; ret 0xf672; 
0x00085cdc: add al, 0x39; ret 0xf775; 
0x0001e459: add al, 0x39; ret; 
0x00079e99: add al, 0x39; retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000a0575: add al, 0x39; retf 0x474; test edx, edx; jne 0xa0570; ret; 
0x0010295f: add al, 0x39; sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0xe18df80]; call dword ptr [eax + 0x6a]; 
0x000cc7cb: add al, 0x3c; aas; jne 0xcc7e9; mov eax, 1; pop ebx; ret; 
0x0011affe: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x000fb728: add al, 0x4a; cmc; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000290e9: add al, 0x50; and eax, 0x1000; ret; 
0x000290b9: add al, 0x50; and eax, 0x100; ret; 
0x00029089: add al, 0x50; and eax, 0x2000; ret; 
0x00028fd9: add al, 0x50; and eax, 0x200; ret; 
0x00029039: add al, 0x50; and eax, 0x4000; ret; 
0x00028f59: add al, 0x50; and eax, 0x400; ret; 
0x00029009: add al, 0x50; and eax, 0x8000; ret; 
0x00028fa9: add al, 0x50; and eax, 0x800; ret; 
0x00029179: add al, 0x50; and eax, 1; ret; 
0x00028f89: add al, 0x50; and eax, 2; ret; 
0x00029069: add al, 0x50; and eax, 4; ret; 
0x00028f39: add al, 0x50; and eax, 8; ret; 
0x0012438d: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0012453a: add al, 0x50; call dword ptr [edx + 0x10]; 
0x00131f6f: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x131db0; add esp, 0x1c; ret; 
0x000501f9: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x501b0; add esp, 0x1c; ret; 
0x0006d849: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x501d0; add esp, 0x1c; ret; 
0x000700fe: add al, 0x50; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x00075bdf: add al, 0x50; push edx; push esi; call ecx; 
0x0010c4f1: add al, 0x50; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x000fbfe2: add al, 0x51; push 3; push ebx; call edx; 
0x0013e44c: add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0012c419: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0007616d: add al, 0x51; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0004b321: add al, 0x51; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0012efb0: add al, 0x51; push edi; call dword ptr [esi + 8]; 
0x00080542: add al, 0x51; push edx; push ebx; call eax; 
0x001315c5: add al, 0x51; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131605: add al, 0x51; push edx; push esi; call dword ptr [eax + 8]; 
0x00124a78: add al, 0x52; call dword ptr [eax + 0x10]; 
0x0012e0da: add al, 0x52; call dword ptr [eax + 0x14]; 
0x0012e239: add al, 0x52; call dword ptr [ecx + 0x10]; 
0x00124990: add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0007120b: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0012667c: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0012663c: add al, 0x52; push ebx; call dword ptr [eax]; 
0x001324e0: add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x00131ae0: add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x001247c0: add al, 0x53; call dword ptr [eax + 0x10]; 
0x0012e81f: add al, 0x53; call dword ptr [eax]; 
0x0006bc5d: add al, 0x53; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0005de42: add al, 0x53; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00069ad3: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00065889: add al, 0x53; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x0005ed87: add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639e0: add al, 0x53; push eax; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x00060d27: add al, 0x53; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0005ea36: add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x001315e2: add al, 0x53; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131622: add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x000626ef: add al, 0x53; push edx; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00131e21: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x00065fb1: add al, 0x53; push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x00043853: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00073be0: add al, 0x55; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0013b0e6: add al, 0x55; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003262e: add al, 0x55; push dword ptr [esp + 0x34]; push esi; call edi; 
0x0007607b: add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00061905: add al, 0x55; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000613b2: add al, 0x55; push dword ptr [esp + 0x44]; push esi; call dword ptr [ebx + 0x1c]; 
0x00032316: add al, 0x55; push ebx; push esi; call edi; 
0x0006d18c: add al, 0x55; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000322fa: add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x000322c6: add al, 0x55; push esi; push dword ptr [esp + 0x34]; call edi; 
0x00074bbe: add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0006ce6d: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00066c7d: add al, 0x56; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00082986: add al, 0x56; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call eax; 
0x00082c7b: add al, 0x56; push dword ptr [esp + 0x6c]; push ebp; call eax; 
0x00074d40: add al, 0x56; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0012b4f5: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0005f393: add al, 0x56; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x00066f14: add al, 0x56; push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x0012efbe: add al, 0x57; call dword ptr [eax + 0x10]; 
0x000fbfab: add al, 0x57; push 0; push ebx; call esi; 
0x000fbfbf: add al, 0x57; push 1; push ebx; call esi; 
0x000fbfd2: add al, 0x57; push 2; push ebx; call esi; 
0x0006b63b: add al, 0x57; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0006a471: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00060610: add al, 0x57; push dword ptr [esp + 0x18]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006ad6d: add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x001110cd: add al, 0x5a; cli; call dword ptr [eax - 0x73]; 
0x00124d90: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00084421: add al, 0x5b; cmovne eax, ecx; ret; 
0x001323ea: add al, 0x5b; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x001265f2: add al, 0x5b; mov eax, dword ptr [eax + 4]; jmp eax; 
0x00034c83: add al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00070614: add al, 0x5b; pop esi; jmp eax; 
0x0002e8e7: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00083603: add al, 0x5b; pop esi; pop edi; ret; 
0x0001be8a: add al, 0x5b; pop esi; ret; 
0x00050f4b: add al, 0x5b; ret; 
0x0015c9db: add al, 0x5d; pop ebx; ret; 
0x0015c9e2: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0014efd0: add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015241a: add al, 0x5f; call 0x13cee5; add ebx, 0x3e01f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d0ca: add al, 0x5f; call 0x13cee5; add ebx, 0x42baf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b07a: add al, 0x5f; call 0x13cee5; add ebx, 0x4497f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014907a: add al, 0x5f; call 0x13cee5; add ebx, 0x466ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00107de8: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x00092e33: add al, 0x5f; pop ebx; ret; 
0x00094ff9: add al, 0x5f; pop esi; pop ebx; ret; 
0x0009110c: add al, 0x5f; ret; 
0x0001b023: add al, 0x64; cli; call dword ptr [eax + 0x6a]; 
0x000c5ab4: add al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea963: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00091117: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x00091257: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0009b4da: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd47: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x0008ce77: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000959d9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x00095b39: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x00094399: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000944f9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0006d11a: add al, 0x6a; adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x0007946f: add al, 0x6a; add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x2c]; 
0x00114fe2: add al, 0x6a; add dword ptr [ebx - 0x72efdbbc], ecx; add byte ptr [ecx], 0x31; cli; call dword ptr [eax + 0x56]; 
0x000debec: add al, 0x6a; add eax, 0x2003848d; add bh, dl; call dword ptr [eax - 0x73]; 
0x000e5f1c: add al, 0x6a; add eax, 0x28818d50; jo 0xe5f1f; call dword ptr [eax - 0x18]; 
0x00126384: add al, 0x6a; add eax, 0x28838d50; jo 0x126387; call dword ptr [eax - 0x18]; 
0x000504c9: add al, 0x6a; add eax, 0x28838d50; jo 0x504cc; call dword ptr [eax - 0x18]; 
0x0008433c: add al, 0x6a; add eax, 0x28838d50; jo 0x8433f; call dword ptr [eax - 0x18]; 
0x00084671: add al, 0x6a; add eax, 0x28838d50; jo 0x84674; call dword ptr [eax - 0x18]; 
0x000513da: add al, 0x6a; add eax, 0x28858d50; jo 0x513dd; call dword ptr [eax - 0x18]; 
0x0010a865: add al, 0x6a; add eax, 0x579f918d; cli; call dword ptr [edx + 0x50]; 
0x0010a7a6: add al, 0x6a; add eax, 0x57d5808d; cli; call dword ptr [eax - 0x75]; 
0x0010c1bf: add al, 0x6a; add eax, 0x6ac0878d; cli; call dword ptr [eax - 0x75]; 
0x0011cbc8: add al, 0x6a; add eax, 0x8d8134ff; sub byte ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x000e1180: add al, 0x6a; add eax, 0x924c868d; cli; call dword ptr [eax - 0x73]; 
0x0010aea1: add al, 0x6a; add eax, 0x9978808d; cli; call dword ptr [eax + 0x6a]; 
0x0013153f: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0013153f: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x00132fb3: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00121222: add al, 0x6a; or byte ptr [ebx - 0x72f3dba4], cl; or dword ptr [esi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x000b4627: add al, 0x6b; ret; 
0x00025574: add al, 0x6e; cli; call dword ptr [eax - 0x73]; 
0x0006ca6d: add al, 0x73; adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x0003a87d: add al, 0x73; cli; call dword ptr [eax - 0x18]; 
0x0006c8ef: add al, 0x73; push cs; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000eb399: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d01f8: add al, 0x74; sbb ecx, dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001609e3: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x000d7c83: add al, 0x75; fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0010c479: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000d45f3: add al, 0x75; ret; 
0x0013b03f: add al, 0x75; sbb byte ptr [ebp - 0xa9e0f7e], cl; jmp dword ptr [esi - 9]; 
0x0015e72b: add al, 0x76; ret; 
0x000e1e52: add al, 0x77; push es; setne al; movzx eax, al; ret; 
0x000d6e3b: add al, 0x7c; ret 0x9066; 
0x00101938: add al, 0x80; cmp dword ptr [eax], eax; je 0x101940; ret; 
0x0011b3a3: add al, 0x80; js 0x11b3a9; add byte ptr [ebp + 0xe], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000e76b7: add al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00067c8f: add al, 0x81; les ebp, ptr [ecx + eax*4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a80da: add al, 0x81; ret 0; 
0x000cdc62: add al, 0x81; ret 0x2000; 
0x00074873: add al, 0x83; and bh, cl; ret; 
0x000587d9: add al, 0x83; clc; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00132fb0: add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00124d5a: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000bf562: add al, 0x83; in al, dx; or al, 0x89; ret; 
0x0004b56b: add al, 0x83; in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8373]; call dword ptr [ebx - 0x75]; 
0x000f33d1: add al, 0x83; in al, dx; or al, 0xff; je 0xf33fc; sbb al, 0xe8; ret 0xfcce; 
0x0012e3f4: add al, 0x83; in al, dx; or byte ptr [ecx - 0x72540c29], cl; and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x00125ac2: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00132a43: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x00101bb1: add al, 0x83; jmp dword ptr [eax]; 
0x000a2f19: add al, 0x83; lds eax, ptr [ebx + eax*4]; ret; 
0x00029caf: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007456e: add al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00131772: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00028997: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002556d: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00036d77: add al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00083d18: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00035231: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016b4d3: add al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x001248df: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00081633: add al, 0x83; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x00151abd: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0014e9bd: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x0009e0ac: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0009e0af: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0007c379: add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x0012ba90: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0001f8c7: add al, 0x83; ret 0x3901; 
0x0003494e: add al, 0x83; ret 0x3904; 
0x0005e5a4: add al, 0x83; ret 0x3910; 
0x000dcd24: add al, 0x83; ret 0x3940; 
0x000c83fb: add al, 0x83; ret 0x5601; 
0x0011b1a0: add al, 0x83; ret 0x8108; 
0x00024966: add al, 0x83; ret 0x8301; 
0x00044394: add al, 0x83; ret 0x8304; 
0x000b28a2: add al, 0x83; ret 0x8310; 
0x0009dd83: add al, 0x83; ret 0x8404; 
0x0009f0e2: add al, 0x83; ret 0x8504; 
0x0004497b: add al, 0x83; ret 0x8901; 
0x000439f4: add al, 0x83; ret 0x8904; 
0x000bdf21: add al, 0x83; ret 0x8930; 
0x0009db11: add al, 0x83; ret 0x8b04; 
0x00024bb9: add al, 0x83; ret 0x8d01; 
0x00044535: add al, 0x83; ret 0x8d04; 
0x00068542: add al, 0x83; ret 0xb904; 
0x0010c795: add al, 0x83; ret 0xc601; 
0x00164eb8: add al, 0x83; ret 0xd304; 
0x0008b5b4: add al, 0x83; ret 0xf04; 
0x00025aa7: add al, 0x83; ret; 
0x000a0572: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xa057e; test edx, edx; jne 0xa0570; ret; 
0x000414b5: add al, 0x83; rol byte ptr [ecx], 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x73]; 
0x00085557: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x0012057c: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x00123774: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x12378f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00058515: add al, 0x85; fisttp dword ptr [edi]; test byte ptr [esp + ecx - 0x6a750000], ch; call 0x8405851f; ret 0x8904; 
0x0001ca8c: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x000a626b: add al, 0x85; sal byte ptr [eax + esi*4 - 0x77], cl; ret 0xe889; 
0x000a8f33: add al, 0x85; sal byte ptr [eax + esi*4 - 0x77], cl; ret 0xf889; 
0x000ec74d: add al, 0x85; sal byte ptr [ebp + 0x1e], 0xb8; sub dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fc9ff: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x000fc9db: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x0011f3dc: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000b2939: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000a0579: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x000b2902: add al, 0x85; sal byte ptr [ecx + ecx - 0x75], cl; adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x000a354a: add al, 0x85; sal byte ptr [ecx + esi*4 - 0x77], cl; ret 0xe889; 
0x0008356a: add al, 0x85; sal byte ptr [edi + ebx - 0x70], 0x39; ret 0x476; 
0x000afb7c: add al, 0x85; sal byte ptr [edi + ebx*4 - 0x77], cl; ret 0xf889; 
0x000f946f: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x001392f9: add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x0007b29a: add al, 0x85; sal byte ptr [esi + edx*4 - 0x77], cl; dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x0011b58d: add al, 0x85; sar byte ptr [ecx + 0x1e], 0x8d; and byte ptr [eax], 0x9d; cli; call dword ptr [eax - 0x73]; 
0x0009de6f: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0008cd36: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x00091106: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x001249d8: add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0005e3f4: add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x000f9d21: add al, 0x89; adc dword ptr [esp], 0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0005813b: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0012e04a: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x000453fb: add al, 0x89; add al, 0x24; fld xword ptr [esp]; add esp, 0x14; ret; 
0x0008b107: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000327e8: add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0009f14c: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x00049f65: add al, 0x89; call 0x5d63fdc7; ret; 
0x0009b4bc: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x0008cd39: add al, 0x89; clc; pop edi; ret; 
0x00070a15: add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00070b0f: add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x000f012b: add al, 0x89; dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0xf4d0f6d], cl; call dword ptr [edx - 0x73]; 
0x000bf7e1: add al, 0x89; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x001316d2: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0005f1f8: add al, 0x89; fadd dword ptr [ebx - 0x1f3efe20]; add al, 0x89; ret 0xb60f; 
0x00126005: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0007b7ec: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000311cf: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000ea7e2: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000754d4: add al, 0x89; inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00107836: add al, 0x89; inc edi; adc al, 0x29; ret; 
0x00094297: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000944d6: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00094536: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x00095b06: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x00074f4a: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000f6ed8: add al, 0x89; inc esp; and al, 0x14; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b8: add al, 0x89; inc esp; and al, 0x14; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000bf382: add al, 0x89; inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000f7998: add al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x00109217: add al, 0x89; je 0x10923f; adc al, 0xf; xchg ebp, eax; ret 0xc985; 
0x00094ff4: add al, 0x89; js 0x5e685453; pop ebx; ret; 
0x00064dfa: add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000eb361: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x000eb379: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0009c0fa: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098cb4: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0006e592: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00095005: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0006d3fa: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0006de3f: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x000f012e: add al, 0x89; push eax; or byte ptr [ebp - 0xf4d0f6d], cl; call dword ptr [edx - 0x73]; 
0x0010a1e7: add al, 0x89; push ebp; mov ah, 0x6a; add eax, 0x57f6808d; cli; call dword ptr [eax - 0x75]; 
0x00107b79: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0007ae2d: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0007ad2f: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00131c2e: add al, 0x89; ret 0x18b; 
0x0001eb26: add al, 0x89; ret 0x2574; 
0x00082421: add al, 0x89; ret 0x4089; 
0x00139899: add al, 0x89; ret 0x448b; 
0x0005f200: add al, 0x89; ret 0xb60f; 
0x00042f64: add al, 0x89; ret 0xc889; 
0x0007d894: add al, 0x89; ret 0xd889; 
0x000fc204: add al, 0x89; ret 0xe083; 
0x000716c4: add al, 0x89; ret 0xe283; 
0x000fe27f: add al, 0x89; ret 0xe8c1; 
0x00082186: add al, 0x89; ret 0xec83; 
0x0002fb4f: add al, 0x89; ret 0xff25; 
0x000423b5: add al, 0x89; ret; 
0x0008ef8b: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0x8ee51; pop ebx; ret; 
0x000fc6a3: add al, 0x89; rol dword ptr [ebx + 0x4d89fee1], 1; aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x0005c13b: add al, 0x89; test dword ptr [eax - 0x14000006], ebp; or ecx, dword ptr [ebx - 0x53f7b]; jmp dword ptr [ebp - 0x75]; 
0x00064fb2: add al, 0x89; xchg ebp, eax; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x0005fd07: add al, 0x89; xchg ebp, eax; xor bh, 0xff; call dword ptr [esi + 0x6a]; 
0x000944d9: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00094379: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000319c9: add al, 0x8a; setne al; movzx eax, al; ret; 
0x00028c1d: add al, 0x8b; adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000291bd: add al, 0x8b; adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002918d: add al, 0x8b; adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0013ca47: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000737b3: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x0007b69e: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x0007b56e: add al, 0x8b; add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x00073783: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x0007b6de: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0x7b6f0; ret; 
0x0007b72e: add al, 0x8b; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x0006e12b: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000453f5: add al, 0x8b; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; fld xword ptr [esp]; add esp, 0x14; ret; 
0x00074883: add al, 0x8b; add cl, al; call 0x1e7cb90; ret; 
0x00074893: add al, 0x8b; add cl, al; call 0x1e7cba1; ret; 
0x0009b4a2: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000985f2: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0006de0b: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00029397: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0013ca33: add al, 0x8b; inc eax; dec eax; ret; 
0x0013ca63: add al, 0x8b; inc eax; dec esp; ret; 
0x0007ba72: add al, 0x8b; inc eax; or al, 0x83; ret; 
0x000f5af3: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x0013caf3: add al, 0x8b; inc eax; pop eax; ret; 
0x0013ca93: add al, 0x8b; inc eax; pop esp; ret; 
0x0013ca83: add al, 0x8b; inc eax; push eax; ret; 
0x0013cb03: add al, 0x8b; inc eax; push esp; ret; 
0x00107ef8: add al, 0x8b; inc eax; sbb al, 0x89; ret 0x532b; 
0x0013063f: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000fc73a: add al, 0x8b; inc ecx; add al, 0x89; ret 0xe083; 
0x00094539: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000943d9: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00095b59: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x00094519: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00126296: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x1262aa; push edi; call dword ptr [eax + 0x10]; 
0x001315c2: add al, 0x8b; inc esi; add al, 0x51; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131602: add al, 0x8b; inc esi; add al, 0x51; push edx; push esi; call dword ptr [eax + 8]; 
0x0010080e: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010060d: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000de1e3: add al, 0x8b; inc esp; and al, 0xc; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x0009c11e: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0002fb6e: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000ea976: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00098ccb: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0012efad: add al, 0x8b; ja 0x12efb5; push ecx; push edi; call dword ptr [esi + 8]; 
0x00164ed7: add al, 0x8b; je 0x164eff; or al, 0x29; ret 0x448b; 
0x00066453: add al, 0x8b; je 0x6647b; xor al, 0x56; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00164eb4: add al, 0x8b; jl 0x164e3a; add al, 0x83; ret 0xd304; 
0x0002eb8f: add al, 0x8b; jl 0x2ebb7; sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0007ba90: add al, 0x8b; jl 0x7bab8; adc byte ptr [ecx], al; pop eax; add al, 0x89; ret; 
0x0010eb6e: add al, 0x8b; jns 0x10eb7a; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00030bf2: add al, 0x8b; js 0x30bfe; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00030c72: add al, 0x8b; js 0x30c7e; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000fab1d: add al, 0x8b; mov byte ptr [ecx + eax - 0x2d7b0000], bl; je 0xfab2e; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x0015a087: add al, 0x8b; mov word ptr [ebx - 0x75b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x0012b30a: add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x000646c2: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x00064678: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x0006506e: add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x89f73]; call dword ptr [ecx + 0x6a]; 
0x0013939c: add al, 0x8b; push ebp; add byte ptr [ecx], al; ret 0xd139; 
0x0007c452: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000760ed: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x001431e9: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00124db0: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x000df1b6: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00132a53: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0013ca73: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x00132e9b: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000ea983: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00079a13: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca23: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027443: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0007b511: add al, 0x8b; sub byte ptr [edi - 0x18], dl; push ss; push 0x3c890006; and al, 0x89; ret; 
0x0007e0c1: add al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000e2834: add al, 0x8b; xchg edi, eax; and eax, dword ptr fs:[eax]; add byte ptr [ecx + 0x2364b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x00129c2b: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0002a8fa: add al, 0x8d; adc dword ptr [eax + 0x5c], -0x1c; call dword ptr [eax - 0x77]; 
0x000e2b50: add al, 0x8d; add dword ptr [eax - 0x22], -0x11; call dword ptr [eax + 0x6a]; 
0x000b4103: add al, 0x8d; and dword ptr [eax], 0; in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x000fd9aa: add al, 0x8d; cmp dword ptr [ecx + 0x4b], -6; call ptr [ebx + 0x5e]; ret; 
0x0012c3a5: add al, 0x8d; cmp dword ptr [ecx], 0x6afffa62; add eax, 0x28818d50; jo 0x12c3ae; call dword ptr [eax - 0x18]; 
0x00131735: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00131e79: add al, 0x8d; dec esp; and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x000e3cff: add al, 0x8d; inc ebx; sbb al, 0x83; mov byte ptr [ecx], 0x83; ret; 
0x00091109: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0008b0ac: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000958ba: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x00095b09: add al, 0x8d; inc edx; pop es; ret; 
0x00044512: add al, 0x8d; inc esi; add al, 0xf; xchg edx, eax; ret; 
0x0011b3df: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x00050a7a: add al, 0x8d; lahf; int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x0013220b: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0012b507: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131925: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318c2: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x001324ad: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00131bbd: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00131aad: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x001321f5: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x001318ad: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00131c5d: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00132140: add al, 0x8d; test dword ptr [eax + 0x6afffa61], esi; add eax, 0x28858d50; jo 0x132149; call dword ptr [eax - 0x18]; 
0x000c6cea: add al, 0x8d; test dword ptr [ebx + ebp*8 - 1], eax; call dword ptr [eax - 1]; 
0x00136985: add al, 0x8d; test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax - 1]; 
0x00027d6e: add al, 0x8d; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax - 1]; 
0x000c82f6: add al, 0x8d; test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax + 0x56]; 
0x0011564d: add al, 0x8d; test eax, esp; dec ecx; cli; call dword ptr [eax - 0x77]; 
0x000514a2: add al, 0x8d; test ebp, ebp; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x000517aa: add al, 0x8d; test ebp, ebx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x000515ac: add al, 0x8d; test edi, ecx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x000e27a4: add al, 0x8d; xchg byte ptr [eax], ah; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000b3f71: add al, 0x8d; xchg byte ptr [eax], cl; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0xd], dh; in al, dx; call dword ptr [eax - 0x73]; 
0x0001b78a: add al, 0x8d; xchg dword ptr [eax], esi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x000e2c0c: add al, 0x8d; xchg dword ptr [eax], esp; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x00082e47: add al, 0x8d; xchg dword ptr [ebx + 0x44], edx; cli; call dword ptr [ebp + 0x50]; 
0x000fa5a2: add al, 0x8d; xchg eax, esp; xchg esi, eax; cli; call dword ptr [esi - 0x7f]; 
0x00082cd8: add al, 0x8d; xchg ebx, eax; pop ecx; inc esp; cli; call dword ptr [ebp + 0x52]; 
0x00082d82: add al, 0x8d; xchg ebx, eax; push ebx; inc esp; cli; call dword ptr [ebp + 0x52]; 
0x000b4223: add al, 0x8d; xor dword ptr [eax], 1; in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x0013ca29: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x0013ca49: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002912c: add al, 0x90; ret; 
0x0005f38f: add al, 0x90; sub esp, 4; push esi; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x0004a82d: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000e9fb5: add al, 0x95; cli; call dword ptr [eax - 0x73]; 
0x000ed08b: add al, 0x96; cli; call dword ptr [eax - 0x18]; 
0x0009f411: add al, 0x98; pop ebx; pop esi; ret; 
0x000341d7: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00034183: add al, 0x99; xor eax, edx; sub eax, edx; ret; 
0x0013cf29: add al, 0x9a; pop ebx; setne al; movzx eax, al; ret; 
0x00031915: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x00120c18: add al, 0xa0; cli; call dword ptr [eax + 0x68]; 
0x00120a80: add al, 0xa0; cli; call dword ptr [eax - 0x73]; 
0x0011fbef: add al, 0xa1; cli; call dword ptr [edx - 0x73]; 
0x00123f32: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000f14ea: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00132a47: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000c747e: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xc7490; ret; 
0x000ec869: add al, 0xb8; arpl word ptr [eax], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ecac5: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ecac5: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f5498: add al, 0xb8; cmp al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c68c9: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffa48: add al, 0xb8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff4c5: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff4c5: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001001e9: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f56f7: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000fff95: add al, 0xb8; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c6689: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7eb5: add al, 0xb8; jae 0xf7eb9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100285: add al, 0xb8; je 0x100289; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100449: add al, 0xb8; jge 0x10044e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100475: add al, 0xb8; jle 0x10047a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffde5: add al, 0xb8; jno 0xffde9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6f8a: add al, 0xb8; jnp 0xf6f8f; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f4e28: add al, 0xb8; jns 0xf4e2d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7819: add al, 0xb8; jns 0xf781d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c57c5: add al, 0xb8; jp 0xc57c9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6caa: add al, 0xb8; jp 0xf6caf; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7b5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7b5: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ede75: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef285: add al, 0xb8; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef159: add al, 0xb8; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed9b9: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00081d14: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c59f5: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000edd75: add al, 0xb8; sub al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef2d5: add al, 0xb8; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000edcf5: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c68a5: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ede95: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffe79: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff439: add al, 0xb8; xor al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f795a: add al, 0xb8; xor al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f79f5: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001372eb: add al, 0xba; push es; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00045091: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00067c04: add al, 0xc1; std; add dl, byte ptr [ebp + 0x52]; push esi; call dword ptr [ebx + 0x1c]; 
0x00095ebe: add al, 0xc3; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008b047: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0002fa28: add al, 0xd9; inc esp; and al, 4; ret; 
0x0002fafe: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0002f507: add al, 0xd9; std; fstp st(1); ret; 
0x0002f798: add al, 0xdd; add al, 0x24; add esp, 0x14; pop ebx; pop esi; ret; 
0x000453c4: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00130fe8: add al, 0xe8; ret 0xee80; 
0x00132ebf: add al, 0xe8; sti; ret; 
0x00132f26: add al, 0xe8; xchg esp, eax; ret; 
0x00025c7e: add al, 0xe8; xor al, 0xff; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00120e07: add al, 0xe9; adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0001a6c1: add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000c7e5f: add al, 0xe9; pop ebx; sar bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x0009eb3a: add al, 0xe9; ret 0xfffe; 
0x000df3bf: add al, 0xe9; sti; dec edx; cli; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000eb71f: add al, 0xe9; wait; xchg ecx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0011baf1: add al, 0xeb; mov edx, 0xff3167e8; jmp dword ptr [esi - 0x70]; 
0x000cc902: add al, 0xeb; mov word ptr [ebp + 0x538b0076], cs; or al, 0x83; ret; 
0x00032824: add al, 0xeb; ret 0xb48d; 
0x0007f368: add al, 0xeb; ret; 
0x000fa00b: add al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000737a3: add al, 0xf6; add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x0007f002: add al, 0xf6; ret; 
0x000f8add: add al, 0xf7; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0009e0b2: add al, 0xf7; ret 0; 
0x000f5b27: add al, 0xf7; ret 0xeff0; 
0x000d604e: add al, 0xf7; ret 0xff00; 
0x000d7ac9: add al, 0xf7; ret; 
0x000bb27a: add al, 0xf; dec ebp; ret 0x4489; 
0x00085279: add al, 0xf; inc esp; ret 0xc083; 
0x0001ef71: add al, 0xf; inc esp; ret; 
0x000ea933: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007864c: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x00078485: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00078e91: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00127319: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x000748f1: add al, 0xf; mov dh, 2; ret; 
0x0003ca0c: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0015ce67: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00036e86: add al, 0xf; scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx + 0xf302444]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x0002eb99: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x0001e5ea: add al, 0xf; test al, ch; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cefdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00161f14: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001627bb: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000b2445: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0008e7eb: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0009616c: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00044515: add al, 0xf; xchg edx, eax; ret; 
0x0010b65e: add al, 0xf; xchg esp, eax; ret; 
0x0007b35d: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0013d253: add al, 0xfb; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x0015d2dd: add al, 0xfc; std; inc dword ptr [ecx + 0x3359fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013b0e1: add al, 0xff; aaa; push dword ptr [ebx + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0014ca48: add al, 0xff; inc dword ptr [ecx + 0x43235c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010827a: add al, 0xff; je 0x1082a2; and byte ptr [edx], ch; push 0x2000004; call eax; 
0x0012664d: add al, 0xff; je 0x126675; sbb al, 0x53; call dword ptr [eax]; 
0x0012669d: add al, 0xff; je 0x1266c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x000327a2: add al, 0xff; je 0x327ca; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000328e4: add al, 0xff; je 0x3290c; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00032955: add al, 0xff; je 0x3297d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00069b2d: add al, 0xff; je 0x69b55; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007503d: add al, 0xff; je 0x75065; or al, 0x57; push ebx; call dword ptr [ecx + 0x3c]; 
0x00080c4a: add al, 0xff; je 0x80c72; inc eax; push dword ptr [esp + 0x14]; push ebp; call eax; 
0x00081ffe: add al, 0xff; je 0x82026; cmp al, 0x51; push ebx; call eax; 
0x000823a4: add al, 0xff; je 0x823cc; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00069df7: add al, 0xff; jne 0x69ddf; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006be25: add al, 0xff; jne 0x6be3d; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0006cd8e: add al, 0xff; jne 0x6cd72; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00064223: add al, 0xff; mov ch, 0x18; idiv edi; call dword ptr [edi - 1]; 
0x0013a3b1: add al, 0xff; push dword ptr ss:[ecx]; mov dword ptr [esp + 0x24], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a2a1: add al, 0xff; push dword ptr ss:[ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a304: add al, 0xff; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000b32df: add al, 0xff; xor al, ch; or dword ptr [ecx], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b33cc: add al, 0xff; xor al, ch; sbb al, 0x20; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fcfd8: add al, 0xff; xor byte ptr [ebp - 0x5a4127d], cl; call dword ptr [eax + 0x6a]; 
0x000fd1a8: add al, 0xff; xor byte ptr [ebp - 0x5a9607d], cl; call dword ptr [eax + 0x6a]; 
0x000c41dc: add al, 0xff; xor byte ptr [ebp - 0x5b8977a], cl; call dword ptr [eax + 0x53]; 
0x0013e289: add al, 0xff; xor byte ptr [esi - 0x18], dl; jle 0x13e267; bnd jmp dword ptr [ecx]; 
0x0013e289: add al, 0xff; xor byte ptr [esi - 0x18], dl; jle 0x13e267; bnd jmp dword ptr [ecx]; ret 0xc483; 
0x000510c3: add al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e79d3: add al, 1; add byte ptr [eax], al; add cl, ch; ret; 
0x000bc910: add al, 1; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x94]; add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x000b2478: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0009e6b9: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00051059: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00126fcb: add al, 1; int 0x29; retf 0x5552; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000c0606: add al, 1; pop ebx; pop esi; pop edi; ret; 
0x001268d0: add al, 1; ret 0x5e5b; 
0x000641ed: add al, 1; ret 0x858b; 
0x001269b7: add al, 1; ret 0xc129; 
0x00163ca5: add al, 1; shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000510e2: add al, 1; xor eax, eax; pop ebx; pop esi; ret; 
0x0004436d: add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x00135467: add al, 3; test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ecx]; ret 0x789; 
0x0014fc62: add al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000846e2: add al, 6; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00073787: add al, 8; add byte ptr [eax], al; ret; 
0x0001d677: add al, 8; add byte ptr [ebx + 0x45890cc4], al; fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x00153357: add al, 8; pop edi; call 0x13cee5; add ebx, 0x3d0e1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e007: add al, 8; pop edi; call 0x13cee5; add ebx, 0x41c71; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149f07: add al, 8; pop edi; call 0x13cee5; add ebx, 0x45871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00144f86: add al, 9; ret 0x850f; 
0x00164491: add al, 9; ret; 
0x0005ed04: add al, 9; ror byte ptr [eax - 0x7a72f2b9], 1; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x000ddf3e: add al, al; call 0xfe06447; xchg esp, eax; ret 0xd020; 
0x0010ecf6: add al, al; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0010ed95: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000d1c3a: add al, bh; jmp dword ptr [esi + 0xb]; 
0x00094f6a: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x00120a8d: add al, byte ptr [bx + si]; add byte ptr [eax - 0x73], dl; adc byte ptr [eax], 0xa0; cli; call dword ptr [eax - 0x18]; 
0x0006812a: add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xb0e9; 
0x0010c5e3: add al, byte ptr [eax]; add byte ptr [eax + 0x2c16838d], al; cli; call dword ptr [eax - 0x18]; 
0x00019109: add al, byte ptr [eax]; add byte ptr [eax + 0x2c16868d], al; cli; call dword ptr [eax - 0x18]; 
0x00160bdf: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00160bce: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00160b77: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00092fa8: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00160b88: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00160b99: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00120a8e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc byte ptr [eax], 0xa0; cli; call dword ptr [eax - 0x18]; 
0x0016ba98: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add ebx, 0x2f; cli; call dword ptr [eax - 0x18]; 
0x0001e237: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [edx], 0x2e; cli; call dword ptr [eax - 0x18]; 
0x0001e1a3: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp esp, 0x6c; cli; call dword ptr [eax - 0x18]; 
0x00120bcb: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb byte ptr [eax - 0x60], 0xfa; call dword ptr [eax - 0x18]; 
0x000b6b89: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x70], -6; call dword ptr [eax - 0x18]; 
0x000ac894: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x71; cli; call dword ptr [eax - 0x18]; 
0x000ac8d2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [esp + ecx*4], -6; call dword ptr [eax - 0x18]; 
0x000ac875: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x75; cli; call dword ptr [eax - 0x18]; 
0x0001f432: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ah, bh; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000efd06: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ah, cl; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x0001f4d4: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bh; cli; call dword ptr [eax - 0x18]; 
0x0001f586: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x2e], ch; cli; call dword ptr [eax - 0x18]; 
0x0003a89a: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi - 6], edx; call dword ptr [eax - 0x18]; 
0x0001e8bd: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], edi; cli; call dword ptr [eax - 0x18]; 
0x0001e809: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esp, edi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000343b8: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0012d1c2: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012c7d2: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00129c55: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012a832: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012f1c7: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000bee61: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004385b: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000739fb: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00101cca: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010166b: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00125dc3: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000b27c1: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000c01f1: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000fdda1: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x00030e3e: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eabaa: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007acd3: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0010af77: add al, byte ptr [eax]; add byte ptr [ebp + 0x24], dh; pop ebx; pop esi; pop edi; ret; 
0x000b907c: add al, byte ptr [eax]; add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x000282ef: add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0007c01f: add al, byte ptr [eax]; add byte ptr [ebp - 0x5768770], cl; call dword ptr [edx - 0x73]; 
0x00120c20: add al, byte ptr [eax]; add byte ptr [ebp - 0x5a0497e], cl; call dword ptr [eax - 0x73]; 
0x0001ee79: add al, byte ptr [eax]; add byte ptr [ebp - 0x5d1ed79], cl; call dword ptr [eax - 0x73]; 
0x0001e26f: add al, byte ptr [eax]; add byte ptr [ebp - 0x5d1ed7d], cl; call dword ptr [eax - 0x73]; 
0x0002d499: add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00088306: add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00044d81: add al, byte ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x000751c8: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x34; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x000abc82: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x0005fc58: add al, byte ptr [eax]; add byte ptr [ebx + 0x525304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00067368: add al, byte ptr [eax]; add byte ptr [ebx + 0x525604ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x000320e0: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e08ae: add al, byte ptr [eax]; add byte ptr [ebx + 0x5f8868c], cl; cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x00076b3d: add al, byte ptr [eax]; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x39]; 
0x000f2704: add al, byte ptr [eax]; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x75]; 
0x000f1d0d: add al, byte ptr [eax]; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00117309: add al, byte ptr [eax]; add byte ptr [ebx - 0x17a9f314], al; jnp 0x117334; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000b56ef: add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; inc ebp; ret 0xfffb; 
0x000e43ef: add al, byte ptr [eax]; add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ca84e: add al, byte ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x000af5dd: add al, byte ptr [eax]; add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00046a3d: add al, byte ptr [eax]; add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x00046d4c: add al, byte ptr [eax]; add byte ptr [ebx - 0x36437b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000ce726: add al, byte ptr [eax]; add byte ptr [ebx - 0x43742bb3], cl; xor dword ptr [esp + edi*8], 0xcf01fff9; jmp edi; 
0x000ccd5e: add al, byte ptr [eax]; add byte ptr [ebx - 0x437433b3], cl; add esp, 0x1fff9fa; iretd; jmp edi; 
0x000e5436: add al, byte ptr [eax]; add byte ptr [ebx - 0x5177b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00057455: add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000242d2: add al, byte ptr [eax]; add byte ptr [ebx - 0x72b7db84], cl; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x0007d347: add al, byte ptr [eax]; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ebx; mov edx, edi; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d323: add al, byte ptr [eax]; add byte ptr [ebx - 0x72efdb8c], cl; xchg al, bl; mov edx, edi; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x000e8d08: add al, byte ptr [eax]; add byte ptr [ebx - 0x72f3db84], cl; xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x00166e9f: add al, byte ptr [eax]; add byte ptr [ebx - 0x748fdb8c], cl; jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x000b56d2: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x57]; 
0x000414aa: add al, byte ptr [eax]; add byte ptr [ebx - 0xab43], cl; inc dword ptr [ebx - 0x3f7cfb14]; add dword ptr [ecx - 0x9373], ecx; call dword ptr [eax - 0x73]; 
0x00139975: add al, byte ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000eab30: add al, byte ptr [eax]; add byte ptr [ecx + 0xc42484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010c23b: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x0009c993: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x00118a31: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00123a46: add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0x5489; 
0x0008eb57: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001148b0: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0002df7e: add al, byte ptr [eax]; add byte ptr [edi], cl; mov dh, 0xc9; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x00075b7f: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x0013e91d: add al, byte ptr [eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00030e9b: add al, byte ptr [eax]; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010f003: add al, byte ptr [eax]; add eax, 0xd4ffb; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x0010c69e: add al, byte ptr [eax]; add esp, 0x10; mov dword ptr [ebx + 0x2940], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00050165: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0005011c: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x0011b3a6: add al, byte ptr [eax]; jne 0x11b3b8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x001174b7: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x001171ab: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00116876: add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0008afe9: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0011b1ff: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008b007: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0012aafb: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00146f28: add al, byte ptr [ebx + 0x27402ea]; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x0012e8c1: add al, byte ptr [ebx + 0x4c8b01e8]; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0011ae82: add al, byte ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x00102662: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0006cf7a: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007b366: add al, byte ptr [ebx + 0x66c30cc4]; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x000b01cd: add al, byte ptr [ebx + 0x6a5004ec]; add byte ptr [ebx - 0x364763], cl; call dword ptr [edi - 0x18]; 
0x000481f7: add al, byte ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00102959: add al, byte ptr [ebx - 0x3d7cef40]; add al, 0x39; sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0xe18df80]; call dword ptr [eax + 0x6a]; 
0x0009d5da: add al, byte ptr [ebx - 0x540cfc1e]; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000587d6: add al, byte ptr [ebx - 0x77cfb3e]; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001197e3: add al, byte ptr [ebx - 0x79f0f008]; ret; 
0x00123915: add al, byte ptr [ebx - 0x7c72f73c]; and byte ptr [edx], dh; add byte ptr [eax], al; pop ebx; ret; 
0x000b6c41: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x0002d471: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x00086473: add al, byte ptr [ecx]; jne 0x86460; pop ebx; pop esi; pop edi; ret; 
0x000250df: add al, byte ptr [ecx]; ret 0x973b; 
0x0004bc90: add al, byte ptr [ecx]; ret; 
0x000b2754: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xb2780; ret; 
0x00160bde: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00050184: add al, byte ptr es:[eax]; add esp, 0x1c; ret; 
0x0007d3b7: add al, byte ptr gs:[eax]; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ebx; mov edx, edi; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0009f807: add al, ch; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000311d7: add al, ch; adc ebx, dword ptr [ebx + 0x8b90004]; add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00095fcf: add al, ch; and al, 0x6f; or al, byte ptr [eax]; add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00057bba: add al, ch; and byte ptr [ebp - 0x60160001], bl; fcos; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x000785ff: add al, ch; call 0x8107924e; ret 0xb9fb; 
0x00146ef7: add al, ch; call 0x82146e5d; ret; 
0x0014a83f: add al, ch; mov al, byte ptr [0x81ffff26]; ret; 
0x0014883f: add al, ch; mov al, byte ptr [0x81ffff46]; ret; 
0x0010732f: add al, ch; mov eax, 0x8100035b; ret 0xcccb; 
0x000c7a2f: add al, ch; mov eax, 0x81000754; ret 0xc5cb; 
0x0005182f: add al, ch; mov eax, 0x81000eb6; ret 0x27cb; 
0x000f582f: add al, ch; mov ebx, 0x83fff257; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000ffb2f: add al, ch; mov ebx, 0x89fff1b4; ret; 
0x000f6a2f: add al, ch; mov ebx, 0x89fff245; ret; 
0x000f602f: add al, ch; mov ebx, 0x89fff24f; ret; 
0x000ed12f: add al, ch; mov ebx, 0x89fff2de; ret; 
0x0014562f: add al, ch; mov ebx, 0xebffed59; shr al, 1; and al, 0x96; cld; jmp dword ptr [esi - 0x70]; 
0x0007e03b: add al, ch; mov edi, 0x89ffffdb; ret; 
0x000c5adf: add al, ch; or edx, dword ptr [edx - 5]; dec dword ptr [ecx + 0x1db8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013be7f: add al, ch; push 0x81000010; ret 0x817b; 
0x0008ae7f: add al, ch; push 0x81000b20; ret 0x917b; 
0x0001b87f: add al, ch; push 0x81001216; ret 0x877b; 
0x001149fc: add al, ch; push ds; sbb al, 0xfb; jmp dword ptr [esi - 0x3f]; 
0x00082b55: add al, ch; push ebp; aad 0xfc; jmp dword ptr [ebp - 0x5f]; 
0x00109ba8: add al, ch; push edx; sahf; bnd jmp dword ptr [esi - 0x70]; 
0x000828e8: add al, ch; ret 0xfcd7; 
0x000ed027: add al, ch; ret; 
0x0001d290: add al, ch; retf 0xf19; add byte ptr [ebp - 0x593837d], cl; call dword ptr [eax - 0x73]; 
0x000829df: add al, ch; retf; salc; cld; jmp dword ptr [ebp - 0x5f]; 
0x00028ec2: add al, ch; sbb byte ptr [ebx - 0x3b7cfffb], dh; or al, 0x89; ret; 
0x000f58ef: add al, ch; sti; push esi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0009bf6f: add al, ch; test byte ptr [edi], cl; or al, byte ptr [eax]; add ecx, 0xe641f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009498f: add al, ch; test dword ptr fs:[edx], ecx; add byte ptr [ecx + 0xed6cbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00024d4f: add al, ch; xchg esp, eax; adc dword ptr [ecx], 0xf2ab0500; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x0008b0cd: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00102b82: add bh, ah; int1; dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x00125957: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00079e5d: add bh, al; and byte ptr [ecx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0010c232: add bh, al; inc ebp; mov esp, 0; push 0x1000002; call edx; 
0x0007c423: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b974d2], al; ret 0xb574; 
0x00079b2a: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00078074: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00060941: add bh, al; inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000608f1: add bh, al; inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065bb9: add bh, al; inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00065b71: add bh, al; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000671cf: add bh, al; inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00065d09: add bh, al; inc esp; and al, 0x40; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000672df: add bh, al; inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000672cf: add bh, al; inc esp; and al, 0x58; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00066609: add bh, al; inc esp; and al, 0x60; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000615f9: add bh, al; inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006726f: add bh, al; inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006727f: add bh, al; inc esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000e4d51: add bh, al; test dword ptr [eax + 0xafffffe], esi; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x00063ba6: add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0009d852: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x0009d6ae: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x0014ced5: add bh, bh; inc dword ptr [ecx + 0x42da8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ce0e: add bh, bh; inc dword ptr [ecx + 0x42e6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ccae: add bh, bh; inc dword ptr [ecx + 0x42fcfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014cc15: add bh, bh; inc dword ptr [ecx + 0x43068c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00115ce6: add bh, bh; je 0x115d0e; xor al, ch; jo 0x115cef; bnd jmp dword ptr [esi - 0x77]; 
0x00129f32: add bh, bh; je 0x129f5a; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0012fcc5: add bh, bh; je 0x12fced; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0013a149: add bh, bh; je 0x13a171; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0013cfa4: add bh, bh; je 0x13cfcc; sbb al, 0xe8; ret 0xef6d; 
0x000432e0: add bh, bh; je 0x43308; inc esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0006ffa1: add bh, bh; je 0x6ffc9; adc bh, bh; je 0x6ffcd; adc byte ptr [ebx + 0x571c247c], cl; call dword ptr [ebx + 0x40]; 
0x000c5834: add bh, bh; je 0xc585c; sbb byte ptr [edx - 1], ch; call 0xc5850; add esp, 0x1c; ret; 
0x000efcb6: add bh, bh; je 0xefcde; xor bh, bh; jne 0xefcca; call dword ptr [ebp + 0x24]; 
0x000f0d36: add bh, bh; je 0xf0d5e; xor bh, bh; jne 0xf0d4a; call dword ptr [ebp + 0x24]; 
0x0011e99b: add bh, bh; jmp dword ptr [esi - 0x70]; 
0x000ea95c: add bh, bh; jne 0xea969; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000838c7: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x5750b80], cl; call dword ptr [eax + 0x68]; 
0x0003280b: add bh, bh; mov eax, dword ptr ss:[esp + 0x20]; call eax; 
0x00088aaf: add bh, bh; push dword ptr [esp - 9]; ret 0; 
0x000c71d2: add bh, bh; ret; 
0x0002a8f2: add bh, bh; rol byte ptr [ebx - 0x137cef3c], 1; add al, 0x8d; adc dword ptr [eax + 0x5c], -0x1c; call dword ptr [eax - 0x77]; 
0x0001afc8: add bh, bh; xor byte ptr [ebx - 0x72e7db8c], cl; xchg dh, ah; sub edi, edx; call dword ptr [eax - 0x75]; 
0x0006920d: add bh, bl; call dword ptr [ebp + 0x57]; 
0x00076bb1: add bh, bl; stc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000500a0: add bh, byte ptr [eax + 1]; ret; 
0x0001b005: add bh, byte ptr [eax - 1]; ret; 
0x0011a6e5: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0004c507: add bh, byte ptr [ecx]; ret 0x8c0f; 
0x000f6733: add bh, byte ptr [ecx]; ret; 
0x0001affa: add bh, dh; fmul dword ptr [ebx - 0x1076e]; jmp dword ptr [ebp - 0x77]; 
0x0010dbc9: add bh, dh; inc dword ptr [ebx - 0x3f7aef3c]; je 0x10dbe0; add esp, 8; pop ebx; ret; 
0x00166648: add bh, dh; ret 0; 
0x0009d1c5: add bh, dh; ret 0x3f; 
0x00146248: add bh, dh; ret 0xf; 
0x0009dce1: add bh, dh; ret 3; 
0x000debf3: add bh, dl; call dword ptr [eax - 0x73]; 
0x00025587: add bl, 0x2e; cli; call dword ptr [eax - 0x18]; 
0x000c662b: add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000c663b: add bl, al; nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000c665b: add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000c664b: add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000c666b: add bl, al; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0008af28: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0006e596: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00079ea0: add bl, byte ptr [ebx + 0x5e]; ret; 
0x00121e6a: add bl, byte ptr [ebx + 0x5e]; sub eax, 1; pop edi; pop ebp; ret; 
0x0010c8da: add bl, byte ptr [ecx + edi*8]; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0010c9cb: add bl, byte ptr [ecx - 6]; call dword ptr [ecx + 0x52]; 
0x0006d02a: add bl, byte ptr [edi + 0x5d]; ret; 
0x00094fdb: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0014eeb0: add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0006e716: add bl, byte ptr [esi + 0x5f]; ret; 
0x00163a77: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x0007acdf: add bl, ch; fisttp dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5e], bl; ret; 
0x00024640: add bl, ch; fisttp dword ptr [ebx - 0x72b7db84]; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x000c2249: add bl, ch; in eax, dx; call dword ptr [eax - 0x18]; 
0x00136596: add bl, ch; int 0xe8; ret 0xfd86; 
0x001275fc: add bl, ch; loope 0x1275e8; pop esp; jbe 0x127601; jmp dword ptr [esi - 0x70]; 
0x000725ae: add bl, ch; mov cl, 0x89; inc ebp; in al, 0xe9; jnp 0x725b2; jmp dword ptr [esi - 0x70]; 
0x0006d3ce: add bl, ch; mov ecx, dword ptr [ecx - 0x36c91639]; cli; jmp dword ptr [esi - 0x70]; 
0x0002279a: add bl, ch; mov word ptr [ebx - 0x72b7db84], cs; xchg dword ptr [eax], ecx; outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00069fee: add bl, ch; or dword ptr [ecx + 0x11e9e445], 0xfffffff6; cli; jmp dword ptr [esi - 0x70]; 
0x000b3e7c: add bl, ch; ret 0x8190; 
0x00068179: add bl, ch; ret; 
0x00073cef: add bl, ch; ror dword ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0007c7fb: add bl, ch; wait; nop; call eax; 
0x0011a53a: add bl, ch; xchg dword ptr [ebp - 0x5635f7a], ecx; call dword ptr [eax - 0x73]; 
0x00083329: add bl, ch; xchg edx, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0002fa73: add bl, cl; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0009135f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0008cf7f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0009c49f: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fdc: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c43f: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f7c: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c45f: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f9c: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c47f: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fbc: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009542f: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x0009543f: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x000ed5ea: add bl, dl; bnd jmp dword ptr [esi - 0x70]; 
0x0007b704: add byte ptr [0x1688fb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b674: add byte ptr [0x16898b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b654: add byte ptr [0x1689ab], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b624: add byte ptr [0x1689db], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b604: add byte ptr [0x1689fb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x0007b5d4: add byte ptr [0x168a2b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5a4: add byte ptr [0x168a5b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x00079d04: add byte ptr [0x16a2fb], al; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00031c34: add byte ptr [0x1b23cb], al; mov eax, dword ptr [eax + 0x48]; ret; 
0x00031c14: add byte ptr [0x1b23eb], al; mov eax, dword ptr [eax + 0x4c]; ret; 
0x000319f4: add byte ptr [0x1b260b], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00029414: add byte ptr [0x1babeb], al; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293f4: add byte ptr [0x1bac0b], al; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x000293d4: add byte ptr [0x1bac2b], al; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x00028c14: add byte ptr [0x1bb3eb], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000281b4: add byte ptr [0x1bbe4b], al; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00024d54: add byte ptr [0x1bf2ab], al; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x0001beb4: add byte ptr [0x1c814b], al; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001be94: add byte ptr [0x1c816b], al; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001b5b4: add byte ptr [0x1c8a4b], al; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0001b064: add byte ptr [0x1c8f9b], al; lea eax, [eax - 0x5943c]; ret; 
0x0001b044: add byte ptr [0x1c8fbb], al; lea eax, [eax - 0x59434]; ret; 
0x001613ff: add byte ptr [0x1ff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000737b5: add byte ptr [0x200], ah; ret; 
0x0007b6a0: add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x00026fb0: add byte ptr [0x748dd375], al; add dh, dh; ret 0x7503; 
0x0002f38d: add byte ptr [0x7fff], ah; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0007b570: add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x00073785: add byte ptr [0x804], ah; ret; 
0x00129c58: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00137384: add byte ptr [0xacc7b], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0012f084: add byte ptr [0xb4f7b], al; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x0011f494: add byte ptr [0xc4b6b], al; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x0010f004: add byte ptr [0xd4ffb], al; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x00102cf4: add byte ptr [0xe130b], al; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000f7e44: add byte ptr [0xec1bb], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000f67f4: add byte ptr [0xed80b], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000ecb44: add byte ptr [0xf74bb], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0016131a: add byte ptr [0xff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161351: add byte ptr [0xfff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016138a: add byte ptr [0xffff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0007b6e0: add byte ptr [0xffff], bh; jbe 0x7b6f0; ret; 
0x000ff109: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x0010159f: add byte ptr [0xfffff000], bh; ja 0x1015b0; pop ebx; pop esi; pop edi; ret; 
0x00101681: add byte ptr [0xfffff000], bh; ja 0x101690; pop ebx; pop esi; pop edi; ret; 
0x0010184d: add byte ptr [0xfffff000], bh; ja 0x101860; pop ebx; pop esi; pop edi; ret; 
0x00101891: add byte ptr [0xfffff000], bh; ja 0x1018a0; pop ebx; pop esi; pop edi; ret; 
0x0010da01: add byte ptr [0xfffff000], bh; ja 0x10da10; add esp, 8; pop ebx; ret; 
0x00143259: add byte ptr [0xfffff000], bh; ja 0x143268; pop ebx; ret; 
0x00145591: add byte ptr [0xfffff000], bh; ja 0x1455a0; pop ebx; pop esi; pop edi; ret; 
0x00145661: add byte ptr [0xfffff000], bh; ja 0x145670; pop ebx; pop esi; pop edi; ret; 
0x00031185: add byte ptr [0xfffff000], bh; ja 0x31190; pop ebx; ret; 
0x00050f44: add byte ptr [0xfffff000], bh; ja 0x50f50; pop ebx; ret; 
0x00050f7d: add byte ptr [0xfffff000], bh; ja 0x50f90; pop ebx; pop esi; ret; 
0x000b4030: add byte ptr [0xfffff000], bh; ja 0xb4040; pop ebx; ret; 
0x000b4148: add byte ptr [0xfffff000], bh; ja 0xb4160; pop ebx; ret; 
0x000b4302: add byte ptr [0xfffff000], bh; ja 0xb4310; pop ebx; ret; 
0x000c0942: add byte ptr [0xfffff000], bh; ja 0xc0950; pop ebx; ret; 
0x000e1e08: add byte ptr [0xfffff000], bh; ja 0xe1e18; pop ebx; ret; 
0x000ec096: add byte ptr [0xfffff000], bh; ja 0xec0a0; pop ebx; ret; 
0x000ec3b4: add byte ptr [0xfffff000], bh; ja 0xec3c0; pop ebx; ret; 
0x000ec3e4: add byte ptr [0xfffff000], bh; ja 0xec3f0; pop ebx; ret; 
0x000ec414: add byte ptr [0xfffff000], bh; ja 0xec420; pop ebx; ret; 
0x000ec708: add byte ptr [0xfffff000], bh; ja 0xec728; pop ebx; ret; 
0x000ec75d: add byte ptr [0xfffff000], bh; ja 0xec780; pop ebx; pop esi; ret; 
0x000ec8d9: add byte ptr [0xfffff000], bh; ja 0xec8e8; pop ebx; ret; 
0x000ec909: add byte ptr [0xfffff000], bh; ja 0xec918; pop ebx; ret; 
0x000ecb88: add byte ptr [0xfffff000], bh; ja 0xecbb8; pop ebx; ret; 
0x000ed314: add byte ptr [0xfffff000], bh; ja 0xed320; pop ebx; ret; 
0x000f5680: add byte ptr [0xfffff000], bh; ja 0xf5690; pop ebx; ret; 
0x000f5812: add byte ptr [0xfffff000], bh; ja 0xf5830; add esp, 4; pop ebx; pop esi; ret; 
0x000f5875: add byte ptr [0xfffff000], bh; ja 0xf5890; add esp, 4; pop ebx; pop esi; ret; 
0x000f58d1: add byte ptr [0xfffff000], bh; ja 0xf58f0; add esp, 4; pop ebx; pop esi; ret; 
0x000f5934: add byte ptr [0xfffff000], bh; ja 0xf5950; add esp, 4; pop ebx; pop esi; ret; 
0x000f5978: add byte ptr [0xfffff000], bh; ja 0xf5988; pop ebx; ret; 
0x000f59b2: add byte ptr [0xfffff000], bh; ja 0xf59c0; pop ebx; pop esi; pop edi; ret; 
0x000f59e8: add byte ptr [0xfffff000], bh; ja 0xf59f8; pop ebx; ret; 
0x000f6204: add byte ptr [0xfffff000], bh; ja 0xf6210; pop ebx; ret; 
0x000f6234: add byte ptr [0xfffff000], bh; ja 0xf6240; pop ebx; ret; 
0x000f6309: add byte ptr [0xfffff000], bh; ja 0xf6318; pop ebx; pop esi; ret; 
0x000f6339: add byte ptr [0xfffff000], bh; ja 0xf6348; pop ebx; pop esi; ret; 
0x000f7b8a: add byte ptr [0xfffff000], bh; ja 0xf7b98; pop ebx; ret; 
0x000f9104: add byte ptr [0xfffff000], bh; ja 0xf9110; pop ebx; ret; 
0x000f92dc: add byte ptr [0xfffff000], bh; ja 0xf9300; pop ebx; ret; 
0x000f9324: add byte ptr [0xfffff000], bh; ja 0xf9330; pop ebx; ret; 
0x000f9354: add byte ptr [0xfffff000], bh; ja 0xf9360; pop ebx; ret; 
0x000f9388: add byte ptr [0xfffff000], bh; ja 0xf9398; pop ebx; ret; 
0x000f93b8: add byte ptr [0xfffff000], bh; ja 0xf93c8; pop ebx; ret; 
0x000fd22c: add byte ptr [0xfffff000], bh; ja 0xfd250; pop ebx; ret; 
0x000ff47d: add byte ptr [0xfffff000], bh; ja 0xff490; pop ebx; pop esi; ret; 
0x000ff5be: add byte ptr [0xfffff000], bh; ja 0xff5d0; pop ebx; pop esi; ret; 
0x000ffbf2: add byte ptr [0xfffff000], bh; ja 0xffc10; pop ebx; pop esi; ret; 
0x000ffcf2: add byte ptr [0xfffff000], bh; ja 0xffd00; pop ebx; pop esi; pop edi; ret; 
0x000c694b: add byte ptr [0xfffff001], bh; jae 0x1aff0; ret; 
0x0010ed07: add byte ptr [0xffffff], ah; ret; 
0x000510de: add byte ptr [eax + 0x1044283], dl; xor eax, eax; pop ebx; pop esi; ret; 
0x0007b46e: add byte ptr [eax + 0x1084883], dl; xor eax, eax; ret; 
0x000bf0cc: add byte ptr [eax + 0x109], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00031c2e: add byte ptr [eax + 0x10b2b4e8], dl; add byte ptr [0x1b23cb], al; mov eax, dword ptr [eax + 0x48]; ret; 
0x000510ce: add byte ptr [eax + 0x10b8], dl; add byte ptr [ebx + 0x5e], bl; ret; 
0x000bf483: add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x00030e22: add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0009102e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0008cc6e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008ed9e: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edae: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edbe: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0002940e: add byte ptr [eax + 0x113ad4e8], dl; add byte ptr [0x1babeb], al; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293ee: add byte ptr [eax + 0x113af4e8], dl; add byte ptr [0x1bac0b], al; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x0001beae: add byte ptr [eax + 0x121034e8], dl; add byte ptr [0x1c814b], al; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001b05e: add byte ptr [eax + 0x121e84e8], dl; add byte ptr [0x1c8f9b], al; lea eax, [eax - 0x5943c]; ret; 
0x0001b03e: add byte ptr [eax + 0x121ea4e8], dl; add byte ptr [0x1c8fbb], al; lea eax, [eax - 0x59434]; ret; 
0x000ec7c1: add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x000ed58f: add byte ptr [eax + 0x133], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ff509: add byte ptr [eax + 0x13f], bh; call dword ptr gs:[0x10]; 
0x00030dff: add byte ptr [eax + 0x14], bh; call dword ptr gs:[0x10]; 
0x00081cb7: add byte ptr [eax + 0x16], bh; add esp, 0xc; ret; 
0x000910ae: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0008ccee: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00163c6e: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000985af: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000985ef: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000bf117: add byte ptr [eax + 0x193], bh; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bf42e: add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0015624e: add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x000f996f: add byte ptr [eax + 0x1ba0000], al; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0002faad: add byte ptr [eax + 0x1cd90289], al; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x000615ab: add byte ptr [eax + 0x1fff9d2], 0xe9; jmp ecx; 
0x00061643: add byte ptr [eax + 0x1fff9d3], 0xe9; jmp ecx; 
0x00060b31: add byte ptr [eax + 0x1fff9d4], 0xe9; jmp ecx; 
0x000c70ad: add byte ptr [eax + 0x20], bh; mov edx, 0x40; cmove eax, edx; ret; 
0x001561be: add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00090ffe: add byte ptr [eax + 0x289018b], dl; lea eax, [edx + 3]; pop edi; ret; 
0x0008cc3e: add byte ptr [eax + 0x289018b], dl; mov eax, edi; pop edi; ret; 
0x0010c5e5: add byte ptr [eax + 0x2c16838d], al; cli; call dword ptr [eax - 0x18]; 
0x0001910b: add byte ptr [eax + 0x2c16868d], al; cli; call dword ptr [eax - 0x18]; 
0x001561ce: add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0005180e: add byte ptr [eax + 0x34b2858d], dl; cli; call dword ptr [esi - 0x77]; 
0x000f5d11: add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x0013992e: add byte ptr [eax + 0x3750808b], dl; add byte ptr [eax], al; jmp dword ptr [eax + 8]; 
0x000ab606: add byte ptr [eax + 0x3901c083], dl; ret; 
0x0013f84e: add byte ptr [eax + 0x3904c083], dl; ret 0x4976; 
0x00042d0e: add byte ptr [eax + 0x39ff428d], dl; ret; 
0x000c93a7: add byte ptr [eax + 0x3e], 0xee; call dword ptr [eax + 0x6a]; 
0x000c7057: add byte ptr [eax + 0x40], bh; ret; 
0x000291de: add byte ptr [eax + 0x424448b], dl; and eax, 0x7f; ret; 
0x00132a6e: add byte ptr [eax + 0x424448b], dl; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013cafe: add byte ptr [eax + 0x424448b], dl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013ca8e: add byte ptr [eax + 0x424448b], dl; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0013ca6e: add byte ptr [eax + 0x424448b], dl; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00079d3e: add byte ptr [eax + 0x424448b], dl; ret; 
0x001326ae: add byte ptr [eax + 0x424548b], dl; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0009c27d: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098df7: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x0009c08e: add byte ptr [eax + 0x448b3888], dl; and al, 0xc; pop ebx; pop esi; ret; 
0x001561de: add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0009e7ef: add byte ptr [eax + 0x450ff0e5], al; ret; 
0x0009e79f: add byte ptr [eax + 0x450ff0e6], al; ret; 
0x0015dbde: add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x0015db3e: add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x0012c4de: add byte ptr [eax + 0x4b22838d], dl; cli; call dword ptr [esi + 0x57]; 
0x0006725e: add byte ptr [eax + 0x502444c7], dl; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0005e3ee: add byte ptr [eax + 0x508d018b], dl; add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x0006ca7e: add byte ptr [eax + 0x5118ec83], dl; call 0x6e4e0; add esp, 0x1c; ret; 
0x0008ed0e: add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x0012ba99: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0012ba99: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0005de3e: add byte ptr [eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x001561ee: add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0012bbce: add byte ptr [eax + 0x560cec83], dl; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000d930e: add byte ptr [eax + 0x568bd689], dl; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x001254b4: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00125e33: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000782ae: add byte ptr [eax + 0x5b00b60f], dl; pop esi; pop edi; ret; 
0x00078dae: add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x0008ecde: add byte ptr [eax + 0x5b118966], dl; ret; 
0x0015e18e: add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x00129d1e: add byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x0009534e: add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x000960ee: add byte ptr [eax + 0x5e5ff889], dl; pop ebx; ret; 
0x001267a6: add byte ptr [eax + 0x5ec0315b], dl; pop edi; ret; 
0x00160d4e: add byte ptr [eax + 0x5f01478d], dl; ret; 
0x00162b2e: add byte ptr [eax + 0x5f01c083], dl; ret; 
0x001561fe: add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000910ce: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x0008cd0e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x00098c7e: add byte ptr [eax + 0x66168b66], dl; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013a7de: add byte ptr [eax + 0x66d2b60f], dl; and eax, 0xe2c1f807; add ecx, dword ptr [ecx]; ret 0x8966; 
0x00098dde: add byte ptr [eax + 0x66f0ff3], dl; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f7f26: add byte ptr [eax + 0x6a0000], al; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x000af586: add byte ptr [eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x36277b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00160be1: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00160bd0: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00160bbf: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00143266: add byte ptr [eax + 0x7d82e95b], dl; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00043829: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000192da: add byte ptr [eax + 0x7e], cl; pop ss; mov eax, 0xf0; lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000c6f5d: add byte ptr [eax + 0x7f], bh; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000c6f83: add byte ptr [eax + 0x7f], bh; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000c6ee8: add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0012597e: add byte ptr [eax + 0x800c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x0012e22e: add byte ptr [eax + 0x8244489], dl; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x00101d86: add byte ptr [eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000ffb8f: add byte ptr [eax + 0x96], bh; call dword ptr gs:[0x10]; 
0x0012596e: add byte ptr [eax + 0xa00c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00030f64: add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x000eab39: add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000310d0: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00079cfe: add byte ptr [eax + 0xc31e4e8], dl; add byte ptr [0x16a2fb], al; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00162ae5: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000ed71e: add byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000ed6b3: add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x00162a78: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00162adb: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0015619e: add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x00139d77: add byte ptr [eax + 0xf0], bh; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008002a: add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x000338d7: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0002a62e: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010f1f0: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0002a757: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c6fb7: add byte ptr [eax + 0xfc17], bh; pop ebx; ret; 
0x0008aace: add byte ptr [eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000c5d84: add byte ptr [eax + 1], bh; int 0x80; 
0x00157a8f: add byte ptr [eax + 1], bh; ja 0x157a99; neg eax; pop ebp; ret; 
0x0015ce8f: add byte ptr [eax + 1], bh; ja 0x15ce99; neg eax; ret; 
0x0015d17f: add byte ptr [eax + 1], bh; ja 0x15d189; neg eax; pop ebp; ret; 
0x000b25af: add byte ptr [eax + 1], bh; jg 0xb25b9; neg eax; ret; 
0x00031b27: add byte ptr [eax + 1], bh; ret; 
0x000b27bf: add byte ptr [eax + 2], bh; ret; 
0x000b27cf: add byte ptr [eax + 3], bh; ret; 
0x00162a3c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x000b27df: add byte ptr [eax + 4], bh; ret; 
0x000b27ef: add byte ptr [eax + 5], bh; ret; 
0x000b27ff: add byte ptr [eax + 6], bh; ret; 
0x000b280f: add byte ptr [eax + 7], bh; ret; 
0x00162a95: add byte ptr [eax + 8], bh; pop edi; ret; 
0x000c6ce3: add byte ptr [eax + eax*8 - 0x137c778b], al; add al, 0x8d; test dword ptr [ebx + ebp*8 - 1], eax; call dword ptr [eax - 1]; 
0x000b2850: add byte ptr [eax + eax], 0x8d; dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x000c223b: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; or dword ptr [ecx - 0x72b00000], 0xffffff83; add bl, ch; in eax, dx; call dword ptr [eax - 0x18]; 
0x0011799b: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [eax + 0x2c], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x00034013: add byte ptr [eax + eax], al; add byte ptr [eax - 1], dl; je 0x3403f; sbb al, 0xe8; maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00052525: add byte ptr [eax + eax], al; add byte ptr [ebx - 0x59b63], cl; inc dword ptr [ecx + 0x400fa]; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x000ef713: add byte ptr [eax + eax], al; add byte ptr [ecx + 0x3d182454], cl; add byte ptr [eax + eax], al; add byte ptr [edi], cl; inc edx; ret; 
0x00052531: add byte ptr [eax + eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x000ef71c: add byte ptr [eax + eax], al; add byte ptr [edi], cl; inc edx; ret; 
0x000f89db: add byte ptr [eax + eax], al; add byte ptr [esi - 0x18], dl; dec ebx; ret 0xfff7; 
0x00116782: add byte ptr [eax + eax], ch; add dh, al; xchg byte ptr [esp + ebp], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0011a58a: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00125959: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0012b252: add byte ptr [eax + eax], dh; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c7187: add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0010e846: add byte ptr [eax - 0x12bc18], dl; jmp dword ptr [esi - 0x70]; 
0x0010e886: add byte ptr [eax - 0x12fc18], dl; jmp dword ptr [esi - 0x70]; 
0x000ec726: add byte ptr [eax - 0x173d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x0010807e: add byte ptr [eax - 0x17a9a8ab], dl; imul ecx, dword ptr [esi + 3], 0x78c68100; mov edi, 0x8953000d; ret; 
0x00160b79: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000fbbd2: add byte ptr [eax - 0x18], dl; ja 0xfbbd8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0002a6e7: add byte ptr [eax - 0x18], dl; ret 0x505; 
0x000ec8e6: add byte ptr [eax - 0x18fd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ec916: add byte ptr [eax - 0x192d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000b276e: add byte ptr [eax - 0x1a7f0a78], dl; pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x000ecbb6: add byte ptr [eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000fd24e: add byte ptr [eax - 0x226516a5], dl; int1; jmp dword ptr [esi - 0x70]; 
0x0002fa8c: add byte ptr [eax - 0x26dbeb77], al; sbb cl, bl; add al, 0x24; add esp, 4; ret; 
0x00092bd2: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00160b8a: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00103b04: add byte ptr [eax - 0x2f770000], al; ret; 
0x0001b71a: add byte ptr [eax - 0x35fe0008], dl; jmp edx; 
0x000b285e: add byte ptr [eax - 0x37763e77], dl; ret; 
0x00160b9b: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0003ac2b: add byte ptr [eax - 0x3b7cfb0c], al; adc byte ptr [ecx], cl; ret 0x850f; 
0x0012f3f6: add byte ptr [eax - 0x3f7c3e77], dl; or byte ptr [ebx + 0x74fff878], al; jne 0x12f387; ret 0x3901; 
0x000c84ce: add byte ptr [eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x0005e59e: add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x000d47ce: add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x00160f7e: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x000f5bad: add byte ptr [eax - 0x3fcef777], al; ret; 
0x00163209: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00122e46: add byte ptr [eax - 0x47fb3b7d], dl; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0015d35e: add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000b6513: add byte ptr [eax - 0x54], ch; ret 0xf0; 
0x000ecba6: add byte ptr [eax - 0x5e48], dl; call ptr [ebx - 0x17]; cmp eax, 0x8dfff2e4; je 0xecbdc; add byte ptr [eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x0010a2c3: add byte ptr [eax - 0x67], 0xfa; call dword ptr [eax - 0x75]; 
0x000c27ee: add byte ptr [eax - 0x6a723f7b], dl; add dword ptr [ecx], esi; cli; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x0009ce9e: add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], ah; ret; 
0x0009ceae: add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], dh; ret; 
0x0009d2ce: add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x0008b0b6: add byte ptr [eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00050a76: add byte ptr [eax - 0x72fb137d], dl; lahf; int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x0005149e: add byte ptr [eax - 0x72fb137d], dl; test ebp, ebp; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x000fa59e: add byte ptr [eax - 0x72fb137d], dl; xchg eax, esp; xchg esi, eax; cli; call dword ptr [esi - 0x7f]; 
0x000843e7: add byte ptr [eax - 0x73], al; adc byte ptr [eax], 0x76; ljmp 0xd089:0xd0440fff; ret; 
0x0010c64a: add byte ptr [eax - 0x73], bl; sub eax, 0x58; cli; call dword ptr [eax - 1]; 
0x00120a90: add byte ptr [eax - 0x73], dl; adc byte ptr [eax], 0xa0; cli; call dword ptr [eax - 0x18]; 
0x000a7536: add byte ptr [eax - 0x73], dl; adc byte ptr [edx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x001179a5: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x00134803: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x4a], -6; call dword ptr [eax + 0x6a]; 
0x00072db1: add byte ptr [eax - 0x73], dl; adc dword ptr [ebx + edi*2], -6; call dword ptr [eax - 0x18]; 
0x00025584: add byte ptr [eax - 0x73], dl; add bl, 0x2e; cli; call dword ptr [eax - 0x18]; 
0x000aa074: add byte ptr [eax - 0x73], dl; add byte ptr [ebx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x000c2971: add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0xf], -0xd; call dword ptr [eax - 0x73]; 
0x000c2245: add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x15; in eax, dx; call dword ptr [eax - 0x18]; 
0x000c4415: add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0xa; out dx, al; call dword ptr [eax - 0x18]; 
0x000e2247: add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x4a; cli; call dword ptr [eax - 0x18]; 
0x0016ba9a: add byte ptr [eax - 0x73], dl; add ebx, 0x2f; cli; call dword ptr [eax - 0x18]; 
0x001202d6: add byte ptr [eax - 0x73], dl; add esp, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x000a49ae: add byte ptr [eax - 0x73], dl; and al, 0x71; cli; call dword ptr [eax - 0x18]; 
0x000ca133: add byte ptr [eax - 0x73], dl; and ch, 0x48; cli; call dword ptr [eax - 0x18]; 
0x00122d05: add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x60], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000a47e3: add byte ptr [eax - 0x73], dl; cmp dl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0001e239: add byte ptr [eax - 0x73], dl; cmp dword ptr [edx], 0x2e; cli; call dword ptr [eax - 0x18]; 
0x0001e1a5: add byte ptr [eax - 0x73], dl; cmp esp, 0x6c; cli; call dword ptr [eax - 0x18]; 
0x001257e4: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x000aa14e: add byte ptr [eax - 0x73], dl; or cl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0001e29f: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2e], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000c223e: add byte ptr [eax - 0x73], dl; or dword ptr [ecx - 0x72b00000], 0xffffff83; add bl, ch; in eax, dx; call dword ptr [eax - 0x18]; 
0x0013515b: add byte ptr [eax - 0x73], dl; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x00113dc2: add byte ptr [eax - 0x73], dl; sbb ah, 0x5a; cli; call dword ptr [eax + 0x53]; 
0x000a7671: add byte ptr [eax - 0x73], dl; sbb bh, 0x32; cli; call dword ptr [eax - 0x18]; 
0x00120bcd: add byte ptr [eax - 0x73], dl; sbb byte ptr [eax - 0x60], 0xfa; call dword ptr [eax - 0x18]; 
0x000b6b8b: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x70], -6; call dword ptr [eax - 0x18]; 
0x0011799e: add byte ptr [eax - 0x73], dl; sub dword ptr [eax + 0x2c], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x000ac896: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], -0x71; cli; call dword ptr [eax - 0x18]; 
0x000ac8d4: add byte ptr [eax - 0x73], dl; sub dword ptr [esp + ecx*4], -6; call dword ptr [eax - 0x18]; 
0x000ac877: add byte ptr [eax - 0x73], dl; sub esp, -0x75; cli; call dword ptr [eax - 0x18]; 
0x0009e8eb: add byte ptr [eax - 0x73], dl; test dword ptr [ecx], eax; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000ad9d3: add byte ptr [eax - 0x73], dl; test dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000b6d22: add byte ptr [eax - 0x73], dl; test eax, edx; in al, dx; call dword ptr [eax - 0x73]; 
0x00076fbb: add byte ptr [eax - 0x73], dl; test ecx, ecx; inc eax; cli; call dword ptr [eax - 0x18]; 
0x0001f434: add byte ptr [eax - 0x73], dl; xchg ah, bh; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000efd08: add byte ptr [eax - 0x73], dl; xchg ah, cl; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x0004996b: add byte ptr [eax - 0x73], dl; xchg al, ah; jno 0x4996c; call dword ptr [eax - 0x18]; 
0x000e35c5: add byte ptr [eax - 0x73], dl; xchg al, ch; xchg ebx, eax; cli; call dword ptr [eax - 0x18]; 
0x001365e9: add byte ptr [eax - 0x73], dl; xchg al, dl; arpl dx, di; call dword ptr [eax - 0x18]; 
0x0004988d: add byte ptr [eax - 0x73], dl; xchg bh, bl; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e35e8: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x6c], ah; cli; call dword ptr [eax - 0x18]; 
0x000e355c: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x6d], ah; cli; call dword ptr [eax - 0x18]; 
0x000b3f77: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0xd], dh; in al, dx; call dword ptr [eax - 0x73]; 
0x000e360b: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x000e35a2: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dl; xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x00021d52: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebp*2 - 6], cl; call dword ptr [eax - 0x18]; 
0x00021d06: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebp*2 - 6], dh; call dword ptr [eax - 0x18]; 
0x0009fd48: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ecx*4 - 6], bl; call dword ptr [eax - 0x18]; 
0x0001f542: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x2e], cl; cli; call dword ptr [eax - 0x18]; 
0x00133285: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x60], al; cli; call dword ptr [eax + 0x6a]; 
0x00049a70: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; 
0x00049a70: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x0001f4d6: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bh; cli; call dword ptr [eax - 0x18]; 
0x0001f588: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x2e], ch; cli; call dword ptr [eax - 0x18]; 
0x0001fa8f: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], ah; cli; call dword ptr [eax - 0x18]; 
0x0011a54e: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebx*4 - 6], dh; call dword ptr [eax - 0x18]; 
0x0011a39e: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebx*4], bl; cli; call dword ptr [eax - 0x18]; 
0x0004efa8: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + esi*2], dh; cli; call dword ptr [eax - 0x18]; 
0x00049990: add byte ptr [eax - 0x73], dl; xchg dl, bh; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e94a9: add byte ptr [eax - 0x73], dl; xchg dl, cl; dec edx; cli; call dword ptr [eax - 0x18]; 
0x0001cea5: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x2c], edi; cli; call dword ptr [eax - 0x18]; 
0x00026df0: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x2f], eax; cli; call dword ptr [eax - 0x18]; 
0x00133dff: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x00109929: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x57], edi; cli; call dword ptr [eax - 0x18]; 
0x0010996f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 6], edx; call dword ptr [eax - 0x18]; 
0x0010996f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 6], edx; call dword ptr [eax - 0x18]; ret; 
0x0005e086: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x0006302e: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x000e9fc4: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x000204d9: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ebp*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x00020542: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ebp*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x000ad3c2: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ecx*4 - 6], ebx; call dword ptr [eax - 0x18]; 
0x0001e950: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x2e], ecx; cli; call dword ptr [eax - 0x18]; 
0x0003a7c8: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + esi*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x0003a879: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + esi*2], eax; cli; call dword ptr [eax - 0x18]; 
0x000c1e93: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; xor edx, edi; call dword ptr [eax - 0x73]; 
0x000ad51d: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x0011f2be: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebx*2], esi; cli; call dword ptr [eax - 0x18]; 
0x001099b5: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*2 - 6], esp; call dword ptr [eax - 0x18]; 
0x0003a7f6: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x32], esi; cli; call dword ptr [eax - 0x18]; 
0x000c1f03: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4a], ecx; cli; call dword ptr [eax - 0x73]; 
0x0003ca9b: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi - 0x17af0006], esi; xchg edi, eax; ret; 
0x0003a89c: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi - 6], edx; call dword ptr [eax - 0x18]; 
0x0003a770: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x0003a770: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x000e8fcb: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebp; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x0001e8bf: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], edi; cli; call dword ptr [eax - 0x18]; 
0x000ea196: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x4b], ecx; cli; call dword ptr [eax - 0x18]; 
0x0005e8df: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2], ebp; cli; call dword ptr [eax - 0x18]; 
0x000204b6: add byte ptr [eax - 0x73], dl; xchg eax, eax; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x0003a7a5: add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0x3a7a6; call dword ptr [eax - 0x18]; 
0x0003d62a: add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0x3d62b; call dword ptr [eax - 0x18]; 
0x000407c4: add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0x407c5; call dword ptr [eax - 0x18]; 
0x000b168b: add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0xb168c; call dword ptr [eax - 0x18]; 
0x000cc63c: add byte ptr [eax - 0x73], dl; xchg ebp, esp; dec eax; cli; call dword ptr [eax - 0x18]; 
0x000ba36a: add byte ptr [eax - 0x73], dl; xchg ecx, ebp; inc esi; cli; call dword ptr [eax - 0x18]; 
0x0012067c: add byte ptr [eax - 0x73], dl; xchg ecx, ebx; pop edi; cli; call dword ptr [eax - 0x18]; 
0x0003a856: add byte ptr [eax - 0x73], dl; xchg ecx, ecx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0003a67d: add byte ptr [eax - 0x73], dl; xchg edi, ebx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e8d20: add byte ptr [eax - 0x73], dl; xchg edx, ecx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x0003d7b9: add byte ptr [eax - 0x73], dl; xchg edx, edi; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0003a72a: add byte ptr [eax - 0x73], dl; xchg edx, esi; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e7bee: add byte ptr [eax - 0x73], dl; xchg esi, edx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x00120659: add byte ptr [eax - 0x73], dl; xchg esp, ebp; lahf; cli; call dword ptr [eax - 0x18]; 
0x0001e80b: add byte ptr [eax - 0x73], dl; xchg esp, edi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000a4922: add byte ptr [eax - 0x73], dl; xor byte ptr [edx + 0x32], 0xfa; call dword ptr [eax - 0x18]; 
0x0005184b: add byte ptr [eax - 0x73], dl; xor cl, 0x33; cli; call dword ptr [eax - 0x18]; 
0x000a49f4: add byte ptr [eax - 0x73], dl; xor dl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x000b3edc: add byte ptr [eax - 0x73], dl; xor dword ptr [eax - 0xd], 0xffffffec; call dword ptr [eax - 1]; 
0x001107b1: add byte ptr [eax - 0x73], dl; xor dword ptr [eax], 0xffffffca; bnd call dword ptr [eax - 0x18]; 
0x0006efa3: add byte ptr [eax - 0x73], dl; xor dword ptr [ecx + 0x40], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x00072def: add byte ptr [eax - 0x73], dl; xor ebx, 0x40; cli; call dword ptr [eax - 0x18]; 
0x0007222e: add byte ptr [eax - 0x74aca9a9], dl; je 0x7225a; adc al, ch; test eax, 0x81000cac; ret; 
0x00123fce: add byte ptr [eax - 0x74f7137d], dl; inc ebx; adc bh, bh; je 0x123ffd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0012b4ee: add byte ptr [eax - 0x74f7137d], dl; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000b3b1b: add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x000d6f7e: add byte ptr [eax - 0x76f3137d], dl; ret 0xe989; 
0x00039b03: add byte ptr [eax - 0x76ffdbc4], al; lds ecx, ptr [edi]; inc esp; jl 0x39b32; adc byte ptr [ecx - 0x7c2ed628], cl; ret 0xd31d; 
0x00027955: add byte ptr [eax - 0x7972fff8], al; rcl byte ptr [eax], 0; add byte ptr [ecx + 0x10d086], cl; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x0001bf2e: add byte ptr [eax - 0x7adfac75], dl; sal byte ptr [esi + ebp*8 - 0x73], cl; nop; insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x0006610b: add byte ptr [eax - 0x7af10000], al; ret; 
0x00161c8e: add byte ptr [eax - 0x7bdfb673], dl; in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0011e0db: add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x0001db4e: add byte ptr [eax - 0x7c378275], dl; rol dword ptr [ecx], 0x83; ret; 
0x000dd7b6: add byte ptr [eax - 0x7c69eb77], dl; ret 0x3901; 
0x000b6f21: add byte ptr [eax - 0x7c750000], al; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0003c406: add byte ptr [eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0011f16e: add byte ptr [eax - 0x7cdf397d], dl; ret 0x3901; 
0x00076e66: add byte ptr [eax - 0x7ce541f1], dl; rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x00131fbe: add byte ptr [eax - 0x7cf3bc75], dl; ret; 
0x0015c95e: add byte ptr [eax - 0x7cf73f7d], dl; ret 0x8308; 
0x0015620e: add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x00101aae: add byte ptr [eax - 0x7cf7af77], dl; rcl byte ptr [eax], 0x83; ret 0x890c; 
0x0013c92e: add byte ptr [eax - 0x7cfd49f1], dl; ret 0x8801; 
0x0008b5de: add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x00027d4a: add byte ptr [eax - 0x7f72fff8], al; jo 0x27dc1; cli; call dword ptr [eax - 0x18]; 
0x00078b2e: add byte ptr [eax - 0x7fc3b77f], dl; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x78b30; ret; 
0x0005f6e7: add byte ptr [eax - 0x89843], al; jmp dword ptr [eax]; 
0x0006455f: add byte ptr [eax - 0x8b843], al; jmp dword ptr [eax]; 
0x0004b714: add byte ptr [eax - 0xcf43], al; jmp dword ptr [esi + 0xf]; 
0x0002f6cc: add byte ptr [eax - 0xdb], al; jg 0x2f6dd; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0002fa1c: add byte ptr [eax - 0xdb], al; jg 0x2fa2d; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x000a0a3e: add byte ptr [eax - 0xf7137d], dl; je 0xa0a6a; and byte ptr [ebx - 0x18], dl; ret; 
0x0001b8c4: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00078ddf: add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x000c5e54: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f5c3c: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003107c: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00030d7c: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x00031870: add byte ptr [eax - 1], bh; pop edi; ret; 
0x00030eac: add byte ptr [eax - 1], bh; ret; 
0x0001bd2b: add byte ptr [eax - 1], dl; jae 0x1bd34; call esi; 
0x0013cfd6: add byte ptr [eax - 1], dl; je 0x13cfff; sbb al, 0xe8; dec edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0001fc7f: add byte ptr [eax - 1], dl; je 0x1fca8; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00021430: add byte ptr [eax - 1], dl; je 0x21459; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x000229b0: add byte ptr [eax - 1], dl; je 0x229d9; push 0x682474ff; call esi; 
0x00023d78: add byte ptr [eax - 1], dl; je 0x23da1; push 0x682474ff; call esi; 
0x00024abf: add byte ptr [eax - 1], dl; je 0x24ae8; dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x00033a16: add byte ptr [eax - 1], dl; je 0x33a3f; sbb al, 0xe8; paddw mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00034016: add byte ptr [eax - 1], dl; je 0x3403f; sbb al, 0xe8; maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00020556: add byte ptr [eax - 6], ch; call dword ptr [eax + 0x68]; 
0x000201b2: add byte ptr [eax - 6], ch; call dword ptr [eax - 0x73]; 
0x0016b851: add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x00146ef4: add byte ptr [eax], 0; add al, ch; call 0x82146e5d; ret; 
0x0001afc5: add byte ptr [eax], 0; add bh, bh; xor byte ptr [ebx - 0x72e7db8c], cl; xchg dh, ah; sub edi, edx; call dword ptr [eax - 0x75]; 
0x0016836b: add byte ptr [eax], 0; add bh, dh; ret 0; 
0x000ad9d0: add byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; test dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000229ad: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x229d9; push 0x682474ff; call esi; 
0x00023d75: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x23da1; push 0x682474ff; call esi; 
0x000f5c76: add byte ptr [eax], 0; add byte ptr [ebx + 0x8824b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00078b33: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x78b30; ret; 
0x000a80cd: add byte ptr [eax], 0; add byte ptr [ecx + 0x244489da], cl; and byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x000d1918: add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x0011b1a8: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x0007acce: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00072295: add byte ptr [eax], 0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0002f38b: add byte ptr [eax], 0; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00103b05: add byte ptr [eax], 0; mov eax, edx; ret; 
0x000f9970: add byte ptr [eax], 0; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000f7f27: add byte ptr [eax], 0; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0002900d: add byte ptr [eax], 0; ret; 
0x0007a985: add byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00051848: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; xor cl, 0x33; cli; call dword ptr [eax - 0x18]; 
0x0010ce08: add byte ptr [eax], 0x48; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00114fbc: add byte ptr [eax], 0x5c; cli; call dword ptr [eax + 0x6a]; 
0x0010cea8: add byte ptr [eax], 0x68; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00085300: add byte ptr [eax], 0xbb; ljmp 0xd089:0xd0450fff; ret; 
0x0005e96f: add byte ptr [eax], 0xd2; stc; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x00103c84: add byte ptr [eax], ah; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002908c: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x00107f70: add byte ptr [eax], ah; add esp, 4; pop ebx; pop esi; ret; 
0x000ddf3c: add byte ptr [eax], al; add al, al; call 0xfe06447; xchg esp, eax; ret 0xd020; 
0x0010ecf4: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0010ed93: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00123913: add byte ptr [eax], al; add al, byte ptr [ebx - 0x7c72f73c]; and byte ptr [edx], dh; add byte ptr [eax], al; pop ebx; ret; 
0x00146ef5: add byte ptr [eax], al; add al, ch; call 0x82146e5d; ret; 
0x0014a83d: add byte ptr [eax], al; add al, ch; mov al, byte ptr [0x81ffff26]; ret; 
0x0014883d: add byte ptr [eax], al; add al, ch; mov al, byte ptr [0x81ffff46]; ret; 
0x0010732d: add byte ptr [eax], al; add al, ch; mov eax, 0x8100035b; ret 0xcccb; 
0x000ffb2d: add byte ptr [eax], al; add al, ch; mov ebx, 0x89fff1b4; ret; 
0x000f602d: add byte ptr [eax], al; add al, ch; mov ebx, 0x89fff24f; ret; 
0x000ed12d: add byte ptr [eax], al; add al, ch; mov ebx, 0x89fff2de; ret; 
0x0008ae7d: add byte ptr [eax], al; add al, ch; push 0x81000b20; ret 0x917b; 
0x00079e5b: add byte ptr [eax], al; add bh, al; and byte ptr [ecx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000e4d4f: add byte ptr [eax], al; add bh, al; test dword ptr [eax + 0xafffffe], esi; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x00063ba4: add byte ptr [eax], al; add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x00129f30: add byte ptr [eax], al; add bh, bh; je 0x129f5a; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0012fcc3: add byte ptr [eax], al; add bh, bh; je 0x12fced; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0002a8f0: add byte ptr [eax], al; add bh, bh; rol byte ptr [ebx - 0x137cef3c], 1; add al, 0x8d; adc dword ptr [eax + 0x5c], -0x1c; call dword ptr [eax - 0x77]; 
0x0001afc6: add byte ptr [eax], al; add bh, bh; xor byte ptr [ebx - 0x72e7db8c], cl; xchg dh, ah; sub edi, edx; call dword ptr [eax - 0x75]; 
0x0016836c: add byte ptr [eax], al; add bh, dh; ret 0; 
0x0009d1c3: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x000c6629: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000c6639: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000c6659: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000c6649: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000c6669: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0007acdd: add byte ptr [eax], al; add bl, ch; fisttp dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5e], bl; ret; 
0x001275fa: add byte ptr [eax], al; add bl, ch; loope 0x1275e8; pop esp; jbe 0x127601; jmp dword ptr [esi - 0x70]; 
0x0006d3cc: add byte ptr [eax], al; add bl, ch; mov ecx, dword ptr [ecx - 0x36c91639]; cli; jmp dword ptr [esi - 0x70]; 
0x00069fec: add byte ptr [eax], al; add bl, ch; or dword ptr [ecx + 0x11e9e445], 0xfffffff6; cli; jmp dword ptr [esi - 0x70]; 
0x000b3e7a: add byte ptr [eax], al; add bl, ch; ret 0x8190; 
0x000ee1ea: add byte ptr [eax], al; add bl, ch; ret; 
0x0007c7f9: add byte ptr [eax], al; add bl, ch; wait; nop; call eax; 
0x0011a538: add byte ptr [eax], al; add bl, ch; xchg dword ptr [ebp - 0x5635f7a], ecx; call dword ptr [eax - 0x73]; 
0x00129c56: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00161318: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016134f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161388: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0010d9ff: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10da10; add esp, 8; pop ebx; ret; 
0x00143257: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x143268; pop ebx; ret; 
0x00031183: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x31190; pop ebx; ret; 
0x00050f42: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x50f50; pop ebx; ret; 
0x00050f7b: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x50f90; pop ebx; pop esi; ret; 
0x000b402e: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xb4040; pop ebx; ret; 
0x000b4146: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xb4160; pop ebx; ret; 
0x000b4300: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xb4310; pop ebx; ret; 
0x000c0940: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xc0950; pop ebx; ret; 
0x000e1e06: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xe1e18; pop ebx; ret; 
0x000ec094: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec0a0; pop ebx; ret; 
0x000ec3b2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec3c0; pop ebx; ret; 
0x000ec3e2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec3f0; pop ebx; ret; 
0x000ec412: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec420; pop ebx; ret; 
0x000ec706: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec728; pop ebx; ret; 
0x000ec75b: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec780; pop ebx; pop esi; ret; 
0x000ec8d7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec8e8; pop ebx; ret; 
0x000ec907: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xec918; pop ebx; ret; 
0x000ecb86: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xecbb8; pop ebx; ret; 
0x000ed312: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xed320; pop ebx; ret; 
0x000f567e: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf5690; pop ebx; ret; 
0x000f5976: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf5988; pop ebx; ret; 
0x000f59e6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf59f8; pop ebx; ret; 
0x000f6202: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf6210; pop ebx; ret; 
0x000f6232: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf6240; pop ebx; ret; 
0x000f6307: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf6318; pop ebx; pop esi; ret; 
0x000f6337: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf6348; pop ebx; pop esi; ret; 
0x000f7b88: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf7b98; pop ebx; ret; 
0x000f9102: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf9110; pop ebx; ret; 
0x000f92da: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf9300; pop ebx; ret; 
0x000f9322: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf9330; pop ebx; ret; 
0x000f9352: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf9360; pop ebx; ret; 
0x000f9386: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf9398; pop ebx; ret; 
0x000f93b6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf93c8; pop ebx; ret; 
0x000fd22a: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xfd250; pop ebx; ret; 
0x000ff47b: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xff490; pop ebx; pop esi; ret; 
0x000ff5bc: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xff5d0; pop ebx; pop esi; ret; 
0x000ffbf0: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xffc10; pop ebx; pop esi; ret; 
0x000c6949: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x1aff0; ret; 
0x0010ed05: add byte ptr [eax], al; add byte ptr [0xffffff], ah; ret; 
0x0007b46c: add byte ptr [eax], al; add byte ptr [eax + 0x1084883], dl; xor eax, eax; ret; 
0x000bf0ca: add byte ptr [eax], al; add byte ptr [eax + 0x109], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00031c2c: add byte ptr [eax], al; add byte ptr [eax + 0x10b2b4e8], dl; add byte ptr [0x1b23cb], al; mov eax, dword ptr [eax + 0x48]; ret; 
0x000bf481: add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x0001beac: add byte ptr [eax], al; add byte ptr [eax + 0x121034e8], dl; add byte ptr [0x1c814b], al; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001b05c: add byte ptr [eax], al; add byte ptr [eax + 0x121e84e8], dl; add byte ptr [0x1c8f9b], al; lea eax, [eax - 0x5943c]; ret; 
0x000ec7bf: add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x000ed58d: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ff507: add byte ptr [eax], al; add byte ptr [eax + 0x13f], bh; call dword ptr gs:[0x10]; 
0x00030dfd: add byte ptr [eax], al; add byte ptr [eax + 0x14], bh; call dword ptr gs:[0x10]; 
0x00081cb5: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; add esp, 0xc; ret; 
0x00163c6c: add byte ptr [eax], al; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bf42c: add byte ptr [eax], al; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0002faab: add byte ptr [eax], al; add byte ptr [eax + 0x1cd90289], al; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x00042d0c: add byte ptr [eax], al; add byte ptr [eax + 0x39ff428d], dl; ret; 
0x00132a6c: add byte ptr [eax], al; add byte ptr [eax + 0x424448b], dl; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013cafc: add byte ptr [eax], al; add byte ptr [eax + 0x424448b], dl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013ca8c: add byte ptr [eax], al; add byte ptr [eax + 0x424448b], dl; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0013ca6c: add byte ptr [eax], al; add byte ptr [eax + 0x424448b], dl; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00079d3c: add byte ptr [eax], al; add byte ptr [eax + 0x424448b], dl; ret; 
0x001326ac: add byte ptr [eax], al; add byte ptr [eax + 0x424548b], dl; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0009e7ed: add byte ptr [eax], al; add byte ptr [eax + 0x450ff0e5], al; ret; 
0x0009e79d: add byte ptr [eax], al; add byte ptr [eax + 0x450ff0e6], al; ret; 
0x0015dbdc: add byte ptr [eax], al; add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x0012c4dc: add byte ptr [eax], al; add byte ptr [eax + 0x4b22838d], dl; cli; call dword ptr [esi + 0x57]; 
0x0006725c: add byte ptr [eax], al; add byte ptr [eax + 0x502444c7], dl; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0005e3ec: add byte ptr [eax], al; add byte ptr [eax + 0x508d018b], dl; add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x0012bbcc: add byte ptr [eax], al; add byte ptr [eax + 0x560cec83], dl; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000d930c: add byte ptr [eax], al; add byte ptr [eax + 0x568bd689], dl; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x00078dac: add byte ptr [eax], al; add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x0015e18c: add byte ptr [eax], al; add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x00162b2c: add byte ptr [eax], al; add byte ptr [eax + 0x5f01c083], dl; ret; 
0x00160bbd: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00043827: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x0012597c: add byte ptr [eax], al; add byte ptr [eax + 0x800c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x000ffb8d: add byte ptr [eax], al; add byte ptr [eax + 0x96], bh; call dword ptr gs:[0x10]; 
0x0012596c: add byte ptr [eax], al; add byte ptr [eax + 0xa00c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00030f62: add byte ptr [eax], al; add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x000eab37: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000310ce: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00079cfc: add byte ptr [eax], al; add byte ptr [eax + 0xc31e4e8], dl; add byte ptr [0x16a2fb], al; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00162ae3: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00162a76: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00162ad9: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00139d75: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080028: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x000338d5: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000c6fb5: add byte ptr [eax], al; add byte ptr [eax + 0xfc17], bh; pop ebx; ret; 
0x000c5d82: add byte ptr [eax], al; add byte ptr [eax + 1], bh; int 0x80; 
0x0015ce8d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x15ce99; neg eax; ret; 
0x00031b25: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0011adbd: add byte ptr [eax], al; add byte ptr [eax + 2], bh; ret; 
0x00162a3a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x00162a93: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x0010807c: add byte ptr [eax], al; add byte ptr [eax - 0x17a9a8ab], dl; imul ecx, dword ptr [esi + 3], 0x78c68100; mov edi, 0x8953000d; ret; 
0x0002fa8a: add byte ptr [eax], al; add byte ptr [eax - 0x26dbeb77], al; sbb cl, bl; add al, 0x24; add esp, 4; ret; 
0x000641fc: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x000d47cc: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x000f5bab: add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; ret; 
0x00163207: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0009ce9c: add byte ptr [eax], al; add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], ah; ret; 
0x0009ceac: add byte ptr [eax], al; add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], dh; ret; 
0x0009d2cc: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x000fa59c: add byte ptr [eax], al; add byte ptr [eax - 0x72fb137d], dl; xchg eax, esp; xchg esi, eax; cli; call dword ptr [esi - 0x7f]; 
0x000843e5: add byte ptr [eax], al; add byte ptr [eax - 0x73], al; adc byte ptr [eax], 0x76; ljmp 0xd089:0xd0440fff; ret; 
0x00072daf: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ebx + edi*2], -6; call dword ptr [eax - 0x18]; 
0x00025582: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add bl, 0x2e; cli; call dword ptr [eax - 0x18]; 
0x001202d4: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add esp, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x00122d03: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x60], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000ad9d1: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; test dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x001365e7: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, dl; arpl dx, di; call dword ptr [eax - 0x18]; 
0x0009fd46: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ecx*4 - 6], bl; call dword ptr [eax - 0x18]; 
0x0011a54c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebx*4 - 6], dh; call dword ptr [eax - 0x18]; 
0x0004efa6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + esi*2], dh; cli; call dword ptr [eax - 0x18]; 
0x000e94a7: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dl, cl; dec edx; cli; call dword ptr [eax - 0x18]; 
0x0001cea3: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x2c], edi; cli; call dword ptr [eax - 0x18]; 
0x0005e084: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x0006302c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x000ad3c0: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ecx*4 - 6], ebx; call dword ptr [eax - 0x18]; 
0x000ad51b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000e8d1e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg edx, ecx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x0006efa1: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [ecx + 0x40], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x00072ded: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor ebx, 0x40; cli; call dword ptr [eax - 0x18]; 
0x000b3b19: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x000d6f7c: add byte ptr [eax], al; add byte ptr [eax - 0x76f3137d], dl; ret 0xe989; 
0x00161c8c: add byte ptr [eax], al; add byte ptr [eax - 0x7bdfb673], dl; in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x00131fbc: add byte ptr [eax], al; add byte ptr [eax - 0x7cf3bc75], dl; ret; 
0x00101aac: add byte ptr [eax], al; add byte ptr [eax - 0x7cf7af77], dl; rcl byte ptr [eax], 0x83; ret 0x890c; 
0x0013c92c: add byte ptr [eax], al; add byte ptr [eax - 0x7cfd49f1], dl; ret 0x8801; 
0x0001b8c2: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000f5c3a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003107a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00030d7a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003186e: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop edi; ret; 
0x00030eaa: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002142e: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x21459; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x000229ae: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x229d9; push 0x682474ff; call esi; 
0x00023d76: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x23da1; push 0x682474ff; call esi; 
0x00024abd: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x24ae8; dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x00145ab5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00072806: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x0006daf6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x1abf7d], cl; call dword ptr [eax - 0x73]; 
0x000f9d7e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000f8669: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0001900a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0010c6a7: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00126087: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00079e62: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00072808: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x0006daf8: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x1abf7d], cl; call dword ptr [eax - 0x73]; 
0x0016c208: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00132edd: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000800fc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00115d18: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x001228d7: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x75]; 
0x0008008d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19b7a], cl; jmp dword ptr [ebp - 0x75]; 
0x00041f14: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xe1c1; 
0x00126088: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00160a0c: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; ret; 
0x0016202c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x162080; lea eax, [ecx + 0xa]; ret; 
0x0016203c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x162080; lea eax, [ecx + 0xb]; ret; 
0x0016204c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x162080; lea eax, [ecx + 0xd]; ret; 
0x0016205c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x162080; lea eax, [ecx + 0xe]; ret; 
0x0016206c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x162080; lea eax, [ecx + 0xf]; ret; 
0x0016200c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x162080; lea eax, [ecx + 7]; ret; 
0x0016201c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x162080; lea eax, [ecx + 9]; ret; 
0x00078078: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f9d80: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000343b9: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000f866b: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0013be4c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0010ed04: add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x0007b4d4: add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0009cbcc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x0009cbec: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0009cbbc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0014a83c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x13cee5; add ebx, 0x4537b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014883c: add byte ptr [eax], al; add byte ptr [eax], al; call 0x13cee5; add ebx, 0x470fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003395c: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x00101343: add byte ptr [eax], al; add byte ptr [eax], al; cmovb eax, edx; ret; 
0x000c5801: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; pop ebx; ret; 
0x00087915: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000c7d27: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, ecx; ret; 
0x00081d3d: add byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0001900c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00060946: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0015d693: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x15de10; pop ebx; ret; 
0x0015d4cc: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x15de26; pop ebx; ret; 
0x0015ee1b: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x15f060; pop ebx; ret; 
0x001604d5: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x160700; pop ebx; ret; 
0x00160592: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x160720; pop ebx; ret; 
0x001632fc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0016357c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x001623cc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x0009f2cc: add byte ptr [eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000f577c: add byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00160a06: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x0009d2b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0009ce89: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000617f9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; jmp eax; 
0x001632f5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00160dc8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00160dd8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00160de8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00160df8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00160e08: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00160d58: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00160d68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00160d78: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00160d88: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00160d98: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00160da8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00160db8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x00161228: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x00161218: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x00161208: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001611f8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x00161298: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x00161288: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x00161278: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00163588: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x00161268: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x00161258: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x00161248: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x00161238: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001623c6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008ecc5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00139b59: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x00079cb9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000b27a6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000b27b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000b27c9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000b27d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000b27e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000b27f9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000b2809: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00079d26: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca55: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001632c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b2787: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00161dd7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00161de7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00161df7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00161e07: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00161e17: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00161d77: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00161d87: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00161d97: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00161da7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00161db7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00161dc7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00162437: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x00162447: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x00162457: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x00162467: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001623d7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001623e7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001623f7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x00162407: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x00162417: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x00162427: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x001237a4: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; mov eax, 1; ret; 
0x00123eb4: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; ret; 
0x00079d14: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0008ecb6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0015ed19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x00079ce9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x00160e18: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00079cc9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x00098c6c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008eccc: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0007b414: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00079e5a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1964], 0; ret; 
0x00078be1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000df1cd: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000f9452: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; ret; 
0x0011fb9a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000df1c6: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00078be8: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0007b41b: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00125991: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0007b57c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x128], eax; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b6ec: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x158], eax; ret; 
0x000ed58c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x00081cb4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; add esp, 0xc; ret; 
0x00043826: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000ffb8c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000c6fb4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x00031c84: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0015ce8c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ja 0x15ce99; neg eax; ret; 
0x00031b24: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x0011adbc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 2; ret; 
0x000fddac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x40]; pop ebx; ret; 
0x000319d4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x001240ca: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00125dcc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + ecx*4 - 0x2a4]; pop ebx; pop esi; jmp eax; 
0x00163c2c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001323e4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x001629dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00079d2c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca5c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016332c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00073a04: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0009b82c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001618fc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0010c6a9: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000ff6e5: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00073774: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x0008ed6c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed7c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed5c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed8c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x001561ac: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00162b2b: add byte ptr [eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x0009d2ab: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x0009d2cb: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0009ce9b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x0009ceab: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0012596b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0012597b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008ecfb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0006725b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000c70fb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x0007b47a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000c6fca: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x0007128a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x001237ab: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x00125f9b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0007384b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007373b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00132a6b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013cafb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013ca8b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00079d3b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; ret; 
0x0008f95b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0008ed3a: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0007b46b: add byte ptr [eax], al; add byte ptr [eax], al; nop; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x00098feb: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x00123ebb: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x0012378a: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; add esp, 0xc; ret; 
0x0007aa5b: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x00079d1b: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0006e4af: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0007ace4: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008ecbc: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0015d34c: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x000438ed: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000f47a4: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; pop ebp; ret; 
0x000f4760: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x001634bc: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00130712: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00126089: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0010c236: add byte ptr [eax], al; add byte ptr [eax], al; push 0x1000002; call edx; 
0x0001b5c3: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00124d34: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00083504: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x00080274: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x000f52b8: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x0010866c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000b259c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x0009cfdc: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0002e66c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0014ec8d: add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0003131f: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x00138c5a: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002a78e: add byte ptr [eax], al; add byte ptr [ebp + 0x11549a], cl; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00031e81: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x98; pop ebx; ret; 
0x0015ddfa: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0002b70f: add byte ptr [eax], al; add byte ptr [ebp + 0x11a89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000192e0: add byte ptr [eax], al; add byte ptr [ebp + 0x12649d], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000333f8: add byte ptr [eax], al; add byte ptr [ebp + 0x128499], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000336b1: add byte ptr [eax], al; add byte ptr [ebp + 0x12849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5115: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00138bd9: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x18; pop ebx; ret; 
0x000f5f0a: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x000ff34f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x38; pop ebx; ret; 
0x000eb3ee: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x1c; ret; 
0x000744bf: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x0012e4dd: add byte ptr [eax], al; add byte ptr [ebp + 0x15], dh; add esp, 0x28; pop ebx; ret; 
0x000f5049: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x000345e1: add byte ptr [eax], al; add byte ptr [ebp + 0x17009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00040e99: add byte ptr [eax], al; add byte ptr [ebp + 0x17209d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00041081: add byte ptr [eax], al; add byte ptr [ebp + 0x17209f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001396d6: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x28; pop ebx; ret; 
0x000c7eca: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x78; pop ebx; ret; 
0x000f91c2: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008ce1a: add byte ptr [eax], al; add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00043042: add byte ptr [eax], al; add byte ptr [ebp + 0x18ec9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004359d: add byte ptr [eax], al; add byte ptr [ebp + 0x18ec9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3c1: add byte ptr [eax], al; add byte ptr [ebp + 0x19009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f135: add byte ptr [eax], al; add byte ptr [ebp + 0x190c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f401: add byte ptr [eax], al; add byte ptr [ebp + 0x19109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4cb: add byte ptr [eax], al; add byte ptr [ebp + 0x19289d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006afee: add byte ptr [eax], al; add byte ptr [ebp + 0x19289f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d7fe: add byte ptr [eax], al; add byte ptr [ebp + 0x193c9d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2723: add byte ptr [eax], al; add byte ptr [ebp + 0x1958dc0], al; xor edx, edi; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000791ad: add byte ptr [eax], al; add byte ptr [ebp + 0x195c9d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776df: add byte ptr [eax], al; add byte ptr [ebp + 0x195c9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00031529: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x98; pop ebx; ret; 
0x0012e42d: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0007afe5: add byte ptr [eax], al; add byte ptr [ebp + 0x1aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2ef: add byte ptr [eax], al; add byte ptr [ebp + 0x1aa09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000bf607: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011ce4c: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x0004a0f4: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x0007e209: add byte ptr [eax], al; add byte ptr [ebp + 0x1df09d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c165: add byte ptr [eax], al; add byte ptr [ebp + 0x1df89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df85: add byte ptr [eax], al; add byte ptr [ebp + 0x1df89d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008096f: add byte ptr [eax], al; add byte ptr [ebp + 0x1df89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f64f1: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f928c: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00100832: add byte ptr [eax], al; add byte ptr [ebp + 0x1f], dh; add esp, 0x18; pop ebx; ret; 
0x001005b2: add byte ptr [eax], al; add byte ptr [ebp + 0x1f], dh; add esp, 0x28; pop ebx; ret; 
0x000b53c9: add byte ptr [eax], al; add byte ptr [ebp + 0x20c89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b5585: add byte ptr [eax], al; add byte ptr [ebp + 0x20c89d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b6c86: add byte ptr [eax], al; add byte ptr [ebp + 0x21108a], cl; add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x000c18a6: add byte ptr [eax], al; add byte ptr [ebp + 0x21809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22d1: add byte ptr [eax], al; add byte ptr [ebp + 0x219c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2475: add byte ptr [eax], al; add byte ptr [ebp + 0x21b49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2635: add byte ptr [eax], al; add byte ptr [ebp + 0x21cc9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29e9: add byte ptr [eax], al; add byte ptr [ebp + 0x21d09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4106: add byte ptr [eax], al; add byte ptr [ebp + 0x22189b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c44a1: add byte ptr [eax], al; add byte ptr [ebp + 0x223c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4655: add byte ptr [eax], al; add byte ptr [ebp + 0x22609b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4805: add byte ptr [eax], al; add byte ptr [ebp + 0x22849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48e9: add byte ptr [eax], al; add byte ptr [ebp + 0x22889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001006a7: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x18; pop ebx; ret; 
0x000acb5b: add byte ptr [eax], al; add byte ptr [ebp + 0x24], dh; add esp, 0x18; pop ebx; ret; 
0x000f62be: add byte ptr [eax], al; add byte ptr [ebp + 0x24], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000fa815: add byte ptr [eax], al; add byte ptr [ebp + 0x24f09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001196c9: add byte ptr [eax], al; add byte ptr [ebp + 0x26], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001632f6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0008ecc6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0013ca56: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001237a5: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x00123eb5: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; ret; 
0x00079d15: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0016bef6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x0015ce76: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00139778: add byte ptr [eax], al; add byte ptr [ebp + 0x27], dh; add esp, 0x28; pop ebx; ret; 
0x001040f1: add byte ptr [eax], al; add byte ptr [ebp + 0x27c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a5: add byte ptr [eax], al; add byte ptr [ebp + 0x28089b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104485: add byte ptr [eax], al; add byte ptr [ebp + 0x284c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104686: add byte ptr [eax], al; add byte ptr [ebp + 0x28889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c79: add byte ptr [eax], al; add byte ptr [ebp + 0x288c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a8b: add byte ptr [eax], al; add byte ptr [ebp + 0x28a89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cf1: add byte ptr [eax], al; add byte ptr [ebp + 0x28c09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea5: add byte ptr [eax], al; add byte ptr [ebp + 0x28d89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106065: add byte ptr [eax], al; add byte ptr [ebp + 0x28f49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106296: add byte ptr [eax], al; add byte ptr [ebp + 0x290c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106699: add byte ptr [eax], al; add byte ptr [ebp + 0x29109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f7e01: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00110839: add byte ptr [eax], al; add byte ptr [ebp + 0x29e49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110921: add byte ptr [eax], al; add byte ptr [ebp + 0x29e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111499: add byte ptr [eax], al; add byte ptr [ebp + 0x2a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111581: add byte ptr [eax], al; add byte ptr [ebp + 0x2a509b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d85: add byte ptr [eax], al; add byte ptr [ebp + 0x2a809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00139631: add byte ptr [eax], al; add byte ptr [ebp + 0x2a], dh; add esp, 0x28; pop ebx; ret; 
0x001121a1: add byte ptr [eax], al; add byte ptr [ebp + 0x2aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112281: add byte ptr [eax], al; add byte ptr [ebp + 0x2aa49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112635: add byte ptr [eax], al; add byte ptr [ebp + 0x2ac89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b35: add byte ptr [eax], al; add byte ptr [ebp + 0x2aec9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e5: add byte ptr [eax], al; add byte ptr [ebp + 0x2b109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135c1: add byte ptr [eax], al; add byte ptr [ebp + 0x2b349b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001136a1: add byte ptr [eax], al; add byte ptr [ebp + 0x2b389b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00137414: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; add esp, 0x18; pop ebx; ret; 
0x001606f0: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00116b55: add byte ptr [eax], al; add byte ptr [ebp + 0x2c4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117739: add byte ptr [eax], al; add byte ptr [ebp + 0x2c549b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a31: add byte ptr [eax], al; add byte ptr [ebp + 0x2c789b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117be5: add byte ptr [eax], al; add byte ptr [ebp + 0x2c909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118185: add byte ptr [eax], al; add byte ptr [ebp + 0x2ca09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4b9: add byte ptr [eax], al; add byte ptr [ebp + 0x2cac9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013773a: add byte ptr [eax], al; add byte ptr [ebp + 0x2d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011f269: add byte ptr [eax], al; add byte ptr [ebp + 0x2f709f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00126bba: add byte ptr [eax], al; add byte ptr [ebp + 0x2f], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001200cd: add byte ptr [eax], al; add byte ptr [ebp + 0x31809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012febe: add byte ptr [eax], al; add byte ptr [ebp + 0x31], dh; add esp, 0x1c; ret; 
0x00121b82: add byte ptr [eax], al; add byte ptr [ebp + 0x31e899], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00121745: add byte ptr [eax], al; add byte ptr [ebp + 0x31e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e45: add byte ptr [eax], al; add byte ptr [ebp + 0x32649f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f51: add byte ptr [eax], al; add byte ptr [ebp + 0x33589b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129105: add byte ptr [eax], al; add byte ptr [ebp + 0x336c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b5: add byte ptr [eax], al; add byte ptr [ebp + 0x33809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001293a1: add byte ptr [eax], al; add byte ptr [ebp + 0x33849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b24d: add byte ptr [eax], al; add byte ptr [ebp + 0x34009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e341: add byte ptr [eax], al; add byte ptr [ebp + 0x34109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374d1: add byte ptr [eax], al; add byte ptr [ebp + 0x35849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001370a1: add byte ptr [eax], al; add byte ptr [ebp + 0x35849d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124c7f: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000316cf: add byte ptr [eax], al; add byte ptr [ebp + 0x38], dh; add esp, 0x28; pop ebx; ret; 
0x0007c428: add byte ptr [eax], al; add byte ptr [ebp + 0x39b974d2], al; ret 0xb574; 
0x000b42a3: add byte ptr [eax], al; add byte ptr [ebp + 0x3a], dh; add esp, 0x18; pop ebx; ret; 
0x0007e430: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0015f01e: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x00031417: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00122e1a: add byte ptr [eax], al; add byte ptr [ebp + 0x438b0076], cl; add al, 0x83; ret; 
0x00145aaa: add byte ptr [eax], al; add byte ptr [ebp + 0x448b0076], cl; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0015ddc6: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x000f56dc: add byte ptr [eax], al; add byte ptr [ebp + 0x46], dh; add esp, 0x18; pop ebx; ret; 
0x0003385a: add byte ptr [eax], al; add byte ptr [ebp + 0x478b0076], cl; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00070a10: add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000ec1e8: add byte ptr [eax], al; add byte ptr [ebp + 0x4a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0013a130: add byte ptr [eax], al; add byte ptr [ebp + 0x4a], dh; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x00131a97: add byte ptr [eax], al; add byte ptr [ebp + 0x4f], dh; add esp, 0x18; pop ebx; ret; 
0x000d6046: add byte ptr [eax], al; add byte ptr [ebp + 0x508b1904], cl; add al, 0xf7; ret 0xff00; 
0x0007777b: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; call eax; 
0x0012e0d1: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push edx; call dword ptr [eax + 0x14]; 
0x0011b8ab: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0011b973: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x000c671a: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00062757: add byte ptr [eax], al; add byte ptr [ebp + 0x52202454], cl; call eax; 
0x00067c6b: add byte ptr [eax], al; add byte ptr [ebp + 0x52242454], cl; call eax; 
0x0006adfb: add byte ptr [eax], al; add byte ptr [ebp + 0x52282454], cl; call eax; 
0x0013d9c1: add byte ptr [eax], al; add byte ptr [ebp + 0x52302454], cl; call eax; 
0x0006b36b: add byte ptr [eax], al; add byte ptr [ebp + 0x52342454], cl; call eax; 
0x00040d3c: add byte ptr [eax], al; add byte ptr [ebp + 0x523c2454], cl; call eax; 
0x0013d67b: add byte ptr [eax], al; add byte ptr [ebp + 0x5328245c], cl; call eax; 
0x00131c4b: add byte ptr [eax], al; add byte ptr [ebp + 0x53], dh; add esp, 0x18; pop ebx; ret; 
0x000c66f6: add byte ptr [eax], al; add byte ptr [ebp + 0x53], dh; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f5d09: add byte ptr [eax], al; add byte ptr [ebp + 0x540288], cl; add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x00139b5a: add byte ptr [eax], al; add byte ptr [ebp + 0x54890076], cl; and al, 0xc; call esi; 
0x0007effa: add byte ptr [eax], al; add byte ptr [ebp + 0x598b0076], cl; add al, 0xf6; ret; 
0x0011b997: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00131ce7: add byte ptr [eax], al; add byte ptr [ebp + 0x5d], dh; add esp, 0x18; pop ebx; ret; 
0x000c218a: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], dh; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000ee7ce: add byte ptr [eax], al; add byte ptr [ebp + 0x60], dh; add esp, 0xd4; pop ebx; pop esi; ret; 
0x000347f6: add byte ptr [eax], al; add byte ptr [ebp + 0x62], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f576e: add byte ptr [eax], al; add byte ptr [ebp + 0x63], dh; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00131710: add byte ptr [eax], al; add byte ptr [ebp + 0x64], dh; add esp, 0x18; pop ebx; ret; 
0x0008ece9: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ed6a9: add byte ptr [eax], al; add byte ptr [ebp + 0x6c850fc0], al; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012b2fa: add byte ptr [eax], al; add byte ptr [ebp + 0x78], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f73f2: add byte ptr [eax], al; add byte ptr [ebp + 0x7f], dh; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0006e316: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00129f4c: add byte ptr [eax], al; add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x00107327: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add al, ch; mov eax, 0x8100035b; ret 0xcccb; 
0x0015ce87: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x15ce99; neg eax; ret; 
0x000b27a7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x00079cd7: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax - 1], bh; ret; 
0x000f5f65: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x001013b0: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x000607f6: add byte ptr [eax], al; add byte ptr [ebp + 0xc42494], cl; add byte ptr [eax], al; push edx; call eax; 
0x0012e3b6: add byte ptr [eax], al; add byte ptr [ebp + 0xc], dh; add esp, 0x1c; ret; 
0x00065a82: add byte ptr [eax], al; add byte ptr [ebp + 0xcc2494], cl; add byte ptr [eax], al; push edx; call eax; 
0x00050e85: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x000f65b9: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012e944: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x18; pop ebx; ret; 
0x0010e8e2: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x2c; ret; 
0x0008ed4a: add byte ptr [eax], al; add byte ptr [ebp + 0xf660076], cl; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0001cc65: add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdaa: add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0001cf01: add byte ptr [eax], al; add byte ptr [ebp + 0xf909f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b314b: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x18; pop ebx; ret; 
0x000f814b: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x3c; ret; 
0x00034d6b: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x00034379: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0012f708: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x000309e8: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x000bf002: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x000b3216: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000b3276: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x001454db: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f4719: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00132c30: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00100e20: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000b6e21: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00132c8f: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x000ef13d: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x000508cd: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x000fce22: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000bff68: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x98; pop ebx; ret; 
0x0012fde6: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x98; pop edi; ret; 
0x0002fd15: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00045a43: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000314ba: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0015f052: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0005381a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x000ccd9a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or al, 0x8d; xor bh, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0007280a: add byte ptr [eax], al; add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x0006dafa: add byte ptr [eax], al; add byte ptr [ebp - 0x1abf7d], cl; call dword ptr [eax - 0x73]; 
0x0012368a: add byte ptr [eax], al; add byte ptr [ebp - 0x1f7cf8a8], cl; pop es; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x0001a6de: add byte ptr [eax], al; add byte ptr [ebp - 0x25], dh; mov ecx, dword ptr [eax - 0x100]; cmp dword ptr [ecx + 0x94], edx; jne 0x1a6be; ret; 
0x0009f2cd: add byte ptr [eax], al; add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x0001a6ec: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000b0e5f: add byte ptr [eax], al; add byte ptr [ebp - 0x35f37b], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [esi - 1]; 
0x00101d1a: add byte ptr [eax], al; add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x000ac9ba: add byte ptr [eax], al; add byte ptr [ebp - 0x3b7cff8a], cl; or al, 0x29; ret; 
0x000fb82a: add byte ptr [eax], al; add byte ptr [ebp - 0x3f7cff8a], cl; add dword ptr [ecx], edi; ret; 
0x000d028a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop ebx; pop esi; ret; 
0x00079cca: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x000ff4fe: add byte ptr [eax], al; add byte ptr [ebp - 0x42d48a40], al; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5452: add byte ptr [eax], al; add byte ptr [ebp - 0x47d88a40], al; cmp al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffa02: add byte ptr [eax], al; add byte ptr [ebp - 0x47d88a40], al; cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001013ea: add byte ptr [eax], al; add byte ptr [ebp - 0x47d88a40], al; jne 0x1013f4; add byte ptr [eax], al; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x000f4de2: add byte ptr [eax], al; add byte ptr [ebp - 0x47d88a40], al; jns 0xf4ded; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c595b: add byte ptr [eax], al; add byte ptr [ebp - 0x47d98a01], al; sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed154: add byte ptr [eax], al; add byte ptr [ebp - 0x47da8a40], al; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed0b4: add byte ptr [eax], al; add byte ptr [ebp - 0x47da8a40], al; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00035284: add byte ptr [eax], al; add byte ptr [ebp - 0x47da8a40], al; arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000311ac: add byte ptr [eax], al; add byte ptr [ebp - 0x47da8a40], al; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f4444: add byte ptr [eax], al; add byte ptr [ebp - 0x47da8a40], al; test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea36e: add byte ptr [eax], al; add byte ptr [ebp - 0x47dc8a40], al; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea41e: add byte ptr [eax], al; add byte ptr [ebp - 0x47dc8a40], al; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f785e: add byte ptr [eax], al; add byte ptr [ebp - 0x47dc8a40], al; mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eddd0: add byte ptr [eax], al; add byte ptr [ebp - 0x47de8a40], al; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7e9: add byte ptr [eax], al; add byte ptr [ebp - 0x47df8a40], al; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff949: add byte ptr [eax], al; add byte ptr [ebp - 0x47df8a40], al; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff899: add byte ptr [eax], al; add byte ptr [ebp - 0x47df8a40], al; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c58a9: add byte ptr [eax], al; add byte ptr [ebp - 0x47df8a40], al; jb 0xc58b3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7a3c: add byte ptr [eax], al; add byte ptr [ebp - 0x47e28a40], al; jbe 0xf7a46; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f577d: add byte ptr [eax], al; add byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00132e90: add byte ptr [eax], al; add byte ptr [ebp - 0x4df6e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00083db5: add byte ptr [eax], al; add byte ptr [ebp - 0x574c780], cl; call dword ptr [eax + 0x68]; 
0x000838cc: add byte ptr [eax], al; add byte ptr [ebp - 0x5750b80], cl; call dword ptr [eax + 0x68]; 
0x00132f55: add byte ptr [eax], al; add byte ptr [ebp - 0x59cd97d], cl; call dword ptr [ebp + 0x6a]; 
0x001200fa: add byte ptr [eax], al; add byte ptr [ebp - 0x5a0497d], cl; call dword ptr [eax - 0x73]; 
0x0011de3c: add byte ptr [eax], al; add byte ptr [ebp - 0x5a16143], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011de0d: add byte ptr [eax], al; add byte ptr [ebp - 0x5a16c43], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011deb2: add byte ptr [eax], al; add byte ptr [ebp - 0x5a17343], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011ddda: add byte ptr [eax], al; add byte ptr [ebp - 0x5a17a43], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x00028d7d: add byte ptr [eax], al; add byte ptr [ebp - 0x5a8467d], cl; call dword ptr [esi - 1]; 
0x0011de6b: add byte ptr [eax], al; add byte ptr [ebp - 0x5a87643], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011576d: add byte ptr [eax], al; add byte ptr [ebp - 0x5b61f80], cl; call dword ptr [eax - 1]; 
0x0009eb98: add byte ptr [eax], al; add byte ptr [ebp - 0x5bb1979], cl; call dword ptr [eax - 0x73]; 
0x00041717: add byte ptr [eax], al; add byte ptr [ebp - 0x5ccb87e], cl; call dword ptr [eax - 0x73]; 
0x00062d7c: add byte ptr [eax], al; add byte ptr [ebp - 0x6677f00a], al; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x0005dddf: add byte ptr [eax], al; add byte ptr [ebp - 0x6977f00a], al; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x000b2788: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x00161dd8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xa]; ret; 
0x00161de8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xb]; ret; 
0x00161df8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xd]; ret; 
0x00161e08: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xe]; ret; 
0x00161e18: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xf]; ret; 
0x00161d78: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 2]; ret; 
0x00161d88: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 3]; ret; 
0x00161d98: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 5]; ret; 
0x00161da8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 6]; ret; 
0x00161db8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 7]; ret; 
0x00161dc8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 9]; ret; 
0x00160d48: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x00160d38: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x00162438: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x00162448: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x00162458: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x00162468: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x001623d8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x001623e8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x001623f8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x00162408: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x00162418: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x00162428: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x000291d8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0008ecd8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; mov word ptr [ecx], dx; pop ebx; ret; 
0x000b2798: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x000d13ca: add byte ptr [eax], al; add byte ptr [ebp - 0x72f0ff8a], cl; ret 0; 
0x00160d79: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x00163589: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cld; pop edi; ret; 
0x00161259: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x00161219: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x00160de9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x001611f9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x00160e09: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x00160d99: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x00161249: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x00161279: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x00161269: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x000ed92d: add byte ptr [eax], al; add byte ptr [ebp - 0x74db8a40], al; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001014b7: add byte ptr [eax], al; add byte ptr [ebp - 0x76ebdb84], cl; pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0003414f: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; pop ss; push dword ptr [ebx + 4]; call eax; 
0x0009ab59: add byte ptr [eax], al; add byte ptr [ebp - 0x7affd98c], cl; sal byte ptr [ebp + 0x38], 0x83; ret; 
0x0012ff24: add byte ptr [eax], al; add byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001197fa: add byte ptr [eax], al; add byte ptr [ebp - 0x7c99ff8a], cl; sti; adc al, 0xf; xchg esp, eax; ret; 
0x000b6f85: add byte ptr [eax], al; add byte ptr [ebp - 0x7c9f8b40], al; ret; 
0x0009cb19: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x00157a29: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x0006e31c: add byte ptr [eax], al; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00130035: add byte ptr [eax], al; add byte ptr [ebp - 0xb3d8f7d], cl; call dword ptr [eax - 0x73]; 
0x0012a8f5: add byte ptr [eax], al; add byte ptr [ebp - 0xb945f7d], cl; call dword ptr [eax - 0x73]; 
0x0008cf79: add byte ptr [eax], al; add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000c6942: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000c5d7b: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x000ecac8: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x00119619: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0007b372: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0004b6c5: add byte ptr [eax], al; add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0016199d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001629bd: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0016205d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x000f14e5: add byte ptr [eax], al; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00101e13: add byte ptr [eax], al; add byte ptr [ebx + 0x1c497], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000eab29: add byte ptr [eax], al; add byte ptr [ebx + 0x24c2484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00049edd: add byte ptr [eax], al; add byte ptr [ebx + 0x29102454], cl; ret 0x4439; 
0x00066840: add byte ptr [eax], al; add byte ptr [ebx + 0x2920244c], cl; ret; 
0x0016198d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001629ad: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0016204d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00036c5d: add byte ptr [eax], al; add byte ptr [ebx + 0x31142444], cl; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0016197d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x0016299d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0016203d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x000ec1b3: add byte ptr [eax], al; add byte ptr [ebx + 0x3d7401fa], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec313: add byte ptr [eax], al; add byte ptr [ebx + 0x3d7401fa], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec263: add byte ptr [eax], al; add byte ptr [ebx + 0x3d7401fa], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00041b85: add byte ptr [eax], al; add byte ptr [ebx + 0x41c601c1], al; jmp dword ptr [eax]; 
0x00126695: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x1266c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0012fa9d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x12facd; adc al, 0x53; call dword ptr [eax]; 
0x00124d35: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00081d3e: add byte ptr [eax], al; add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x000423bd: add byte ptr [eax], al; add byte ptr [ebx + 0x46c601c6], al; jmp dword ptr [eax]; 
0x000ab588: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0016196d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x0016298d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0016202d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00088f60: add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x0012a833: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012d1c3: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012c7d3: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000f6613: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8b08ec], al; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000bb591: add byte ptr [eax], al; add byte ptr [ebx + 0x4d0f02fb], al; ret; 
0x000bb9ce: add byte ptr [eax], al; add byte ptr [ebx + 0x4d0f03fb], al; ret; 
0x00089269: add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x748d; 
0x0011d9cd: add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f05f8], al; ret 0x4589; 
0x0011da15: add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x0012c0e5: add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f10f8], al; ret 0x5057; 
0x0011da3d: add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f1ef8], al; ret 0x4589; 
0x0012db8f: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0008053d: add byte ptr [eax], al; add byte ptr [ebx + 0x525104ec], al; push ebx; call eax; 
0x000bf05f: add byte ptr [eax], al; add byte ptr [ebx + 0x535708ec], al; call eax; 
0x001268c5: add byte ptr [eax], al; add byte ptr [ebx + 0x562b1056], cl; or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x000322f5: add byte ptr [eax], al; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x1c]; call edi; 
0x000760e8: add byte ptr [eax], al; add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x0007f015: add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000b728d: add byte ptr [eax], al; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x0016195d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x0016297d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0016201d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x000343ba: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00041013: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00078079: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000eda61: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00070f7f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00124853: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000ef26b: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000b2604: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000d70e2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0002191d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00164700: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0001bd75: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000310fc: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000510c5: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001629dd: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x0003141f: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000eb3a2: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000794fb: add byte ptr [eax], al; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x001240cb: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0006c214: add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x0016194d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x0016296d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0016200d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x000bf0ac: add byte ptr [eax], al; add byte ptr [ebx + 0x6c8d08ec], al; and al, 0xc; push ebp; push ebx; call eax; 
0x00108275: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push 0; push 0x2000004; call eax; 
0x00081ff9: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x3c; push ecx; push ebx; call eax; 
0x00075038: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x0012fbcb: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push ebx; call eax; 
0x0008212f: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push edx; call eax; 
0x00123fff: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00080275: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x0006be20: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x6be38; push esi; call dword ptr [ebx + 0x2c]; 
0x0012d53c: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x000efeed: add byte ptr [eax], al; add byte ptr [ebx + 0x7d8d04ec], al; mov word ptr [ecx - 0xbb6b], cs; call dword ptr [edi + 0x52]; 
0x00026b15: add byte ptr [eax], al; add byte ptr [ebx + 0x7f01b87d], al; sub byte ptr [ebx + 0x3bab445], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf883; 
0x000f5c77: add byte ptr [eax], al; add byte ptr [ebx + 0x8824b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec7b8: add byte ptr [eax], al; add byte ptr [ebx + 0x9024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001619ad: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001629cd: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0016206d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x001013f3: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; call dword ptr gs:[0x10]; 
0x0010151d: add byte ptr [eax], al; add byte ptr [ebx + 0xc], bh; call dword ptr gs:[0x10]; 
0x0004da5d: add byte ptr [eax], al; add byte ptr [ebx + 0xf102474], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x000c6f8b: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x0013e60d: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x000739f7: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00030e3a: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eaba6: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x001455f1: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x001016ef: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; or esi, 0x100; call dword ptr gs:[0x10]; 
0x000c5e2a: add byte ptr [eax], al; add byte ptr [ebx - 0x10743], cl; jmp dword ptr [ebp - 0x75]; 
0x00031241: add byte ptr [eax], al; add byte ptr [ebx - 0x10748], cl; jmp dword ptr [ebp - 0x75]; 
0x00050fed: add byte ptr [eax], al; add byte ptr [ebx - 0x1076b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0012c2be: add byte ptr [eax], al; add byte ptr [ebx - 0x1076e], cl; jmp dword ptr [ebp - 0x75]; 
0x000c1155: add byte ptr [eax], al; add byte ptr [ebx - 0x10779], cl; jmp dword ptr [ebp - 0x39]; 
0x000bf3a5: add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x001228d9: add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x75]; 
0x000b6da5: add byte ptr [eax], al; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x39]; 
0x000eac95: add byte ptr [eax], al; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x75]; 
0x00116dc6: add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp + 3]; 
0x000282f5: add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000fcead: add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0001b8b5: add byte ptr [eax], al; add byte ptr [ebx - 0x1077e], cl; jmp dword ptr [ebp - 0x39]; 
0x000c748d: add byte ptr [eax], al; add byte ptr [ebx - 0x1077e], cl; jmp dword ptr [ebp - 0x7d]; 
0x000b42cb: add byte ptr [eax], al; add byte ptr [ebx - 0x1077f], cl; jmp dword ptr [ebp - 0x39]; 
0x000319d5: add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f1f6f: add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [esi - 0x77]; 
0x000fdacc: add byte ptr [eax], al; add byte ptr [ebx - 0x10b80], cl; dec dword ptr [ebx - 0x3f7adfc0]; cmove eax, edx; ret; 
0x0010f8fd: add byte ptr [eax], al; add byte ptr [ebx - 0x10f69], cl; jmp dword ptr [ebp - 0x77]; 
0x0012252d: add byte ptr [eax], al; add byte ptr [ebx - 0x10f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x001223dd: add byte ptr [eax], al; add byte ptr [ebx - 0x10f7e], cl; jmp dword ptr [ebp - 0x39]; 
0x0006fa06: add byte ptr [eax], al; add byte ptr [ebx - 0x137c3fbb], cl; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x0013e5b1: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00070ae0: add byte ptr [eax], al; add byte ptr [ebx - 0x137cf3c0], cl; add al, 0x29; ret 0xfac1; 
0x000d393d: add byte ptr [eax], al; add byte ptr [ebx - 0x13f79], cl; jmp dword ptr [ebp - 0x75]; 
0x000e476d: add byte ptr [eax], al; add byte ptr [ebx - 0x1637b], cl; inc dword ptr [ebx - 0x49f0ffc8]; test dword ptr [edi + 0xffffffe], ecx; inc ebp; ret 0x8588; 
0x000e4600: add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x000e4e9d: add byte ptr [eax], al; add byte ptr [ebx - 0x1677b], cl; jmp dword ptr [ebp - 0x75]; 
0x00062b94: add byte ptr [eax], al; add byte ptr [ebx - 0x16b6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e4c02: add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x7d]; 
0x000e4e7b: add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x7d]; 
0x000342c5: add byte ptr [eax], al; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f51d: add byte ptr [eax], al; add byte ptr [ebx - 0x16b7f], cl; jmp dword ptr [ebp - 0x75]; 
0x000f93c5: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; and bl, byte ptr [edx + esi*8]; jmp dword ptr [esi - 0x70]; 
0x000f5985: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; bound edx, qword ptr [esi - 0xe]; jmp dword ptr [esi - 0x70]; 
0x000f568d: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; pop edx; pop ecx; bnd jmp dword ptr [esi - 0x70]; 
0x000f59f5: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; push ebp; bnd jmp dword ptr [esi - 0x70]; 
0x000f9395: add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; push edx; sbb al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000f1973: add byte ptr [eax], al; add byte ptr [ebx - 0x17cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0013a0a1: add byte ptr [eax], al; add byte ptr [ebx - 0x17f68], cl; jmp dword ptr [ebp - 0x75]; 
0x00080c8d: add byte ptr [eax], al; add byte ptr [ebx - 0x19369], cl; jmp dword ptr [ebp - 0x80]; 
0x00081175: add byte ptr [eax], al; add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x80]; 
0x0007c05d: add byte ptr [eax], al; add byte ptr [ebx - 0x19b55], cl; jmp dword ptr [ebp - 0x75]; 
0x0008008f: add byte ptr [eax], al; add byte ptr [ebx - 0x19b7a], cl; jmp dword ptr [ebp - 0x75]; 
0x00080295: add byte ptr [eax], al; add byte ptr [ebx - 0x19b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d1910: add byte ptr [eax], al; add byte ptr [ebx - 0x1e7efe1e], al; add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000abace: add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000f63d3: add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0008ab43: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000afac5: add byte ptr [eax], al; add byte ptr [ebx - 0x2d7c0040], al; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00131898: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x000f9937: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00047868: add byte ptr [eax], al; add byte ptr [ebx - 0x363f4b], cl; call dword ptr [edi - 1]; 
0x000af01c: add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000b00df: add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000af0b0: add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x00048620: add byte ptr [eax], al; add byte ptr [ebx - 0x365b63], cl; call dword ptr [eax - 1]; 
0x000492e4: add byte ptr [eax], al; add byte ptr [ebx - 0x365b63], cl; call dword ptr [esi - 1]; 
0x000477c4: add byte ptr [eax], al; add byte ptr [ebx - 0x365b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000d182d: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0003450e: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x0001bf1f: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0004b645: add byte ptr [eax], al; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x00078b34: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x78b30; ret; 
0x0013be4d: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00126055: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x001372e5: add byte ptr [eax], al; add byte ptr [ebx - 0x45fbdbbc], cl; push es; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00118041: add byte ptr [eax], al; add byte ptr [ebx - 0x4637b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000c96dc: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000c94c3: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x00031173: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000cbbd4: add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x000cb9c3: add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi - 1]; 
0x000cbb35: add byte ptr [eax], al; add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; dec eax; cli; call dword ptr [eax - 0x18]; 
0x000f4530: add byte ptr [eax], al; add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x000f6f84: add byte ptr [eax], al; add byte ptr [ebx - 0x47fbdb84], cl; jnp 0xf6f8f; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6ca4: add byte ptr [eax], al; add byte ptr [ebx - 0x47fbdb84], cl; jp 0xf6caf; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000739fc: add byte ptr [eax], al; add byte ptr [ebx - 0x497237b3], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x00058695: add byte ptr [eax], al; add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x00101c09: add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0005aaa5: add byte ptr [eax], al; add byte ptr [ebx - 0x53f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000394f5: add byte ptr [eax], al; add byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0005526c: add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00064fad: add byte ptr [eax], al; add byte ptr [ebx - 0x6a76fb14], al; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x00116905: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; xchg esp, eax; pop esp; cli; call dword ptr [edx + 0x50]; 
0x0006994c: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0001e18d: add byte ptr [eax], al; add byte ptr [ebx - 0x72c3dba4], cl; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x000325b5: add byte ptr [eax], al; add byte ptr [ebx - 0x72cbdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x000ff6e6: add byte ptr [eax], al; add byte ptr [ebx - 0x74abdbb4], cl; pop esp; and al, 0x50; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000ba841: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdb8c], cl; mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x000ec3a3: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0014557c: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; push esp; and al, 0x14; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010166c: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; push esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0007d54e: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbbc], cl; inc eax; or al, 0x39; ret 0x870f; 
0x00050f33: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000e1df3: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013ca5d: add byte ptr [eax], al; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x00165441: add byte ptr [eax], al; add byte ptr [ebx - 0x768fdbbc], cl; ret 0x44c7; 
0x00021c14: add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x001688b5: add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x000a586e: add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000423af: add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret; 
0x0013284c: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0012e054: add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; xor al, 0x62; cli; call dword ptr [eax - 0x73]; 
0x00026745: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; daa; das; cli; call dword ptr [eax - 0x18]; 
0x0005f77d: add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe1e], al; idiv edi; jmp dword ptr [eax]; 
0x00063bae: add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe20], al; inc edi; idiv edi; jmp dword ptr [eax]; 
0x00113fe5: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x0002e54f: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; sti; xor edx, edi; call dword ptr [eax + 0x53]; 
0x00132df5: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 8], cl; add esp, 0xc; ret; 
0x00122dc0: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x5bc377f], cl; call dword ptr [eax + 0x52]; 
0x00162a80: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0007633a: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe06], al; ret 0; 
0x000cd715: add byte ptr [eax], al; add byte ptr [ebx - 0x7c2876fe], cl; ret 0x8304; 
0x000f98d5: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x000fd9a5: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb3c], al; jns 0xfd9fa; cli; call ptr [ebx + 0x5e]; ret; 
0x00087695: add byte ptr [eax], al; add byte ptr [ebx - 0x7cc7dbac], cl; in al, dx; or byte ptr [ecx], al; ret 0xf829; 
0x000d8dc5: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf1dcf6], cl; ret 0x8304; 
0x000d8cb5: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00044975: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00139d7a: add byte ptr [eax], al; add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000ff3f8: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x0005ee7d: add byte ptr [eax], al; add byte ptr [ebx - 0x86b63], cl; inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x0005e8c5: add byte ptr [eax], al; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0005e80b: add byte ptr [eax], al; add byte ptr [ebx - 0x8737b], cl; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x5e816; call dword ptr [eax - 0x18]; 
0x000638bd: add byte ptr [eax], al; add byte ptr [ebx - 0x89343], cl; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0006380b: add byte ptr [eax], al; add byte ptr [ebx - 0x8937b], cl; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x000271a5: add byte ptr [eax], al; add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000d914d: add byte ptr [eax], al; add byte ptr [ebx - 0xa363], cl; dec dword ptr [ebx - 0xa76b]; inc dword ptr [ecx]; ret; 
0x0006a46c: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x6a47e; push esi; call dword ptr [ebx + 0x1c]; 
0x0008344a: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0x83478; call eax; 
0x00082af6: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x00082981: add byte ptr [eax], al; add byte ptr [ebx - 0xa9fb14], al; je 0x829af; pop esp; push dword ptr [esp + 0x5c]; call eax; 
0x0006bcba: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x6bcd0; push esi; call dword ptr [eax + 0x2c]; 
0x0013e447: add byte ptr [eax], al; add byte ptr [ebx - 0xaefb14], al; je 0x13e475; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0011c295: add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0x8363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000bccab: add byte ptr [eax], al; add byte ptr [ebx - 0xbf4b], cl; dec dword ptr [ecx - 0x8743]; dec dword ptr [edi]; dec ebp; ret; 
0x000d8da5: add byte ptr [eax], al; add byte ptr [ebx - 0xd37b], cl; jmp dword ptr [esi - 0x77]; 
0x0008257b: add byte ptr [eax], al; add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x00085ad3: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000f56fa: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x000c0994: add byte ptr [eax], al; add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000f6e1a: add byte ptr [eax], al; add byte ptr [ecx + 0x17ab8d3], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70fa: add byte ptr [eax], al; add byte ptr [ecx + 0x17bb8d3], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0007cde5: add byte ptr [eax], al; add byte ptr [ecx + 0x1bafb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010cfa5: add byte ptr [eax], al; add byte ptr [ecx + 0x1d329cb], cl; ret; 
0x000a80ce: add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; and byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0016580f: add byte ptr [eax], al; add byte ptr [ecx + 0x2444c7fa], cl; or bh, bh; jg 0x16581b; add byte ptr [ecx], cl; ret 0x448b; 
0x00030e17: add byte ptr [eax], al; add byte ptr [ecx + 0x24948bc1], cl; xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0013f78a: add byte ptr [eax], al; add byte ptr [ecx + 0x25b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012fea1: add byte ptr [eax], al; add byte ptr [ecx + 0x310c2454], cl; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011e8bb: add byte ptr [eax], al; add byte ptr [ecx + 0x31102444], cl; shr byte ptr [edx + 2], 0x8d; xor ecx, 0x2f; cli; call dword ptr [eax + 0x51]; 
0x000e1e92: add byte ptr [eax], al; add byte ptr [ecx + 0x312c247c], cl; jmp dword ptr [esi - 0x7d]; 
0x001312d4: add byte ptr [eax], al; add byte ptr [ecx + 0x31382454], cl; rcl byte ptr [edi - 0x18], cl; std; sal esi, 1; call ecx; 
0x0011919c: add byte ptr [eax], al; add byte ptr [ecx + 0x313c2444], cl; shr al, 0x86; jl 0x1191a7; inc dword ptr [ebp - 0x76ad8740]; ret; 
0x0010d5c5: add byte ptr [eax], al; add byte ptr [ecx + 0x31442444], cl; ror byte ptr [ebx - 0x7297db84], 0x83; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x00134d7f: add byte ptr [eax], al; add byte ptr [ecx + 0x3158247c], cl; call dword ptr [eax - 0x18]; 
0x0012e3e8: add byte ptr [eax], al; add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x0011ff04: add byte ptr [eax], al; add byte ptr [ecx + 0x31702444], cl; ror byte ptr [ebp + 0x56102474], 0x8d; sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x000f5fec: add byte ptr [eax], al; add byte ptr [ecx + 0x36b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109e28: add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x000dceff: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x001004f8: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001009b8: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f8a8: add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000f5d31: add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fb5: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069a9c: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0004180b: add byte ptr [eax], al; add byte ptr [ecx + 0x5bd089c2], cl; pop esi; ret; 
0x00107950: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e2056], cl; ret; 
0x000821d2: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00069cb1: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00069a15: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x000c5bba: add byte ptr [eax], al; add byte ptr [ecx + 0x68c783d1], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x0001e44e: add byte ptr [eax], al; add byte ptr [ecx + 0x74fa3910], cl; or eax, 0x3904458d; ret; 
0x00163f96: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x0007acca: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0002a789: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cde0: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081586: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001948e: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000339a3: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033add: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x000817cf: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a75a: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00031cbf: add byte ptr [eax], al; add byte ptr [ecx + 0x8bef9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e1c5: add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000311df: add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00030e09: add byte ptr [eax], al; add byte ptr [ecx + 0xe0b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007eafe: add byte ptr [eax], al; add byte ptr [ecx + 0xf64247c], cl; inc edi; ret 0x5c89; 
0x000c6ca0: add byte ptr [eax], al; add byte ptr [ecx + 0xfa6f3c6], cl; xchg edi, eax; ret 0xda80; 
0x000f97ee: add byte ptr [eax], al; add byte ptr [ecx + 0xfa6f3de], cl; xchg edi, eax; ret 0xda80; 
0x000311b5: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0013f785: add byte ptr [eax], al; add byte ptr [ecx + 9], bh; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0004465a: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00074336: add byte ptr [eax], al; add byte ptr [ecx + ecx*8 - 0x137caf8b], al; or byte ptr [ecx - 0x7c72f7bb], cl; pushal; add cl, ch; call dword ptr [eax - 0x73]; 
0x000e4256: add byte ptr [eax], al; add byte ptr [ecx - 0x1577b], cl; dec dword ptr [ebx - 0x1877b]; jmp dword ptr [ebp + 3]; 
0x000e48a9: add byte ptr [eax], al; add byte ptr [ecx - 0x15b6b], cl; call dword ptr [eax + 0x53]; 
0x000a98bd: add byte ptr [eax], al; add byte ptr [ecx - 0x16dfdbbc], cl; ret 0xfff5; 
0x000f25f2: add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x000b087a: add byte ptr [eax], al; add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00048b34: add byte ptr [eax], al; add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x00047495: add byte ptr [eax], al; add byte ptr [ecx - 0x36576b], cl; dec dword ptr [ebx - 0x364f6b]; call dword ptr [ebx - 0x75]; 
0x000aed05: add byte ptr [eax], al; add byte ptr [ecx - 0x365f6b], cl; dec dword ptr [ebx - 0x363f6b]; call dword ptr [ebx - 0x75]; 
0x00132787: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x00132757: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00044430: add byte ptr [eax], al; add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x0008158b: add byte ptr [eax], al; add byte ptr [ecx - 0x4509ce05], cl; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00031dde: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005a2e9: add byte ptr [eax], al; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00058eb3: add byte ptr [eax], al; add byte ptr [ecx - 0x5236b], cl; call dword ptr [eax - 0x18]; 
0x0001fb2d: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbb4], cl; dec edi; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x000e8b45: add byte ptr [eax], al; add byte ptr [ecx - 0x72e21409], cl; je 0xe8b75; add byte ptr [ebx - 0x7cf3dbbc], cl; ret; 
0x00131870: add byte ptr [eax], al; add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x317374c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000aaeb9: add byte ptr [eax], al; add byte ptr [ecx - 0x769bdbac], cl; ret 0x448b; 
0x000aaf1d: add byte ptr [eax], al; add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x0004033a: add byte ptr [eax], al; add byte ptr [ecx - 0x76b7dbb4], cl; ret 0xe2d3; 
0x000c4b44: add byte ptr [eax], al; add byte ptr [ecx - 0x76d3dbac], cl; ret 0x808b; 
0x000a44c1: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbb4], cl; ret 0xe2d3; 
0x00129c5b: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0008170d: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x000d9c8d: add byte ptr [eax], al; add byte ptr [ecx - 0x7abfdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000a9357: add byte ptr [eax], al; add byte ptr [ecx - 0x7c26d63a], cl; ret; 
0x0007d79f: add byte ptr [eax], al; add byte ptr [ecx - 0x7cd7dbb4], cl; in al, dx; or al, 0x8b; test dword ptr [eax + 0x56fffffe], edx; call dword ptr [eax]; 
0x00128216: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x59f5e7d], cl; call dword ptr [eax - 1]; 
0x00021b04: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x000627bd: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf7dbb4], cl; in al, dx; or byte ptr [ecx + 0x245489fb], cl; or al, 0x6a; call dword ptr [esi - 0x18]; 
0x000d9db2: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf7dbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [ecx + 0xf60247c], 1; dec esp; ret 0xc183; 
0x000bf55c: add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbbc], cl; in al, dx; or al, 0x89; ret; 
0x000a286d: add byte ptr [eax], al; add byte ptr [ecx - 0x7e377626], cl; ret 0; 
0x000438ee: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0016415d: add byte ptr [eax], al; add byte ptr [ecx - 0x939d632], cl; ret; 
0x0004b45e: add byte ptr [eax], al; add byte ptr [ecx - 0x976b], cl; call dword ptr [ebx - 0x75]; 
0x00041103: add byte ptr [eax], al; add byte ptr [ecx - 0x977b], cl; dec dword ptr [ebx + 0x7d8b0c45]; or byte ptr [ecx - 0xa37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011bd3e: add byte ptr [eax], al; add byte ptr [ecx - 0xaf7b], cl; call dword ptr [eax + 0x6a]; 
0x00136124: add byte ptr [eax], al; add byte ptr [ecx - 0xaf7b], cl; dec dword ptr [ecx - 0xb36b]; dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x001028a3: add byte ptr [eax], al; add byte ptr [ecx - 0xbb7b], cl; dec dword ptr [ebx + 0x758b0845]; adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d8314: add byte ptr [eax], al; add byte ptr [ecx - 0xd37b], cl; dec dword ptr [ecx - 0xc36b]; dec dword ptr [ecx - 0xb743]; jmp dword ptr [ebp - 0x5f]; 
0x0009e2a9: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0009e4e6: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x0009c641: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013b57a: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x20eb; 
0x000d66fc: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x00102095: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x8389; 
0x000daa70: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0007ad1e: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1375; 
0x0011907d: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1f77; 
0x0013e72e: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00075806: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x000e6581: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000efe27: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x972; 
0x000ac915: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d55d2: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x5489; 
0x000d511d: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9aeb; 
0x00085f0c: add byte ptr [eax], al; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000ab290: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000ab8f7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000b8780: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000baa76: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448d; 
0x00107923: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4689; 
0x00169ed9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x000ba9de: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x548d; 
0x00088f68: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x00169455: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5e9; 
0x00164181: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x61e9; 
0x000bea3f: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000bcb97: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x858b; 
0x000ab592: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000b9235: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000f6631: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc085; 
0x000b4681: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000b9269: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000bdded: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd329; 
0x0003d474: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd889; 
0x000269db: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf883; 
0x00169f0e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xfa83; 
0x0004b0d7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000bafb3: add byte ptr [eax], al; add byte ptr [ecx], ch; retf 0x490f; ret 0xc801; 
0x000bac36: add byte ptr [eax], al; add byte ptr [ecx], ch; ror dword ptr [edi], 0x49; fld dword ptr [ecx]; ret; 
0x000bc116: add byte ptr [eax], al; add byte ptr [ecx], ch; ror dword ptr [edi], 0x49; rol dword ptr [ecx], 1; ret 0x48b; 
0x000afa04: add byte ptr [eax], al; add byte ptr [ecx], ch; shr dword ptr [ecx], 1; ror dword ptr [ebx - 0x35fb6b], cl; call ebx; 
0x001680af: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xac89; 
0x001683af: add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x00101663: add byte ptr [eax], al; add byte ptr [ecx], dh; call dword ptr [esi + 0x53]; 
0x0001af38: add byte ptr [eax], al; add byte ptr [ecx], dh; fisttp dword ptr [ebp - 0x2f76ff8a]; call dword ptr gs:[0x10]; 
0x0002a75f: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00107973: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00080f09: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00030e3f: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b0cf3: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000eabab: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0001b222: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x000b2494: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000f4761: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000f47a5: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0xc35d; 
0x000b25b2: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0015a142: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00157a92: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0015e1a2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00156252: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0015ed38: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x0015f063: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000b2582: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x0001a6b9: add byte ptr [eax], al; add byte ptr [edi + edx - 0x73], dh; nop; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000256a8: add byte ptr [eax], al; add byte ptr [edi], cl; dec eax; ret 0xc083; 
0x00107e89: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; inc ebx; adc al, 0x29; ret 0x728d; 
0x000bcfbd: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x00063e91: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x9589; 
0x000badc0: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0xd801; 
0x000bb095: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret; 
0x000efd87: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8589; 
0x00048034: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x9d8d; 
0x000da09e: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x00046159: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xda29; 
0x0004b4a4: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0004447b: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x0002069a: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x000228bb: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x548b; 
0x000d1919: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x0007b74a: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8189; 
0x000bee7d: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x0008a6e9: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x0001f68a: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xf289; 
0x000fa4e0: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret; 
0x000f45b9: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; sar byte ptr [eax + 0x135], 1; call dword ptr gs:[0x10]; 
0x000b4731: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x960f; 
0x0011b1a9: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x00101344: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0009fa64: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000c7097: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00087916: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000c5802: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x00041f17: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xe1c1; 
0x00059db2: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000d589e: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000de694: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x0004f8b5: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0x7401; 
0x0004fa1c: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00068705: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0009c7f4: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00123a3f: add byte ptr [eax], al; add byte ptr [edi], cl; mov edi, 0x24087; add byte ptr [ecx], ch; ret 0x5489; 
0x0009cbcd: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x00098bdd: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00039734: add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0015dbcd: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0015d4cd: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000eda5b: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; and al, 0x5b; pop esi; ret; 
0x0015ef9a: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0015dc78: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0015da98: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0015d568: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0015d8c2: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0012484d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015d694: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0015d79c: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0015ef0e: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0015d711: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00157c8d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx + 0x57], ebp; hlt; call dword ptr [ebx - 0x18]; 
0x0015a19d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], edi; xor esi, esp; call dword ptr [ebx - 0x18]; 
0x000b9a88: add byte ptr [eax], al; add byte ptr [edi], cl; test edi, ecx; fdivp st(7); call dword ptr [edi + 0x57]; 
0x00045c17: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x000aa87e: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xf839; 
0x00046105: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xfbc1; 
0x00045df2: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0002236c: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xdd39; 
0x000a2704: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xeb89; 
0x0015eaff: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000c7025: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00129f53: add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00124038: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c6f60: add byte ptr [eax], al; add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x000c6f23: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x000c6f86: add byte ptr [eax], al; add byte ptr [edx + 0xfa], bh; pop ebx; cmove eax, edx; ret; 
0x000c6f45: add byte ptr [eax], al; add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000c6eeb: add byte ptr [eax], al; add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x00019493: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000333f3: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b7d: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00080023: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338d0: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00073775: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x000339a8: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033ae2: add byte ptr [eax], al; add byte ptr [edx + 1], bh; mov esi, edi; call dword ptr gs:[0x10]; 
0x00075db2: add byte ptr [eax], al; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007accf: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00069393: add byte ptr [eax], al; add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0009dcf0: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x00076379: add byte ptr [eax], al; add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00130713: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0012608a: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00043a22: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0008ed6d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed7d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed5d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed8d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0015e991: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0014623d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0009cadf: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0009cdb8: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009cddd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000310d3: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00030c93: add byte ptr [eax], al; add byte ptr [esi - 0x18], dl; push ebp; ret 0x10; 
0x0008795b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; add esp, 4; pop ebx; pop esi; ret; 
0x0009cbdb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0009f2db: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000911fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00095a8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009120b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0008ce2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0008ed1b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0007b47b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x000c6fcb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0xfffa; pop ebx; ret; 
0x0007128b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x0008ed3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00163c3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000810fb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x0012378b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; add esp, 0xc; ret; 
0x0007b75b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0008ae0b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00081e1d: add byte ptr [eax], al; add byte ptr [esi - 0x77], dl; ret 0xe853; 
0x000ea956: add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff00; 
0x00019166: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x0001a6c8: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x0016712c: add byte ptr [eax], al; add cl, ch; adc eax, 0x8dfffff5; je 0x16715d; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x0016b1f2: add byte ptr [eax], al; add cl, ch; push ebx; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000fecd8: add byte ptr [eax], al; add cl, ch; push edx; idiv bh; dec dword ptr [ebp - 0x5686b7d]; call dword ptr [eax - 0x73]; 
0x000e4d59: add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x000cbc66: add byte ptr [eax], al; add cl, ch; ret 0xfff4; 
0x00022a96: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0001fd65: add byte ptr [eax], al; add cl, ch; ret; 
0x0003c71e: add byte ptr [eax], al; add cl, ch; retf 0xfff6; call dword ptr [ebx + 0x6a]; 
0x0007b306: add byte ptr [eax], al; add cl, ch; retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x0003f6fd: add byte ptr [eax], al; add cl, ch; wait; idiv bh; call dword ptr [ebx + 0x6a]; 
0x00161d36: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x161dd0; lea eax, [ecx + 8]; ret; 
0x00161d5f: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x161e00; lea eax, [ecx + 0xc]; ret; 
0x000d7a5d: add byte ptr [eax], al; add dh, dh; ret 0x7401; 
0x0010d88d: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0016019b: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x0010d995: add byte ptr [eax], al; add dh, dh; ret 0x7520; 
0x00162760: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0016287c: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x0016320f: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0016277d: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001628a6: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x001628af: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0004b055: add byte ptr [eax], al; add dh, dh; ret 0xf50; 
0x0008511a: add byte ptr [eax], al; add dh, dh; ret; 
0x00108410: add byte ptr [eax], al; add dl, byte ptr [eax - 1]; push ebx; adc al, 0x89; ret 0xc483; 
0x00082653: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0007b634: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5e4: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5b4: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x138], edx; ret; 
0x0012fcc0: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0007b58a: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0003459a: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0008000d: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x00077699: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0006b086: add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00033672: add byte ptr [eax], al; add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x00034728: add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0012d1c4: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012c7d4: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00129c57: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00137383: add byte ptr [eax], al; add eax, 0xacc7b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0012f083: add byte ptr [eax], al; add eax, 0xb4f7b; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x001627c0: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x001627e9: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00160a0e: add byte ptr [eax], al; add eax, 1; ret; 
0x00162773: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x00162799: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x0012a834: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00101fe4: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0009c642: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x00139d7b: add byte ptr [eax], al; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00161e5c: add byte ptr [eax], al; add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x0016202e: add byte ptr [eax], al; add edx, 0xa; jl 0x162080; lea eax, [ecx + 0xa]; ret; 
0x0016203e: add byte ptr [eax], al; add edx, 0xb; jl 0x162080; lea eax, [ecx + 0xb]; ret; 
0x00161fa9: add byte ptr [eax], al; add edx, 0xc; jl 0x162080; lea eax, [ecx + 0xc]; ret; 
0x0016204e: add byte ptr [eax], al; add edx, 0xd; jl 0x162080; lea eax, [ecx + 0xd]; ret; 
0x0016205e: add byte ptr [eax], al; add edx, 0xe; jl 0x162080; lea eax, [ecx + 0xe]; ret; 
0x0016206e: add byte ptr [eax], al; add edx, 0xf; jl 0x162080; lea eax, [ecx + 0xf]; ret; 
0x0011cc6f: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00161f46: add byte ptr [eax], al; add edx, 4; jl 0x162080; lea eax, [ecx + 4]; ret; 
0x0016200e: add byte ptr [eax], al; add edx, 7; jl 0x162080; lea eax, [ecx + 7]; ret; 
0x00161f7f: add byte ptr [eax], al; add edx, 8; jl 0x162080; lea eax, [ecx + 8]; ret; 
0x0016201e: add byte ptr [eax], al; add edx, 9; jl 0x162080; lea eax, [ecx + 9]; ret; 
0x000ed911: add byte ptr [eax], al; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x00035057: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0001bf20: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000f8660: add byte ptr [eax], al; add esp, 0x10; mov dword ptr [ebx + 0x2380], 0; add esp, 8; pop ebx; ret; 
0x000bee3c: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00041014: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000f8712: add byte ptr [eax], al; add esp, 0x10; test eax, eax; jne 0xf86d8; add esp, 0xc; ret; 
0x00131899: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0008257c: add byte ptr [eax], al; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0007807a: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ec492: add byte ptr [eax], al; add esp, 0x170; pop ebx; pop esi; pop edi; ret; 
0x00034f5c: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x000f63d4: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0002f61e: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002812d: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000eda62: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x000fb11e: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00029a38: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00070f80: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00124854: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x0009f511: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0012e1c6: add byte ptr [eax], al; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0010a0cb: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x001089d3: add byte ptr [eax], al; add esp, 0xc; push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x00108c21: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8f8: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x00081cbb: add byte ptr [eax], al; add esp, 0xc; ret; 
0x000c7262: add byte ptr [eax], al; add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x00045099: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x000fd9a6: add byte ptr [eax], al; add esp, 4; lea eax, [ebx - 0x5b487]; pop ebx; pop esi; ret; 
0x0007061e: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000f14e6: add byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0008ab2d: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0008274f: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000343bb: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00126056: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0010e66b: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x000f8519: add byte ptr [eax], al; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000f9938: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0002fc0c: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0013be4e: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001023c0: add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0002f6cb: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0002fa1b: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0002f38c: add byte ptr [eax], al; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x001612e8: add byte ptr [eax], al; and eax, 0xf; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161319: add byte ptr [eax], al; and eax, 0xff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161350: add byte ptr [eax], al; and eax, 0xfff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161389: add byte ptr [eax], al; and eax, 0xffff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000ff108: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x0010ed06: add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x0007b4d6: add byte ptr [eax], al; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0016139e: add byte ptr [eax], al; and eax, 1; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000293c2: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0009cbce: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x0009cbee: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0009cbbe: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0009befe: add byte ptr [eax], al; bsf edx, edx; call 0x13cef9; add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009c773: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0014a83e: add byte ptr [eax], al; call 0x13cee5; add ebx, 0x4537b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014883e: add byte ptr [eax], al; call 0x13cee5; add ebx, 0x470fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00146ef6: add byte ptr [eax], al; call 0x13cee5; add ebx, 0x48683; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146d82: add byte ptr [eax], al; call 0x13cee5; add ebx, 0x48777; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0014618e: add byte ptr [eax], al; call 0x13cee5; add ebx, 0x48e6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0009bf6e: add byte ptr [eax], al; call 0x13cef9; add ecx, 0xe641f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095fce: add byte ptr [eax], al; call 0x13cef9; add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009498e: add byte ptr [eax], al; call 0x13cef9; add ecx, 0xed6cb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f86b2: add byte ptr [eax], al; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x001175a2: add byte ptr [eax], al; call 0x190d8; mov dword ptr [ebx + 0xf40], eax; add esp, 0x18; pop ebx; ret; 
0x0010222e: add byte ptr [eax], al; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00043bd0: add byte ptr [eax], al; call 0x43b90; jmp eax; 
0x0002579c: add byte ptr [eax], al; call 0xfc9f0; add esp, 0x1c; ret; 
0x001251f1: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x0003395e: add byte ptr [eax], al; call dword ptr [esi]; 
0x000192ec: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003117d: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x000b4140: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000c093a: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000ec700: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ecb80: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000f92d4: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000fd224: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000c6943: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000c5d7c: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x0003114d: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000ecac9: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000b6c00: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0011961a: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0007b373: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0001af18: add byte ptr [eax], al; call eax; 
0x0001dc68: add byte ptr [eax], al; call eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013d0cb: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0013f7ab: add byte ptr [eax], al; call edx; 
0x000c07cb: add byte ptr [eax], al; cmovae esi, eax; mov eax, 0xdc; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00101345: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0012f258: add byte ptr [eax], al; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x000c5803: add byte ptr [eax], al; cmove eax, edx; pop ebx; ret; 
0x00087917: add byte ptr [eax], al; cmove eax, edx; ret; 
0x000c7d29: add byte ptr [eax], al; cmovne eax, ecx; ret; 
0x0012f29e: add byte ptr [eax], al; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0007b74b: add byte ptr [eax], al; cmovne eax, edx; mov dword ptr [ecx + 0x1e08], eax; ret; 
0x000d191a: add byte ptr [eax], al; cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000bee7e: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000f45ba: add byte ptr [eax], al; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00030f5b: add byte ptr [eax], al; cmovne edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00092bd1: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x00162ada: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x162b62; mov eax, 0xc; pop edi; ret; 
0x0015d562: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x00160648: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x00081d3f: add byte ptr [eax], al; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0010da00: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10da10; add esp, 8; pop ebx; ret; 
0x00143258: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00031184: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x00050f43: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x00050f7c: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x50f90; pop ebx; pop esi; ret; 
0x000b402f: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000b4147: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000b4301: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x000c0941: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000e1e07: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec095: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec3b3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3e3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec413: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000ec707: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ec75c: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec780; pop ebx; pop esi; ret; 
0x000ec8d8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec908: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ecb87: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000ed313: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f567f: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5977: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f6203: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f6233: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f6308: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf6318; pop ebx; pop esi; ret; 
0x000f6338: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf6348; pop ebx; pop esi; ret; 
0x000f7b89: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000f9103: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f92db: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000f9323: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f9353: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9387: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000fd22b: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000ff47c: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xff490; pop ebx; pop esi; ret; 
0x000ff5bd: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xff5d0; pop ebx; pop esi; ret; 
0x000ffbf1: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xffc10; pop ebx; pop esi; ret; 
0x000c694a: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000fa26a: add byte ptr [eax], al; cmp eax, 1; jg 0xfa278; pop ebx; pop esi; ret; 
0x000ec1b4: add byte ptr [eax], al; cmp edx, 1; je 0xec1f8; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec264: add byte ptr [eax], al; cmp edx, 1; je 0xec2a8; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000ec314: add byte ptr [eax], al; cmp edx, 1; je 0xec358; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0007bbda: add byte ptr [eax], al; cmp edx, ecx; jne 0x7bbe9; add esp, 8; pop ebx; ret; 
0x0009e766: add byte ptr [eax], al; cmp esi, 8; ja 0x9e8da; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x0009d6ad: add byte ptr [eax], al; inc dword ptr [eax]; je 0x9d6b4; inc eax; pop edi; ret; 
0x00086c96: add byte ptr [eax], al; inc eax; lea eax, [eax - 0x146f30]; cmove edx, eax; mov eax, edx; ret; 
0x0008b2d6: add byte ptr [eax], al; inc eax; lea eax, [eax - 0x1473b0]; cmove edx, eax; mov eax, edx; ret; 
0x000850a6: add byte ptr [eax], al; inc eax; lea eax, [eax - 0x147710]; cmove edx, eax; mov eax, edx; ret; 
0x00084516: add byte ptr [eax], al; inc eax; lea eax, [eax - 0x147900]; cmove edx, eax; mov eax, edx; ret; 
0x00083e66: add byte ptr [eax], al; inc eax; lea eax, [eax - 0x147a10]; cmove edx, eax; mov eax, edx; ret; 
0x000843e6: add byte ptr [eax], al; inc eax; lea eax, [eax - 0x1589f0]; cmove edx, eax; mov eax, edx; ret; 
0x00030ec3: add byte ptr [eax], al; int 0x80; 
0x000c5d64: add byte ptr [eax], al; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0010eb8a: add byte ptr [eax], al; ja 0x10eb95; sar eax, 5; add esp, 0xc; ret; 
0x00156253: add byte ptr [eax], al; ja 0x156259; neg eax; ret; 
0x00157a93: add byte ptr [eax], al; ja 0x157a99; neg eax; pop ebp; ret; 
0x0015a143: add byte ptr [eax], al; ja 0x15a149; neg eax; add esp, 4; pop ebx; ret; 
0x0015ce93: add byte ptr [eax], al; ja 0x15ce99; neg eax; ret; 
0x0015d183: add byte ptr [eax], al; ja 0x15d189; neg eax; pop ebp; ret; 
0x0015d343: add byte ptr [eax], al; ja 0x15d349; neg eax; ret; 
0x0015de2a: add byte ptr [eax], al; ja 0x15de30; neg eax; ret; 
0x0015e1a3: add byte ptr [eax], al; ja 0x15e1a9; neg eax; pop edi; pop ebx; ret; 
0x0015f0ab: add byte ptr [eax], al; ja 0x15f0b1; neg eax; ret; 
0x00160724: add byte ptr [eax], al; ja 0x16072a; neg eax; ret; 
0x000c768c: add byte ptr [eax], al; ja 0xc7808; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x001023b8: add byte ptr [eax], al; jae 0x1023c7; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x0007b6a4: add byte ptr [eax], al; jbe 0x7b6b0; ret; 
0x0007b6e4: add byte ptr [eax], al; jbe 0x7b6f0; ret; 
0x0007be64: add byte ptr [eax], al; jbe 0x7be1c; pop ebx; pop esi; pop edi; ret; 
0x00071953: add byte ptr [eax], al; je 0x71960; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x71960; ret; 
0x000c714d: add byte ptr [eax], al; je 0xc71ba; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x0015ed39: add byte ptr [eax], al; jg 0x15ed40; neg eax; ret; 
0x0015f064: add byte ptr [eax], al; jg 0x15f070; neg eax; ret; 
0x00163164: add byte ptr [eax], al; jg 0x163170; neg eax; ret; 
0x000b2583: add byte ptr [eax], al; jg 0xb2590; neg eax; pop edi; pop esi; ret; 
0x000b25b3: add byte ptr [eax], al; jg 0xb25b9; neg eax; ret; 
0x00139934: add byte ptr [eax], al; jmp dword ptr [eax + 8]; 
0x0001900e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00019004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00030c39: add byte ptr [eax], al; jmp eax; 
0x000671d6: add byte ptr [eax], al; jmp ebx; 
0x001005b3: add byte ptr [eax], al; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001006a8: add byte ptr [eax], al; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100728: add byte ptr [eax], al; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x001007bb: add byte ptr [eax], al; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x00100833: add byte ptr [eax], al; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c1b: add byte ptr [eax], al; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100c93: add byte ptr [eax], al; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d08: add byte ptr [eax], al; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00100d93: add byte ptr [eax], al; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00100e21: add byte ptr [eax], al; jne 0x100e2b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00101037: add byte ptr [eax], al; jne 0x10103f; add esp, 0x1c; ret; 
0x001013b1: add byte ptr [eax], al; jne 0x1013c0; add esp, 0x7c; ret; 
0x0010af78: add byte ptr [eax], al; jne 0x10afa0; pop ebx; pop esi; pop edi; ret; 
0x0010e8e3: add byte ptr [eax], al; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e953: add byte ptr [eax], al; jne 0x10e965; add esp, 0x2c; ret; 
0x00115794: add byte ptr [eax], al; jne 0x11579c; add esp, 0x2c; ret; 
0x001196ca: add byte ptr [eax], al; jne 0x1196f4; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011b998: add byte ptr [eax], al; jne 0x11b9f8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011ce4d: add byte ptr [eax], al; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0011cea9: add byte ptr [eax], al; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011cef5: add byte ptr [eax], al; jne 0x11cefd; add esp, 0x1c; ret; 
0x001245da: add byte ptr [eax], al; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0012484e: add byte ptr [eax], al; jne 0x1248f3; add esp, 0x34; pop ebx; pop esi; ret; 
0x00124c80: add byte ptr [eax], al; jne 0x124cb9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00126bbb: add byte ptr [eax], al; jne 0x126bee; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012b2fb: add byte ptr [eax], al; jne 0x12b377; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012e3b7: add byte ptr [eax], al; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e42e: add byte ptr [eax], al; jne 0x12e44c; add esp, 0x74; pop ebx; pop edi; ret; 
0x0012e4de: add byte ptr [eax], al; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e57e: add byte ptr [eax], al; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x0012e8ce: add byte ptr [eax], al; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0012e945: add byte ptr [eax], al; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x0012f709: add byte ptr [eax], al; jne 0x12f711; add esp, 0x4c; ret; 
0x0012f779: add byte ptr [eax], al; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e9: add byte ptr [eax], al; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f859: add byte ptr [eax], al; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8bc: add byte ptr [eax], al; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f91c: add byte ptr [eax], al; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f989: add byte ptr [eax], al; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa09: add byte ptr [eax], al; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012fde7: add byte ptr [eax], al; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x0012febf: add byte ptr [eax], al; jne 0x12fef4; add esp, 0x1c; ret; 
0x00131680: add byte ptr [eax], al; jne 0x131688; add esp, 0x2c; ret; 
0x00131711: add byte ptr [eax], al; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317f1: add byte ptr [eax], al; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00131a98: add byte ptr [eax], al; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b28: add byte ptr [eax], al; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131be3: add byte ptr [eax], al; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c4c: add byte ptr [eax], al; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce8: add byte ptr [eax], al; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132498: add byte ptr [eax], al; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132528: add byte ptr [eax], al; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b8: add byte ptr [eax], al; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132648: add byte ptr [eax], al; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x00132c31: add byte ptr [eax], al; jne 0x132c3b; add esp, 0x54; pop ebx; pop esi; ret; 
0x00132c90: add byte ptr [eax], al; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132ce0: add byte ptr [eax], al; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x00132d39: add byte ptr [eax], al; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d99: add byte ptr [eax], al; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x00137415: add byte ptr [eax], al; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x0013773b: add byte ptr [eax], al; jne 0x13776c; add esp, 0x14; pop ebx; pop esi; ret; 
0x001377cb: add byte ptr [eax], al; jne 0x1377fc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00138bda: add byte ptr [eax], al; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x00138c5b: add byte ptr [eax], al; jne 0x138c6f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00139632: add byte ptr [eax], al; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d7: add byte ptr [eax], al; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139779: add byte ptr [eax], al; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x00139e9f: add byte ptr [eax], al; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x0013a131: add byte ptr [eax], al; jne 0x13a17f; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x0013cae0: add byte ptr [eax], al; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f7: add byte ptr [eax], al; jne 0x13f8ff; add esp, 0x1c; ret; 
0x00145443: add byte ptr [eax], al; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x001454dc: add byte ptr [eax], al; jne 0x1454e6; add esp, 0x14; pop ebx; pop esi; ret; 
0x00145556: add byte ptr [eax], al; jne 0x145560; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015d695: add byte ptr [eax], al; jne 0x15de10; pop ebx; ret; 
0x0015d4ce: add byte ptr [eax], al; jne 0x15de26; pop ebx; ret; 
0x0015ee1d: add byte ptr [eax], al; jne 0x15f060; pop ebx; ret; 
0x001604d7: add byte ptr [eax], al; jne 0x160700; pop ebx; ret; 
0x00160594: add byte ptr [eax], al; jne 0x160720; pop ebx; ret; 
0x0016131e: add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0001a6df: add byte ptr [eax], al; jne 0x1a6be; mov ecx, dword ptr [eax - 0x100]; cmp dword ptr [ecx + 0x94], edx; jne 0x1a6be; ret; 
0x0001a6ed: add byte ptr [eax], al; jne 0x1a6be; ret; 
0x0002fd16: add byte ptr [eax], al; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e9: add byte ptr [eax], al; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00031320: add byte ptr [eax], al; jne 0x31334; add esp, 0x114; pop ebx; pop edi; ret; 
0x000313a0: add byte ptr [eax], al; jne 0x313b4; add esp, 0x114; pop ebx; pop edi; ret; 
0x00031418: add byte ptr [eax], al; jne 0x3145e; add esp, 0x94; pop ebx; pop edi; ret; 
0x000314bb: add byte ptr [eax], al; jne 0x314c8; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003152a: add byte ptr [eax], al; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x000316d0: add byte ptr [eax], al; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x00031e82: add byte ptr [eax], al; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031ef2: add byte ptr [eax], al; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x00031f68: add byte ptr [eax], al; jne 0x31f75; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003437a: add byte ptr [eax], al; jne 0x34382; add esp, 0x2c; ret; 
0x0003449a: add byte ptr [eax], al; jne 0x344a2; add esp, 0x2c; ret; 
0x000347f7: add byte ptr [eax], al; jne 0x3485d; add esp, 0x14; pop ebx; pop esi; ret; 
0x00034d6c: add byte ptr [eax], al; jne 0x34d74; add esp, 0x1c; ret; 
0x00034dbf: add byte ptr [eax], al; jne 0x34dc7; add esp, 0x1c; ret; 
0x00034e0c: add byte ptr [eax], al; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e5f: add byte ptr [eax], al; jne 0x34e67; add esp, 0x1c; ret; 
0x00034eac: add byte ptr [eax], al; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034eff: add byte ptr [eax], al; jne 0x34f07; add esp, 0x1c; ret; 
0x00045a44: add byte ptr [eax], al; jne 0x45a51; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00045ac2: add byte ptr [eax], al; jne 0x45acf; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00049b42: add byte ptr [eax], al; jne 0x49b4f; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004a0f5: add byte ptr [eax], al; jne 0x4a115; add esp, 0x434; pop ebx; pop esi; ret; 
0x000508ce: add byte ptr [eax], al; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x00050e86: add byte ptr [eax], al; jne 0x50e97; add esp, 0x1c; ret; 
0x000744c0: add byte ptr [eax], al; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x00079a32: add byte ptr [eax], al; jne 0x79a40; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0007e431: add byte ptr [eax], al; jne 0x7e472; add esp, 0x24; pop ebx; pop esi; ret; 
0x000acb5c: add byte ptr [eax], al; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b16f2: add byte ptr [eax], al; jne 0xb16ff; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000b1774: add byte ptr [eax], al; jne 0xb1781; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000b17f2: add byte ptr [eax], al; jne 0xb17ff; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000b314c: add byte ptr [eax], al; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31cc: add byte ptr [eax], al; jne 0xb31d4; add esp, 0x1c; ret; 
0x000b3217: add byte ptr [eax], al; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000b3277: add byte ptr [eax], al; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000b42a4: add byte ptr [eax], al; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000b6e22: add byte ptr [eax], al; jne 0xb6e2d; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x000bc710: add byte ptr [eax], al; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee10: add byte ptr [eax], al; jne 0xbee18; add esp, 0x1c; ret; 
0x000bf003: add byte ptr [eax], al; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x000bf608: add byte ptr [eax], al; jne 0xbf627; add esp, 0x34; pop ebx; pop esi; ret; 
0x000bff69: add byte ptr [eax], al; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfffc: add byte ptr [eax], al; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x000c218b: add byte ptr [eax], al; jne 0xc21ee; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000c66f7: add byte ptr [eax], al; jne 0xc674e; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000c67a7: add byte ptr [eax], al; jne 0xc67fe; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000c7ecb: add byte ptr [eax], al; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca40b: add byte ptr [eax], al; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df42b: add byte ptr [eax], al; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff3b: add byte ptr [eax], al; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb3ef: add byte ptr [eax], al; jne 0xeb407; add esp, 0x1c; ret; 
0x000eb54c: add byte ptr [eax], al; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000eb78b: add byte ptr [eax], al; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x000ec120: add byte ptr [eax], al; jne 0xec128; add esp, 0x1c; ret; 
0x000ec177: add byte ptr [eax], al; jne 0xec17f; add esp, 0x1c; ret; 
0x000ec1e9: add byte ptr [eax], al; jne 0xec237; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ec299: add byte ptr [eax], al; jne 0xec2e7; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ec349: add byte ptr [eax], al; jne 0xec397; add esp, 0x74; pop ebx; pop esi; ret; 
0x000eda5c: add byte ptr [eax], al; jne 0xedb10; add esp, 0x24; pop ebx; pop esi; ret; 
0x000edbac: add byte ptr [eax], al; jne 0xedc60; add esp, 0x24; pop ebx; pop esi; ret; 
0x000ee7cf: add byte ptr [eax], al; jne 0xee833; add esp, 0xd4; pop ebx; pop esi; ret; 
0x000ef13e: add byte ptr [eax], al; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000f471a: add byte ptr [eax], al; jne 0xf4724; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f504a: add byte ptr [eax], al; jne 0xf5064; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f5116: add byte ptr [eax], al; jne 0xf512c; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f56dd: add byte ptr [eax], al; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x000f576f: add byte ptr [eax], al; jne 0xf57d6; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x000f5f0b: add byte ptr [eax], al; jne 0xf5f22; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f5f66: add byte ptr [eax], al; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f62bf: add byte ptr [eax], al; jne 0xf62e7; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f63ce: add byte ptr [eax], al; jne 0xf647f; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000f64f2: add byte ptr [eax], al; jne 0xf6514; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f65ba: add byte ptr [eax], al; jne 0xf65cb; add esp, 0x54; pop ebx; pop esi; ret; 
0x000f726b: add byte ptr [eax], al; jne 0xf72ce; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f732b: add byte ptr [eax], al; jne 0xf738e; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f73f3: add byte ptr [eax], al; jne 0xf7476; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f74d3: add byte ptr [eax], al; jne 0xf7556; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f75d3: add byte ptr [eax], al; jne 0xf75db; add esp, 0x1c; ret; 
0x000f7e02: add byte ptr [eax], al; jne 0xf7e2f; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f814c: add byte ptr [eax], al; jne 0xf815f; add esp, 0x3c; ret; 
0x000f81bd: add byte ptr [eax], al; jne 0xf81c5; add esp, 0x1c; ret; 
0x000f91c3: add byte ptr [eax], al; jne 0xf91df; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f928d: add byte ptr [eax], al; jne 0xf92af; add esp, 0x24; pop ebx; pop esi; ret; 
0x000fad1f: add byte ptr [eax], al; jne 0xfad40; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000fbc27: add byte ptr [eax], al; jne 0xfbc2f; add esp, 0x1c; ret; 
0x000fce23: add byte ptr [eax], al; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x000ff350: add byte ptr [eax], al; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x00028106: add byte ptr [eax], al; lea eax, [eax + 0x10e0]; ret; 
0x001628f9: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x00162922: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x00162937: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x00162947: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x0016288f: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x00162957: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001628c2: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0004508e: add byte ptr [eax], al; lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00161d69: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x00161fc7: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x00161fd7: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x00161fe7: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x00161d16: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00161ff7: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00161d40: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00160c94: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00160c4e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00161917: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x00161927: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x00160bf1: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x00161937: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00160bab: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00161171: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161196: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x001611e9: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x001611c0: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x00162390: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x001623b9: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x001623ce: add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x00162343: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x00162366: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0009f2ce: add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x0012368b: add byte ptr [eax], al; lea ebx, [eax + 7]; and eax, 7; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x000192e1: add byte ptr [eax], al; lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00040e9a: add byte ptr [eax], al; lea ebx, [ebp + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4cc: add byte ptr [eax], al; lea ebx, [ebp + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d7ff: add byte ptr [eax], al; lea ebx, [ebp + 0x193c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791ae: add byte ptr [eax], al; lea ebx, [ebp + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e20a: add byte ptr [eax], al; lea ebx, [ebp + 0x1df0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df86: add byte ptr [eax], al; lea ebx, [ebp + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b5586: add byte ptr [eax], al; lea ebx, [ebp + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001370a2: add byte ptr [eax], al; lea ebx, [ebp + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000336b2: add byte ptr [eax], al; lea ebx, [ebx + 0x1284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345e2: add byte ptr [eax], al; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043043: add byte ptr [eax], al; lea ebx, [ebx + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3c2: add byte ptr [eax], al; lea ebx, [ebx + 0x1900]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f136: add byte ptr [eax], al; lea ebx, [ebx + 0x190c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f402: add byte ptr [eax], al; lea ebx, [ebx + 0x1910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007afe6: add byte ptr [eax], al; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c166: add byte ptr [eax], al; lea ebx, [ebx + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b53ca: add byte ptr [eax], al; lea ebx, [ebx + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c18a7: add byte ptr [eax], al; lea ebx, [ebx + 0x2180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22d2: add byte ptr [eax], al; lea ebx, [ebx + 0x219c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2476: add byte ptr [eax], al; lea ebx, [ebx + 0x21b4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2636: add byte ptr [eax], al; lea ebx, [ebx + 0x21cc]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29ea: add byte ptr [eax], al; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4107: add byte ptr [eax], al; lea ebx, [ebx + 0x2218]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c44a2: add byte ptr [eax], al; lea ebx, [ebx + 0x223c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4656: add byte ptr [eax], al; lea ebx, [ebx + 0x2260]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4806: add byte ptr [eax], al; lea ebx, [ebx + 0x2284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48ea: add byte ptr [eax], al; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001040f2: add byte ptr [eax], al; lea ebx, [ebx + 0x27c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a6: add byte ptr [eax], al; lea ebx, [ebx + 0x2808]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104486: add byte ptr [eax], al; lea ebx, [ebx + 0x284c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104687: add byte ptr [eax], al; lea ebx, [ebx + 0x2888]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c7a: add byte ptr [eax], al; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a8c: add byte ptr [eax], al; lea ebx, [ebx + 0x28a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cf2: add byte ptr [eax], al; lea ebx, [ebx + 0x28c0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea6: add byte ptr [eax], al; lea ebx, [ebx + 0x28d8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106066: add byte ptr [eax], al; lea ebx, [ebx + 0x28f4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106297: add byte ptr [eax], al; lea ebx, [ebx + 0x290c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010669a: add byte ptr [eax], al; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011083a: add byte ptr [eax], al; lea ebx, [ebx + 0x29e4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110922: add byte ptr [eax], al; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011149a: add byte ptr [eax], al; lea ebx, [ebx + 0x2a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111582: add byte ptr [eax], al; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d86: add byte ptr [eax], al; lea ebx, [ebx + 0x2a80]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001121a2: add byte ptr [eax], al; lea ebx, [ebx + 0x2aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112282: add byte ptr [eax], al; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112636: add byte ptr [eax], al; lea ebx, [ebx + 0x2ac8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b36: add byte ptr [eax], al; lea ebx, [ebx + 0x2aec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e6: add byte ptr [eax], al; lea ebx, [ebx + 0x2b10]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135c2: add byte ptr [eax], al; lea ebx, [ebx + 0x2b34]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001136a2: add byte ptr [eax], al; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116b56: add byte ptr [eax], al; lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011773a: add byte ptr [eax], al; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a32: add byte ptr [eax], al; lea ebx, [ebx + 0x2c78]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117be6: add byte ptr [eax], al; lea ebx, [ebx + 0x2c90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200ce: add byte ptr [eax], al; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121746: add byte ptr [eax], al; lea ebx, [ebx + 0x31e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f52: add byte ptr [eax], al; lea ebx, [ebx + 0x3358]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129106: add byte ptr [eax], al; lea ebx, [ebx + 0x336c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b6: add byte ptr [eax], al; lea ebx, [ebx + 0x3380]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001293a2: add byte ptr [eax], al; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b24e: add byte ptr [eax], al; lea ebx, [ebx + 0x3400]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e342: add byte ptr [eax], al; lea ebx, [ebx + 0x3410]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374d2: add byte ptr [eax], al; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cc66: add byte ptr [eax], al; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdab: add byte ptr [eax], al; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x000333f9: add byte ptr [eax], al; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b83: add byte ptr [eax], al; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0002b710: add byte ptr [eax], al; lea ebx, [edi + 0x11a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00041082: add byte ptr [eax], al; lea ebx, [edi + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004359e: add byte ptr [eax], al; lea ebx, [edi + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006afef: add byte ptr [eax], al; lea ebx, [edi + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776e0: add byte ptr [eax], al; lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2f0: add byte ptr [eax], al; lea ebx, [edi + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080970: add byte ptr [eax], al; lea ebx, [edi + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa816: add byte ptr [eax], al; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118186: add byte ptr [eax], al; lea ebx, [edi + 0x2ca0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4ba: add byte ptr [eax], al; lea ebx, [edi + 0x2cac]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011f26a: add byte ptr [eax], al; lea ebx, [edi + 0x2f70]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e46: add byte ptr [eax], al; lea ebx, [edi + 0x3264]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cf02: add byte ptr [eax], al; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002a78f: add byte ptr [eax], al; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d67c: add byte ptr [eax], al; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x000f5d0a: add byte ptr [eax], al; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000c5e0e: add byte ptr [eax], al; lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0007777c: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0012e0d2: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x000bf328: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f8261: add byte ptr [eax], al; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001014b8: add byte ptr [eax], al; lea edi, [esp + 0x14]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000bfe39: add byte ptr [eax], al; lea edx, [edx + 0xfe0]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00132e91: add byte ptr [eax], al; lea edx, [edx - 0x4e0]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0011b8ac: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b974: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000c671b: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ed711: add byte ptr [eax], al; lea edx, [esp + 0x14]; test eax, eax; jne 0xed860; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00062758: add byte ptr [eax], al; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c6c: add byte ptr [eax], al; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adfc: add byte ptr [eax], al; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9c2: add byte ptr [eax], al; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b36c: add byte ptr [eax], al; lea edx, [esp + 0x34]; push edx; call eax; 
0x000f5c7f: add byte ptr [eax], al; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00040d3d: add byte ptr [eax], al; lea edx, [esp + 0x3c]; push edx; call eax; 
0x00129f4d: add byte ptr [eax], al; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x000607f7: add byte ptr [eax], al; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a83: add byte ptr [eax], al; lea edx, [esp + 0xcc]; push edx; call eax; 
0x000f577e: add byte ptr [eax], al; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00160a08: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x000f856b: add byte ptr [eax], al; lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009d2bb: add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0009ce8b: add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000617fb: add byte ptr [eax], al; lea esi, [esi]; jmp eax; 
0x001632f7: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00160dca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00160dda: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00160dea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00160dfa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00160e0a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00160d5a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00160d6a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00160d7a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00160d8a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00160d9a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00160daa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00160dba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0016122a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0016121a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0016120a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001611fa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0016129a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0016128a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0016127a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0016358a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0016126a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0016125a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0016124a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0016123a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001623c8: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x00162ba0: add byte ptr [eax], al; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x0008ce1b: add byte ptr [eax], al; lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0008ecc7: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00139b5b: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x00079cbb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0015ce88: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x15ce99; neg eax; ret; 
0x000b25aa: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xb25b9; neg eax; ret; 
0x000b27a8: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000b27bb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000b27cb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000b27db: add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000b27eb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000b27fb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000b280b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x0003385b: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001316cb: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00145aab: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00079d28: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca57: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001632ca: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x0008ecea: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0009135b: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0008cf7a: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008ed4b: add byte ptr [eax], al; lea esi, [esi]; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b2789: add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00161dd9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00161de9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00161df9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00161e09: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00161e19: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00161d79: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00161d89: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00161d99: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00161da9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00161db9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00161dc9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00160d49: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x00160d39: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x00162439: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x00162449: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x00162459: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x00162469: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001623d9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001623e9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001623f9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x00162409: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x00162419: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x00162429: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x001237a6: add byte ptr [eax], al; lea esi, [esi]; nop; mov eax, 1; ret; 
0x000291d9: add byte ptr [eax], al; lea esi, [esi]; nop; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0008ecd9: add byte ptr [eax], al; lea esi, [esi]; nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x00123eb6: add byte ptr [eax], al; lea esi, [esi]; nop; ret; 
0x00079d16: add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0008ecb8: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0015ed1b: add byte ptr [eax], al; lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x00079ceb: add byte ptr [eax], al; lea esi, [esi]; ret; 
0x000d028b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000b2598: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x00160e1a: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00079ccb: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x00098c6e: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008ecce: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008afe6: add byte ptr [eax], al; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x00116784: add byte ptr [eax], al; mov byte ptr [esi + 0x2c04], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0007b416: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0007b638: add byte ptr [eax], al; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5e8: add byte ptr [eax], al; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5b8: add byte ptr [eax], al; mov dword ptr [eax + 0x138], edx; ret; 
0x00079e5c: add byte ptr [eax], al; mov dword ptr [eax + 0x1964], 0; ret; 
0x0007b40f: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00132788: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00132758: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0011fb95: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00078be3: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0012598c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000df1cf: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000f9454: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; ret; 
0x0011a58d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001258f0: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0012591a: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x001258c4: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00125907: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0011fb9c: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000df1c8: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00078bea: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0007b41d: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x001258f7: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00129c30: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000845a7: add byte ptr [eax], al; mov dword ptr [ebx + 0x1e64], eax; add esp, 8; pop ebx; ret; 
0x0011cc68: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0013950a: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0013955d: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00139976: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x000ff3de: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0007b57e: add byte ptr [eax], al; mov dword ptr [edx + 0x128], eax; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b584: add byte ptr [eax], al; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b6ee: add byte ptr [eax], al; mov dword ptr [edx + 0x158], eax; ret; 
0x0011a594: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e1ad4: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x000438f6: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00107951: add byte ptr [eax], al; mov dword ptr [esi + 0x20], edx; pop esi; pop edi; ret; 
0x00078073: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00079b29: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0001917a: add byte ptr [eax], al; mov dword ptr [esi + 0xf8c], eax; pop esi; pop edi; ret; 
0x000c0995: add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00060940: add byte ptr [eax], al; mov dword ptr [esp + 0x18], 0; jmp eax; 
0x000608f0: add byte ptr [eax], al; mov dword ptr [esp + 0x18], 1; jmp eax; 
0x00025f0c: add byte ptr [eax], al; mov dword ptr [esp + 0x18], ecx; call eax; 
0x000bf282: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000f629c: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00031ddf: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00065bb8: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 0; jmp eax; 
0x00065b70: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x0007d7a0: add byte ptr [eax], al; mov dword ptr [esp + 0x28], ecx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push esi; call dword ptr [eax]; 
0x00065d08: add byte ptr [eax], al; mov dword ptr [esp + 0x40], 0x20; jmp eax; 
0x000672de: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x000672ce: add byte ptr [eax], al; mov dword ptr [esp + 0x58], 1; jmp ebx; 
0x00066608: add byte ptr [eax], al; mov dword ptr [esp + 0x60], 0; jmp eax; 
0x000615f8: add byte ptr [eax], al; mov dword ptr [esp + 0x64], 1; jmp eax; 
0x0006726e: add byte ptr [eax], al; mov dword ptr [esp + 0x64], 1; jmp ebx; 
0x0006727e: add byte ptr [eax], al; mov dword ptr [esp + 0x68], 1; jmp ebx; 
0x000eab31: add byte ptr [eax], al; mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000eb51c: add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x0007c7a6: add byte ptr [eax], al; mov dword ptr [esp + 0xc], ecx; neg edi; sub esp, 0xc; push edi; call dword ptr [ebp]; 
0x00069b8c: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x00129c5c: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00069a9d: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x001004f9: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001009b9: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00029476: add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00034150: add byte ptr [eax], al; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0012f094: add byte ptr [eax], al; mov dword ptr gs:[edx], eax; ret; 
0x000bf0cb: add byte ptr [eax], al; mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000bf482: add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x00030e21: add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ec7c0: add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000ed58e: add byte ptr [eax], al; mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ff508: add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00030dfe: add byte ptr [eax], al; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x00081cb6: add byte ptr [eax], al; mov eax, 0x16; add esp, 0xc; ret; 
0x000bf42d: add byte ptr [eax], al; mov eax, 0x197; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000c70ac: add byte ptr [eax], al; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000f5d10: add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00043828: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000c6f82: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000c6ee7: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000ffb8e: add byte ptr [eax], al; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00030f63: add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000eab38: add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000310cf: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00162ae4: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x000ed71d: add byte ptr [eax], al; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed6b2: add byte ptr [eax], al; mov eax, 0xdd; mov edx, esi; call dword ptr gs:[0x10]; 
0x00139d76: add byte ptr [eax], al; mov eax, 0xf0; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080029: add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338d6: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0002a62d: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010f1ef: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0002a756: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c6fb6: add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x0001b8c3: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000f5c3b: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003107b: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00030d7b: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0003186f: add byte ptr [eax], al; mov eax, 0xffffffff; pop edi; ret; 
0x00030eab: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000c5d83: add byte ptr [eax], al; mov eax, 1; int 0x80; 
0x0015ce8e: add byte ptr [eax], al; mov eax, 1; ja 0x15ce99; neg eax; ret; 
0x00031b26: add byte ptr [eax], al; mov eax, 1; ret; 
0x0011adbe: add byte ptr [eax], al; mov eax, 2; ret; 
0x00162a3b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x00162a94: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x001260f1: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003450f: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00078b35: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x78b30; ret; 
0x000fddae: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x40]; pop ebx; ret; 
0x000319d6: add byte ptr [eax], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000fdacd: add byte ptr [eax], al; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0007b1e9: add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0x7b1f3; call eax; 
0x000294ad: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00029622: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012d53d: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x0012a638: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0009e76f: add byte ptr [eax], al; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x0006fa07: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x0005937d: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058a95: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x0005897c: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000584f5: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x000bc912: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x94]; add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x001240cc: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0002a858: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028571: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028746: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a5c]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00026214: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00084761: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00125dce: add byte ptr [eax], al; mov eax, dword ptr [ebx + ecx*4 - 0x2a4]; pop ebx; pop esi; jmp eax; 
0x000bfe77: add byte ptr [eax], al; mov eax, dword ptr [ecx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000c01e6: add byte ptr [eax], al; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00163c2e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00028aaf: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028a87: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012cfcf: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001323e6: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0001b8b6: add byte ptr [eax], al; mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000bfc6f: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bfc41: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000d182e: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0013161e: add byte ptr [eax], al; mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x000c7692: add byte ptr [eax], al; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x00102706: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x1025c0; add esp, 4; ret; 
0x0012385a: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0012c437: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x20]; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x000eab2a: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x24c]; mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00065dfa: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x48]; movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x001629de: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00079d2e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca5e: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x000eb2d8: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000821d3: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00136ec4: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013a139: add byte ptr [eax], al; mov eax, ebx; pop ebx; ret; 
0x00031649: add byte ptr [eax], al; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00031c97: add byte ptr [eax], al; mov eax, ecx; ret; 
0x00073a06: add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0009b82e: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00069a16: add byte ptr [eax], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001618fe: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00137b5d: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x001476af: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007377b: add byte ptr [eax], al; mov eax, edx; ret; 
0x000fd94e: add byte ptr [eax], al; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x000505f0: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0013f79f: add byte ptr [eax], al; mov eax, esi; ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x0010177e: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000f5d37: add byte ptr [eax], al; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x001013f4: add byte ptr [eax], al; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x0010151e: add byte ptr [eax], al; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000ecc50: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000f91a0: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x000739f8: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00030e3b: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eaba7: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x001455f2: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001016f0: add byte ptr [eax], al; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x00119b73: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00101c0a: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00101bba: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0010c6ab: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00040f49: add byte ptr [eax], al; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0016801c: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov edx, dword ptr [ebx + esi*4 - 0x53538]; add edx, ebx; jmp edx; 
0x00166312: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x000ddb5b: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; movzx edx, byte ptr [esi + 0x18]; mov ecx, dword ptr [ebx + edx*4 - 0x5fed8]; add ecx, ebx; jmp ecx; 
0x000b4024: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000eb3a3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00031174: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0013f78b: add byte ptr [eax], al; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00030e0a: add byte ptr [eax], al; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000338db: add byte ptr [eax], al; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0007cde6: add byte ptr [eax], al; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008158c: add byte ptr [eax], al; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f73d6: add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00031154: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000f6e1b: add byte ptr [eax], al; mov ebx, edx; mov eax, 0x17a; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70fb: add byte ptr [eax], al; mov ebx, edx; mov eax, 0x17b; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000ecad0: add byte ptr [eax], al; mov ebx, edx; ret; 
0x000f56fb: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000f5d32: add byte ptr [eax], al; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fb6: add byte ptr [eax], al; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007accb: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000192e7: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0002a78a: add byte ptr [eax], al; mov ecx, 0x81; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cde1: add byte ptr [eax], al; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081587: add byte ptr [eax], al; mov ecx, 0x81; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001948f: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000339a4: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033ade: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0001cdb1: add byte ptr [eax], al; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a75b: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009e2aa: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x000311b6: add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0013f786: add byte ptr [eax], al; mov ecx, 9; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0006994d: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x000ce727: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x2c]; mov edi, dword ptr [ecx + eax*4 - 0x603cc]; add edi, ecx; jmp edi; 
0x000ccd5f: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x34]; mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x000739fd: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00101ccc: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000bc9d3: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x94]; add ecx, dword ptr [ecx + eax*4 - 0x60bac]; jmp ecx; 
0x000c7b17: add byte ptr [eax], al; mov ecx, dword ptr [edx + eax*4 - 0x60590]; add ecx, edx; jmp ecx; 
0x000e08af: add byte ptr [eax], al; mov ecx, dword ptr [esi + eax*4 - 0x5fa08]; add ecx, esi; jmp ecx; 
0x000ec3a4: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0014557d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010166d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00025f4d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x000bf487: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x000f4531: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000ff6e7: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f4e9f: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0x58]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000bf432: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000ed21e: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7c9f: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x00050f34: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e1df4: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec084: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b42f4: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00030e18: add byte ptr [eax], al; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000bef4d: add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000beed1: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00031cc0: add byte ptr [eax], al; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000c5bbb: add byte ptr [eax], al; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x000c07d3: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000f453a: add byte ptr [eax], al; mov edi, 8; call dword ptr gs:[0x10]; 
0x00051da9: add byte ptr [eax], al; mov edi, dword ptr [ebp - 0x59c]; movzx eax, al; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x00101841: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000f6ca5: add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6f85: add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f69a9: add byte ptr [eax], al; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000c7026: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x000c6f61: add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000c6f24: add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000c6f87: add byte ptr [eax], al; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000c6f46: add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000c6eec: add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000f9971: add byte ptr [eax], al; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00019494: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x000333f4: add byte ptr [eax], al; mov edx, 1; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b7e: add byte ptr [eax], al; mov edx, 1; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00080024: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338d1: add byte ptr [eax], al; mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00073776: add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x000339a9: add byte ptr [eax], al; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000f5fe8: add byte ptr [eax], al; mov edx, 1; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00033ae3: add byte ptr [eax], al; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0007acd0: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0012c415: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00101593: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00132df6: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x132e08; add esp, 0xc; ret; 
0x00132e36: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x132e48; add esp, 0xc; ret; 
0x001249d0: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x000ec670: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c69e8: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; test esi, esi; jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aa8: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; test esi, esi; jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ec8c4: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00143244: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f6e22: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f7b74: add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x0004180c: add byte ptr [eax], al; mov edx, eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0001cdb6: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ed6b7: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x000310d4: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x00033413: add byte ptr [eax], al; mov esi, dword ptr [ebp - 0x38]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ba842: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x14]; mov ecx, dword ptr [esi + eax*4 - 0x6135c]; add ecx, esi; jmp ecx; 
0x000db69d: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x30]; mov ecx, dword ptr [esi + eax*4 - 0x5feec]; add ecx, esi; jmp ecx; 
0x000f5c78: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x88]; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec7b9: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x90]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000f5fed: add byte ptr [eax], al; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000311e0: add byte ptr [eax], al; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000f9272: add byte ptr [eax], al; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00033ae8: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x000f6107: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x0009543e: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008ed6e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed7e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed5e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed8e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000953ae: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000953be: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0009853f: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0006163a: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a2: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a6a: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00066642: add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62880]; add ecx, ebx; jmp ecx; 
0x00066a7a: add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62980]; add ecx, ebx; jmp ecx; 
0x00065cbe: add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x00157977: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x001561ae: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00157997: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001579b7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001579d7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001579f7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x00157957: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0002df7f: add byte ptr [eax], al; movzx ecx, cl; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x000eb3ae: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x00162b2d: add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x00161fbd: add byte ptr [eax], al; nop; add edx, 1; jl 0x162080; lea eax, [ecx + 1]; ret; 
0x00078dad: add byte ptr [eax], al; nop; add esp, 4; pop ebx; pop esi; ret; 
0x0009d2ad: add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x0009cbdc: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0009d2cd: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0009ce9d: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x0009cead: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00079cfd: add byte ptr [eax], al; nop; call 0x13cee9; add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00031c2d: add byte ptr [eax], al; nop; call 0x13cee9; add eax, 0x1b23cb; mov eax, dword ptr [eax + 0x48]; ret; 
0x0001bead: add byte ptr [eax], al; nop; call 0x13cee9; add eax, 0x1c814b; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001b05d: add byte ptr [eax], al; nop; call 0x13cee9; add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x0009f2dc: add byte ptr [eax], al; nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000911fc: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00095a8c: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009120c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0008ce2c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0012596d: add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0012597d: add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008ed2d: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0008ed1c: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0008ecfd: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0006725d: add byte ptr [eax], al; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000c70fd: add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x0007b47c: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000c6fcc: add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x0007128c: add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x001237ad: add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x00125f9d: add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x00030e9c: add byte ptr [eax], al; nop; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0013d00d: add byte ptr [eax], al; nop; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x0007384d: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007373d: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00132a6d: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013cafd: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013ca8d: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0013ca6d: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00079d3d: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; ret; 
0x0008f95d: add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x001326ad: add byte ptr [eax], al; nop; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00163c6d: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008ed3c: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00163c3c: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0010cdba: add byte ptr [eax], al; nop; nop; ret; 
0x0007b46d: add byte ptr [eax], al; nop; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x00094aad: add byte ptr [eax], al; nop; pop edi; pop esi; pop ebx; ret; 
0x00098fed: add byte ptr [eax], al; nop; pop esi; ret; 
0x00123ebd: add byte ptr [eax], al; nop; ret; 
0x0012bbcd: add byte ptr [eax], al; nop; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000810fc: add byte ptr [eax], al; nop; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x0012378c: add byte ptr [eax], al; nop; xor eax, eax; add esp, 0xc; ret; 
0x0007aa5d: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0015e18d: add byte ptr [eax], al; nop; xor eax, eax; pop edi; pop ebx; ret; 
0x00079d1d: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0008ae0c: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0007b572: add byte ptr [eax], al; or byte ptr [eax], al; jbe 0x7b580; ret; 
0x0002fa8b: add byte ptr [eax], al; or byte ptr [ecx + 0x18d92414], 0xd9; add al, 0x24; add esp, 4; ret; 
0x0002faac: add byte ptr [eax], al; or byte ptr [ecx + 0x241cd902], 0xd9; add al, 0x24; add esp, 4; ret; 
0x0010ecfb: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0009e419: add byte ptr [eax], al; or cl, cl; jne 0x9e421; xor eax, eax; ret; 
0x0005009a: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0002f391: add byte ptr [eax], al; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x001016f5: add byte ptr [eax], al; or esi, 0x100; call dword ptr gs:[0x10]; 
0x0009cb06: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009cdde: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00030c2e: add byte ptr [eax], al; pop ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000ff3f9: add byte ptr [eax], al; pop ebx; add ebx, 0xe4c05; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000c6f4b: add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x000b6c07: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00043834: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; xor eax, eax; ret; 
0x0006a3c6: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0015f05e: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x15f070; neg eax; ret; 
0x0010795e: add byte ptr [eax], al; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x001265d3: add byte ptr [eax], al; pop ebx; mov eax, ecx; ret; 
0x0013284d: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0004a8e0: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0013e60e: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00031328: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x000ef26c: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000b2605: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x000d70e3: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x0013cb8a: add byte ptr [eax], al; pop ebx; pop esi; pop edi; jmp eax; 
0x0002191e: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00164701: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001bd76: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00030d2a: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0001a772: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00026e4e: add byte ptr [eax], al; pop ebx; ret; 
0x0007aa49: add byte ptr [eax], al; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000ac94e: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0015d34e: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x000438ef: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000f47a6: add byte ptr [eax], al; pop edi; cmova eax, edx; pop ebp; ret; 
0x000f4762: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x0001b223: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x0008e7f0: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00094acc: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b2433: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0012fdef: add byte ptr [eax], al; pop edi; ret; 
0x00124039: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00019180: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0009d910: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x001634be: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00075b80: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00040fbe: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000f7f28: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0006af55: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x28]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000eabf7: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x30]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000432dd: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007637a: add byte ptr [eax], al; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00075a4c: add byte ptr [eax], al; push 0; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x00130714: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0013e91e: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0012608b: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0010c238: add byte ptr [eax], al; push 0x1000002; call edx; 
0x00130f46: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x130c80; add esp, 0x1c; ret; 
0x00070417: add byte ptr [eax], al; push 1; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x00075db3: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000701e0: add byte ptr [eax], al; push 2; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00069394: add byte ptr [eax], al; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00075c8c: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0006ffa0: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x1c]; push edi; call dword ptr [ebx + 0x40]; 
0x0013e7de: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x001240e8: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0006af13: add byte ptr [eax], al; push dword ptr [esp + 0x14]; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00117263: add byte ptr [eax], al; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x00130f4b: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x130c80; add esp, 0x1c; ret; 
0x000ede5a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0xecd40; add esp, 0x1c; ret; 
0x000f604a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0xf6810; add esp, 0x1c; ret; 
0x000725c6: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6bbc0; add esp, 0x1c; ret; 
0x0012fcc4: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0007aa8e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013a148: add byte ptr [eax], al; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00113abb: add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x00129f31: add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00075aa3: add byte ptr [eax], al; push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x0013e7d7: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00075aaa: add byte ptr [eax], al; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x000fbbd1: add byte ptr [eax], al; push eax; call 0xfbd50; add esp, 0x1c; ret; 
0x000b3b1a: add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00024abe: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0001fc7e: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000229af: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x0002142f: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x0012ba98: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0012ba98: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00030204: add byte ptr [eax], al; push eax; ret; 
0x000322b0: add byte ptr [eax], al; push ebp; push edx; add esi, eax; push esi; call edi; 
0x000f62f6: add byte ptr [eax], al; push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ff5a9: add byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012db90: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x00025f5b: add byte ptr [eax], al; push ecx; call eax; 
0x0012f8a9: add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0013978f: add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 4]; 
0x001396e7: add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax]; 
0x000263e9: add byte ptr [eax], al; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0005844d: add byte ptr [eax], al; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c7d: add byte ptr [eax], al; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x000607fe: add byte ptr [eax], al; push edx; call eax; 
0x000e4cf1: add byte ptr [eax], al; push edx; push eax; call ebx; 
0x00129f54: add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x0001dc5d: add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001260ad: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x0006e2fc: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0002a66a: add byte ptr [eax], al; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001a6d2: add byte ptr [eax], al; ret; 
0x0010ecf5: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x0010ed94: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0001a769: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1938], edx; pop ebx; pop esi; ret; 
0x0001a6c9: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0010ecd7: add byte ptr [eax], al; ror ax, 8; ret; 
0x0001af0e: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007a788: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000793a1: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x000607ed: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00121476: add byte ptr [eax], al; ror edx, 9; xor edx, dword ptr gs:[0x18]; push edx; call eax; 
0x0012ab15: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000c7157: add byte ptr [eax], al; setne al; ret; 
0x00138e68: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000ea8b3: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0012fde0: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x000fce1c: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x0009e369: add byte ptr [eax], al; sub eax, edx; ret; 
0x000bff62: add byte ptr [eax], al; sub ecx, dword ptr gs:[0x14]; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfff5: add byte ptr [eax], al; sub ecx, dword ptr gs:[0x14]; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x00162919: add byte ptr [eax], al; sub edi, 0x10; jb 0x1629e0; lea eax, [eax + 0xf]; pop edi; ret; 
0x0016298e: add byte ptr [eax], al; sub edi, 0xa; jb 0x1629e0; lea eax, [eax + 9]; pop edi; ret; 
0x0016299e: add byte ptr [eax], al; sub edi, 0xb; jb 0x1629e0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001629ae: add byte ptr [eax], al; sub edi, 0xd; jb 0x1629e0; lea eax, [eax + 0xc]; pop edi; ret; 
0x001629be: add byte ptr [eax], al; sub edi, 0xe; jb 0x1629e0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001629ce: add byte ptr [eax], al; sub edi, 0xf; jb 0x1629e0; lea eax, [eax + 0xe]; pop edi; ret; 
0x0016292e: add byte ptr [eax], al; sub edi, 2; jb 0x1629e0; lea eax, [eax + 1]; pop edi; ret; 
0x00162886: add byte ptr [eax], al; sub edi, 4; jb 0x1629e0; lea eax, [eax + 3]; pop edi; ret; 
0x0016296e: add byte ptr [eax], al; sub edi, 7; jb 0x1629e0; lea eax, [eax + 6]; pop edi; ret; 
0x001628b9: add byte ptr [eax], al; sub edi, 8; jb 0x1629e0; lea eax, [eax + 7]; pop edi; ret; 
0x0016297e: add byte ptr [eax], al; sub edi, 9; jb 0x1629e0; lea eax, [eax + 8]; pop edi; ret; 
0x001618e9: add byte ptr [eax], al; sub edx, 0x10; jb 0x1619c0; lea eax, [edi + 0xf]; pop edi; ret; 
0x0016196e: add byte ptr [eax], al; sub edx, 0xa; jb 0x1619c0; lea eax, [edi + 9]; pop edi; ret; 
0x0016197e: add byte ptr [eax], al; sub edx, 0xb; jb 0x1619c0; lea eax, [edi + 0xa]; pop edi; ret; 
0x001618c0: add byte ptr [eax], al; sub edx, 0xc; jb 0x1619c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x0016198e: add byte ptr [eax], al; sub edx, 0xd; jb 0x1619c0; lea eax, [edi + 0xc]; pop edi; ret; 
0x0016199e: add byte ptr [eax], al; sub edx, 0xe; jb 0x1619c0; lea eax, [edi + 0xd]; pop edi; ret; 
0x001619ae: add byte ptr [eax], al; sub edx, 0xf; jb 0x1619c0; lea eax, [edi + 0xe]; pop edi; ret; 
0x00161855: add byte ptr [eax], al; sub edx, 4; jb 0x1619c0; lea eax, [edi + 3]; pop edi; ret; 
0x0016194e: add byte ptr [eax], al; sub edx, 7; jb 0x1619c0; lea eax, [edi + 6]; pop edi; ret; 
0x00161886: add byte ptr [eax], al; sub edx, 8; jb 0x1619c0; lea eax, [edi + 7]; pop edi; ret; 
0x0016195e: add byte ptr [eax], al; sub edx, 9; jb 0x1619c0; lea eax, [edi + 8]; pop edi; ret; 
0x00031523: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x00031e7b: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031eeb: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x000508c7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x0002f35f: add byte ptr [eax], al; sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x00075586: add byte ptr [eax], al; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x0012d5a6: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push esi; call dword ptr [eax + 0x10]; 
0x00124019: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00124d36: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00126268: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000767dd: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0011730a: add byte ptr [eax], al; sub esp, 0xc; push esi; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0012a63e: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007892d: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0013f259: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00071b68: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006bef3: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00083506: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x0007946b: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x0006be21: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00108276: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x20]; push 0; push 0x2000004; call eax; 
0x000823a0: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00081ffa: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x3c]; push ecx; push ebx; call eax; 
0x00075039: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x00061901: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000613ae: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [ebx + 0x1c]; 
0x000322f6: add byte ptr [eax], al; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x000322c2: add byte ptr [eax], al; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x34]; call edi; 
0x0006bcbb: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x00065885: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x0005ed83: add byte ptr [eax], al; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639dc: add byte ptr [eax], al; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x00060d23: add byte ptr [eax], al; sub esp, 4; push ebx; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0005ea32: add byte ptr [eax], al; sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00065fad: add byte ptr [eax], al; sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x0013e448: add byte ptr [eax], al; sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x00076169: add byte ptr [eax], al; sub esp, 4; push ecx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0008053e: add byte ptr [eax], al; sub esp, 4; push ecx; push edx; push ebx; call eax; 
0x0006a46d: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006060c: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [esp + 0x18]; push esi; call dword ptr [ebx + 0x1c]; 
0x00066c79: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00082982: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call eax; 
0x00082c77: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [esp + 0x6c]; push ebp; call eax; 
0x00067369: add byte ptr [eax], al; sub esp, 4; push esi; push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x00068de3: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075532: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x24]; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x000751c9: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x34]; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x0006fcc5: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x3c]; push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0013e791: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x000bf0ad: add byte ptr [eax], al; sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x00075875: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x34]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0012b4a9: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00126696: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0012fa9e: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00125a3f: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x000f6614: add byte ptr [eax], al; sub esp, 8; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001260f7: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00068fc6: add byte ptr [eax], al; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x0012fbcc: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x00082130: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push edx; call eax; 
0x00124000: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00080276: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x00129f80: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000bf060: add byte ptr [eax], al; sub esp, 8; push edi; push ebx; call eax; 
0x0008344b: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00082af7: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [esp + 0x6c]; call eax; 
0x001611e0: add byte ptr [eax], al; test ah, 0x20; jne 0x161280; lea eax, [edi - 4]; pop edi; ret; 
0x00161d60: add byte ptr [eax], al; test ah, 0x20; jne 0x161e00; lea eax, [ecx + 0xc]; ret; 
0x00160d24: add byte ptr [eax], al; test ah, 0x40; jne 0x160e10; lea eax, [edi + 0xf]; pop edi; ret; 
0x001616e0: add byte ptr [eax], al; test ah, 0x40; jne 0x161820; lea eax, [edi + 0xf]; pop edi; ret; 
0x001623b0: add byte ptr [eax], al; test ah, 0x40; jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x001611b7: add byte ptr [eax], al; test ah, 2; jne 0x161250; lea eax, [edi - 8]; pop edi; ret; 
0x00161d37: add byte ptr [eax], al; test ah, 2; jne 0x161dd0; lea eax, [ecx + 8]; ret; 
0x001616b7: add byte ptr [eax], al; test ah, 4; jne 0x1617f0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00162387: add byte ptr [eax], al; test ah, 4; jne 0x162440; lea eax, [edx + 0xb]; ret; 
0x0016118e: add byte ptr [eax], al; test al, 0x20; jne 0x161220; lea eax, [edi - 0xc]; pop edi; ret; 
0x00161d0e: add byte ptr [eax], al; test al, 0x20; jne 0x161da0; lea eax, [ecx + 4]; ret; 
0x00160cd2: add byte ptr [eax], al; test al, 0x40; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x0016168e: add byte ptr [eax], al; test al, 0x40; jne 0x1617c0; lea eax, [edi + 7]; pop edi; ret; 
0x0016235e: add byte ptr [eax], al; test al, 0x40; jne 0x162410; lea eax, [edx + 7]; ret; 
0x001634a3: add byte ptr [eax], al; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161169: add byte ptr [eax], al; test al, 2; jne 0x1611f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161b89: add byte ptr [eax], al; test al, 2; jne 0x161d70; mov eax, ecx; ret; 
0x0016166b: add byte ptr [eax], al; test al, 4; jne 0x161790; lea eax, [edi + 3]; pop edi; ret; 
0x0016233b: add byte ptr [eax], al; test al, 4; jne 0x1623e0; lea eax, [edx + 3]; ret; 
0x0013cbce: add byte ptr [eax], al; test al, al; jne 0x13cbf4; mov eax, 4; add esp, 0xc; ret; 
0x001627b7: add byte ptr [eax], al; test dh, 4; jne 0x162b5d; add eax, 0xb; pop edi; ret; 
0x00160ba2: add byte ptr [eax], al; test dl, 0x40; jne 0x160e20; lea eax, [edi + 7]; pop edi; ret; 
0x00162790: add byte ptr [eax], al; test dl, 0x40; jne 0x162b49; add eax, 7; pop edi; ret; 
0x00163210: add byte ptr [eax], al; test dl, 0xf; jne 0x163350; lea eax, [ecx + 4]; ret; 
0x00160be8: add byte ptr [eax], al; test dl, 4; jne 0x160e20; lea eax, [edi + 3]; pop edi; ret; 
0x0016276a: add byte ptr [eax], al; test dl, 4; jne 0x162b35; add eax, 3; pop edi; ret; 
0x0010c679: add byte ptr [eax], al; test eax, eax; je 0x10c688; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0011fb69: add byte ptr [eax], al; test eax, eax; je 0x11fb78; add esp, 8; pop ebx; ret; 
0x00124573: add byte ptr [eax], al; test eax, eax; je 0x124580; add esp, 8; pop ebx; ret; 
0x00069b82: add byte ptr [eax], al; test eax, eax; je 0x69b98; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x000beec8: add byte ptr [eax], al; test eax, eax; je 0xbef20; mov eax, 0x196; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001010ff: add byte ptr [eax], al; test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001011aa: add byte ptr [eax], al; test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001013eb: add byte ptr [eax], al; test eax, eax; jne 0x101418; mov eax, 0x75; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x0012ff25: add byte ptr [eax], al; test eax, eax; jne 0x12ff10; add esp, 8; pop ebx; ret; 
0x0013f776: add byte ptr [eax], al; test eax, eax; jne 0x13f79b; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000311ad: add byte ptr [eax], al; test eax, eax; jne 0x311d8; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00035285: add byte ptr [eax], al; test eax, eax; jne 0x352b0; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000c58aa: add byte ptr [eax], al; test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c5ab9: add byte ptr [eax], al; test eax, eax; jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea36f: add byte ptr [eax], al; test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea41f: add byte ptr [eax], al; test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ed0b5: add byte ptr [eax], al; test eax, eax; jne 0xed0e0; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed155: add byte ptr [eax], al; test eax, eax; jne 0xed180; mov eax, 4; call dword ptr gs:[0x10]; 
0x000ed6aa: add byte ptr [eax], al; test eax, eax; jne 0xed820; mov eax, 0xdd; mov edx, esi; call dword ptr gs:[0x10]; 
0x000ed92e: add byte ptr [eax], al; test eax, eax; jne 0xed958; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000edc7d: add byte ptr [eax], al; test eax, eax; jne 0xedca0; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eddd1: add byte ptr [eax], al; test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f4445: add byte ptr [eax], al; test eax, eax; jne 0xf4470; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000f4de3: add byte ptr [eax], al; test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f5453: add byte ptr [eax], al; test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55d3: add byte ptr [eax], al; test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f6855: add byte ptr [eax], al; test eax, eax; jne 0xf6880; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68f5: add byte ptr [eax], al; test eax, eax; jne 0xf6920; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f6a5f: add byte ptr [eax], al; test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6bcf: add byte ptr [eax], al; test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f785f: add byte ptr [eax], al; test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f7a3d: add byte ptr [eax], al; test eax, eax; jne 0xf7a60; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7add: add byte ptr [eax], al; test eax, eax; jne 0xf7b00; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000fa24f: add byte ptr [eax], al; test eax, eax; jne 0xfa260; sub dword ptr [edx + 0x24f0], 1; ret; 
0x000fae55: add byte ptr [eax], al; test eax, eax; jne 0xfae80; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000ff4ff: add byte ptr [eax], al; test eax, eax; jne 0xff530; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000ff7ea: add byte ptr [eax], al; test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff89a: add byte ptr [eax], al; test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff94a: add byte ptr [eax], al; test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ffa03: add byte ptr [eax], al; test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ffab5: add byte ptr [eax], al; test eax, eax; jne 0xffae0; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00127ede: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0007bdbf: add byte ptr [eax], al; test ecx, ecx; jne 0x7bdd0; ret; 
0x000c7482: add byte ptr [eax], al; test ecx, ecx; js 0xc7490; ret; 
0x000c595c: add byte ptr [eax], al; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000fab22: add byte ptr [eax], al; test edx, edx; je 0xfab2e; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x000c2167: add byte ptr [eax], al; test edx, edx; jne 0xc21a0; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000c66d3: add byte ptr [eax], al; test edx, edx; jne 0xc6708; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c6783: add byte ptr [eax], al; test edx, edx; jne 0xc67b8; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000f7247: add byte ptr [eax], al; test edx, edx; jne 0xf7280; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f7307: add byte ptr [eax], al; test edx, edx; jne 0xf7340; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0009e71d: add byte ptr [eax], al; xor byte ptr [esi - 0x19], 0x89; ret; 
0x000c01f3: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000c099c: add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00107974: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000f52ba: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x000fdda3: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000b2412: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x0009cb7e: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00080f0a: add byte ptr [eax], al; xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x0002e66e: add byte ptr [eax], al; xor eax, eax; ret; 
0x000f47f3: add byte ptr [eax], al; xor eax, eax; sar ebp, 0x1f; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00034d1b: add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x0001af39: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000bee58: add byte ptr [eax], al; xor ecx, ecx; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00030e40: add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eabac: add byte ptr [eax], al; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007acd5: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007adcb: add byte ptr [eax], al; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0002a760: add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014ec8f: add byte ptr [eax], bh; ret 0x840f; 
0x0015d563: add byte ptr [eax], bh; std; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x00160649: add byte ptr [eax], bh; std; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x00028fac: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x000fd67c: add byte ptr [eax], cl; add byte ptr [ebp - 0x5b32780], cl; call dword ptr [eax - 0x18]; 
0x0016543b: add byte ptr [eax], cl; add byte ptr [edi], cl; test edi, esi; add byte ptr [eax], al; add byte ptr [ebx - 0x768fdbbc], cl; ret 0x44c7; 
0x0007b573: add byte ptr [eax], cl; add byte ptr [esi + 8], dh; ret; 
0x0009e41a: add byte ptr [eax], cl; leave; jne 0x9e421; xor eax, eax; ret; 
0x000737a5: add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x0003ac29: add byte ptr [eax], dl; add byte ptr [eax - 0x3b7cfb0c], al; adc byte ptr [ecx], cl; ret 0x850f; 
0x000c5e17: add byte ptr [eax], dl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103d84: add byte ptr [eax], dl; add byte ptr [eax], al; mov eax, edx; ret; 
0x000290ec: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x00031321: add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x00138c5c: add byte ptr [ebp + 0x10], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00027958: add byte ptr [ebp + 0x10c086], cl; add byte ptr [ecx + 0x10d086], cl; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x0005ddaa: add byte ptr [ebp + 0x10e74c0], al; ret; 
0x0002a790: add byte ptr [ebp + 0x11549a], cl; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000ec7f3: add byte ptr [ebp + 0x11], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00031e83: add byte ptr [ebp + 0x11], dh; add esp, 0x98; pop ebx; ret; 
0x0015ddfc: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0002b711: add byte ptr [ebp + 0x11a89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000192e2: add byte ptr [ebp + 0x12649d], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000333fa: add byte ptr [ebp + 0x128499], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000336b3: add byte ptr [ebp + 0x12849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001275ea: add byte ptr [ebp + 0x12], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000f5117: add byte ptr [ebp + 0x12], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00138bdb: add byte ptr [ebp + 0x13], dh; add esp, 0x18; pop ebx; ret; 
0x000f5f0c: add byte ptr [ebp + 0x13], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x000ff351: add byte ptr [ebp + 0x13], dh; add esp, 0x38; pop ebx; ret; 
0x000eb3f0: add byte ptr [ebp + 0x14], dh; add esp, 0x1c; ret; 
0x000744c1: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00100531: add byte ptr [ebp + 0x15], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012e4df: add byte ptr [ebp + 0x15], dh; add esp, 0x28; pop ebx; ret; 
0x000f504b: add byte ptr [ebp + 0x16], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x000345e3: add byte ptr [ebp + 0x17009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00040e9b: add byte ptr [ebp + 0x17209d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00041083: add byte ptr [ebp + 0x17209f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ed2dd: add byte ptr [ebp + 0x17], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001396d8: add byte ptr [ebp + 0x17], dh; add esp, 0x28; pop ebx; ret; 
0x000c7ecc: add byte ptr [ebp + 0x17], dh; add esp, 0x78; pop ebx; ret; 
0x000f91c4: add byte ptr [ebp + 0x18], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009591c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0008ce1c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00043044: add byte ptr [ebp + 0x18ec9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004359f: add byte ptr [ebp + 0x18ec9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3c3: add byte ptr [ebp + 0x19009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f137: add byte ptr [ebp + 0x190c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f403: add byte ptr [ebp + 0x19109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4cd: add byte ptr [ebp + 0x19289d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006aff0: add byte ptr [ebp + 0x19289f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d800: add byte ptr [ebp + 0x193c9d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2725: add byte ptr [ebp + 0x1958dc0], al; xor edx, edi; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000791af: add byte ptr [ebp + 0x195c9d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776e1: add byte ptr [ebp + 0x195c9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003152b: add byte ptr [ebp + 0x19], dh; add esp, 0x98; pop ebx; ret; 
0x001008cc: add byte ptr [ebp + 0x1a], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012e42f: add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0007afe7: add byte ptr [ebp + 0x1aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2f1: add byte ptr [ebp + 0x1aa09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00157a8c: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0008a6e4: add byte ptr [ebp + 0x1b8d2], 0; add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x000bf609: add byte ptr [ebp + 0x1b], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00132a1a: add byte ptr [ebp + 0x1c], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011ce4e: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x0004a0f6: add byte ptr [ebp + 0x1c], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x00136ebd: add byte ptr [ebp + 0x1d], dh; add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fad20: add byte ptr [ebp + 0x1d], dh; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0007e20b: add byte ptr [ebp + 0x1df09d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c167: add byte ptr [ebp + 0x1df89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df87: add byte ptr [ebp + 0x1df89d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080971: add byte ptr [ebp + 0x1df89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f64f3: add byte ptr [ebp + 0x1e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f928e: add byte ptr [ebp + 0x1e], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00037b4d: add byte ptr [ebp + 0x1e], dh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00100834: add byte ptr [ebp + 0x1f], dh; add esp, 0x18; pop ebx; ret; 
0x001005b4: add byte ptr [ebp + 0x1f], dh; add esp, 0x28; pop ebx; ret; 
0x000b53cb: add byte ptr [ebp + 0x20c89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b5587: add byte ptr [ebp + 0x20c89d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b6c88: add byte ptr [ebp + 0x21108a], cl; add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x000c18a8: add byte ptr [ebp + 0x21809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22d3: add byte ptr [ebp + 0x219c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2477: add byte ptr [ebp + 0x21b49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2637: add byte ptr [ebp + 0x21cc9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29eb: add byte ptr [ebp + 0x21d09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4108: add byte ptr [ebp + 0x22189b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c44a3: add byte ptr [ebp + 0x223c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4657: add byte ptr [ebp + 0x22609b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4807: add byte ptr [ebp + 0x22849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48eb: add byte ptr [ebp + 0x22889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001006a9: add byte ptr [ebp + 0x22], dh; add esp, 0x18; pop ebx; ret; 
0x000f844a: add byte ptr [ebp + 0x23809b], cl; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00145611: add byte ptr [ebp + 0x23], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009fa5c: add byte ptr [ebp + 0x2444c7c0], al; adc al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000acb5d: add byte ptr [ebp + 0x24], dh; add esp, 0x18; pop ebx; ret; 
0x000f62c0: add byte ptr [ebp + 0x24], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010af79: add byte ptr [ebp + 0x24], dh; pop ebx; pop esi; pop edi; ret; 
0x000fa277: add byte ptr [ebp + 0x24f09a], cl; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa817: add byte ptr [ebp + 0x24f09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c41fb: add byte ptr [ebp + 0x25], dh; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001196cb: add byte ptr [ebp + 0x26], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001632f8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00162ba1: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0008ecc8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0013ca58: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001237a7: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x00123eb7: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; ret; 
0x00079d17: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00083028: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x0015ce78: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013977a: add byte ptr [ebp + 0x27], dh; add esp, 0x28; pop ebx; ret; 
0x001040f3: add byte ptr [ebp + 0x27c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a7: add byte ptr [ebp + 0x28089b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104487: add byte ptr [ebp + 0x284c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104688: add byte ptr [ebp + 0x28889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c7b: add byte ptr [ebp + 0x288c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fcfc3: add byte ptr [ebp + 0x28], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000eca1c: add byte ptr [ebp + 0x28], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00105a8d: add byte ptr [ebp + 0x28a89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cf3: add byte ptr [ebp + 0x28c09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea7: add byte ptr [ebp + 0x28d89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106067: add byte ptr [ebp + 0x28f49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106298: add byte ptr [ebp + 0x290c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010669b: add byte ptr [ebp + 0x29109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f7e03: add byte ptr [ebp + 0x29], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011083b: add byte ptr [ebp + 0x29e49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110923: add byte ptr [ebp + 0x29e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011149b: add byte ptr [ebp + 0x2a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111583: add byte ptr [ebp + 0x2a509b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d87: add byte ptr [ebp + 0x2a809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00139633: add byte ptr [ebp + 0x2a], dh; add esp, 0x28; pop ebx; ret; 
0x001121a3: add byte ptr [ebp + 0x2aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112283: add byte ptr [ebp + 0x2aa49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112637: add byte ptr [ebp + 0x2ac89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b37: add byte ptr [ebp + 0x2aec9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e7: add byte ptr [ebp + 0x2b109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135c3: add byte ptr [ebp + 0x2b349b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001136a3: add byte ptr [ebp + 0x2b389b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00031524: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x00031e7c: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031eec: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x000508c8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x0012fde1: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x000fce1d: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x000bff63: add byte ptr [ebp + 0x2b], ah; or eax, 0x14; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfff6: add byte ptr [ebp + 0x2b], ah; or eax, 0x14; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x00137416: add byte ptr [ebp + 0x2b], dh; add esp, 0x18; pop ebx; ret; 
0x001606f2: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00116b57: add byte ptr [ebp + 0x2c4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011773b: add byte ptr [ebp + 0x2c549b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a33: add byte ptr [ebp + 0x2c789b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117be7: add byte ptr [ebp + 0x2c909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118187: add byte ptr [ebp + 0x2ca09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4bb: add byte ptr [ebp + 0x2cac9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013773c: add byte ptr [ebp + 0x2d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011f26b: add byte ptr [ebp + 0x2f709f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00126bbc: add byte ptr [ebp + 0x2f], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012ee7d: add byte ptr [ebp + 0x2f], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c0172: add byte ptr [ebp + 0x2f], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0001b63c: add byte ptr [ebp + 0x30], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e9e1f: add byte ptr [ebp + 0x31542444], cl; rol byte ptr [ebx - 0x17cfb14], cl; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x001200cf: add byte ptr [ebp + 0x31809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012fec0: add byte ptr [ebp + 0x31], dh; add esp, 0x1c; ret; 
0x00121b84: add byte ptr [ebp + 0x31e899], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00121747: add byte ptr [ebp + 0x31e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e47: add byte ptr [ebp + 0x32649f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00024fdd: add byte ptr [ebp + 0x32], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00128f53: add byte ptr [ebp + 0x33589b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129107: add byte ptr [ebp + 0x336c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b7: add byte ptr [ebp + 0x33809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001293a3: add byte ptr [ebp + 0x33849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b24f: add byte ptr [ebp + 0x34009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e343: add byte ptr [ebp + 0x34109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b907e: add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x001374d3: add byte ptr [ebp + 0x35849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001370a3: add byte ptr [ebp + 0x35849d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124c81: add byte ptr [ebp + 0x35], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f77c4: add byte ptr [ebp + 0x38], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x000316d1: add byte ptr [ebp + 0x38], dh; add esp, 0x28; pop ebx; ret; 
0x000e49b0: add byte ptr [ebp + 0x397f74d2], al; ret 0x7b74; 
0x0007c42a: add byte ptr [ebp + 0x39b974d2], al; ret 0xb574; 
0x000b42a5: add byte ptr [ebp + 0x3a], dh; add esp, 0x18; pop ebx; ret; 
0x000c112c: add byte ptr [ebp + 0x3a], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000aa3fb: add byte ptr [ebp + 0x3d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007e432: add byte ptr [ebp + 0x3d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0015f020: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x0011cc8a: add byte ptr [ebp + 0x3e], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000310f6: add byte ptr [ebp + 0x3e], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00034010: add byte ptr [ebp + 0x40080], cl; add byte ptr [eax - 1], dl; je 0x3403f; sbb al, 0xe8; maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x000dab70: add byte ptr [ebp + 0x40f6f004], cl; push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x001316cc: add byte ptr [ebp + 0x428b0076], cl; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00031419: add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0013a95c: add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x00122e1c: add byte ptr [ebp + 0x438b0076], cl; add al, 0x83; ret; 
0x001398a6: add byte ptr [ebp + 0x43], dh; add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x00145aac: add byte ptr [ebp + 0x448b0076], cl; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0011b46d: add byte ptr [ebp + 0x44], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0015ddc8: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x000f56de: add byte ptr [ebp + 0x46], dh; add esp, 0x18; pop ebx; ret; 
0x0003385c: add byte ptr [ebp + 0x478b0076], cl; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007e035: add byte ptr [ebp + 0x48486], cl; add al, ch; mov edi, 0x89ffffdb; ret; 
0x00070a12: add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x0012e63c: add byte ptr [ebp + 0x48], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000ec1ea: add byte ptr [ebp + 0x4a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0013a132: add byte ptr [ebp + 0x4a], dh; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x000aa24b: add byte ptr [ebp + 0x4d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00131a99: add byte ptr [ebp + 0x4f], dh; add esp, 0x18; pop ebx; ret; 
0x0009face: add byte ptr [ebp + 0x50342444], cl; push dword ptr [ebp + 8]; call ebx; 
0x000d6048: add byte ptr [ebp + 0x508b1904], cl; add al, 0xf7; ret 0xff00; 
0x0007777d: add byte ptr [ebp + 0x5128244c], cl; call eax; 
0x0012e0d3: add byte ptr [ebp + 0x5128244c], cl; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00045005: add byte ptr [ebp + 0x51], dh; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0011b8ad: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0011b975: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x000c671c: add byte ptr [ebp + 0x52102454], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00062759: add byte ptr [ebp + 0x52202454], cl; call eax; 
0x00067c6d: add byte ptr [ebp + 0x52242454], cl; call eax; 
0x0006adfd: add byte ptr [ebp + 0x52282454], cl; call eax; 
0x0013d9c3: add byte ptr [ebp + 0x52302454], cl; call eax; 
0x0006b36d: add byte ptr [ebp + 0x52342454], cl; call eax; 
0x00040d3e: add byte ptr [ebp + 0x523c2454], cl; call eax; 
0x000322b1: add byte ptr [ebp + 0x52], dl; add esi, eax; push esi; call edi; 
0x0013d67d: add byte ptr [ebp + 0x5328245c], cl; call eax; 
0x00131c4d: add byte ptr [ebp + 0x53], dh; add esp, 0x18; pop ebx; ret; 
0x000c66f8: add byte ptr [ebp + 0x53], dh; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f5d0b: add byte ptr [ebp + 0x540288], cl; add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x00139b5c: add byte ptr [ebp + 0x54890076], cl; and al, 0xc; call esi; 
0x0007637d: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x40]; 
0x0007effc: add byte ptr [ebp + 0x598b0076], cl; add al, 0xf6; ret; 
0x0013a9bb: add byte ptr [ebp + 0x5a], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00083053: add byte ptr [ebp + 0x5b0874c9], al; pop esi; pop edi; ret; 
0x000c6a11: add byte ptr [ebp + 0x5b], dh; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x000f56ec: add byte ptr [ebp + 0x5c8b0076], cl; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011b999: add byte ptr [ebp + 0x5c], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00131ce9: add byte ptr [ebp + 0x5d], dh; add esp, 0x18; pop ebx; ret; 
0x000d027f: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x0001d1c2: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000aa31b: add byte ptr [ebp + 0x5f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c218c: add byte ptr [ebp + 0x5f], dh; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000ee7d0: add byte ptr [ebp + 0x60], dh; add esp, 0xd4; pop ebx; pop esi; ret; 
0x000347f8: add byte ptr [ebp + 0x62], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f5770: add byte ptr [ebp + 0x63], dh; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00131712: add byte ptr [ebp + 0x64], dh; add esp, 0x18; pop ebx; ret; 
0x0008eceb: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ef96f: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0xef99d; xor bh, bh; jne 0xef989; call dword ptr [ebp + 0x24]; 
0x000f09ef: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0xf0a1d; xor bh, bh; jne 0xf0a09; call dword ptr [ebp + 0x24]; 
0x000ed6ab: add byte ptr [ebp + 0x6c850fc0], al; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012ea3d: add byte ptr [ebp + 0x72], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0007d4fd: add byte ptr [ebp + 0x74085], cl; add byte ptr [ecx + 0x391c2444], cl; ret; 
0x0012b2fc: add byte ptr [ebp + 0x78], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000bf25b: add byte ptr [ebp + 0x7d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000f73f4: add byte ptr [ebp + 0x7f], dh; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0006e318: add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00030d23: add byte ptr [ebp + 0xa], dh; add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x00083d71: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x00079a33: add byte ptr [ebp + 0xa], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00129f4e: add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x00107329: add byte ptr [ebp + 0xb6], cl; add al, ch; mov eax, 0x8100035b; ret 0xcccb; 
0x0015ce89: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x15ce99; neg eax; ret; 
0x000b27a9: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x00079cd9: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax - 1], bh; ret; 
0x000282f1: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000f5f67: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x001013b2: add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x000607f8: add byte ptr [ebp + 0xc42494], cl; add byte ptr [eax], al; push edx; call eax; 
0x0012e3b8: add byte ptr [ebp + 0xc], dh; add esp, 0x1c; ret; 
0x00065a84: add byte ptr [ebp + 0xcc2494], cl; add byte ptr [eax], al; push edx; call eax; 
0x00050e87: add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x000f65bb: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x0012e946: add byte ptr [ebp + 0xe], dh; add esp, 0x18; pop ebx; ret; 
0x0012e84f: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0010e8e4: add byte ptr [ebp + 0xe], dh; add esp, 0x2c; ret; 
0x0011b3a7: add byte ptr [ebp + 0xe], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0007adc7: add byte ptr [ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008ed4c: add byte ptr [ebp + 0xf660076], cl; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0001cc67: add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdac: add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0001cf03: add byte ptr [ebp + 0xf909f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b314d: add byte ptr [ebp + 0xf], dh; add esp, 0x18; pop ebx; ret; 
0x000f814d: add byte ptr [ebp + 0xf], dh; add esp, 0x3c; ret; 
0x000ec965: add byte ptr [ebp + 0xf], dh; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x0009135c: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a5386: add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x000a26ae: add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0xeeb; 
0x00148b42: add byte ptr [ebp + 4], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00034d6d: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003437b: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0012f70a: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x000309ea: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x000bf004: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x000b3218: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000b3278: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x001454dd: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f471b: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00132c32: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00100e22: add byte ptr [ebp + 6], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0012211f: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000b6e23: add byte ptr [ebp + 7], dh; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0011570f: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00132c91: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x000ef13f: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x000508cf: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x000fce24: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000fd863: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000bff6a: add byte ptr [ebp + 8], dh; add esp, 0x98; pop ebx; ret; 
0x0012fde8: add byte ptr [ebp + 8], dh; add esp, 0x98; pop edi; ret; 
0x0002fd17: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00045a45: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000314bc: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003427c: add byte ptr [ebp + 9], dh; add esp, 4; pop ebx; pop esi; ret; 
0x0015f054: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x000b6c8e: add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x0005381c: add byte ptr [ebp - 0x137cff8a], cl; or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x000ccd9c: add byte ptr [ebp - 0x137cff8a], cl; or al, 0x8d; xor bh, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0012fcdc: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0016beef: add byte ptr [ebp - 0x16f38b40], al; pop ss; add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x0016c024: add byte ptr [ebp - 0x17fa8b40], al; ret 0xf65c; 
0x00079487: add byte ptr [ebp - 0x18], dl; ret 0xff49; 
0x00069436: add byte ptr [ebp - 0x18], dl; ret; 
0x0007280c: add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x0006dafc: add byte ptr [ebp - 0x1abf7d], cl; call dword ptr [eax - 0x73]; 
0x0012368c: add byte ptr [ebp - 0x1f7cf8a8], cl; pop es; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x0001a6e0: add byte ptr [ebp - 0x25], dh; mov ecx, dword ptr [eax - 0x100]; cmp dword ptr [ecx + 0x94], edx; jne 0x1a6be; ret; 
0x0009f2cf: add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x000b2852: add byte ptr [ebp - 0x278afeb8], cl; mov eax, ecx; ret; 
0x000f875f: add byte ptr [ebp - 0x278afebf], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x0001a6ee: add byte ptr [ebp - 0x33], dh; ret; 
0x000b0e61: add byte ptr [ebp - 0x35f37b], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [esi - 1]; 
0x001633af: add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00101d1c: add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x0001be84: add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x000ac9bc: add byte ptr [ebp - 0x3b7cff8a], cl; or al, 0x29; ret; 
0x00127edf: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x00050eb4: add byte ptr [ebp - 0x3f6bf040], al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x000fb82c: add byte ptr [ebp - 0x3f7cff8a], cl; add dword ptr [ecx], edi; ret; 
0x000d028c: add byte ptr [ebp - 0x3fceff8a], cl; pop ebx; pop esi; ret; 
0x00079ccc: add byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x000f58ec: add byte ptr [ebp - 0x417ff8a], cl; push esi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000ff500: add byte ptr [ebp - 0x42d48a40], al; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f582c: add byte ptr [ebp - 0x4417ff8a], cl; push edi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000cb373: add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x000c8e6b: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x0011033f: add byte ptr [ebp - 0x477af025], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x488d01f8], al; add cl, byte ptr [edi]; xchg esp, eax; ret 0x7c8b; 
0x0016071c: add byte ptr [ebp - 0x47a4ff8a], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x16072a; neg eax; ret; 
0x000c66d4: add byte ptr [ebp - 0x47d08a2e], al; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f5fae: add byte ptr [ebp - 0x47d28a40], al; add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5454: add byte ptr [ebp - 0x47d88a40], al; cmp al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffa04: add byte ptr [ebp - 0x47d88a40], al; cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001013ec: add byte ptr [ebp - 0x47d88a40], al; jne 0x1013f4; add byte ptr [eax], al; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x000f4de4: add byte ptr [ebp - 0x47d88a40], al; jns 0xf4ded; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c595d: add byte ptr [ebp - 0x47d98a01], al; sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed156: add byte ptr [ebp - 0x47da8a40], al; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed0b6: add byte ptr [ebp - 0x47da8a40], al; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00035286: add byte ptr [ebp - 0x47da8a40], al; arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000311ae: add byte ptr [ebp - 0x47da8a40], al; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f4446: add byte ptr [ebp - 0x47da8a40], al; test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea370: add byte ptr [ebp - 0x47dc8a40], al; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea420: add byte ptr [ebp - 0x47dc8a40], al; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7860: add byte ptr [ebp - 0x47dc8a40], al; mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eddd2: add byte ptr [ebp - 0x47de8a40], al; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7eb: add byte ptr [ebp - 0x47df8a40], al; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff94b: add byte ptr [ebp - 0x47df8a40], al; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff89b: add byte ptr [ebp - 0x47df8a40], al; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c58ab: add byte ptr [ebp - 0x47df8a40], al; jb 0xc58b3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013f777: add byte ptr [ebp - 0x47e08a40], al; adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7a3e: add byte ptr [ebp - 0x47e28a40], al; jbe 0xf7a46; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f577f: add byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000b25ab: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xb25b9; neg eax; ret; 
0x000738ec: add byte ptr [ebp - 0x49f0ff8a], cl; inc ebp; aam 0x89; ret 0xf889; 
0x00132e92: add byte ptr [ebp - 0x4df6e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0007c057: add byte ptr [ebp - 0x4f7bf02e], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19b55], cl; jmp dword ptr [ebp - 0x75]; 
0x00100fd5: add byte ptr [ebp - 0x5682b7d], cl; call dword ptr [eax - 0x73]; 
0x000ec039: add byte ptr [ebp - 0x56ac77d], cl; call dword ptr [eax + 0x68]; 
0x000e9497: add byte ptr [ebp - 0x56adf7a], cl; call dword ptr [eax - 0x73]; 
0x000d017c: add byte ptr [ebp - 0x56e777d], cl; call dword ptr [eax + 0x68]; 
0x000c8779: add byte ptr [ebp - 0x56ed77d], cl; call dword ptr [eax + 0x68]; 
0x000ad9a5: add byte ptr [ebp - 0x56fcf7b], cl; call dword ptr [eax - 0x73]; 
0x0009f9e2: add byte ptr [ebp - 0x572037e], cl; call dword ptr [eax - 0x73]; 
0x00083db7: add byte ptr [ebp - 0x574c780], cl; call dword ptr [eax + 0x68]; 
0x000838ce: add byte ptr [ebp - 0x5750b80], cl; call dword ptr [eax + 0x68]; 
0x0007c021: add byte ptr [ebp - 0x5768770], cl; call dword ptr [edx - 0x73]; 
0x000ad39f: add byte ptr [ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x00072d9f: add byte ptr [ebp - 0x5847b7d], cl; call dword ptr [eax - 0x73]; 
0x00071072: add byte ptr [ebp - 0x5854f7a], cl; call dword ptr [eax - 0x73]; 
0x0002d16f: add byte ptr [ebp - 0x58f3b45], cl; push dword ptr [eax + ebp*2 - 0x7d]; in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x00027964: add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x00027d4d: add byte ptr [ebp - 0x5908f80], cl; call dword ptr [eax - 0x18]; 
0x00026dde: add byte ptr [ebp - 0x590ff79], cl; call dword ptr [eax - 0x73]; 
0x0001d271: add byte ptr [ebp - 0x593837d], cl; call dword ptr [eax - 0x73]; 
0x0001bd98: add byte ptr [ebp - 0x593a37f], cl; call dword ptr [eax - 0x73]; 
0x0001b021: add byte ptr [ebp - 0x59b3f80], cl; call dword ptr [eax + 0x6a]; 
0x00132f57: add byte ptr [ebp - 0x59cd97d], cl; call dword ptr [ebp + 0x6a]; 
0x001200fc: add byte ptr [ebp - 0x5a0497d], cl; call dword ptr [eax - 0x73]; 
0x00120c22: add byte ptr [ebp - 0x5a0497e], cl; call dword ptr [eax - 0x73]; 
0x0011de3e: add byte ptr [ebp - 0x5a16143], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011de0f: add byte ptr [ebp - 0x5a16c43], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011deb4: add byte ptr [ebp - 0x5a17343], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011dddc: add byte ptr [ebp - 0x5a17a43], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0010c617: add byte ptr [ebp - 0x5a7347d], cl; call dword ptr [eax - 1]; 
0x00028d7f: add byte ptr [ebp - 0x5a8467d], cl; call dword ptr [esi - 1]; 
0x0011de6d: add byte ptr [ebp - 0x5a87643], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x000fe220: add byte ptr [ebp - 0x5aa577d], cl; call dword ptr [ecx + 0x51]; 
0x000fe1fe: add byte ptr [ebp - 0x5aaab7d], cl; call dword ptr [esi + 0x56]; 
0x000fe1dc: add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x000fe110: add byte ptr [ebp - 0x5ac6e7d], cl; call dword ptr [ecx + 0x51]; 
0x000fd67e: add byte ptr [ebp - 0x5b32780], cl; call dword ptr [eax - 0x18]; 
0x000e7e23: add byte ptr [ebp - 0x5b55579], cl; call dword ptr [eax - 0x73]; 
0x00121fdb: add byte ptr [ebp - 0x5b5b545], cl; dec dword ptr [ebp - 0x59fbc7d]; call dword ptr [edi + 0x6a]; 
0x0011576f: add byte ptr [ebp - 0x5b61f80], cl; call dword ptr [eax - 1]; 
0x000d0188: add byte ptr [ebp - 0x5b6cc7d], cl; call dword ptr [eax - 0x73]; 
0x000c8761: add byte ptr [ebp - 0x5b73e7d], cl; call dword ptr [eax - 0x73]; 
0x0009eb9a: add byte ptr [ebp - 0x5bb1979], cl; call dword ptr [eax - 0x73]; 
0x000f6e14: add byte ptr [ebp - 0x5c7af040], al; add byte ptr [eax], al; add byte ptr [ecx + 0x17ab8d3], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70f4: add byte ptr [ebp - 0x5c7af040], al; add byte ptr [eax], al; add byte ptr [ecx + 0x17bb8d3], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0005ca48: add byte ptr [ebp - 0x5cb0279], cl; call dword ptr [eax - 0x73]; 
0x0013dc74: add byte ptr [ebp - 0x5cc1779], cl; call dword ptr [eax + 0x6a]; 
0x00041719: add byte ptr [ebp - 0x5ccb87e], cl; call dword ptr [eax - 0x73]; 
0x00038242: add byte ptr [ebp - 0x5ccd579], cl; call dword ptr [eax - 0x73]; 
0x0003e0d2: add byte ptr [ebp - 0x5ccdf79], cl; call dword ptr [eax - 0x73]; 
0x000a2582: add byte ptr [ebp - 0x5ccdf7a], cl; call dword ptr [eax - 0x73]; 
0x0001e91c: add byte ptr [ebp - 0x5d1ed79], cl; call dword ptr [eax - 0x73]; 
0x0001f55f: add byte ptr [ebp - 0x5d1ed7a], cl; call dword ptr [eax - 0x73]; 
0x0001e271: add byte ptr [ebp - 0x5d1ed7d], cl; call dword ptr [eax - 0x73]; 
0x00062d7e: add byte ptr [ebp - 0x6677f00a], al; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x0016340f: add byte ptr [ebp - 0x677af02e], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00080f5f: add byte ptr [ebp - 0x677af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1977b], cl; jmp dword ptr [ebp - 0x75]; 
0x0005dde1: add byte ptr [ebp - 0x6977f00a], al; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x000b278a: add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x0001b03a: add byte ptr [ebp - 0x6fffd98c], cl; call 0x13cee9; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x00161dda: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xa]; ret; 
0x00161dea: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xb]; ret; 
0x00161dfa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xd]; ret; 
0x00161e0a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xe]; ret; 
0x00161e1a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xf]; ret; 
0x00161d7a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 2]; ret; 
0x00161d8a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 3]; ret; 
0x00161d9a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 5]; ret; 
0x00161daa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 6]; ret; 
0x00161dba: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 7]; ret; 
0x00161dca: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 9]; ret; 
0x00160d4a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x00160d3a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x0016243a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x0016244a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x0016245a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x0016246a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x001623da: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x001623ea: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x001623fa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x0016240a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x0016241a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x0016242a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x0008ed0a: add byte ptr [ebp - 0x6fffd98c], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0015624a: add byte ptr [ebp - 0x6fffd98c], cl; mov eax, 1; ja 0x156259; neg eax; ret; 
0x000291da: add byte ptr [ebp - 0x6fffd98c], cl; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0008ecda: add byte ptr [ebp - 0x6fffd98c], cl; mov word ptr [ecx], dx; pop ebx; ret; 
0x000b279a: add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x000cc8fb: add byte ptr [ebp - 0x721f8b40], al; inc ebx; add al, 0xeb; mov word ptr [ebp + 0x538b0076], cs; or al, 0x83; ret; 
0x000f84ef: add byte ptr [ebp - 0x72408a40], al; je 0xf851d; add byte ptr [ebx - 0x7c72f714], al; jbe 0xf8549; cli; call dword ptr [eax - 0x73]; 
0x00107656: add byte ptr [ebp - 0x72e68140], al; inc ebp; add edi, esi; aad 0xc6; inc eax; jmp dword ptr [eax]; 
0x000d13cc: add byte ptr [ebp - 0x72f0ff8a], cl; ret 0; 
0x00160d7b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x0016358b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cld; pop edi; ret; 
0x0016125b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x0016121b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x00160deb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x001611fb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x00160e0b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x00160d9b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x0016124b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x0016127b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x0016126b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x000ecc44: add byte ptr [ebp - 0x74c88a40], al; dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ece84: add byte ptr [ebp - 0x74c88a40], al; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecd67: add byte ptr [ebp - 0x74cb8a40], 0x4c; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecfa7: add byte ptr [ebp - 0x74cb8a40], 0x5c; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed92f: add byte ptr [ebp - 0x74db8a40], al; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013f5ef: add byte ptr [ebp - 0x74e38b2e], al; adc byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a97f: add byte ptr [ebp - 0x74e38b2e], al; add byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac3f: add byte ptr [ebp - 0x74e38b2e], al; add byte ptr [edx + ebx], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a7bf: add byte ptr [ebp - 0x74e38b2e], al; and ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a77f: add byte ptr [ebp - 0x74e38b2e], al; and al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6ef: add byte ptr [ebp - 0x74e38b2e], al; and byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a93f: add byte ptr [ebp - 0x74e38b2e], al; cmp ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8ff: add byte ptr [ebp - 0x74e38b2e], al; cmp al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab7f: add byte ptr [ebp - 0x74e38b2e], al; cmp byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a9ff: add byte ptr [ebp - 0x74e38b2e], al; or byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f66f: add byte ptr [ebp - 0x74e38b2e], al; sbb byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a83f: add byte ptr [ebp - 0x74e38b2e], al; sub ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a7ff: add byte ptr [ebp - 0x74e38b2e], al; sub al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8bf: add byte ptr [ebp - 0x74e38b2e], al; xor ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a87f: add byte ptr [ebp - 0x74e38b2e], al; xor al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007782b: add byte ptr [ebp - 0x74ee8b40], al; pop eax; xor al, 0x39; ret 0x850f; 
0x00117635: add byte ptr [ebp - 0x74f18b40], al; add dword ptr [eax + 0xf], 0; add bl, ch; ret; 
0x00069a94: add byte ptr [ebp - 0x74f28b40], al; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0010c67a: add byte ptr [ebp - 0x74f68b40], al; pop ebp; cld; leave; ret; 
0x0004d133: add byte ptr [ebp - 0x74fec784], cl; inc ebp; add byte ptr [ebx - 0x74fe4fbb], 0x50; or byte ptr [ebx - 0x7f747bbb], cl; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000d4e2b: add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x000f5d38: add byte ptr [ebp - 0x75], ah; das; call dword ptr gs:[0x10]; 
0x00055bf4: add byte ptr [ebp - 0x75], ch; add ecx, dword ptr [edi]; test dword ptr [ecx], edx; ret 0xffff; 
0x000942fb: add byte ptr [ebp - 0x75ffd98c], cl; add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x0009535c: add byte ptr [ebp - 0x7699ff8a], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x0007c7c3: add byte ptr [ebp - 0x76c78a40], al; dec esp; and al, 0xc; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x000da348: add byte ptr [ebp - 0x76dc8b40], al; ret 0xe283; 
0x001014b9: add byte ptr [ebp - 0x76ebdb84], cl; pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00034151: add byte ptr [ebp - 0x77], ah; pop ss; push dword ptr [ebx + 4]; call eax; 
0x000d173a: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000ed712: add byte ptr [ebp - 0x7aebdbac], cl; ror byte ptr [edi], 0x85; inc ecx; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0009ab5b: add byte ptr [ebp - 0x7affd98c], cl; sal byte ptr [ebp + 0x38], 0x83; ret; 
0x0016bdfe: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012ff26: add byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000bfa35: add byte ptr [ebp - 0x7c298a40], al; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0010c5fb: add byte ptr [ebp - 0x7c808b40], al; in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x001197fc: add byte ptr [ebp - 0x7c99ff8a], cl; sti; adc al, 0xf; xchg esp, eax; ret; 
0x000b6f87: add byte ptr [ebp - 0x7c9f8b40], al; ret; 
0x0009ab5f: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x00081cf1: add byte ptr [ebp - 0x7cd88740], al; in al, dx; or byte ptr [ebp - 0x5bc017a], cl; call dword ptr [ebx + 0x50]; 
0x0010b58f: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x10b5cb; call eax; 
0x0016b739: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x78a1f6d], cl; call dword ptr [edx + 0x50]; 
0x0007482d: add byte ptr [ebp - 0x7cf18a40], al; stosb byte ptr es:[edi], al; cmp al, 0x19; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0006b07d: add byte ptr [ebp - 0x7cf18a40], al; stosb byte ptr es:[edi], al; sub byte ptr [ecx], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00120ca9: add byte ptr [ebp - 0x7cf58a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00128001: add byte ptr [ebp - 0x7cf58b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00051132: add byte ptr [ebp - 0x7cf68a40], al; sub eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x0011fb6a: add byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00124574: add byte ptr [ebp - 0x7cf88b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0002d49b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x0009cb1b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x000e16ab: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8901; 
0x000fb253: add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x00157a2b: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x000fef0c: add byte ptr [ebp - 0x8531f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000feaa8: add byte ptr [ebp - 0x85c8f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fea47: add byte ptr [ebp - 0x85cbf6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe824: add byte ptr [ebp - 0x8618f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe5d2: add byte ptr [ebp - 0x861bf6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe412: add byte ptr [ebp - 0x86d4f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe273: add byte ptr [ebp - 0x8708f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe940: add byte ptr [ebp - 0x8731f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x0006e31e: add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00130037: add byte ptr [ebp - 0xb3d8f7d], cl; call dword ptr [eax - 0x73]; 
0x0012a8f7: add byte ptr [ebp - 0xb945f7d], cl; call dword ptr [eax - 0x73]; 
0x0008cf7b: add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00102b7f: add byte ptr [ebp - 0xe18ff7a], cl; dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x0003117e: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x000b4141: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000c093b: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000ec701: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ecb81: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000f92d5: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000fd225: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000c6944: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000c5d7d: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x0003114e: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000ecaca: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000b6c01: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0011961b: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0007b374: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000c6f64: add byte ptr [ebp], bh; add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x0006acf7: add byte ptr [ebx + 0x106a04ec], al; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0006d117: add byte ptr [ebx + 0x106a04ec], al; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0012c0df: add byte ptr [ebx + 0x10ba0cec], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f10f8], al; ret 0x5057; 
0x0009ecf9: add byte ptr [ebx + 0x117401f8], al; cmp eax, 2; je 0x9ed20; xor eax, eax; ret; 
0x0014a889: add byte ptr [ebx + 0x11740fe7], al; call 0x13cee5; add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00148889: add byte ptr [ebx + 0x11740fe7], al; call 0x13cee5; add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0003b9f4: add byte ptr [ebx + 0x124245c], cl; ret; 
0x0004b6c7: add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0007967b: add byte ptr [ebx + 0x16a14ec], al; call 0x78f20; add esp, 0x18; pop ebx; ret; 
0x00146e45: add byte ptr [ebx + 0x18], dh; call 0x13cee5; add ebx, 0x48733; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001468f5: add byte ptr [ebx + 0x18], dh; call 0x13cee5; add ebx, 0x48a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146275: add byte ptr [ebx + 0x18], dh; call 0x13cee5; add ebx, 0x48e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0016199f: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001629bf: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x0016205f: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x000f14e7: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0006a39e: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00101e15: add byte ptr [ebx + 0x1c497], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00153d6e: add byte ptr [ebx + 0x1c740fe7], al; call 0x13cee5; add ebx, 0x3ca07; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00150a9e: add byte ptr [ebx + 0x1c740fe7], al; call 0x13cee5; add ebx, 0x3f897; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fa9e: add byte ptr [ebx + 0x1c740fe7], al; call 0x13cee5; add ebx, 0x406d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014eabe: add byte ptr [ebx + 0x1c740fe7], al; call 0x13cee5; add ebx, 0x414f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00151bcb: add byte ptr [ebx + 0x1f740fe7], al; call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014c87b: add byte ptr [ebx + 0x1f740fe7], al; call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001260f2: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000eab2b: add byte ptr [ebx + 0x24c2484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000291c6: add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029155: add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x0005009b: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x00049edf: add byte ptr [ebx + 0x29102454], cl; ret 0x4439; 
0x00087eec: add byte ptr [ebx + 0x29142454], cl; ret 0x748d; 
0x00088308: add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00066842: add byte ptr [ebx + 0x2920244c], cl; ret; 
0x00044ec6: add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x00044d83: add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x0016198f: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001629af: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0016204f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00029196: add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029125: add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x00036c5f: add byte ptr [ebx + 0x31142444], cl; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0003671f: add byte ptr [ebx + 0x31182444], cl; fisttp dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0016506b: add byte ptr [ebx + 0x3124244c], cl; ror byte ptr [ebp - 0x7cafdb94], cl; ret 0x901; 
0x001453cf: add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000f6325: add byte ptr [ebx + 0x31], dl; fisttp dword ptr [ebx - 0x74f3dbb4]; push esp; and al, 0x10; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000342ed: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000e455e: add byte ptr [ebx + 0x37e910c4], al; idiv edi; dec dword ptr [ebp - 0x12f7b]; dec dword ptr [ebp - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x00086a4c: add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00086787: add byte ptr [ebx + 0x39142444], cl; ret 0x1373; 
0x00167137: add byte ptr [ebx + 0x3968245c], cl; ret; 
0x0016197f: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x0016299f: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0016203f: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x000c38df: add byte ptr [ebx + 0x3c604ec], al; call dword ptr [edi - 1]; 
0x000ec1b5: add byte ptr [ebx + 0x3d7401fa], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec315: add byte ptr [ebx + 0x3d7401fa], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec265: add byte ptr [ebx + 0x3d7401fa], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00055bcc: add byte ptr [ebx + 0x3fcbb], al; add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x00041b87: add byte ptr [ebx + 0x41c601c1], al; jmp dword ptr [eax]; 
0x00124a87: add byte ptr [ebx + 0x428b0cec], al; add al, 0x52; call dword ptr [eax + 0x10]; 
0x00126697: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x1266c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0012fa9f: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x12facd; adc al, 0x53; call dword ptr [eax]; 
0x0012ca9d: add byte ptr [ebx + 0x438b08ec], al; push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00124d37: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00034f5d: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x00081d40: add byte ptr [ebx + 0x440ffff8], al; ret 0xc483; 
0x000c1997: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x00068de4: add byte ptr [ebx + 0x448d08ec], al; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075533: add byte ptr [ebx + 0x448d08ec], al; and al, 0x24; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x000751ca: add byte ptr [ebx + 0x448d08ec], al; and al, 0x34; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x0006fcc6: add byte ptr [ebx + 0x448d08ec], al; and al, 0x3c; push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0013e792: add byte ptr [ebx + 0x448d08ec], al; and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0001d679: add byte ptr [ebx + 0x45890cc4], al; fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x00119b1f: add byte ptr [ebx + 0x4589dc45], cl; test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0012d5a7: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x000e5bb0: add byte ptr [ebx + 0x45e910c4], al; idiv edi; dec dword ptr [ebp - 0x4e77b]; dec dword ptr [ecx - 0x50373]; call dword ptr [eax - 0x73]; 
0x000423bf: add byte ptr [ebx + 0x46c601c6], al; jmp dword ptr [eax]; 
0x00098caf: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002eb68: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0010fdc7: add byte ptr [ebx + 0x488d01f8], al; add cl, byte ptr [edi]; xchg esp, eax; ret 0x7c8b; 
0x00029157: add byte ptr [ebx + 0x48b2840], cl; nop; ret; 
0x00029127: add byte ptr [ebx + 0x48b3040], cl; nop; ret; 
0x000ab288: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000ab8ef: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000ab58a: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0016196f: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x0016298f: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0016202f: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00088f62: add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x001316cf: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0012a835: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012d1c5: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012c7d5: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000f6615: add byte ptr [ebx + 0x4c8b08ec], al; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000bb593: add byte ptr [ebx + 0x4d0f02fb], al; ret; 
0x000bb9d0: add byte ptr [ebx + 0x4d0f03fb], al; ret; 
0x000891d6: add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x28b; 
0x0008926b: add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x748d; 
0x0011d9cf: add byte ptr [ebx + 0x4f0f05f8], al; ret 0x4589; 
0x0011da17: add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x0012c0e7: add byte ptr [ebx + 0x4f0f10f8], al; ret 0x5057; 
0x0011da3f: add byte ptr [ebx + 0x4f0f1ef8], al; ret 0x4589; 
0x000b254f: add byte ptr [ebx + 0x4f39344e], cl; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0012c416: add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0005ed84: add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639dd: add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x00129f6e: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x0012a174: add byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 8]; 
0x00123feb: add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0012db91: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x00075a4f: add byte ptr [ebx + 0x51], dl; push esi; call dword ptr [ebp + 0x40]; 
0x0008053f: add byte ptr [ebx + 0x525104ec], al; push ebx; call eax; 
0x0013161f: add byte ptr [ebx + 0x52530446], cl; push esi; call dword ptr [eax + 8]; 
0x0005ea33: add byte ptr [ebx + 0x525304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000626ec: add byte ptr [ebx + 0x525304ec], al; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0006736a: add byte ptr [ebx + 0x525604ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x000bf061: add byte ptr [ebx + 0x535708ec], al; call eax; 
0x001240a7: add byte ptr [ebx + 0x54890045], cl; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0003436d: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x0003448d: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x000ec113: add byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec16a: add byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000c7ed7: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00075876: add byte ptr [ebx + 0x548d08ec], al; and al, 0x34; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0007616a: add byte ptr [ebx + 0x555104ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00060d24: add byte ptr [ebx + 0x555304ec], al; push esi; call dword ptr [eax + 0x1c]; 
0x0010c731: add byte ptr [ebx + 0x558d08ec], al; rcl byte ptr [edx - 0x73]; xchg ebx, eax; push eax; test edx, esi; call dword ptr [edx - 1]; 
0x001268c7: add byte ptr [ebx + 0x562b1056], cl; or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x00108c22: add byte ptr [ebx + 0x56500cc4], al; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8f9: add byte ptr [ebx + 0x56500cc4], al; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x00065fae: add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edx + 0x1c]; 
0x000322f7: add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x1c]; call edi; 
0x000322c3: add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x34]; call edi; 
0x000760ea: add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x001089d4: add byte ptr [ebx + 0x57500cc4], al; push 0x2000006; call dword ptr [esi + 0x14]; 
0x000281c2: add byte ptr [ebx + 0x58408b00], cl; ret; 
0x0007f017: add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x0012b307: add byte ptr [ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x000b728f: add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x0009c15a: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0016195f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x0016297f: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0016201f: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0006a547: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00098cf7: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x00102301: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0001be87: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000e5f85: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x00033be9: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00041015: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007807b: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00025839: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000eda63: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0001b73c: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00070f81: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00124855: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x0001a88a: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0009f512: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00032a4f: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0003db57: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000f17da: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000248f5: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00075587: add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000ef26d: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000b2606: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000d70e4: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x000ee8f2: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0013cb8b: add byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0002191f: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00164702: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0001bd77: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00030d2b: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0001a773: add byte ptr [ebx + 0x5e], bl; ret; 
0x001629df: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000e08b0: add byte ptr [ebx + 0x5f8868c], cl; cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x00031329: add byte ptr [ebx + 0x5f], bl; ret; 
0x000eb3a4: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x0008ce6f: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0007946c: add byte ptr [ebx + 0x6a04ec], al; push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x001260f8: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00068fc7: add byte ptr [ebx + 0x6a08ec], al; push edi; call dword ptr [ebx + 8]; 
0x0007db2f: add byte ptr [ebx + 0x6a0cec], al; mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x001240cd: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0004174f: add byte ptr [ebx + 0x6a14ec], al; push dword ptr [esp + 0x1c]; call 0x410f0; add esp, 0x1c; ret; 
0x0006c216: add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x0016194f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x0016296f: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0016200f: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x001196d7: add byte ptr [ebx + 0x6b81b], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bf0ae: add byte ptr [ebx + 0x6c8d08ec], al; and al, 0xc; push ebp; push ebx; call eax; 
0x0003279f: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x10; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00108277: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push 0; push 0x2000004; call eax; 
0x000823a1: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00081ffb: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x3c; push ecx; push ebx; call eax; 
0x0007503a: add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x0012fbcd: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push ebx; call eax; 
0x00082131: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push edx; call eax; 
0x00124001: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000807e7: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push ebx; call eax; 
0x00080277: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push esi; call eax; 
0x00129f81: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00117258: add byte ptr [ebx + 0x74ff10c4], al; and al, 0xc; push 0x400; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x0013dc3b: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x13d3a0; add esp, 0x18; pop ebx; ret; 
0x000eb4fb: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0007236b: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x68f00; add esp, 0x18; pop ebx; ret; 
0x000f868b: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0006be22: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x6be38; push esi; call dword ptr [ebx + 0x2c]; 
0x0012d53e: add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x001088e1: add byte ptr [ebx + 0x75ffc845], cl; les ecx, ptr [ebp - 0x5a8ce80]; call dword ptr [eax - 1]; 
0x000fa26b: add byte ptr [ebx + 0x77f01f8], al; pop ebx; pop esi; ret; 
0x00161fff: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x00124135: add byte ptr [ebx + 0x7c8d08ec], al; and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0002d4fb: add byte ptr [ebx + 0x7c8d10c4], al; pop es; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x000efeef: add byte ptr [ebx + 0x7d8d04ec], al; mov word ptr [ecx - 0xbb6b], cs; call dword ptr [edi + 0x52]; 
0x00026b17: add byte ptr [ebx + 0x7f01b87d], al; sub byte ptr [ebx + 0x3bab445], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf883; 
0x000f5c79: add byte ptr [ebx + 0x8824b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec7ba: add byte ptr [ebx + 0x9024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0007b730: add byte ptr [ebx + 0xa7650f8], al; ret; 
0x001619af: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001629cf: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0016206f: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x001013f5: add byte ptr [ebx + 0xb], bh; call dword ptr gs:[0x10]; 
0x001023b9: add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x000eb358: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0010151f: add byte ptr [ebx + 0xc], bh; call dword ptr gs:[0x10]; 
0x0012e037: add byte ptr [ebx + 0xcec8303], cl; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00051842: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; xor cl, 0x33; cli; call dword ptr [eax - 0x18]; 
0x0004da5f: add byte ptr [ebx + 0xf102474], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x00065dfb: add byte ptr [ebx + 0xf482444], cl; mov dh, 0x44; add ah, al; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0015a660: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c6f4c: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x000c6f67: add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x0013e60f: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x000739f9: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00030e3c: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eaba8: add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x001455f3: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x001016f1: add byte ptr [ebx + 3], bh; or esi, 0x100; call dword ptr gs:[0x10]; 
0x00085373: add byte ptr [ebx + ebp*8 + 0x2e580ff], dl; lea eax, [eax - 0x8c3b0]; cmovne edx, eax; mov eax, edx; ret; 
0x00037b36: add byte ptr [ebx + ebx*8 - 0x7c3dbbf1], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a1ab2: add byte ptr [ebx + ecx*2 - 0x7d], dh; ret; 
0x000aa077: add byte ptr [ebx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x000c5e2c: add byte ptr [ebx - 0x10743], cl; jmp dword ptr [ebp - 0x75]; 
0x000c0e99: add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x00031243: add byte ptr [ebx - 0x10748], cl; jmp dword ptr [ebp - 0x75]; 
0x0013604f: add byte ptr [ebx - 0x1074a], cl; jmp dword ptr [ebp - 0x7d]; 
0x000ee942: add byte ptr [ebx - 0x1074d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012ceb7: add byte ptr [ebx - 0x1076a], cl; jmp dword ptr [ebp - 0x75]; 
0x00050fef: add byte ptr [ebx - 0x1076b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000c5b5f: add byte ptr [ebx - 0x1076d], cl; jmp dword ptr [ebp - 0x77]; 
0x0012c2c0: add byte ptr [ebx - 0x1076e], cl; jmp dword ptr [ebp - 0x75]; 
0x000c113f: add byte ptr [ebx - 0x10779], cl; jmp dword ptr [ebp - 0x39]; 
0x00034bef: add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x001228db: add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x75]; 
0x0013f0ef: add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003ac9f: add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x39]; 
0x000eac97: add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x75]; 
0x00080257: add byte ptr [ebx - 0x1077b], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00116dc8: add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp + 3]; 
0x000282f7: add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000f2706: add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x75]; 
0x000fceaf: add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0001b8b7: add byte ptr [ebx - 0x1077e], cl; jmp dword ptr [ebp - 0x39]; 
0x000c748f: add byte ptr [ebx - 0x1077e], cl; jmp dword ptr [ebp - 0x7d]; 
0x000b42cd: add byte ptr [ebx - 0x1077f], cl; jmp dword ptr [ebp - 0x39]; 
0x0001b5b9: add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp + 3]; 
0x000319d7: add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f1f71: add byte ptr [ebx - 0x10780], cl; jmp dword ptr [esi - 0x77]; 
0x000f756a: add byte ptr [ebx - 0x10b7e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0xf7579; ret; 
0x000fdace: add byte ptr [ebx - 0x10b80], cl; dec dword ptr [ebx - 0x3f7adfc0]; cmove eax, edx; ret; 
0x0010f8ff: add byte ptr [ebx - 0x10f69], cl; jmp dword ptr [ebp - 0x77]; 
0x0010f9df: add byte ptr [ebx - 0x10f79], cl; jmp dword ptr [ebp - 0x39]; 
0x0012252f: add byte ptr [ebx - 0x10f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x001223df: add byte ptr [ebx - 0x10f7e], cl; jmp dword ptr [ebp - 0x39]; 
0x0010f009: add byte ptr [ebx - 0x10f80], cl; jmp dword ptr [ebp + 3]; 
0x0006b635: add byte ptr [ebx - 0x137c1b83], cl; add al, 0x57; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0006fa08: add byte ptr [ebx - 0x137c3fbb], cl; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x000e117a: add byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x924c868d; cli; call dword ptr [eax - 0x73]; 
0x0005f38d: add byte ptr [ebx - 0x137c6ffc], cl; add al, 0x56; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x0012cfd0: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0007723c: add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x0013e5b3: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x000296c2: add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x58f4f7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0006421d: add byte ptr [ebx - 0x137ceffc], cl; add al, 0xff; mov ch, 0x18; idiv edi; call dword ptr [edi - 1]; 
0x00070ae2: add byte ptr [ebx - 0x137cf3c0], cl; add al, 0x29; ret 0xfac1; 
0x00033e6e: add byte ptr [ebx - 0x137cfed5], al; or byte ptr [edx], ch; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00123fe8: add byte ptr [ebx - 0x137cffbb], cl; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x000d393f: add byte ptr [ebx - 0x13f79], cl; jmp dword ptr [ebp - 0x75]; 
0x000b6f24: add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000293d9: add byte ptr [ebx - 0x13f80], cl; jmp dword ptr [ebp + 3]; 
0x000c6c01: add byte ptr [ebx - 0x15477b], cl; inc dword ptr [ebx - 0x4f72f714]; jbe 0xc6c59; cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000e476f: add byte ptr [ebx - 0x1637b], cl; inc dword ptr [ebx - 0x49f0ffc8]; test dword ptr [edi + 0xffffffe], ecx; inc ebp; ret 0x8588; 
0x000e4602: add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x000e42ba: add byte ptr [ebx - 0x1677b], cl; jmp dword ptr [ebp - 0x75]; 
0x00062b96: add byte ptr [ebx - 0x16b6d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e4c04: add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x7d]; 
0x000e4e7d: add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x7d]; 
0x000342c7: add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f51f: add byte ptr [ebx - 0x16b7f], cl; jmp dword ptr [ebp - 0x75]; 
0x000281b9: add byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0011f5a3: add byte ptr [ebx - 0x1765], cl; jmp dword ptr [ebp - 0x75]; 
0x0011f499: add byte ptr [ebx - 0x1780], cl; jmp dword ptr [ebp - 0x75]; 
0x000f93c7: add byte ptr [ebx - 0x17], bl; and bl, byte ptr [edx + esi*8]; jmp dword ptr [esi - 0x70]; 
0x000f5987: add byte ptr [ebx - 0x17], bl; bound edx, qword ptr [esi - 0xe]; jmp dword ptr [esi - 0x70]; 
0x000f568f: add byte ptr [ebx - 0x17], bl; pop edx; pop ecx; bnd jmp dword ptr [esi - 0x70]; 
0x000f59f7: add byte ptr [ebx - 0x17], bl; push ebp; bnd jmp dword ptr [esi - 0x70]; 
0x000f9397: add byte ptr [ebx - 0x17], bl; push edx; sbb al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000f7b97: add byte ptr [ebx - 0x17], bl; push edx; xor al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0011730b: add byte ptr [ebx - 0x17a9f314], al; jnp 0x117334; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000b56f1: add byte ptr [ebx - 0x17aff314], al; inc ebp; ret 0xfffb; 
0x00115ff7: add byte ptr [ebx - 0x17aff314], al; jmp dword ptr [edx]; 
0x000e3c88: add byte ptr [ebx - 0x17b73], cl; call dword ptr [ebx + 0x29]; 
0x000f1975: add byte ptr [ebx - 0x17cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0013a0a3: add byte ptr [ebx - 0x17f68], cl; jmp dword ptr [ebp - 0x75]; 
0x0012f0ad: add byte ptr [ebx - 0x18345], cl; jmp dword ptr [ebp - 0x75]; 
0x0012f209: add byte ptr [ebx - 0x18380], cl; jmp dword ptr [ebp - 0x75]; 
0x000e42cc: add byte ptr [ebx - 0x18773], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e43f1: add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00080c8f: add byte ptr [ebx - 0x19369], cl; jmp dword ptr [ebp - 0x80]; 
0x000e4403: add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00081177: add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x80]; 
0x00080f67: add byte ptr [ebx - 0x1977b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007c05f: add byte ptr [ebx - 0x19b55], cl; jmp dword ptr [ebp - 0x75]; 
0x00080091: add byte ptr [ebx - 0x19b7a], cl; jmp dword ptr [ebp - 0x75]; 
0x00080297: add byte ptr [ebx - 0x19b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c8310: add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x00027ec9: add byte ptr [ebx - 0x1bf73], cl; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x0002771f: add byte ptr [ebx - 0x1c373], cl; dec dword ptr [ebx - 0x1bb6b]; dec dword ptr [ebx + 0x110194c]; ret 0xd139; 
0x00027c1b: add byte ptr [ebx - 0x1d773], cl; jmp dword ptr [ebx]; 
0x000d1912: add byte ptr [ebx - 0x1e7efe1e], al; add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000abad0: add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x00067c01: add byte ptr [ebx - 0x23efb14], al; add dl, byte ptr [ebp + 0x52]; push esi; call dword ptr [ebx + 0x1c]; 
0x000fabf8: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x000fb11f: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x000f63d5: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x000352e4: add byte ptr [ebx - 0x2776ef3c], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00031201: add byte ptr [ebx - 0x2776ef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x000821a8: add byte ptr [ebx - 0x2776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000f7eed: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x0008ab2e: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000afac7: add byte ptr [ebx - 0x2d7c0040], al; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00165521: add byte ptr [ebx - 0x2d7cff29], al; add cl, ch; ret 0xfff0; 
0x0013189a: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0011b876: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000f9939: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0004874f: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b083f: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000b0831: add byte ptr [ebx - 0x362763], cl; inc dword ptr [ebp - 0x2a71f025]; or dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000af5df: add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00048af9: add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000485cf: add byte ptr [ebx - 0x362f7b], al; call dword ptr [eax]; 
0x00048aeb: add byte ptr [ebx - 0x362f7b], cl; inc dword ptr [ebp - 0xf71f040]; or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00046a3f: add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x0004786a: add byte ptr [ebx - 0x363f4b], cl; call dword ptr [edi - 1]; 
0x000b0a85: add byte ptr [ebx - 0x363f7b], al; jmp eax; 
0x00046b28: add byte ptr [ebx - 0x363f7b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000472a9: add byte ptr [ebx - 0x364363], cl; inc dword ptr [ecx]; ret; 
0x00046d4e: add byte ptr [ebx - 0x36437b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000b1507: add byte ptr [ebx - 0x364743], cl; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b01d3: add byte ptr [ebx - 0x364763], cl; call dword ptr [edi - 0x18]; 
0x000af01e: add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000b00e1: add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000af42d: add byte ptr [ebx - 0x36477b], cl; call dword ptr [edi + 0x6a]; 
0x000af0b2: add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x00048cc5: add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000499a2: add byte ptr [ebx - 0x365b4b], cl; dec dword ptr [ebp - 0x58c077a]; call dword ptr [eax - 0x73]; 
0x00048622: add byte ptr [ebx - 0x365b63], cl; call dword ptr [eax - 1]; 
0x000492e6: add byte ptr [ebx - 0x365b63], cl; call dword ptr [esi - 1]; 
0x000477c6: add byte ptr [ebx - 0x365b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000b055f: add byte ptr [ebx - 0x36637b], al; call dword ptr [eax]; 
0x0011b6af: add byte ptr [ebx - 0x36cefb3c], al; mov eax, ecx; pop ebx; pop esi; ret; 
0x0003385f: add byte ptr [ebx - 0x373e03b9], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00145aaf: add byte ptr [ebx - 0x38efdbbc], cl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000327e2: add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x000d182f: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x000342ef: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000ed912: add byte ptr [ebx - 0x3b7cef3c], al; adc al, 0x5b; pop esi; ret; 
0x0001bf21: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00126193: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0012efa7: add byte ptr [ebx - 0x3e7cf714], al; add al, 0x8b; ja 0x12efb5; push ecx; push edi; call dword ptr [esi + 8]; 
0x0004b647: add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x00078b36: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x78b30; ret; 
0x00116917: add byte ptr [ebx - 0x3f7aef3c], al; je 0x116928; sub esp, 0xc; push esi; call eax; 
0x00116bff: add byte ptr [ebx - 0x3f7aef3c], al; je 0x116c10; sub esp, 0xc; push esi; call eax; 
0x000f8713: add byte ptr [ebx - 0x3f7aef3c], al; jne 0xf86d8; add esp, 0xc; ret; 
0x000ea797: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0012600f: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00132ebc: add byte ptr [ebx - 0x417fb14], al; ret; 
0x0008ad17: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0x8ad18; pop ebx; ret; 
0x0005f047: add byte ptr [ebx - 0x427ffe15], al; idiv edi; jmp dword ptr [eax]; 
0x00063f02: add byte ptr [ebx - 0x427ffe17], al; inc edi; idiv edi; jmp dword ptr [eax]; 
0x0014638f: add byte ptr [ebx - 0x42], dh; call 0x13cee5; add ebx, 0x48ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145d5f: add byte ptr [ebx - 0x42], dh; call 0x13cee5; add ebx, 0x49099; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000ce728: add byte ptr [ebx - 0x43742bb3], cl; xor dword ptr [esp + edi*8], 0xcf01fff9; jmp edi; 
0x000ccd60: add byte ptr [ebx - 0x437433b3], cl; add esp, 0x1fff9fa; iretd; jmp edi; 
0x00053e0d: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret; 
0x000e72a3: add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x001372e7: add byte ptr [ebx - 0x45fbdbbc], cl; push es; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00118043: add byte ptr [ebx - 0x4637b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e72ef: add byte ptr [ebx - 0x4677b], cl; inc dword ptr [ebx - 0x7f72f314]; dec eax; cli; call dword ptr [eax - 0x18]; 
0x000c96de: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000c94c5: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x000f97e7: add byte ptr [ebx - 0x46f7db84], cl; push es; add byte ptr [eax], al; add byte ptr [ecx + 0xfa6f3de], cl; xchg edi, eax; ret 0xda80; 
0x00031175: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000cc624: add byte ptr [ebx - 0x47343], cl; dec dword ptr [ebp - 0x56ec379]; call dword ptr [eax - 0x73]; 
0x000cbbd6: add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x000cb9c5: add byte ptr [ebx - 0x47363], cl; call dword ptr [esi - 1]; 
0x000cbb37: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; dec eax; cli; call dword ptr [eax - 0x18]; 
0x000f4532: add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x00058971: add byte ptr [ebx - 0x47cef3c], al; push ebx; ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000f6f86: add byte ptr [ebx - 0x47fbdb84], cl; jnp 0xf6f8f; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6ca6: add byte ptr [ebx - 0x47fbdb84], cl; jp 0xf6caf; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c747a: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xc7490; ret; 
0x000f25eb: add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x0016071f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x16072a; neg eax; ret; 
0x0015f05f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x15f070; neg eax; ret; 
0x0016315f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x163170; neg eax; ret; 
0x0010795f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000f52d7: add byte ptr [ebx - 0x48], bl; ljmp 0xce9:0x5effffff; pop ebp; bnd jmp dword ptr [esi - 0x70]; 
0x000f671a: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000739fe: add byte ptr [ebx - 0x497237b3], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0007390f: add byte ptr [ebx - 0x49f0ef3c], al; adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x001691ce: add byte ptr [ebx - 0x49f0fe0e], al; ret 0x4489; 
0x000e72b3: add byte ptr [ebx - 0x4a00f314], al; mov al, byte ptr [0xe8fffffb]; scasb al, byte ptr es:[edi]; ret; 
0x0005ebd3: add byte ptr [ebx - 0x4a00f714], al; xchg esp, eax; idiv edi; call dword ptr [edx - 0x77]; 
0x00043b88: add byte ptr [ebx - 0x4c14ef3c], al; nop; add eax, dword ptr [esp]; ret; 
0x000581ed: add byte ptr [ebx - 0x4f373], cl; dec dword ptr [ebx - 0x16b4f]; dec dword ptr [ecx - 0x53f4b]; jmp dword ptr [ebp - 0x75]; 
0x00058697: add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0005937e: add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x62f84], bl; jmp eax; 
0x00058a96: add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x630d4], bl; jmp eax; 
0x0005897d: add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x63224], bl; jmp eax; 
0x000584f6: add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x632e0], cl; jmp eax; 
0x00101c0b: add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0005c544: add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x0005a55d: add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0005887d: add byte ptr [ebx - 0x5177b], cl; dec dword ptr [ecx - 0x4cf7b]; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x000e5438: add byte ptr [ebx - 0x5177b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005aaa7: add byte ptr [ebx - 0x53f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00028e09: add byte ptr [ebx - 0x5416ef3c], al; add edi, edi; call dword ptr [eax - 0x73]; 
0x0001b019: add byte ptr [ebx - 0x5497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x59b3f80], cl; call dword ptr [eax + 0x6a]; 
0x000394f7: add byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x00051daa: add byte ptr [ebx - 0x59b43], cl; dec dword ptr [edi]; mov dh, 0xc0; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x00052528: add byte ptr [ebx - 0x59b63], cl; inc dword ptr [ecx + 0x400fa]; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x00054ff7: add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00051fcf: add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x000567bd: add byte ptr [ebx - 0x5a77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007c019: add byte ptr [ebx - 0x5b46e714], al; add al, byte ptr [eax]; add byte ptr [ebp - 0x5768770], cl; call dword ptr [edx - 0x73]; 
0x000d081e: add byte ptr [ebx - 0x5cf0afab], cl; ret 0x830f; 
0x00054029: add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x00055334: add byte ptr [ebx - 0x5f763], cl; dec dword ptr [ebx - 0x5df73]; inc dword ptr [ecx]; ret; 
0x000646bf: add byte ptr [ebx - 0x6274fb14], al; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x000ecc51: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x000f91a1: add byte ptr [ebx - 0x64], bh; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x00064faf: add byte ptr [ebx - 0x6a76fb14], al; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x00116907: add byte ptr [ebx - 0x6c72f714], al; xchg esp, eax; pop esp; cli; call dword ptr [edx + 0x50]; 
0x0006994e: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0011fbe9: add byte ptr [ebx - 0x6f72f314], al; add al, 0xa1; cli; call dword ptr [edx - 0x73]; 
0x0005dcb9: add byte ptr [ebx - 0x6f72f314], al; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x000da0c4: add byte ptr [ebx - 0x70f0fa08], al; ret 0; 
0x0011b774: add byte ptr [ebx - 0x7172fb14], al; cdq; pop ebp; cli; dec dword ptr [ebp - 0x5a25b7a]; call dword ptr [ecx - 0x77]; 
0x0006460f: add byte ptr [ebx - 0x7276fb14], al; pushal; idiv edi; call dword ptr [edx - 1]; 
0x0006489f: add byte ptr [ebx - 0x7276fb14], al; pushal; idiv edi; call dword ptr [esi + 0x52]; 
0x0005f8e7: add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [ebx + 0x6a]; 
0x0005f163: add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [ecx - 1]; 
0x0005f4f8: add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x00021e66: add byte ptr [ebx - 0x72abdb8c], cl; xchg al, al; cli; call dword ptr [eax + 0x68]; 
0x00021806: add byte ptr [ebx - 0x72abdb8c], cl; xchg al, al; cli; call dword ptr [eax - 0x73]; 
0x0012fcdf: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0002275e: add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [eax], ecx; outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00024630: add byte ptr [ebx - 0x72b7db84], cl; xchg eax, eax; cli; call dword ptr [eax + 0x68]; 
0x000242d4: add byte ptr [ebx - 0x72b7db84], cl; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x000232a2: add byte ptr [ebx - 0x72b7db84], cl; xchg esp, ebp; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x00023b1e: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax + 0x68]; 
0x000239a5: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax - 0x73]; 
0x00023ad8: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax], eax; cli; call dword ptr [eax - 0x73]; 
0x000204c3: add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [esi + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x0001f907: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x0001e2ac: add byte ptr [ebx - 0x72c3dba4], cl; and dword ptr [eax], 0x69; cli; call dword ptr [eax + 0x68]; 
0x0001e18f: add byte ptr [ebx - 0x72c3dba4], cl; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x000325b7: add byte ptr [ebx - 0x72cbdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0002112e: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x000814e6: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax], ebp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00020ff1: add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x00020aee: add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x000c346d: add byte ptr [ebx - 0x72d3dba4], cl; sbb dword ptr [ebp + 0x47], -6; call dword ptr [eax - 0x73]; 
0x001110c6: add byte ptr [ebx - 0x72d7dba4], cl; add dword ptr [edx + ebx*2], -6; call dword ptr [eax - 0x73]; 
0x00111b06: add byte ptr [ebx - 0x72d7dba4], cl; xor dword ptr [ebx], 0x5a; cli; call dword ptr [eax - 0x73]; 
0x00110666: add byte ptr [ebx - 0x72dbdba4], cl; adc ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x0010f686: add byte ptr [ebx - 0x72dbdba4], cl; add ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x001100f6: add byte ptr [ebx - 0x72dbdba4], cl; and dword ptr [edi + 0x4a], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x000f56ef: add byte ptr [ebx - 0x72dfdba4], cl; push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000a48e9: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000ad4e4: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000a04ed: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x001128b6: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [ebx + 0x5a], bh; cli; call dword ptr [eax - 0x73]; 
0x00117e66: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [ebx], cl; pop ebp; cli; call dword ptr [eax - 0x73]; 
0x00106b16: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [edi], al; push edi; cli; call dword ptr [eax - 0x73]; 
0x00111ff6: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [edx + 0x5a], al; cli; call dword ptr [eax - 0x73]; 
0x0009fee1: add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x001050f6: add byte ptr [ebx - 0x72e3db8c], cl; xchg cl, cl; push esi; cli; call dword ptr [eax - 0x73]; 
0x00129816: add byte ptr [ebx - 0x72e3db8c], cl; xchg dh, bh; popal; cli; call dword ptr [eax - 0x73]; 
0x000c2fbd: add byte ptr [ebx - 0x72e3dba4], cl; adc dword ptr [edx + 0x47], -6; call dword ptr [eax - 0x73]; 
0x000a01e1: add byte ptr [ebx - 0x72e3dba4], cl; or dword ptr [eax - 0x72], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x000c1f40: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax], edx; xchg ecx, eax; cli; call dword ptr [eax - 0x73]; 
0x000c51c5: add byte ptr [ebx - 0x72e7db8c], cl; xchg cl, dl; inc edi; cli; call dword ptr [eax - 0x73]; 
0x000c4df5: add byte ptr [ebx - 0x72e7db8c], cl; xchg dh, al; inc edi; cli; call dword ptr [eax - 0x73]; 
0x0007f695: add byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [eax], ecx; mov bh, dl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007fa73: add byte ptr [ebx - 0x72ebdba4], cl; sub dword ptr [eax - 0x72000577], -0x6d; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x0007d349: add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ebx; mov edx, edi; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d438: add byte ptr [ebx - 0x72efdb84], cl; xchg esp, esp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007d325: add byte ptr [ebx - 0x72efdb8c], cl; xchg al, bl; mov edx, edi; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x000f22ae: add byte ptr [ebx - 0x72efdbbc], cl; cmp byte ptr [ecx + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x000e8d0a: add byte ptr [ebx - 0x72f3db84], cl; xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000e8f63: add byte ptr [ebx - 0x72f3db84], cl; xchg eax, edi; xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x0007f1af: add byte ptr [ebx - 0x72f3db8c], cl; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x00092e2c: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x00161fef: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00161e5d: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0006930e: add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x00166ea1: add byte ptr [ebx - 0x748fdb8c], cl; jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x000ff6e8: add byte ptr [ebx - 0x74abdbb4], cl; pop esp; and al, 0x50; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f4ea0: add byte ptr [ebx - 0x74abdbb4], cl; push esp; and al, 0x58; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x00133861: add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4b75; 
0x000a643b: add byte ptr [ebx - 0x74c7dbac], cl; inc edx; add al, 0x83; ret 0x8304; 
0x000ec671: add byte ptr [ebx - 0x74c7dbac], cl; jl 0xec69d; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000db69e: add byte ptr [ebx - 0x74cfdb8c], cl; mov word ptr [esi - 0x5feec], es; add ecx, esi; jmp ecx; 
0x000d9cfd: add byte ptr [ebx - 0x74d7db84], cl; inc edi; and al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0010177f: add byte ptr [ebx - 0x74dfdb94], cl; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016801d: add byte ptr [ebx - 0x74dfdba4], cl; xchg esp, eax; mov bl, 0xc8; retf 0xfffa; add edx, ebx; jmp edx; 
0x0012c438: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [ebx - 0x5d9a0], es; add ecx, ebx; jmp ecx; 
0x001249d1: add byte ptr [ebx - 0x74e3dbac], cl; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x000ba843: add byte ptr [ebx - 0x74ebdb8c], cl; mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x000ec3a5: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0014557e: add byte ptr [ebx - 0x74efdbb4], cl; push esp; and al, 0x14; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010166e: add byte ptr [ebx - 0x74efdbb4], cl; push esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00102707: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x1025c0; add esp, 4; ret; 
0x0007d550: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; or al, 0x39; ret 0x870f; 
0x00050f35: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000e1df5: add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7ca0: add byte ptr [ebx - 0x74f3dbb4], cl; test byte ptr [ecx - 0x5f518], dh; add eax, ecx; jmp eax; 
0x000352bc: add byte ptr [ebx - 0x74f7dbb4], cl; push esp; and al, 0xc; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0002937f: add byte ptr [ebx - 0x74f7dbbc], cl; push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00028c19: add byte ptr [ebx - 0x74fbdbac], cl; adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0007b69a: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x0007b56a: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x0007b6da: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x7b6f0; ret; 
0x0007b72a: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x0013ca5f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; dec esp; ret; 
0x0013ca7f: add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x00079a0f: add byte ptr [ebx - 0x74fbdbbc], cl; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0004d13a: add byte ptr [ebx - 0x74fe4fbb], 0x50; or byte ptr [ebx - 0x7f747bbb], cl; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000ff5aa: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011960f: add byte ptr [ebx - 0x75], dl; inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0003ddba: add byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x00165443: add byte ptr [ebx - 0x768fdbbc], cl; ret 0x44c7; 
0x000bf433: add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0009f444: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x001688ac: add byte ptr [ebx - 0x76dbdbbc], cl; xchg esp, eax; and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x00021c16: add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x00032437: add byte ptr [ebx - 0x76dfdbbc], cl; ret; 
0x0002155f: add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x001688b7: add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x0012385b: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0015e934: add byte ptr [ebx - 0x76f3dbbc], cl; ret; 
0x00165632: add byte ptr [ebx - 0x76f7db84], cl; ret 0x44c7; 
0x000b8b17: add byte ptr [ebx - 0x76f7db8c], cl; ret 0x44f6; 
0x000a5870: add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000423b1: add byte ptr [ebx - 0x76fbdbb4], cl; ret; 
0x0008ea3c: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x0011ff5d: add byte ptr [ebx - 0x7768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x000c1afd: add byte ptr [ebx - 0x776ef3c], al; call eax; 
0x0008ab91: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x0013284e: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0001b0bf: add byte ptr [ebx - 0x77], dl; ret; 
0x00059dc7: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test dh, bl; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000c1102: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x0006929e: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [esi - 0x77]; ret 0xe283; 
0x0012e056: add byte ptr [ebx - 0x7872ef3c], al; xor al, 0x62; cli; call dword ptr [eax - 0x73]; 
0x00026747: add byte ptr [ebx - 0x7872f314], al; daa; das; cli; call dword ptr [eax - 0x18]; 
0x00026644: add byte ptr [ebx - 0x7872f714], al; inc eax; jo 0x26647; call dword ptr [eax + 0x56]; 
0x00162624: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0005f77f: add byte ptr [ebx - 0x7a39fe1e], al; idiv edi; jmp dword ptr [eax]; 
0x00063bb0: add byte ptr [ebx - 0x7a39fe20], al; inc edi; idiv edi; jmp dword ptr [eax]; 
0x0011e4c9: add byte ptr [ebx - 0x7a72f314], al; cmpsd dword ptr [esi], dword ptr es:[edi]; pop esi; cli; call dword ptr [eax - 0x18]; 
0x00076c19: add byte ptr [ebx - 0x7a72f714], al; adc al, 0x41; cli; call dword ptr [eax - 0x75]; 
0x00113fe7: add byte ptr [ebx - 0x7a72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x0011dbf1: add byte ptr [ebx - 0x7a72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x0002e551: add byte ptr [ebx - 0x7a72f714], al; sti; xor edx, edi; call dword ptr [eax + 0x53]; 
0x000517a7: add byte ptr [ebx - 0x7a72fb14], al; fnsave dword ptr [edx + edi*8]; call dword ptr [ecx + 0x50]; 
0x00061260: add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000202b8: add byte ptr [ebx - 0x7ac7db8c], cl; test byte ptr [edi], -0x7c; mov al, byte ptr [0xf6000001]; ret 0xf08; 
0x000c69e9: add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aa9: add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00132df7: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 8], cl; add esp, 0xc; ret; 
0x00122dc2: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x5bc377f], cl; call dword ptr [eax + 0x52]; 
0x0005573f: add byte ptr [ebx - 0x7af00005], al; ret 0xfffe; 
0x000e43fa: add byte ptr [ebx - 0x7af00008], al; lodsb al, byte ptr [esi]; or eax, dword ptr [eax]; add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000e42c3: add byte ptr [ebx - 0x7af00106], al; pushfd; or dword ptr [eax], eax; add byte ptr [ebx - 0x18773], cl; jmp dword ptr [ebp - 0x7d]; 
0x00029198: add byte ptr [ebx - 0x7b74cfc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000291c8: add byte ptr [ebx - 0x7b74d7c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0005a740: add byte ptr [ebx - 0x7bf00001], al; ret 0x13; 
0x0008b8a7: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x0015e524: add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x00162a82: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00086a43: add byte ptr [ebx - 0x7bf0fe05], al; push edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0007633c: add byte ptr [ebx - 0x7bf0fe06], al; ret 0; 
0x0015dfc3: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000cd717: add byte ptr [ebx - 0x7c2876fe], cl; ret 0x8304; 
0x00078cfb: add byte ptr [ebx - 0x7c72eb14], al; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x0016b84b: add byte ptr [ebx - 0x7c72ef14], al; add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x000b5733: add byte ptr [ebx - 0x7c72f314], 0x7a; inc esi; cli; call dword ptr [eax - 0x18]; 
0x0002e70c: add byte ptr [ebx - 0x7c72f314], al; das; cli; call dword ptr [eax - 0x18]; 
0x0008305f: add byte ptr [ebx - 0x7c72f314], al; in al, 0x8a; cli; call dword ptr [eax - 0x18]; 
0x000b5650: add byte ptr [ebx - 0x7c72f714], al; cmpsd dword ptr [esi], dword ptr es:[edi]; inc esi; cli; call dword ptr [eax + 0x57]; 
0x000f8427: add byte ptr [ebx - 0x7c72f714], al; jbe 0xf8479; cli; call dword ptr [eax - 0x73]; 
0x000f84f7: add byte ptr [ebx - 0x7c72f714], al; jbe 0xf8549; cli; call dword ptr [eax - 0x73]; 
0x000b56d4: add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x57]; 
0x000f98d7: add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x000b3ed3: add byte ptr [ebx - 0x7c72fb14], al; dec esp; and byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [eax - 0xd], 0xffffffec; call dword ptr [eax - 1]; 
0x0012afff: add byte ptr [ebx - 0x7c72fb14], al; mov eax, 0x6afffaa2; add eax, 0x28838d50; jo 0x12b00b; call dword ptr [eax - 0x18]; 
0x000fd9a7: add byte ptr [ebx - 0x7c72fb3c], al; jns 0xfd9fa; cli; call ptr [ebx + 0x5e]; ret; 
0x00087697: add byte ptr [ebx - 0x7cc7dbac], cl; in al, dx; or byte ptr [ecx], al; ret 0xf829; 
0x000bfb11: add byte ptr [ebx - 0x7cebdb8c], cl; jmp dword ptr [ebx + 0xf]; 
0x0001e5f0: add byte ptr [ebx - 0x7cefdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0010e097: add byte ptr [ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d8dc7: add byte ptr [ebx - 0x7cf1dcf6], cl; ret 0x8304; 
0x000e8b4f: add byte ptr [ebx - 0x7cf3dbbc], cl; ret; 
0x000d8cb7: add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00044977: add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00025aa3: add byte ptr [ebx - 0x7cfbdbbc], cl; ret; 
0x0011f3f9: add byte ptr [ebx - 0x7d], dl; in al, dx; or byte ptr [ebx - 0x1768], cl; jmp dword ptr [ebp - 0x75]; 
0x001628ba: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00139d7c: add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000cea76: add byte ptr [ebx - 0x7e722bb3], cl; jo 0xcea0f; cli; call dword ptr [eax - 0x73]; 
0x0010ec69: add byte ptr [ebx - 0x7f72e714], al; test dword ptr [ecx - 6], ebx; call dword ptr [eax - 0x18]; 
0x0010d599: add byte ptr [ebx - 0x7f72e714], al; xor ebx, dword ptr [ecx - 6]; call dword ptr [eax - 0x18]; 
0x000ff3fa: add byte ptr [ebx - 0x7f], bl; ret; 
0x00126186: add byte ptr [ebx - 0x7f], dl; ret; 
0x0005ee7f: add byte ptr [ebx - 0x86b63], cl; inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x0005e8c7: add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0005eabe: add byte ptr [ebx - 0x8737b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005e80d: add byte ptr [ebx - 0x8737b], cl; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x5e816; call dword ptr [eax - 0x18]; 
0x00064028: add byte ptr [ebx - 0x88b4b], cl; inc dword ptr [ebx - 0x7276fb14]; pushal; idiv edi; call dword ptr [esi - 1]; 
0x000638bf: add byte ptr [ebx - 0x89343], cl; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0006380d: add byte ptr [ebx - 0x8937b], cl; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x0002af6e: add byte ptr [ebx - 0x8b6b], cl; inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x00029419: add byte ptr [ebx - 0x8b80], cl; jmp dword ptr [ebp + 3]; 
0x000271a7: add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000bc9d4: add byte ptr [ebx - 0x9373], cl; inc dword ptr [ebx]; mov word ptr [ecx - 0x60bac], es; jmp ecx; 
0x000bc913: add byte ptr [ebx - 0x937b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x60f84], bl; jmp eax; 
0x0004168f: add byte ptr [ebx - 0x977b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000c72a9: add byte ptr [ebx - 0x9bf796c], cl; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x000d914f: add byte ptr [ebx - 0xa363], cl; dec dword ptr [ebx - 0xa76b]; inc dword ptr [ecx]; ret; 
0x0006a46e: add byte ptr [ebx - 0xa8fb14], al; jne 0x6a47e; push esi; call dword ptr [ebx + 0x1c]; 
0x0008344c: add byte ptr [ebx - 0xa9f714], al; jae 0x83478; call eax; 
0x00082af8: add byte ptr [ebx - 0xa9f714], al; je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x00066c7a: add byte ptr [ebx - 0xa9fb14], al; je 0x66ca6; push eax; push ebp; call dword ptr [ebx + 0x1c]; 
0x00082983: add byte ptr [ebx - 0xa9fb14], al; je 0x829af; pop esp; push dword ptr [esp + 0x5c]; call eax; 
0x00082c78: add byte ptr [ebx - 0xa9fb14], al; je 0x82ca4; insb byte ptr es:[edi], dx; push ebp; call eax; 
0x000613af: add byte ptr [ebx - 0xaafb14], al; je 0x613db; inc esp; push esi; call dword ptr [ebx + 0x1c]; 
0x00061902: add byte ptr [ebx - 0xaafb14], al; je 0x6192e; inc esp; push esi; call dword ptr [eax + 0x1c]; 
0x000414ac: add byte ptr [ebx - 0xab43], cl; inc dword ptr [ebx - 0x3f7cfb14]; add dword ptr [ecx - 0x9373], ecx; call dword ptr [eax - 0x73]; 
0x00065886: add byte ptr [ebx - 0xacfb14], al; je 0x658b2; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x0006bcbc: add byte ptr [ebx - 0xacfb14], al; jne 0x6bcd0; push esi; call dword ptr [eax + 0x2c]; 
0x0013e449: add byte ptr [ebx - 0xaefb14], al; je 0x13e475; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0010a0cc: add byte ptr [ebx - 0xaff33c], al; jne 0x10a088; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000835a7: add byte ptr [ebx - 0xaff714], al; jae 0x835d3; call edx; 
0x00133def: add byte ptr [ebx - 0xb743], cl; dec dword ptr [ebp - 0x72af5fbb]; xchg dword ptr [esi - 0x72b00000], esp; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x0011c297: add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0x8363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000293f9: add byte ptr [ebx - 0xbb80], cl; jmp dword ptr [ebp + 3]; 
0x000bccad: add byte ptr [ebx - 0xbf4b], cl; dec dword ptr [ecx - 0x8743]; dec dword ptr [edi]; dec ebp; ret; 
0x000d8da7: add byte ptr [ebx - 0xd37b], cl; jmp dword ptr [esi - 0x77]; 
0x0007bdcf: add byte ptr [ebx - 0xe7fef14], al; call dword ptr [edx + 0x51]; 
0x000b6ef5: add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ebx - 0x7e72f714]; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x00033414: add byte ptr [ebx - 0xf47378b], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008257d: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x00082750: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0001f0d0: add byte ptr [ebx - 1], dl; je 0x1f0f9; push 0x642474ff; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0007705f: add byte ptr [ebx - 1], dl; push ebp; and al, 0x21; ret 0xc483; 
0x0013f06d: add byte ptr [ebx - 1], dl; push edi; and al, 0x21; ret 0xc483; 
0x00122cf6: add byte ptr [ebx - 6], ch; call dword ptr [eax - 0x73]; 
0x000293c3: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x000fb11c: add byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00094891: add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949b8: add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009d89c: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00145b8e: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00148834: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148899: add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00033eab: add byte ptr [ebx], dh; xchg ecx, eax; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0x850f; 
0x000337c9: add byte ptr [ebx], dh; xchg ecx, eax; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0xab75; 
0x000f56fc: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x0002795e: add byte ptr [ecx + 0x10d086], cl; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x000d1734: add byte ptr [ecx + 0x1128cbc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000c6b4a: add byte ptr [ecx + 0x11d4b5c3], al; add byte ptr [ecx + 0x154cec], al; add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x000c0116: add byte ptr [ecx + 0x123ee9c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000bfb0b: add byte ptr [ecx + 0x1244f4c3], al; add byte ptr [ebx - 0x7cebdb8c], cl; jmp dword ptr [ebx + 0xf]; 
0x000c0996: add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000d2c2c: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c6b50: add byte ptr [ecx + 0x154cec], al; add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x000324b9: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007b724: add byte ptr [ecx + 0x1688dbc1], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x0007b6d4: add byte ptr [ecx + 0x16892bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x7b6f0; ret; 
0x0007b694: add byte ptr [ecx + 0x16896bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x0007b564: add byte ptr [ecx + 0x168a9bc2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x001379c6: add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00078cf5: add byte ptr [ecx + 0x16b30ac3], al; add byte ptr [ebx - 0x7c72eb14], al; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000754f6: add byte ptr [ecx + 0x16eb09c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00074fe9: add byte ptr [ecx + 0x16f016c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000ec493: add byte ptr [ecx + 0x170c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f6e1c: add byte ptr [ecx + 0x17ab8d3], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70fc: add byte ptr [ecx + 0x17bb8d3], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0005e0a8: add byte ptr [ecx + 0x185f57c7], al; add byte ptr [esi - 0x73], dl; mov ch, 0xb8; idiv edi; call dword ptr [ebx - 0x7f]; 
0x00046466: add byte ptr [ecx + 0x19db99c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0003de46: add byte ptr [ecx + 0x1a61b9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0003af06: add byte ptr [ecx + 0x1a90f9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00037fb6: add byte ptr [ecx + 0x1ac049c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00030c9b: add byte ptr [ecx + 0x1b3364c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0002ca3c: add byte ptr [ecx + 0x1b75c3c3], al; add byte ptr [ecx + 0x1ecec], al; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ff401: add byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007cde7: add byte ptr [ecx + 0x1bafb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001b0b9: add byte ptr [ecx + 0x1c8f46c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0001aff4: add byte ptr [ecx + 0x1c900bc2], al; add bh, dh; fmul dword ptr [ebx - 0x1076e]; jmp dword ptr [ebp - 0x77]; 
0x0010cfa7: add byte ptr [ecx + 0x1d329cb], cl; ret; 
0x0002ca42: add byte ptr [ecx + 0x1ecec], al; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013ea8c: add byte ptr [ecx + 0x1ffbc1e8], cl; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x000ea20c: add byte ptr [ecx + 0x1fffc1f7], cl; test eax, eax; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2bc: add byte ptr [ecx + 0x1fffc1f7], cl; test eax, eax; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000e283a: add byte ptr [ecx + 0x2364b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x000a80d0: add byte ptr [ecx + 0x244489da], cl; and byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x00165811: add byte ptr [ecx + 0x2444c7fa], cl; or bh, bh; jg 0x16581b; add byte ptr [ecx], cl; ret 0x448b; 
0x001643bc: add byte ptr [ecx + 0x24548be9], cl; and al, 0x29; ret 0x741b; 
0x0001912e: add byte ptr [ecx + 0x24868dc7], cl; sub al, 0xfa; call dword ptr [edx + 0x52]; 
0x00030e19: add byte ptr [ecx + 0x24948bc1], cl; xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e1ad5: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x0013f78c: add byte ptr [ecx + 0x25b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139977: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0012fea3: add byte ptr [ecx + 0x310c2454], cl; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011e8bd: add byte ptr [ecx + 0x31102444], cl; shr byte ptr [edx + 2], 0x8d; xor ecx, 0x2f; cli; call dword ptr [eax + 0x51]; 
0x000e1e94: add byte ptr [ecx + 0x312c247c], cl; jmp dword ptr [esi - 0x7d]; 
0x001312d6: add byte ptr [ecx + 0x31382454], cl; rcl byte ptr [edi - 0x18], cl; std; sal esi, 1; call ecx; 
0x0011919e: add byte ptr [ecx + 0x313c2444], cl; shr al, 0x86; jl 0x1191a7; inc dword ptr [ebp - 0x76ad8740]; ret; 
0x0010d5c7: add byte ptr [ecx + 0x31442444], cl; ror byte ptr [ebx - 0x7297db84], 0x83; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x00134d81: add byte ptr [ecx + 0x3158247c], cl; call dword ptr [eax - 0x18]; 
0x0012e3ea: add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x0011ff06: add byte ptr [ecx + 0x31702444], cl; ror byte ptr [ebp + 0x56102474], 0x8d; sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x000f5fee: add byte ptr [ecx + 0x36b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007d503: add byte ptr [ecx + 0x391c2444], cl; ret; 
0x000ef716: add byte ptr [ecx + 0x3d182454], cl; add byte ptr [eax + eax], al; add byte ptr [edi], cl; inc edx; ret; 
0x00109e2a: add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x000dcf01: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x0008b0ef: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x0009c1bd: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098d4a: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x0009c1dd: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098d6a: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x0009c2bd: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098e3a: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x0009c2dd: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098e5a: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x001004fa: add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001009ba: add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00116877: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x00085ee8: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009538f: add byte ptr [ecx + 0x4578817], cl; pop edi; pop esi; pop ebx; ret; 
0x000f7ccd: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006e12d: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000fd94f: add byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000700f9: add byte ptr [ecx + 0x4ec83f8], cl; push eax; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x00070cd4: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x0012f8aa: add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0007131b: add byte ptr [ecx + 0x50], dl; push ebx; push edx; call esi; 
0x00139790: add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 4]; 
0x001396e8: add byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x000f5d33: add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fb7: add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012fc0c: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009539f: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x00069a9e: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0006e6bf: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0006e55f: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x001476b0: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000955ef: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0008b027: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0004180d: add byte ptr [ecx + 0x5bd089c2], cl; pop esi; ret; 
0x0010de2f: add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x000451aa: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x00107952: add byte ptr [ecx + 0x5f5e2056], cl; ret; 
0x00087eb5: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x0003164a: add byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x00025f89: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x00137b5e: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0005df6e: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x000821d4: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0004aa67: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x0002deef: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x000505f1: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0002ea9b: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x00069a17: add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0008b11b: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000c5bbc: add byte ptr [ecx + 0x68c783d1], cl; mov esi, edx; call dword ptr gs:[0x10]; 
0x000eca2f: add byte ptr [ecx + 0x6a0c2444], cl; call dword ptr [edi + 0x56]; 
0x0012498d: add byte ptr [ecx + 0x6a], dl; add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00028d16: add byte ptr [ecx + 0x6a], dl; add byte ptr [edx + 1], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00073432: add byte ptr [ecx + 0x6dbae9c7], cl; cli; jmp dword ptr [esi - 0x70]; 
0x00098e7a: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0001e450: add byte ptr [ecx + 0x74fa3910], cl; or eax, 0x3904458d; ret; 
0x0009e6bb: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00083219: add byte ptr [ecx + 0x77838d10], cl; inc esp; cli; call dword ptr [esi + 0x6a]; 
0x000d4ac3: add byte ptr [ecx + 0x7ec085c7], cl; jnp 0x149a5314; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x00163f98: add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x000b6f1e: add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007accc: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000192e8: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0002a78b: add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cde2: add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081588: add byte ptr [ecx + 0x81], bh; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019490: add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000339a5: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033adf: add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0001cdb2: add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a75c: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00031cc1: add byte ptr [ecx + 0x8bef9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000301fe: add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x000b43ef: add byte ptr [ecx + 0x90c4], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0013f7a0: add byte ptr [ecx + 0x9cac1f0], cl; xor edx, dword ptr gs:[0x18]; call edx; 
0x00075af5: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0012e1c7: add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001379c0: add byte ptr [ecx + 0xac63fc3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0006b142: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013611a: add byte ptr [ecx + 0xadee5c3], al; add byte ptr [ecx + 0xb0ec], al; add byte ptr [ecx - 0xaf7b], cl; dec dword ptr [ecx - 0xb36b]; dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x00136120: add byte ptr [ecx + 0xb0ec], al; add byte ptr [ecx - 0xaf7b], cl; dec dword ptr [ecx - 0xb36b]; dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x000311e1: add byte ptr [ecx + 0xb3b8c6], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f697: add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x0012f0a7: add byte ptr [ecx + 0xb4f58c3], al; add byte ptr [ebx - 0x18345], cl; jmp dword ptr [ebp - 0x75]; 
0x00102523: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00124905: add byte ptr [ecx + 0xbf6fac5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000eab32: add byte ptr [ecx + 0xc42484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000c7263: add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00108087: add byte ptr [ecx + 0xdbf78c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00030e0b: add byte ptr [ecx + 0xe0b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009c580: add byte ptr [ecx + 0xe5e93c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009c075: add byte ptr [ecx + 0xe639ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009c050: add byte ptr [ecx + 0xe63c3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009c030: add byte ptr [ecx + 0xe63e3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009c013: add byte ptr [ecx + 0xe6400c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009bf74: add byte ptr [ecx + 0xe641fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009bfe6: add byte ptr [ecx + 0xe642dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009bf56: add byte ptr [ecx + 0xe643dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009bfcf: add byte ptr [ecx + 0xe6444c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009bfb4: add byte ptr [ecx + 0xe645fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009bf31: add byte ptr [ecx + 0xe6462c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009bf92: add byte ptr [ecx + 0xe6481c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009bf07: add byte ptr [ecx + 0xe648cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009beee: add byte ptr [ecx + 0xe64a5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009becd: add byte ptr [ecx + 0xe64c6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009bea9: add byte ptr [ecx + 0xe64eac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009be8b: add byte ptr [ecx + 0xe6508c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009be08: add byte ptr [ecx + 0xe658bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098c56: add byte ptr [ecx + 0xe96bdc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098c31: add byte ptr [ecx + 0xe96e2c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098c07: add byte ptr [ecx + 0xe970cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098bee: add byte ptr [ecx + 0xe9725c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098bcd: add byte ptr [ecx + 0xe9746c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098ba9: add byte ptr [ecx + 0xe976ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098b8b: add byte ptr [ecx + 0xe9788c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098b6f: add byte ptr [ecx + 0xe97a4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00096ce0: add byte ptr [ecx + 0xeb55fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096bfb: add byte ptr [ecx + 0xeb6d4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096be8: add byte ptr [ecx + 0xeb6e7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096bcc: add byte ptr [ecx + 0xeb703c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000f82dd: add byte ptr [ecx + 0xebd22c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000960d5: add byte ptr [ecx + 0xec16ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000960b0: add byte ptr [ecx + 0xec18fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096090: add byte ptr [ecx + 0xec1afc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096073: add byte ptr [ecx + 0xec1ccc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00095fd4: add byte ptr [ecx + 0xec1ebc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00096046: add byte ptr [ecx + 0xec1f9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009602f: add byte ptr [ecx + 0xec210c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096014: add byte ptr [ecx + 0xec22bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00095ff2: add byte ptr [ecx + 0xec24dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00095f00: add byte ptr [ecx + 0xec2bfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00095ee0: add byte ptr [ecx + 0xec2dfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00095ebb: add byte ptr [ecx + 0xec304c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000955e0: add byte ptr [ecx + 0xecaffc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b56a3: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000954fb: add byte ptr [ecx + 0xecc74c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000954e8: add byte ptr [ecx + 0xecc87c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000954cc: add byte ptr [ecx + 0xecca3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a95: add byte ptr [ecx + 0xed64ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a70: add byte ptr [ecx + 0xed66fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a50: add byte ptr [ecx + 0xed68fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a33: add byte ptr [ecx + 0xed6acc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094994: add byte ptr [ecx + 0xed6cbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094a06: add byte ptr [ecx + 0xed6d9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000949ef: add byte ptr [ecx + 0xed6f0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000949d4: add byte ptr [ecx + 0xed70bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000949b2: add byte ptr [ecx + 0xed72dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000948d0: add byte ptr [ecx + 0xed78fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000948b0: add byte ptr [ecx + 0xed7afc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009488b: add byte ptr [ecx + 0xed7d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000f6714: add byte ptr [ecx + 0xed8ebc2], al; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0007eb00: add byte ptr [ecx + 0xf64247c], cl; inc edi; ret 0x5c89; 
0x0007e732: add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x0001917b: add byte ptr [ecx + 0xf8c86], cl; add byte ptr [esi + 0x5f], bl; ret; 
0x00055bd2: add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x000c6ca2: add byte ptr [ecx + 0xfa6f3c6], cl; xchg edi, eax; ret 0xda80; 
0x000f97f0: add byte ptr [ecx + 0xfa6f3de], cl; xchg edi, eax; ret 0xda80; 
0x000311b7: add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x000311dc: add byte ptr [ecx + 8], bh; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0013f787: add byte ptr [ecx + 9], bh; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0009d854: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x0009d6b0: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x0009e592: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0004465c: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x000c714e: add byte ptr [ecx + ebp*2 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x0012c18b: add byte ptr [ecx + ecx*8 - 0x137c9f8b], al; or byte ptr [ebp - 0x8b63], cl; dec dword ptr [ecx - 0xab6b]; call dword ptr [eax + 0x53]; 
0x00074338: add byte ptr [ecx + ecx*8 - 0x137caf8b], al; or byte ptr [ecx - 0x7c72f7bb], cl; pushal; add cl, ch; call dword ptr [eax - 0x73]; 
0x00037b15: add byte ptr [ecx + ecx*8 - 0x7c3dbbf1], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b33fb: add byte ptr [ecx - 0x1317afae], bl; pop ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00124152: add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x000c6b56: add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x000e4258: add byte ptr [ecx - 0x1577b], cl; dec dword ptr [ebx - 0x1877b]; jmp dword ptr [ebp + 3]; 
0x000e48ab: add byte ptr [ecx - 0x15b6b], cl; call dword ptr [eax + 0x53]; 
0x001379cc: add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000e397a: add byte ptr [ecx - 0x1677b], cl; dec dword ptr [ecx - 0x7c067638]; ret 0x8920; 
0x000a98bf: add byte ptr [ecx - 0x16dfdbbc], cl; ret 0xfff5; 
0x00120e03: add byte ptr [ecx - 0x16fbdbbc], cl; adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0006a058: add byte ptr [ecx - 0x17a9afae], bl; scasb al, byte ptr es:[edi]; sbb dword ptr [eax], eax; add byte ptr [ecx], ah; ret 0xc483; 
0x000f1bf8: add byte ptr [ecx - 0x17a9fbbd], cl; fmulp st(0); cli; jmp dword ptr [esi + 3]; 
0x000f3458: add byte ptr [ecx - 0x17a9fbbd], cl; jle 0xf3410; cli; jmp dword ptr [esi + 3]; 
0x0002ca48: add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x000f25f4: add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00101e1b: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000b087c: add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00048b36: add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000b02be: add byte ptr [ecx - 0x364f73], cl; dec dword ptr [edi]; dec edi; ret 0xc801; 
0x00047497: add byte ptr [ecx - 0x36576b], cl; dec dword ptr [ebx - 0x364f6b]; call dword ptr [ebx - 0x75]; 
0x000aed07: add byte ptr [ecx - 0x365f6b], cl; dec dword ptr [ebx - 0x363f6b]; call dword ptr [ebx - 0x75]; 
0x00132789: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x00132759: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00044432: add byte ptr [ecx - 0x387cccfc], cl; add al, 0x83; ret; 
0x00087203: add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ebp - 0x8fef98c], cl; rol byte ptr [ecx], 1; ret; 
0x0008158d: add byte ptr [ecx - 0x4509ce05], cl; add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00031de0: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001a8cb: add byte ptr [ecx - 0x47e7dbbc], cl; ret 0; 
0x0012de39: add byte ptr [ecx - 0x4f7c723b], cl; popal; cli; call dword ptr [ecx + 0x6a]; 
0x00101965: add byte ptr [ecx - 0x50b7b], cl; dec dword ptr [ebp - 0x5a9d180]; jmp dword ptr [ebp - 0x75]; 
0x0005a2eb: add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00058eb5: add byte ptr [ecx - 0x5236b], cl; call dword ptr [eax - 0x18]; 
0x000c1060: add byte ptr [ecx - 0x6c7b163d], cl; cmc; jmp dword ptr [esi - 0x70]; 
0x000c1648: add byte ptr [ecx - 0x7238163a], cl; cmc; call dword ptr [esi + 0x53]; 
0x0001fb2f: add byte ptr [ecx - 0x72d3dbb4], cl; dec edi; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x000e8b47: add byte ptr [ecx - 0x72e21409], cl; je 0xe8b75; add byte ptr [ebx - 0x7cf3dbbc], cl; ret; 
0x0008432f: add byte ptr [ecx - 0x72f3dbac], cl; sbb dword ptr [ebp - 0x7c0005bc], -0x14; add al, 0x6a; add eax, 0x28838d50; jo 0x8433f; call dword ptr [eax - 0x18]; 
0x000f7bb3: add byte ptr [ecx - 0x72f3dbbc], cl; xor bh, 0x4b; cli; jmp dword ptr [ebp - 0x75]; 
0x000a7f0c: add byte ptr [ecx - 0x74367a09], cl; mov word ptr [eax + ecx*2], fs; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x0007060a: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0001f190: add byte ptr [ecx - 0x74f3dbac], cl; jl 0x1f1bc; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x00131872: add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x317374c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0008aae7: add byte ptr [ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x0001a809: add byte ptr [ecx - 0x763fcf28], cl; ret 0x8689; 
0x0004d845: add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x000aaebb: add byte ptr [ecx - 0x769bdbac], cl; ret 0x448b; 
0x000aaf1f: add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x0004033c: add byte ptr [ecx - 0x76b7dbb4], cl; ret 0xe2d3; 
0x000c4b46: add byte ptr [ecx - 0x76d3dbac], cl; ret 0x808b; 
0x0002b504: add byte ptr [ecx - 0x76d7dbbc], cl; ret; 
0x0008188b: add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x000a44c3: add byte ptr [ecx - 0x76dfdbb4], cl; ret 0xe2d3; 
0x000bbc36: add byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x00163f9e: add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x00129c5d: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0008170f: add byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x000453f7: add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; fld xword ptr [esp]; add esp, 0x14; ret; 
0x0010d5ef: add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x0010c643: add byte ptr [ecx - 0x77], bl; or dword ptr [eax + 0x29], 0; add byte ptr [eax - 0x73], bl; sub eax, 0x58; cli; call dword ptr [eax - 1]; 
0x000d9c8f: add byte ptr [ecx - 0x7abfdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0013b007: add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x000a9359: add byte ptr [ecx - 0x7c26d63a], cl; ret; 
0x0007d7a1: add byte ptr [ecx - 0x7cd7dbb4], cl; in al, dx; or al, 0x8b; test dword ptr [eax + 0x56fffffe], edx; call dword ptr [eax]; 
0x00022b8b: add byte ptr [ecx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret; 
0x00128218: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x59f5e7d], cl; call dword ptr [eax - 1]; 
0x00021b06: add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x000627bf: add byte ptr [ecx - 0x7cf7dbb4], cl; in al, dx; or byte ptr [ecx + 0x245489fb], cl; or al, 0x6a; call dword ptr [esi - 0x18]; 
0x000d9db4: add byte ptr [ecx - 0x7cf7dbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [ecx + 0xf60247c], 1; dec esp; ret 0xc183; 
0x000bf55e: add byte ptr [ecx - 0x7cfbdbbc], cl; in al, dx; or al, 0x89; ret; 
0x000a286f: add byte ptr [ecx - 0x7e377626], cl; ret 0; 
0x00071e22: add byte ptr [ecx - 0x7f051639], cl; cli; jmp dword ptr [esi - 0x70]; 
0x000438f0: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x000c74e0: add byte ptr [ecx - 0x8b7b], cl; dec dword ptr [ebp - 0x5b79a79]; call dword ptr [eax - 0x18]; 
0x0016415f: add byte ptr [ecx - 0x939d632], cl; ret; 
0x0004b460: add byte ptr [ecx - 0x976b], cl; call dword ptr [ebx - 0x75]; 
0x00041105: add byte ptr [ecx - 0x977b], cl; dec dword ptr [ebx + 0x7d8b0c45]; or byte ptr [ecx - 0xa37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011bd40: add byte ptr [ecx - 0xaf7b], cl; call dword ptr [eax + 0x6a]; 
0x00136126: add byte ptr [ecx - 0xaf7b], cl; dec dword ptr [ecx - 0xb36b]; dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x001028a5: add byte ptr [ecx - 0xbb7b], cl; dec dword ptr [ebx + 0x758b0845]; adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d8316: add byte ptr [ecx - 0xd37b], cl; dec dword ptr [ecx - 0xc36b]; dec dword ptr [ecx - 0xb743]; jmp dword ptr [ebp - 0x5f]; 
0x0001a835: add byte ptr [ecx - 0xff1b], al; call ecx; 
0x0009e2ab: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0001e913: add byte ptr [ecx - 6], ch; call dword ptr [eax + 0x68]; 
0x0001e7fc: add byte ptr [ecx - 6], ch; call dword ptr [eax - 0x73]; 
0x000d0185: add byte ptr [ecx], 0; add byte ptr [ebp - 0x5b6cc7d], cl; call dword ptr [eax - 0x73]; 
0x00025aa0: add byte ptr [ecx], 0; add byte ptr [ebx - 0x7cfbdbbc], cl; ret; 
0x00114fea: add byte ptr [ecx], 0x31; cli; call dword ptr [eax + 0x56]; 
0x00065cc7: add byte ptr [ecx], 0xd9; jmp ecx; 
0x00060a73: add byte ptr [ecx], 0xe9; jmp ecx; 
0x0011d5ff: add byte ptr [ecx], ah; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0009e4e8: add byte ptr [ecx], ah; ret 0x2474; 
0x0006a061: add byte ptr [ecx], ah; ret 0xc483; 
0x000277af: add byte ptr [ecx], ah; ret; 
0x0012fcc1: add byte ptr [ecx], al; add byte ptr [eax], al; add bh, bh; je 0x12fced; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0007ae99: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00157c8b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx + 0x57], ebp; hlt; call dword ptr [ebx - 0x18]; 
0x0015a19b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx], edi; xor esi, esp; call dword ptr [ebx - 0x18]; 
0x000293c0: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000f91a8: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010341a: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x000f6105: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x0009e417: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0x9e421; xor eax, eax; ret; 
0x00050098: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000e4cef: add byte ptr [ecx], al; add byte ptr [eax], al; push edx; push eax; call ebx; 
0x000290bc: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x0009e367: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x0011221a: add byte ptr [ecx], al; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x0003459b: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00033673: add byte ptr [ecx], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0010bba7: add byte ptr [ecx], al; call eax; 
0x0010bb4f: add byte ptr [ecx], al; call edx; 
0x0009c643: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0010b98e: add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00034729: add byte ptr [ecx], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0008000e: add byte ptr [ecx], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007769a: add byte ptr [ecx], al; pop ebx; pop esi; pop edi; ret; 
0x0006b087: add byte ptr [ecx], al; pop ebx; pop esi; ret; 
0x0013b57c: add byte ptr [ecx], al; ret 0x20eb; 
0x000d66fe: add byte ptr [ecx], al; ret 0x4489; 
0x00102097: add byte ptr [ecx], al; ret 0x8389; 
0x00139300: add byte ptr [ecx], al; ret 0xd139; 
0x00059dd3: add byte ptr [ecx], al; ret; 
0x0002f56f: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000efdc3: add byte ptr [ecx], al; sar byte ptr [0x1000], 0xf; inc edx; ret 0x489; 
0x000c704e: add byte ptr [ecx], al; sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x000b4fbf: add byte ptr [ecx], bh; cmp dword ptr [eax + 0xf000020], -0x6b; ret 0xb38b; 
0x0005b0a7: add byte ptr [ecx], bh; fbstp tbyte ptr [esp + edx - 0x7d]; ret; 
0x0007ee23: add byte ptr [ecx], bh; fisttp qword ptr [edi]; xchg ebp, eax; ret; 
0x000330ba: add byte ptr [ecx], bh; ret 0x1174; 
0x0007ad20: add byte ptr [ecx], bh; ret 0x1375; 
0x00026188: add byte ptr [ecx], bh; ret 0x1f74; 
0x0011907f: add byte ptr [ecx], bh; ret 0x1f77; 
0x0011fe87: add byte ptr [ecx], bh; ret 0x5473; 
0x000665a0: add byte ptr [ecx], bh; ret 0x820f; 
0x00075808: add byte ptr [ecx], bh; ret 0x830f; 
0x000e6583: add byte ptr [ecx], bh; ret 0x840f; 
0x000758bf: add byte ptr [ecx], bh; ret 0x850f; 
0x000b587b: add byte ptr [ecx], bh; ret 0x870f; 
0x000efe29: add byte ptr [ecx], bh; ret 0x972; 
0x000e2840: add byte ptr [ecx], bh; ret 0xe74; 
0x00042d28: add byte ptr [ecx], bh; ret; 
0x0007bbdb: add byte ptr [ecx], bh; retf 0x975; add esp, 8; pop ebx; ret; 
0x0012f251: add byte ptr [ecx], bh; ror byte ptr [ebp + 0x32a093], 1; add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x0009d33f: add byte ptr [ecx], bh; sal dword ptr [esi + 0x35], 0x89; ret; 
0x0004d3c6: add byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000d55d4: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x5489; 
0x000d511f: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9aeb; 
0x00085f0e: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0001fe8f: add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000ab292: add byte ptr [ecx], ch; ret 0x1a8b; 
0x000ab8f9: add byte ptr [ecx], ch; ret 0x28b; 
0x000b8782: add byte ptr [ecx], ch; ret 0x448b; 
0x000baa78: add byte ptr [ecx], ch; ret 0x448d; 
0x00107925: add byte ptr [ecx], ch; ret 0x4689; 
0x000cf2e0: add byte ptr [ecx], ch; ret 0x4be; 
0x00123a48: add byte ptr [ecx], ch; ret 0x5489; 
0x000ba9e0: add byte ptr [ecx], ch; ret 0x548d; 
0x00088f6a: add byte ptr [ecx], ch; ret 0x5589; 
0x00169457: add byte ptr [ecx], ch; ret 0x5e9; 
0x00164183: add byte ptr [ecx], ch; ret 0x61e9; 
0x000bea41: add byte ptr [ecx], ch; ret 0x748d; 
0x000bcb99: add byte ptr [ecx], ch; ret 0x858b; 
0x00053abe: add byte ptr [ecx], ch; ret 0x953b; 
0x000ab594: add byte ptr [ecx], ch; ret 0xa8b; 
0x000b9237: add byte ptr [ecx], ch; ret 0xbe0f; 
0x000f6633: add byte ptr [ecx], ch; ret 0xc085; 
0x000b4683: add byte ptr [ecx], ch; ret 0xc889; 
0x0002f360: add byte ptr [ecx], ch; ret 0xd089; 
0x000b926b: add byte ptr [ecx], ch; ret 0xd129; 
0x000bddef: add byte ptr [ecx], ch; ret 0xd329; 
0x000540cc: add byte ptr [ecx], ch; ret 0xd389; 
0x00087187: add byte ptr [ecx], ch; ret 0xd801; 
0x0003d476: add byte ptr [ecx], ch; ret 0xd889; 
0x000269dd: add byte ptr [ecx], ch; ret 0xf883; 
0x00169f10: add byte ptr [ecx], ch; ret 0xfa83; 
0x0004a01f: add byte ptr [ecx], ch; ret 0xfac1; 
0x0004b0d9: add byte ptr [ecx], ch; ret; 
0x000bafb5: add byte ptr [ecx], ch; retf 0x490f; ret 0xc801; 
0x000bac38: add byte ptr [ecx], ch; ror dword ptr [edi], 0x49; fld dword ptr [ecx]; ret; 
0x000bc118: add byte ptr [ecx], ch; ror dword ptr [edi], 0x49; rol dword ptr [ecx], 1; ret 0x48b; 
0x000afa06: add byte ptr [ecx], ch; shr dword ptr [ecx], 1; ror dword ptr [ebx - 0x35fb6b], cl; call ebx; 
0x0001b8c0: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00071968: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0016581b: add byte ptr [ecx], cl; ret 0x448b; 
0x00033eb1: add byte ptr [ecx], cl; ret 0x850f; 
0x00040a20: add byte ptr [ecx], cl; ret 0x9f74; 
0x000aa290: add byte ptr [ecx], cl; ret 0xa074; 
0x000337cf: add byte ptr [ecx], cl; ret 0xab75; 
0x001680b1: add byte ptr [ecx], cl; ret 0xac89; 
0x001683b1: add byte ptr [ecx], cl; ret; 
0x00069c68: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x0002f392: add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00101665: add byte ptr [ecx], dh; call dword ptr [esi + 0x53]; 
0x0009f29f: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0001af3a: add byte ptr [ecx], dh; fisttp dword ptr [ebp - 0x2f76ff8a]; call dword ptr gs:[0x10]; 
0x000d022f: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0002a761: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x0002cfe6: add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x0011fc37: add byte ptr [ecx], dh; leave; mov eax, ecx; ret; 
0x000bee59: add byte ptr [ecx], dh; leave; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x001192e8: add byte ptr [ecx], dh; mul byte ptr [esi - 0x77]; inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x0007c63c: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00107975: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00080f0b: add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x000e2fbf: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000f47f4: add byte ptr [ecx], dh; rol cl, 0xfd; pop ds; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000b4fb7: add byte ptr [ecx], dh; ror byte ptr [ebx + 0x209483], cl; add byte ptr [ecx], bh; cmp dword ptr [eax + 0xf000020], -0x6b; ret 0xb38b; 
0x0013f88b: add byte ptr [ecx], dh; ror byte ptr [ecx + 0x1e00b9], 0; pop ebx; pop esi; pop edi; ret; 
0x00030e41: add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b0cf5: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000eabad: add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0013dc70: add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg eax, ebp; xor edi, edx; call dword ptr [eax + 0x6a]; 
0x0008275f: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00145335: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012eec5: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0012490b: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x0004171b: add byte ptr [edi + 0x33], 0xfa; call dword ptr [eax - 0x73]; 
0x0012250c: add byte ptr [edi + 0x53], dl; call edx; 
0x00101efb: add byte ptr [edi + 0x56], 0xfa; call dword ptr [eax + 0x52]; 
0x0006ba85: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x24]; 
0x0008e7f1: add byte ptr [edi + 0x5b], bl; ret; 
0x0001b224: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00094acd: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b2434: add byte ptr [edi + 0x5e], bl; ret; 
0x000f4763: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000f47a7: add byte ptr [edi + 0xf], bl; inc edi; ret 0xc35d; 
0x000b25b4: add byte ptr [edi + 2], bh; neg eax; ret; 
0x0015c9d4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0015a144: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00157a94: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0015e704: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0015e1a4: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00156254: add byte ptr [edi + 2], dh; neg eax; ret; 
0x0015ed3a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0010eb8b: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x000f453b: add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x0015f065: add byte ptr [edi + 8], bh; neg eax; ret; 
0x00163074: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000b2584: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x000a127e: add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x000293fb: add byte ptr [edi + edi*8 - 1], 0xff; add eax, dword ptr gs:[0]; ret; 
0x0001a6bb: add byte ptr [edi + edx - 0x73], dh; nop; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x00143f68: add byte ptr [edi - 0x10], dh; call dword ptr [eax + 0x6a]; 
0x000c7685: add byte ptr [edi - 0x28], bh; cmp ebx, 0xf6; ja 0xc7808; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x00162954: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x00161934: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x0012bdaa: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x00023adf: add byte ptr [edi - 6], ah; call dword ptr [eax - 0x73]; 
0x00026de1: add byte ptr [edi - 6], ch; call dword ptr [eax - 0x73]; 
0x0012c5a5: add byte ptr [edi], ah; cli; call dword ptr [eax + 0x52]; 
0x0012eec2: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0004a05a: add byte ptr [edi], ch; jbe 0x49fe9; ret 0x40c7; 
0x000b2aaf: add byte ptr [edi], cl; dec eax; ret 0x44c7; 
0x000256aa: add byte ptr [edi], cl; dec eax; ret 0xc083; 
0x000de363: add byte ptr [edi], cl; dec eax; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x00107e8b: add byte ptr [edi], cl; dec ecx; inc ebx; adc al, 0x29; ret 0x728d; 
0x000bcfbf: add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x00063e93: add byte ptr [edi], cl; dec ecx; ret 0x9589; 
0x000badc2: add byte ptr [edi], cl; dec ecx; ret 0xd801; 
0x0003ca74: add byte ptr [edi], cl; dec edi; ret 0xf001; 
0x000bb097: add byte ptr [edi], cl; dec edi; ret; 
0x000efd89: add byte ptr [edi], cl; dec esi; ret 0x8589; 
0x00048036: add byte ptr [edi], cl; dec esi; ret 0x9d8d; 
0x000da0a0: add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x0004615b: add byte ptr [edi], cl; dec esi; ret 0xda29; 
0x0004b4a6: add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0004447d: add byte ptr [edi], cl; dec esi; ret; 
0x0002069c: add byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x000228bd: add byte ptr [edi], cl; inc ebp; ret 0x548b; 
0x000d191b: add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x0007b74c: add byte ptr [edi], cl; inc ebp; ret 0x8189; 
0x000bee7f: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x0008a6eb: add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x0012f29f: add byte ptr [edi], cl; inc ebp; ret 0xc483; 
0x0001f68c: add byte ptr [edi], cl; inc ebp; ret 0xf289; 
0x000fa4e2: add byte ptr [edi], cl; inc ebp; ret; 
0x000f45bb: add byte ptr [edi], cl; inc ebp; sar byte ptr [eax + 0x135], 1; call dword ptr gs:[0x10]; 
0x00030f5c: add byte ptr [edi], cl; inc ebp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002efba: add byte ptr [edi], cl; inc ebx; ret 0xec83; 
0x000b4733: add byte ptr [edi], cl; inc edi; ret 0x960f; 
0x000815b6: add byte ptr [edi], cl; inc edi; ret 0xc083; 
0x000efdca: add byte ptr [edi], cl; inc edx; ret 0x489; 
0x0011b1ab: add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x00101346: add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x000ef71f: add byte ptr [edi], cl; inc edx; ret; 
0x000ada10: add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x0009fa66: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x001148b2: add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x000c7099: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00087918: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0008254e: add byte ptr [edi], cl; inc esp; ret 0x938b; 
0x00102b8b: add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x000c5804: add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x0012f259: add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x00041f19: add byte ptr [edi], cl; inc esp; ret 0xe1c1; 
0x0009f7f9: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0009fbff: add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x00059db4: add byte ptr [edi], cl; inc esp; ret; 
0x000290e6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000290b6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00029086: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00028fd6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00029036: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00028f56: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00029006: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00028fa6: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00029176: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 1; ret; 
0x00028f86: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 2; ret; 
0x00029066: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 4; ret; 
0x00028f36: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 8; ret; 
0x0015d364: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000d58a0: add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000dce93: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0006163b: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a3: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a6b: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000738ef: add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x000de696: add byte ptr [edi], cl; mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x001579f8: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x000e2faf: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0004f8b7: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0x7401; 
0x0004fa1e: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00068707: add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0011b0ff: add byte ptr [edi], cl; mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0002df80: add byte ptr [edi], cl; mov dh, 0xc9; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x00157958: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0009cecf: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x10]; ret; 
0x0009c774: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00123a41: add byte ptr [edi], cl; mov edi, 0x24087; add byte ptr [ecx], ch; ret 0x5489; 
0x0009cbcf: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x0009cbff: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x00098bdf: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x0009beff: add byte ptr [edi], cl; mov esp, 0xff1e8d2; or al, byte ptr [eax]; add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00039736: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b7785: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0007c375: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; push ecx; add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x0015e51e: add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0015d0cf: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00162adf: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00162a8f: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x001691c8: add byte ptr [edi], cl; test byte ptr [ecx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x49f0fe0e], al; ret 0x4489; 
0x0015cdea: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0008fa12: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00162a36: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0008f9bc: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00162a7c: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0015dbcf: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0015d4cf: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000eda5d: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; and al, 0x5b; pop esi; ret; 
0x0015ef9c: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0015dc7a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0015da9a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0015d56a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0015d8c4: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0012484f: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015d696: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00131894: add byte ptr [edi], cl; test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0015d79e: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0015ef10: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0015b8ce: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x000f63cf: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebp; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0015d713: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000b988d: add byte ptr [edi], cl; test dword ptr [edi - 0x76000003], edx; ret 0xe283; 
0x001321d8: add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], ebx; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00075581: add byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x00157c8f: add byte ptr [edi], cl; test dword ptr [edx + 0x57], ebp; hlt; call dword ptr [ebx - 0x18]; 
0x0015a19f: add byte ptr [edi], cl; test dword ptr [edx], edi; xor esi, esp; call dword ptr [ebx - 0x18]; 
0x001572ca: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000b9a8a: add byte ptr [edi], cl; test edi, ecx; fdivp st(7); call dword ptr [edi + 0x57]; 
0x0016543d: add byte ptr [edi], cl; test edi, esi; add byte ptr [eax], al; add byte ptr [ebx - 0x768fdbbc], cl; ret 0x44c7; 
0x00070f7b: add byte ptr [edi], cl; test esp, ebp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x000e2fc7: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000a7f17: add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b4fc5: add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x00045c19: add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0005dde9: add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x000b6645: add byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x000aa880: add byte ptr [edi], cl; xchg ebp, eax; ret 0xf839; 
0x00046107: add byte ptr [edi], cl; xchg ebp, eax; ret 0xfbc1; 
0x000b3a99: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000d181e: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x00045df4: add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000b6c59: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x000c828c: add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x0002236e: add byte ptr [edi], cl; xchg esi, eax; ret 0xdd39; 
0x00108ad2: add byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x000a2706: add byte ptr [edi], cl; xchg esp, eax; ret 0xeb89; 
0x000db46e: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000db272: add byte ptr [edi], cl; xchg esp, eax; ror dword ptr [edi], 0xa3; ret 0xcf89; 
0x00034598: add byte ptr [edi], dl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00034726: add byte ptr [edi], dl; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x000345e6: add byte ptr [edi], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c7027: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000e4cf2: add byte ptr [edx + 0x50], dl; call ebx; 
0x000700a1: add byte ptr [edx + 0x50], dl; mov esi, dword ptr [esp + 0x1c]; push esi; call dword ptr [ebx + 0x40]; 
0x0013e921: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00129f55: add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0012403a: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0009f560: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x00094faf: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x000fdac9: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0012e81c: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x000c6f62: add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x000c6f25: add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x000c6f88: add byte ptr [edx + 0xfa], bh; pop ebx; cmove eax, edx; ret; 
0x000c6f47: add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000c6eed: add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x000f9972: add byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00019495: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000333f5: add byte ptr [edx + 1], bh; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b7f: add byte ptr [edx + 1], bh; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00080025: add byte ptr [edx + 1], bh; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338d2: add byte ptr [edx + 1], bh; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00073777: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x000339aa: add byte ptr [edx + 1], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000f5fe9: add byte ptr [edx + 1], bh; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00033ae4: add byte ptr [edx + 1], bh; mov esi, edi; call dword ptr gs:[0x10]; 
0x00070418: add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x00075db4: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000725e4: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x6bd40; add esp, 0x1c; ret; 
0x00028d19: add byte ptr [edx + 1], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007acd1: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000701e1: add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00069395: add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00075c8d: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0012c883: add byte ptr [edx + ebp - 6], 0xff; jmp edx; 
0x000c5d24: add byte ptr [edx + ebx - 0x3eae0000], 0xc8; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0007ac45: add byte ptr [edx + ebx], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0011f61a: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x11f646; add esp, 0xc; ret; 
0x0014ea49: add byte ptr [edx - 0x15], 0xfb; jmp dword ptr [esi - 0x70]; 
0x0006225c: add byte ptr [edx - 0x3b7d0000], cl; adc byte ptr [ecx], bh; ret; 
0x000f57fb: add byte ptr [edx - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000f58bb: add byte ptr [edx - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0008ccff: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0015ccc4: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x00041935: add byte ptr [edx - 1], dl; je 0x4195e; sub byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x0009dcf2: add byte ptr [edx - 9], al; ret 3; 
0x0010c9ca: add byte ptr [edx], 0x59; cli; call dword ptr [ecx + 0x52]; 
0x00129c54: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00130033: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb3d8f7d], cl; call dword ptr [eax - 0x73]; 
0x0012a8f3: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb945f7d], cl; call dword ptr [eax - 0x73]; 
0x0012f1c6: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00029474: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00103a84: add byte ptr [edx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x0008ec4c: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00028fdc: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00123914: add byte ptr [edx], al; add esp, 8; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x0001dc8c: add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x00108c2b: add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0010a0d7: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x001089dd: add byte ptr [edx], al; call dword ptr [esi + 0x14]; 
0x00108284: add byte ptr [edx], al; call eax; 
0x0010816d: add byte ptr [edx], al; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x00108411: add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x00081d3b: add byte ptr [edx], bh; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0007a986: add byte ptr [edx], bl; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0008b14c: add byte ptr [edx], ch; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000c6914: add byte ptr [edx], ch; call 0xc68c0; add esp, 0x1c; ret; 
0x0009facc: add byte ptr [edx], ch; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0006fe1f: add byte ptr [edx], ch; mov eax, esi; push ebx; push ecx; push dword ptr [esp + 0x1c]; call dword ptr [eax + 0x40]; 
0x0009faca: add byte ptr [edx], ch; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000f7f04: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0001bd27: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00075b81: add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00040fbf: add byte ptr [edx], ch; push dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012ec40: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x12eac0; add esp, 0x10; add esp, 0xc; ret; 
0x000f7f06: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0007041c: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x000701e5: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x0006af56: add byte ptr [edx], ch; push dword ptr [esp + 0x28]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00029a2a: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x000eabf8: add byte ptr [edx], ch; push dword ptr [esp + 0x30]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000432de: add byte ptr [edx], ch; push dword ptr [esp + 0x44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001bd29: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call esi; 
0x00079471: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x2c]; 
0x00069399: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x0007637b: add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0007705d: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f06b: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x00076a60: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x00075a4d: add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x00130715: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0007009f: add byte ptr [edx], ch; push edx; push eax; mov esi, dword ptr [esp + 0x1c]; push esi; call dword ptr [ebx + 0x40]; 
0x0013e91f: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0012608c: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00075c91: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x0013d725: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x0006274d: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c61: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006aea5: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9b7: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b361: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d32: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x3c]; push edx; call eax; 
0x00065a78: add byte ptr [edx], ch; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00107f29: add byte ptr [edx], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000c4419: add byte ptr [edx], cl; out dx, al; call dword ptr [eax - 0x18]; 
0x001238db: add byte ptr [edx], dh; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0015e6ef: add byte ptr [esi + 0x31], bl; rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x00037fbc: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00125560: add byte ptr [esi + 0x56], dl; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00019181: add byte ptr [esi + 0x5f], bl; ret; 
0x0012edd8: add byte ptr [esi + 0xd], bh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00098540: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008ce8f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008ed4f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0008ed6f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed7f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed5f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed8f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000953af: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000953bf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x0009c31f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e9c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c33f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ebc: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1ff: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d8c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c21f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dac: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c23f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dcc: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098efc: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f3f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f5f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c35f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098edc: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f20: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015e993: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0015e953: add byte ptr [esi + 0xf], ah; cmp byte ptr [eax], al; ret 0xf66; 
0x0009ce6d: add byte ptr [esi + 0xf], ah; je 0x9cebb; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0014623f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0014a62b: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0009cae1: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0009cdba: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009cddf: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000310d5: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0007b575: add byte ptr [esi + 8], dh; ret; 
0x000aa50b: add byte ptr [esi + eax - 0x77], dh; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003534f: add byte ptr [esi + ebx*2 + 1], dh; ret; 
0x0009c016: add byte ptr [esi + ecx], ah; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f89de: add byte ptr [esi - 0x18], dl; dec ebx; ret 0xfff7; 
0x00030c95: add byte ptr [esi - 0x18], dl; push ebp; ret 0x10; 
0x00105fee: add byte ptr [esi - 0x18], dl; xor cl, dh; jmp dword ptr [ebp - 0x77]; 
0x0007be65: add byte ptr [esi - 0x4c], dh; pop ebx; pop esi; pop edi; ret; 
0x00123f2d: add byte ptr [esi - 0x70], ah; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0008795d: add byte ptr [esi - 0x70], ah; add esp, 4; pop ebx; pop esi; ret; 
0x0009cbdd: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0009f2dd: add byte ptr [esi - 0x70], ah; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000911fd: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00095a8d: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009120d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0008ce2d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0008ed1d: add byte ptr [esi - 0x70], ah; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0009536d: add byte ptr [esi - 0x70], ah; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0009537d: add byte ptr [esi - 0x70], ah; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0007b47d: add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x000c6fcd: add byte ptr [esi - 0x70], ah; mov eax, 0xfffa; pop ebx; ret; 
0x0007128d: add byte ptr [esi - 0x70], ah; mov eax, 0xffffffff; ret; 
0x00031acd: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00030e9d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000c0add: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x000ef14d: add byte ptr [esi - 0x70], ah; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0008ed3d: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x00163c3d: add byte ptr [esi - 0x70], ah; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000f79eb: add byte ptr [esi - 0x70], ah; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ecabb: add byte ptr [esi - 0x70], ah; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0003065a: add byte ptr [esi - 0x70], ah; nop; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0010cdbb: add byte ptr [esi - 0x70], ah; nop; ret; 
0x000ea73d: add byte ptr [esi - 0x70], ah; pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0015d16d: add byte ptr [esi - 0x70], ah; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000f61ed: add byte ptr [esi - 0x70], ah; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000810fd: add byte ptr [esi - 0x70], ah; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x0012378d: add byte ptr [esi - 0x70], ah; xor eax, eax; add esp, 0xc; ret; 
0x0007b75d: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0008ae0d: add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0005e0ae: add byte ptr [esi - 0x73], dl; mov ch, 0xb8; idiv edi; call dword ptr [ebx - 0x7f]; 
0x0009c29e: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098e1b: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0009535f: add byte ptr [esi - 0x77], ah; pop ss; pop edi; pop esi; pop ebx; ret; 
0x0009c19e: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098d2b: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000f6108: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x00163417: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00081e1f: add byte ptr [esi - 0x77], dl; ret 0xe853; 
0x001633b7: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000e2f1a: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001197ff: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x000ea958: add byte ptr [esi - 9], ah; ret 0xff00; 
0x00094dea: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014f880: add byte ptr [esi], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00031a02: add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0013f890: add byte ptr [esi], bl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000f2a78: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00031078: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00030d78: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003186c: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop edi; ret; 
0x00030ea8: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000fbd90: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00069caf: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00162b17: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000510cd: add byte ptr es:[eax + 0x10b8], dl; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008ed9d: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edad: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edbd: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0001b03d: add byte ptr es:[eax + 0x121ea4e8], dl; add byte ptr [0x1c8fbb], al; lea eax, [eax - 0x59434]; ret; 
0x000910ad: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0008cced: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000985ae: add byte ptr es:[eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0015624d: add byte ptr es:[eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x001561bd: add byte ptr es:[eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001561cd: add byte ptr es:[eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0005180d: add byte ptr es:[eax + 0x34b2858d], dl; cli; call dword ptr [esi - 0x77]; 
0x0013992d: add byte ptr es:[eax + 0x3750808b], dl; add byte ptr [eax], al; jmp dword ptr [eax + 8]; 
0x000ab605: add byte ptr es:[eax + 0x3901c083], dl; ret; 
0x0013f84d: add byte ptr es:[eax + 0x3904c083], dl; ret 0x4976; 
0x000c7056: add byte ptr es:[eax + 0x40], bh; ret; 
0x000291dd: add byte ptr es:[eax + 0x424448b], dl; and eax, 0x7f; ret; 
0x001561dd: add byte ptr es:[eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0015db3d: add byte ptr es:[eax + 0x486f0ff3], dl; ret; 
0x0008ed0d: add byte ptr es:[eax + 0x51881189], dl; add al, 0x5b; ret; 
0x0005de3d: add byte ptr es:[eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x001561ed: add byte ptr es:[eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0008ecdd: add byte ptr es:[eax + 0x5b118966], dl; ret; 
0x00129d1d: add byte ptr es:[eax + 0x5e5bc031], dl; pop edi; ret; 
0x0009534d: add byte ptr es:[eax + 0x5e5f1788], dl; pop ebx; ret; 
0x001267a5: add byte ptr es:[eax + 0x5ec0315b], dl; pop edi; ret; 
0x00160d4d: add byte ptr es:[eax + 0x5f01478d], dl; ret; 
0x001561fd: add byte ptr es:[eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0013a7dd: add byte ptr es:[eax + 0x66d2b60f], dl; and eax, 0xe2c1f807; add ecx, dword ptr [ecx]; ret 0x8966; 
0x000af585: add byte ptr es:[eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x36277b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00143265: add byte ptr es:[eax + 0x7d82e95b], dl; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00101d85: add byte ptr es:[eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0015619d: add byte ptr es:[eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x0008aacd: add byte ptr es:[eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000b25ae: add byte ptr es:[eax + 1], bh; jg 0xb25b9; neg eax; ret; 
0x0010e845: add byte ptr es:[eax - 0x12bc18], dl; jmp dword ptr [esi - 0x70]; 
0x0010e885: add byte ptr es:[eax - 0x12fc18], dl; jmp dword ptr [esi - 0x70]; 
0x000ec725: add byte ptr es:[eax - 0x173d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ec8e5: add byte ptr es:[eax - 0x18fd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ec915: add byte ptr es:[eax - 0x192d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ecbb5: add byte ptr es:[eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000fd24d: add byte ptr es:[eax - 0x226516a5], dl; int1; jmp dword ptr [esi - 0x70]; 
0x000b285d: add byte ptr es:[eax - 0x37763e77], dl; ret; 
0x0012f3f5: add byte ptr es:[eax - 0x3f7c3e77], dl; or byte ptr [ebx + 0x74fff878], al; jne 0x12f387; ret 0x3901; 
0x000c84cd: add byte ptr es:[eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x0005e59d: add byte ptr es:[eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x00122e45: add byte ptr es:[eax - 0x47fb3b7d], dl; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0015d35d: add byte ptr es:[eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000ecba5: add byte ptr es:[eax - 0x5e48], dl; call ptr [ebx - 0x17]; cmp eax, 0x8dfff2e4; je 0xecbdc; add byte ptr [eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000c27ed: add byte ptr es:[eax - 0x6a723f7b], dl; add dword ptr [ecx], esi; cli; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x0008b0b5: add byte ptr es:[eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00050a75: add byte ptr es:[eax - 0x72fb137d], dl; lahf; int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x0005149d: add byte ptr es:[eax - 0x72fb137d], dl; test ebp, ebp; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x0007222d: add byte ptr es:[eax - 0x74aca9a9], dl; je 0x7225a; adc al, ch; test eax, 0x81000cac; ret; 
0x0012b4ed: add byte ptr es:[eax - 0x74f7137d], dl; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0001bf2d: add byte ptr es:[eax - 0x7adfac75], dl; sal byte ptr [esi + ebp*8 - 0x73], cl; nop; insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x0001db4d: add byte ptr es:[eax - 0x7c378275], dl; rol dword ptr [ecx], 0x83; ret; 
0x000dd7b5: add byte ptr es:[eax - 0x7c69eb77], dl; ret 0x3901; 
0x0003c405: add byte ptr es:[eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0011f16d: add byte ptr es:[eax - 0x7cdf397d], dl; ret 0x3901; 
0x00076e65: add byte ptr es:[eax - 0x7ce541f1], dl; rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x0015c95d: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0x8308; 
0x0015620d: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0xf608; 
0x0008b5dd: add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0006455e: add byte ptr es:[eax - 0x8b843], al; jmp dword ptr [eax]; 
0x000a0a3d: add byte ptr es:[eax - 0xf7137d], dl; je 0xa0a6a; and byte ptr [ebx - 0x18], dl; ret; 
0x00078dde: add byte ptr es:[eax - 1], bh; mov edx, 0xffffffff; ret; 
0x00031a03: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0016202b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x162080; lea eax, [ecx + 0xa]; ret; 
0x0016203b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x162080; lea eax, [ecx + 0xb]; ret; 
0x0016204b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x162080; lea eax, [ecx + 0xd]; ret; 
0x0016205b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x162080; lea eax, [ecx + 0xe]; ret; 
0x0016206b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x162080; lea eax, [ecx + 0xf]; ret; 
0x0016200b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x162080; lea eax, [ecx + 7]; ret; 
0x0016201b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x162080; lea eax, [ecx + 9]; ret; 
0x0010dfdb: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0009cbcb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x0009cbeb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0003395b: add byte ptr es:[eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x001632fb: add byte ptr es:[eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x0009f2cb: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00160a05: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x0009d2b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0009ce88: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000617f8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; jmp eax; 
0x001632f4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00160dc7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00160dd7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00160de7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00160df7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00160e07: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00160d57: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00160d67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00160d77: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00160d87: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00160d97: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00160da7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00160db7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x00161227: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x00161217: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x00161207: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001611f7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x00161297: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x00161287: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x00161277: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00163587: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x00161267: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x00161257: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x00161247: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x00161237: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001623c5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008ecc4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00139b58: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x00079cb8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000b27a5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000b27b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000b27c8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000b27d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000b27e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000b27f8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000b2808: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00079d25: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca54: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001632c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b2786: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00161dd6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00161de6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00161df6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00161e06: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00161e16: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00161d76: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00161d86: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00161d96: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00161da6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00161db6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00161dc6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00162436: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x00162446: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x00162456: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x00162466: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001623d6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001623e6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001623f6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x00162406: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x00162416: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x00162426: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x001237a3: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; mov eax, 1; ret; 
0x00123eb3: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; ret; 
0x00079d13: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0008ecb5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0015ed18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x00079ce8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x00160e17: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00079cc8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x00098c6b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008eccb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0007b57b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x128], eax; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b6eb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x158], eax; ret; 
0x000ed58b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ffb8b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000c6fb3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x00031c83: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000fddab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x40]; pop ebx; ret; 
0x00163c2b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001323e3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0013ca5b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016332b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0009b82b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001618fb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00073773: add byte ptr es:[eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x0008ed7b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed5b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed8b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x001561ab: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00162b2a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x0009d2aa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x0009d2ca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0009ce9a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x0009ceaa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0012596a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0012597a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008ecfa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0006725a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000c70fa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x0007b479: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000c6fc9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x00071289: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x001237aa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x00125f9a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0007384a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007373a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00132a6a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013cafa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013ca8a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00079d3a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; ret; 
0x0008f95a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0008ed39: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0007b46a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x00098fea: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x00123eba: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x00123789: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; add esp, 0xc; ret; 
0x0007aa5a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x00079d1a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x001634bb: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0007e49b: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x00080273: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x0010866b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0009cfdb: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0002e66b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00050f32: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001023bf: add byte ptr es:[eax], al; add word ptr [edx + eax*2], 1; ret; 
0x001023b7: add byte ptr es:[eax], al; jae 0x1023c7; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x000fa276: add byte ptr es:[ebp + 0x24f09a], cl; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007adc6: add byte ptr es:[ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x001633ae: add byte ptr es:[ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000ad39e: add byte ptr es:[ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x0009ab5e: add byte ptr es:[ebp - 0x7cc78a40], al; ret; 
0x0006acf6: add byte ptr es:[ebx + 0x106a04ec], al; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0015ec86: add byte ptr es:[ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00167136: add byte ptr es:[ebx + 0x3968245c], cl; ret; 
0x00119b1e: add byte ptr es:[ebx + 0x4589dc45], cl; test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x000c7ed6: add byte ptr es:[ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0006a546: add byte ptr es:[ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0009c58e: add byte ptr es:[ebx + 0x5e], bl; ret; 
0x001196d6: add byte ptr es:[ebx + 0x6b81b], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c5b5e: add byte ptr es:[ebx - 0x1076d], cl; jmp dword ptr [ebp - 0x77]; 
0x000c017e: add byte ptr es:[ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x0013f0ee: add byte ptr es:[ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x7d]; 
0x00080256: add byte ptr es:[ebx - 0x1077b], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x001012be: add byte ptr es:[ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000f64fe: add byte ptr es:[ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0010f9de: add byte ptr es:[ebx - 0x10f79], cl; jmp dword ptr [ebp - 0x39]; 
0x000f7b96: add byte ptr es:[ebx - 0x17], bl; push edx; xor al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0012600e: add byte ptr es:[ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000f97e6: add byte ptr es:[ebx - 0x46f7db84], cl; push es; add byte ptr [eax], al; add byte ptr [ecx + 0xfa6f3de], cl; xchg edi, eax; ret 0xda80; 
0x0016315e: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x163170; neg eax; ret; 
0x000f52d6: add byte ptr es:[ebx - 0x48], bl; ljmp 0xce9:0x5effffff; pop ebp; bnd jmp dword ptr [esi - 0x70]; 
0x0005f8e6: add byte ptr es:[ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [ebx + 0x6a]; 
0x0002937e: add byte ptr es:[ebx - 0x74f7dbbc], cl; push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0013ca7e: add byte ptr es:[ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x0011960e: add byte ptr es:[ebx - 0x75], dl; inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0008305e: add byte ptr es:[ebx - 0x7c72f314], al; in al, 0x8a; cli; call dword ptr [eax - 0x18]; 
0x000f8426: add byte ptr es:[ebx - 0x7c72f714], al; jbe 0xf8479; cli; call dword ptr [eax - 0x73]; 
0x000f84f6: add byte ptr es:[ebx - 0x7c72f714], al; jbe 0xf8549; cli; call dword ptr [eax - 0x73]; 
0x00121796: add byte ptr es:[ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x0010e096: add byte ptr es:[ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000e8b4e: add byte ptr es:[ebx - 0x7cf3dbbc], cl; ret; 
0x0004168e: add byte ptr es:[ebx - 0x977b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000835a6: add byte ptr es:[ebx - 0xaff714], al; jae 0x835d3; call edx; 
0x000955ee: add byte ptr es:[ecx + 0x5b5e5ff8], cl; ret; 
0x0012f696: add byte ptr es:[ecx + 0xb4a9], cl; add bl, ch; ret; 
0x0008aae6: add byte ptr es:[ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x0013b006: add byte ptr es:[ecx - 0x7c17760e], cl; ret; 
0x0004a01e: add byte ptr es:[ecx], ch; ret 0xfac1; 
0x0006e986: add byte ptr es:[ecx], ch; ret; 
0x0009f29e: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000e2fbe: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00137c1e: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0009533e: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000b258e: add byte ptr es:[edi + 0x5e], bl; ret; 
0x0008ccfe: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0003534e: add byte ptr es:[esi + ebx*2 + 1], dh; ret; 
0x000fdacb: add byte ptr fs:[eax], al; add byte ptr [ebx - 0x10b80], cl; dec dword ptr [ebx - 0x3f7adfc0]; cmove eax, edx; ret; 
0x00072e51: add byte ptr fs:[eax], al; add esp, 8; pop ebx; ret; 
0x000f5d30: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fb4: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003e273: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e8487: add ch, 0x4a; cli; call dword ptr [eax - 0x18]; 
0x00139f6b: add ch, al; jmp dword ptr [ecx - 0xf]; 
0x00138b80: add ch, al; mov edx, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000f29c5: add ch, bl; ret; 
0x0003aa9e: add ch, bl; test dword ptr [eax - 0x53], esp; cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x00126181: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000bd940: add ch, byte ptr [ecx]; fiadd dword ptr [ebx - 0x62f00c02]; shr dword ptr [ebx], 0x45; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x000bd9a3: add ch, byte ptr [ecx]; fiadd dword ptr [ebx - 0x62f00c07]; shr dword ptr [ebx], 0x45; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x000abad6: add ch, byte ptr [ecx]; ret 0x28b; 
0x000bb42e: add ch, byte ptr [ecx]; ret 0x3c8d; 
0x000b780e: add ch, byte ptr [ecx]; ret 0x48d; 
0x00063e8c: add ch, byte ptr [ecx]; ret 0xb8; 
0x000b782d: add ch, byte ptr [ecx]; ret; 
0x000b4656: add ch, byte ptr [ecx]; rol dword ptr [ecx], 1; ret; 
0x000701e3: add ch, byte ptr [edx]; push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00069397: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0013f069: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00076a5e: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00075c8f: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000b4107: add ch, ch; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x000ea8f6: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003185c: add cl, 0xe9; add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00074885: add cl, al; call 0x1e7cb90; ret; 
0x00074895: add cl, al; call 0x1e7cba1; ret; 
0x0007e729: add cl, al; call 0x66842; dec dword ptr [ebx]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x0002d46e: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x00019168: add cl, al; ret 0x6509; 
0x0001a6ca: add cl, al; ret 0x8909; 
0x00121477: add cl, al; retf 0x6509; xor edx, dword ptr [0x18]; push edx; call eax; 
0x0009e27c: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009c0cb: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x001469dd: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x0008ceaa: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x0008ce48: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x0009b7c3: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x0008cd6a: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x0009b48b: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x0008cd28: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x0011b3e2: add cl, byte ptr [eax]; pop ebx; ret; 
0x0009de6b: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00092e30: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x00092e62: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x0008b0dd: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x0008b0f1: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x0008b109: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0008b11d: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x00077282: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0009667b: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x00043bca: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x43b90; jmp eax; 
0x0011e8c5: add cl, byte ptr [ebp - 0x5d00e7d]; call dword ptr [eax + 0x51]; 
0x00138f55: add cl, byte ptr [ebp - 0x76dbdbbc]; ret 0x448b; 
0x0008ef0a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x0013a510: add cl, byte ptr [ebp - 0x7ca9feb6]; ret; 
0x000986ba: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x0014a62f: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0009c0ce: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00098c98: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x0006eb95: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x0006ea1d: add cl, byte ptr [ebx - 0x3dd6f7af]; mov eax, edx; pop ebx; ret; 
0x0014c5df: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0010927b: add cl, byte ptr [ebx - 0x8b49]; jmp dword ptr [ebp - 0x75]; 
0x0008f0f7: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0x8ee51; pop ebx; ret; 
0x0008eee3: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0x8ee51; pop ebx; ret; 
0x0008ef05: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0x8ee51; pop ebx; ret; 
0x0008ef2b: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0x8ee51; pop ebx; ret; 
0x00092e9a: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x00071507: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x0008ef43: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0x8ee51; pop ebx; ret; 
0x0008efc7: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0x8ee51; pop ebx; ret; 
0x0008fa23: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x0008cf0a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x0008ceea: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x00047504: add cl, byte ptr [ecx - 0x362773]; call dword ptr [eax - 0x75]; 
0x000aed74: add cl, byte ptr [ecx - 0x365f6b]; call dword ptr [eax - 0x75]; 
0x0007b4cb: add cl, byte ptr [ecx - 0x3fcef7bf]; ret; 
0x0008eaaa: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x0008ccba: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x0008cdaa: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x000350ff: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0016392a: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x0001f89f: add cl, byte ptr [ecx - 0x7ce7dbbc]; ret 0x8901; 
0x000c800b: add cl, byte ptr [ecx]; ret 0xf889; 
0x000bb0e8: add cl, byte ptr [edi]; dec ebp; ret; 
0x0014a707: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153ac7: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x00070cac: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00116e0e: add cl, byte ptr [edi]; test byte ptr [ebx - 0x7b000000], bl; ror byte ptr [edi], 0x85; ret; 
0x0008ef0d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x00161f1c: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0016116c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161cec: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0008eb2d: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0009612e: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00162878: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x00161f7a: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001611bb: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x00162765: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00068995: add cl, byte ptr [edi]; xchg ebp, eax; ret 0x5689; 
0x0004436f: add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x00025a83: add cl, byte ptr [edi]; xchg esi, eax; ret 0x540a; 
0x00026995: add cl, byte ptr [edi]; xchg esi, eax; ret 0x550a; 
0x0010fdcd: add cl, byte ptr [edi]; xchg esp, eax; ret 0x7c8b; 
0x00131881: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x000e9e2b: add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x0015e999: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000e5d26: add cl, byte ptr [edx - 6]; call dword ptr [eax + 0x6a]; 
0x000e224b: add cl, byte ptr [edx - 6]; call dword ptr [eax - 0x18]; 
0x0005446f: add cl, ch; adc eax, 0x8bffffe9; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10768]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0016712e: add cl, ch; adc eax, 0x8dfffff5; je 0x16715d; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x000a0b5f: add cl, ch; call 0x840a0b62; in al, dx; or byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x00074346: add cl, ch; call dword ptr [eax - 0x73]; 
0x0003a83b: add cl, ch; dec ebp; fdiv st(7), st(0); dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x00046458: add cl, ch; fsubr qword ptr [edi]; std; jmp dword ptr [esi - 0x70]; 
0x0004d22b: add cl, ch; push cs; ret 0xfffc; 
0x0016b1f4: add cl, ch; push ebx; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000fecda: add cl, ch; push edx; idiv bh; dec dword ptr [ebp - 0x5686b7d]; call dword ptr [eax - 0x73]; 
0x000e4d5b: add cl, ch; ret 0xffee; 
0x00165527: add cl, ch; ret 0xfff0; 
0x000cbc68: add cl, ch; ret 0xfff4; 
0x000a71a5: add cl, ch; ret 0xfff7; 
0x00022a98: add cl, ch; ret 0xfffe; 
0x0001fd67: add cl, ch; ret; 
0x0003c720: add cl, ch; retf 0xfff6; call dword ptr [ebx + 0x6a]; 
0x0007b308: add cl, ch; retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x0003f6ff: add cl, ch; wait; idiv bh; call dword ptr [ebx + 0x6a]; 
0x0008afe7: add dh, al; add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x00118e62: add dh, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0001a754: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x16fbaf70], ecx; jmp dword ptr [ebp + 0x33]; 
0x000619cf: add dh, al; inc esp; and al, 0x33; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x00116785: add dh, al; xchg byte ptr [esp + ebp], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0015c9d6: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x0015e1a6: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x0015e706: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0014e9c4: add dh, bh; ret 0xf; 
0x0014e98a: add dh, bh; ret 2; 
0x0009d5a8: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x000ea8f9: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003185f: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0005e976: add dh, byte ptr [eax - 0x5b]; out 0xff, eax; jmp eax; 
0x0009d29c: add dh, byte ptr [eax]; ret; 
0x0011a5f7: add dh, byte ptr [ebp + 0x26]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00101285: add dh, byte ptr [ebp + 0x28]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001609de: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x160a34; add eax, 0xb; ret; 
0x0006e2f2: add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00160998: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x160a14; add eax, 3; ret; 
0x0007b232: add dh, byte ptr [ebx - 0x7d]; ret; 
0x000d033b: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000eb35b: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000e2f1e: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000d19e2: add dh, byte ptr [edi - 0xc]; dec dword ptr [ecx - 0x517dbcc]; jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001469db: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146f2b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; pop ebx; ret; 
0x000b6c47: add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x000d4e4b: add dh, dh; inc esp; ret 0x804; 
0x0016331f: add dh, dh; les eax, ptr [ecx]; jne 0x163340; lea eax, [ecx + 0xc]; ret; 
0x001611b8: add dh, dh; les eax, ptr [edx]; jne 0x161250; lea eax, [edi - 8]; pop edi; ret; 
0x00161d38: add dh, dh; les eax, ptr [edx]; jne 0x161dd0; lea eax, [ecx + 8]; ret; 
0x001611e1: add dh, dh; les esp, ptr [eax]; jne 0x161280; lea eax, [edi - 4]; pop edi; ret; 
0x00161d61: add dh, dh; les esp, ptr [eax]; jne 0x161e00; lea eax, [ecx + 0xc]; ret; 
0x0006a373: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000d7a5f: add dh, dh; ret 0x7401; 
0x0006cb67: add dh, dh; ret 0x7420; 
0x0016019d: add dh, dh; ret 0x7501; 
0x00026fb7: add dh, dh; ret 0x7503; 
0x0010d997: add dh, dh; ret 0x7520; 
0x00160bc7: add dh, dh; ret 0xf01; 
0x000eadd0: add dh, dh; ret 0xf02; 
0x00160be9: add dh, dh; ret 0xf04; 
0x000202c4: add dh, dh; ret 0xf08; 
0x00163211: add dh, dh; ret 0xf0f; 
0x00160b81: add dh, dh; ret 0xf10; 
0x000eadbe: add dh, dh; ret 0xf20; 
0x00160ba3: add dh, dh; ret 0xf40; 
0x0004b057: add dh, dh; ret 0xf50; 
0x000eadc7: add dh, dh; ret 0xf80; 
0x0004e6a7: add dh, dh; ret; 
0x0011af8c: add dh, dh; rol dword ptr [edx], 0x74; ret; 
0x000fad4b: add dh, dl; jmp dword ptr [esi - 0x70]; 
0x00063911: add dh, dl; stc; dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x0013185a: add dl, ah; std; jmp dword ptr [esi - 0x70]; 
0x00130fe5: add dl, byte ptr [eax + 0x6a]; add al, 0xe8; ret 0xee80; 
0x000f5d0e: add dl, byte ptr [eax + eax]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00135190: add dl, byte ptr [eax - 0x77]; ret; 
0x00108412: add dl, byte ptr [eax - 1]; push ebx; adc al, 0x89; ret 0xc483; 
0x00067c07: add dl, byte ptr [ebp + 0x52]; push esi; call dword ptr [ebx + 0x1c]; 
0x001248d9: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0006294b: add dl, byte ptr [esi + 0x51]; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0011b6d8: add dl, cl; lcall 0xc86, 0x8d80eb3b; popfd; cli; call dword ptr [eax - 0x73]; 
0x0005e970: add dl, dl; stc; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x0016bce9: add dword ptr [eax + 0x12], 0; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00101300: add dword ptr [eax + 0x12], 0xd089fffa; ret; 
0x00132a44: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00132a58: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000f8666: add dword ptr [eax + 0x23], 0; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010c5f7: add dword ptr [eax + 0x29], 0; add byte ptr [ebp - 0x7c808b40], al; in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x0015c804: add dword ptr [eax + 0x29fff8a4], -0x38; pop ebp; pop ebx; ret; 
0x00159ff7: add dword ptr [eax + 0x29fff8a4], -0x38; pop ebx; ret; 
0x0009e594: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x000424bd: add dword ptr [eax + 0x39010854], ecx; ret; 
0x000865a2: add dword ptr [eax + 0x392aff70], eax; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x000a023a: add dword ptr [eax + 0x50fffa45], 0xf88bfbe8; jmp dword ptr [esi - 0x70]; 
0x00078701: add dword ptr [eax + 0x52], edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x0009f5fb: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0009b464: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x0009e622: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x0009e00b: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x000910c1: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x0009d856: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x00086e0b: add dword ptr [eax + 0x5f], eax; ret; 
0x0008cd01: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x000b6b82: add dword ptr [eax + 0x68fffa46], -0x14; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x70], -6; call dword ptr [eax - 0x18]; 
0x00026c6a: add dword ptr [eax + 0x752fff78], eax; imul dword ptr [ecx]; ret 0xec83; 
0x0012f33b: add dword ptr [eax + 0xf000032], 0x45; ret 0xc483; 
0x0011763b: add dword ptr [eax + 0xf], 0; add bl, ch; ret; 
0x00108662: add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x00068120: add dword ptr [eax + 0xf], ebp; test byte ptr [ebx - 0x72ffffff], bh; inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xb0e9; 
0x0012ab11: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0011adb3: add dword ptr [eax + 2], edi; ret; 
0x0011f61d: add dword ptr [eax + 8], 1; je 0x11f646; add esp, 0xc; ret; 
0x000701c9: add dword ptr [eax + eax - 0x7a730000], edx; mov al, byte ptr [0x29ffffe2]; ret 0xf989; 
0x000c7d06: add dword ptr [eax + eax*8 - 0x3fce1e8b], eax; pop ebx; ret; 
0x000cc7ef: add dword ptr [eax + eax*8 - 0x3fce358b], eax; pop ebx; ret; 
0x000cde7d: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x000f5d35: add dword ptr [eax + eax], edx; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000400ce: add dword ptr [eax + ebx + 1], esi; ret; 
0x0006dafe: add dword ptr [eax - 0x1b], -1; call dword ptr [eax - 0x73]; 
0x000e2b52: add dword ptr [eax - 0x22], -0x11; call dword ptr [eax + 0x6a]; 
0x000ff05d: add dword ptr [eax - 0x64], -0x15; dec dword ptr [ecx + 0x4b82845]; add byte ptr [eax], al; add cl, ch; ret; 
0x00051f2e: add dword ptr [eax - 0x6bf0d506], eax; ret; 
0x000845a4: add dword ptr [eax - 0x76ffffe2], -0x7d; push ds; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000f8516: add dword ptr [eax - 0x7cffffdd], -0x3c; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0005f04a: add dword ptr [eax - 0x89843], eax; jmp dword ptr [eax]; 
0x00063f05: add dword ptr [eax - 0x8b843], eax; jmp dword ptr [eax]; 
0x000c2974: add dword ptr [eax - 0xf], -0xd; call dword ptr [eax - 0x73]; 
0x0008320f: add dword ptr [eax - 1], -1; dec dword ptr [ebx + 0x1e3493]; add byte ptr [ecx + 0x77838d10], cl; inc esp; cli; call dword ptr [esi + 0x6a]; 
0x00073e9c: add dword ptr [eax - 3], -0x18; call dword ptr [eax - 1]; 
0x000c2248: add dword ptr [eax], -0x15; in eax, dx; call dword ptr [eax - 0x18]; 
0x0009fd45: add dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ecx*4 - 6], bl; call dword ptr [eax - 0x18]; 
0x00080022: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x000338cf: add dword ptr [eax], 0x1ba0000; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00067c93: add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x00122cf5: add dword ptr [eax], 0x6b; cli; call dword ptr [eax - 0x73]; 
0x0016b850: add dword ptr [eax], 0x78; clc; call dword ptr [eax - 1]; 
0x00063910: add dword ptr [eax], 0x8dfff9d6; test byte ptr [ecx], al; push edx; cmc; out 0xff, eax; jmp eax; 
0x0002a78d: add dword ptr [eax], 0x9a8d0000; push esp; adc dword ptr [eax], eax; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000c4418: add dword ptr [eax], 0xa; out dx, al; call dword ptr [eax - 0x18]; 
0x0002a75e: add dword ptr [eax], 0xf6310000; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdb4: add dword ptr [eax], 0xfa890000; call dword ptr gs:[0x10]; 
0x0007cde4: add dword ptr [eax], 0xfb890000; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008158a: add dword ptr [eax], 0xfb890000; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00109ba6: add dword ptr [eax], eax; add al, ch; push edx; sahf; bnd jmp dword ptr [esi - 0x70]; 
0x0009dcdf: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x0002463e: add dword ptr [eax], eax; add bl, ch; fisttp dword ptr [ebx - 0x72b7db84]; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x00030e20: add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0012ba97: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0012ba97: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000ed71c: add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000ed6b1: add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0009309e: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000ca131: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and ch, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0009e8e9: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ecx], eax; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x00076fb9: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test ecx, ecx; inc eax; cli; call dword ptr [eax - 0x18]; 
0x00021d50: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebp*2 - 6], cl; call dword ptr [eax - 0x18]; 
0x00021d04: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebp*2 - 6], dh; call dword ptr [eax - 0x18]; 
0x0001fa8d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], ah; cli; call dword ptr [eax - 0x18]; 
0x00026dee: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x2f], eax; cli; call dword ptr [eax - 0x18]; 
0x0010996d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 6], edx; call dword ptr [eax - 0x18]; 
0x0010996d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ebx*4 - 6], edx; call dword ptr [eax - 0x18]; ret; 
0x000e9fc2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x000204d7: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ebp*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x00020540: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ebp*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x0011f2bc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebx*2], esi; cli; call dword ptr [eax - 0x18]; 
0x001099b3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edx*2 - 6], esp; call dword ptr [eax - 0x18]; 
0x000ea194: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x4b], ecx; cli; call dword ptr [eax - 0x18]; 
0x000204b4: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, eax; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000cc63a: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ebp, esp; dec eax; cli; call dword ptr [eax - 0x18]; 
0x0012067a: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ecx, ebx; pop edi; cli; call dword ptr [eax - 0x18]; 
0x00120657: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebp; lahf; cli; call dword ptr [eax - 0x18]; 
0x0004b712: add dword ptr [eax], eax; add byte ptr [eax - 0xcf43], al; jmp dword ptr [esi + 0xf]; 
0x0011cc6d: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000bee42: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0007ae9a: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000f9936: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082655: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00019497: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c5d86: add dword ptr [eax], eax; add byte ptr [eax], al; int 0x80; 
0x00156251: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x156259; neg eax; ret; 
0x00157a91: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x157a99; neg eax; pop ebp; ret; 
0x0015ce91: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15ce99; neg eax; ret; 
0x0015d181: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15d189; neg eax; pop ebp; ret; 
0x0015d341: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15d349; neg eax; ret; 
0x0015de28: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15de30; neg eax; ret; 
0x0015f0a9: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15f0b1; neg eax; ret; 
0x00160722: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x16072a; neg eax; ret; 
0x0015ed37: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x15ed40; neg eax; ret; 
0x0015f062: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x15f070; neg eax; ret; 
0x00163162: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x163170; neg eax; ret; 
0x000b25b1: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xb25b9; neg eax; ret; 
0x000608f6: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000671d4: add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000333f7: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b81: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0007b636: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5e6: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5b6: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x138], edx; ret; 
0x00132786: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00132756: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x001258f5: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0010794f: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [esi + 0x20], edx; pop esi; pop edi; ret; 
0x00080027: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338d4: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00073779: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x000339ac: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0009e2a8: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x000f5feb: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00033ae6: add dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x00066640: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62880]; add ecx, ebx; jmp ecx; 
0x00066a78: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62980]; add ecx, ebx; jmp ecx; 
0x00065cbc: add dword ptr [eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x001265d1: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; mov eax, ecx; ret; 
0x000b2603: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x0006a3a3: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000510c4: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000cc7d1: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00043a21: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00130a9e: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0012fcc2: add dword ptr [eax], eax; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0012f8a7: add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00031b29: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0012ab13: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000c7480: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xc7490; ret; 
0x0001af37: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0009e418: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0x9e421; xor eax, eax; ret; 
0x0005dda8: add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x000e49ae: add dword ptr [eax], eax; add byte ptr [ebp + 0x397f74d2], al; ret 0x7b74; 
0x0007e033: add dword ptr [eax], eax; add byte ptr [ebp + 0x48486], cl; add al, ch; mov edi, 0x89ffffdb; ret; 
0x000322af: add dword ptr [eax], eax; add byte ptr [ebp + 0x52], dl; add esi, eax; push esi; call edi; 
0x00079a31: add dword ptr [eax], eax; add byte ptr [ebp + 0xa], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000738ea: add dword ptr [eax], eax; add byte ptr [ebp - 0x49f0ff8a], cl; inc ebp; aam 0x89; ret 0xf889; 
0x0001b01f: add dword ptr [eax], eax; add byte ptr [ebp - 0x59b3f80], cl; call dword ptr [eax + 0x6a]; 
0x000d0186: add dword ptr [eax], eax; add byte ptr [ebp - 0x5b6cc7d], cl; call dword ptr [eax - 0x73]; 
0x00038240: add dword ptr [eax], eax; add byte ptr [ebp - 0x5ccd579], cl; call dword ptr [eax - 0x73]; 
0x0003e0d0: add dword ptr [eax], eax; add byte ptr [ebp - 0x5ccdf79], cl; call dword ptr [eax - 0x73]; 
0x000a2580: add dword ptr [eax], eax; add byte ptr [ebp - 0x5ccdf7a], cl; call dword ptr [eax - 0x73]; 
0x0001e91a: add dword ptr [eax], eax; add byte ptr [ebp - 0x5d1ed79], cl; call dword ptr [eax - 0x73]; 
0x0001f55d: add dword ptr [eax], eax; add byte ptr [ebp - 0x5d1ed7a], cl; call dword ptr [eax - 0x73]; 
0x000d4e29: add dword ptr [eax], eax; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x00081cef: add dword ptr [eax], eax; add byte ptr [ebp - 0x7cd88740], al; in al, dx; or byte ptr [ebp - 0x5bc017a], cl; call dword ptr [ebx + 0x50]; 
0x000e16a9: add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8901; 
0x000fb251: add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x00100092: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00050099: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x00087eea: add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x748d; 
0x00088556: add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00044ec4: add dword ptr [eax], eax; add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x00086a4a: add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00034f5b: add dword ptr [eax], eax; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x00068de2: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075531: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x24; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x0010fdc5: add dword ptr [eax], eax; add byte ptr [ebx + 0x488d01f8], al; add cl, byte ptr [edi]; xchg esp, eax; ret 0x7c8b; 
0x000ab286: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000ab8ed: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x00076168: add dword ptr [eax], eax; add byte ptr [ebx + 0x555104ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00061e68: add dword ptr [eax], eax; add byte ptr [ebx + 0x555304ec], al; push esi; call dword ptr [eax + 0x1c]; 
0x001021c7: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0009f510: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00075585: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x00030f9b: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00030d29: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00031327: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0007946a: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x00068fc5: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push edi; call dword ptr [ebx + 8]; 
0x0008239f: add dword ptr [eax], eax; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00129f7f: add dword ptr [eax], eax; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000c0e97: add dword ptr [eax], eax; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x000ee940: add dword ptr [eax], eax; add byte ptr [ebx - 0x1074d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e1178: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x924c868d; cli; call dword ptr [eax - 0x73]; 
0x0012cfce: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0007723a: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x00080f65: add dword ptr [eax], eax; add byte ptr [ebx - 0x1977b], cl; jmp dword ptr [ebp - 0x75]; 
0x00027c19: add dword ptr [eax], eax; add byte ptr [ebx - 0x1d773], cl; jmp dword ptr [ebx]; 
0x000b0a83: add dword ptr [eax], eax; add byte ptr [ebx - 0x363f7b], al; jmp eax; 
0x000af42b: add dword ptr [eax], eax; add byte ptr [ebx - 0x36477b], cl; call dword ptr [edi + 0x6a]; 
0x00048cc3: add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000e72a1: add dword ptr [eax], eax; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x001691cc: add dword ptr [eax], eax; add byte ptr [ebx - 0x49f0fe0e], al; ret 0x4489; 
0x000e72b1: add dword ptr [eax], eax; add byte ptr [ebx - 0x4a00f314], al; mov al, byte ptr [0xe8fffffb]; scasb al, byte ptr es:[edi]; ret; 
0x000d081c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afab], cl; ret 0x830f; 
0x000ecc4f: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x000f919f: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x000da0c2: add dword ptr [eax], eax; add byte ptr [ebx - 0x70f0fa08], al; ret 0; 
0x000239a3: add dword ptr [eax], eax; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax - 0x73]; 
0x0001f905: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x00020aec: add dword ptr [eax], eax; add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x00161e5b: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0006930c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0012c436: add dword ptr [eax], eax; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [ebx - 0x5d9a0], es; add ecx, ebx; jmp ecx; 
0x000f90f3: add dword ptr [eax], eax; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000e7c9e: add dword ptr [eax], eax; add byte ptr [ebx - 0x74f3dbb4], cl; test byte ptr [ecx - 0x5f518], dh; add eax, ecx; jmp eax; 
0x000bf431: add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0015e932: add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret; 
0x00026642: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; inc eax; jo 0x26647; call dword ptr [eax + 0x56]; 
0x00162622: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0011e4c7: add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f314], al; cmpsd dword ptr [esi], dword ptr es:[edi]; pop esi; cli; call dword ptr [eax - 0x18]; 
0x00076c17: add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; adc al, 0x41; cli; call dword ptr [eax - 0x75]; 
0x000202b6: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ac7db8c], cl; test byte ptr [edi], -0x7c; mov al, byte ptr [0xf6000001]; ret 0xf08; 
0x0015e522: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x00086a41: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fe05], al; push edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0015dfc1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0002e70a: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; das; cli; call dword ptr [eax - 0x18]; 
0x0001e5ee: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cefdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00025aa1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cfbdbbc], cl; ret; 
0x000bc9d2: add dword ptr [eax], eax; add byte ptr [ebx - 0x9373], cl; inc dword ptr [ebx]; mov word ptr [ecx - 0x60bac], es; jmp ecx; 
0x000bc911: add dword ptr [eax], eax; add byte ptr [ebx - 0x937b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x60f84], bl; jmp eax; 
0x000c72a7: add dword ptr [eax], eax; add byte ptr [ebx - 0x9bf796c], cl; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x00082c76: add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; je 0x82ca4; insb byte ptr es:[edi], dx; push ebp; call eax; 
0x000293c1: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x000ec491: add dword ptr [eax], eax; add byte ptr [ecx + 0x170c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00031648: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x00137b5c: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x000d4ac1: add dword ptr [eax], eax; add byte ptr [ecx + 0x7ec085c7], cl; jnp 0x149a5314; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000301fc: add dword ptr [eax], eax; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x000c7261: add dword ptr [eax], eax; add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001379ca: add dword ptr [eax], eax; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0002ca46: add dword ptr [eax], eax; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x00101e19: add dword ptr [eax], eax; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0001a807: add dword ptr [eax], eax; add byte ptr [ecx - 0x763fcf28], cl; ret 0x8689; 
0x0004d843: add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0010d5ed: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x0001a833: add dword ptr [eax], eax; add byte ptr [ecx - 0xff1b], al; call ecx; 
0x0010c32d: add dword ptr [eax], eax; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0013e98e: add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0007bbd9: add dword ptr [eax], eax; add byte ptr [ecx], bh; retf 0x975; add esp, 8; pop ebx; ret; 
0x000bee57: add dword ptr [eax], eax; add byte ptr [ecx], dh; leave; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00145333: add dword ptr [eax], eax; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0008ec7d: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000b2432: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000f4539: add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x00030f5a: add dword ptr [eax], eax; add byte ptr [edi], cl; inc ebp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002efb8: add dword ptr [eax], eax; add byte ptr [edi], cl; inc ebx; ret 0xec83; 
0x000dce91: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0009c772: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000a7f15: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x0005dde7: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x000b3a97: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000e4cf0: add dword ptr [eax], eax; add byte ptr [edx + 0x50], dl; call ebx; 
0x0012d55c: add dword ptr [eax], eax; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00070416: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x00075c8b: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0010816b: add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x0010840f: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x00161b3c: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000f6106: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x00163415: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001633b5: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000bdd75: add dword ptr [eax], eax; add cl, ch; ret; 
0x00160bc5: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00160bd6: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00160be7: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000202c2: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00160b7f: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00160b90: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00160ba1: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0004bdc3: add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x0011f493: add dword ptr [eax], eax; add eax, 0xc4b6b; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x000840e6: add dword ptr [eax], eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009ed57: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00050e40: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0004a7a4: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0005014a: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0009e6ba: add dword ptr [eax], eax; dec ecx; jne 0x9e6b8; pop esi; ret; 
0x000c6f5c: add dword ptr [eax], eax; mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000f76ee: add dword ptr [eax], eax; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0009cedc: add dword ptr [eax], edx; ret; 
0x0009cefc: add dword ptr [eax], esi; ret; 
0x0009ceec: add dword ptr [eax], esp; ret; 
0x00163315: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x00163322: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x000c7021: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000ecb7a: add dword ptr [ebp + 0x2b], esi; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00163be2: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00163bca: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000310c5: add dword ptr [ebp + 0x40], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0005b561: add dword ptr [ebp + 0x440f9304], ecx; ret; 
0x0001d0e2: add dword ptr [ebp + 0x47], -6; call dword ptr [eax - 1]; 
0x0006bca1: add dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x000b777f: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000dca43: add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x000ec1b8: add dword ptr [ebp + edi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec318: add dword ptr [ebp + edi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec268: add dword ptr [ebp + edi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00088af1: add dword ptr [ebp - 0x13], esi; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00043a1c: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00086474: add dword ptr [ebp - 0x17], esi; pop ebx; pop esi; pop edi; ret; 
0x000b2855: add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x000f8762: add dword ptr [ebp - 0x28], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000835d1: add dword ptr [ebp - 0x2c], esi; sub esp, 0xc; push eax; call edx; 
0x0005819f: add dword ptr [ebp - 0x43743], ecx; call dword ptr [eax - 0x77]; 
0x000fb84c: add dword ptr [ebp - 0x447bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000ad363: add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000b7b56: add dword ptr [ebp - 0x67f5db6], ecx; add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x000b7b5c: add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x0010fdca: add dword ptr [ebp - 0x6bf0fdb8], ecx; ret 0x7c8b; 
0x000fc1fd: add dword ptr [ebp - 0x74e18740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x0012371a: add dword ptr [ebp - 0x75], esi; pop ebx; pop esi; ret; 
0x000c5bb5: add dword ptr [ebp - 0x75], esp; cmp eax, 8; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x0011b103: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0011b053: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x00094ac4: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x0008eb08: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0010b143: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000e0f35: add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x000fce7c: add dword ptr [ebp - 0x7c988a0a], eax; in al, dx; or byte ptr [ebp - 0x5ce497d], cl; call dword ptr [eax + 0x6a]; 
0x0009e8ef: add dword ptr [ebp - 6], eax; call dword ptr [eax - 0x18]; 
0x00022366: add dword ptr [ebx + 0x1b801f8], eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xdd39; 
0x0009b8bf: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000e5fd9: add dword ptr [ebx + 0x3930246c], ecx; ret 0x2674; 
0x0008925d: add dword ptr [ebx + 0x45898704], ecx; rol byte ptr [ebp - 0x4e76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x748d; 
0x0004d13e: add dword ptr [ebx + 0x458b0850], ecx; test byte ptr [ebx - 0x13f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00087181: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x00092bd5: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0003459c: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0007b11c: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x0007b288: add dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00033f47: add dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0008000f: add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x000716eb: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00051139: add dword ptr [ebx + 0x5e], ebx; ret; 
0x0007af4a: add dword ptr [ebx + 0x5e], ebx; sbb eax, eax; pop edi; and eax, 0xc; ret; 
0x00123353: add dword ptr [ebx + 0x60], -6; call dword ptr [eax - 0x73]; 
0x00121fe3: add dword ptr [ebx + 0x60], -6; call dword ptr [edi + 0x6a]; 
0x0012e8c4: add dword ptr [ebx + 0x650c244c], ecx; sub ecx, dword ptr [0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x00033e71: add dword ptr [ebx + 0x6a08ec], eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000fd50f: add dword ptr [ebx + 0x7589d855], ecx; les edi, ptr [ecx]; ret 0x2676; 
0x00073921: add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x000786fb: add dword ptr [ebx + 0x798d08ec], eax; add dword ptr [eax + 0x52], edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000912c3: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cee3: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000912e3: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008cf03: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0011cc73: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x0001f18c: add dword ptr [ebx + eax + 0x54890000], 0x24; or al, 0x8b; jl 0x1f1bc; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0007b45a: add dword ptr [ebx + edx - 0x7b], esi; sal byte ptr [ebp + 0x1f], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0010aad0: add dword ptr [ebx - 0x137ce7c0], ecx; or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0010ac58: add dword ptr [ebx - 0x137ce7c0], ecx; or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x00027a51: add dword ptr [ebx - 0x1bf43], ecx; dec dword ptr [ebp - 0x1bcbbf79]; call dword ptr [eax - 0x73]; 
0x00107ec8: add dword ptr [ebx - 0x2b], esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00049560: add dword ptr [ebx - 0x363743], eax; call dword ptr [eax]; 
0x0012677a: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000cc7ec: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xcc7be; xor eax, eax; pop ebx; ret; 
0x00072207: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x00033674: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x0011dba9: add dword ptr [ebx - 0x49f0ef3c], eax; ret; 
0x000570ed: add dword ptr [ebx - 0x5f77b], ecx; call dword ptr [ebx + 0x53]; 
0x00056f59: add dword ptr [ebx - 0x5f77b], ecx; dec dword ptr [ecx - 0x5bf6b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x00114fe4: add dword ptr [ebx - 0x72efdbbc], ecx; add byte ptr [ecx], 0x31; cli; call dword ptr [eax + 0x56]; 
0x000d6625: add dword ptr [ebx - 0x7603e7bc], ecx; ret; 
0x001033fb: add dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0001c742: add dword ptr [ebx - 0x7d], edx; ret; 
0x00133f45: add dword ptr [ebx - 0x8b7b], ecx; jmp dword ptr [ebp - 0x39]; 
0x0004420f: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0010b7a0: add dword ptr [ebx - 0xc363], ecx; dec dword ptr [ecx - 0xcb73]; call dword ptr [eax - 0x77]; 
0x00031b93: add dword ptr [ebx - 0xe], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00139896: add dword ptr [ebx], eax; inc edx; add al, 0x89; ret 0x448b; 
0x000fc734: add dword ptr [ebx], ecx; inc ecx; or byte ptr [ecx + 0x418b0446], cl; add al, 0x89; ret 0xe083; 
0x000d6e38: add dword ptr [ebx], edi; pop ebp; add al, 0x7c; ret 0x9066; 
0x0002e704: add dword ptr [ecx + 0x13840fc6], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; das; cli; call dword ptr [eax - 0x18]; 
0x0007c7f3: add dword ptr [ecx + 0x1b80458], ecx; add byte ptr [eax], al; add bl, ch; wait; nop; call eax; 
0x00042395: add dword ptr [ecx + 0x24448bf3], ecx; sbb byte ptr [ecx], ch; sar dword ptr [ecx], cl; ret; 
0x00091131: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x00091261: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0008cd51: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0008ce81: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x00093fd1: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00091001: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x00091231: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x000b950a: add dword ptr [ecx + 0x394c2444], ecx; ret; 
0x00091251: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0008ce71: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00091241: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0008ce61: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000944c1: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00092e2e: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x000341de: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00089d5b: add dword ptr [ecx + 0x458bc045], ecx; aam 0x85; ror byte ptr [edi], 0x89; ret 0; 
0x00085abb: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x00051919: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x0008faf1: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x00085025: add dword ptr [ecx + 0x5bd88906], ecx; pop esi; pop edi; ret; 
0x0009b4a4: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x00103040: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x00033aa3: add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0008ea3e: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x0008cc41: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0008982a: add dword ptr [ecx + 0x75d938f1], ecx; adc eax, 0x8394758b; ret 0xf01; 
0x000d1915: add dword ptr [ecx + 0x80e1], eax; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000fa452: add dword ptr [ecx + 0xc6144a], ecx; and byte ptr [ebx - 0xa37b], cl; jmp dword ptr [ebp - 0x77]; 
0x0012689c: add dword ptr [ecx + edx - 0x7d], esi; les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000ff3eb: add dword ptr [ecx + esi*8 - 0x3cfe8b01], edi; mov ebp, esi; call ebx; 
0x000748b7: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x000b0089: add dword ptr [ecx - 0x360373], ecx; inc dword ptr [ebx - 0x36637b]; call dword ptr [eax]; 
0x0012ffe3: add dword ptr [ecx - 0x3b7c0012], edx; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00087bf4: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0012f42d: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x00078e52: add dword ptr [ecx - 0x49f0fbba], ecx; ret; 
0x0005d614: add dword ptr [ecx - 0x5176b], ecx; call dword ptr [edx + 0x52]; 
0x0005c9a1: add dword ptr [ecx - 0x5236b], ecx; call dword ptr [edx + 0x52]; 
0x0011adf8: add dword ptr [ecx - 0x69f0dbfc], ecx; ret 0xfe83; 
0x000afae1: add dword ptr [ecx - 0x727437ff], ebx; ror cl, 0xff; call dword ptr [ecx]; 
0x0003da73: add dword ptr [ecx - 0x74c7dbbc], ecx; add ecx, dword ptr [ecx - 0x76cfdbbc]; ret 0xe283; 
0x0003ab13: add dword ptr [ecx - 0x74dbdbbc], ecx; add ecx, dword ptr [ecx - 0x76e3dbbc]; ret 0xe283; 
0x0009ec25: add dword ptr [ecx - 0x76f7dbac], ecx; ret 0x4c89; 
0x0003888f: add dword ptr [ecx - 0x7cf7dbbc], ecx; ret; 
0x000f33cd: add dword ptr [ecx - 0x7cfbdba4], ecx; in al, dx; or al, 0xff; je 0xf33fc; sbb al, 0xe8; ret 0xfcce; 
0x000414b8: add dword ptr [ecx - 0x9373], ecx; call dword ptr [eax - 0x73]; 
0x000b7295: add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x000e1cea: add dword ptr [ecx], -0x6d; inc ebx; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x000e6274: add dword ptr [ecx], 0x31; cli; call dword ptr [eax - 0x18]; 
0x00161b3b: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000faf58: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126266: add dword ptr [ecx], eax; add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001122fc: add dword ptr [ecx], eax; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x00163caf: add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x00056f96: add dword ptr [ecx], eax; ret; 
0x00163cb1: add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0004b6d3: add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x000cfa05: add dword ptr [ecx], ebp; ret 0xd301; 
0x00136553: add dword ptr [ecx], ebp; ret; 
0x000c704f: add dword ptr [ecx], ebx; push esp; jne 0xc7060; lea esi, [esi]; mov eax, 0x40; ret; 
0x00021a7e: add dword ptr [ecx], ecx; ret 0x7439; 
0x000d8879: add dword ptr [ecx], ecx; ret 0xf983; 
0x000417a7: add dword ptr [ecx], ecx; ret; 
0x0008ad1e: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000efe32: add dword ptr [ecx], edi; ret 0x674; 
0x0011c764: add dword ptr [ecx], edi; ret 0x7772; 
0x000d5262: add dword ptr [ecx], edi; ret 0x840f; 
0x0011c800: add dword ptr [ecx], edi; ret 0x930f; 
0x00085c16: add dword ptr [ecx], edi; ret 0xc72; 
0x000dd5f1: add dword ptr [ecx], edi; ret 0xda75; 
0x000fb1ee: add dword ptr [ecx], edi; ret 0xe575; 
0x000d544b: add dword ptr [ecx], edi; ret 0xe875; 
0x0004e197: add dword ptr [ecx], edi; ret 0xec75; 
0x001650cd: add dword ptr [ecx], edi; ret 0xf27e; 
0x00046142: add dword ptr [ecx], edi; ret 0xf37e; 
0x000369a2: add dword ptr [ecx], edi; ret; 
0x000d9dbb: add dword ptr [ecx], edi; ror byte ptr [ecx + 0xf60247c], 1; dec esp; ret 0xc183; 
0x00114feb: add dword ptr [ecx], esi; cli; call dword ptr [eax + 0x56]; 
0x000e6275: add dword ptr [ecx], esi; cli; call dword ptr [eax - 0x18]; 
0x000c1e97: add dword ptr [ecx], esi; cli; call dword ptr [eax - 0x73]; 
0x000db4a5: add dword ptr [ecx], esi; cli; dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x000c27f4: add dword ptr [ecx], esi; cli; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000c272a: add dword ptr [ecx], esi; cli; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000f8970: add dword ptr [ecx], esi; cli; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00027f75: add dword ptr [ecx], esi; cli; jmp dword ptr [ebp - 0x75]; 
0x000d058b: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x00121e6f: add dword ptr [edi + 0x5d], ebx; ret; 
0x00096656: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0014ee20: add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x000fa26e: add dword ptr [edi + 7], edi; pop ebx; pop esi; ret; 
0x00087370: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x001211d2: add dword ptr [edi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x00164137: add dword ptr [edi], ecx; dec ecx; ret; 
0x00081639: add dword ptr [edi], ecx; inc ebp; ret 0xc483; 
0x0006a376: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000d1a50: add dword ptr [edi], ecx; lahf; ret 0xd789; 
0x0013d5ae: add dword ptr [edi], ecx; mov cs, word ptr [ebx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014a79f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153b4f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x000dbf94: add dword ptr [edi], ecx; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000dca47: add dword ptr [edi], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x0014a677: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153a47: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000773d6: add dword ptr [edi], ecx; mov ds, word ptr [0xb8fffffe]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079642: add dword ptr [edi], ecx; mov es, word ptr [ecx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008ad1a: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0x8ad18; pop ebx; ret; 
0x000622ad: add dword ptr [edi], ecx; mov ss, word ptr [eax - 0x4700001c]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00083446: add dword ptr [edi], ecx; test byte ptr [ebx - 0x7d000000], bh; in al, dx; or byte ptr [esi - 1], dl; jae 0x83478; call eax; 
0x000e9fa8: add dword ptr [edi], ecx; test byte ptr [edx - 0x74000008], cl; jl 0xe9fd6; or byte ptr [ebp - 0x56afb79], cl; call dword ptr [eax - 0x73]; 
0x0016275c: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x00094ac7: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x0008eb0b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0004f4c2: add dword ptr [edi], ecx; xchg ebp, eax; ret 0x8366; 
0x0011c799: add dword ptr [edi], ecx; xchg edi, eax; test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [esi - 0x7f]; 
0x000b3c0b: add dword ptr [edi], ecx; xchg esp, eax; ret 0x2be9; 
0x000a0851: add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00039c94: add dword ptr [edi], ecx; xchg esp, eax; ret 0xd120; 
0x000e3ebd: add dword ptr [edi], ecx; xchg esp, eax; ret 0xf631; 
0x000e3eb3: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x14f43], 0xff; add dword ptr [edi], ecx; xchg esp, eax; ret 0xf631; 
0x00132e20: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00070cd7: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x0013f573: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x00091283: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cea3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00051057: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000510e0: add dword ptr [edx + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x001023c3: add dword ptr [edx + eax*2], 1; ret; 
0x0003d0bc: add dword ptr [edx + ebx + 1], esi; ret; 
0x001110cc: add dword ptr [edx + ebx*2], -6; call dword ptr [eax - 0x73]; 
0x00087911: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0012f2eb: add dword ptr [edx + esi + 0x450f0000], -0x3e; add esp, 8; pop ebx; ret; 
0x000855b4: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x0009c0a2: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0009b462: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000985b2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x00063917: add dword ptr [edx - 0xb], edx; out 0xff, eax; jmp eax; 
0x000ef43c: add dword ptr [edx - 1], edx; jbe 0xef44d; call dword ptr [esi + 0x24]; 
0x000f047f: add dword ptr [edx - 1], edx; jbe 0xf0490; call dword ptr [esi + 0x24]; 
0x00118e61: add dword ptr [edx], -0x10; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e224a: add dword ptr [edx], 0x4a; cli; call dword ptr [eax - 0x18]; 
0x000ce725: add dword ptr [edx], 0x4d8b0000; aam 0x8b; mov esp, 0xf9fc3481; inc dword ptr [ecx]; iretd; jmp edi; 
0x0007041a: add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x0007705b: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f16f: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00075db6: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000725e6: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x6bd40; add esp, 0x1c; ret; 
0x000e46c3: add dword ptr [edx], esp; test dword ptr [edi - 0x76000002], ecx; ret 0x840f; 
0x00132b18: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00077c66: add dword ptr [esi + 0x17], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000778d4: add dword ptr [esi + 0x19], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00146eff: add dword ptr [esi + 0x1c030004], -0x75; add edx, ecx; jmp ebx; 
0x00091303: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cf23: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091323: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf43: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091343: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf63: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0008ed93: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x0008eda3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x0008edb3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x0008edc3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x00091033: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x00091273: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x00092e5e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00163c53: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f4: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea6e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc73: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x0008fa98: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x0008ce93: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x00095b93: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x00094553: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095bb3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094573: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095bd3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094593: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095bf3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000945b3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x001634fb: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0006b09a: add dword ptr [esi - 0x14], edi; lea ebx, [edx + 0x1928]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007484a: add dword ptr [esi - 0x14], edi; lea ebx, [edx + 0x193c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079e1a: add dword ptr [esi - 0x14], edi; lea ebx, [edx + 0x195c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001953c: add dword ptr [esi - 0x15], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000194e3: add dword ptr [esi - 0x16], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019489: add dword ptr [esi - 0x17], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f65: add dword ptr [esi - 0x18], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b134: add dword ptr [esi - 0x1a], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c0373: add dword ptr [esi - 0x20], edi; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cefc: add dword ptr [esi - 0x23], edi; mov eax, 0xf0; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a9d: add dword ptr [esi - 0x28], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008001e: add dword ptr [esi - 0x2c], edi; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0006d296: add dword ptr [esi - 0x33], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033cf8: add dword ptr [esi - 0x33], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x000c0639: add dword ptr [esi - 0x34], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00138994: add dword ptr [esi - 0x36], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071f06: add dword ptr [esi - 0x36], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072596: add dword ptr [esi - 0x37], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033ad8: add dword ptr [esi - 0x37], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0006bb96: add dword ptr [esi - 0x39], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000336ac: add dword ptr [esi - 0x3a], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b9ee: add dword ptr [esi - 0x3b], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00137574: add dword ptr [esi - 0x3d], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008004c: add dword ptr [esi - 0x3f], edi; mov eax, 0xf0; lea ebx, [ebp + 0x1df0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001378ac: add dword ptr [esi - 0x40], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00137624: add dword ptr [esi - 0x41], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776da: add dword ptr [esi - 0x41], edi; mov eax, 0xf0; lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345dc: add dword ptr [esi - 0x42], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016bebc: add dword ptr [esi - 0x42], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105bfc: add dword ptr [esi - 0x42], edi; mov eax, 0xf0; lea ebx, [ebx + 0x28a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f3fc: add dword ptr [esi - 0x43], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374cc: add dword ptr [esi - 0x43], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071826: add dword ptr [esi - 0x43], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29e4: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48e4: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c74: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106694: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011708c: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117734: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068c26: add dword ptr [esi - 0x44], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b53c4: add dword ptr [esi - 0x45], edi; mov eax, 0xf0; lea ebx, [ebx + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011091c: add dword ptr [esi - 0x45], edi; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011157c: add dword ptr [esi - 0x45], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011227c: add dword ptr [esi - 0x45], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011369c: add dword ptr [esi - 0x45], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012939c: add dword ptr [esi - 0x45], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3bc: add dword ptr [esi - 0x46], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1900]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa9dc: add dword ptr [esi - 0x46], edi; mov eax, 0xf0; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c8b6: add dword ptr [esi - 0x4c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068d66: add dword ptr [esi - 0x4e], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010e4d6: add dword ptr [esi - 0x4f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000346ac: add dword ptr [esi - 0x50], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008096a: add dword ptr [esi - 0x50], edi; mov eax, 0xf0; lea ebx, [edi + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c086: add dword ptr [esi - 0x51], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011247c: add dword ptr [esi - 0x52], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011389c: add dword ptr [esi - 0x52], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012959c: add dword ptr [esi - 0x52], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2adc: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c49dc: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104d6c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010678c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110a0c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011166c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011236c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011378c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011782c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012948c: add dword ptr [esi - 0x53], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110834: add dword ptr [esi - 0x54], edi; mov eax, 0xf0; lea ebx, [ebx + 0x29e4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111494: add dword ptr [esi - 0x54], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4b4: add dword ptr [esi - 0x54], edi; mov eax, 0xf0; lea ebx, [edi + 0x2cac]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003483c: add dword ptr [esi - 0x55], edi; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a35: add dword ptr [esi - 0x55], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110b2c: add dword ptr [esi - 0x56], edi; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011178c: add dword ptr [esi - 0x56], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006959e: add dword ptr [esi - 0x56], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2bec: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4aec: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104e7c: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010689c: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011793c: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001201d4: add dword ptr [esi - 0x57], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22cc: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x219c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c449c: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x223c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001040ec: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x27c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cec: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x28c0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011219c: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135bc: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2b34]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a2c: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x2c78]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f4c: add dword ptr [esi - 0x58], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3358]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d8d6: add dword ptr [esi - 0x59], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e538: add dword ptr [esi - 0x5c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d3b6: add dword ptr [esi - 0x5d], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001202a4: add dword ptr [esi - 0x5f], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e33c: add dword ptr [esi - 0x61], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3410]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033fa8: add dword ptr [esi - 0x63], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069fd6: add dword ptr [esi - 0x65], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e1ae: add dword ptr [esi - 0x67], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002b70a: add dword ptr [esi - 0x69], edi; mov eax, 0xf0; lea ebx, [edi + 0x11a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069ea6: add dword ptr [esi - 0x69], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c746: add dword ptr [esi - 0x6c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bd0e: add dword ptr [esi - 0x6f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120d1c: add dword ptr [esi - 0x71], edi; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000deeec: add dword ptr [esi - 0x72], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000ad03c: add dword ptr [esi - 0x73], edi; mov eax, 0xf0; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000335e0: add dword ptr [esi - 0x74], edi; lea ebx, [edx + 0x1284]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000faadc: add dword ptr [esi - 0x76], edi; mov eax, 0xf0; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010dd96: add dword ptr [esi - 0x76], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00037d6a: add dword ptr [esi - 0x77], edx; ret 0x74ff; 
0x0013709c: add dword ptr [esi - 0x79], edi; mov eax, 0xf0; lea ebx, [ebp + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004107c: add dword ptr [esi - 0x7a], edi; mov eax, 0xf0; lea ebx, [edi + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013a513: add dword ptr [esi - 0x7d], edx; ret; 
0x0006cdd6: add dword ptr [esi - 0x7e], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cbd6: add dword ptr [esi - 0x7f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00051146: add dword ptr [esi - 0xf], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008239e: add dword ptr es:[eax], eax; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x000615fd: add dword ptr fs:[eax], eax; add byte ptr [eax], al; jmp eax; 
0x00067273: add dword ptr fs:[eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00065e46: add dword ptr fs:[eax], eax; add byte ptr [eax], al; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x0001a832: add dword ptr fs:[eax], eax; add byte ptr [ecx - 0xff1b], al; call ecx; 
0x0001b5c2: add eax, 0; ret; 
0x0009bec3: add eax, 0x10; bsf edx, edx; call 0x13cef9; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bc3: add eax, 0x10; bsf edx, edx; call 0x13cef9; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bf2a: add eax, 0x10; call 0x13cef9; add ecx, 0xe6462; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008b6b8: add eax, 0x10; pop edi; pop esi; ret; 
0x0016c187: add eax, 0x10; push eax; call 0x11c410; add esp, 0x1c; ret; 
0x0009c1fb: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d88: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012f776: add eax, 0x14; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e6: add eax, 0x14; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f856: add eax, 0x14; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b9: add eax, 0x14; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f919: add eax, 0x14; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f986: add eax, 0x14; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa06: add eax, 0x14; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012fde4: add eax, 0x14; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x0012febc: add eax, 0x14; jne 0x12fef4; add esp, 0x1c; ret; 
0x0013167d: add eax, 0x14; jne 0x131688; add esp, 0x2c; ret; 
0x0002fd13: add eax, 0x14; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e6: add eax, 0x14; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00034d69: add eax, 0x14; jne 0x34d74; add esp, 0x1c; ret; 
0x00034dbc: add eax, 0x14; jne 0x34dc7; add esp, 0x1c; ret; 
0x000744bd: add eax, 0x14; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x000fce20: add eax, 0x14; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x0007b705: add eax, 0x1688fb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b675: add eax, 0x16898b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b655: add eax, 0x1689ab; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b625: add eax, 0x1689db; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b605: add eax, 0x1689fb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x0007b5d5: add eax, 0x168a2b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5a5: add eax, 0x168a5b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x00079d05: add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00086e07: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00029a64: add eax, 0x182474ff; push 0; call 0x29a20; add esp, 0x1c; ret; 
0x0001af15: add eax, 0x18; call eax; 
0x00030c36: add eax, 0x18; jmp eax; 
0x0013d679: add eax, 0x18; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x00077779: add eax, 0x18; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0011b8a9: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b971: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00062755: add eax, 0x18; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c69: add eax, 0x18; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adf9: add eax, 0x18; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9bf: add eax, 0x18; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b369: add eax, 0x18; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d3a: add eax, 0x18; lea edx, [esp + 0x3c]; push edx; call eax; 
0x000607f4: add eax, 0x18; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a80: add eax, 0x18; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00025f09: add eax, 0x18; mov dword ptr [esp + 0x18], ecx; call eax; 
0x0003414d: add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0001b220: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00025f58: add eax, 0x18; push ecx; call eax; 
0x0005844a: add eax, 0x18; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c7a: add eax, 0x18; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x00031c35: add eax, 0x1b23cb; mov eax, dword ptr [eax + 0x48]; ret; 
0x00031c15: add eax, 0x1b23eb; mov eax, dword ptr [eax + 0x4c]; ret; 
0x000319f5: add eax, 0x1b260b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00029415: add eax, 0x1babeb; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293f5: add eax, 0x1bac0b; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x000293d5: add eax, 0x1bac2b; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x00028c15: add eax, 0x1bb3eb; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000281b5: add eax, 0x1bbe4b; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00024d55: add eax, 0x1bf2ab; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x00029a44: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x29a20; add esp, 0x1c; ret; 
0x0001beb5: add eax, 0x1c814b; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001be95: add eax, 0x1c816b; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001b5b5: add eax, 0x1c8a4b; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0001b065: add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x0001b045: add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x0012ba91: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000437b4: add eax, 0x1cc48300; ret; 
0x0010840e: add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x000debee: add eax, 0x2003848d; add bh, dl; call dword ptr [eax - 0x73]; 
0x00029473: add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0009bf4f: add eax, 0x20; call 0x13cef9; add ecx, 0xe643d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c4f: add eax, 0x20; call 0x13cef9; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008b6c5: add eax, 0x20; pop edi; pop esi; ret; 
0x000911a8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x00091308: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdc8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf28: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000852cc: add eax, 0x21; ret; 
0x000f81e5: add eax, 0x26; mov edx, dword ptr [edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0012c3ad: add eax, 0x28818d50; jo 0x12c3ae; call dword ptr [eax - 0x18]; 
0x000e5f1e: add eax, 0x28818d50; jo 0xe5f1f; call dword ptr [eax - 0x18]; 
0x0011cba5: add eax, 0x28828d50; jo 0x11cba6; call dword ptr [eax - 0x18]; 
0x00081dca: add eax, 0x28828d50; jo 0x81dcb; call dword ptr [eax - 0x18]; 
0x000e12c6: add eax, 0x28828d50; jo 0xe12c7; call dword ptr [eax - 0x18]; 
0x000e1402: add eax, 0x28828d50; jo 0xe1403; call dword ptr [eax - 0x18]; 
0x00116412: add eax, 0x28838d50; jo 0x116413; call dword ptr [eax - 0x18]; 
0x0011664c: add eax, 0x28838d50; jo 0x11664d; call dword ptr [eax - 0x18]; 
0x0011e942: add eax, 0x28838d50; jo 0x11e943; call dword ptr [eax - 0x18]; 
0x001262ba: add eax, 0x28838d50; jo 0x1262bb; call dword ptr [eax - 0x18]; 
0x00126386: add eax, 0x28838d50; jo 0x126387; call dword ptr [eax - 0x18]; 
0x001264aa: add eax, 0x28838d50; jo 0x1264ab; call dword ptr [eax - 0x18]; 
0x00126535: add eax, 0x28838d50; jo 0x126536; call dword ptr [eax - 0x18]; 
0x00126562: add eax, 0x28838d50; jo 0x126563; call dword ptr [eax - 0x18]; 
0x00126db7: add eax, 0x28838d50; jo 0x126db8; call dword ptr [eax - 0x18]; 
0x0012a7ad: add eax, 0x28838d50; jo 0x12a7ae; call dword ptr [eax - 0x18]; 
0x0012a968: add eax, 0x28838d50; jo 0x12a969; call dword ptr [eax - 0x18]; 
0x0012b00a: add eax, 0x28838d50; jo 0x12b00b; call dword ptr [eax - 0x18]; 
0x0012b090: add eax, 0x28838d50; jo 0x12b091; call dword ptr [eax - 0x18]; 
0x0012b0dd: add eax, 0x28838d50; jo 0x12b0de; call dword ptr [eax - 0x18]; 
0x0012bf79: add eax, 0x28838d50; jo 0x12bf7a; call dword ptr [eax - 0x18]; 
0x0012c466: add eax, 0x28838d50; jo 0x12c467; call dword ptr [eax - 0x18]; 
0x0012d14e: add eax, 0x28838d50; jo 0x12d14f; call dword ptr [eax - 0x18]; 
0x0012de44: add eax, 0x28838d50; jo 0x12de45; call dword ptr [eax - 0x18]; 
0x001300a8: add eax, 0x28838d50; jo 0x1300a9; call dword ptr [eax - 0x18]; 
0x0013050a: add eax, 0x28838d50; jo 0x13050b; call dword ptr [eax - 0x18]; 
0x0013055c: add eax, 0x28838d50; jo 0x13055d; call dword ptr [eax - 0x18]; 
0x001305c0: add eax, 0x28838d50; jo 0x1305c1; call dword ptr [eax - 0x18]; 
0x00130924: add eax, 0x28838d50; jo 0x130925; call dword ptr [eax - 0x18]; 
0x00130e5c: add eax, 0x28838d50; jo 0x130e5d; call dword ptr [eax - 0x18]; 
0x00130eac: add eax, 0x28838d50; jo 0x130ead; call dword ptr [eax - 0x18]; 
0x00130eea: add eax, 0x28838d50; jo 0x130eeb; call dword ptr [eax - 0x18]; 
0x00130f8d: add eax, 0x28838d50; jo 0x130f8e; call dword ptr [eax - 0x18]; 
0x00131ed8: add eax, 0x28838d50; jo 0x131ed9; call dword ptr [eax - 0x18]; 
0x00132969: add eax, 0x28838d50; jo 0x13296a; call dword ptr [eax - 0x18]; 
0x00132ff4: add eax, 0x28838d50; jo 0x132ff5; call dword ptr [eax - 0x18]; 
0x000504cb: add eax, 0x28838d50; jo 0x504cc; call dword ptr [eax - 0x18]; 
0x000841c7: add eax, 0x28838d50; jo 0x841c8; call dword ptr [eax - 0x18]; 
0x00084270: add eax, 0x28838d50; jo 0x84271; call dword ptr [eax - 0x18]; 
0x0008433e: add eax, 0x28838d50; jo 0x8433f; call dword ptr [eax - 0x18]; 
0x00084673: add eax, 0x28838d50; jo 0x84674; call dword ptr [eax - 0x18]; 
0x000846c1: add eax, 0x28838d50; jo 0x846c2; call dword ptr [eax - 0x18]; 
0x0008b4d1: add eax, 0x28838d50; jo 0x8b4d2; call dword ptr [eax - 0x18]; 
0x00113fa4: add eax, 0x28858d50; jo 0x113fa5; call dword ptr [eax - 0x18]; 
0x0011406a: add eax, 0x28858d50; jo 0x11406b; call dword ptr [eax - 0x18]; 
0x0011409a: add eax, 0x28858d50; jo 0x11409b; call dword ptr [eax - 0x18]; 
0x001249b3: add eax, 0x28858d50; jo 0x1249b4; call dword ptr [eax - 0x18]; 
0x00124aab: add eax, 0x28858d50; jo 0x124aac; call dword ptr [eax - 0x18]; 
0x00132148: add eax, 0x28858d50; jo 0x132149; call dword ptr [eax - 0x18]; 
0x000513dc: add eax, 0x28858d50; jo 0x513dd; call dword ptr [eax - 0x18]; 
0x0005143a: add eax, 0x28858d50; jo 0x5143b; call dword ptr [eax - 0x18]; 
0x001247e2: add eax, 0x28868d50; jo 0x1247e3; call dword ptr [eax - 0x18]; 
0x00028ed4: add eax, 0x28868d50; jo 0x28ed5; call dword ptr [eax - 0x18]; 
0x000e1138: add eax, 0x28868d50; jo 0xe1139; call dword ptr [eax - 0x18]; 
0x001242aa: add eax, 0x28878d50; jo 0x1242ab; call dword ptr [eax - 0x18]; 
0x0012bb86: add eax, 0x28878d50; jo 0x12bb87; call dword ptr [eax - 0x18]; 
0x00123775: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000a9203: add eax, 0x291ff083; ret 0x1489; 
0x000a66ba: add eax, 0x291ff083; ret 0x5489; 
0x0008eb71: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000efc45: add eax, 0x302474ff; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0009be01: add eax, 0x30; call 0x13cef9; add ecx, 0xe658b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b68: add eax, 0x30; call 0x13cef9; add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008b6d2: add eax, 0x30; pop edi; pop esi; ret; 
0x00047bff: add eax, 0x3268868d; cli; call dword ptr [eax + 0x57]; 
0x0012c5a1: add eax, 0x3848d; daa; cli; call dword ptr [eax + 0x52]; 
0x00092cb4: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0012d1c6: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0010a85a: add eax, 0x408b018b; sbb byte ptr [ebx - 0x137c53b3], cl; add al, 0x6a; add eax, 0x579f918d; cli; call dword ptr [edx + 0x50]; 
0x00095a3c: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x0009b5af: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x00083250: add eax, 0x447e838d; cli; call dword ptr [eax - 0x73]; 
0x0012c7d6: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000eb4d8: add eax, 0x5002e0c1; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x0012f907: add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x0015a0a3: add eax, 0x542b60f; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x001579fc: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001561f3: add eax, 0x542b60f; sub eax, ecx; ret; 
0x0010a867: add eax, 0x579f918d; cli; call dword ptr [edx + 0x50]; 
0x0010a7a8: add eax, 0x57d5808d; cli; call dword ptr [eax - 0x75]; 
0x0010a1ec: add eax, 0x57f6808d; cli; call dword ptr [eax - 0x75]; 
0x0010c0d6: add eax, 0x5820808d; cli; call dword ptr [eax - 0x75]; 
0x000e6da1: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0005084a: add eax, 0x5b08c483; ret; 
0x001139f5: add eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x000309ec: add eax, 0x5b18c483; ret; 
0x000bf006: add eax, 0x5b28c483; ret; 
0x000b321a: add eax, 0x5b38c483; ret; 
0x000b327a: add eax, 0x5b48c483; ret; 
0x0008e889: add eax, 0x5b5f0000; ret; 
0x0013cf27: add eax, 0x5b9a0423; setne al; movzx eax, al; ret; 
0x0009d90e: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x0012fc10: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x00094e83: add eax, 0x5e5f0000; pop ebx; ret; 
0x000911b1: add eax, 0x5f0c428d; ret; 
0x000967a1: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x0009b5b4: add eax, 0x5f5bf889; ret; 
0x0010c1c1: add eax, 0x6ac0878d; cli; call dword ptr [eax - 0x75]; 
0x00028e4e: add eax, 0x7048908d; cli; dec dword ptr [ebp - 0x58fd780]; call dword ptr [edx + 0x50]; 
0x000950b8: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00026fb1: add eax, 0x748dd375; add dh, dh; ret 0x7503; 
0x000ecb43: add eax, 0x74bb0500; str word ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000c57f7: add eax, 0x74f2f883; adc eax, dword ptr [ebx + 0xbafff8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000267a4: add eax, 0x75003880; mov esp, 0x8d0cec83; xchg dword ptr [esi], ebp; das; cli; call dword ptr [eax - 0x18]; 
0x0009e71c: add eax, 0x76800000; out 0x89, eax; ret; 
0x000d1a4a: add eax, 0x7e830975; pop esp; add dword ptr [edi], ecx; lahf; ret 0xd789; 
0x00098d91: add eax, 0x824448b; pop esi; ret; 
0x000618ff: add eax, 0x83000009; in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000272e0: add eax, 0x850f02a8; ret; 
0x00162952: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00161932: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00161ff2: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00154b55: add eax, 0x8806b60f; pop es; pop esi; pop edi; pop ebx; ret; 
0x001004f7: add eax, 0x89000000; add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001074d7: add eax, 0x89000002; ret; 
0x000ff3fe: add eax, 0x89000e4c; ret; 
0x00068102: add eax, 0x8902458d; aad 0x89; ret 0xd9e9; 
0x00055823: add eax, 0x89fffffe; test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x000f1b87: add eax, 0x8b000002; pop ebp; sub dh, dh; ret; 
0x0014f060: add eax, 0x8b1c035f; jmp ebx; 
0x00065752: add eax, 0x8bffffef; test dword ptr [edi + esi*8 - 1], ebp; inc dword ptr [ebx - 0x7f72f314]; je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x000aa072: add eax, 0x8d500000; add byte ptr [ebx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x000a47e1: add eax, 0x8d500000; cmp dl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x000aa14c: add eax, 0x8d500000; or cl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x000e355a: add eax, 0x8d500000; xchg byte ptr [eax - 0x6d], ah; cli; call dword ptr [eax - 0x18]; 
0x0004998e: add eax, 0x8d500000; xchg dl, bh; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0003a7c6: add eax, 0x8d500000; xchg dword ptr [ebx + esi*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x0003a877: add eax, 0x8d500000; xchg dword ptr [ebx + esi*2], eax; cli; call dword ptr [eax - 0x18]; 
0x0003ca99: add eax, 0x8d500000; xchg dword ptr [edx + esi - 0x17af0006], esi; xchg edi, eax; ret; 
0x0003a854: add eax, 0x8d500000; xchg ecx, ecx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0003d7b7: add eax, 0x8d500000; xchg edx, edi; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e7bec: add eax, 0x8d500000; xchg esi, edx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x0011cbca: add eax, 0x8d8134ff; sub byte ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x0001912d: add eax, 0x8dc78900; xchg byte ptr [esp + ebp], ah; cli; call dword ptr [edx + 0x52]; 
0x00079c99: add eax, 0x8dffffff; jbe 0x79ca0; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00094b4c: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e1182: add eax, 0x924c868d; cli; call dword ptr [eax - 0x73]; 
0x000e1342: add eax, 0x926c868d; cli; call dword ptr [eax - 0x73]; 
0x0010a68b: add eax, 0x9918918d; cli; call dword ptr [edx + 0x50]; 
0x0010a2c1: add eax, 0x9940808d; cli; call dword ptr [eax - 0x75]; 
0x0010aea3: add eax, 0x9978808d; cli; call dword ptr [eax + 0x6a]; 
0x0009618f: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d4b99: add eax, 0x9dfe283; ret 0x5388; 
0x00145a85: add eax, 0x9e57b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143395: add eax, 0xa0c6b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143375: add eax, 0xa0c8b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143335: add eax, 0xa0ccb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143315: add eax, 0xa0ceb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001432f5: add eax, 0xa0d0b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001432d5: add eax, 0xa0d2b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00051572: add eax, 0xa6e85051; test ch, bh; inc dword ptr [ebx - 0x72aff33c]; test ebx, ecx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x00162b5d: add eax, 0xa; pop edi; ret; 
0x00160a34: add eax, 0xa; ret; 
0x000afea6: add eax, 0xabf4878d; cli; call dword ptr [eax + 0x53]; 
0x00129c59: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00137385: add eax, 0xacc7b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00162b9f: add eax, 0xb48d0000; add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0012f085: add eax, 0xb4f7b; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x001627c2: add eax, 0xb; pop edi; ret; 
0x001609e6: add eax, 0xb; ret; 
0x0015c46e: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0009c204: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0014c942: add eax, 0xc381ffff; sti; xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0001dcdc: add eax, 0xc4830008; adc byte ptr [ebp - 0x7cd58b40], al; ret; 
0x000bed42: add eax, 0xc483fffe; adc cl, ch; idiv bh; call dword ptr [edx + 0x51]; 
0x0011f495: add eax, 0xc4b6b; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x000b6c3c: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x00162b67: add eax, 0xc; pop edi; ret; 
0x0011a56a: add eax, 0xc; ret; 
0x00031971: add eax, 0xd0f7e0d3; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0010f005: add eax, 0xd4ffb; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x00136ec3: add eax, 0xd8890000; pop ebx; pop esi; ret; 
0x00045096: add eax, 0xd; add esp, 4; jmp eax; 
0x00162b6c: add eax, 0xd; pop edi; ret; 
0x00160a40: add eax, 0xd; ret; 
0x00102cf5: add eax, 0xe130b; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0008f2c7: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00162b71: add eax, 0xe; pop edi; ret; 
0x00160a44: add eax, 0xe; ret; 
0x000f7e45: add eax, 0xec1bb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0012d5a5: add eax, 0xec830000; or al, 0x8b; inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x00075874: add eax, 0xec830000; or byte ptr [ebp + 0x52342454], cl; push esi; call dword ptr [eax + 0x48]; 
0x00051698: add eax, 0xec83fffe; add al, 0x29; ret; 
0x000f67f5: add eax, 0xed80b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000bb277: add eax, 0xf04fa83; dec ebp; ret 0x4489; 
0x0008eb6e: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00094b49: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x0009618c: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e08b5: add eax, 0xf101fffa; jmp ecx; 
0x001640de: add eax, 0xf1fc1f6; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x0004b443: add eax, 0xf6944d89; ret 0xf1f; 
0x000ecb45: add eax, 0xf74bb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001627eb: add eax, 0xf; pop edi; ret; 
0x001609ff: add eax, 0xf; ret; 
0x001572ce: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00131067: add eax, 0xffff21e9; jmp dword ptr [esi - 0x70]; 
0x0016b72e: add eax, 0xffff5ce8; dec dword ptr [ebx + 0xf9c83]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x78a1f6d], cl; call dword ptr [edx + 0x50]; 
0x0007b6c2: add eax, 1; mov dword ptr [edx + 0x150], eax; ret; 
0x0008ad18: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0x8ad18; pop ebx; ret; 
0x00162b30: add eax, 1; pop edi; ret; 
0x0008527d: add eax, 1; ret; 
0x0008790f: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000865a0: add eax, 1; xor byte ptr [eax - 1], 0x2a; cmp eax, edx; jne 0x865a0; mov eax, ecx; ret; 
0x0008af26: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00162b35: add eax, 2; pop edi; ret; 
0x000b2777: add eax, 2; ret; 
0x00162775: add eax, 3; pop edi; ret; 
0x000b2790: add eax, 3; ret; 
0x000a0573: add eax, 4; cmp edx, ecx; je 0xa057e; test edx, edx; jne 0xa0570; ret; 
0x000f9d1f: add eax, 4; mov dword ptr [ebx + 0x2454], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00162b3f: add eax, 4; pop edi; ret; 
0x00131f6d: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x131db0; add esp, 0x1c; ret; 
0x00160a1c: add eax, 4; ret; 
0x000b2937: add eax, 4; test edx, edx; jne 0xb2930; mov eax, ecx; pop ebx; ret; 
0x00162b44: add eax, 5; pop edi; ret; 
0x00160a20: add eax, 5; ret; 
0x00162b49: add eax, 6; pop edi; ret; 
0x00160a24: add eax, 6; ret; 
0x0016279b: add eax, 7; pop edi; ret; 
0x001609bf: add eax, 7; ret; 
0x00081ab5: add eax, 8; cmp eax, 9; ja 0x81b08; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x0012a813: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012a836: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00162b53: add eax, 8; pop edi; ret; 
0x000e1e71: add eax, 8; push eax; call 0x9d860; add esp, 0x1c; ret; 
0x00160a2c: add eax, 8; ret; 
0x0011a564: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00162b58: add eax, 9; pop edi; ret; 
0x00160a30: add eax, 9; ret; 
0x0001b5c1: add eax, dword ptr [0]; ret; 
0x000ecb42: add eax, dword ptr [0x74bb0500]; str word ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0009e7bf: add eax, dword ptr [eax + 0x450ff0e5]; ret; 
0x0014fd6c: add eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bc91a: add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x00059385: add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058a9d: add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x00058984: add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x0008b081: add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0008afc1: add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x000857d9: add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x000584fd: add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x0013c2d7: add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x000de1e8: add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x00092eff: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000a49ac: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; and al, 0x71; cli; call dword ptr [eax - 0x18]; 
0x0001e29d: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2e], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x00049969: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, ah; jno 0x4996c; call dword ptr [eax - 0x18]; 
0x0001f540: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x2e], cl; cli; call dword ptr [eax - 0x18]; 
0x0011a39c: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebx*4], bl; cli; call dword ptr [eax - 0x18]; 
0x00109927: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x57], edi; cli; call dword ptr [eax - 0x18]; 
0x0001e94e: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x2e], ecx; cli; call dword ptr [eax - 0x18]; 
0x0003a7f4: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x32], esi; cli; call dword ptr [eax - 0x18]; 
0x0003a7a3: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0x3a7a6; call dword ptr [eax - 0x18]; 
0x0003d628: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0x3d62b; call dword ptr [eax - 0x18]; 
0x000407c2: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0x407c5; call dword ptr [eax - 0x18]; 
0x000b1689: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jno 0xb168c; call dword ptr [eax - 0x18]; 
0x000ba368: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ecx, ebp; inc esi; cli; call dword ptr [eax - 0x18]; 
0x000a4920: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xor byte ptr [edx + 0x32], 0xfa; call dword ptr [eax - 0x18]; 
0x00033a14: add eax, dword ptr [eax]; add byte ptr [eax - 1], dl; je 0x33a3f; sbb al, 0xe8; paddw mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00130252: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012e052: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; xor al, 0x62; cli; call dword ptr [eax - 0x73]; 
0x00101fe6: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000ed0bc: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bee7c: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000f5962: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001016f3: add eax, dword ptr [eax]; add byte ptr [eax], al; or esi, 0x100; call dword ptr gs:[0x10]; 
0x000b27d1: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x0002d16d: add eax, dword ptr [eax]; add byte ptr [ebp - 0x58f3b45], cl; push dword ptr [eax + ebp*2 - 0x7d]; in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x00055bf2: add eax, dword ptr [eax]; add byte ptr [ebp - 0x75], ch; add ecx, dword ptr [edi]; test dword ptr [ecx], edx; ret 0xffff; 
0x000322c1: add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x34]; call edi; 
0x00040dad: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015c6be: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c830e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x000fb11d: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x000f25e9: add eax, dword ptr [eax]; add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x0005f4f6: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x000a6439: add eax, dword ptr [eax]; add byte ptr [ebx - 0x74c7dbac], cl; inc edx; add al, 0x83; ret 0x8304; 
0x000b564e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmpsd dword ptr [esi], dword ptr es:[edi]; inc esi; cli; call dword ptr [eax + 0x57]; 
0x000b6ef3: add eax, dword ptr [eax]; add byte ptr [ebx - 0xeb73], cl; inc dword ptr [ebx - 0x7e72f714]; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x001476ae: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000b6f1c: add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00055bd0: add eax, dword ptr [eax]; add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x0001f18e: add eax, dword ptr [eax]; add byte ptr [ecx - 0x74f3dbac], cl; jl 0x1f1bc; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x00022b89: add eax, dword ptr [eax]; add byte ptr [ecx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret; 
0x0010b98c: add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0001fe8d: add eax, dword ptr [eax]; add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0008eb0f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0010eb89: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x000701df: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00108c29: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0007b6a3: add eax, dword ptr [eax]; add byte ptr [esi + 8], dh; ret; 
0x0003aa9c: add eax, dword ptr [eax]; add ch, bl; test dword ptr [eax - 0x53], esp; cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x000eadce: add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x00162769: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x000eadbc: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x0016278f: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x000eadc5: add eax, dword ptr [eax]; add dh, dh; ret 0xf80; 
0x00102cf3: add eax, dword ptr [eax]; add eax, 0xe130b; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00150852: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150aad: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000f7eec: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0012c5a4: add eax, dword ptr [eax]; daa; cli; call dword ptr [eax + 0x52]; 
0x00162a35: add eax, dword ptr [eax]; je 0x162b3a; mov eax, 4; pop edi; ret; 
0x00131878: add eax, dword ptr [ebp + 0x317374c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00124530: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00077c63: add eax, dword ptr [ebx + 0x177e01f8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000778d1: add eax, dword ptr [ebx + 0x197e01f8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011adad: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x00125abc: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00069c6c: add eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0006e8b5: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x0012e039: add eax, dword ptr [ebx + 0x8b0cec]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012e996: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00019539: add eax, dword ptr [ebx - 0x1481fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000194e0: add eax, dword ptr [ebx - 0x1581fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019486: add eax, dword ptr [ebx - 0x1681fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f62: add eax, dword ptr [ebx - 0x1781fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a9a: add eax, dword ptr [ebx - 0x2781fe18]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008001b: add eax, dword ptr [ebx - 0x2b81fe08]; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0006d293: add eax, dword ptr [ebx - 0x3281fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071f03: add eax, dword ptr [ebx - 0x3581fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072593: add eax, dword ptr [ebx - 0x3681fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00034144: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0006bb93: add eax, dword ptr [ebx - 0x3881fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b9eb: add eax, dword ptr [ebx - 0x3a81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006e90a: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00069ae7: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x00071823: add eax, dword ptr [ebx - 0x4281fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068c23: add eax, dword ptr [ebx - 0x4381fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00063420: add eax, dword ptr [ebx - 0x49f0fe1d]; ret; 
0x0006c8b3: add eax, dword ptr [ebx - 0x4b81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068d63: add eax, dword ptr [ebx - 0x4d81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010e4d3: add eax, dword ptr [ebx - 0x4e81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c083: add eax, dword ptr [ebx - 0x5081fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a32: add eax, dword ptr [ebx - 0x5481fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006959b: add eax, dword ptr [ebx - 0x5581fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d8d3: add eax, dword ptr [ebx - 0x5881fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e535: add eax, dword ptr [ebx - 0x5b81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d3b3: add eax, dword ptr [ebx - 0x5c81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033fa5: add eax, dword ptr [ebx - 0x6281fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069fd3: add eax, dword ptr [ebx - 0x6481fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e1ab: add eax, dword ptr [ebx - 0x6681fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069ea3: add eax, dword ptr [ebx - 0x6881fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c743: add eax, dword ptr [ebx - 0x6b81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b3c08: add eax, dword ptr [ebx - 0x6bf0fe08]; ret 0x2be9; 
0x0006bd0b: add eax, dword ptr [ebx - 0x6e81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000798fb: add eax, dword ptr [ebx - 0x71f0fe08]; mov ecx, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071deb: add eax, dword ptr [ebx - 0x71f0fe08]; push 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008128c: add eax, dword ptr [ebx - 0x71f0fe08]; xor eax, 0xb8fffffd; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5763: add eax, dword ptr [ebx - 0x71f0fe18]; call 0xb90c576c; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010dd93: add eax, dword ptr [ebx - 0x7581fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cdd3: add eax, dword ptr [ebx - 0x7d81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cbd3: add eax, dword ptr [ebx - 0x7e81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00051143: add eax, dword ptr [ebx - 0xe81fe08]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00085abd: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x0002c16b: add eax, dword ptr [ecx]; ret 0x4403; 
0x00083430: add eax, dword ptr [ecx]; ret 0x5303; 
0x000d58a4: add eax, dword ptr [ecx]; ret 0xb60f; 
0x0007b1e5: add eax, dword ptr [edi + 0x1ac8]; mov eax, dword ptr [eax]; test eax, eax; je 0x7b1f3; call eax; 
0x00081d80: add eax, dword ptr [edx + 8]; xor eax, 0xfedabeeb; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x00034f89: add eax, dword ptr [edx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00045093: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00043b90: add eax, dword ptr [esp]; ret; 
0x0008eb0e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0001b5c0: add eax, dword ptr gs:[0]; ret; 
0x000d1825: add eax, eax; pop ebx; pop esi; ret; 
0x0001b02a: add eax, ebp; adc byte ptr [ecx], ah; or eax, 0x1cc48300; ret; 
0x0001d6cf: add eax, ebp; fstp xword ptr [ecx - 0x3b7c0001]; adc byte ptr [ecx + 0x74c085c1], cl; ret 0xec83; 
0x0009e778: add eax, ebp; jmp eax; 
0x00079680: add eax, ebp; lcall 0x18c4, 0x83fffff8; pop ebx; ret; 
0x000e88ce: add eax, ebx; jmp eax; 
0x0013271a: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0009c00b: add eax, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0015edc9: add eax, ecx; call 0x13cee5; add ebx, 0x31bb4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015ed04: add eax, ecx; call 0x13cee5; add ebx, 0x31c79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d2da: add eax, ecx; call 0x13cee5; add ebx, 0x3359f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d25: add eax, ecx; call 0x13cee5; add ebx, 0x3c994; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151e99: add eax, ecx; call 0x13cee5; add ebx, 0x3e660; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151d94: add eax, ecx; call 0x13cee5; add ebx, 0x3e6a5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151b85: add eax, ecx; call 0x13cee5; add ebx, 0x3e8b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a55: add eax, ecx; call 0x13cee5; add ebx, 0x3f824; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fa48: add eax, ecx; call 0x13cee5; add ebx, 0x40671; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ea68: add eax, ecx; call 0x13cee5; add ebx, 0x41491; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb49: add eax, ecx; call 0x13cee5; add ebx, 0x431f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ca44: add eax, ecx; call 0x13cee5; add ebx, 0x43235; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c835: add eax, ecx; call 0x13cee5; add ebx, 0x43444; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ab39: add eax, ecx; call 0x13cee5; add ebx, 0x44f80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aa34: add eax, ecx; call 0x13cee5; add ebx, 0x44fc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a828: add eax, ecx; call 0x13cee5; add ebx, 0x451d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148b39: add eax, ecx; call 0x13cee5; add ebx, 0x46d00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148a34: add eax, ecx; call 0x13cee5; add ebx, 0x46d45; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148828: add eax, ecx; call 0x13cee5; add ebx, 0x46f51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e7cac: add eax, ecx; jmp eax; 
0x0006a370: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x00148044: add eax, ecx; pop ebx; ret; 
0x0009c646: add eax, ecx; pop edi; ret; 
0x0015eb10: add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0006e981: add eax, ecx; ret; 
0x00154b14: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015396e: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151854: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150844: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f874: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e69e: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c53e: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a59e: add eax, ecx; sfence; call 0x13cee5; add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00123716: add eax, ecx; sub ebx, 1; jne 0x1236a8; pop ebx; pop esi; ret; 
0x0009c644: add eax, edi; add eax, ecx; pop edi; ret; 
0x0011bd39: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xaf7b], cl; call dword ptr [eax + 0x6a]; 
0x00151c8d: add eax, edi; pop edi; call 0x13cee5; add ebx, 0x3e86b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c93d: add eax, edi; pop edi; call 0x13cee5; add ebx, 0x433fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a92d: add eax, edi; pop edi; call 0x13cee5; add ebx, 0x4518b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014892d: add eax, edi; pop edi; call 0x13cee5; add ebx, 0x46f0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009c6e7: add eax, edi; pop edi; ret; 
0x0009c8c6: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0009cfc4: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0008b6b6: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x0008b6c3: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x0008b6d0: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x0009d14d: add eax, edx; add eax, ecx; ret; 
0x00163ca6: add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0008b6ac: add eax, edx; pop edi; pop esi; ret; 
0x0009d2b3: add eax, edx; ret; 
0x000f7eea: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000c769b: add eax, esi; jmp eax; 
0x0010cf3c: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009c887: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0002ca9c: add ebp, 0x2c; cli; call dword ptr [eax + 0x56]; 
0x000b56d9: add ebp, 0x2c; cli; call dword ptr [eax + 0x57]; 
0x000f98dc: add ebp, 0x2c; cli; call dword ptr [eax - 0x73]; 
0x0008563e: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000b3937: add ebp, dword ptr [ecx]; ret 0x48d; 
0x00088d77: add ebp, dword ptr [ecx]; ret 0x5503; 
0x000dc34d: add ebp, dword ptr [ecx]; ret 0xda01; 
0x00087f89: add ebp, dword ptr [ecx]; ret 0xf201; 
0x00088eef: add ebp, dword ptr [ecx]; ret 0xfa01; 
0x0007c98d: add ebp, dword ptr [ecx]; ret; 
0x000cf8d3: add ebp, dword ptr [ecx]; rol dword ptr [ecx], cl; ret; 
0x0016b635: add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00138d14: add ebp, dword ptr [edi]; jbe 0x138c9d; in al, dx; add al, 0x83; ret; 
0x00077059: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f16d: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0013f067: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000ef48b: add ebp, eax; call edx; 
0x000f04db: add ebp, eax; das; ret; 
0x000f06ba: add ebp, eax; inc eax; mov ebp, 0xc483ffff; adc byte ptr [ebx - 0x16f7dbac], cl; ret; 
0x000ca3e0: add ebp, eax; mov edx, 0x8900021f; ret 0xc483; 
0x000b4227: add ebp, ebp; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x00126fcc: add ebp, ecx; sub edx, ecx; push edx; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00139d7d: add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016ba9d: add ebx, 0x2f; cli; call dword ptr [eax - 0x18]; 
0x0016ba9d: add ebx, 0x2f; cli; call dword ptr [eax - 0x18]; cwde; shr ebx, cl; jmp dword ptr [esi - 0x70]; 
0x0015edd0: add ebx, 0x31bb4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015ed0b: add ebx, 0x31c79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d3f0: add ebx, 0x33490; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d2e1: add ebx, 0x3359f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154d12: add ebx, 0x3baae; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154b1e: add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154039: add ebx, 0x3c687; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153f2f: add ebx, 0x3c791; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153e28: add ebx, 0x3c898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d2c: add ebx, 0x3c994; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153c0c: add ebx, 0x3c9f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d79: add ebx, 0x3ca07; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00153978: add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015335f: add ebx, 0x3d0e1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153341: add ebx, 0x3d0ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001532a8: add ebx, 0x3d198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001531e1: add ebx, 0x3d25f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153148: add ebx, 0x3d2f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153081: add ebx, 0x3d3bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152fe8: add ebx, 0x3d458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152f21: add ebx, 0x3d51f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152e88: add ebx, 0x3d5b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152dc1: add ebx, 0x3d67f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152d28: add ebx, 0x3d718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152c61: add ebx, 0x3d7df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152bc8: add ebx, 0x3d878; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152b01: add ebx, 0x3d93f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152a68: add ebx, 0x3d9d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001529a1: add ebx, 0x3da9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152908: add ebx, 0x3db38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152841: add ebx, 0x3dbff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001527a8: add ebx, 0x3dc98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001526e1: add ebx, 0x3dd5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152648: add ebx, 0x3ddf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152581: add ebx, 0x3debf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001524e8: add ebx, 0x3df58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152421: add ebx, 0x3e01f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152388: add ebx, 0x3e0b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001522c1: add ebx, 0x3e17f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152228: add ebx, 0x3e218; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152161: add ebx, 0x3e2df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001520c8: add ebx, 0x3e378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152001: add ebx, 0x3e43f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151f68: add ebx, 0x3e4d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151ea0: add ebx, 0x3e660; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151d9b: add ebx, 0x3e6a5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151c95: add ebx, 0x3e86b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151b8c: add ebx, 0x3e8b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151a62: add ebx, 0x3e91e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151bd6: add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0015185e: add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150d69: add ebx, 0x3f517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150c5f: add ebx, 0x3f621; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150b58: add ebx, 0x3f728; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a5c: add ebx, 0x3f824; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015084e: add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150aa9: add ebx, 0x3f897; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fd69: add ebx, 0x40357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fc5f: add ebx, 0x40461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fb58: add ebx, 0x40568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fa4f: add ebx, 0x40671; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f87e: add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014faa9: add ebx, 0x406d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fa5f: add ebx, 0x40761; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ed89: add ebx, 0x41177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ec7f: add ebx, 0x41281; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eb78: add ebx, 0x41388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ea6f: add ebx, 0x41491; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e95c: add ebx, 0x414e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eac9: add ebx, 0x414f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014ea7f: add ebx, 0x41581; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e6a8: add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e00f: add ebx, 0x41c71; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dff1: add ebx, 0x41c8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014df58: add ebx, 0x41d28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014de91: add ebx, 0x41def; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ddf8: add ebx, 0x41e88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dd31: add ebx, 0x41f4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dc98: add ebx, 0x41fe8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dbd1: add ebx, 0x420af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014db38: add ebx, 0x42148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014da71: add ebx, 0x4220f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d9d8: add ebx, 0x422a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d911: add ebx, 0x4236f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d878: add ebx, 0x42408; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d7b1: add ebx, 0x424cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d718: add ebx, 0x42568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d651: add ebx, 0x4262f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d5b8: add ebx, 0x426c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d4f1: add ebx, 0x4278f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d458: add ebx, 0x42828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d391: add ebx, 0x428ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d2f8: add ebx, 0x42988; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d231: add ebx, 0x42a4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d198: add ebx, 0x42ae8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d0d1: add ebx, 0x42baf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d038: add ebx, 0x42c48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cf71: add ebx, 0x42d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ced8: add ebx, 0x42da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ce11: add ebx, 0x42e6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cd78: add ebx, 0x42f08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ccb1: add ebx, 0x42fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cc18: add ebx, 0x43068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb50: add ebx, 0x431f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ca4b: add ebx, 0x43235; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c945: add ebx, 0x433fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c83c: add ebx, 0x43444; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c548: add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c886: add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014bf0f: add ebx, 0x43af1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bef1: add ebx, 0x43b0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014be58: add ebx, 0x43ba8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bda1: add ebx, 0x43c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd08: add ebx, 0x43cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bc51: add ebx, 0x43daf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bbb8: add ebx, 0x43e48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bb01: add ebx, 0x43eff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ba68: add ebx, 0x43f98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b9b1: add ebx, 0x4404f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b918: add ebx, 0x440e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b861: add ebx, 0x4419f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b7c8: add ebx, 0x44238; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b711: add ebx, 0x442ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b678: add ebx, 0x44388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b5c1: add ebx, 0x4443f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b528: add ebx, 0x444d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b471: add ebx, 0x4458f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b3d8: add ebx, 0x44628; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b321: add ebx, 0x446df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b288: add ebx, 0x44778; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b1d1: add ebx, 0x4482f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b138: add ebx, 0x448c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b081: add ebx, 0x4497f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014afe8: add ebx, 0x44a18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014af31: add ebx, 0x44acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ae98: add ebx, 0x44b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ade1: add ebx, 0x44c1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ad48: add ebx, 0x44cb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ac91: add ebx, 0x44d6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014abf8: add ebx, 0x44e08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ab40: add ebx, 0x44f80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aa3b: add ebx, 0x44fc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a935: add ebx, 0x4518b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a82f: add ebx, 0x451d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a5a8: add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a894: add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014a845: add ebx, 0x4537b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149f0f: add ebx, 0x45871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149ef1: add ebx, 0x4588f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149e58: add ebx, 0x45928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149da1: add ebx, 0x459df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d08: add ebx, 0x45a78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149c51: add ebx, 0x45b2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149bb8: add ebx, 0x45bc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149b01: add ebx, 0x45c7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149a68: add ebx, 0x45d18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001499b1: add ebx, 0x45dcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149918: add ebx, 0x45e68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149861: add ebx, 0x45f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001497c8: add ebx, 0x45fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149711: add ebx, 0x4606f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149678: add ebx, 0x46108; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001495c1: add ebx, 0x461bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149528: add ebx, 0x46258; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149471: add ebx, 0x4630f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001493d8: add ebx, 0x463a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149321: add ebx, 0x4645f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149288: add ebx, 0x464f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001491d1: add ebx, 0x465af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149138: add ebx, 0x46648; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149081: add ebx, 0x466ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148fe8: add ebx, 0x46798; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148f31: add ebx, 0x4684f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148e98: add ebx, 0x468e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148de1: add ebx, 0x4699f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148d48: add ebx, 0x46a38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148c91: add ebx, 0x46aef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148bf8: add ebx, 0x46b88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148b40: add ebx, 0x46d00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148a3b: add ebx, 0x46d45; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148935: add ebx, 0x46f0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014882f: add ebx, 0x46f51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148894: add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00148845: add ebx, 0x470fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00146efd: add ebx, 0x48683; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146e4d: add ebx, 0x48733; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146d89: add ebx, 0x48777; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001469ad: add ebx, 0x48953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001468fd: add ebx, 0x48a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146815: add ebx, 0x48a6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146453: add ebx, 0x48c2d; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146397: add ebx, 0x48ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0014633b: add ebx, 0x48d45; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0014627d: add ebx, 0x48e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146195: add ebx, 0x48e6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145e23: add ebx, 0x48fdd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145d67: add ebx, 0x49099; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145d0b: add ebx, 0x490f5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145c4d: add ebx, 0x491b3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145b89: add ebx, 0x491f7; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000ff3fc: add ebx, 0xe4c05; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0007b25b: add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0008b0e0: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x0009d89d: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x00145b8f: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00148835: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014889a: add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00034c4c: add ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00095019: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0014ef40: add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0009e1f5: add ebx, dword ptr [esi + 0x5f]; ret; 
0x000ff3f0: add ebx, eax; mov ebp, esi; call ebx; 
0x0008555a: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x0008aab1: add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000b7246: add ebx, ecx; jmp ebx; 
0x00051dbb: add ebx, edi; jmp ebx; 
0x000e96b2: add ebx, esi; jmp ebx; 
0x000910b3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091363: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0008ccf3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x0008cf83: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000e1d2a: add ecx, -0x6e; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000ea8af: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0007bdb5: add ecx, 0x16824b; mov ecx, dword ptr [ecx + 0x1dfc]; test ecx, ecx; jne 0x7bdd0; ret; 
0x0007b725: add ecx, 0x1688db; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x7b740; ret; 
0x00138e64: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000c8763: add ecx, 0x48; cli; call dword ptr [eax - 0x73]; 
0x000e7cbf: add ecx, 0x4a; cli; call dword ptr [eax - 0x18]; 
0x000ea51c: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010f68c: add ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x00146ef2: add ecx, 0x80; call 0x13cee5; add ebx, 0x48683; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000438f2: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0009c581: add ecx, 0xe5e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c076: add ecx, 0xe639e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c051: add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c031: add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c014: add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf75: add ecx, 0xe641f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfe7: add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf57: add ecx, 0xe643d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfd0: add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfb5: add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf32: add ecx, 0xe6462; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bf93: add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf08: add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009beef: add ecx, 0xe64a5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bece: add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009beaa: add ecx, 0xe64ea; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009be8c: add ecx, 0xe6508; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009be09: add ecx, 0xe658b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c57: add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c32: add ecx, 0xe96e2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c08: add ecx, 0xe970c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bef: add ecx, 0xe9725; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bce: add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098baa: add ecx, 0xe976a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b8c: add ecx, 0xe9788; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b70: add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096ce1: add ecx, 0xeb55f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bfc: add ecx, 0xeb6d4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096be9: add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bcd: add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960d6: add ecx, 0xec16a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960b1: add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096091: add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096074: add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fd5: add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096047: add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096030: add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096015: add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095ff3: add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095f01: add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095ee1: add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095ebc: add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000955e1: add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954fc: add ecx, 0xecc74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954e9: add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954cd: add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a96: add ecx, 0xed64a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a71: add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a51: add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a34: add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094995: add ecx, 0xed6cb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094a07: add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949f0: add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949d5: add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949b3: add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948d1: add ecx, 0xed78f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948b1: add ecx, 0xed7af; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009488c: add ecx, 0xed7d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012efab: add ecx, 4; mov esi, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [esi + 8]; 
0x000966e9: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x0009e1f2: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000dbf90: add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000afe75: add ecx, dword ptr [ebp - 0x5546b80]; call dword ptr [eax + 0x56]; 
0x000af436: add ecx, dword ptr [ebp - 0x5547b80]; call dword ptr [eax + 0x56]; 
0x0008eb50: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0012e167: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000b3abb: add ecx, dword ptr [ebx + 0x39102444]; lds esi, ptr [eax + edi*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0009c13c: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00098ce9: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x0009de73: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x00032785: add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0011c7a5: add ecx, dword ptr [ebx - 0x834b]; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0002c0f7: add ecx, dword ptr [ecx + 0x1182474]; ret 0x6c89; 
0x0009c137: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ce4: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095014: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x00091136: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x00091266: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0004a8aa: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x0008efa9: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0x8ee51; pop ebx; ret; 
0x000f9443: add ecx, dword ptr [ecx + 0x8890441]; mov dword ptr [eax + 4], edx; ret; 
0x00123693: add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x000bc9db: add ecx, dword ptr [ecx + eax*4 - 0x60bac]; jmp ecx; 
0x000949b9: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094892: add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008ce86: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000f946c: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0xf9476; mov dword ptr [eax], edx; ret; 
0x0003da79: add ecx, dword ptr [ecx - 0x76cfdbbc]; ret 0xe283; 
0x0003aa6c: add ecx, dword ptr [ecx - 0x76d3dbbc]; ret 0xc483; 
0x0003ab19: add ecx, dword ptr [ecx - 0x76e3dbbc]; ret 0xe283; 
0x00131b9a: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x00131c2a: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x0009b4f9: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x0008cd56: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x00096269: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0013a7e9: add ecx, dword ptr [ecx]; ret 0x8966; 
0x0001ec66: add ecx, dword ptr [edi]; dec eax; ret; 
0x000bb9d3: add ecx, dword ptr [edi]; dec ebp; ret; 
0x0001ea89: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x00096151: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00055bf8: add ecx, dword ptr [edi]; test dword ptr [ecx], edx; ret 0xffff; 
0x0008eb53: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000ad369: add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000ad3a5: add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x0001ab3b: add ecx, dword ptr [edi]; xchg esp, eax; ret 0xca21; 
0x000f197b: add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0007b6be: add ecx, eax; call 0x1c839c9; mov dword ptr [edx + 0x150], eax; ret; 
0x000eb432: add ecx, eax; cmp ebx, edx; ja 0xeb428; mov eax, ecx; pop ebx; ret; 
0x0012670f: add ecx, eax; cmp ecx, dword ptr [edx + 0x14]; ja 0x126700; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x0002f570: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002fb69: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f8e1: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0004d309: add ecx, eax; mov eax, ecx; ret; 
0x0007435b: add ecx, ebp; call dword ptr [eax - 1]; 
0x00060a74: add ecx, ebp; jmp ecx; 
0x00022e0d: add ecx, ebp; ret; 
0x0002df8b: add ecx, ebx; jmp ecx; 
0x000fb5c4: add ecx, ebx; ret 0xcad8; 
0x0005242c: add ecx, edi; jmp ecx; 
0x000b356b: add ecx, edx; call ecx; 
0x000c7b20: add ecx, edx; jmp ecx; 
0x001683a4: add ecx, edx; ljmp 0x8c89:0xd309f109; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x00083627: add ecx, edx; test eax, eax; jne 0x83620; mov eax, ecx; ret; 
0x000ba84f: add ecx, esi; jmp ecx; 
0x00096be1: add edi, 0x10; call 0x13cef9; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bc5: add edi, 0x10; call 0x13cef9; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954e1: add edi, 0x10; call 0x13cef9; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954c5: add edi, 0x10; call 0x13cef9; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c5bbf: add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x00076bb5: add edi, ebp; jmp edi; 
0x000ffc5e: add edi, ebp; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00068530: add edi, ebx; jmp edi; 
0x0014f329: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f3b9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f449: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f4d9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f569: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f5f9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ee19: add edi, ecx; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eea9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ef39: add edi, ecx; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014efc9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f059: add edi, ecx; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f0e9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f179: add edi, ecx; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f209: add edi, ecx; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f299: add edi, ecx; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009606b: add edi, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a2b: add edi, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ccd6b: add edi, ecx; jmp edi; 
0x00028e0f: add edi, edi; call dword ptr [eax - 0x73]; 
0x00028dfd: add edi, edi; call dword ptr [edx + 0x52]; 
0x0014cd75: add edi, edi; inc dword ptr [ecx + 0x42f08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014cb4d: add edi, edi; inc dword ptr [ecx + 0x431f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00124cac: add edi, edi; jae 0x124cb8; push esi; call dword ptr [ebx + 0xc]; 
0x000ef975: add edi, edi; je 0xef99d; xor bh, bh; jne 0xef989; call dword ptr [ebp + 0x24]; 
0x000f09f5: add edi, edi; je 0xf0a1d; xor bh, bh; jne 0xf0a09; call dword ptr [ebp + 0x24]; 
0x000838eb: add edi, edi; jmp dword ptr [esi - 0x70]; 
0x000dedc1: add edi, edx; call dword ptr [ecx + 0x6a]; 
0x00088a72: add edi, edx; dec dword ptr [ebp - 0x5741f70]; call dword ptr [edx - 0x73]; 
0x00088a91: add edi, edx; jmp dword ptr [esi - 0x70]; 
0x0010765d: add edi, esi; aad 0xc6; inc eax; jmp dword ptr [eax]; 
0x000e086c: add edi, esi; jmp edi; 
0x0003160d: add edi, esi; ret 0; 
0x0002d502: add edi, esi; rol byte ptr [ecx], 1; ret; 
0x00161e5e: add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x0007b6d5: add edx, 0x16892b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x0007b695: add edx, 0x16896b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x7b6b0; ret; 
0x0007b565: add edx, 0x168a9b; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x7b580; ret; 
0x000b6c5d: add edx, 0x16d; mov eax, edx; ret; 
0x00079a05: add edx, 0x30; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x0011381e: add edx, 0x5a; cli; call dword ptr [eax - 0x18]; 
0x00162030: add edx, 0xa; jl 0x162080; lea eax, [ecx + 0xa]; ret; 
0x00162040: add edx, 0xb; jl 0x162080; lea eax, [ecx + 0xb]; ret; 
0x00161fab: add edx, 0xc; jl 0x162080; lea eax, [ecx + 0xc]; ret; 
0x00162050: add edx, 0xd; jl 0x162080; lea eax, [ecx + 0xd]; ret; 
0x00162060: add edx, 0xe; jl 0x162080; lea eax, [ecx + 0xe]; ret; 
0x000f6715: add edx, 0xed8eb; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00162070: add edx, 0xf; jl 0x162080; lea eax, [ecx + 0xf]; ret; 
0x00161fc0: add edx, 1; jl 0x162080; lea eax, [ecx + 1]; ret; 
0x0011cc71: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000cc7ed: add edx, 1; test al, al; jne 0xcc7be; xor eax, eax; pop ebx; ret; 
0x00161fd0: add edx, 2; jl 0x162080; lea eax, [ecx + 2]; ret; 
0x00161fe0: add edx, 3; jl 0x162080; lea eax, [ecx + 3]; ret; 
0x00161f48: add edx, 4; jl 0x162080; lea eax, [ecx + 4]; ret; 
0x00161ff0: add edx, 5; jl 0x162080; lea eax, [ecx + 5]; ret; 
0x00162000: add edx, 6; jl 0x162080; lea eax, [ecx + 6]; ret; 
0x00162010: add edx, 7; jl 0x162080; lea eax, [ecx + 7]; ret; 
0x0011b1a1: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00161f81: add edx, 8; jl 0x162080; lea eax, [ecx + 8]; ret; 
0x00162020: add edx, 9; jl 0x162080; lea eax, [ecx + 9]; ret; 
0x000b4221: add edx, dword ptr [eax + 4]; lea eax, [ebx - 0x12fed0]; cmovne eax, edx; add esp, 0x38; pop ebx; ret; 
0x000b4101: add edx, dword ptr [eax + 4]; lea eax, [ebx - 0x12ffe0]; cmovne eax, edx; add esp, 0x38; pop ebx; ret; 
0x00076a48: add edx, dword ptr [eax + eax - 0x78730000]; mov al, byte ptr [0x29ffffe2]; ret 0xf189; 
0x000bfa23: add edx, dword ptr [eax]; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013d24f: add edx, dword ptr [ebp - 0x18]; or al, byte ptr [ebx + edi*8]; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x0012c881: add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x0010133e: add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x0009cec6: add edx, eax; jl 0x9cf00; add eax, ecx; ret; 
0x0009ced6: add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x10]; ret; 
0x0009cee6: add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x20]; ret; 
0x0009cef6: add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x30]; ret; 
0x001268d1: add edx, eax; pop ebx; pop esi; mov eax, edx; ret; 
0x00051416: add edx, ebp; jmp edx; 
0x0002dd1f: add edx, ebx; jmp edx; 
0x0015edc7: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x31bb4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015ed02: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x31c79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d2d8: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x3359f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d23: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x3c994; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151e97: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x3e660; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151d92: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x3e6a5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151b83: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x3e8b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a53: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x3f824; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fa46: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x40671; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ea66: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x41491; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb47: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x431f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ca42: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x43235; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c833: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x43444; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ab37: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x44f80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aa32: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x44fc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a826: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x451d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148b37: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x46d00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148a32: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x46d45; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148826: add edx, ecx; add eax, ecx; call 0x13cee5; add ebx, 0x46f51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009d8a0: add edx, ecx; add esi, ecx; jmp ebx; 
0x00145b92: add edx, ecx; jmp ebx; 
0x0001b71e: add edx, ecx; jmp edx; 
0x000a3f3f: add edx, edi; call dword ptr [ebx - 1]; 
0x000db6a7: add edx, edi; inc dword ptr [ecx]; int1; jmp ecx; 
0x000524ae: add edx, edi; jmp edx; 
0x0014f32b: add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f3bb: add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f44b: add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f4db: add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f56b: add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f5fb: add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ee1b: add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eeab: add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ef3b: add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014efcb: add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f05b: add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f0eb: add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f17b: add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f20b: add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f29b: add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00115ced: add edx, esi; jmp dword ptr [esi - 0x77]; 
0x0001acde: add edx, esi; jmp edx; 
0x0009bf27: add esi, 0x10; add eax, 0x10; call 0x13cef9; add ecx, 0xe6462; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bf4c: add esi, 0x20; add eax, 0x20; call 0x13cef9; add ecx, 0xe643d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c4c: add esi, 0x20; add eax, 0x20; call 0x13cef9; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bdfe: add esi, 0x30; add eax, 0x30; call 0x13cef9; add ecx, 0xe658b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b65: add esi, 0x30; add eax, 0x30; call 0x13cef9; add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002a663: add esi, 0x40; mov eax, dword ptr [edi + 0x1a5c]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011ebe6: add esi, 0x5e; cli; call dword ptr [eax - 0x18]; 
0x0012b593: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00124d7e: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0013a15d: add esi, dword ptr [ecx]; fucomi st(3); ret; 
0x0007b791: add esi, dword ptr [ecx]; ret 0x2b8; 
0x00096bcf: add esi, dword ptr [edi + 0xc03000e]; cdq; jmp ecx; 
0x0009e6b5: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x0002e56a: add esi, dword ptr [edx]; cli; call dword ptr [eax + 0x53]; 
0x00125dbf: add esi, dword ptr [esi + 0xe]; mov eax, 2; pop ebx; pop esi; ret; 
0x00119088: add esi, dword ptr [esi + edi*2 - 0x7d]; ret 0x8303; 
0x00025509: add esi, dword ptr [esp + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00041b8a: add esi, eax; inc ecx; jmp dword ptr [eax]; 
0x000423c2: add esi, eax; inc esi; jmp dword ptr [eax]; 
0x000322b4: add esi, eax; push esi; call edi; 
0x000ffca7: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0016631f: add esi, ebx; jmp esi; 
0x0009d5dd: add esi, ebx; stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00095eb2: add esi, ecx; bsf edx, edx; call 0x13cef9; add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009c04a: add esi, ecx; call 0x13cef9; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c02a: add esi, ecx; call 0x13cef9; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c00d: add esi, ecx; call 0x13cef9; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960aa: add esi, ecx; call 0x13cef9; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009608a: add esi, ecx; call 0x13cef9; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009606d: add esi, ecx; call 0x13cef9; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a6a: add esi, ecx; call 0x13cef9; add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a4a: add esi, ecx; call 0x13cef9; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a2d: add esi, ecx; call 0x13cef9; add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009d8a2: add esi, ecx; jmp ebx; 
0x000b0297: add esi, edi; loope 0xb029c; fimul dword ptr [ebx - 0x364763]; call dword ptr [edx + 0x50]; 
0x0011a471: add esi, edx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0011a43f: add esi, edx; pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x00126eac: add esi, edx; sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000e08f1: add esi, esi; ret 0x7402; 
0x000e30a3: add esi, esi; ret 0xf01; 
0x000daba9: add esi, esi; ret; 
0x0009e365: add esp, 0x100; sub eax, edx; ret; 
0x000508d2: add esp, 0x1018; pop ebx; ret; 
0x0010cf39: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000807f2: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x00035059: add esp, 0x10; add esp, 0xc; ret; 
0x00126194: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00081e7e: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0001bf22: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x001238ec: add esp, 0x10; add esp, 8; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x000f8ae0: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0001dc6c: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0007b3b4: add esp, 0x10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012ab0c: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00132e1b: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00058972: add esp, 0x10; cmp ebx, 0x53; ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000e88bb: add esp, 0x10; cmp ecx, 0x2f; ja 0xe800c; mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x0011affa: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0011f5c2: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f8662: add esp, 0x10; mov dword ptr [ebx + 0x2380], 0; add esp, 8; pop ebx; ret; 
0x0010c6a0: add esp, 0x10; mov dword ptr [ebx + 0x2940], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000bee3e: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000f84bc: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0006a39f: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0007e413: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x7e41e; call eax; 
0x000fcf6c: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0b0: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0xfd1a0; call eax; 
0x00107be5: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00131674: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x0012f76d: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7dd: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f84d: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b0: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f910: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f97d: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012f9fd: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x000c1998: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00034d60: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db3: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x000352e5: add esp, 0x10; mov eax, ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00031202: add esp, 0x10; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0011b516: add esp, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x000821a9: add esp, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c1afe: add esp, 0x10; mov eax, edi; call eax; 
0x00083c97: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret 4; 
0x00069a33: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0010180b: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0006b573: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x000bfb76: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010e8d7: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e947: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x00115788: add esp, 0x10; mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x0012f6fd: add esp, 0x10; mov ecx, dword ptr [esp + 0x3c]; sub ecx, dword ptr gs:[0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x00034e00: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e53: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea0: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef3: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000b31c0: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000f81b1: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000f9932: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003436e: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x0003448e: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x0013f8eb: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x000bc704: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee04: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000ec114: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x0001b453: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x0004f230: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024fe0: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00117259: add esp, 0x10; push dword ptr [esp + 0xc]; push 0x400; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x0012fbd8: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0012efb6: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0012e997: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00125ae5: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0010dbcc: add esp, 0x10; test eax, eax; je 0x10dbe0; add esp, 8; pop ebx; ret; 
0x00116918: add esp, 0x10; test eax, eax; je 0x116928; sub esp, 0xc; push esi; call eax; 
0x00116c00: add esp, 0x10; test eax, eax; je 0x116c10; sub esp, 0xc; push esi; call eax; 
0x0012625f: add esp, 0x10; test eax, eax; je 0x12636b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000c5b50: add esp, 0x10; test eax, eax; jne 0xc5b60; add esp, 8; pop ebx; ret; 
0x000f8714: add esp, 0x10; test eax, eax; jne 0xf86d8; add esp, 0xc; ret; 
0x00122ddb: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x00083510: add esp, 0x10; test ebp, ebp; jne 0x83463; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0013d03b: add esp, 0x10; test ebx, ebx; jne 0x13d050; add esp, 8; pop ebx; ret; 
0x0013d07b: add esp, 0x10; test ebx, ebx; jne 0x13d090; add esp, 8; pop ebx; ret; 
0x0002e94b: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000e1dce: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0012ea40: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00031324: add esp, 0x114; pop ebx; pop edi; ret; 
0x00030d26: add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x0009f40d: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000352a0: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013189b: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00083d74: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0008257e: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00074994: add esp, 0x14; movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x0001b4fe: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00025c84: add esp, 0x14; pop ebx; pop esi; ret; 
0x001248e0: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00045402: add esp, 0x14; ret; 
0x00073be4: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0006daa2: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000324ba: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ec494: add esp, 0x170; pop ebx; pop esi; pop edi; ret; 
0x00034f5e: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x000f63d6: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00049c84: add esp, 0x18; mov eax, edx; pop ebx; ret 4; 
0x000f5773: add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x00131773: add esp, 0x18; pop ebx; jmp eax; 
0x00085c27: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f5d6: add esp, 0x18; pop ebx; ret; 
0x000b6e26: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00137b59: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000f77c7: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x00050eba: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00127ee5: add esp, 0x1c; movzx eax, al; ret; 
0x00132dd5: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0006b853: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0001bcef: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fd1c: add esp, 0x1c; ret 4; 
0x0001b030: add esp, 0x1c; ret; 
0x0014335e: add esp, 0x1c; sar eax, 0x1f; ret; 
0x000ccd66: add esp, 0x1fff9fa; iretd; jmp edi; 
0x00117623: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00100970: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000bf1cb: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000507b6: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000fbc1b: add esp, 0x20; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x000ec16b: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x0001b63f: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016b5d2: add esp, 0x20; ret; 
0x001008cf: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c6a14: add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x000b451d: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007e435: add esp, 0x24; pop ebx; pop esi; ret; 
0x0001b5a5: add esp, 0x24; ret; 
0x0006d9c5: add esp, 0x24c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000cd288: add esp, 0x289c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00045a48: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000fb120: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000c218f: add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0013fcb8: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x000316d4: add esp, 0x28; pop ebx; ret; 
0x000ff669: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000df208: add esp, 0x2c; movzx eax, al; ret; 
0x0001b73d: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00029a3a: add esp, 0x2c; ret; 
0x000b3fee: add esp, 0x30; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00070f82: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001398a9: add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x001398de: add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x00034256: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000bf60c: add esp, 0x34; pop ebx; pop esi; ret; 
0x000e635c: add esp, 0x36c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b4240: add esp, 0x38; lea eax, [ebx - 0x12fed0]; pop ebx; ret; 
0x000b4120: add esp, 0x38; lea eax, [ebx - 0x12ffe0]; pop ebx; ret; 
0x000b321b: add esp, 0x38; pop ebx; ret; 
0x0016b4d4: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001a88b: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f8150: add esp, 0x3c; ret; 
0x0002f491: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0002f427: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000fce27: add esp, 0x418; pop ebx; ret; 
0x0004a0f9: add esp, 0x434; pop ebx; pop esi; ret; 
0x00085ee9: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b327b: add esp, 0x48; pop ebx; ret; 
0x000f7cce: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000817ad: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00032a50: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ef145: add esp, 0x4c; ret; 
0x000659fc: add esp, 0x4dc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ec968: add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x00136ec0: add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fd866: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f65be: add esp, 0x54; pop ebx; pop esi; ret; 
0x0012fc0d: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001e176: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0001f82c: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00120105: add esp, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x0001f3fb: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0001b0d6: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fabf9: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0011ff5e: add esp, 0x70; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000c0175: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012e432: add esp, 0x74; pop ebx; pop edi; ret; 
0x000ec1ed: add esp, 0x74; pop ebx; pop esi; ret; 
0x000c7ecf: add esp, 0x78; pop ebx; ret; 
0x0002015e: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0001fd09: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001013b5: add esp, 0x7c; ret; 
0x00067c90: add esp, 0x816c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000cec58: add esp, 0x89c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b43f0: add esp, 0x90; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000310f9: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0003141c: add esp, 0x94; pop ebx; pop edi; ret; 
0x0003152e: add esp, 0x98; pop ebx; ret; 
0x0012fdeb: add esp, 0x98; pop edi; ret; 
0x001646fd: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000312a4: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012e1c8: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00166388: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000317fa: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001680ea: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000502ce: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00126251: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0001b8a8: add esp, 0xc; movzx eax, al; neg eax; ret; 
0x000410e0: add esp, 0xc; movzx eax, al; ret; 
0x0011f4b8: add esp, 0xc; movzx eax, ax; ret; 
0x0006e1ad: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00083d19: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00033bea: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001240e1: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0010a0cd: add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x001089d5: add esp, 0xc; push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x00108c23: add esp, 0xc; push eax; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8fa: add esp, 0xc; push eax; push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x0001b8ca: add esp, 0xc; ret; 
0x00051346: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c7264: add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x000ee7d3: add esp, 0xd4; pop ebx; pop esi; ret; 
0x0013a135: add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x000b56a4: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000db1b0: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d1822: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x001268ce: add esp, 4; add edx, eax; pop ebx; pop esi; mov eax, edx; ret; 
0x0004509b: add esp, 4; jmp eax; 
0x000fd9a8: add esp, 4; lea eax, [ebx - 0x5b487]; pop ebx; pop esi; ret; 
0x00123f30: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00081d12: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0006e140: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000f14e8: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00126003: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x000311cd: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001166ed: add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x0007ad2d: add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x0006b553: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0011b6c0: add esp, 4; mov ecx, 0x7fffffff; mov eax, ecx; pop ebx; pop esi; ret; 
0x0006d5ad: add esp, 4; mov ecx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x00127317: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x0015c9d9: add esp, 4; pop ebp; pop ebx; ret; 
0x00070612: add esp, 4; pop ebx; pop esi; jmp eax; 
0x0002e8e5: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001be88: add esp, 4; pop ebx; pop esi; ret; 
0x0015a149: add esp, 4; pop ebx; ret; 
0x0002fa7a: add esp, 4; ret; 
0x0007b3f2: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00033675: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0011b6b0: add esp, 4; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x001238ef: add esp, 8; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x0010e66d: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x000f851b: add esp, 8; mov eax, 1; pop ebx; ret; 
0x000f7eee: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000bfa25: add esp, 8; mov eax, edx; pop ebx; ret; 
0x000770cc: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00126116: add esp, 8; movzx eax, al; pop ebx; ret; 
0x000ea78e: add esp, 8; or eax, edx; pop ebx; ret; 
0x0008aee6: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001dc6f: add esp, 8; pop ebx; ret; 
0x0002f875: add esp, 8; ret; 
0x00030a53: add esp, 8; xor eax, eax; pop ebx; ret; 
0x000debf1: add esp, dword ptr [eax]; add bh, dl; call dword ptr [eax - 0x73]; 
0x0006bd30: add esp, ebx; cli; jmp dword ptr [esi - 0x70]; 
0x000e8d2b: add esp, esi; jmp dword ptr [esi - 0x70]; 
0x001023c2: add word ptr [edx + eax*2], 1; ret; 
0x0010c1dd: addps xmm7, xmm2; call dword ptr [ebx + 0x50]; 
0x0007a7c5: and ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000c1f31: and ah, 0x90; cli; call dword ptr [eax - 0x18]; 
0x000602ca: and ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x000c6ee6: and al, 0; add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000fa27b: and al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006e4ae: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a98bb: and al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x16dfdbbc], cl; ret 0xfff5; 
0x000a2702: and al, 0; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xeb89; 
0x000f7ab1: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7ab1: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000fa269: and al, 0; add byte ptr [ebx + 0x77f01f8], al; pop ebx; pop esi; ret; 
0x000f9d25: and al, 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0005a55b: and al, 0; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x000fa81b: and al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa258: and al, 0; add byte ptr [ecx], al; ret; 
0x00028109: and al, 0x10; add byte ptr [eax], al; ret; 
0x00109ba4: and al, 0x10; add dword ptr [eax], eax; add al, ch; push edx; sahf; bnd jmp dword ptr [esi - 0x70]; 
0x00148042: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00126001: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00123f1e: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0010e09a: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00030662: and al, 0x10; and eax, 0x80000000; ret; 
0x00102d39: and al, 0x10; call 0x102240; pop edx; pop ecx; pop eax; ret; 
0x0006d192: and al, 0x10; call dword ptr [eax + 0x1c]; 
0x000f6301: and al, 0x10; call dword ptr gs:[0x10]; 
0x00081109: and al, 0x10; call eax; 
0x000f6562: and al, 0x10; cmp al, 1; ret 0x1389; 
0x0010eb85: and al, 0x10; cmp eax, 0x3ff; ja 0x10eb95; sar eax, 5; add esp, 0xc; ret; 
0x0002f583: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002f502: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002f578: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001324d8: and al, 0x10; lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00131ad8: and al, 0x10; lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x000f9197: and al, 0x10; lea edx, [esp + 0xc]; mov eax, 0x140; mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x000f9267: and al, 0x10; lea edx, [esp + 0xc]; xor ecx, ecx; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00145ab2: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00081ca8: and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x0013ccd8: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0013cb84: and al, 0x10; mov dword ptr [ebx + 0x3764], eax; pop ebx; pop esi; pop edi; jmp eax; 
0x000b344b: and al, 0x10; mov dword ptr [esp + 0x68], edi; push ecx; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x000faf55: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58c4: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f5800: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ee8e5: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef195: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003b5: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00100145: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00100035: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00100185: and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00100225: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd25: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb5: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb85: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0007060d: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001026e7: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x1025c0; add esp, 4; ret; 
0x001324dc: and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00131adc: and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00101087: and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100938: and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010158e: and al, 0x10; mov ebx, 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0008afb6: and al, 0x10; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b076: and al, 0x10; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x000ec3a8: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ef25c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0010031c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe0c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010025c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d6c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbbc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc1c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaec: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d9c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffdc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000ff5ae: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e1dfc: and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ffb56: and al, 0x10; mov ecx, dword ptr [esp + 0x14]; test edx, edx; je 0xffb90; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x001004a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100063: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6813: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef223: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6653: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff253: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100103: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae13: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff33: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff63: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee873: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6963: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6993: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee843: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf13: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb13: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000857d2: and al, 0x10; mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x0006ffa8: and al, 0x10; mov edi, dword ptr [esp + 0x1c]; push edi; call dword ptr [ebx + 0x40]; 
0x000ffbdc: and al, 0x10; mov edx, dword ptr [esp + 0x14]; cmp esi, -1; je 0xffc00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00050f69: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00145581: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101671: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000f6ed3: and al, 0x10; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b3: and al, 0x10; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f473e: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000f59a2: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f632f: and al, 0x10; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f5924: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f5860: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0006e6c2: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0006e562: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000756ec: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0013cb36: and al, 0x10; pop ebx; pop esi; pop edi; jmp eax; 
0x0008713b: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00032807: and al, 0x10; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001270fd: and al, 0x10; push dword ptr [esp + 0x10]; call eax; 
0x0006ffa4: and al, 0x10; push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x1c]; push edi; call dword ptr [ebx + 0x40]; 
0x001270f9: and al, 0x10; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; call eax; 
0x0013e7e2: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00075b86: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00082ebb: and al, 0x10; push dword ptr [esp + 8]; push ebp; call eax; 
0x000327a5: and al, 0x10; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012e1a6: and al, 0x10; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00069b34: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00131738: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00040f6a: and al, 0x10; push edx; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013220e: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0012b50a: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131928: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318c5: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x001324b0: and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00131bc0: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00131ab0: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0011b8b0: and al, 0x10; push edx; push edi; call eax; 
0x0011b978: and al, 0x10; push edx; push esi; call eax; 
0x000c21bb: and al, 0x10; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001fd62: and al, 0x10; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x001240ec: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x0013e7e6: and al, 0x10; push esi; call dword ptr [ebx + 0x40]; 
0x00075b8a: and al, 0x10; push esi; call dword ptr [edx + 0x40]; 
0x000b462f: and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x0003262a: and al, 0x10; sub esp, 4; push ebp; push dword ptr [esp + 0x34]; push esi; call edi; 
0x000fd21b: and al, 0x10; test eax, eax; jne 0xfd240; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000f92cb: and al, 0x10; test ecx, ecx; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000e1da2: and al, 0x10; test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x000bfa20: and al, 0x10; xor al, 3; adc byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000a1ab0: and al, 0x13; add byte ptr [ebx + ecx*2 - 0x7d], dh; ret; 
0x000a18bc: and al, 0x13; add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x00029a04: and al, 0x14; call 0x29480; mov edx, dword ptr [esp + 0x14]; mov eax, edx; add esp, 0xc; ret; 
0x000fab5e: and al, 0x14; call dword ptr gs:[0x10]; 
0x0007db59: and al, 0x14; call eax; 
0x000bf31d: and al, 0x14; cmp eax, 0x3b9ac9ff; ja 0xbf3a8; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008afba: and al, 0x14; cmp ecx, 8; ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b07a: and al, 0x14; cmp ecx, 8; ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x000ffbe0: and al, 0x14; cmp esi, -1; je 0xffc00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000b32b9: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000bf279: and al, 0x14; lea ecx, [esp + 0x14]; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000bf37d: and al, 0x14; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0013cb32: and al, 0x14; mov dword ptr [esp + 0x10], esi; pop ebx; pop esi; pop edi; jmp eax; 
0x001014bc: and al, 0x14; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000bf27d: and al, 0x14; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000ffe4a: and al, 0x14; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000f6d4f: and al, 0x14; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f702f: and al, 0x14; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00100940: and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007c6f1: and al, 0x14; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00125709: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00107bc5: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0013b3e9: and al, 0x14; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00100897: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100795: and al, 0x14; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100b67: and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff32a: and al, 0x14; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000299df: and al, 0x14; mov eax, edx; add esp, 0xc; ret; 
0x000f661b: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000faf51: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58c0: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ee8e1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef191: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003b1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00100141: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00100031: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00100181: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00100221: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd21: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb81: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000f5920: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00050f6d: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000ba8eb: and al, 0x14; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x0012c877: and al, 0x14; mov ecx, dword ptr [ecx + 8]; cmp eax, 0xf; ja 0x12c890; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x000ba846: and al, 0x14; mov ecx, dword ptr [esi + eax*4 - 0x6135c]; add ecx, esi; jmp ecx; 
0x000ef258: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00100318: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe08: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00100258: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d68: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbb8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc18: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdae8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d98: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffd8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0001af95: and al, 0x14; mov ecx, ebx; cmovne ecx, ebp; sub esp, 0xc; push ecx; call edx; 
0x000f4666: and al, 0x14; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00145585: and al, 0x14; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0014537f: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00101786: and al, 0x14; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101675: and al, 0x14; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00145349: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4787: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0006d8ce: and al, 0x14; pop ebx; pop esi; pop edi; ret; 
0x0006af17: and al, 0x14; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001269c0: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00124435: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00124439: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00068dea: and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0005de46: and al, 0x14; push ebp; call dword ptr [eax + 0x1c]; 
0x00080c51: and al, 0x14; push ebp; call eax; 
0x0012faa8: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000c7edd: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00124db3: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00022a93: and al, 0x14; push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00123fd8: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x00040fc4: and al, 0x14; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00025f51: and al, 0x14; ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x00060e8e: and al, 0x14; sub esp, 4; push ebx; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x000ed715: and al, 0x14; test eax, eax; jne 0xed860; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ffb5a: and al, 0x14; test edx, edx; je 0xffb90; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00060944: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000608f4: and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0010840c: and al, 0x18; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x00074b52: and al, 0x18; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012bbd6: and al, 0x18; call dword ptr [eax + 0x10]; 
0x00062951: and al, 0x18; call dword ptr [eax + 0x1c]; 
0x001394b9: and al, 0x18; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x00050f75: and al, 0x18; call dword ptr gs:[0x10]; 
0x00025f10: and al, 0x18; call eax; 
0x0010d9ee: and al, 0x18; cmp edx, dword ptr [esp + 0x1c]; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x000b3299: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0010b57b: and al, 0x18; je 0x10b588; add esp, 8; pop ebx; ret; 
0x000c21b7: and al, 0x18; lea edx, [esp + 0x10]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000df1b9: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0008b0da: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x0008b012: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0003509e: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0012385e: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0010079d: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff332: and al, 0x18; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0007cddc: and al, 0x18; mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00139473: and al, 0x18; mov eax, dword ptr [eax - 0x10c]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x00050226: and al, 0x18; mov eax, dword ptr [eax - 0x2c]; push dword ptr [eax]; call 0x51940; add esp, 0x1c; ret; 
0x0006d826: and al, 0x18; mov eax, dword ptr [eax - 0x2c]; push dword ptr [eax]; call 0x58160; add esp, 0x1c; ret; 
0x0004a7c5: and al, 0x18; mov eax, dword ptr [eax - 0x74]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0006d7c5: and al, 0x18; mov eax, dword ptr [eax - 0x74]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x000fab5a: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00108408: and al, 0x18; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x00033e79: and al, 0x18; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00101513: and al, 0x18; mov ebp, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x75; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001014c0: and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000f6ecf: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71af: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f599e: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e1d9e: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x000ffe46: and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000cd1df: and al, 0x18; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x000faf4d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000ee8dd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef18d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003ad: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0010013d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0010002d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0010017d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0010021d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd1d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcad: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb7d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000ff3d5: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000ef254: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00100314: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe04: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00100254: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d64: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbb4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc14: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdae4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d94: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffd4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0001b59f: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x000f6d47: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f7027: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00145341: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f477f: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000f4742: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000ec821: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; jne 0xec848; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00145383: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f62a0: and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000cebac: and al, 0x18; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x000c5837: and al, 0x18; push -1; call 0xc5850; add esp, 0x1c; ret; 
0x000c587d: and al, 0x18; push -1; call 0xc5890; add esp, 0x1c; ret; 
0x00029a67: and al, 0x18; push 0; call 0x29a20; add esp, 0x1c; ret; 
0x0009f804: and al, 0x18; push 0; call 0x9f820; add esp, 0x1c; ret; 
0x000ff375: and al, 0x18; push 0; call 0xfff00; add esp, 0x1c; ret; 
0x00034046: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x000f7f77: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x000ede55: and al, 0x18; push 0x241; push dword ptr [esp + 0x1c]; call 0xecd40; add esp, 0x1c; ret; 
0x00075ed9: and al, 0x18; push dword ptr [eax + 0x38]; push 3; call 0xec3d0; add esp, 0x1c; ret; 
0x000b32db: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x001394b5: and al, 0x18; push dword ptr [esp + 0x18]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x0013946f: and al, 0x18; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x10c]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x000c5879: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0xc5890; add esp, 0x1c; ret; 
0x0009f800: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0x9f820; add esp, 0x1c; ret; 
0x00034fa9: and al, 0x18; push eax; push eax; call 0x34fc0; add esp, 0x1c; ret; 
0x00117267: and al, 0x18; push ebp; call edi; 
0x00127222: and al, 0x18; push ebx; push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; call eax; 
0x00060614: and al, 0x18; push esi; call dword ptr [ebx + 0x1c]; 
0x00025566: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x001270f2: and al, 0x18; sub esp, 4; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; call eax; 
0x0013f1b8: and al, 0x18; test ebx, ebx; jne 0x13f1c8; add esp, 8; pop ebx; ret; 
0x000770a8: and al, 0x18; test ebx, ebx; jne 0x770b8; add esp, 8; pop ebx; ret; 
0x00132dfa: and al, 0x18; test edx, edx; jne 0x132e08; add esp, 0xc; ret; 
0x00132e3a: and al, 0x18; test edx, edx; jne 0x132e48; add esp, 0xc; ret; 
0x0007a785: and al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f737: and al, 0x1a; add byte ptr [eax], al; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000e1e6f: and al, 0x1c; add eax, 8; push eax; call 0x9d860; add esp, 0x1c; ret; 
0x0001b5a3: and al, 0x1c; add esp, 0x24; ret; 
0x0010164f: and al, 0x1c; call 0x101770; add esp, 0x1c; ret; 
0x0010c4ac: and al, 0x1c; call 0x10af20; add esp, 0x1c; ret; 
0x0010b0cc: and al, 0x1c; call 0x10afc0; add esp, 0x18; pop ebx; ret; 
0x001138d6: and al, 0x1c; call 0x1138f0; add esp, 0x1c; ret; 
0x00113d76: and al, 0x1c; call 0x113d90; add esp, 0x1c; ret; 
0x001154b7: and al, 0x1c; call 0x1147b0; add esp, 0x1c; ret; 
0x0011f5e7: and al, 0x1c; call 0x11f4c0; add esp, 0x1c; ret; 
0x0012ec60: and al, 0x1c; call 0x12e9c0; add esp, 0x10; add esp, 0xc; ret; 
0x0012ec45: and al, 0x1c; call 0x12eac0; add esp, 0x10; add esp, 0xc; ret; 
0x00130f4f: and al, 0x1c; call 0x130c80; add esp, 0x1c; ret; 
0x0012577b: and al, 0x1c; call 0x131d90; add esp, 0x1c; ret; 
0x00131f73: and al, 0x1c; call 0x131db0; add esp, 0x1c; ret; 
0x000c1991: and al, 0x1c; call 0x139490; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0013dc41: and al, 0x1c; call 0x13d3a0; add esp, 0x18; pop ebx; ret; 
0x0008364f: and al, 0x1c; call 0x19020; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000254be: and al, 0x1c; call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000eb501: and al, 0x1c; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00028128: and al, 0x1c; call 0x28140; add esp, 0x1c; ret; 
0x00029a4b: and al, 0x1c; call 0x29a20; add esp, 0x1c; ret; 
0x00031d6b: and al, 0x1c; call 0x31ca0; add esp, 0x1c; ret; 
0x00033d8e: and al, 0x1c; call 0x33c50; add esp, 0x1c; ret; 
0x0013cfa7: and al, 0x1c; call 0x33d70; add esp, 0x1c; ret; 
0x00034f26: and al, 0x1c; call 0x35110; add esp, 0x1c; ret; 
0x00034f57: and al, 0x1c; call 0x35140; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00034f86: and al, 0x1c; call 0x35190; add esp, 0x1c; ret; 
0x00032129: and al, 0x1c; call 0x35e60; add esp, 0x1c; ret; 
0x0004376f: and al, 0x1c; call 0x35ef0; add esp, 0x1c; ret; 
0x00032169: and al, 0x1c; call 0x35f20; add esp, 0x1c; ret; 
0x0004378f: and al, 0x1c; call 0x35f50; add esp, 0x1c; ret; 
0x00032107: and al, 0x1c; call 0x37a60; add esp, 0x1c; ret; 
0x000379f0: and al, 0x1c; call 0x38270; add esp, 0x1c; ret; 
0x00037a50: and al, 0x1c; call 0x3b1c0; add esp, 0x1c; ret; 
0x00037ab0: and al, 0x1c; call 0x3e100; add esp, 0x1c; ret; 
0x00041757: and al, 0x1c; call 0x410f0; add esp, 0x1c; ret; 
0x0004d2b0: and al, 0x1c; call 0x4abe0; add esp, 0x1c; ret; 
0x00050201: and al, 0x1c; call 0x501b0; add esp, 0x1c; ret; 
0x0006d851: and al, 0x1c; call 0x501d0; add esp, 0x1c; ret; 
0x000f7fcd: and al, 0x1c; call 0x50b00; add esp, 0x10; add esp, 0xc; ret; 
0x000f7f0b: and al, 0x1c; call 0x50b00; add esp, 0x1c; ret; 
0x000501bf: and al, 0x1c; call 0x51940; add esp, 0x1c; ret; 
0x000501df: and al, 0x1c; call 0x58160; add esp, 0x1c; ret; 
0x0004a79f: and al, 0x1c; call 0x604c0; add esp, 0x1c; ret; 
0x0005019f: and al, 0x1c; call 0x65770; add esp, 0x1c; ret; 
0x00068c60: and al, 0x1c; call 0x68b50; add esp, 0x1c; ret; 
0x00072371: and al, 0x1c; call 0x68f00; add esp, 0x18; pop ebx; ret; 
0x00069a6b: and al, 0x1c; call 0x69970; add esp, 0x1c; ret; 
0x000725ce: and al, 0x1c; call 0x6bbc0; add esp, 0x1c; ret; 
0x000725eb: and al, 0x1c; call 0x6bd40; add esp, 0x1c; ret; 
0x00050160: and al, 0x1c; call 0x72600; add esp, 0x1c; ret; 
0x00050180: and al, 0x1c; call 0x727d0; add esp, 0x1c; ret; 
0x00072e0f: and al, 0x1c; call 0x72c60; add esp, 0x1c; ret; 
0x0007a398: and al, 0x1c; call 0x7a2f0; add esp, 0x18; pop ebx; ret; 
0x00084fca: and al, 0x1c; call 0x84fe0; add esp, 0x1c; ret; 
0x0008b245: and al, 0x1c; call 0x86cb0; add esp, 0x18; pop ebx; ret; 
0x00083edc: and al, 0x1c; call 0x87c00; add esp, 0x1c; ret; 
0x00085070: and al, 0x1c; call 0x88b50; add esp, 0x1c; ret; 
0x0010cfff: and al, 0x1c; call 0x9db50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008b149: and al, 0x1c; call 0x9db50; add esp, 0x18; pop ebx; ret; 
0x0009f4ad: and al, 0x1c; call 0x9dc40; add esp, 0x18; pop ebx; ret; 
0x0008b547: and al, 0x1c; call 0x9dc80; add esp, 0x18; pop ebx; ret; 
0x0010e013: and al, 0x1c; call 0x9efe0; add esp, 0x18; pop ebx; ret; 
0x000b2974: and al, 0x1c; call 0x9f330; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010e223: and al, 0x1c; call 0x9f420; add esp, 0x18; pop ebx; ret; 
0x000437af: and al, 0x1c; call 0xa0640; add esp, 0x1c; ret; 
0x000437cf: and al, 0x1c; call 0xa06a0; add esp, 0x1c; ret; 
0x000a0720: and al, 0x1c; call 0xa25b0; add esp, 0x1c; ret; 
0x000a0780: and al, 0x1c; call 0xa5280; add esp, 0x1c; ret; 
0x000a07e0: and al, 0x1c; call 0xa7e10; add esp, 0x1c; ret; 
0x000aa46c: and al, 0x1c; call 0xaa5e0; add esp, 0x1c; ret; 
0x000aa4a0: and al, 0x1c; call 0xab1b0; add esp, 0x1c; ret; 
0x000b3ee7: and al, 0x1c; call 0xb3670; add esp, 0x18; pop ebx; ret; 
0x000c585f: and al, 0x1c; call 0xc5890; add esp, 0x1c; ret; 
0x000c5f0b: and al, 0x1c; call 0xc5d90; add esp, 0x1c; ret; 
0x000c612b: and al, 0x1c; call 0xc65e0; add esp, 0x1c; ret; 
0x000ede5e: and al, 0x1c; call 0xecd40; add esp, 0x1c; ret; 
0x00143357: and al, 0x1c; call 0xed660; add esp, 0x1c; sar eax, 0x1f; ret; 
0x000ed8dd: and al, 0x1c; call 0xed8f0; add esp, 0x1c; ret; 
0x000f60a3: and al, 0x1c; call 0xf6810; add esp, 0x10; add esp, 0xc; ret; 
0x000f5f8f: and al, 0x1c; call 0xf6810; add esp, 0x1c; ret; 
0x000f86e4: and al, 0x1c; call 0xf9030; add esp, 0x10; add esp, 0xc; ret; 
0x000fa8c0: and al, 0x1c; call 0xfa2a0; add esp, 0x1c; ret; 
0x000fbc56: and al, 0x1c; call 0xfbc70; add esp, 0x1c; ret; 
0x000fccb7: and al, 0x1c; call 0xfcb30; add esp, 0x18; pop ebx; ret; 
0x000fcc87: and al, 0x1c; call 0xfcbb0; add esp, 0x18; pop ebx; ret; 
0x000ff423: and al, 0x1c; call 0xff430; add esp, 0x18; pop ebx; ret; 
0x0005d941: and al, 0x1c; call dword ptr [eax + 0x1c]; 
0x0006fe28: and al, 0x1c; call dword ptr [eax + 0x40]; 
0x00070421: and al, 0x1c; call dword ptr [ebx + 0x40]; 
0x0006fcd1: and al, 0x1c; call dword ptr [ebx + 0x48]; 
0x000701ea: and al, 0x1c; call dword ptr [edi + 0x40]; 
0x00070103: and al, 0x1c; call ecx; 
0x000322ff: and al, 0x1c; call edi; 
0x0010d9f2: and al, 0x1c; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ec825: and al, 0x1c; jne 0xec848; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00126678: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00126638: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0008afd8: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000c1680: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000f6d4b: and al, 0x1c; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f702b: and al, 0x1c; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00080dad: and al, 0x1c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001249d4: and al, 0x1c; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00145345: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4783: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000fab56: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000f4f10: and al, 0x1c; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000ffe42: and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x0010178a: and al, 0x1c; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000f59a6: and al, 0x1c; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00138ffd: and al, 0x1c; push 0x28; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0010d319: and al, 0x1c; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e309: and al, 0x1c; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x0002ca1c: and al, 0x1c; push dword ptr [eax]; call 0x9d3a0; add esp, 0x1c; ret; 
0x00069ad7: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x0010b0c8: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10afc0; add esp, 0x18; pop ebx; ret; 
0x00029a47: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x29a20; add esp, 0x1c; ret; 
0x00031d67: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x31ca0; add esp, 0x1c; ret; 
0x00033d8a: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x0004376b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x35ef0; add esp, 0x1c; ret; 
0x0004378b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x35f50; add esp, 0x1c; ret; 
0x00037a1a: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x38270; add esp, 0x1c; ret; 
0x00037a4c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x00037ada: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3e100; add esp, 0x1c; ret; 
0x000501fd: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x501b0; add esp, 0x1c; ret; 
0x0006d84d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x501d0; add esp, 0x1c; ret; 
0x000ad59c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x58160; add esp, 0x1c; ret; 
0x0004a79b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x0005019b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x00068c5c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x68b50; add esp, 0x1c; ret; 
0x00069a67: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x000725ca: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6bbc0; add esp, 0x1c; ret; 
0x0005015c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x0007296b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x00072e0b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x0007a394: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7a2f0; add esp, 0x18; pop ebx; ret; 
0x00084fc6: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x84fe0; add esp, 0x1c; ret; 
0x0008b241: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x86cb0; add esp, 0x18; pop ebx; ret; 
0x00083ed8: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x87c00; add esp, 0x1c; ret; 
0x0009f349: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9db50; add esp, 0x18; pop ebx; ret; 
0x0009f4a9: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9dc40; add esp, 0x18; pop ebx; ret; 
0x0010e00f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9efe0; add esp, 0x18; pop ebx; ret; 
0x0010e21f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9f420; add esp, 0x18; pop ebx; ret; 
0x000437ab: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa0640; add esp, 0x1c; ret; 
0x000437cb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa06a0; add esp, 0x1c; ret; 
0x000a4a1b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa25b0; add esp, 0x1c; ret; 
0x000a76db: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa5280; add esp, 0x1c; ret; 
0x000a07dc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x000aa468: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xaa5e0; add esp, 0x1c; ret; 
0x000aa49c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xab1b0; add esp, 0x1c; ret; 
0x000c5f07: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc5d90; add esp, 0x1c; ret; 
0x000c6127: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc65e0; add esp, 0x1c; ret; 
0x000fa8bc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x000fccb3: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xfcb30; add esp, 0x18; pop ebx; ret; 
0x000fcc83: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xfcbb0; add esp, 0x18; pop ebx; ret; 
0x0010d384: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e374: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x00033d86: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x00043767: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x35ef0; add esp, 0x1c; ret; 
0x00043787: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x35f50; add esp, 0x1c; ret; 
0x00037a48: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x0004a797: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x00050197: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x000727b7: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x00072967: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x00072e07: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x000437c7: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa06a0; add esp, 0x1c; ret; 
0x000a07d8: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x000aa498: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xab1b0; add esp, 0x1c; ret; 
0x000fa8d7: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x0012fcc8: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x001266a0: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x00126650: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00082296: and al, 0x1c; push ebx; call eax; 
0x001221b6: and al, 0x1c; push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0006ffac: and al, 0x1c; push edi; call dword ptr [ebx + 0x40]; 
0x00082137: and al, 0x1c; push edx; call eax; 
0x000700a6: and al, 0x1c; push esi; call dword ptr [ebx + 0x40]; 
0x00124007: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0001b1b2: and al, 0x1c; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000f4748: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00131679: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x000744b9: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x0012e4d7: and al, 0x1c; sub ebx, dword ptr gs:[0x14]; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e577: and al, 0x1c; sub ebx, dword ptr gs:[0x14]; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x00139772: and al, 0x1c; sub ebx, dword ptr gs:[0x14]; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x0010e8dc: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e94c: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x0011578d: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x001245d3: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0013962b: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d0: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139e98: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x000316c9: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x000beffc: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x001005ac: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001007b4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x00100c14: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100d8c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00034373: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034493: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x0012f8a5: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0013cc49: and al, 0x20; call 0x13ca90; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cc95: and al, 0x20; call 0x13caf0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cc2c: and al, 0x20; call 0x13cb00; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000f8691: and al, 0x20; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x000f59aa: and al, 0x20; call dword ptr gs:[0x10]; 
0x000327ab: and al, 0x20; call eax; 
0x000f56f2: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0007db55: and al, 0x20; mov dword ptr [esp + 0x14], edx; call eax; 
0x000ecc4b: and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00040f44: and al, 0x20; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00031de3: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000ed936: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013176e: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000ff3d1: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0012c43b: and al, 0x20; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x00101782: and al, 0x20; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000fab52: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ece8b: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ececb: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecfeb: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f478b: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000ed2ae: and al, 0x20; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00168020: and al, 0x20; mov edx, dword ptr [ebx + esi*4 - 0x53538]; add edx, ebx; jmp edx; 
0x000ffe3e: and al, 0x20; mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x001455e5: and al, 0x20; mov edx, dword ptr [esp + 0x24]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ecc90: and al, 0x20; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f5746: and al, 0x20; mov edx, dword ptr [esp + 0x28]; cmp ecx, 9; je 0xf5780; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001017d9: and al, 0x20; mov edx, dword ptr [esp + 0x28]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ecdb0: and al, 0x20; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed967: and al, 0x20; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001015dd: and al, 0x20; mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x0010827d: and al, 0x20; push 0; push 0x2000004; call eax; 
0x0010d348: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e338: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x0010e988: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x0010e9e8: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x0010ea48: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x000fa908: and al, 0x20; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x0012e0e9: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0013d0c4: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00131e7c: and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x001254b9: and al, 0x20; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00107d47: and al, 0x20; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0006275c: and al, 0x20; push edx; call eax; 
0x00108167: and al, 0x20; push edx; push 0x2000001; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x0012e65a: and al, 0x20; push edx; push eax; call edi; 
0x0012e2ba: and al, 0x20; push esi; push eax; call dword ptr [edx]; 
0x00066f10: and al, 0x20; sub esp, 4; push esi; push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x00077063: and al, 0x21; ret 0xc483; 
0x00065bbc: and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00065b74: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0012f905: and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x000f478f: and al, 0x24; call dword ptr gs:[0x10]; 
0x001221c0: and al, 0x24; call eax; 
0x0013a0f5: and al, 0x24; call ecx; 
0x001455e9: and al, 0x24; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0011b078: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x00100500: and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100811: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ece8f: and al, 0x24; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001017e5: and al, 0x24; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ed971: and al, 0x24; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001221bc: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00125566: and al, 0x24; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000eddcb: and al, 0x24; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x0013a0f1: and al, 0x24; mov ecx, dword ptr [esp + 0x24]; call ecx; 
0x001015d5: and al, 0x24; mov edi, dword ptr [esp + 0x28]; mov ecx, dword ptr [esp + 0x20]; mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x000ecc94: and al, 0x24; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ececf: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecfef: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00166316: and al, 0x24; mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x0013a3b8: and al, 0x24; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00075539: and al, 0x24; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x0006588d: and al, 0x24; push ebp; call dword ptr [esi + 0x1c]; 
0x000807ed: and al, 0x24; push ebx; call eax; 
0x00067c70: and al, 0x24; push edx; call eax; 
0x0008027d: and al, 0x24; push esi; call eax; 
0x000329c2: and al, 0x24; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00108171: and al, 0x28; call dword ptr [eax + 0x14]; 
0x00125e3d: and al, 0x28; call dword ptr [eax + 0x18]; 
0x00107d4d: and al, 0x28; call eax; 
0x000f56b6: and al, 0x28; cmp ecx, 9; je 0xf56f0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f574a: and al, 0x28; cmp ecx, 9; je 0xf5780; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f4f0c: and al, 0x28; lea edx, [esp + 0x1c]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x001017dd: and al, 0x28; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000329be: and al, 0x28; mov dword ptr [esp + 0x24], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00100610: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000eced5: and al, 0x28; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ff3d9: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000ed786: and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001015d9: and al, 0x28; mov ecx, dword ptr [esp + 0x20]; mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x0012c40e: and al, 0x28; mov edi, dword ptr [esp + 0x45c]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0012f763: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000f8141: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x00050fc0: and al, 0x28; mov esi, dword ptr [esp + 0x2c]; test edi, edi; je 0x51008; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000ed2a8: and al, 0x28; mov esi, esp; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0005013f: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x0002b0ef: and al, 0x28; push 0; call 0x2b090; add esp, 0x2c; ret; 
0x0013a2a8: and al, 0x28; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012ed05: and al, 0x28; push dword ptr [esp + 0x28]; call eax; 
0x0002b0eb: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x2b090; add esp, 0x2c; ret; 
0x0012ed01: and al, 0x28; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x0012ecfd: and al, 0x28; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x0012ecf9: and al, 0x28; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x0009f742: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0013d680: and al, 0x28; push ebx; call eax; 
0x00077780: and al, 0x28; push ecx; call eax; 
0x0012e0d6: and al, 0x28; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00074bc2: and al, 0x28; push edi; call dword ptr [ebp + 0x1c]; 
0x0006ae00: and al, 0x28; push edx; call eax; 
0x0006af5b: and al, 0x28; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012a0b3: and al, 0x28; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0007d7a4: and al, 0x28; sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push esi; call dword ptr [eax]; 
0x001643c2: and al, 0x29; ret 0x741b; 
0x000b46bc: and al, 0x29; ret; 
0x00109bf7: and al, 0x2c; call 0x1099d0; add esp, 0x28; pop ebx; ret; 
0x0011549d: and al, 0x2c; call 0x114980; add esp, 0x2c; ret; 
0x001155c3: and al, 0x2c; call 0x1154d0; add esp, 0x2c; ret; 
0x00115deb: and al, 0x2c; call 0x1157b0; add esp, 0x2c; ret; 
0x0011761c: and al, 0x2c; call 0x116fe0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0012f075: and al, 0x2c; call 0x12eec0; add esp, 0x2c; ret; 
0x00116871: and al, 0x2c; call 0x139490; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0001b596: and al, 0x2c; call 0x1b230; mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x00029a33: and al, 0x2c; call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0d3: and al, 0x2c; call 0x2b090; add esp, 0x2c; ret; 
0x00032dd3: and al, 0x2c; call 0x32aa0; add esp, 0x2c; ret; 
0x00035e54: and al, 0x2c; call 0x35fb0; add esp, 0x2c; ret; 
0x00035eb4: and al, 0x2c; call 0x36540; add esp, 0x2c; ret; 
0x00035f14: and al, 0x2c; call 0x36ab0; add esp, 0x2c; ret; 
0x00035f74: and al, 0x2c; call 0x37230; add esp, 0x2c; ret; 
0x0004194a: and al, 0x2c; call 0x41960; add esp, 0x2c; ret; 
0x0006aa97: and al, 0x2c; call 0x6a8c0; add esp, 0x2c; ret; 
0x00050145: and al, 0x2c; call 0x6c0c0; add esp, 0x2c; ret; 
0x0006d083: and al, 0x2c; call 0x6cea0; add esp, 0x28; pop ebx; ret; 
0x0006d797: and al, 0x2c; call 0x6d8e0; add esp, 0x2c; ret; 
0x00050117: and al, 0x2c; call 0x72a00; add esp, 0x2c; ret; 
0x00078cdb: and al, 0x2c; call 0x78c00; add esp, 0x28; pop ebx; ret; 
0x000a05a4: and al, 0x2c; call 0xa0820; add esp, 0x2c; ret; 
0x000a0604: and al, 0x2c; call 0xa0cc0; add esp, 0x2c; ret; 
0x000a0664: and al, 0x2c; call 0xa1130; add esp, 0x2c; ret; 
0x000a06c4: and al, 0x2c; call 0xa1760; add esp, 0x2c; ret; 
0x0009fc11: and al, 0x2c; call 0xad1b0; add esp, 0x2c; ret; 
0x000b7752: and al, 0x2c; call 0xb7850; add esp, 0x2c; ret; 
0x000ba624: and al, 0x2c; call 0xbc6d0; add esp, 0x2c; ret; 
0x000ba654: and al, 0x2c; call 0xbedd0; add esp, 0x2c; ret; 
0x000e1ba9: and al, 0x2c; call 0xe1450; add esp, 0x28; pop ebx; ret; 
0x000e1b01: and al, 0x2c; call 0xe1a60; add esp, 0x28; pop ebx; ret; 
0x000ea9ab: and al, 0x2c; call 0xeb230; add esp, 0x2c; ret; 
0x000fd023: and al, 0x2c; call 0xfcf00; add esp, 0x28; pop ebx; ret; 
0x000fd1fb: and al, 0x2c; call 0xfd030; add esp, 0x28; pop ebx; ret; 
0x00124994: and al, 0x2c; call dword ptr [eax]; 
0x0011687d: and al, 0x2c; call eax; 
0x00019133: and al, 0x2c; cli; call dword ptr [edx + 0x52]; 
0x000ed2b2: and al, 0x2c; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x001011a4: and al, 0x2c; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58a4: and al, 0x2c; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ff7e4: and al, 0x2c; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff894: and al, 0x2c; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff944: and al, 0x2c; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0013a27c: and al, 0x2c; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00113ac3: and al, 0x2c; push dword ptr [esp + 0x28]; call eax; 
0x00109bf3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1099d0; add esp, 0x28; pop ebx; ret; 
0x001155bf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1154d0; add esp, 0x2c; ret; 
0x00115de7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1157b0; add esp, 0x2c; ret; 
0x0012f071: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x12eec0; add esp, 0x2c; ret; 
0x00029a2f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0cf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x2b090; add esp, 0x2c; ret; 
0x00032dcf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x32aa0; add esp, 0x2c; ret; 
0x00035e50: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x35fb0; add esp, 0x2c; ret; 
0x00036a9f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x36540; add esp, 0x2c; ret; 
0x00035f10: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x36ab0; add esp, 0x2c; ret; 
0x000379bf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x37230; add esp, 0x2c; ret; 
0x00041946: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0006aa93: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x6a8c0; add esp, 0x2c; ret; 
0x0006d07f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x6cea0; add esp, 0x28; pop ebx; ret; 
0x0006d793: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x00050113: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x00078cd7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x78c00; add esp, 0x28; pop ebx; ret; 
0x000a05ce: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xa0820; add esp, 0x2c; ret; 
0x000a111f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xa0cc0; add esp, 0x2c; ret; 
0x000a068e: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xa1130; add esp, 0x2c; ret; 
0x000a06c0: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xa1760; add esp, 0x2c; ret; 
0x0009fc0d: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xad1b0; add esp, 0x2c; ret; 
0x000b774e: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb7850; add esp, 0x2c; ret; 
0x000ba620: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xbc6d0; add esp, 0x2c; ret; 
0x000e1c25: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe1450; add esp, 0x28; pop ebx; ret; 
0x000e1afd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe1a60; add esp, 0x28; pop ebx; ret; 
0x000ea9d7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xeb230; add esp, 0x2c; ret; 
0x000fd01f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xfcf00; add esp, 0x28; pop ebx; ret; 
0x000fd1f7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xfd030; add esp, 0x28; pop ebx; ret; 
0x00113abf: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x001155bb: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1154d0; add esp, 0x2c; ret; 
0x00115de3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1157b0; add esp, 0x2c; ret; 
0x0012f06d: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x12eec0; add esp, 0x2c; ret; 
0x0002b09f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0cb: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2b090; add esp, 0x2c; ret; 
0x00032dcb: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x32aa0; add esp, 0x2c; ret; 
0x00035e4c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35fb0; add esp, 0x2c; ret; 
0x00036a9b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x36540; add esp, 0x2c; ret; 
0x00035f0c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x36ab0; add esp, 0x2c; ret; 
0x000379bb: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x37230; add esp, 0x2c; ret; 
0x00042b83: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0006aa8f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6a8c0; add esp, 0x2c; ret; 
0x0006d78f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0005010f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x000a05ca: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa0820; add esp, 0x2c; ret; 
0x000a111b: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa0cc0; add esp, 0x2c; ret; 
0x000a068a: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa1130; add esp, 0x2c; ret; 
0x000a06bc: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa1760; add esp, 0x2c; ret; 
0x0009fc09: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xad1b0; add esp, 0x2c; ret; 
0x000b774a: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7850; add esp, 0x2c; ret; 
0x000ba61c: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xbc6d0; add esp, 0x2c; ret; 
0x000ea9d3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xeb230; add esp, 0x2c; ret; 
0x000a0479: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x0009fb36: and al, 0x2c; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x00115498: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x114980; add esp, 0x2c; ret; 
0x000a035e: and al, 0x2c; push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0012ef8e: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x00074ec1: and al, 0x2c; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x000eac1b: and al, 0x2c; push edx; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00129f35: and al, 0x2c; push esi; call dword ptr [eax + 0xc]; 
0x0007da7f: and al, 0x2c; push esi; call dword ptr [eax]; 
0x000b3210: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000f8145: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x000ff349: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x00050fc4: and al, 0x2c; test edi, edi; je 0x51008; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00030e1e: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0002f425: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0007db37: and al, 0x30; call dword ptr [eax]; 
0x000bf223: and al, 0x30; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xbf2a0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000c1cff: and al, 0x30; lea eax, [esp + 0x4c]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x00069b30: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000f6297: and al, 0x30; mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000db6a1: and al, 0x30; mov ecx, dword ptr [esi + eax*4 - 0x5feec]; add ecx, esi; jmp ecx; 
0x00031d0c: and al, 0x30; mov ecx, edi; mov ebp, eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000c66cd: and al, 0x30; mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xc6708; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c677d: and al, 0x30; mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xc67b8; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00031cb7: and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ef978: and al, 0x30; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0001bcc9: and al, 0x30; push dword ptr [ebx + 4]; call esi; 
0x000ad2d0: and al, 0x30; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0013d9c6: and al, 0x30; push edx; call eax; 
0x0010d1e6: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x000eabfd: and al, 0x30; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0016506f: and al, 0x31; ror byte ptr [ebp - 0x7cafdb94], cl; ret 0x901; 
0x000619d2: and al, 0x33; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x000b35bc: and al, 0x34; call eax; 
0x000322cb: and al, 0x34; call edi; 
0x0007a054: and al, 0x34; dec dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x00079f15: and al, 0x34; dec dword ptr [edi]; xchg esp, eax; ret 0x6e2b; 
0x001016eb: and al, 0x34; mov eax, 0x75; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x000c2161: and al, 0x34; mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xc21a0; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000f7241: and al, 0x34; mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xf7280; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f7301: and al, 0x34; mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xf7340; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0012f6f3: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00081105: and al, 0x34; push dword ptr [esp + 0x10]; call eax; 
0x000ad449: and al, 0x34; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000c1d08: and al, 0x34; push dword ptr [esp + 0x40]; call ebx; 
0x0009fe6d: and al, 0x34; push dword ptr [esp + 0x40]; push edi; call esi; 
0x00071130: and al, 0x34; push eax; call ebx; 
0x0009fad1: and al, 0x34; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0009f747: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000751d0: and al, 0x34; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x0009fd0f: and al, 0x34; push eax; push edi; call esi; 
0x0006b370: and al, 0x34; push edx; call eax; 
0x0010e265: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0010d275: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x0007587c: and al, 0x34; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00032632: and al, 0x34; push esi; call edi; 
0x00066456: and al, 0x34; push esi; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00124ebc: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x000f5d03: and al, 0x37; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000671d2: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00100893: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100591: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000f4cf7: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov ebp, eax; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f825c: and al, 0x38; mov eax, 0x1a; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f5c83: and al, 0x38; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00031d14: and al, 0x38; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00031cbb: and al, 0x38; mov eax, 0xb1; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ec674: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00078a54: and al, 0x38; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x000a047d: and al, 0x38; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000a013d: and al, 0x38; push dword ptr [esp + 0x40]; push edi; call esi; 
0x0006ce71: and al, 0x38; push edi; call dword ptr [edx + 0x1c]; 
0x000ad2d4: and al, 0x38; push edi; call esi; 
0x0012fce6: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000a0481: and al, 0x38; push esi; call ebx; 
0x0012da1c: and al, 0x38; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000c69ec: and al, 0x38; test esi, esi; jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aac: and al, 0x38; test esi, esi; jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000b2502: and al, 0x39; dec edi; and al, 0x75; js 0xb2568; pop esi; ret; 
0x00076162: and al, 0x39; ret 0x860f; 
0x0004eb05: and al, 0x39; ret; 
0x000ee2d6: and al, 0x39; ror byte ptr [edi], 1; inc edx; ret 0xc001; 
0x0010c472: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x00028ebe: and al, 0x3c; add al, 0; add al, ch; sbb byte ptr [ebx - 0x3b7cfffb], dh; or al, 0x89; ret; 
0x0012d55a: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0012deb3: and al, 0x3c; call 0x12dbf0; add esp, 0x3c; ret; 
0x000f826c: and al, 0x3c; call dword ptr gs:[0x10]; 
0x000823ac: and al, 0x3c; call eax; 
0x0010089b: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000f4d01: and al, 0x3c; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ec67c: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c5955: and al, 0x3c; mov edi, dword ptr gs:[0xc]; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012deaf: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x12dbf0; add esp, 0x3c; ret; 
0x0012deab: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x12dbf0; add esp, 0x3c; ret; 
0x0006fccc: and al, 0x3c; push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0012e2b5: and al, 0x3c; push ebp; push dword ptr [esp + 0x20]; push esi; push eax; call dword ptr [edx]; 
0x000823a7: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00082001: and al, 0x3c; push ecx; push ebx; call eax; 
0x0007607f: and al, 0x3c; push edi; call dword ptr [esi + 0x20]; 
0x00040d41: and al, 0x3c; push edx; call eax; 
0x00129f87: and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012f772: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e2: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f852: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b5: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f915: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f982: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa02: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012f702: and al, 0x3c; sub ecx, dword ptr gs:[0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x000b3270: and al, 0x3c; sub ecx, dword ptr gs:[0x14]; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000ef137: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x00065d0c: and al, 0x40; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00078706: and al, 0x40; call dword ptr [esi + 0xc]; 
0x00020781: and al, 0x40; call eax; 
0x000c1d0c: and al, 0x40; call ebx; 
0x00139c84: and al, 0x40; lea eax, [esp + 0x60]; push eax; call ecx; 
0x000f5e6c: and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010093c: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100b63: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100799: and al, 0x40; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001010f9: and al, 0x40; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000ea369: and al, 0x40; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea419: and al, 0x40; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f6a59: and al, 0x40; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6bc9: and al, 0x40; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f7859: and al, 0x40; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x0012413b: and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000ec678: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ad856: and al, 0x40; push dword ptr [eax]; call esi; 
0x00080c4d: and al, 0x40; push dword ptr [esp + 0x14]; push ebp; call eax; 
0x00107d43: and al, 0x40; push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0009f600: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x0009fe71: and al, 0x40; push edi; call esi; 
0x00043175: and al, 0x40; push edx; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000672e2: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0001e4bb: and al, 0x44; call eax; 
0x00100b6b: and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001398d9: and al, 0x44; mov eax, dword ptr [edx + 0xc]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x000f4ddd: and al, 0x44; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f544d: and al, 0x44; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55cd: and al, 0x44; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ff9fd: and al, 0x44; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5e68: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0013e798: and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00061909: and al, 0x44; push esi; call dword ptr [eax + 0x1c]; 
0x000613b6: and al, 0x44; push esi; call dword ptr [ebx + 0x1c]; 
0x0012d594: and al, 0x44; push esi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012a1c9: and al, 0x44; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000432e3: and al, 0x44; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000a7f13: and al, 0x48; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000a0cef: and al, 0x48; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0012bf04: and al, 0x48; call dword ptr [eax + 0x10]; 
0x0012bdae: and al, 0x48; call dword ptr [eax + 0x14]; 
0x0001dfbb: and al, 0x48; call eax; 
0x00065ed6: and al, 0x48; mov edx, dword ptr [esp + 0x78]; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x000668f3: and al, 0x48; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x00066699: and al, 0x48; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00065dfe: and al, 0x48; movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0006ba82: and al, 0x48; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0003383e: and al, 0x48; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e1734: and al, 0x49; cli; call dword ptr [eax - 0x77]; 
0x00115771: and al, 0x49; cli; call dword ptr [eax - 1]; 
0x000f758d: and al, 0x4b; cli; call dword ptr [eax - 0x18]; 
0x000eab2e: and al, 0x4c; add al, byte ptr [eax]; add byte ptr [ecx + 0xc42484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0001fc8b: and al, 0x4c; call eax; 
0x0002499b: and al, 0x4c; call esi; 
0x00024997: and al, 0x4c; push dword ptr [esp + 0x4c]; call esi; 
0x000c1d03: and al, 0x4c; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x0002498e: and al, 0x4c; push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x00033882: and al, 0x4c; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00067262: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0001f0e0: and al, 0x50; call eax; 
0x000ff326: and al, 0x50; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000ff6ef: and al, 0x50; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0002077d: and al, 0x50; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000f7993: and al, 0x50; mov ecx, dword ptr [esp + 4]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f7955: and al, 0x50; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f4eab: and al, 0x50; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f4f14: and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x00020779: and al, 0x50; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0006645b: and al, 0x50; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007553a: and al, 0x50; push ebx; call dword ptr [edi + 0x48]; 
0x00067c71: and al, 0x52; call eax; 
0x000807ee: and al, 0x53; call eax; 
0x000bf48b: and al, 0x54; call dword ptr gs:[0x10]; 
0x000b3b1f: and al, 0x54; call eax; 
0x000ff32e: and al, 0x54; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000f4535: and al, 0x54; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000ff6eb: and al, 0x54; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f45b5: and al, 0x54; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f4ea3: and al, 0x54; mov edx, dword ptr [esp + 0x58]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f45f0: and al, 0x54; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000bf54b: and al, 0x54; mov edx, dword ptr [esp + 4]; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000bf509: and al, 0x54; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf436: and al, 0x54; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000ed82b: and al, 0x54; mov edx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed873: and al, 0x54; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0001f791: and al, 0x54; push dword ptr [esp + 0x5c]; call edi; 
0x000ad851: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x0006588e: and al, 0x55; call dword ptr [esi + 0x1c]; 
0x0008027e: and al, 0x56; call eax; 
0x000329c3: and al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000e2245: and al, 0x57; add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x4a; cli; call dword ptr [eax - 0x18]; 
0x000672d2: and al, 0x58; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000a084f: and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000b3d8b: and al, 0x58; lea eax, [esp + 0xa4]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000b3b13: and al, 0x58; lea eax, [esp + 0xdc]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0012d578: and al, 0x58; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0001fc87: and al, 0x58; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000f4ea7: and al, 0x58; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000c1a16: and al, 0x58; push dword ptr [esp + 0x1c]; call edi; 
0x00024993: and al, 0x58; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0001fc83: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c1a12: and al, 0x58; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00116dfe: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0001e4b3: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb3: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001bcc4: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00116e02: and al, 0x58; push esi; call edi; 
0x0002817e: and al, 0x5b; mov eax, edx; ret; 
0x000b451f: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0010af7b: and al, 0x5b; pop esi; pop edi; ret; 
0x0007e437: and al, 0x5b; pop esi; ret; 
0x0012c412: and al, 0x5c; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x000f4eaf: and al, 0x5c; call dword ptr gs:[0x10]; 
0x0008298e: and al, 0x5c; call eax; 
0x0001f795: and al, 0x5c; call edi; 
0x0012f6ef: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000f4f18: and al, 0x5c; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0001e4af: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfaf: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0008298a: and al, 0x5c; push dword ptr [esp + 0x5c]; call eax; 
0x0001eb11: and al, 0x5c; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0012d547: and al, 0x5c; push esi; call dword ptr [eax + 0x14]; 
0x0006660c: and al, 0x60; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00067342: and al, 0x60; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0004d841: and al, 0x60; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0012f9ef: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012a171: and al, 0x60; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x0001e4b7: and al, 0x60; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb7: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001eb0d: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00139c88: and al, 0x60; push eax; call ecx; 
0x000615fc: and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00067272: and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0009fd0b: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x0001eb15: and al, 0x64; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00023563: and al, 0x64; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002355f: and al, 0x64; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0001f0d8: and al, 0x64; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000a0363: and al, 0x64; push eax; push esi; call ebx; 
0x000eddcc: and al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x00067282: and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000ee93e: and al, 0x68; add dword ptr [eax], eax; add byte ptr [ebx - 0x1074d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a115f: and al, 0x68; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000221dd: and al, 0x68; call esi; 
0x00060c50: and al, 0x68; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0001f0d4: and al, 0x68; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000221d9: and al, 0x68; push dword ptr [esp + 0x68]; call esi; 
0x000b344f: and al, 0x68; push ecx; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x000ec94b: and al, 0x6a; call dword ptr [esi + 0x57]; 
0x00082aff: and al, 0x6c; call eax; 
0x00021438: and al, 0x6c; call esi; 
0x0001f0dc: and al, 0x6c; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00021434: and al, 0x6c; push dword ptr [esp + 0x6c]; call esi; 
0x0001f78c: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00082c7f: and al, 0x6c; push ebp; call eax; 
0x000b35b6: and al, 0x6c; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c7ec4: and al, 0x6c; sub ebx, dword ptr gs:[0x14]; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca404: and al, 0x6c; sub ebx, dword ptr gs:[0x14]; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df424: and al, 0x6c; sub ebx, dword ptr gs:[0x14]; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff34: and al, 0x6c; sub ebx, dword ptr gs:[0x14]; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb784: and al, 0x6c; sub ebx, dword ptr gs:[0x14]; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x001013aa: and al, 0x6c; sub ecx, dword ptr gs:[0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x00021cb6: and al, 0x6e; cli; call dword ptr [eax - 0x73]; 
0x00095fd1: and al, 0x6f; or al, byte ptr [eax]; add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00020774: and al, 0x70; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000a49b1: and al, 0x71; cli; call dword ptr [eax - 0x18]; 
0x000d4e46: and al, 0x74; out 0x8b, eax; push ebp; add dh, dh; inc esp; ret 0x804; 
0x0012443d: and al, 0x74; push eax; call dword ptr [ecx]; 
0x000417ac: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000b2505: and al, 0x75; js 0xb2568; pop esi; ret; 
0x00065eda: and al, 0x78; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x0002355a: and al, 0x78; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000221d4: and al, 0x78; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x0016836a: and al, 0x80; add byte ptr [eax], al; add bh, dh; ret 0; 
0x000229ac: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x229d9; push 0x682474ff; call esi; 
0x00023d74: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x23da1; push 0x682474ff; call esi; 
0x000a80cc: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; and byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x00038722: and al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x489; 
0x00124155: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x000a0faf: and al, 0x83; in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x0010b593: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x10b5cb; call eax; 
0x0002e8e4: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00071162: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000acb5f: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0006b852: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000bfe5f: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002f874: and al, 0x83; les ecx, ptr [eax]; ret; 
0x00043307: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0006ba8b: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0007baf0: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002f74c: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f62c2: and al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000e7a88: and al, 0x83; ret 0x8901; 
0x0012b30d: and al, 0x83; ret 0x8b18; 
0x0003b7c8: and al, 0x83; ret; 
0x000243be: and al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000f5d07: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp + 0x540288], cl; add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000ec7b6: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx + 0x9024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000a586c: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000949d1: and al, 0x85; or al, byte ptr [eax]; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000d9d04: and al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x00088300: and al, 0x85; ror byte ptr [edi], 0x89; push es; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00088550: and al, 0x85; ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0010ce58: and al, 0x87; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x001683ad: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x0007b832: and al, 0x89; aad 0x89; ret 0xeac1; 
0x0011b079: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x001365ca: and al, 0x89; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x001008d1: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00100501: and al, 0x89; inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100812: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00077f92: and al, 0x89; push eax; add al, 0x5b; ret; 
0x000c6a16: and al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0003051f: and al, 0x89; ret 0x4489; 
0x00138f59: and al, 0x89; ret 0x448b; 
0x001371df: and al, 0x89; ret 0x748d; 
0x0013c635: and al, 0x89; ret 0x808b; 
0x0007da87: and al, 0x89; ret 0xc483; 
0x000305b8: and al, 0x89; ret 0xe281; 
0x0004fee8: and al, 0x89; ret 0xf229; 
0x000296d2: and al, 0x89; ret; 
0x001688b0: and al, 0x89; xchg esp, eax; and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x000ec6f3: and al, 0x8b; adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0xec718; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x00077458: and al, 0x8b; adc esi, esi; ret 0xf08; 
0x0003ab17: and al, 0x8b; add ecx, dword ptr [ecx - 0x76e3dbbc]; ret 0xe283; 
0x0013a0f2: and al, 0x8b; dec esp; and al, 0x24; call ecx; 
0x000de5c6: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000de5db: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x001221bd: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x001004fd: and al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001009bd: and al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011687a: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00125567: and al, 0x8b; inc esp; and al, 0x34; call eax; 
0x000ed933: and al, 0x8b; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012f75d: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000b3e78: and al, 0x8c; add byte ptr [eax], al; add bl, ch; ret 0x8190; 
0x00045c15: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00046103: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xfbc1; 
0x00045df0: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x00166b7e: and al, 0x8c; add byte ptr [eax], al; add dh, dh; ret; 
0x0012c518: and al, 0x8d; adc dword ptr [ebx + 0x62], -6; call dword ptr [esi + 0x57]; 
0x0011066a: and al, 0x8d; adc ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x000ff05b: and al, 0x8d; add dword ptr [eax - 0x64], -0x15; dec dword ptr [ecx + 0x4b82845]; add byte ptr [eax], al; add cl, ch; ret; 
0x0010f68a: and al, 0x8d; add ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x000c1f2f: and al, 0x8d; and ah, 0x90; cli; call dword ptr [eax - 0x18]; 
0x000a0b1d: and al, 0x8d; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x001100fa: and al, 0x8d; and dword ptr [edi + 0x4a], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x0013b003: and al, 0x8d; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x001455ea: and al, 0x8d; jl 0x145612; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000a7619: and al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x0010995d: and al, 0x8d; xchg eax, edi; cdq; cli; call dword ptr [eax - 0x73]; 
0x00109917: and al, 0x8d; xchg esp, ebp; cdq; cli; call dword ptr [eax - 0x73]; 
0x000a3785: and al, 0x8d; xor ah, 0xab; cli; call dword ptr [eax + 0x53]; 
0x000ec7bd: and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x0003c71c: and al, 0x90; add byte ptr [eax], al; add cl, ch; retf 0xfff6; call dword ptr [ebx + 0x6a]; 
0x001680ad: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xac89; 
0x00145638: and al, 0x96; cld; jmp dword ptr [esi - 0x70]; 
0x0003f6fb: and al, 0x98; add byte ptr [eax], al; add cl, ch; wait; idiv bh; call dword ptr [ebx + 0x6a]; 
0x0012fbc9: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push ebx; call eax; 
0x000310cc: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x000b3d8f: and al, 0xa4; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x001688b3: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x00129f51: and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00120d9b: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00031ddc: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed972: and al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001017e6: and al, 0xb8; jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eab35: and al, 0xc4; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x001228d5: and al, 0xc7; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x75]; 
0x000a127c: and al, 0xc; add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x00132a56: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000de1e6: and al, 0xc; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x0007b259: and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000eccbd: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00069b4d: and al, 0xc; add esp, 0x1c; ret; 
0x000eddfa: and al, 0xc; call 0x7acf0; mov ecx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000833e8: and al, 0xc; call dword ptr [edx]; 
0x000ec3ac: and al, 0xc; call dword ptr gs:[0x10]; 
0x000ec3ac: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3dc: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec40c: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000c199d: and al, 0xc; call eax; 
0x00139b62: and al, 0xc; call esi; 
0x0013e4b5: and al, 0xc; cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0002f8e9: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f397: and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x00132241: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131901: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x000bee8a: and al, 0xc; mov dword ptr [eax], ebx; xor eax, eax; pop ebx; ret; 
0x0013ca4d: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000341db: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x001266ee: and al, 0xc; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000ffa43: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5493: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff548: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5553: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e5: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b55: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e23: and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x0007b2a1: and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x000f45f4: and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x001323d5: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e5: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x000ecff5: and al, 0xc; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ef260: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000f799f: and al, 0xc; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f919b: and al, 0xc; mov eax, 0x140; mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x00100320: and al, 0xc; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe10: and al, 0xc; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000bf32c: and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00100595: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00101519: and al, 0xc; mov eax, 0x75; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00100260: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000ed219: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000edf31: and al, 0xc; mov eax, 0xb7; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000f4d70: and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000ec1bd: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec31d: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec26d: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000eb39e: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fdbc0: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc20: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaf0: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4da0: and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000806c8: and al, 0xc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fffe0: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00083332: and al, 0xc; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x000e7ca3: and al, 0xc; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x0001af08: and al, 0xc; mov eax, dword ptr [esi + 0x1a7c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002f574: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000c599d: and al, 0xc; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a9b: and al, 0xc; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c0b: and al, 0xc; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010113b: and al, 0xc; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00101430: and al, 0xc; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f789b: and al, 0xc; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea24b: and al, 0xc; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2fb: and al, 0xc; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000fad9d: and al, 0xc; mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000f4cfb: and al, 0xc; mov ebp, eax; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000edf2d: and al, 0xc; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xb7; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00050f38: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001004a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100067: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6817: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef227: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6657: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff257: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100107: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae17: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff37: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff67: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee877: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6967: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6997: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee847: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf17: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb17: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000ec8c8: and al, 0xc; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00143248: and al, 0xc; mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7fff: and al, 0xc; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x000ed86f: and al, 0xc; mov ecx, dword ptr [esp + 0x54]; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ff823: and al, 0xc; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ecdb4: and al, 0xc; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ff8d3: and al, 0xc; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff983: and al, 0xc; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011e3: and al, 0xc; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58e3: and al, 0xc; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00101942: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000e1df8: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f632b: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f62fd: and al, 0xc; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ff5b2: and al, 0xc; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00050f71: and al, 0xc; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000ffaf3: and al, 0xc; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352c3: and al, 0xc; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000fae93: and al, 0xc; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f6893: and al, 0xc; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f6933: and al, 0xc; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f4483: and al, 0xc; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0f3: and al, 0xc; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed193: and al, 0xc; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x000ede03: and al, 0xc; mov esi, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000ed96b: and al, 0xc; mov esi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000e8345: and al, 0xc; movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x00060b28: and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f71: and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x000ddb5f: and al, 0xc; movzx edx, byte ptr [esi + 0x18]; mov ecx, dword ptr [ebx + edx*4 - 0x5fed8]; add ecx, ebx; jmp ecx; 
0x0007c7aa: and al, 0xc; neg edi; sub esp, 0xc; push edi; call dword ptr [ebp]; 
0x0002f372: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0009c094: and al, 0xc; pop ebx; pop esi; ret; 
0x00162854: and al, 0xc; pop edi; ret; 
0x0011725e: and al, 0xc; push 0x400; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x000c1a0e: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00116dfa: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0012722b: and al, 0xc; push dword ptr [esp + 0xc]; call eax; 
0x00127227: and al, 0xc; push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; call eax; 
0x000bef35: and al, 0xc; push ebp; push ebx; call eax; 
0x0013e450: and al, 0xc; push ebx; call dword ptr [ebp + 0x3c]; 
0x00075040: and al, 0xc; push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x001321f8: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00132245: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131905: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318b0: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00131c60: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0005d93a: and al, 0xc; push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0012feb8: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x0002fd0f: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e2: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00034d65: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db8: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x0011ce46: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0012e93e: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x00131a91: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b21: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131bdc: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c45: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce1: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132491: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132521: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b1: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132641: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x000b429d: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000f56d6: and al, 0xc; sub ebx, dword ptr gs:[0x14]; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x0012e3b0: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8c7: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0013170a: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317ea: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00132d32: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d92: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x0013740e: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00138bd3: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x00034e05: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e58: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea5: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef8: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000acb55: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b3145: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31c5: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000eb545: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000f81b6: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc20: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x001006a1: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100721: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x0010082c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c8c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d01: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00101030: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011ceee: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11cefd; add esp, 0x1c; ret; 
0x00132c89: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132cd9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x0013cad9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x0014543c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x00050e7f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000bc709: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee09: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3e8: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec119: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec170: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000f5f5f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75cc: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xf75db; add esp, 0x1c; ret; 
0x0007c7ca: and al, 0xc; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x00032312: and al, 0xc; sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x000762a3: and al, 0xc; sub esp, 4; push ecx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00082eb4: and al, 0xc; sub esp, 8; mov dword ptr [esp + 0x10], ecx; push dword ptr [esp + 8]; push ebp; call eax; 
0x00131e1a: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x000fc9fa: and al, 0xc; test eax, eax; je 0xfca04; test edx, edx; jne 0xfca08; ret; 
0x000eb520: and al, 0xc; xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x00040f3e: and al, 0xc; xor eax, eax; mov esi, dword ptr [esp + 0x20]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f926b: and al, 0xc; xor ecx, ecx; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000ec088: and al, 0xc; xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013a09f: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebx - 0x17f68], cl; jmp dword ptr [ebp - 0x75]; 
0x000daa6e: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0012db8d: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0006c212: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x000e657f: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00163f94: and al, 0xd4; add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x0002fa76: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0002fa90: and al, 0xd9; sbb cl, bl; add al, 0x24; add esp, 4; ret; 
0x000453fe: and al, 0xdb; sub al, 0x24; add esp, 0x14; ret; 
0x000b3b17: and al, 0xdc; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x000b329f: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x0002f871: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x0006bbb4: and al, 0xdd; cli; jmp dword ptr [esi - 0x70]; 
0x0006daf4: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x1abf7d], cl; call dword ptr [eax - 0x73]; 
0x00083db3: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x574c780], cl; call dword ptr [eax + 0x68]; 
0x00072804: and al, 0xe8; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x0012ffe1: and al, 0xe8; add dword ptr [ecx - 0x3b7c0012], edx; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012b2c2: and al, 0xe8; and dh, bl; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000d19e8: and al, 0xe8; cli; jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012a8a1: and al, 0xe8; inc ecx; call 0xc496a897; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008b4e7: and al, 0xe8; jecxz 0x8b4c0; stc; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x00126741: and al, 0xe8; mov eax, dword ptr [0x83ffef29]; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d1cd6: and al, 0xe8; or al, 0x74; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001306d4: and al, 0xe8; push cs; mov ch, dh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c9928: and al, 0xe8; ret 0x2d; 
0x000b3bfb: and al, 0xe8; vmread esi, esi; push dword ptr [ecx]; rol byte ptr [ebx - 0x1f7cef3c], cl; add eax, dword ptr [ebx - 0x6bf0fe08]; ret 0x2be9; 
0x001078b2: and al, 0xe8; xor byte ptr [eax], bl; int1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012d3af: and al, 0xe8; xor edi, dword ptr [ebp - 0x3b7c0012]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000dcdd2: and al, 0xe9; ret; 
0x000e57ec: and al, 0xef; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000838ca: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x5750b80], cl; call dword ptr [eax + 0x68]; 
0x0013b03b: and al, 0xf6; inc ebp; adc byte ptr [esi*2 - 0xf7d72e8], al; popal; cmc; jmp dword ptr [esi - 9]; 
0x000ecc29: and al, 0xf6; ret 0x7540; 
0x00023762: and al, 0xf6; ret 0xf06; 
0x00150a5e: and al, 0xf8; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d7094: and al, 0xf; dec esi; pop esi; and al, 0x39; ret; 
0x000d9c97: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0013e98a: and al, 0xf; mov edi, cs; add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000a9348: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0001e21d: and al, 0xf; test byte ptr [edi + edi*8 - 1], ch; dec dword ptr [ebx - 0x72c3dba4]; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x0001f8be: and al, 0xf; test byte ptr [esi - 0x72ffffff], al; pop edi; add al, 0x83; ret 0x3901; 
0x0011adfb: and al, 0xf; xchg esi, eax; ret 0xfe83; 
0x0014aa38: and al, 0xff; inc dword ptr [ecx + 0x44fc5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010006e: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007b5ec: and al, 1; add byte ptr [eax], al; ret; 
0x0003b9f8: and al, 1; ret; 
0x0008ec28: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0014d7b4: and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00132a42: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0011a562: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00074872: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000291e2: and al, 4; and eax, 0x7f; ret; 
0x0010ecd2: and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x0010ecc2: and al, 4; bswap eax; ret; 
0x000f6e26: and al, 4; call dword ptr gs:[0x10]; 
0x00034182: and al, 4; cdq; xor eax, edx; sub eax, edx; ret; 
0x00085278: and al, 4; cmove eax, edx; add eax, 1; ret; 
0x0011b3a2: and al, 4; cmp byte ptr [eax + 2], 0; jne 0x11b3b8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0002f587: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002fa27: and al, 4; fld dword ptr [esp + 4]; ret; 
0x0002f797: and al, 4; fld qword ptr [esp]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000453c3: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002f506: and al, 4; fscale; fstp st(1); ret; 
0x0016b5ce: and al, 4; fstp st(0); add esp, 0x20; ret; 
0x0002f592: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0007ae30: and al, 4; jmp dword ptr [eax]; 
0x00069b90: and al, 4; jmp eax; 
0x00129c64: and al, 4; jmp edx; 
0x000eb378: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000eb360: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0002f57c: and al, 4; mov dword ptr [eax], ecx; ret; 
0x000f6ed7: and al, 4; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b7: and al, 4; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000bf381: and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000f7997: and al, 4; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000453fa: and al, 4; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x14; ret; 
0x001000d8: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000f7959: and al, 4; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x001002a4: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000ffa47: and al, 4; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5497: and al, 4; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff54c: and al, 4; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x001002e8: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000f5557: and al, 4; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00100348: and al, 4; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e8: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000fffb4: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000edd98: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001000b4: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000f69e9: and al, 4; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b59: and al, 4; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00100378: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff08: and al, 4; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000f7b54: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x001003e8: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100418: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000f4e27: and al, 4; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f6ca9: and al, 4; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6f89: and al, 4; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00100448: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00100474: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000c59f4: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ec0b8: and al, 4; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031148: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc8: and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ef2d4: and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000edcf4: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd74: and al, 4; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000f79f4: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ff438: and al, 4; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c8: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000ecac4: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ecac4: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f7a14: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000edd18: and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f8: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6358: and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c8: and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001002c4: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000f7e88: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade8: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb18: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec868: and al, 4; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec898: and al, 4; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x00100504: and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b6bc8: and al, 4; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000ff284: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e64: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffde4: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000f7eb4: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00100284: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000f7818: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000c57c4: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0002f9d2: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00100004: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000c68a4: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ede94: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ffe78: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ff7b4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ff7b4: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ed9b8: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000c6924: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000faf88: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb8: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000fafe4: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000e1c48: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c78: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1cd4: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000e1d14: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000e1d34: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000e1d58: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a8: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef284: and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ffea8: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed8: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031728: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ede74: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000c6688: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000ff4a4: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4c4: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000ff4c4: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001001e8: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000f56f6: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000fdce8: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc78: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb48: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae8: and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000c5d77: and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000fff94: and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000c747d: and al, 4; mov eax, 1; test ecx, ecx; js 0xc7490; ret; 
0x000ef158: and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x000c0702: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013063e: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00079d32: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x00029386: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029396: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0013ca32: and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x0013ca62: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0013ca82: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x0013cb02: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013caf2: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x0013ca92: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000f5af2: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0013ca46: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000290dc: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000290ac: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002907c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00028fcc: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002902c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00028f4c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00028ffc: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00028f9c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002916c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00028f7c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002905c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00028f2c: and al, 4; mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00028c1c: and al, 4; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000de55c: and al, 4; mov eax, dword ptr [eax - 0x30]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000737b2: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00073782: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0007b69d: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x7b6b0; ret; 
0x0007b72d: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x7b740; ret; 
0x0007b56d: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x7b580; ret; 
0x0007b6dd: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x000c0ae2: and al, 4; mov eax, dword ptr [eax]; ret; 
0x00074882: and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00074892: and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x0007a3f2: and al, 4; mov eax, dword ptr [edx + 0x14]; cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x001326b2: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0010080d: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010060c: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0002fb6d: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f9f2: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000bf54f: and al, 4; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0007b4f2: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0001b715: and al, 4; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x0007b67c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b65c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b62c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5dc: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5ac: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x0007b70c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b60c: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x00132a52: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0013ca72: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000ea982: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00079a12: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca22: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027442: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000ea962: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000ea932: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0002f39b: and al, 4; ret; 
0x0007a762: and al, 4; setae al; ret; 
0x0007b336: and al, 4; sete al; movzx eax, al; ret; 
0x001240ad: and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00073792: and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x000737a2: and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00101932: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x101940; ret; 
0x0012f906: and al, 5; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0011b1a6: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x0001be82: and al, 8; add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x00030ac4: and al, 8; call 0x30a40; pop ecx; pop edx; ret; 
0x00050f3c: and al, 8; call dword ptr gs:[0x10]; 
0x00143251: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00050f3c: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x000b4028: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000e1e00: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec08e: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec8d1: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec901: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ed30c: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f5678: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5970: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e0: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f61fc: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f622c: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f90fc: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f931c: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f934c: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9380: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b0: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000eb3a7: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0007b260: and al, 8; call edx; 
0x0009dc23: and al, 8; cld; pop edi; ret; 
0x0007b332: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0002fb71: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f6d7: and al, 8; fld qword ptr [esp + 4]; ret; 
0x0002f810: and al, 8; fstp qword ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013ca76: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x00132e9e: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000ea986: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0007b4f8: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0002fa70: and al, 8; mov dword ptr [edx], eax; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x00129c60: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x001316d5: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000bf385: and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000bee53: and al, 8; mov eax, 0x10a; xor ecx, ecx; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x001004ab: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010006b: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbfb: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2ab: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1fb: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000eb526: and al, 8; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000edd4b: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000bf50f: and al, 8; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000f45f8: and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000f5e70: and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef22b: and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f665b: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff25b: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100614: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010010b: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bfb: and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x001455ed: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ffdbb: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae1b: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff3b: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff6b: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1cab: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001bb: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d9b: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000fada3: and al, 8; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000ee8ab: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee87b: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c696b: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c699b: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee84b: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf1b: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faeeb: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbeb: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc4b: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb1b: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007d241: and al, 8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121b79: and al, 8; mov eax, 0xf0; mov edx, 1; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0007b436: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00079a16: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca26: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027446: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010058d: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0002f8e5: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0013063a: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0013ca42: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000f7b78: and al, 8; mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x00119613: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00119613: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x001000d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100344: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000edd94: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00100374: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001003e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100414: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100444: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x000ec0b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031144: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ff434: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000edd14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6354: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000f7e84: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec864: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec894: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f7814: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ffe74: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ed9b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000faf84: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000e1c44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c74: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1d54: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ffea4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031724: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c6684: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001001e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc74: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb44: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000ef154: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0002f6a2: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00031178: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0014c598: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x000fd217: and al, 8; mov ecx, dword ptr [esp + 0x10]; test eax, eax; jne 0xfd240; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001017e1: and al, 8; mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f92c7: and al, 8; mov edx, dword ptr [esp + 0x10]; test ecx, ecx; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x001016e7: and al, 8; mov edx, dword ptr [esp + 0x34]; mov eax, 0x75; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x00069b49: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000ffa3f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f548f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff544: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f554f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e1: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b51: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e1f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f799b: and al, 8; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000c5999: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a97: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c07: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00101137: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010142c: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f7897: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea247: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2f7: and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ff81f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff8cf: and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff97f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011df: and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58df: and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ffaef: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352bf: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000fae8f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f688f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f692f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f447f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0ef: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed18f: and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010102c: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x00050e7b: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000f5f5b: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x00029382: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029392: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00030bfb: and al, 8; mov esp, ecx; jmp edx; 
0x000ea939: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000f2a66: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f42c6: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000ff126: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0006e97e: and al, 8; pop ebx; add eax, ecx; ret; 
0x00069aa1: and al, 8; pop ebx; jmp eax; 
0x001323d9: and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e9: and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x001461c7: and al, 8; pop ebx; ret; 
0x0009dbf9: and al, 8; pop edi; ret; 
0x00098c74: and al, 8; pop esi; ret; 
0x00075aae: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00082ebf: and al, 8; push ebp; call eax; 
0x00122508: and al, 8; push ebp; push 0; push edi; push ebx; call edx; 
0x0006acff: and al, 8; push ebx; call dword ptr [eax + 0x1c]; 
0x0006ad71: and al, 8; push ebx; call dword ptr [ebp + 0x1c]; 
0x00125e38: and al, 8; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00075ab2: and al, 8; push esi; call dword ptr [edi + 0x40]; 
0x000293c6: and al, 8; ret; 
0x0011b19c: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x0012e232: and al, 8; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x00124ca6: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0001dd72: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000fc9d6: and al, 8; test eax, eax; je 0xfc9e0; test edx, edx; jne 0xfc9e8; ret; 
0x000b4137: and al, 8; test ecx, ecx; jne 0xb4158; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000c0930: and al, 8; test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000b42f8: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000eec29: and al, 9; ret 0x850f; 
0x0014d9db: and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c4413: and al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0xa; out dx, al; call dword ptr [eax - 0x18]; 
0x0002f61c: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002fc0a: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0016c022: and al, byte ptr [eax]; add byte ptr [ebp - 0x17fa8b40], al; ret 0xf65c; 
0x00055bca: and al, byte ptr [eax]; add byte ptr [ebx + 0x3fcbb], al; add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x00126354: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00126184: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000c410c: and al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00115674: and al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0014e9cc: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x00151acc: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0011b515: and al, byte ptr [ebx - 0x2776ef3c]; pop ebx; pop esi; pop edi; ret 4; 
0x000bc30c: and al, byte ptr [ecx]; ret 0x7c83; 
0x00055bc9: and al, byte ptr ds:[eax]; add byte ptr [ebx + 0x3fcbb], al; add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x0009bf51: and al, ch; mov byte ptr [0x81000a0f], al; sar dword ptr [0x3000e64], 0xc; xchg ecx, eax; jmp ecx; 
0x00098c51: and al, ch; mov byte ptr [0x81000a42], al; sar dword ptr [ebp + 0x3000e96], 0xc; xchg ecx, eax; jmp ecx; 
0x001188a7: and al, ch; ret; 
0x00132a3a: and al, dl; std; jmp dword ptr [esi - 0x70]; 
0x0010296c: and bh, ah; int1; call dword ptr [eax + 0x6a]; 
0x00101f51: and bh, al; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [ebp + 0x56], ecx; cli; call dword ptr [eax + 0x6a]; 
0x0014ae95: and bh, bh; inc dword ptr [ecx + 0x44b68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ac8e: and bh, bh; inc dword ptr [ecx + 0x44d6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014abf5: and bh, bh; inc dword ptr [ecx + 0x44e08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011c9f5: and bh, bh; jmp dword ptr [esi - 0x70]; 
0x000ef439: and bh, bh; xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000ea215: and bh, byte ptr [eax + 0xb4]; call dword ptr gs:[0x10]; 
0x000ea2c5: and bh, byte ptr [eax + 0xb5]; call dword ptr gs:[0x10]; 
0x000f82e0: and bh, byte ptr [ebp - 0x76acfff2]; ret; 
0x00074875: and bh, cl; ret; 
0x000f93ca: and bl, byte ptr [edx + esi*8]; jmp dword ptr [esi - 0x70]; 
0x0002f6cd: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0002fa1d: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x000ff7ef: and byte ptr [eax + 0x100], bh; call dword ptr gs:[0x10]; 
0x000ecc4c: and byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ff89f: and byte ptr [eax + 0x13b], bh; call dword ptr gs:[0x10]; 
0x000ff94f: and byte ptr [eax + 0x13c], bh; call dword ptr gs:[0x10]; 
0x001011af: and byte ptr [eax + 0x159], bh; call dword ptr gs:[0x10]; 
0x00040f45: and byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000c58af: and byte ptr [eax + 0x72], bh; call dword ptr gs:[0x10]; 
0x00031de4: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x000ed937: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0007acc7: and byte ptr [eax + 0xf0], bh; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0013cbd3: and byte ptr [eax + 4], bh; add esp, 0xc; ret; 
0x0014dbd4: and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015c805: and byte ptr [eax + edi*8 + 0x5dc829ff], 0x5b; ret; 
0x0015e6db: and byte ptr [eax + edi*8 + 0x5ec829ff], 0x5f; pop ebp; pop ebx; ret; 
0x0015e177: and byte ptr [eax + edi*8 + 0x5ec829ff], 0x5f; pop ebx; ret; 
0x00043538: and byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + esi - 6], esi; call dword ptr [ebx + 0x51]; 
0x00049bf9: and byte ptr [eax - 4], 0xff; call dword ptr [eax + 0x6a]; 
0x0002ca0e: and byte ptr [eax - 4], 0xff; call dword ptr [eax - 0x75]; 
0x000a0b1f: and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x0010c0d9: and byte ptr [eax - 6], bl; call dword ptr [eax - 0x75]; 
0x0013f6f5: and byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0010c0d8: and byte ptr [eax], 0x58; cli; call dword ptr [eax - 0x75]; 
0x0011b593: and byte ptr [eax], 0x9d; cli; call dword ptr [eax - 0x73]; 
0x0010296b: and byte ptr [eax], 0xe7; int1; call dword ptr [eax + 0x6a]; 
0x000b3f75: and byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0xd], dh; in al, dx; call dword ptr [eax - 0x73]; 
0x000b3eda: and byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [eax - 0xd], 0xffffffec; call dword ptr [eax - 1]; 
0x000b6c84: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x21108a], cl; add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x000c70f0: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00065d0e: and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000c7024: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x0006277f: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b53cf: and byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b537e: and byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x000b4fbd: and byte ptr [eax], al; add byte ptr [ecx], bh; cmp dword ptr [eax + 0xf000020], -0x6b; ret 0xb38b; 
0x000b5879: and byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x870f; 
0x000b4fc3: and byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x000b6643: and byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x000b4106: and byte ptr [eax], al; in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x000fe1d4: and byte ptr [ebp + 0x2f840fc0], al; or al, 0; add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x00101bb4: and byte ptr [ebp + 0x37], dh; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001609f7: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x160a44; add eax, 0xf; ret; 
0x001609b7: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x160a24; add eax, 7; ret; 
0x0012db8a: and byte ptr [ebp + 0xd0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x000d7a6b: and byte ptr [ebp + eax - 0xa], dh; ret 0x7402; 
0x00033bc2: and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x0011df00: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x0011e080: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x5ce4b7b], cl; call dword ptr [eax + 0x56]; 
0x00085e5f: and byte ptr [ebp - 0x107c00bf], cl; add dword ptr [ecx], eax; ret; 
0x000fe218: and byte ptr [ebp - 0x287bf040], al; or eax, 0x838d0000; test al, 0x55; cli; call dword ptr [ecx + 0x51]; 
0x000a1b65: and byte ptr [ebp - 0x39f80], cl; call dword ptr [eax - 1]; 
0x000fdad7: and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x000f56f3: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0012eb7c: and byte ptr [ebp - 0x55c5f7f], cl; call dword ptr [eax - 0x73]; 
0x001171c4: and byte ptr [ebp - 0x5a37780], cl; call dword ptr [eax - 1]; 
0x00082540: and byte ptr [ebp - 0x5f6c7240], al; fucomp st(1); dec dword ptr [ebx + 0x1e10b3]; add byte ptr [edi], cl; inc esp; ret 0x938b; 
0x00057bbc: and byte ptr [ebp - 0x60160001], bl; fcos; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x0004bdbd: and byte ptr [ebp - 0x657af001], al; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x000e729b: and byte ptr [ebp - 0x6b7bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0001bf32: and byte ptr [ebp - 0x72118b2e], al; nop; insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x0001ce8f: and byte ptr [ebp - 0x72178b40], al; xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x00096637: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x00094f94: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001247b6: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00040193: and byte ptr [ebp - 0x7cffd98c], cl; ret 0x8b01; 
0x000a80d6: and byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x000832d2: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0010791b: and byte ptr [ebx + 0x46c710c4], al; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4689; 
0x00066f11: and byte ptr [ebx + 0x525604ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x0011d87b: and byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00069aea: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000787fd: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0004188f: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000e0e1a: and byte ptr [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret; 
0x0007577c: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000c3e70: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00076b6c: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0001f3fa: and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; jmp eax; 
0x0001b641: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000fbc1d: and byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x000ec16d: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000a9344: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00023f4f: and byte ptr [ebx + eax + 0x4c890000], 0x24; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x00112f2e: and byte ptr [ebx - 0x10750], cl; jmp dword ptr [ebp - 0x75]; 
0x00050b1f: and byte ptr [ebx - 0x1076d], cl; jmp dword ptr [ebp - 0x75]; 
0x00046027: and byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000f19dc: and byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x75]; 
0x000acf45: and byte ptr [ebx - 0x16b79], cl; jmp dword ptr [ebp - 0x75]; 
0x000dd3d0: and byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f8bf: and byte ptr [ebx - 0x16b7e], cl; jmp dword ptr [ebp - 0x75]; 
0x00127151: and byte ptr [ebx - 0x18], dl; clc; ret; 
0x000a0a46: and byte ptr [ebx - 0x18], dl; ret; 
0x000838de: and byte ptr [ebx - 0x18], dl; sbb ecx, eax; cld; inc dword ptr [ebx - 0x17aceb3c]; add edi, edi; jmp dword ptr [esi - 0x70]; 
0x00107ec5: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016b9d7: and byte ptr [ebx - 0x2d7aefb0], cl; je 0x16b9ec; sub esp, 0xc; push eax; call edx; 
0x00085834: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007723f: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0013e5b6: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x000ed2af: and byte ptr [ebx - 0x47d3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098c4e: and byte ptr [ebx - 0x5d17df40], al; inc edx; or al, byte ptr [eax]; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001017da: and byte ptr [ebx - 0x72d7dbac], cl; je 0x101806; or byte ptr [ebx - 0x47dbdb84], cl; jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001455e6: and byte ptr [ebx - 0x72dbdbac], cl; jl 0x145612; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00077454: and byte ptr [ebx - 0x74dbdb8c], cl; adc esi, esi; ret 0xf08; 
0x000ffe3f: and byte ptr [ebx - 0x74e3dbac], cl; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000fab53: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ff3d2: and byte ptr [ebx - 0x74e7dba4], cl; jl 0xff3fe; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00101783: and byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x1c; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0013a157: and byte ptr [ebx - 0x769aef3c], al; add esi, dword ptr [ecx]; fucomi st(3); ret; 
0x00037d67: and byte ptr [ebx - 0x76a9fe20], al; ret 0x74ff; 
0x0004f6ba: and byte ptr [ebx - 0x76cbdbb4], cl; ret 0xb0e9; 
0x00118a27: and byte ptr [ebx - 0x7af3dbac], cl; ror byte ptr [edi], 0x88; scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000fc1f9: and byte ptr [ebx - 0x7afefbb1], al; sar byte ptr [eax + 0x1e], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x000e42b1: and byte ptr [ebx - 0x7bf0fe08], al; lodsd eax, dword ptr [esi]; or al, byte ptr [eax]; add byte ptr [ebx - 0x1677b], cl; jmp dword ptr [ebp - 0x75]; 
0x000f5747: and byte ptr [ebx - 0x7cd7dbac], cl; stc; or dword ptr [edi + ebp - 0x48], esi; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b2b20: and byte ptr [ebx - 0x7cebdb8c], cl; ret 0x89ff; 
0x000fa458: and byte ptr [ebx - 0xa37b], cl; jmp dword ptr [ebp - 0x77]; 
0x0010730a: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000f844d: and byte ptr [ebx], 0; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0010798a: and byte ptr [ebx], ch; inc ecx; sbb al, 0x39; sal byte ptr [edx + 0xe], 1; mov eax, 1; ret; 
0x0003e0d5: and byte ptr [ebx], dh; cli; call dword ptr [eax - 0x73]; 
0x00144fad: and byte ptr [ebx], dh; push esi; and al, 9; ret 0x850f; 
0x001015de: and byte ptr [ecx + 0x1ce80ea], cl; call dword ptr gs:[0x10]; 
0x0006de08: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00131e7d: and byte ptr [ecx + 0x56], dl; call dword ptr [eax]; 
0x000f5372: and byte ptr [ecx + 0x5e5b2850], cl; pop edi; pop ebp; ret; 
0x000bf1cd: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x00100972: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000507b8: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0012e0ea: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x0007233f: and byte ptr [ecx + 0xa486], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0007165f: and byte ptr [ecx + 0xa496], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00067e22: and byte ptr [ecx + ebp], bh; ja 0x67e50; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x00079e5f: and byte ptr [ecx + ebx], 0; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0010d892: and byte ptr [ecx + edx - 0x75], dh; dec ebp; in al, 0x31; dec dword ptr [ebx - 0x10777]; jmp dword ptr [ebp - 0x7d]; 
0x000c439f: and byte ptr [ecx - 0x72651439], cl; je 0xc43cd; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000605fb: and byte ptr [ecx - 0x76e3dbbc], cl; ret 0xd889; 
0x0001fb36: and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x0001e268: and byte ptr [ecx - 6], ch; call dword ptr [eax + 0x68]; 
0x0001e196: and byte ptr [ecx - 6], ch; call dword ptr [eax - 0x73]; 
0x000c18ab: and byte ptr [ecx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012f8a6: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00030d28: and byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0007b63c: and byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000c5bb4: and byte ptr [ecx], al; mov edi, dword ptr gs:[8]; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x0009cee5: and byte ptr [ecx], al; ret 0x167c; 
0x0007d542: and byte ptr [ecx], al; ret 0xfa81; 
0x000b24ed: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00128a54: and byte ptr [ecx], bh; pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x00027a01: and byte ptr [ecx], bh; ret 0x4d0f; 
0x000ee2bc: and byte ptr [ecx], bh; ret 0x7d72; 
0x000d0e1a: and byte ptr [ecx], bh; ret; 
0x000a2ba6: and byte ptr [ecx], ch; ret 0x7c89; 
0x00066846: and byte ptr [ecx], ch; ret; 
0x00075bda: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x000f1567: and byte ptr [ecx], cl; ret 0x4474; 
0x0016425d: and byte ptr [ecx], cl; ret 0x840f; 
0x000619d4: and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0012413f: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0012a177: and byte ptr [edi + 0x50], dl; call dword ptr [edx + 8]; 
0x00107d48: and byte ptr [edi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00095337: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008b6c7: and byte ptr [edi + 0x5e], bl; ret; 
0x0006c219: and byte ptr [edi + 0x6a], dl; call dword ptr [edi + 0x56]; 
0x000f8adc: and byte ptr [edi + esi*8], al; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x001532a1: and byte ptr [edi - 0x18], bl; cmp eax, 0x81fffe9c; ret; 
0x001527a1: and byte ptr [edi - 0x18], bl; cmp eax, 0x81fffea7; ret; 
0x00152901: and byte ptr [edi - 0x18], bl; frstor dword ptr [ebp - 0x3c7e0002]; cmp bl, bl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152d21: and byte ptr [edi - 0x18], bl; mov ebp, 0x81fffea1; ret; 
0x00152221: and byte ptr [edi - 0x18], bl; mov ebp, 0x81fffeac; ret; 
0x0014b521: and byte ptr [edi - 0x18], bl; mov ebp, 0x81ffff19; ret; 
0x00149521: and byte ptr [edi - 0x18], bl; mov ebp, 0x81ffff39; ret; 
0x0014d9d1: and byte ptr [edi - 0x18], bl; or eax, 0x81fffef5; ret; 
0x0014ced1: and byte ptr [edi - 0x18], bl; or eax, 0x81ffff00; ret; 
0x0014b3d1: and byte ptr [edi - 0x18], bl; or eax, 0x81ffff1b; ret; 
0x001493d1: and byte ptr [edi - 0x18], bl; or eax, 0x81ffff3b; ret; 
0x00152e81: and byte ptr [edi - 0x18], bl; pop ebp; mov al, byte ptr [0xc381fffe]; mov eax, 0x30003d5; sbb al, 0x8b; jmp ebx; 
0x00152bc1: and byte ptr [edi - 0x18], bl; sbb eax, 0x81fffea3; ret; 
0x001520c1: and byte ptr [edi - 0x18], bl; sbb eax, 0x81fffeae; ret; 
0x0014b7c1: and byte ptr [edi - 0x18], bl; sbb eax, 0x81ffff17; ret; 
0x001497c1: and byte ptr [edi - 0x18], bl; sbb eax, 0x81ffff37; ret; 
0x0014d5b1: and byte ptr [edi - 0x18], bl; sub eax, 0x81fffef9; ret; 
0x0014bbb1: and byte ptr [edi - 0x18], bl; sub eax, 0x81ffff13; ret; 
0x00149bb1: and byte ptr [edi - 0x18], bl; sub eax, 0x81ffff33; ret; 
0x001254ba: and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00027073: and byte ptr [edi - 6], ch; call dword ptr [eax - 0x73]; 
0x00115286: and byte ptr [edi], 0x5c; cli; call dword ptr [eax - 0x73]; 
0x0009cc22: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x00083c0d: and byte ptr [edi], cl; nop; ret 0xc801; 
0x00160ccd: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x00162359: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x162410; lea eax, [edx + 7]; ret; 
0x00161191: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x00161f41: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001611e4: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00161fa4: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x000eadc1: and byte ptr [edi], cl; test dword ptr [ebx - 0x9fffffd], esi; ret 0xf80; 
0x000b24f0: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0009663a: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0016278b: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x001628ab: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x00160b8c: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00094f97: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00167625: and byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x000f8c37: and byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f8b7f: and byte ptr [edi], cl; xchg esp, eax; sar dword ptr [esp + ebx*2], 0xf; xchg esp, eax; ret; 
0x00040e9e: and byte ptr [edi], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000df1c0: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0012e65b: and byte ptr [edx + 0x50], dl; call edi; 
0x00108168: and byte ptr [edx + 0x68], dl; add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x00114573: and byte ptr [edx + ebp*8 - 0x17], dh; ret 0xfffc; 
0x000e8004: and byte ptr [edx + edi*8], cl; inc dword ptr [ecx]; int1; jmp ecx; 
0x0014fa29: and byte ptr [edx - 0x25], 0xfb; jmp dword ptr [esi - 0x70]; 
0x000e8dd9: and byte ptr [edx], 0x4b; cli; call dword ptr [eax + 0x6a]; 
0x000f8e20: and byte ptr [edx], 0x4c; cli; call dword ptr [edx + 0x57]; 
0x00146169: and byte ptr [edx], 0x74; cld; jmp dword ptr [esi - 0x70]; 
0x000debf2: and byte ptr [edx], al; cli; call dword ptr [eax - 0x73]; 
0x0013f6f6: and byte ptr [edx], bl; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0010827e: and byte ptr [edx], ch; push 0x2000004; call eax; 
0x000ad444: and byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000ad2ca: and byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x001238f4: and byte ptr [edx], dh; add byte ptr [eax], al; pop ebx; ret; 
0x00028178: and byte ptr [esi + 0x13], dh; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x00123ff1: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0012e2bb: and byte ptr [esi + 0x50], dl; call dword ptr [edx]; 
0x000d178b: and byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00107955: and byte ptr [esi + 0x5f], bl; ret; 
0x0015d3bc: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0009ce72: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x00161c32: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000e6d27: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x0008353f: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0x8356d; call eax; 
0x00061949: and byte ptr [esi - 0x18], dl; adc byte ptr [ebx - 0x3b7d0000], dl; adc byte ptr [ecx], bh; ret; 
0x00062259: and byte ptr [esi - 0x18], dl; add byte ptr [edx - 0x3b7d0000], cl; adc byte ptr [ecx], bh; ret; 
0x001187bb: and byte ptr [esi], 0x5d; cli; call dword ptr [eax + 0x53]; 
0x000e3517: and byte ptr [esp + ebp*4 - 0x7b], dh; ret; 
0x001628f6: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000ca136: and ch, 0x48; cli; call dword ptr [eax - 0x18]; 
0x000b2772: and ch, 0xf; je 0xb2790; add eax, 2; ret; 
0x0009f317: and ch, 2; lea eax, [eax - 0x81480]; cmovne edx, eax; mov eax, edx; ret; 
0x000850e7: and ch, 2; lea eax, [eax - 0x84f80]; cmovne edx, eax; mov eax, edx; ret; 
0x00085437: and ch, 2; lea eax, [eax - 0x89e70]; cmovne edx, eax; mov eax, edx; ret; 
0x000853b7: and ch, 2; lea eax, [eax - 0x89ea0]; cmovne edx, eax; mov eax, edx; ret; 
0x000853f7: and ch, 2; lea eax, [eax - 0x8c380]; cmovne edx, eax; mov eax, edx; ret; 
0x00085377: and ch, 2; lea eax, [eax - 0x8c3b0]; cmovne edx, eax; mov eax, edx; ret; 
0x00084497: and ch, 2; lea eax, [eax - 0x8dda0]; cmovne edx, eax; mov eax, edx; ret; 
0x00083ea7: and ch, 2; lea eax, [eax - 0x8f210]; cmovne edx, eax; mov eax, edx; ret; 
0x00119077: and ch, bl; sub dword ptr [ebp + 0xb6], ecx; add byte ptr [ecx], bh; ret 0x1f77; 
0x000c63a8: and ch, byte ptr [edi]; cli; call dword ptr [eax - 0x18]; 
0x00151860: and ch, dl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b275b: and cl, 0xf; je 0xb2780; ret; 
0x000c0ada: and cl, 4; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x000ed588: and cl, byte ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x00050ef0: and cl, byte ptr [ebx - 0x1077a]; jmp dword ptr [ebp - 0x7d]; 
0x000e6028: and cl, byte ptr [ebx - 0x143976e9]; mov ecx, 0x94f8838d; cli; call dword ptr [eax - 0x73]; 
0x000f57fd: and cl, byte ptr [ebx - 0x47efdbb4]; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x000f58bd: and cl, byte ptr [ebx - 0x74ebdbb4]; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001195ba: and cl, byte ptr [ebx - 0x937b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0010b03a: and cl, byte ptr [ebx - 6]; call dword ptr [eax + 0x57]; 
0x000e8dda: and cl, byte ptr [ebx - 6]; call dword ptr [eax + 0x6a]; 
0x0012c4e2: and cl, byte ptr [ebx - 6]; call dword ptr [esi + 0x57]; 
0x00079e9d: and cl, byte ptr [edi]; mov dh, 2; pop ebx; pop esi; ret; 
0x000a98c3: and cl, ch; ret 0xfff5; 
0x000b6b77: and dh, bh; dec dword ptr [ebp - 0x56f677d]; call dword ptr [eax - 0x73]; 
0x000b6bb5: and dh, bh; jmp dword ptr [esi - 0x70]; 
0x0012b2c4: and dh, bl; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e27a7: and dh, bl; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000ecb77: and dh, dh; les eax, ptr [ecx]; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0001b02d: and dword ptr [0x1cc48300], ecx; ret; 
0x0002e811: and dword ptr [0xffffa4d], 0x45; call 0x20006; jmp dword ptr [esi - 0x70]; 
0x000c5abe: and dword ptr [eax + 0x1d], edi; call dword ptr gs:[0x10]; 
0x0012e3fd: and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x0007b461: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000eddd6: and dword ptr [eax + 8], edi; call dword ptr gs:[0x10]; 
0x0014db3b: and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007280e: and dword ptr [eax - 0x1a], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0011b54b: and dword ptr [eax - 0x73], edx; xchg dword ptr [ecx + 0x5d], ebp; cli; call dword ptr [eax - 0x18]; 
0x000d5444: and dword ptr [eax - 0x7cfffffe], 0xffffffc0; add dword ptr [ecx], edi; ret 0xe875; 
0x0011b439: and dword ptr [eax - 4], 0xffffffff; call dword ptr [eax + 0x6a]; 
0x00072dbb: and dword ptr [eax - 5], 0x84838dff; jnp 0x72dbe; call dword ptr [eax - 0x73]; 
0x000b4105: and dword ptr [eax], 0; in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x001238f3: and dword ptr [eax], 0x32; add byte ptr [eax], al; pop ebx; ret; 
0x0001e267: and dword ptr [eax], 0x69; cli; call dword ptr [eax + 0x68]; 
0x0001e195: and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x00027072: and dword ptr [eax], 0x6f; cli; call dword ptr [eax - 0x73]; 
0x00074874: and dword ptr [eax], 0xffffffcf; ret; 
0x00074344: and dword ptr [eax], 0xffffffe9; call dword ptr [eax - 0x73]; 
0x000c296f: and dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0xf], -0xd; call dword ptr [eax - 0x73]; 
0x000c2243: and dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x15; in eax, dx; call dword ptr [eax - 0x18]; 
0x000b6d20: and dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test eax, edx; in al, dx; call dword ptr [eax - 0x73]; 
0x000ed302: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b6c8c: and dword ptr [eax], eax; add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x0015a8ae: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c18ac: and dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b58ff: and dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x000c62d6: and dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x0008b5d7: and dword ptr [ebp + 0x748d3a34], ecx; add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000cd1d7: and dword ptr [ebx + 0x23773bf8], eax; mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x0012ae92: and dword ptr [ebx + 0x5e5b5cc4], eax; pop edi; pop ebp; ret; 
0x000bf1ca: and dword ptr [ebx - 0x3776df3c], eax; pop ebx; pop esi; pop edi; ret; 
0x00052e43: and dword ptr [ebx - 0x5b743], eax; call dword ptr [eax]; 
0x0010a0c9: and dword ptr [ebx], 0; add byte ptr [ebx - 0xaff33c], al; jne 0x10a088; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0006e90b: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x00023b1b: and dword ptr [ebx], edx; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax + 0x68]; 
0x001122f4: and dword ptr [ecx + 0x5a], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x00122d08: and dword ptr [ecx + 0x60], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000be8e3: and dword ptr [ecx + ebp*8], 0xffffffff; dec dword ptr [ebx - 0x9743]; jmp dword ptr [esi - 0x70]; 
0x0010048a: and dword ptr [ecx - 0x55], 0xfffffff1; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000b41fb: and dword ptr [ecx], 0x46; cli; call dword ptr [eax - 1]; 
0x000767db: and dword ptr [ecx], eax; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x001100fc: and dword ptr [edi + 0x4a], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x0012639e: and dword ptr [edi + 0x61], 0xfffffffa; call dword ptr [edx + 0x6a]; 
0x0013cb87: and dword ptr [edi + esi], 0; pop ebx; pop esi; pop edi; jmp eax; 
0x0008286c: and dword ptr [edi], 0x44; cli; call dword ptr [eax - 1]; 
0x0011170a: and dword ptr [edi], 0x5a; cli; call dword ptr [eax - 0x18]; 
0x00031976: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00084764: and dword ptr [edx + ebx], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0010b039: and dword ptr [edx], 0x4b; cli; call dword ptr [eax + 0x57]; 
0x0012c4e1: and dword ptr [edx], 0x4b; cli; call dword ptr [esi + 0x57]; 
0x001604db: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x001023b5: and dword ptr [esi + 0xb730000], 0x26a8918b; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x000845aa: and dword ptr [esi + ebx], 0; add esp, 8; pop ebx; ret; 
0x001348b0: and dword ptr [esi - 0x72b00000], 0xffffff83; push eax; dec edx; cli; call dword ptr [eax + 0x6a]; 
0x000b41fc: and dword ptr [esi - 6], eax; call dword ptr [eax - 1]; 
0x0001e27a: and dword ptr [esi], 0x2e; cli; call dword ptr [eax - 0x18]; 
0x00132f59: and dword ptr [esi], 0x63; cli; call dword ptr [ebp + 0x6a]; 
0x0006e8b6: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x000290eb: and eax, 0x1000; ret; 
0x00050097: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000290bb: and eax, 0x100; ret; 
0x000f5af7: and eax, 0x100f; ret; 
0x001613d0: and eax, 0x1f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161400: and eax, 0x1ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161430: and eax, 0x1fff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0002908b: and eax, 0x2000; ret; 
0x00028fdb: and eax, 0x200; ret; 
0x000d13c5: and eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebp - 0x72f0ff8a], cl; ret 0; 
0x00098bf1: and eax, 0x3000e97; or al, 0x91; jmp ecx; 
0x001613e0: and eax, 0x3f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161410: and eax, 0x3ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161440: and eax, 0x3fff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0002903b: and eax, 0x4000; ret; 
0x00028f5b: and eax, 0x400; ret; 
0x0013c66b: and eax, 0x458bfffd; les eax, ptr [ebx - 0x7f72f314]; jle 0x13c6dc; cli; call dword ptr [eax - 0x18]; 
0x0006ce6a: and eax, 0x5604ec83; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007b1d7: and eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x00071241: and eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x000c41fd: and eax, 0x5bf8658d; pop esi; pop ebp; ret; 
0x0007391c: and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x001613f0: and eax, 0x7f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000291e4: and eax, 0x7f; ret; 
0x00161420: and eax, 0x7ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161450: and eax, 0x7fff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0002f38e: and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0002fa1e: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0002f6ce: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x0002faaa: and eax, 0x80000000; mov dword ptr [edx], eax; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x00030664: and eax, 0x80000000; ret; 
0x0002900b: and eax, 0x8000; ret; 
0x00028fab: and eax, 0x800; ret; 
0x00073786: and eax, 0x804; ret; 
0x0011adaa: and eax, 0x8303e8c1; call 0x15435b5; mov eax, 2; ret; 
0x000aa58d: and eax, 0x83240401; ret; 
0x0013cc6b: and eax, 0x83ffedda; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00067ec2: and eax, 0x8bc0b60f; mov word ptr [ebx - 0x6257c], es; add ecx, ebx; jmp ecx; 
0x000e3cfc: and eax, 0x8d04ec83; inc ebx; sbb al, 0x83; mov byte ptr [ecx], 0x83; ret; 
0x0007db29: and eax, 0x8dffffff; jbe 0x7db30; sub esp, 0xc; push 0; mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x00120bee: and eax, 0x8dffffff; lcall 0xf0b8, 0x3180; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f4c0: and eax, 0x950f0100; ret 0x8366; 
0x000311b2: and eax, 0xb3b8; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x000e8342: and eax, 0xc244c8b; movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x0014a932: and eax, 0xc381ffff; mov edx, dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000dbf3b: and eax, 0xc483fffc; adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x448b; 
0x0007af50: and eax, 0xc; ret; 
0x0013a7e4: and eax, 0xe2c1f807; add ecx, dword ptr [ecx]; ret 0x8966; 
0x000fbbd0: and eax, 0xe8500000; ja 0xfbbd8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00093797: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f2a7: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00163ca8: and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0011dba4: and eax, 0xf3830000; add dword ptr [ebx - 0x49f0ef3c], eax; ret; 
0x00059375: and eax, 0xf53fb83; xchg dword ptr [edi + 4], edx; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x001612ea: and eax, 0xf; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016131b: and eax, 0xff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161352: and eax, 0xfff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016138b: and eax, 0xffff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0010ecd4: and eax, 0xffff; ror ax, 8; ret; 
0x0002e812: and eax, 0xffffa4d; inc ebp; call 0x20006; jmp dword ptr [esi - 0x70]; 
0x000f5b41: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000ff10a: and eax, 0xfffff000; or eax, edx; ret; 
0x0010ed24: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0010ed08: and eax, 0xffffff; ret; 
0x00130040: and eax, 0xffffffc2; hlt; call dword ptr [eax - 0x73]; 
0x000f81e2: and eax, 0xfffffff0; add eax, 0x26; mov edx, dword ptr [edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0007b6b9: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x150], eax; ret; 
0x0011a567: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0002e65a: and eax, 0xfffffff; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x2e645; ret; 
0x001259e4: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00125b38: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0007b4d8: and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x001634f9: and eax, 1; je 0x163494; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001635bd: and eax, 1; je 0x1635a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001613a0: and eax, 1; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0007b43b: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00102dc0: and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0010c4f7: and eax, 1; pop ebx; ret; 
0x000d0589: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x0002917b: and eax, 1; ret; 
0x00028f8b: and eax, 2; ret; 
0x00043cad: and eax, 2; sub eax, 1; ret; 
0x001613b0: and eax, 3; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000ffcaf: and eax, 3; ret; 
0x0002906b: and eax, 4; ret; 
0x00123690: and eax, 7; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x001613c0: and eax, 7; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00028f3b: and eax, 8; ret; 
0x0014d914: and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e5e04: and eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00126086: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0013a95a: and eax, dword ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x001260f0: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x001260f6: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0015a65e: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000f844e: and eax, dword ptr [eax]; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0010a0ca: and eax, dword ptr [eax]; add byte ptr [ebx - 0xaff33c], al; jne 0x10a088; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000e2838: and eax, dword ptr [eax]; add byte ptr [ecx + 0x2364b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x000e1ad3: and eax, dword ptr [eax]; add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x000e283e: and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0xe74; 
0x00145613: and eax, dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012dfa8: and eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000b6d98: and eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0012ad20: and eax, dword ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x00063df4: and eax, dword ptr [ebx + 0x75ff08ec]; sub byte ptr [ecx + 0x1c858bc2], cl; idiv edi; call dword ptr [ecx - 0x75]; 
0x00024d0d: and eax, dword ptr [ebx - 0x17acf314]; jns 0x24d5c; adc dword ptr [eax], eax; mov dword ptr [esp], esi; call ebx; 
0x00100091: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100091: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0013a539: and eax, dword ptr [edi - 3]; dec dword ptr [ebp - 0x76aaff8a]; ret 0x5657; 
0x0013cf28: and eax, dword ptr [edx + ebx*4]; pop ebx; setne al; movzx eax, al; ret; 
0x000319c8: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x000293c4: and eax, dword ptr [esp + 8]; ret; 
0x000e2837: and eax, dword ptr fs:[eax]; add byte ptr [ecx + 0x2364b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x000e283d: and eax, dword ptr fs:[eax]; add byte ptr [ecx], bh; ret 0xe74; 
0x0002f30e: and eax, ecx; ret; 
0x0009c7ef: and eax, edx; je 0x9c8d0; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0002f661: and eax, edx; ret; 
0x001620a6: and eax, edx; test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x001176cb: and ebp, 0x5c; cli; call dword ptr [eax - 0x18]; 
0x001178b2: and ebp, 0x5c; cli; call dword ptr [eax - 0x73]; 
0x0012118a: and ebp, 0x5f; cli; call dword ptr [eax + 0x56]; 
0x00125ac3: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000960d2: and ebp, dword ptr [esi + 0xa]; add byte ptr [ecx + 0xec16ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0006e90c: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0013caeb: and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00034d17: and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0010303e: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00085214: and ebx, 4; lea eax, [eax - 0x924c0]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0016304c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000f7a0a: and ecx, 0x35; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0008b4ee: and ecx, 0x44; cli; call dword ptr [edi + 0x55]; 
0x001108b2: and ecx, 0x59; cli; call dword ptr [eax - 0x18]; 
0x001108b2: and ecx, 0x59; cli; call dword ptr [eax - 0x18]; sbb dword ptr [ecx], 1; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x00110aa3: and ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x0002fcb4: and ecx, 0x7fff0000; mov edx, ecx; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x000d1916: and ecx, 0x80; cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0010ecf2: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0010ed91: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000ff179: and ecx, 0xfff00; pop edi; or eax, ecx; ret; 
0x000f5b8b: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x000857d6: and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x000f5d00: and ecx, dword ptr [eax - 0x74c8dbbc]; test byte ptr [esp + eax*4], ah; add byte ptr [eax], al; add byte ptr [ebp + 0x540288], cl; add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x0012c126: and ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000a1174: and ecx, dword ptr [ebx + 0x31142444]; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00080a2a: and ecx, dword ptr [ebx - 0x19769]; jmp dword ptr [ebp - 0x75]; 
0x0002cb9e: and ecx, dword ptr [ebx - 0x1cb63]; dec dword ptr [ebp - 0x1b75ff7d]; call dword ptr [eax + 0x6a]; 
0x000cd1dc: and ecx, dword ptr [ebx - 0x74e7db84]; mov word ptr [edi - 0x604bc], es; add ecx, edi; jmp ecx; 
0x000cd0dc: and ecx, dword ptr [ecx - 6]; call dword ptr [eax - 0x18]; 
0x000e7773: and ecx, dword ptr [edi]; test byte ptr [esi - 0x76fffffc], ch; ret 0x44c7; 
0x0011e9f1: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0x2c3c; 
0x001300b8: and edi, 0x62; cli; call dword ptr [eax - 0x73]; 
0x0014888a: and edi, 0xf; je 0x1488a0; call 0x13cee5; add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014a88a: and edi, 0xf; je 0x14a8a0; call 0x13cee5; add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014c87c: and edi, 0xf; je 0x14c8a0; call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014eabf: and edi, 0xf; je 0x14eae0; call 0x13cee5; add ebx, 0x414f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fa9f: and edi, 0xf; je 0x14fac0; call 0x13cee5; add ebx, 0x406d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00150a9f: and edi, 0xf; je 0x150ac0; call 0x13cee5; add ebx, 0x3f897; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00151bcc: and edi, 0xf; je 0x151bf0; call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00153d6f: and edi, 0xf; je 0x153d90; call 0x13cee5; add ebx, 0x3ca07; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000f6a64: and edi, dword ptr [eax + 0x14d]; call dword ptr gs:[0x10]; 
0x000f6bd4: and edi, dword ptr [eax + 0x14e]; call dword ptr gs:[0x10]; 
0x00101104: and edi, dword ptr [eax + 0x151]; call dword ptr gs:[0x10]; 
0x000f7864: and edi, dword ptr [eax + 0x8e]; call dword ptr gs:[0x10]; 
0x000ea374: and edi, dword ptr [eax + 0xb4]; call dword ptr gs:[0x10]; 
0x000ea424: and edi, dword ptr [eax + 0xb5]; call dword ptr gs:[0x10]; 
0x0010d9f5: and edi, dword ptr [eax + 3]; call dword ptr gs:[0x10]; 
0x000b08f9: and edi, dword ptr [eax]; stc; dec dword ptr [ebx - 0x362f7b]; call dword ptr [ebx - 1]; 
0x0011a6a6: and edi, dword ptr [ecx]; ret 0x4572; 
0x000ac99c: and edi, dword ptr [ecx]; ret; 
0x0014adde: and edi, edi; inc dword ptr [ecx + 0x44c1fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ad45: and edi, edi; inc dword ptr [ecx + 0x44cb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ab3d: and edi, edi; inc dword ptr [ecx + 0x44f80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00074ebe: and edi, edi; je 0x74ee6; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0011c895: and edi, edi; jmp dword ptr [esi - 0x70]; 
0x0007c774: and edi, edx; je 0x7c797; mov ebp, dword ptr [esi - 0x170]; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x00103d82: and edx, 0x1000; mov eax, edx; ret; 
0x00103418: and edx, 0x100; mov eax, edx; ret; 
0x00103c82: and edx, 0x2000; mov eax, edx; ret; 
0x00103a82: and edx, 0x200; mov eax, edx; ret; 
0x00103b82: and edx, 0x4000; mov eax, edx; ret; 
0x00103882: and edx, 0x400; mov eax, edx; ret; 
0x0013cc66: and edx, 0x60; jne 0x1a694; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0002f9d9: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0002fa88: and edx, 0x80000000; mov dword ptr [esp], edx; fstp dword ptr [eax]; fld dword ptr [esp]; add esp, 4; ret; 
0x00103b02: and edx, 0x8000; mov eax, edx; ret; 
0x000e2fb6: and edx, 0xf; mov eax, edx; ret; 
0x000ff104: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000716f0: and edx, 0xffffffcf; mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x0007b743: and edx, 0xfffffff0; test eax, eax; mov eax, 8; cmovne eax, edx; mov dword ptr [ecx + 0x1e08], eax; ret; 
0x0010133b: and edx, 0xfffffffc; add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x001259e1: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001036a0: and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x00103902: and edx, 1; mov eax, edx; ret; 
0x001033f9: and edx, 1; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00103982: and edx, 2; mov eax, edx; ret; 
0x0009d5db: and edx, 3; rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00103c02: and edx, 4; mov eax, edx; ret; 
0x00103802: and edx, 8; mov eax, edx; ret; 
0x000fecee: and edx, dword ptr [eax - 0x73]; adc dword ptr [esi], 0x4d; cli; call dword ptr [eax - 0x18]; 
0x0009cf26: and edx, ecx; test edx, edx; je 0x9cf00; bsr ecx, edx; add eax, ecx; ret; 
0x00150c61: and esi, esi; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00083064: and esp, 0xffffff8a; cli; call dword ptr [eax - 0x18]; 
0x0012b0ed: and esp, 0xffffffa2; cli; call dword ptr [eax - 0x73]; 
0x001388a8: arpl bp, di; jmp dword ptr [esi - 0x70]; 
0x0015e997: arpl bx, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001350dd: arpl dx, di; call dword ptr [eax - 0x18]; 
0x001350fd: arpl dx, di; call dword ptr [eax - 0x18]; cmp bh, byte ptr [0x55e8ffef]; wait; std; jmp dword ptr [esi - 0x70]; 
0x00130efc: arpl dx, di; call dword ptr [eax - 0x73]; 
0x00132f5b: arpl dx, di; call dword ptr [ebp + 0x6a]; 
0x00116647: arpl dx, di; call dword ptr [esi + 0x6a]; 
0x000cb8a9: arpl si, bp; call dword ptr [eax + 0x6a]; 
0x0012a673: arpl sp, si; call dword ptr [eax + 0x55]; 
0x0012d5a4: arpl word ptr [0xec830000], ax; or al, 0x8b; inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x001493db: arpl word ptr [eax + eax], ax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ec86b: arpl word ptr [eax], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003ddb8: arpl word ptr [eax], ax; add byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x0005dcb7: arpl word ptr [eax], bx; add byte ptr [ebx - 0x6f72f314], al; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x000d64de: arpl word ptr [ebx + 0x5e5b4cc4], ax; pop edi; pop ebp; ret; 
0x000f0f6f: arpl word ptr [ebx + 0x7d8d04ec], ax; test byte ptr [ecx - 0xcb6b], cl; call dword ptr [edi + 0x52]; 
0x000f5772: arpl word ptr [ebx - 0x2f76e73c], ax; pop ebx; ret; 
0x0006e2f4: arpl word ptr [ebx - 0x7f74f314], ax; mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0003528c: arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b251c: arpl word ptr [edi + 0x5e], bx; ret; 
0x000c6b48: arpl word ptr [edi], ax; add byte ptr [ecx + 0x11d4b5c3], al; add byte ptr [ecx + 0x154cec], al; add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x00094a92: arpl word ptr [edx + ecx + 0x4ac18100], ax; salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096be6: arpl word ptr [edx], cx; add byte ptr [ecx + 0xeb6e7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096bca: arpl word ptr [edx], cx; add byte ptr [ecx + 0xeb703c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009c034: arpl word ptr [esi], cx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000f634d: bnd call dword ptr [eax + 0x4c8bda89]; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0010a3b4: bnd call dword ptr [eax + 0x6a]; 
0x0010406b: bnd call dword ptr [eax - 0x18]; 
0x0010c73d: bnd call dword ptr [edx - 1]; 
0x0008ad5c: bnd je 0x8ad50; pop ebx; pop esi; ret; 
0x000c57fa: bnd je 0xc5810; cmp eax, -1; mov edx, 0; cmove eax, edx; pop ebx; ret; 
0x000ee444: bnd jmp dword ptr [ebp - 0x75]; 
0x000f250f: bnd jmp dword ptr [ebp - 0x77]; 
0x0013e110: bnd jmp dword ptr [ecx]; 
0x0013e110: bnd jmp dword ptr [ecx]; ret 0xc483; 
0x000ec0a4: bnd jmp dword ptr [esi - 0x70]; 
0x000ecbbc: bnd jmp dword ptr [esi - 0x70]; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x00115cee: bnd jmp dword ptr [esi - 0x77]; 
0x0001acdf: bnd jmp edx; 
0x00094f0a: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x00162b13: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x0014952b: bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000347fa: bound eax, qword ptr [ebx + 0x5e5b14c4]; ret; 
0x00127262: bound eax, qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00161e5a: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x000df1c1: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00096cde: bound ecx, qword ptr [edx]; add byte ptr [ecx + 0xeb55fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096bf9: bound ecx, qword ptr [edx]; add byte ptr [ecx + 0xeb6d4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b14da: bound edi, qword ptr [ecx - 9]; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x00072074: bound edi, qword ptr [edi - 6]; jmp dword ptr [esi - 0x70]; 
0x00076ba6: bound edi, qword ptr [esi + edx]; ja 0x76be0; movzx eax, al; mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x0009fbb4: bound edx, qword ptr [eax - 0x73]; xchg dword ptr [ebp + ecx*4 - 6], ebx; call dword ptr [eax - 0x18]; 
0x000f598a: bound edx, qword ptr [esi - 0xe]; jmp dword ptr [esi - 0x70]; 
0x00072dda: bound esp, qword ptr [eax - 5]; dec dword ptr [ebp - 0x5847b7d]; call dword ptr [eax - 0x73]; 
0x0009bf34: bound esp, qword ptr [esi + ecx]; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00085275: bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x0009cbd0: bsf eax, eax; add eax, edi; pop edi; ret; 
0x0009d14a: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0009d2b0: bsf eax, eax; add eax, edx; ret; 
0x0009cbe0: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0009cbf0: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0009cbc0: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0009d2c0: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0009d2d0: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0009d2a0: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x0009cb0c: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009d297: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000852a8: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x0009cc00: bsf eax, eax; sub edx, eax; jbe 0x9cc40; add eax, edi; pop edi; ret; 
0x0009cc13: bsf eax, eax; sub edx, eax; jbe 0x9cc40; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0009cc23: bsf eax, eax; sub edx, eax; jbe 0x9cc40; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009cc33: bsf eax, eax; sub edx, eax; jbe 0x9cc40; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000852c0: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0009d101: bsf ecx, ecx; add eax, ecx; ret; 
0x0009c929: bsf ecx, ecx; sub edx, ecx; jbe 0x9c960; add eax, ecx; ret; 
0x0008b6b3: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x0008b6c0: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x0008b6cd: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x0008b6a9: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0009bf00: bsf edx, edx; call 0x13cef9; add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bec6: bsf edx, edx; call 0x13cef9; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bc6: bsf edx, edx; call 0x13cef9; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095ed9: bsf edx, edx; call 0x13cef9; add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095eb4: bsf edx, edx; call 0x13cef9; add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009cde4: bsr eax, eax; add eax, ecx; ret; 
0x0009c775: bsr eax, eax; add eax, edi; pop edi; ret; 
0x0009c8c3: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0009ce90: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0009cea0: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x0009ceb0: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0009cef0: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x30]; ret; 
0x0009cee0: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x20]; ret; 
0x0009ced0: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x10]; ret; 
0x0009cec0: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0x9cf00; add eax, ecx; ret; 
0x0009cf2c: bsr ecx, edx; add eax, ecx; ret; 
0x0009cf84: bsr edi, edi; add eax, edi; pop edi; ret; 
0x0009cfc1: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0009cfd0: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0010ed2b: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0010ecc4: bswap eax; ret; 
0x001267cf: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00151bd2: btr esi, edi; inc dword ptr [ecx + 0x3e9eac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000489df: call 0x100489ad; xchg ebp, eax; ret 0xe983; 
0x0004924b: call 0x10049219; xchg edi, eax; ret 0xf039; 
0x000b0f71: call 0x100b0f3f; xchg edi, eax; ret 0xbd39; 
0x0013aa51: call 0x1012e659; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x00101651: call 0x101770; add esp, 0x1c; ret; 
0x001021d0: call 0x101950; mov dword ptr [ebx + 0x1c0], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00102d1a: call 0x102240; pop edx; pop ecx; pop eax; ret; 
0x001026ec: call 0x1025c0; add esp, 4; ret; 
0x00107e2e: call 0x1079b0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00109bf9: call 0x1099d0; add esp, 0x28; pop ebx; ret; 
0x0010c4ae: call 0x10af20; add esp, 0x1c; ret; 
0x0010b0ce: call 0x10afc0; add esp, 0x18; pop ebx; ret; 
0x00031c0f: call 0x10b5f0fc; add byte ptr [0x1b23eb], al; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0010a0c8: call 0x10c450; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00108c1e: call 0x10c450; add esp, 0xc; push eax; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8f5: call 0x10c450; add esp, 0xc; push eax; push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x0010dfd4: call 0x10d590; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00131688: call 0x10ec60; lea esi, [esi]; mov eax, 1; ret; 
0x00125f93: call 0x10ec60; lea esi, [esi]; nop; mov eax, 2; ret; 
0x00083024: call 0x10ec60; lea esi, [esi]; ret; 
0x00132a39: call 0x10ec60; nop; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cae9: call 0x10ec60; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x000c0ad9: call 0x10ec60; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0012a7e6: call 0x10ec60; nop; nop; nop; mov eax, 2; ret; 
0x0010cdb7: call 0x10ec60; nop; nop; ret; 
0x00123eaa: call 0x10ec60; nop; ret; 
0x0013269b: call 0x10ec60; ret; 
0x00132c3b: call 0x10ec60; xor eax, eax; ret; 
0x001138d8: call 0x1138f0; add esp, 0x1c; ret; 
0x00113d78: call 0x113d90; add esp, 0x1c; ret; 
0x001154b9: call 0x1147b0; add esp, 0x1c; ret; 
0x0011549f: call 0x114980; add esp, 0x2c; ret; 
0x001155c5: call 0x1154d0; add esp, 0x2c; ret; 
0x00115ded: call 0x1157b0; add esp, 0x2c; ret; 
0x0011761e: call 0x116fe0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0011a3e2: call 0x119700; cmp eax, -0xb; je 0x11a3e0; add esp, 8; pop ebx; ret; 
0x0016c18b: call 0x11c410; add esp, 0x1c; ret; 
0x0011ce9b: call 0x11ccd0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011f43b: call 0x11e7f0; add esp, 0x18; pop ebx; ret; 
0x0011efa2: call 0x11ebb0; or dword ptr [ebx + 0x2f74], 2; add esp, 8; pop ebx; ret; 
0x0011f5e9: call 0x11f4c0; add esp, 0x1c; ret; 
0x00123857: call 0x125720; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0012aadd: call 0x127010; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00124ac5: call 0x12c5f0; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0012deb5: call 0x12dbf0; add esp, 0x3c; ret; 
0x0012ec62: call 0x12e9c0; add esp, 0x10; add esp, 0xc; ret; 
0x0012ec47: call 0x12eac0; add esp, 0x10; add esp, 0xc; ret; 
0x0012f077: call 0x12eec0; add esp, 0x2c; ret; 
0x00132ed7: call 0x12f310; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00130f51: call 0x130c80; add esp, 0x1c; ret; 
0x0012577d: call 0x131d90; add esp, 0x1c; ret; 
0x00131f75: call 0x131db0; add esp, 0x1c; ret; 
0x00127f20: call 0x132010; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00138b81: call 0x138b40; add esp, 0x18; pop ebx; ret; 
0x0016b630: call 0x139490; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000c1993: call 0x139490; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000c1af9: call 0x139490; add esp, 0x10; mov eax, edi; call eax; 
0x001174b4: call 0x139490; mov dword ptr [esp], ebp; call ebx; 
0x001171a8: call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0001c5c9: call 0x139490; mov dword ptr [esp], ebx; call edi; 
0x0001bf04: call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x0001c078: call 0x139490; mov dword ptr [esp], ebx; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x00024d12: call 0x139490; mov dword ptr [esp], esi; call ebx; 
0x00116873: call 0x139490; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0010c69b: call 0x139900; add esp, 0x10; mov dword ptr [ebx + 0x2940], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0013cc4b: call 0x13ca90; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cc97: call 0x13caf0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cc2e: call 0x13cb00; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0015edcb: call 0x13cee5; add ebx, 0x31bb4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015ed06: call 0x13cee5; add ebx, 0x31c79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d2dc: call 0x13cee5; add ebx, 0x3359f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154d0d: call 0x13cee5; add ebx, 0x3baae; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154b19: call 0x13cee5; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154034: call 0x13cee5; add ebx, 0x3c687; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153f2a: call 0x13cee5; add ebx, 0x3c791; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153e23: call 0x13cee5; add ebx, 0x3c898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d27: call 0x13cee5; add ebx, 0x3c994; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153c07: call 0x13cee5; add ebx, 0x3c9f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d74: call 0x13cee5; add ebx, 0x3ca07; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00153973: call 0x13cee5; add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015335a: call 0x13cee5; add ebx, 0x3d0e1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015333c: call 0x13cee5; add ebx, 0x3d0ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001532a3: call 0x13cee5; add ebx, 0x3d198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001531dc: call 0x13cee5; add ebx, 0x3d25f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153143: call 0x13cee5; add ebx, 0x3d2f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015307c: call 0x13cee5; add ebx, 0x3d3bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152fe3: call 0x13cee5; add ebx, 0x3d458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152f1c: call 0x13cee5; add ebx, 0x3d51f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152e83: call 0x13cee5; add ebx, 0x3d5b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152dbc: call 0x13cee5; add ebx, 0x3d67f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152d23: call 0x13cee5; add ebx, 0x3d718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152c5c: call 0x13cee5; add ebx, 0x3d7df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152bc3: call 0x13cee5; add ebx, 0x3d878; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152afc: call 0x13cee5; add ebx, 0x3d93f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152a63: call 0x13cee5; add ebx, 0x3d9d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015299c: call 0x13cee5; add ebx, 0x3da9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152903: call 0x13cee5; add ebx, 0x3db38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015283c: call 0x13cee5; add ebx, 0x3dbff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001527a3: call 0x13cee5; add ebx, 0x3dc98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001526dc: call 0x13cee5; add ebx, 0x3dd5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152643: call 0x13cee5; add ebx, 0x3ddf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015257c: call 0x13cee5; add ebx, 0x3debf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015241c: call 0x13cee5; add ebx, 0x3e01f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152383: call 0x13cee5; add ebx, 0x3e0b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001522bc: call 0x13cee5; add ebx, 0x3e17f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152223: call 0x13cee5; add ebx, 0x3e218; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015215c: call 0x13cee5; add ebx, 0x3e2df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001520c3: call 0x13cee5; add ebx, 0x3e378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151ffc: call 0x13cee5; add ebx, 0x3e43f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151f63: call 0x13cee5; add ebx, 0x3e4d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151e9b: call 0x13cee5; add ebx, 0x3e660; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151d96: call 0x13cee5; add ebx, 0x3e6a5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151c90: call 0x13cee5; add ebx, 0x3e86b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151b87: call 0x13cee5; add ebx, 0x3e8b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151a5d: call 0x13cee5; add ebx, 0x3e91e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151bd1: call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00151859: call 0x13cee5; add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150d64: call 0x13cee5; add ebx, 0x3f517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150c5a: call 0x13cee5; add ebx, 0x3f621; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150b53: call 0x13cee5; add ebx, 0x3f728; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a57: call 0x13cee5; add ebx, 0x3f824; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150849: call 0x13cee5; add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150aa4: call 0x13cee5; add ebx, 0x3f897; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fd64: call 0x13cee5; add ebx, 0x40357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fc5a: call 0x13cee5; add ebx, 0x40461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fb53: call 0x13cee5; add ebx, 0x40568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fa4a: call 0x13cee5; add ebx, 0x40671; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f879: call 0x13cee5; add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014faa4: call 0x13cee5; add ebx, 0x406d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014fa5a: call 0x13cee5; add ebx, 0x40761; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ed84: call 0x13cee5; add ebx, 0x41177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ec7a: call 0x13cee5; add ebx, 0x41281; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eb73: call 0x13cee5; add ebx, 0x41388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ea6a: call 0x13cee5; add ebx, 0x41491; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e957: call 0x13cee5; add ebx, 0x414e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eac4: call 0x13cee5; add ebx, 0x414f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014ea7a: call 0x13cee5; add ebx, 0x41581; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e6a3: call 0x13cee5; add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e00a: call 0x13cee5; add ebx, 0x41c71; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dfec: call 0x13cee5; add ebx, 0x41c8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014df53: call 0x13cee5; add ebx, 0x41d28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014de8c: call 0x13cee5; add ebx, 0x41def; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ddf3: call 0x13cee5; add ebx, 0x41e88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dd2c: call 0x13cee5; add ebx, 0x41f4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dc93: call 0x13cee5; add ebx, 0x41fe8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dbcc: call 0x13cee5; add ebx, 0x420af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014db33: call 0x13cee5; add ebx, 0x42148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014da6c: call 0x13cee5; add ebx, 0x4220f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d9d3: call 0x13cee5; add ebx, 0x422a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d90c: call 0x13cee5; add ebx, 0x4236f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d873: call 0x13cee5; add ebx, 0x42408; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d7ac: call 0x13cee5; add ebx, 0x424cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d713: call 0x13cee5; add ebx, 0x42568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d64c: call 0x13cee5; add ebx, 0x4262f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d5b3: call 0x13cee5; add ebx, 0x426c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d4ec: call 0x13cee5; add ebx, 0x4278f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d453: call 0x13cee5; add ebx, 0x42828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d38c: call 0x13cee5; add ebx, 0x428ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d2f3: call 0x13cee5; add ebx, 0x42988; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d22c: call 0x13cee5; add ebx, 0x42a4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d193: call 0x13cee5; add ebx, 0x42ae8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d0cc: call 0x13cee5; add ebx, 0x42baf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d033: call 0x13cee5; add ebx, 0x42c48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cf6c: call 0x13cee5; add ebx, 0x42d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ced3: call 0x13cee5; add ebx, 0x42da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ce0c: call 0x13cee5; add ebx, 0x42e6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cd73: call 0x13cee5; add ebx, 0x42f08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ccac: call 0x13cee5; add ebx, 0x42fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cc13: call 0x13cee5; add ebx, 0x43068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb4b: call 0x13cee5; add ebx, 0x431f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ca46: call 0x13cee5; add ebx, 0x43235; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c940: call 0x13cee5; add ebx, 0x433fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c837: call 0x13cee5; add ebx, 0x43444; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c543: call 0x13cee5; add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c881: call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014bf0a: call 0x13cee5; add ebx, 0x43af1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014beec: call 0x13cee5; add ebx, 0x43b0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014be53: call 0x13cee5; add ebx, 0x43ba8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd9c: call 0x13cee5; add ebx, 0x43c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd03: call 0x13cee5; add ebx, 0x43cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bc4c: call 0x13cee5; add ebx, 0x43daf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bbb3: call 0x13cee5; add ebx, 0x43e48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bafc: call 0x13cee5; add ebx, 0x43eff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ba63: call 0x13cee5; add ebx, 0x43f98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b9ac: call 0x13cee5; add ebx, 0x4404f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b913: call 0x13cee5; add ebx, 0x440e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b85c: call 0x13cee5; add ebx, 0x4419f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b7c3: call 0x13cee5; add ebx, 0x44238; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b70c: call 0x13cee5; add ebx, 0x442ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b673: call 0x13cee5; add ebx, 0x44388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b5bc: call 0x13cee5; add ebx, 0x4443f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b523: call 0x13cee5; add ebx, 0x444d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b46c: call 0x13cee5; add ebx, 0x4458f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b3d3: call 0x13cee5; add ebx, 0x44628; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b31c: call 0x13cee5; add ebx, 0x446df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b283: call 0x13cee5; add ebx, 0x44778; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b1cc: call 0x13cee5; add ebx, 0x4482f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b133: call 0x13cee5; add ebx, 0x448c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b07c: call 0x13cee5; add ebx, 0x4497f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014afe3: call 0x13cee5; add ebx, 0x44a18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014af2c: call 0x13cee5; add ebx, 0x44acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ae93: call 0x13cee5; add ebx, 0x44b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014addc: call 0x13cee5; add ebx, 0x44c1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ad43: call 0x13cee5; add ebx, 0x44cb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ac8c: call 0x13cee5; add ebx, 0x44d6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014abf3: call 0x13cee5; add ebx, 0x44e08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ab3b: call 0x13cee5; add ebx, 0x44f80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aa36: call 0x13cee5; add ebx, 0x44fc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a930: call 0x13cee5; add ebx, 0x4518b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a82a: call 0x13cee5; add ebx, 0x451d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a5a3: call 0x13cee5; add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a88f: call 0x13cee5; add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014a840: call 0x13cee5; add ebx, 0x4537b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149f0a: call 0x13cee5; add ebx, 0x45871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149eec: call 0x13cee5; add ebx, 0x4588f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149e53: call 0x13cee5; add ebx, 0x45928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d9c: call 0x13cee5; add ebx, 0x459df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d03: call 0x13cee5; add ebx, 0x45a78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149c4c: call 0x13cee5; add ebx, 0x45b2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149bb3: call 0x13cee5; add ebx, 0x45bc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149afc: call 0x13cee5; add ebx, 0x45c7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149a63: call 0x13cee5; add ebx, 0x45d18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001499ac: call 0x13cee5; add ebx, 0x45dcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149913: call 0x13cee5; add ebx, 0x45e68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014985c: call 0x13cee5; add ebx, 0x45f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001497c3: call 0x13cee5; add ebx, 0x45fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014970c: call 0x13cee5; add ebx, 0x4606f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149673: call 0x13cee5; add ebx, 0x46108; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001495bc: call 0x13cee5; add ebx, 0x461bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149523: call 0x13cee5; add ebx, 0x46258; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014946c: call 0x13cee5; add ebx, 0x4630f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001493d3: call 0x13cee5; add ebx, 0x463a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014931c: call 0x13cee5; add ebx, 0x4645f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149283: call 0x13cee5; add ebx, 0x464f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001491cc: call 0x13cee5; add ebx, 0x465af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149133: call 0x13cee5; add ebx, 0x46648; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014907c: call 0x13cee5; add ebx, 0x466ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148fe3: call 0x13cee5; add ebx, 0x46798; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148f2c: call 0x13cee5; add ebx, 0x4684f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148e93: call 0x13cee5; add ebx, 0x468e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148ddc: call 0x13cee5; add ebx, 0x4699f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148d43: call 0x13cee5; add ebx, 0x46a38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148c8c: call 0x13cee5; add ebx, 0x46aef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148bf3: call 0x13cee5; add ebx, 0x46b88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148b3b: call 0x13cee5; add ebx, 0x46d00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148a36: call 0x13cee5; add ebx, 0x46d45; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148930: call 0x13cee5; add ebx, 0x46f0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014882a: call 0x13cee5; add ebx, 0x46f51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014888f: call 0x13cee5; add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00148840: call 0x13cee5; add ebx, 0x470fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00146ef8: call 0x13cee5; add ebx, 0x48683; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146e48: call 0x13cee5; add ebx, 0x48733; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146d84: call 0x13cee5; add ebx, 0x48777; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001469a8: call 0x13cee5; add ebx, 0x48953; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001468f8: call 0x13cee5; add ebx, 0x48a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146810: call 0x13cee5; add ebx, 0x48a6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146392: call 0x13cee5; add ebx, 0x48ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146336: call 0x13cee5; add ebx, 0x48d45; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146278: call 0x13cee5; add ebx, 0x48e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146190: call 0x13cee5; add ebx, 0x48e6b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145e1e: call 0x13cee5; add ebx, 0x48fdd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145d62: call 0x13cee5; add ebx, 0x49099; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00145d06: call 0x13cee5; add ebx, 0x490f5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00079d00: call 0x13cee9; add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00031c30: call 0x13cee9; add eax, 0x1b23cb; mov eax, dword ptr [eax + 0x48]; ret; 
0x00031c10: call 0x13cee9; add eax, 0x1b23eb; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00029410: call 0x13cee9; add eax, 0x1babeb; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293f0: call 0x13cee9; add eax, 0x1bac0b; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x000293d0: call 0x13cee9; add eax, 0x1bac2b; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x00024d50: call 0x13cee9; add eax, 0x1bf2ab; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x0001beb0: call 0x13cee9; add eax, 0x1c814b; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001be90: call 0x13cee9; add eax, 0x1c816b; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001b5b0: call 0x13cee9; add eax, 0x1c8a4b; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0001b060: call 0x13cee9; add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x0001b040: call 0x13cee9; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x00145a80: call 0x13cee9; add eax, 0x9e57b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143390: call 0x13cee9; add eax, 0xa0c6b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143370: call 0x13cee9; add eax, 0xa0c8b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143330: call 0x13cee9; add eax, 0xa0ccb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143310: call 0x13cee9; add eax, 0xa0ceb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001432f0: call 0x13cee9; add eax, 0xa0d0b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001432d0: call 0x13cee9; add eax, 0xa0d2b; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0012f080: call 0x13cee9; add eax, 0xb4f7b; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x0011f490: call 0x13cee9; add eax, 0xc4b6b; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x0010f000: call 0x13cee9; add eax, 0xd4ffb; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x00102cf0: call 0x13cee9; add eax, 0xe130b; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000ecb40: call 0x13cee9; add eax, 0xf74bb; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009c57c: call 0x13cef9; add ecx, 0xe5e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c071: call 0x13cef9; add ecx, 0xe639e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c04c: call 0x13cef9; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c02c: call 0x13cef9; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c00f: call 0x13cef9; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf70: call 0x13cef9; add ecx, 0xe641f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfe2: call 0x13cef9; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf52: call 0x13cef9; add ecx, 0xe643d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfcb: call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfb0: call 0x13cef9; add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf2d: call 0x13cef9; add ecx, 0xe6462; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bf8e: call 0x13cef9; add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf03: call 0x13cef9; add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009beea: call 0x13cef9; add ecx, 0xe64a5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bec9: call 0x13cef9; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bea5: call 0x13cef9; add ecx, 0xe64ea; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009be87: call 0x13cef9; add ecx, 0xe6508; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009be04: call 0x13cef9; add ecx, 0xe658b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c52: call 0x13cef9; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c2d: call 0x13cef9; add ecx, 0xe96e2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c03: call 0x13cef9; add ecx, 0xe970c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bea: call 0x13cef9; add ecx, 0xe9725; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bc9: call 0x13cef9; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098ba5: call 0x13cef9; add ecx, 0xe976a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b87: call 0x13cef9; add ecx, 0xe9788; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b6b: call 0x13cef9; add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096cdc: call 0x13cef9; add ecx, 0xeb55f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bf7: call 0x13cef9; add ecx, 0xeb6d4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096be4: call 0x13cef9; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bc8: call 0x13cef9; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960d1: call 0x13cef9; add ecx, 0xec16a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960ac: call 0x13cef9; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009608c: call 0x13cef9; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009606f: call 0x13cef9; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fd0: call 0x13cef9; add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096042: call 0x13cef9; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009602b: call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096010: call 0x13cef9; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fee: call 0x13cef9; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095efc: call 0x13cef9; add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095edc: call 0x13cef9; add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095eb7: call 0x13cef9; add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000955dc: call 0x13cef9; add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954f7: call 0x13cef9; add ecx, 0xecc74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954e4: call 0x13cef9; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954c8: call 0x13cef9; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a91: call 0x13cef9; add ecx, 0xed64a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a6c: call 0x13cef9; add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a4c: call 0x13cef9; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a2f: call 0x13cef9; add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094990: call 0x13cef9; add ecx, 0xed6cb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094a02: call 0x13cef9; add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949eb: call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949d0: call 0x13cef9; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ae: call 0x13cef9; add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948cc: call 0x13cef9; add ecx, 0xed78f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948ac: call 0x13cef9; add ecx, 0xed7af; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094887: call 0x13cef9; add ecx, 0xed7d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013dc43: call 0x13d3a0; add esp, 0x18; pop ebx; ret; 
0x0011adaf: call 0x15435b5; mov eax, 2; ret; 
0x00083651: call 0x19020; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000eb4dd: call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x001175a4: call 0x190d8; mov dword ptr [ebx + 0xf40], eax; add esp, 0x18; pop ebx; ret; 
0x0002daef: call 0x190e8; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000254c0: call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0007b3af: call 0x190e8; add esp, 0x10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00028a70: call 0x190e8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00025c7f: call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00073bdf: call 0x190e8; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0008b428: call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x000f5830: call 0x1aff0; add esp, 4; pop ebx; pop esi; ret; 
0x000ffd00: call 0x1aff0; pop ebx; pop esi; pop edi; ret; 
0x0001b598: call 0x1b230; mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x0007b6c0: call 0x1c839c9; mov dword ptr [edx + 0x150], eax; ret; 
0x0001dc82: call 0x1d790; or dword ptr [ebx + 0xfb0], 2; add esp, 8; pop ebx; ret; 
0x00074887: call 0x1e7cb90; ret; 
0x00074897: call 0x1e7cba1; ret; 
0x0010c4f5: call 0x1f14808; pop ebx; ret; 
0x0011adac: call 0x1fa30b4; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0002e818: call 0x20006; jmp dword ptr [esi - 0x70]; 
0x0012e8c3: call 0x245f73c9; or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0002812a: call 0x28140; add esp, 0x1c; ret; 
0x00019f67: call 0x29024; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a237: call 0x292f4; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000299d8: call 0x29480; mov edx, dword ptr [esp + 0x14]; mov eax, edx; add esp, 0xc; ret; 
0x0011cbae: call 0x29a20; add esp, 0x10; add esp, 0xc; ret; 
0x0012c3b6: call 0x29a20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e5f27: call 0x29a20; add esp, 0x18; pop ebx; ret; 
0x00029a4d: call 0x29a20; add esp, 0x1c; ret; 
0x00029a35: call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0d5: call 0x2b090; add esp, 0x2c; ret; 
0x000eb4d7: call 0x2ef75e1; push eax; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x00030ac6: call 0x30a40; pop ecx; pop edx; ret; 
0x00031a15: call 0x312c0; add esp, 0x1c; ret; 
0x00148e9a: call 0x3149307; sbb al, 0x8b; jmp ebx; 
0x0014b91a: call 0x314bd5f; sbb al, 0x8b; jmp ebx; 
0x0014d19a: call 0x314d5c9; sbb al, 0x8b; jmp ebx; 
0x0014dc9a: call 0x314e0be; sbb al, 0x8b; jmp ebx; 
0x00031d6d: call 0x31ca0; add esp, 0x1c; ret; 
0x00031b92: call 0x31f58e98; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00031bf2: call 0x31f58ef8; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00032dd5: call 0x32aa0; add esp, 0x2c; ret; 
0x0003347a: call 0x32fc0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00033d90: call 0x33c50; add esp, 0x1c; ret; 
0x0013cfa9: call 0x33d70; add esp, 0x1c; ret; 
0x00034fad: call 0x34fc0; add esp, 0x1c; ret; 
0x00035054: call 0x35070; add esp, 0x10; add esp, 0xc; ret; 
0x000350c4: call 0x350e0; add esp, 0x10; add esp, 0xc; ret; 
0x00034f28: call 0x35110; add esp, 0x1c; ret; 
0x00034f59: call 0x35140; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00034f88: call 0x35190; add esp, 0x1c; ret; 
0x0003212b: call 0x35e60; add esp, 0x1c; ret; 
0x00043771: call 0x35ef0; add esp, 0x1c; ret; 
0x0003216b: call 0x35f20; add esp, 0x1c; ret; 
0x00043791: call 0x35f50; add esp, 0x1c; ret; 
0x00035e56: call 0x35fb0; add esp, 0x2c; ret; 
0x00035eb6: call 0x36540; add esp, 0x2c; ret; 
0x00035f16: call 0x36ab0; add esp, 0x2c; ret; 
0x00035f76: call 0x37230; add esp, 0x2c; ret; 
0x00107322: call 0x3727b4; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add al, ch; mov eax, 0x8100035b; ret 0xcccb; 
0x00032109: call 0x37a60; add esp, 0x1c; ret; 
0x000379f2: call 0x38270; add esp, 0x1c; ret; 
0x00037a52: call 0x3b1c0; add esp, 0x1c; ret; 
0x000cd1d6: call 0x3c0554fc; ja 0xcd200; mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x00037ab2: call 0x3e100; add esp, 0x1c; ret; 
0x0014a193: call 0x4092b18b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c183: call 0x4092d17b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0014e293: call 0x4092f28b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001535d3: call 0x409345cb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x000410d6: call 0x40b20; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00041759: call 0x410f0; add esp, 0x1c; ret; 
0x00041904: call 0x41820; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0004194c: call 0x41960; add esp, 0x2c; ret; 
0x001535ce: call 0x42944539; call 0x409345cb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00145fd2: call 0x42ea6f3d; clc; pop ebx; ret; 
0x00146612: call 0x42ea757d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146ba2: call 0x42ea7b0d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001470e2: call 0x42ea804d; clc; pop ebx; ret; 
0x000438ec: call 0x438f1; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0016b5cb: call 0x43b2aa8; fstp st(0); add esp, 0x20; ret; 
0x00043bd2: call 0x43b90; jmp eax; 
0x00025569: call 0x443de6f; add esp, 8; pop ebx; ret; 
0x0004d2b2: call 0x4abe0; add esp, 0x1c; ret; 
0x0007b6bd: call 0x4f077c3; add eax, 1; mov dword ptr [edx + 0x150], eax; ret; 
0x0010edf1: call 0x50100; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb163: call 0x50130; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00050203: call 0x501b0; add esp, 0x1c; ret; 
0x0006d853: call 0x501d0; add esp, 0x1c; ret; 
0x000f7fcf: call 0x50b00; add esp, 0x10; add esp, 0xc; ret; 
0x000f7f0d: call 0x50b00; add esp, 0x1c; ret; 
0x000501c1: call 0x51940; add esp, 0x1c; ret; 
0x0013ea8e: call 0x5333e654; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x000501e1: call 0x58160; add esp, 0x1c; ret; 
0x000c6f49: call 0x5b0c704b; cmove eax, edx; ret; 
0x00102dbf: call 0x5b120e47; pop esi; pop edi; ret; 
0x00102e5f: call 0x5b120ee7; pop esi; pop edi; ret; 
0x00102eff: call 0x5b120f87; pop esi; pop edi; ret; 
0x00102f9f: call 0x5b121027; pop esi; pop edi; ret; 
0x001030df: call 0x5b121167; pop esi; pop edi; ret; 
0x0010317f: call 0x5b121207; pop esi; pop edi; ret; 
0x0010321f: call 0x5b1212a7; pop esi; pop edi; ret; 
0x001032bf: call 0x5b121347; pop esi; pop edi; ret; 
0x0010335f: call 0x5b1213e7; pop esi; pop edi; ret; 
0x0010349f: call 0x5b121527; pop esi; pop edi; ret; 
0x00116be7: call 0x5b16306f; pop esi; ret; 
0x001315ef: call 0x5b1fda77; pop esi; pop edi; pop ebp; ret; 
0x0013162f: call 0x5b1fdab7; pop esi; pop edi; pop ebp; ret; 
0x00070e39: call 0x5b23d2c1; pop esi; pop edi; pop ebp; ret; 
0x0002d684: call 0x5b2f9b0c; pop esi; pop edi; pop ebp; ret; 
0x0007a1c9: call 0x5b346651; pop esi; pop edi; pop ebp; ret; 
0x0007a23f: call 0x5b3466c7; pop esi; pop edi; pop ebp; ret; 
0x000441c7: call 0x5b5c4955; pop esi; pop edi; ret; 
0x0001f075: call 0x5d614ed5; ret; 
0x00029ac8: call 0x5d61f928; ret; 
0x0002b1ea: call 0x5d62104a; ret; 
0x0002d5ac: call 0x5d62340c; ret; 
0x000303ad: call 0x5d62620d; ret 4; 
0x00042c51: call 0x5d638ab1; ret; 
0x00042ca7: call 0x5d638b07; ret; 
0x00045ece: call 0x5d63bd2e; ret; 
0x00049f67: call 0x5d63fdc7; ret; 
0x0004aa69: call 0x5d6408c9; ret; 
0x0005db39: call 0x5d653999; ret; 
0x00062c05: call 0x5d658a65; ret; 
0x00072b89: call 0x5d6689e9; ret; 
0x00072bc0: call 0x5d668a20; ret; 
0x00076575: call 0x5d66c3d5; ret; 
0x000a087c: call 0x5d6966dc; ret; 
0x000a0d1c: call 0x5d696b7c; ret; 
0x000a24d8: call 0x5d698338; ret; 
0x000a2553: call 0x5d6983b3; ret; 
0x000a51a8: call 0x5d69b008; ret; 
0x000a5225: call 0x5d69b085; ret; 
0x000a7d38: call 0x5d69db98; ret; 
0x000a7db3: call 0x5d69dc13; ret; 
0x000adefe: call 0x5d6a3d5e; ret; 
0x000ae618: call 0x5d6a4478; ret; 
0x000ae695: call 0x5d6a44f5; ret; 
0x000ba765: call 0x5d6b05c5; ret; 
0x000c1dda: call 0x5d6b7c3a; ret; 
0x000c767a: call 0x5d6bd4da; ret; 
0x000e609f: call 0x5d6dbeff; ret; 
0x000e61cc: call 0x5d6dc02c; ret; 
0x000e9768: call 0x5d6df5c8; ret; 
0x000eb487: call 0x5d6e12e7; ret; 
0x000f8331: call 0x5d6ee191; ret; 
0x000fc437: call 0x5d6f2297; ret; 
0x000fca99: call 0x5d6f28f9; ret; 
0x000fcb13: call 0x5d6f2973; ret; 
0x00105a1f: call 0x5d6fb87f; ret; 
0x0010d0cf: call 0x5d702f2f; ret; 
0x0011841c: call 0x5d70e27c; ret; 
0x0011a511: call 0x5d710371; ret; 
0x00124296: call 0x5d71a0f6; ret; 
0x00128870: call 0x5d71e6d0; ret; 
0x001315b0: call 0x5d727410; ret; 
0x0013316b: call 0x5d728fcb; ret; 
0x00139071: call 0x5d72eed1; ret; 
0x0013c058: call 0x5d731eb8; ret; 
0x00145013: call 0x5d73ae73; ret; 
0x00043c76: call 0x5f6299d6; ret; 
0x000445e3: call 0x5f62a343; ret; 
0x00045136: call 0x5f62ae96; ret; 
0x0004a7a1: call 0x604c0; add esp, 0x1c; ret; 
0x000501a1: call 0x65770; add esp, 0x1c; ret; 
0x0009cb04: call 0x6609cb09; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0011f49c: call 0x6611f4a0; mov eax, dword ptr [eax]; ret; 
0x0007e72b: call 0x66842; dec dword ptr [ebx]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x0010b987: call 0x681123df; add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00068c62: call 0x68b50; add esp, 0x1c; ret; 
0x0012c619: call 0x68c50; add esp, 0x18; pop ebx; ret; 
0x00083230: call 0x68f00; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000f8adb: call 0x68f00; add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00072373: call 0x68f00; add esp, 0x18; pop ebx; ret; 
0x00069a6d: call 0x69970; add esp, 0x1c; ret; 
0x00050e3d: call 0x6a5e0; add esp, 0x18; pop ebx; ret; 
0x0006aa99: call 0x6a8c0; add esp, 0x2c; ret; 
0x000725d0: call 0x6bbc0; add esp, 0x1c; ret; 
0x000725ed: call 0x6bd40; add esp, 0x1c; ret; 
0x00050147: call 0x6c0c0; add esp, 0x2c; ret; 
0x0001ce93: call 0x6c665625; cli; call dword ptr [eax - 0x73]; 
0x0006d085: call 0x6cea0; add esp, 0x28; pop ebx; ret; 
0x0006d799: call 0x6d8e0; add esp, 0x2c; ret; 
0x0006ca84: call 0x6e4e0; add esp, 0x1c; ret; 
0x00071599: call 0x6eff0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00132dd0: call 0x71e30; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00050162: call 0x72600; add esp, 0x1c; ret; 
0x00050182: call 0x727d0; add esp, 0x1c; ret; 
0x00072805: call 0x7280a; add byte ptr [eax], al; add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x00050119: call 0x72a00; add esp, 0x2c; ret; 
0x00072e11: call 0x72c60; add esp, 0x1c; ret; 
0x000ec720: call 0x749cc717; add byte ptr es:[eax - 0x173d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000b2753: call 0x74ddab5a; pop ss; mov cl, dl; and cl, 0xf; je 0xb2780; ret; 
0x00076ba5: call 0x771da80c; xor eax, 0x8bc0b60f; mov esp, 0xf9df0085; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00067e21: call 0x772fba46; sub dword ptr [edi], ecx; mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x00049fb1: call 0x77c5d8ba; imul edi, dword ptr [ecx], 0x29f57518; ret 0x5c89; 
0x0007493c: call 0x78300; add esp, 0x1c; ret; 
0x00078cdd: call 0x78c00; add esp, 0x28; pop ebx; ret; 
0x00079681: call 0x78f20; add esp, 0x18; pop ebx; ret; 
0x00072e4f: call 0x79260; add esp, 8; pop ebx; ret; 
0x0016bf3b: call 0x79260; cmp esi, edi; jae 0x16bf51; lea esi, [esi]; call dword ptr [esi]; 
0x000815af: call 0x796c6; dec dword ptr [ebx]; add byte ptr [edi], cl; inc edi; ret 0xc083; 
0x00072293: call 0x7a2a0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007a39a: call 0x7a2f0; add esp, 0x18; pop ebx; ret; 
0x0007a3da: call 0x7a2f0; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f5fe0: call 0x7acf0; mov ecx, 0x5409; mov edx, 1; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000311d8: call 0x7acf0; mov ecx, 8; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000ed824: call 0x7acf0; mov ecx, dword ptr [esp + 0x54]; mov edx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000eddfc: call 0x7acf0; mov ecx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000c5ae0: call 0x7acf0; mov esi, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000f7a60: call 0x7acf0; mov esi, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7b00: call 0x7acf0; mov esi, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000edca0: call 0x7acf0; mov esi, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00074801: call 0x8107548c; ret 0xf7fb; 
0x00078601: call 0x8107924e; ret 0xb9fb; 
0x00084401: call 0x81084f90; ret 0xfbfb; 
0x000c0201: call 0x810c09d2; ret 0x3dfb; 
0x000f8001: call 0x810f8454; ret 0xbffb; 
0x000f8201: call 0x810f8652; ret 0xbdfb; 
0x000f9401: call 0x810f9840; ret 0xabfb; 
0x0012fff9: call 0x811300cc; ret; 
0x001468f9: call 0x82146863; ret; 
0x00146ef9: call 0x82146e5d; ret; 
0x000602c6: call 0x82f002ca; in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x001039f9: call 0x83eb6b2e; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x00058520: call 0x8405851f; ret 0x8904; 
0x0005c0fc: call 0x8405c0fb; ret; 
0x000a0b61: call 0x840a0b62; in al, dx; or byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x0011459b: call 0x8411459c; ret; 
0x00115dab: call 0x84115dab; in al, dx; or al, 0x8d; xchg byte ptr [ecx + 0x5c], dl; cli; call dword ptr [eax - 0x18]; 
0x000a44ba: call 0x84960648; pushfd; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbb4], cl; ret 0xe2d3; 
0x00084fcc: call 0x84fe0; add esp, 0x1c; ret; 
0x000424bc: call 0x858acc2; add dword ptr [ecx], edi; ret; 
0x0008b247: call 0x86cb0; add esp, 0x18; pop ebx; ret; 
0x00083ede: call 0x87c00; add esp, 0x1c; ret; 
0x00085072: call 0x88b50; add esp, 0x1c; ret; 
0x00088af0: call 0x89f5fff6; lock or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00089a3c: call 0x8a089a3f; ret; 
0x000b3949: call 0x8c09626d; jl 0xb3974; sub al, 0x29; ret 0x448b; 
0x000ea78c: call 0x8d32ab0; or eax, edx; pop ebx; ret; 
0x0011a4c0: call 0x8d7e18d1; push ecx; jmp dword ptr [ecx]; 
0x000795a1: call 0x8e0795a3; lcall 0xf0b8, 0x195c; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a7f65: call 0x941a7cf3; ret 0xf883; 
0x0002ca20: call 0x9d3a0; add esp, 0x1c; ret; 
0x000e1e75: call 0x9d860; add esp, 0x1c; ret; 
0x000840e3: call 0x9db50; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010d001: call 0x9db50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008b14b: call 0x9db50; add esp, 0x18; pop ebx; ret; 
0x0009f4af: call 0x9dc40; add esp, 0x18; pop ebx; ret; 
0x0008b549: call 0x9dc80; add esp, 0x18; pop ebx; ret; 
0x0007bdd9: call 0x9dc80; add esp, 0x1c; ret; 
0x00122dd6: call 0x9e370; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x0010e015: call 0x9efe0; add esp, 0x18; pop ebx; ret; 
0x0009f408: call 0x9f330; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000b2976: call 0x9f330; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010e225: call 0x9f420; add esp, 0x18; pop ebx; ret; 
0x0009f808: call 0x9f820; add esp, 0x1c; ret; 
0x000344d7: call 0x9fa20; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000437b1: call 0xa0640; add esp, 0x1c; ret; 
0x000437d1: call 0xa06a0; add esp, 0x1c; ret; 
0x000a05a6: call 0xa0820; add esp, 0x2c; ret; 
0x000a0606: call 0xa0cc0; add esp, 0x2c; ret; 
0x000a0666: call 0xa1130; add esp, 0x2c; ret; 
0x000a06c6: call 0xa1760; add esp, 0x2c; ret; 
0x000a0722: call 0xa25b0; add esp, 0x1c; ret; 
0x000a0782: call 0xa5280; add esp, 0x1c; ret; 
0x000a07e2: call 0xa7e10; add esp, 0x1c; ret; 
0x000aa46e: call 0xaa5e0; add esp, 0x1c; ret; 
0x000aa4a2: call 0xab1b0; add esp, 0x1c; ret; 
0x0009fc13: call 0xad1b0; add esp, 0x2c; ret; 
0x000b3ee9: call 0xb3670; add esp, 0x18; pop ebx; ret; 
0x000b6c98: call 0xb3670; add esp, 0x1c; ret; 
0x000b32e2: call 0xb53f0; add esp, 0x1c; ret; 
0x000b7754: call 0xb7850; add esp, 0x2c; ret; 
0x000c3a9c: call 0xb8e4b8a2; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f64: call 0xb8ea1d6a; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a234: call 0xb8ea203a; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019488: call 0xb8eb128e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000197af: call 0xb8eb15b5; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000194e2: call 0xb8ec12e8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000195ee: call 0xb8ec13f4; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019648: call 0xb8ec144e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000196a2: call 0xb8ec14a8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019809: call 0xb8ec160f; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019973: call 0xb8ec1779; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019a26: call 0xb8ec182c; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019ad9: call 0xb8ec18df; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019b8c: call 0xb8ec1992; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019be6: call 0xb8ec19ec; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019cf2: call 0xb8ec1af8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019fbe: call 0xb8ec1dc4; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a018: call 0xb8ec1e1e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a072: call 0xb8ec1e78; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a125: call 0xb8ec1f2b; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a17f: call 0xb8ec1f85; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a340: call 0xb8ec2146; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a4e6: call 0xb8ec22ec; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001953b: call 0xb8ed1341; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019594: call 0xb8ed139a; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000196fb: call 0xb8ed1501; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019754: call 0xb8ed155a; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019862: call 0xb8ed1668; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000198c0: call 0xb8ed16c6; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019919: call 0xb8ed171f; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000199cc: call 0xb8ed17d2; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019a7f: call 0xb8ed1885; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019b32: call 0xb8ed1938; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019c3f: call 0xb8ed1a45; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019c98: call 0xb8ed1a9e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019d4b: call 0xb8ed1b51; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019da4: call 0xb8ed1baa; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019dfd: call 0xb8ed1c03; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019e56: call 0xb8ed1c5c; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019eaf: call 0xb8ed1cb5; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f08: call 0xb8ed1d0e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a0cb: call 0xb8ed1ed1; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a1d8: call 0xb8ed1fde; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a28d: call 0xb8ed2093; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a2e6: call 0xb8ed20ec; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a399: call 0xb8ed219f; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a53f: call 0xb8ed2345; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a598: call 0xb8ed239e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a5f1: call 0xb8ed23f7; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d612: call 0xb8fd5418; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013de91: call 0xb8ff5c97; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e089: call 0xb8ff5e8f; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e208: call 0xb8ff600e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e388: call 0xb8ff618e; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5769: call 0xb90c576c; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ba626: call 0xbc6d0; add esp, 0x2c; ret; 
0x000ba656: call 0xbedd0; add esp, 0x2c; ret; 
0x000bee39: call 0xbf170; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012a8a4: call 0xc496a897; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c583b: call 0xc5850; add esp, 0x1c; ret; 
0x000c5861: call 0xc5890; add esp, 0x1c; ret; 
0x000c5f0d: call 0xc5d90; add esp, 0x1c; ret; 
0x000c612d: call 0xc65e0; add esp, 0x1c; ret; 
0x0011f4b3: call 0xc6620; add esp, 0xc; movzx eax, ax; ret; 
0x000eb0ab: call 0xc6640; or edx, 0xffffffff; mov ecx, eax; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0012e740: call 0xc6650; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x000eb0d6: call 0xc6660; or edx, 0xffffffff; mov ecx, eax; mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000c6917: call 0xc68c0; add esp, 0x1c; ret; 
0x0007b365: call 0xccc366c; ret; 
0x000d7072: call 0xd0b50; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000d70d2: call 0xd1730; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000df1fe: call 0xdede0; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0013b1d1: call 0xdfbbe; inc dword ptr [ebp - 0x761a8b40]; ret; 
0x000e1bab: call 0xe1450; add esp, 0x28; pop ebx; ret; 
0x000e1b03: call 0xe1a60; add esp, 0x28; pop ebx; ret; 
0x0005ccc4: call 0xe905ccc3; push ebx; ret; 
0x000ea9ad: call 0xeb230; add esp, 0x2c; ret; 
0x00075ee0: call 0xec3d0; add esp, 0x1c; ret; 
0x0006ce68: call 0xec89f3e3; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x001457b7: call 0xec9757c5; sbb byte ptr [ebx - 0x10f80], cl; jmp dword ptr [ebp + 3]; 
0x00051854: call 0xecc20; add esp, 0x1c; ret; 
0x000ede60: call 0xecd40; add esp, 0x1c; ret; 
0x0001b02b: call 0xed140; add esp, 0x1c; ret; 
0x00143359: call 0xed660; add esp, 0x1c; sar eax, 0x1f; ret; 
0x000ed8df: call 0xed8f0; add esp, 0x1c; ret; 
0x0012519a: call 0xedc70; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0010ed8f: call 0xf26e9c; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000f5085: call 0xf4e80; add esp, 0x1c; ret; 
0x000ed90e: call 0xf5730; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f65f8: call 0xf6520; sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x000f66da: call 0xf6610; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000f60a5: call 0xf6810; add esp, 0x10; add esp, 0xc; ret; 
0x000f5f91: call 0xf6810; add esp, 0x1c; ret; 
0x00124580: call 0xf75a0; mov dword ptr [ebx + 0x3274], eax; add esp, 8; pop ebx; ret; 
0x000f865d: call 0xf8ac0; add esp, 0x10; mov dword ptr [ebx + 0x2380], 0; add esp, 8; pop ebx; ret; 
0x0006d025: call 0xf8c82e85; add bl, byte ptr [edi + 0x5d]; ret; 
0x000f86e6: call 0xf9030; add esp, 0x10; add esp, 0xc; ret; 
0x000f9d9f: call 0xf9a90; mov dword ptr [ebx + 0x2454], eax; add esp, 8; pop ebx; ret; 
0x000fa8c2: call 0xfa2a0; add esp, 0x1c; ret; 
0x0016b7cd: call 0xfade0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0007be50: call 0xfade0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000fb11b: call 0xfb420; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb6df: call 0xfb9f0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fbc58: call 0xfbc70; add esp, 0x1c; ret; 
0x000fbbd4: call 0xfbd50; add esp, 0x1c; ret; 
0x0002579e: call 0xfc9f0; add esp, 0x1c; ret; 
0x0016b749: call 0xfca10; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000fccb9: call 0xfcb30; add esp, 0x18; pop ebx; ret; 
0x000fcc89: call 0xfcbb0; add esp, 0x18; pop ebx; ret; 
0x000fd025: call 0xfcf00; add esp, 0x28; pop ebx; ret; 
0x000fd1fd: call 0xfd030; add esp, 0x28; pop ebx; ret; 
0x00080c03: call 0xfe0450c; inc edi; ret; 
0x000ddf40: call 0xfe06447; xchg esp, eax; ret 0xd020; 
0x000ff425: call 0xff430; add esp, 0x18; pop ebx; ret; 
0x000ff379: call 0xfff00; add esp, 0x1c; ret; 
0x00143254: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00031180: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x00050f3f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x000b402b: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000b4143: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000b42fd: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x000c093d: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000e1e03: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec091: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec3af: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3df: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec40f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000ec703: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ec8d4: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec904: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ecb83: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000ed30f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f567b: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5973: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e3: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f61ff: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f622f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f7b85: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000f90ff: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f92d7: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000f931f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f934f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9383: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b3: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000fd227: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000c6946: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00030dfa: call dword ptr [0x10]; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c5d7f: call dword ptr [0x10]; mov eax, 1; int 0x80; 
0x00030e06: call dword ptr [0x10]; mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00031150: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000ecacc: call dword ptr [0x10]; mov ebx, edx; ret; 
0x0013f782: call dword ptr [0x10]; mov ecx, 9; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00030e14: call dword ptr [0x10]; mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000eb3aa: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000b6c03: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0011961d: call dword ptr [0x10]; pop ebx; ret; 
0x0007b376: call dword ptr [0x10]; ret; 
0x0002f4fe: call dword ptr [eax + 0x102444db]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000c86b4: call dword ptr [eax + 0x10]; 
0x000c8557: call dword ptr [eax + 0x14]; 
0x000c86c9: call dword ptr [eax + 0x18]; 
0x0005d943: call dword ptr [eax + 0x1c]; 
0x000dfc55: call dword ptr [eax + 0x20]; 
0x0012b4f8: call dword ptr [eax + 0x24]; 
0x0013947b: call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x0005c26f: call dword ptr [eax + 0x29]; 
0x0005c26f: call dword ptr [eax + 0x29]; ret 0x9589; 
0x0006bc63: call dword ptr [eax + 0x2c]; 
0x0006e2ff: call dword ptr [eax + 0x34]; 
0x0006fe2a: call dword ptr [eax + 0x40]; 
0x00075880: call dword ptr [eax + 0x48]; 
0x000f634e: call dword ptr [eax + 0x4c8bda89]; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00048a81: call dword ptr [eax + 0x50]; 
0x00059c2a: call dword ptr [eax + 0x51]; 
0x00052aa7: call dword ptr [eax + 0x52]; 
0x0002e55a: call dword ptr [eax + 0x53]; 
0x000b4d98: call dword ptr [eax + 0x55]; 
0x000258ba: call dword ptr [eax + 0x56]; 
0x00019150: call dword ptr [eax + 0x57]; 
0x0001e26b: call dword ptr [eax + 0x68]; 
0x0001b027: call dword ptr [eax + 0x6a]; 
0x00132984: call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00139f68: call dword ptr [eax + 0x6a]; add ch, al; jmp dword ptr [ecx - 0xf]; 
0x0001b027: call dword ptr [eax + 0x6a]; add eax, ebp; adc byte ptr [ecx], ah; or eax, 0x1cc48300; ret; 
0x0006e420: call dword ptr [eax + 0xc]; 
0x00123fdb: call dword ptr [eax + 4]; 
0x0012625c: call dword ptr [eax + 8]; 
0x0004d42e: call dword ptr [eax - 0x12417]; jmp dword ptr [esi - 0x70]; 
0x000db4ae: call dword ptr [eax - 0x17]; 
0x00019112: call dword ptr [eax - 0x18]; 
0x000e8d27: call dword ptr [eax - 0x18]; adc al, byte ptr [ecx]; hlt; jmp dword ptr [esi - 0x70]; 
0x000e034a: call dword ptr [eax - 0x18]; call edi; 
0x0008b3fd: call dword ptr [eax - 0x18]; cmp al, 0xda; stc; jmp dword ptr [esi - 0x70]; 
0x001350ff: call dword ptr [eax - 0x18]; cmp bh, byte ptr [0x55e8ffef]; wait; std; jmp dword ptr [esi - 0x70]; 
0x0016baa1: call dword ptr [eax - 0x18]; cwde; shr ebx, cl; jmp dword ptr [esi - 0x70]; 
0x00100feb: call dword ptr [eax - 0x18]; dec esi; jle 0x100fe3; jmp dword ptr [esi - 0x70]; 
0x000fa175: call dword ptr [eax - 0x18]; hlt; cmp bh, bh; jmp dword ptr [ebp - 0x77]; 
0x000747f6: call dword ptr [eax - 0x18]; inc ebx; inc esi; sti; jmp dword ptr [esi - 0x70]; 
0x0010cac3: call dword ptr [eax - 0x18]; jbe 0x10ca8b; int1; jmp dword ptr [esi - 0x70]; 
0x000e95f3: call dword ptr [eax - 0x18]; out 0x97, al; hlt; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x000ad9da: call dword ptr [eax - 0x18]; pop edi; mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00110998: call dword ptr [eax - 0x18]; popal; sbb al, byte ptr [ecx]; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x000b7183: call dword ptr [eax - 0x18]; push es; ret 0xffff; 
0x00049a77: call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x0003a777: call dword ptr [eax - 0x18]; ret 0xfee6; 
0x00109976: call dword ptr [eax - 0x18]; ret; 
0x001108b6: call dword ptr [eax - 0x18]; sbb dword ptr [ecx], 1; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x000a023e: call dword ptr [eax - 0x18]; sti; mov edi, eax; jmp dword ptr [esi - 0x70]; 
0x0003caa2: call dword ptr [eax - 0x18]; xchg edi, eax; ret; 
0x0011b5a7: call dword ptr [eax - 0x18]; xchg edx, eax; fdiv st(0); jmp dword ptr [esi - 0x70]; 
0x00028367: call dword ptr [eax - 0x39]; 
0x00049701: call dword ptr [eax - 0x3f]; 
0x00115244: call dword ptr [eax - 0x42]; 
0x000486c6: call dword ptr [eax - 0x48]; 
0x0001b790: call dword ptr [eax - 0x73]; 
0x0013297d: call dword ptr [eax - 0x73]; sbb dword ptr [ecx], 0x58; cli; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x0001afd4: call dword ptr [eax - 0x75]; 
0x0002a900: call dword ptr [eax - 0x77]; 
0x00056c4b: call dword ptr [eax - 0x7d]; 
0x0001d0e6: call dword ptr [eax - 1]; 
0x0002cf24: call dword ptr [eax]; 
0x0005f77b: call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe1e], al; idiv edi; jmp dword ptr [eax]; 
0x00063bac: call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe20], al; inc edi; idiv edi; jmp dword ptr [eax]; 
0x0005ee7b: call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x86b63], cl; inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x001248db: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00124ec3: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00108c2d: call dword ptr [ebp + 0x14]; 
0x0006ad74: call dword ptr [ebp + 0x1c]; 
0x0006ba89: call dword ptr [ebp + 0x24]; 
0x00078933: call dword ptr [ebp + 0x30]; 
0x0013e453: call dword ptr [ebp + 0x3c]; 
0x00074ec6: call dword ptr [ebp + 0x40]; 
0x0013f25f: call dword ptr [ebp + 0x44]; 
0x00082e4d: call dword ptr [ebp + 0x50]; 
0x00082cde: call dword ptr [ebp + 0x52]; 
0x00050332: call dword ptr [ebp + 0x53]; 
0x000b9a2e: call dword ptr [ebp + 0x55]; 
0x000504e1: call dword ptr [ebp + 0x56]; 
0x00131541: call dword ptr [ebp + 0x56]; call edi; 
0x00025e9f: call dword ptr [ebp + 0x57]; 
0x000eea4e: call dword ptr [ebp + 0x6a]; 
0x000765dd: call dword ptr [ebp + 0xc]; 
0x000264ae: call dword ptr [ebp + 3]; 
0x000728ec: call dword ptr [ebp + 8]; 
0x0013ed74: call dword ptr [ebp - 0x18]; 
0x00120d3f: call dword ptr [ebp - 0x47]; 
0x0012ef8a: call dword ptr [ebp - 0x73]; 
0x0006aa67: call dword ptr [ebp - 0x75]; 
0x00108bdf: call dword ptr [ebp - 0x77]; 
0x00108055: call dword ptr [ebp - 1]; 
0x0007c783: call dword ptr [ebp]; 
0x00108414: call dword ptr [ebx + 0x14]; 
0x0005f17a: call dword ptr [ebx + 0x1c]; 
0x00126eb4: call dword ptr [ebx + 0x20]; 
0x000e3c8e: call dword ptr [ebx + 0x29]; 
0x0006be2d: call dword ptr [ebx + 0x2c]; 
0x0006950d: call dword ptr [ebx + 0x30]; 
0x00139def: call dword ptr [ebx + 0x31]; 
0x0006bef9: call dword ptr [ebx + 0x34]; 
0x0006f5d1: call dword ptr [ebx + 0x38]; 
0x000573e2: call dword ptr [ebx + 0x39]; 
0x0006ffaf: call dword ptr [ebx + 0x40]; 
0x00068dee: call dword ptr [ebx + 0x48]; 
0x000514a8: call dword ptr [ebx + 0x50]; 
0x0004353f: call dword ptr [ebx + 0x51]; 
0x00058e21: call dword ptr [ebx + 0x52]; 
0x00057006: call dword ptr [ebx + 0x53]; 
0x00039b98: call dword ptr [ebx + 0x55]; 
0x0002786c: call dword ptr [ebx + 0x56]; 
0x0003c725: call dword ptr [ebx + 0x6a]; 
0x000790c5: call dword ptr [ebx + 0xc]; 
0x00068fce: call dword ptr [ebx + 8]; 
0x0001b18f: call dword ptr [ebx - 0x18]; 
0x000eacc9: call dword ptr [ebx - 0x45]; 
0x000573d4: call dword ptr [ebx - 0x73]; 
0x00027f12: call dword ptr [ebx - 0x75]; 
0x000ae82c: call dword ptr [ebx - 0x78]; 
0x0005e33a: call dword ptr [ebx - 0x7d]; 
0x0005e33a: call dword ptr [ebx - 0x7d]; ret; 
0x0005e0b5: call dword ptr [ebx - 0x7f]; 
0x0003cc41: call dword ptr [ebx - 1]; 
0x000fde40: call dword ptr [ebx - 6]; 
0x00038e1e: call dword ptr [ebx]; 
0x0012438f: call dword ptr [ecx + 0x10]; 
0x001259ed: call dword ptr [ecx + 0x18]; 
0x0005ea3f: call dword ptr [ecx + 0x1c]; 
0x000c7ee1: call dword ptr [ecx + 0x20]; 
0x00075044: call dword ptr [ecx + 0x3c]; 
0x000750ae: call dword ptr [ecx + 0x40]; 
0x000286a0: call dword ptr [ecx + 0x50]; 
0x00057e80: call dword ptr [ecx + 0x51]; 
0x0012a1c4: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00054310: call dword ptr [ecx + 0x52]; 
0x000b6c94: call dword ptr [ecx + 0x52]; push eax; call 0xb3670; add esp, 0x1c; ret; 
0x00050a80: call dword ptr [ecx + 0x53]; 
0x0005a4f8: call dword ptr [ecx + 0x56]; 
0x00049815: call dword ptr [ecx + 0x6a]; 
0x0012377d: call dword ptr [ecx + 0xc]; 
0x0012377d: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0012ba9c: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000482f5: call dword ptr [ecx + 0xf]; 
0x00124142: call dword ptr [ecx + 8]; 
0x00053828: call dword ptr [ecx - 0x18]; 
0x00124984: call dword ptr [ecx - 0x73]; 
0x0002f247: call dword ptr [ecx - 0x75]; 
0x0002b00a: call dword ptr [ecx - 0x77]; 
0x0004cfd5: call dword ptr [ecx - 1]; 
0x0001cf58: call dword ptr [ecx]; 
0x0006e8ab: call dword ptr [edi + 0x18]; 
0x0013f06f: call dword ptr [edi + 0x24]; 
0x0007858a: call dword ptr [edi + 0x34]; 
0x0013e5bf: call dword ptr [edi + 0x38]; 
0x000701ec: call dword ptr [edi + 0x40]; 
0x00076975: call dword ptr [edi + 0x44]; 
0x0007553d: call dword ptr [edi + 0x48]; 
0x000284e6: call dword ptr [edi + 0x50]; 
0x000412cf: call dword ptr [edi + 0x51]; 
0x0002ce08: call dword ptr [edi + 0x52]; 
0x000a2e77: call dword ptr [edi + 0x53]; 
0x0008b4f2: call dword ptr [edi + 0x55]; 
0x000283a5: call dword ptr [edi + 0x56]; 
0x000b9a90: call dword ptr [edi + 0x57]; 
0x0007161e: call dword ptr [edi + 0x68]; 
0x000a8fe0: call dword ptr [edi + 0x6a]; 
0x0012c586: call dword ptr [edi - 0x17]; 
0x00019f58: call dword ptr [edi - 0x18]; 
0x000589e6: call dword ptr [edi - 0x75]; 
0x000be481: call dword ptr [edi - 0x77]; 
0x00048387: call dword ptr [edi - 0x7d]; 
0x00047870: call dword ptr [edi - 1]; 
0x0012453c: call dword ptr [edx + 0x10]; 
0x0012e0ef: call dword ptr [edx + 0x14]; 
0x00125b3d: call dword ptr [edx + 0x18]; 
0x0005f86b: call dword ptr [edx + 0x1c]; 
0x000573db: call dword ptr [edx + 0x2b]; 
0x00075b8d: call dword ptr [edx + 0x40]; 
0x0013e79c: call dword ptr [edx + 0x48]; 
0x0002561b: call dword ptr [edx + 0x50]; 
0x0007bdd5: call dword ptr [edx + 0x51]; 
0x0007bdd5: call dword ptr [edx + 0x51]; push eax; call 0x9dc80; add esp, 0x1c; ret; 
0x00019136: call dword ptr [edx + 0x52]; 
0x0004c468: call dword ptr [edx + 0x53]; 
0x000574ed: call dword ptr [edx + 0x56]; 
0x000b72eb: call dword ptr [edx + 0x57]; 
0x00139f7a: call dword ptr [edx + 0x68]; 
0x00048df0: call dword ptr [edx + 0x6a]; 
0x0012a0be: call dword ptr [edx + 0xc]; 
0x0006c14a: call dword ptr [edx + 0xf]; 
0x00123ff4: call dword ptr [edx + 4]; 
0x0012a17a: call dword ptr [edx + 8]; 
0x0010ca88: call dword ptr [edx - 0x17]; 
0x00027931: call dword ptr [edx - 0x18]; 
0x00040dc8: call dword ptr [edx - 0x3f]; 
0x0001bf3c: call dword ptr [edx - 0x73]; 
0x0002f085: call dword ptr [edx - 0x75]; 
0x000490e3: call dword ptr [edx - 0x77]; 
0x00048383: call dword ptr [edx - 0x7d]; 
0x0001aef6: call dword ptr [edx - 1]; 
0x00025796: call dword ptr [edx - 1]; mov al, 0xc0; sldt word ptr [eax]; call 0xfc9f0; add esp, 0x1c; ret; 
0x000833ea: call dword ptr [edx]; 
0x0006e119: call dword ptr [esi + 0x10]; 
0x001089df: call dword ptr [esi + 0x14]; 
0x0006e93f: call dword ptr [esi + 0x18]; 
0x000639e9: call dword ptr [esi + 0x1c]; 
0x00076082: call dword ptr [esi + 0x20]; 
0x000ef441: call dword ptr [esi + 0x24]; 
0x00079475: call dword ptr [esi + 0x2c]; 
0x0007498c: call dword ptr [esi + 0x30]; 
0x00025748: call dword ptr [esi + 0x31]; 
0x0006939d: call dword ptr [esi + 0x40]; 
0x000767e3: call dword ptr [esi + 0x44]; 
0x000751d4: call dword ptr [esi + 0x48]; 
0x000485e7: call dword ptr [esi + 0x50]; 
0x00027775: call dword ptr [esi + 0x51]; 
0x000648a8: call dword ptr [esi + 0x52]; 
0x0001a720: call dword ptr [esi + 0x53]; 
0x0004789c: call dword ptr [esi + 0x56]; 
0x000414d9: call dword ptr [esi + 0x57]; 
0x000392a3: call dword ptr [esi + 0x6a]; 
0x00077fe3: call dword ptr [esi + 0xc]; 
0x0012efb3: call dword ptr [esi + 8]; 
0x0004148e: call dword ptr [esi - 0x18]; 
0x00069e56: call dword ptr [esi - 0x18]; ret; 
0x0012490e: call dword ptr [esi - 0x42]; 
0x0002cdc7: call dword ptr [esi - 0x73]; 
0x00060954: call dword ptr [esi - 0x75]; 
0x000517f5: call dword ptr [esi - 0x77]; 
0x000fa5a8: call dword ptr [esi - 0x7f]; 
0x00028d85: call dword ptr [esi - 1]; 
0x00033960: call dword ptr [esi]; 
0x000192ee: call dword ptr gs:[0x10]; 
0x00143253: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x0003117f: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x00050f3e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x000b402a: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000b4142: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000b42fc: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x000c093c: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000e1e02: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec090: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec3ae: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3de: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec40e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000ec702: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ec8d3: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec903: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ecb82: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000ed30e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f567a: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5972: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e2: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f61fe: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f622e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f7b84: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000f90fe: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f92d6: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000f931e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f934e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9382: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b2: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000fd226: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000c6945: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000c5d7e: call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x0003114f: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000ecacb: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000eb3a9: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x000b6c02: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0011961c: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0007b375: call dword ptr gs:[0x10]; ret; 
0x0001af1a: call eax; 
0x00153343: call eax; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000807f0: call eax; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x001238ea: call eax; add esp, 0x10; add esp, 8; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x0001dc6a: call eax; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012fbd6: call eax; add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0013d0cd: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0002087a: call ebx; 
0x0012f4f4: call ebx; ret; 
0x0001a83b: call ecx; 
0x0001c5d1: call edi; 
0x0001afa0: call edx; 
0x000fbfe7: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0001bcce: call esi; 
0x000fbfd7: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0005f79d: call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x00028b28: call ptr [ebx + 0x5e]; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x00125dd6: call ptr [ebx + 0x5e]; jmp eax; 
0x0006c7c4: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x00024c13: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000835ec: call ptr [ebx + 0x5e]; pop edi; ret; 
0x00031081: call ptr [ebx + 0x5e]; ret; 
0x000c6fa2: call ptr [ebx + 0x65]; cmp dword ptr [eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000852af: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x000ecbac: call ptr [ebx - 0x17]; cmp eax, 0x8dfff2e4; je 0xecbdc; add byte ptr [eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000f6744: call ptr [ebx - 0x17]; movsd dword ptr es:[edi], dword ptr [esi]; dec eax; bnd jmp dword ptr [esi - 0x70]; 
0x0006e713: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x000698b4: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x00030aca: call ptr [ecx + 0x5a]; ret; 
0x00092bd8: call ptr [edi + 0x5b]; ret; 
0x00095372: call ptr [edi + 0x5e]; pop ebx; ret; 
0x00161431: call ptr [edi]; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0006f2cd: call ptr [edi]; mov edx, edi; pop edi; pop ebp; ret; 
0x000ea210: call ptr [edi]; test eax, eax; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2c0: call ptr [edi]; test eax, eax; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00102d1e: call ptr [edx + 0x59]; pop eax; ret; 
0x0009db2f: call ptr [esi + 0x5b]; ret; 
0x0009d093: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0006a3cd: call ptr [esi + 0x5f]; ret; 
0x000f52dd: call ptr [esi - 0x17]; or al, 0x5d; bnd jmp dword ptr [esi - 0x70]; 
0x0016562f: cdq; add al, 0; add byte ptr [ebx - 0x76f7db84], cl; ret 0x44c7; 
0x000ce069: cdq; add al, 0x39; ret 0xd67f; 
0x00044ec3: cdq; add dword ptr [eax], eax; add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x00062d83: cdq; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x00022b88: cdq; add eax, dword ptr [eax]; add byte ptr [ecx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret; 
0x0013d0cf: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00074069: cdq; call dword ptr [esi]; 
0x001452c9: cdq; cld; jmp dword ptr [esi - 0x70]; 
0x0010aea7: cdq; cli; call dword ptr [eax + 0x6a]; 
0x001098f8: cdq; cli; call dword ptr [eax - 0x73]; 
0x0010a2c5: cdq; cli; call dword ptr [eax - 0x75]; 
0x0010a68f: cdq; cli; call dword ptr [edx + 0x50]; 
0x00046469: cdq; fistp dword ptr [ecx]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000341d8: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00101695: cdq; int1; jmp dword ptr [esi - 0x70]; 
0x000949bb: cdq; jmp ecx; 
0x0013e1b0: cdq; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00145d69: cdq; nop; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00094bd3: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001300b3: cdq; out dx, eax; call dword ptr [eax - 0x73]; 
0x0011b77a: cdq; pop ebp; cli; dec dword ptr [ebp - 0x5a25b7a]; call dword ptr [ecx - 0x77]; 
0x00070cd5: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0013f571: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x000b32ff: cdq; push edx; push eax; call 0xb53f0; add esp, 0x1c; ret; 
0x0013e4b7: cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x000750aa: cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x000333fc: cdq; test byte ptr [edx], dl; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000517f2: cdq; xor al, 0xfa; call dword ptr [esi - 0x77]; 
0x00034184: cdq; xor eax, edx; sub eax, edx; ret; 
0x0012c0e9: clc; adc byte ptr [edi], cl; dec edi; ret 0x5057; 
0x000eadb7: clc; adc byte ptr [edi], cl; test ah, bh; add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x001012f7: clc; adc dh, byte ptr [edi + 0xa]; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x0014928a: clc; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0001eb25: clc; add al, 0x89; ret 0x2574; 
0x0007b35c: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0006cf79: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0006d029: clc; add bl, byte ptr [edi + 0x5d]; ret; 
0x001365e6: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, dl; arpl dx, di; call dword ptr [eax - 0x18]; 
0x00063e8b: clc; add ch, byte ptr [ecx]; ret 0xb8; 
0x0006ea1c: clc; add cl, byte ptr [ebx - 0x3dd6f7af]; mov eax, edx; pop ebx; ret; 
0x00071506: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x00070cab: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00116e0d: clc; add cl, byte ptr [edi]; test byte ptr [ebx - 0x7b000000], bl; ror byte ptr [edi], 0x85; ret; 
0x00131880: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x0012ab10: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0010fdc9: clc; add dword ptr [ebp - 0x6bf0fdb8], ecx; ret 0x7c8b; 
0x000fa26d: clc; add dword ptr [edi + 7], edi; pop ebx; pop esi; ret; 
0x000e9fa7: clc; add dword ptr [edi], ecx; test byte ptr [edx - 0x74000008], cl; jl 0xe9fd6; or byte ptr [ebp - 0x56afb79], cl; call dword ptr [eax - 0x73]; 
0x000b3c0a: clc; add dword ptr [edi], ecx; xchg esp, eax; ret 0x2be9; 
0x00132e1f: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00077c65: clc; add dword ptr [esi + 0x17], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000778d3: clc; add dword ptr [esi + 0x19], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008001d: clc; add dword ptr [esi - 0x2c], edi; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0006d295: clc; add dword ptr [esi - 0x33], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c0638: clc; add dword ptr [esi - 0x34], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071f05: clc; add dword ptr [esi - 0x36], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072595: clc; add dword ptr [esi - 0x37], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bb95: clc; add dword ptr [esi - 0x39], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b9ed: clc; add dword ptr [esi - 0x3b], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071825: clc; add dword ptr [esi - 0x43], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068c25: clc; add dword ptr [esi - 0x44], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c8b5: clc; add dword ptr [esi - 0x4c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068d65: clc; add dword ptr [esi - 0x4e], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010e4d5: clc; add dword ptr [esi - 0x4f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c085: clc; add dword ptr [esi - 0x51], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a34: clc; add dword ptr [esi - 0x55], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006959d: clc; add dword ptr [esi - 0x56], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d8d5: clc; add dword ptr [esi - 0x59], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e537: clc; add dword ptr [esi - 0x5c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d3b5: clc; add dword ptr [esi - 0x5d], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033fa7: clc; add dword ptr [esi - 0x63], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069fd5: clc; add dword ptr [esi - 0x65], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e1ad: clc; add dword ptr [esi - 0x67], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069ea5: clc; add dword ptr [esi - 0x69], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c745: clc; add dword ptr [esi - 0x6c], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bd0d: clc; add dword ptr [esi - 0x6f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010dd95: clc; add dword ptr [esi - 0x76], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cdd5: clc; add dword ptr [esi - 0x7e], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cbd5: clc; add dword ptr [esi - 0x7f], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00051145: clc; add dword ptr [esi - 0xf], edi; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011a569: clc; add eax, 0xc; ret; 
0x000e08b4: clc; add eax, 0xf101fffa; jmp ecx; 
0x001640dd: clc; add eax, 0xf1fc1f6; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x00150851: clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150aac: clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008342f: clc; add eax, dword ptr [ecx]; ret 0x5303; 
0x0009c645: clc; add eax, ecx; pop edi; ret; 
0x00025508: clc; add esi, dword ptr [esp + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00033bc1: clc; and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x0007b49c: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008b6a8: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x00154b18: clc; call 0x13cee5; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153972: clc; call 0x13cee5; add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151858: clc; call 0x13cee5; add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150848: clc; call 0x13cee5; add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f878: clc; call 0x13cee5; add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e6a2: clc; call 0x13cee5; add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c542: clc; call 0x13cee5; add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a5a2: clc; call 0x13cee5; add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00145e1d: clc; call 0x13cee5; add ebx, 0x48fdd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00026793: clc; call dword ptr [eax - 0x18]; 
0x0016b853: clc; call dword ptr [eax - 1]; 
0x000264ad: clc; call dword ptr [ebp + 3]; 
0x0016b745: clc; call dword ptr [edx + 0x50]; 
0x00139f79: clc; call dword ptr [edx + 0x68]; 
0x00073a09: clc; call dword ptr gs:[0x10]; 
0x000c1b02: clc; call eax; 
0x0010993d: clc; cdq; cli; call dword ptr [eax - 0x73]; 
0x0011a3e8: clc; cmc; je 0x11a3e0; add esp, 8; pop ebx; ret; 
0x000b3ac5: clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0014bd0a: clc; cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b4a25: clc; cmp ecx, dword ptr [edi]; inc edi; ret 0xc86b; 
0x000cd1d9: clc; cmp esi, dword ptr [edi + 0x23]; mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x000e45fb: clc; dec byte ptr [edi]; test esp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f9fd: clc; dec dword ptr [ebp - 0x572037e]; call dword ptr [eax - 0x73]; 
0x0002678c: clc; dec dword ptr [ebp - 0x6b9ff87c]; clc; call dword ptr [eax - 0x18]; 
0x000a7614: clc; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x000a47ef: clc; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x0009ebac: clc; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x73], ecx; cli; call dword ptr [eax + 0x68]; 
0x000a050c: clc; dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x0009ff00: clc; dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x000a47cc: clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000a49ba: clc; dec dword ptr [ebx - 0x72e3dbac]; xor byte ptr [eax + 0x73], 0xfa; call dword ptr [eax - 0x73]; 
0x000a2594: clc; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000ed827: clc; dec dword ptr [ebx - 0x76abdbb4]; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000edca3: clc; dec dword ptr [ecx + 0x6b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7a63: clc; dec dword ptr [ecx + 0x76b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7b03: clc; dec dword ptr [ecx + 0x94b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003e5b5: clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00038724: clc; dec dword ptr [edi]; inc esp; ret 0x489; 
0x00081d42: clc; dec dword ptr [edi]; inc esp; ret 0xc483; 
0x00028af6: clc; dec dword ptr [edi]; inc esp; ret; 
0x0005debd: clc; dec dword ptr [edi]; test byte ptr [ebx - 0x7b000000], cl; ror byte ptr [edi], 0x84; ret; 
0x0013d25a: clc; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00059dcc: clc; dec dword ptr [edi]; test dh, bl; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0005581f: clc; dec dword ptr [edi]; test dword ptr [0x89fffffe], eax; test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0005686b: clc; dec dword ptr [edi]; test edx, esi; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0013d053: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x0012c87d: clc; emms; lsl edx, word ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x000bef46: clc; fidiv dword ptr [ebp + 0x56]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0015264a: clc; fld qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013fc76: clc; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0011aff8: clc; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x000ed113: clc; inc dword ptr [ebx - 0x2776ef3c]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000edcc3: clc; inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00101f52: clc; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [ebp + 0x56], ecx; cli; call dword ptr [eax + 0x6a]; 
0x000487ec: clc; jae 0x487e9; call dword ptr [eax - 0x73]; 
0x0004987e: clc; jae 0x4987b; call dword ptr [eax - 0x73]; 
0x000498a3: clc; jae 0x498a0; call dword ptr [eax - 0x73]; 
0x000498c8: clc; jae 0x498c5; call dword ptr [eax - 0x73]; 
0x000498ed: clc; jae 0x498ea; call dword ptr [eax - 0x73]; 
0x00049912: clc; jae 0x4990f; call dword ptr [eax - 0x73]; 
0x00049937: clc; jae 0x49934; call dword ptr [eax - 0x73]; 
0x0004995c: clc; jae 0x49959; call dword ptr [eax - 0x73]; 
0x00049981: clc; jae 0x4997e; call dword ptr [eax - 0x73]; 
0x000499ab: clc; jae 0x499a8; call dword ptr [eax - 0x73]; 
0x000499f5: clc; jae 0x499f2; call dword ptr [eax - 0x73]; 
0x00049a1a: clc; jae 0x49a17; call dword ptr [eax - 0x73]; 
0x00049a61: clc; jae 0x49a5e; call dword ptr [eax - 0x73]; 
0x00049a86: clc; jae 0x49a83; call dword ptr [eax - 0x73]; 
0x00049aca: clc; jae 0x49ac7; call dword ptr [eax - 0x73]; 
0x0007c59f: clc; jge 0x7c59c; call dword ptr [eax + 0x56]; 
0x000d1c3b: clc; jmp dword ptr [esi + 0xb]; 
0x0009fa19: clc; jmp dword ptr [esi - 0x70]; 
0x0016304a: clc; jne 0x163070; pop edi; pop esi; pop ebx; ret; 
0x000c1994: clc; jp 0xc199e; add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x000bee79: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x001461c1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bb1: clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001548f8: clc; mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000d70c2: clc; mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x00146617: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf91: clc; mov eax, edx; pop ebx; ret; 
0x0014f64b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0015062b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001548fb: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00149f8c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf8c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001533dc: clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00094b74: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0001b70f: clc; or byte ptr [edi + 0x74], dh; mov ecx, dword ptr [esp + 4]; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x000da0bd: clc; or byte ptr [edi], cl; test dl, dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x70f0fa08], al; ret 0; 
0x000ff664: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000ff623: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00081ab9: clc; or dword ptr [edi + 0x4b], esi; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x0011393f: clc; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x001039fe: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0013628a: clc; or ecx, dword ptr [edi]; test dword ptr [esi - 0x7d000000], edi; in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00095efd: clc; outsd dx, dword ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f65fe: clc; pop ds; add esp, 8; pop ebx; ret; 
0x000ed215: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0002f9ba: clc; pop ds; not eax; and eax, edx; ret; 
0x0002f65c: clc; pop ds; pop edi; not eax; and eax, edx; ret; 
0x00143362: clc; pop ds; ret; 
0x0002f308: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0009b3fa: clc; pop ebx; pop edi; ret; 
0x0004500a: clc; pop ebx; pop esi; pop ebp; ret; 
0x0001cb5f: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00083c9b: clc; pop ebx; pop esi; pop edi; ret 4; 
0x00033aa5: clc; pop ebx; pop esi; pop edi; ret; 
0x00145fd7: clc; pop ebx; ret; 
0x00151c8e: clc; pop edi; call 0x13cee5; add ebx, 0x3e86b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c93e: clc; pop edi; call 0x13cee5; add ebx, 0x433fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a92e: clc; pop edi; call 0x13cee5; add ebx, 0x4518b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014892e: clc; pop edi; call 0x13cee5; add ebx, 0x46f0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00145362: clc; pop edi; cmova eax, edx; pop ebp; ret; 
0x00034670: clc; pop edi; pop ebp; ret; 
0x0008ea42: clc; pop edi; pop ebx; ret; 
0x000955f1: clc; pop edi; pop esi; pop ebx; ret; 
0x0008b5ff: clc; pop edi; ret; 
0x000698b7: clc; pop esi; pop edi; pop ebp; ret; 
0x0012f3ff: clc; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x00078ece: clc; push dword ptr [ebp - 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00114eb9: clc; push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x000c1107: clc; push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x000692a3: clc; push dword ptr [esi - 0x77]; ret 0xe283; 
0x0007b732: clc; push eax; jbe 0x7b740; ret; 
0x00127154: clc; ret; 
0x0015314a: clc; rol byte ptr [ebx], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ce21b: clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x0007c16a: clc; sbb eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000587db: clc; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0009c8c7: clc; sub eax, 0x10; pop edi; ret; 
0x0003535d: clc; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000700fb: clc; sub esp, 4; push eax; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x000e6031: clc; xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x0009cfc5: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000aff2d: cld; adc eax, 0xec830000; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36376b]; dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000c5d7a: cld; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov eax, 1; int 0x80; 
0x000db1b2: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c6fba: cld; add byte ptr [eax], al; pop ebx; ret; 
0x000c7260: cld; add dword ptr [eax], eax; add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001633b4: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00160ba0: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000c7020: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x00055bf1: cld; add eax, dword ptr [eax]; add byte ptr [ebp - 0x75], ch; add ecx, dword ptr [edi]; test dword ptr [ecx], edx; ret 0xffff; 
0x00055bcf: cld; add eax, dword ptr [eax]; add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x0007b6a2: cld; add eax, dword ptr [eax]; add byte ptr [esi + 8], dh; ret; 
0x000eadbb: cld; add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x0010133d: cld; add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x001259e3: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0004efbe: cld; call dword ptr [ebp + 0x57]; 
0x0015ee16: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x15f060; pop ebx; ret; 
0x0015d68f: cld; cmp ecx, ebx; mov eax, 0; jne 0x15de10; pop ebx; ret; 
0x001604d1: cld; cmp ecx, ebx; mov eax, 0; jne 0x160700; pop ebx; ret; 
0x00144ce3: cld; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56ab379]; call dword ptr [eax - 0x73]; 
0x00143103: cld; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56e3779]; call dword ptr [eax - 0x73]; 
0x00141703: cld; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56e4b79]; call dword ptr [eax - 0x73]; 
0x000d1a3b: cld; inc dword ptr [eax - 0x6bf0f907]; ret 0x7b89; 
0x00145906: cld; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x001457de: cld; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000838e3: cld; inc dword ptr [ebx - 0x17aceb3c]; add edi, edi; jmp dword ptr [esi - 0x70]; 
0x00133f62: cld; inc dword ptr [ebx - 0x7cef3c]; push dword ptr [ecx + ebx - 0x75]; jnp 0x419edfc8; or byte ptr [ecx], bh; ret 0x2875; 
0x0001e1a9: cld; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000829e3: cld; jmp dword ptr [ebp - 0x5f]; 
0x000f0a53: cld; jmp dword ptr [ebp - 0x77]; 
0x00050f54: cld; jmp dword ptr [esi - 0x70]; 
0x00163065: cld; jne 0x163070; pop edi; pop esi; pop ebx; ret; 
0x00163157: cld; jne 0x163160; pop ebx; ret; 
0x001259e6: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0010c681: cld; leave; ret; 
0x0002613e: cld; mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3e4]; test edx, edx; je 0x2614f; call edx; 
0x001479f9: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00149f54: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf54: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001533a4: cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00149fa5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfa5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001533f5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0015ee19: cld; mov eax, 0; jne 0x15f060; pop ebx; ret; 
0x001461c4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014803d: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001479fd: cld; mov eax, edx; pop ebx; ret; 
0x0010eb69: cld; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00132754: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0007f1b6: cld; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x001365da: cld; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00145bb4: cld; pop ebx; ret; 
0x0009d5ad: cld; pop edi; ret; 
0x0003387d: cld; push dword ptr [edi]; push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00125b3a: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00125ac5: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0010681a: cld; push esi; cli; call dword ptr [eax - 0x18]; 
0x000478a0: cld; ret 0xffff; 
0x00033862: cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007bdbd: cld; sbb eax, 0xc9850000; jne 0x7bdd0; ret; 
0x000cebb5: cld; stc; inc dword ptr [ecx]; cli; jmp edx; 
0x000ce730: cld; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x0015d2de: cld; std; inc dword ptr [ecx + 0x3359fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00163152: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x163160; pop ebx; ret; 
0x000348df: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x000b4360: cli; adc ch, byte ptr [ecx]; ret 0x38b; 
0x000b43cb: cli; adc ch, byte ptr [ecx]; ret 0xc269; 
0x000e7ff9: cli; adc dh, byte ptr [edi + 0xf]; mov esi, dword ptr [esp + 0xc]; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x000cf2dd: cli; add al, 0; add byte ptr [ecx], ch; ret 0x4be; 
0x000bb279: cli; add al, 0xf; dec ebp; ret 0x4489; 
0x0002d470: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x00052530: cli; add byte ptr [eax + eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x000c6f8a: cli; add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x000c704d: cli; add byte ptr [ecx], al; sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x000bb42d: cli; add ch, byte ptr [ecx]; ret 0x3c8d; 
0x000b780d: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x00025a82: cli; add cl, byte ptr [edi]; xchg esi, eax; ret 0x540a; 
0x00026994: cli; add cl, byte ptr [edi]; xchg esi, eax; ret 0x550a; 
0x000eb35a: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000ec1b7: cli; add dword ptr [ebp + edi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec317: cli; add dword ptr [ebp + edi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec267: cli; add dword ptr [ebp + edi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0007b459: cli; add dword ptr [ebx + edx - 0x7b], esi; sal byte ptr [ebp + 0x1f], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008736f: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00039c93: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xd120; 
0x000b3936: cli; add ebp, dword ptr [ecx]; ret 0x48d; 
0x000ad368: cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000ad3a4: cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000e3516: cli; and byte ptr [esp + ebp*4 - 0x7b], dh; ret; 
0x0007391b: cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x000f83a1: cli; call dword ptr [eax + 0x50]; 
0x0011e8ca: cli; call dword ptr [eax + 0x51]; 
0x000fe139: cli; call dword ptr [eax + 0x52]; 
0x0002e559: cli; call dword ptr [eax + 0x53]; 
0x000b4d97: cli; call dword ptr [eax + 0x55]; 
0x000258b9: cli; call dword ptr [eax + 0x56]; 
0x0001914f: cli; call dword ptr [eax + 0x57]; 
0x0001e26a: cli; call dword ptr [eax + 0x68]; 
0x0001b026: cli; call dword ptr [eax + 0x6a]; 
0x00132983: cli; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00139f67: cli; call dword ptr [eax + 0x6a]; add ch, al; jmp dword ptr [ecx - 0xf]; 
0x0001b026: cli; call dword ptr [eax + 0x6a]; add eax, ebp; adc byte ptr [ecx], ah; or eax, 0x1cc48300; ret; 
0x000db4ad: cli; call dword ptr [eax - 0x17]; 
0x00019111: cli; call dword ptr [eax - 0x18]; 
0x000e8d26: cli; call dword ptr [eax - 0x18]; adc al, byte ptr [ecx]; hlt; jmp dword ptr [esi - 0x70]; 
0x0008b3fc: cli; call dword ptr [eax - 0x18]; cmp al, 0xda; stc; jmp dword ptr [esi - 0x70]; 
0x001350fe: cli; call dword ptr [eax - 0x18]; cmp bh, byte ptr [0x55e8ffef]; wait; std; jmp dword ptr [esi - 0x70]; 
0x0016baa0: cli; call dword ptr [eax - 0x18]; cwde; shr ebx, cl; jmp dword ptr [esi - 0x70]; 
0x00100fea: cli; call dword ptr [eax - 0x18]; dec esi; jle 0x100fe3; jmp dword ptr [esi - 0x70]; 
0x000747f5: cli; call dword ptr [eax - 0x18]; inc ebx; inc esi; sti; jmp dword ptr [esi - 0x70]; 
0x0010cac2: cli; call dword ptr [eax - 0x18]; jbe 0x10ca8b; int1; jmp dword ptr [esi - 0x70]; 
0x000e95f2: cli; call dword ptr [eax - 0x18]; out 0x97, al; hlt; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x000ad9d9: cli; call dword ptr [eax - 0x18]; pop edi; mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00110997: cli; call dword ptr [eax - 0x18]; popal; sbb al, byte ptr [ecx]; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x00049a76: cli; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x0003a776: cli; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x00109975: cli; call dword ptr [eax - 0x18]; ret; 
0x001108b5: cli; call dword ptr [eax - 0x18]; sbb dword ptr [ecx], 1; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x000a023d: cli; call dword ptr [eax - 0x18]; sti; mov edi, eax; jmp dword ptr [esi - 0x70]; 
0x0003caa1: cli; call dword ptr [eax - 0x18]; xchg edi, eax; ret; 
0x0011b5a6: cli; call dword ptr [eax - 0x18]; xchg edx, eax; fdiv st(0); jmp dword ptr [esi - 0x70]; 
0x000f9ae2: cli; call dword ptr [eax - 0x39]; 
0x00115243: cli; call dword ptr [eax - 0x42]; 
0x0001b78f: cli; call dword ptr [eax - 0x73]; 
0x0001afd3: cli; call dword ptr [eax - 0x75]; 
0x00062b16: cli; call dword ptr [eax - 0x77]; 
0x0001d0e5: cli; call dword ptr [eax - 1]; 
0x00082e4c: cli; call dword ptr [ebp + 0x50]; 
0x00082cdd: cli; call dword ptr [ebp + 0x52]; 
0x00050331: cli; call dword ptr [ebp + 0x53]; 
0x000504e0: cli; call dword ptr [ebp + 0x56]; 
0x0006ac5e: cli; call dword ptr [ebp + 0x57]; 
0x000eea4d: cli; call dword ptr [ebp + 0x6a]; 
0x001151f3: cli; call dword ptr [ebp - 0x77]; 
0x00108054: cli; call dword ptr [ebp - 1]; 
0x000514a7: cli; call dword ptr [ebx + 0x50]; 
0x0004353e: cli; call dword ptr [ebx + 0x51]; 
0x00040c83: cli; call dword ptr [ebx + 0x6a]; 
0x0011ee32: cli; call dword ptr [ebx - 0x18]; 
0x000721de: cli; call dword ptr [ebx - 0x7d]; 
0x000a3f40: cli; call dword ptr [ebx - 1]; 
0x000515b1: cli; call dword ptr [ecx + 0x50]; 
0x000fe115: cli; call dword ptr [ecx + 0x51]; 
0x0010c9cd: cli; call dword ptr [ecx + 0x52]; 
0x00050a7f: cli; call dword ptr [ecx + 0x53]; 
0x000dedc2: cli; call dword ptr [ecx + 0x6a]; 
0x000fa3ba: cli; call dword ptr [ecx - 0x75]; 
0x0011673b: cli; call dword ptr [ecx - 0x77]; 
0x000c4323: cli; call dword ptr [ecx - 1]; 
0x000846cd: cli; call dword ptr [edi + 0x50]; 
0x0012e811: cli; call dword ptr [edi + 0x52]; 
0x0008b4f1: cli; call dword ptr [edi + 0x55]; 
0x0002d17f: cli; call dword ptr [edi + 0x56]; 
0x000fe1e1: cli; call dword ptr [edi + 0x57]; 
0x00121fe6: cli; call dword ptr [edi + 0x6a]; 
0x0012c585: cli; call dword ptr [edi - 0x17]; 
0x0007bb33: cli; call dword ptr [edi - 1]; 
0x0002561a: cli; call dword ptr [edx + 0x50]; 
0x00019135: cli; call dword ptr [edx + 0x52]; 
0x000f8e23: cli; call dword ptr [edx + 0x57]; 
0x001263a1: cli; call dword ptr [edx + 0x6a]; 
0x0010ca87: cli; call dword ptr [edx - 0x17]; 
0x0001bf3b: cli; call dword ptr [edx - 0x73]; 
0x000f8347: cli; call dword ptr [edx - 0x77]; 
0x0001aef5: cli; call dword ptr [edx - 1]; 
0x000828df: cli; call dword ptr [esi + 0x50]; 
0x000fe203: cli; call dword ptr [esi + 0x56]; 
0x0012c4e4: cli; call dword ptr [esi + 0x57]; 
0x000392a2: cli; call dword ptr [esi + 0x6a]; 
0x0011edb6: cli; call dword ptr [esi - 0x18]; 
0x000517f4: cli; call dword ptr [esi - 0x77]; 
0x000fa5a7: cli; call dword ptr [esi - 0x7f]; 
0x00028d84: cli; call dword ptr [esi - 1]; 
0x0001cdb9: cli; call dword ptr gs:[0x10]; 
0x000fd9af: cli; call ptr [ebx + 0x5e]; ret; 
0x000c7154: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x0008790b: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0013c2cc: cli; das; ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x0003c163: cli; dec dword ptr [ebp - 0x39f49]; call dword ptr [esi + 0x6a]; 
0x000df3c3: cli; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00088a73: cli; dec dword ptr [ebp - 0x5741f70]; call dword ptr [edx - 0x73]; 
0x0011543f: cli; dec dword ptr [ebp - 0x58fd757]; call dword ptr [eax + 0x55]; 
0x00028e53: cli; dec dword ptr [ebp - 0x58fd780]; call dword ptr [edx + 0x50]; 
0x00121fe0: cli; dec dword ptr [ebp - 0x59fbc7d]; call dword ptr [edi + 0x6a]; 
0x0011b77c: cli; dec dword ptr [ebp - 0x5a25b7a]; call dword ptr [ecx - 0x77]; 
0x000db4a7: cli; dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x000db21b: cli; dec dword ptr [ebp - 0x5b6a271]; call dword ptr [eax - 0x77]; 
0x000c6c0f: cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x0007d352: cli; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d32e: cli; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x0007d441: cli; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007f1b8: cli; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007fa7c: cli; dec dword ptr [ebp - 0x5bec86d]; call dword ptr [eax - 0x73]; 
0x001315de: cli; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00037f68: cli; dec dword ptr [ebx - 0x10779]; jmp dword ptr [ebp - 0x39]; 
0x0003aaa3: cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0011dde1: cli; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x000fe0c6: cli; dec dword ptr [ecx + 0xfa6f3d6]; xchg edi, eax; rcr byte ptr [eax + eax], 0x84; ror byte ptr [edi], 0x84; ret; 
0x001164c7: cli; dec dword ptr [ecx - 0x48b7b]; call dword ptr [esi + 0x52]; 
0x0002ca89: cli; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x000296cd: cli; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0004fa7e: cli; dec dword ptr [ecx - 0x9ebdb84]; ret 0xf50; 
0x00028360: cli; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0002e814: cli; dec dword ptr [edi]; inc ebp; call 0x20006; jmp dword ptr [esi - 0x70]; 
0x000c27f6: cli; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000c272c: cli; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000fb44f: cli; dec dword ptr [edi]; xchg ebp, eax; ret 0xda21; 
0x000c6eef: cli; inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000f8972: cli; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0004a053: cli; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x49fe9; ret 0x40c7; 
0x0011603d: cli; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00073be2: cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0014335c: cli; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00069a31: cli; inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0006b571: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000db6a8: cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x000e834f: cli; inc dword ptr [ecx]; retf; jmp ebx; 
0x000c195a: cli; inc esi; cli; call dword ptr [eax + 0x53]; 
0x000c2b6a: cli; inc esi; cli; call dword ptr [eax - 0x18]; 
0x000d19ea: cli; jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0003db36: cli; jmp dword ptr [ebp - 0x39]; 
0x00027f77: cli; jmp dword ptr [ebp - 0x75]; 
0x000fcc25: cli; jmp dword ptr [ebp - 0x77]; 
0x000fba22: cli; jmp dword ptr [ecx]; 
0x00157cf6: cli; jmp dword ptr [esi + 0xf]; 
0x000f1c00: cli; jmp dword ptr [esi + 3]; 
0x000695bf: cli; jmp dword ptr [esi - 0x70]; 
0x0002ca93: cli; jmp dword ptr [esi - 0x77]; 
0x000524af: cli; jmp edx; 
0x000754f3: cli; jns 0x75502; add byte ptr [ecx + 0x16eb09c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014f32c: cli; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f3bc: cli; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f44c: cli; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f4dc: cli; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f56c: cli; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f5fc: cli; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ee1c: cli; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eeac: cli; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ef3c: cli; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014efcc: cli; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f05c: cli; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f0ec: cli; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f17c: cli; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f20c: cli; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f29c: cli; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001534c4: cli; mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000bf50c: cli; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf439: cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00146204: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bf4: cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014a087: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c077: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001534c7: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0011baea: cli; or al, 0xf; xchg ebp, eax; rol byte ptr [ebx - 0x4514fb40], 0xe8; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x000a3ba1: cli; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x000394fc: cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x00103056: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0011ded8: cli; or dword ptr [edi], ecx; xchg esp, eax; ret 0xd108; 
0x000f474b: cli; pop ds; call dword ptr gs:[0x10]; 
0x0006f28d: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007628f: cli; pop edi; pop ebp; mov eax, edx; ret; 
0x0006f2d0: cli; pop edi; pop ebp; ret; 
0x00161262: cli; pop edi; ret; 
0x0002d174: cli; push dword ptr [eax + ebp*2 - 0x7d]; in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x0013f17e: cli; push dword ptr [esi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000b4377: cli; ret 0x10; 
0x000ce218: cli; sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000ccd68: cli; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x0015d3ed: cli; std; inc dword ptr [ecx + 0x33490c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00025828: cli; sub al, 0xf; xchg esp, eax; ret 0xd108; 
0x00051f30: cli; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0012c362: cli; sub dh, bh; jmp dword ptr [esi - 0x70]; 
0x0011f642: cli; xchg edi, eax; lock dec dword ptr [ebp - 0x560537f]; call dword ptr [eax - 0x73]; 
0x0003d7bd: cli; xor bh, dl; call dword ptr [eax - 0x18]; 
0x00084008: cli; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x00092fa7: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0009cdb7: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00150d6c: cmc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b2771: cmc; and ch, 0xf; je 0xb2790; add eax, 2; ret; 
0x0013c210: cmc; call dword ptr [eax - 0x18]; 
0x00139d4b: cmc; call dword ptr [eax - 0x73]; 
0x0014000d: cmc; call dword ptr [edi - 1]; 
0x000c164e: cmc; call dword ptr [esi + 0x53]; 
0x000ff3f3: cmc; call ebx; 
0x000c701f: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0008ad5a: cmc; cmp edx, esi; je 0x8ad50; pop ebx; pop esi; ret; 
0x000cea97: cmc; dec dword ptr [ebx - 0x7e722bb3]; jo 0xcea31; cli; call dword ptr [eax - 0x73]; 
0x000cd0c2: cmc; dec dword ptr [ebx - 0x7e7233b3]; jl 0xcd05c; cli; call dword ptr [eax - 0x73]; 
0x0013b037: cmc; dec dword ptr [ecx + 0x45f6240c]; adc byte ptr [esi*2 - 0xf7d72e8], al; popal; cmc; jmp dword ptr [esi - 9]; 
0x000ab147: cmc; fdivr st(7), st(0); dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x000fb166: cmc; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000bfefb: cmc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0014321a: cmc; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000c693d: cmc; inc ebx; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000c5d72: cmc; inc ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000c57dd: cmc; inc ebx; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011a3e9: cmc; je 0x11a3e0; add esp, 8; pop ebx; ret; 
0x00136fb5: cmc; jmp dword ptr [ebp - 0x5f]; 
0x000c1066: cmc; jmp dword ptr [esi - 0x70]; 
0x0013b046: cmc; jmp dword ptr [esi - 9]; 
0x000c7155: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00145c11: cmc; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000865aa: cmc; mov eax, ecx; ret; 
0x001466c7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146067: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00145d0d: cmc; nop; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00063919: cmc; out 0xff, eax; jmp eax; 
0x00119bb7: cmc; out dx, eax; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0009d08a: cmc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008ad22: cmc; pop ebx; ret; 
0x00161222: cmc; pop edi; ret; 
0x00049898: cmc; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x00160227: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0009d32e: cmova eax, ecx; sub eax, esi; pop ebx; pop esi; ret; 
0x000f47a9: cmova eax, edx; pop ebp; ret; 
0x000f4765: cmova eax, edx; ret; 
0x0006f0fd: cmovae eax, dword ptr [edx + 4]; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0007a3fa: cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x000f8269: cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000c07cd: cmovae esi, eax; mov eax, 0xdc; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009e2b1: cmovb eax, ecx; ret; 
0x00101347: cmovb eax, edx; ret; 
0x0015ccca: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0007a75b: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000eb4b3: cmove eax, ecx; ret; 
0x000852c9: cmove eax, edx; add eax, 0x21; ret; 
0x0008527a: cmove eax, edx; add eax, 1; ret; 
0x00081d44: cmove eax, edx; add esp, 0x1c; ret; 
0x00037b18: cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0012f25a: cmove eax, edx; add esp, 8; pop ebx; ret; 
0x000c5805: cmove eax, edx; pop ebx; ret; 
0x00087919: cmove eax, edx; ret; 
0x00028b2b: cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x0008513d: cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00083e6f: cmove edx, eax; mov eax, edx; ret; 
0x000280ff: cmove edx, ecx; mov byte ptr [eax + 0x1115], dl; lea eax, [eax + 0x10e0]; ret; 
0x0009efd2: cmovg eax, edx; pop edi; ret; 
0x0009efb3: cmovg eax, edx; ret; 
0x0006ddd7: cmovg edx, ecx; test eax, eax; jne 0x6ddd0; mov eax, edx; ret; 
0x00077d4f: cmovg edx, ecx; test eax, eax; jne 0x77d48; mov eax, edx; ret; 
0x000f8434: cmovl edi, edx; call dword ptr [eax - 0x18]; 
0x00071283: cmovne eax, ecx; ret; 
0x00087bf7: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x000b410a: cmovne eax, edx; add esp, 0x38; pop ebx; ret; 
0x0012f2a0: cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0007b74d: cmovne eax, edx; mov dword ptr [ecx + 0x1e08], eax; ret; 
0x0006de91: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0007850d: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000d191c: cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00108664: cmovne eax, edx; pop ebx; ret; 
0x000bee80: cmovne eax, edx; ret; 
0x0004b318: cmovne ebx, dword ptr [ebp - 0xa4]; sub esp, 4; push ecx; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0001af99: cmovne ecx, ebp; sub esp, 0xc; push ecx; call edx; 
0x000f45bc: cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00083e35: cmovne edx, eax; mov eax, edx; ret; 
0x00030f5d: cmovne edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00073889: cmovne edx, esi; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x00107c6d: cmovns eax, dword ptr [ebx + 0x14]; add esp, 8; pop ebx; ret; 
0x000f6638: cmovns eax, edx; add esp, 8; pop ebx; ret; 
0x000e1da6: cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x0002462d: cmovs eax, dword ptr [eax]; add byte ptr [ebx - 0x72b7db84], cl; xchg eax, eax; cli; call dword ptr [eax + 0x68]; 
0x000342b9: cmovs eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0001dd7e: cmovs eax, edx; ret; 
0x0011b69b: cmovs ecx, eax; add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x000c0934: cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0007a945: cmp ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0009f9e4: cmp ah, 0x8d; cli; call dword ptr [eax - 0x73]; 
0x000ec012: cmp ah, 0xff; dec dword ptr [ebp - 0x56ac77d]; call dword ptr [eax + 0x68]; 
0x000c8752: cmp ah, 0xff; dec dword ptr [ebp - 0x56ed77d]; call dword ptr [eax + 0x68]; 
0x0007db4f: cmp ah, 0xff; dec dword ptr [ecx - 0x76dfdbb4]; push esp; and al, 0x14; call eax; 
0x0015e996: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000ffb7f: cmp ah, byte ptr [esi]; je 0xffbb7; add esp, 4; pop ebx; pop esi; ret; 
0x000ecac7: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ecac7: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00054027: cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x00076ba7: cmp al, 0x16; ja 0x76be0; movzx eax, al; mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x00074834: cmp al, 0x19; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0007484f: cmp al, 0x19; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d803: cmp al, 0x19; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007a905: cmp al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007abc6: cmp al, 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000c44a6: cmp al, 0x22; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009ec23: cmp al, 0x24; add dword ptr [ecx - 0x76f7dbac], ecx; ret 0x4c89; 
0x0013cef6: cmp al, 0x24; ret; 
0x0010c7ea: cmp al, 0x29; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00067e23: cmp al, 0x29; ja 0x67e50; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x000d50a6: cmp al, 0x29; ret 0x448b; 
0x00067ebf: cmp al, 0x2e; ja 0x67ee8; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x6257c]; add ecx, ebx; jmp ecx; 
0x000d0486: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001191a2: cmp al, 0x31; shr al, 0x86; jl 0x1191a7; inc dword ptr [ebp - 0x76ad8740]; ret; 
0x000b2572: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000d56a2: cmp al, 0x39; ret; 
0x000cc7cc: cmp al, 0x3f; jne 0xcc7e9; mov eax, 1; pop ebx; ret; 
0x0006fccd: cmp al, 0x50; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x000823a8: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00082002: cmp al, 0x51; push ebx; call eax; 
0x00040d42: cmp al, 0x52; call eax; 
0x00071128: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00071207: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0012e2b6: cmp al, 0x55; push dword ptr [esp + 0x20]; push esi; push eax; call dword ptr [edx]; 
0x0012d5ad: cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x00129f88: cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00076080: cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x0016b4d6: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x0001a88d: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000d0575: cmp al, 0x5b; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000c5956: cmp al, 0x65; mov edi, dword ptr [0xc]; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012f773: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e3: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f853: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b6: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f916: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f983: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa03: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012f703: cmp al, 0x65; sub ecx, dword ptr [0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x000b3271: cmp al, 0x65; sub ecx, dword ptr [0x14]; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000ef138: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000b2575: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000ba8e5: cmp al, 0x7a; ja 0xba900; mov ebx, dword ptr [esp + 0x14]; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x0007c59e: cmp al, 0x7d; cli; call dword ptr [eax + 0x56]; 
0x00078b32: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x78b30; ret; 
0x0012dd4b: cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0006de96: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000c5ad3: cmp al, 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0006e333: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00025434: cmp al, 0x83; ret; 
0x00034723: cmp al, 0x83; stosd dword ptr es:[edi], eax; add byte ptr [edi], dl; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x000a087a: cmp al, 0x89; call 0x5d6966dc; ret; 
0x00036715: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000f5ae0: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0010089c: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008431e: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0002f34d: cmp al, 0x89; ret 0xd8f7; 
0x0002939a: cmp al, 0x8b; add al, 0x90; ret; 
0x0006e30f: cmp al, 0x8b; dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0004389d: cmp al, 0x8b; inc eax; inc eax; ret; 
0x000f3455: cmp al, 0x8b; inc ebp; add byte ptr [ecx - 0x17a9fbbd], cl; jle 0xf3410; cli; jmp dword ptr [esi + 3]; 
0x00134e8c: cmp al, 0x8b; inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x0001e265: cmp al, 0x8d; and dword ptr [eax], 0x69; cli; call dword ptr [eax + 0x68]; 
0x0001e193: cmp al, 0x8d; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x0009e8dc: cmp al, 0x8d; cli; call dword ptr [eax - 0x73]; 
0x0001f90b: cmp al, 0x8d; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x000db4a2: cmp al, 0x8d; xchg dword ptr [ecx], eax; xor edx, edi; dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x0012d557: cmp al, 0x8d; xchg esp, eax; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0009fd39: cmp al, 0x8e; cli; call dword ptr [eax - 0x73]; 
0x000b02e0: cmp al, 0x90; cli; call dword ptr [eax - 0x73]; 
0x000cc62d: cmp al, 0x91; cli; call dword ptr [eax - 0x73]; 
0x00050bef: cmp al, 0xc; ret 0x4489; 
0x0008b400: cmp al, 0xda; stc; jmp dword ptr [esi - 0x70]; 
0x000ef9cf: cmp al, 0xe8; jnp 0xef9db; std; jmp dword ptr [ebp - 0x77]; 
0x0002dff7: cmp al, 0xe8; ret; 
0x000f0a4f: cmp al, 0xe8; sti; idiv esp; jmp dword ptr [ebp - 0x77]; 
0x0003b536: cmp al, 0xe9; ret 1; 
0x0010e9c2: cmp al, 0xf6; jmp dword ptr [esi - 0x70]; 
0x000fd0d0: cmp al, 0xf; inc esp; ret 0x5056; 
0x000ba57f: cmp al, 0xf; mov esi, 0x83d6890a; ret 0x8901; 
0x0003c5dc: cmp al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b3ac6: cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0003573a: cmp al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x00149285: cmp al, 0xff; inc dword ptr [ecx + 0x464f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012d541: cmp al, 0xff; jne 0x12d595; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x000ff951: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c435: cmp al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x20]; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x0012d55b: cmp al, 1; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x000c099a: cmp al, 1; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000f6564: cmp al, 1; ret 0x1389; 
0x0014bd0b: cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013cbb8: cmp al, 4; jne 0x1a68f; mov eax, 8; add esp, 0xc; ret; 
0x0012008a: cmp al, 9; ret 0x850f; 
0x0014bf12: cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001089d2: cmp al, byte ptr [eax]; add byte ptr [ebx + 0x57500cc4], al; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0003427b: cmp al, byte ptr [eax]; jne 0x34288; add esp, 4; pop ebx; pop esi; ret; 
0x000f1b33: cmp al, byte ptr [ebp - 0x72e8812e]; push eax; jmp dword ptr [esi - 0x7d]; 
0x00034595: cmp al, byte ptr [ebx + 0x1700ab]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0016be75: cmp al, byte ptr [ebx + 0x1aa0ab]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x000c112e: cmp al, byte ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x000506a5: cmp al, byte ptr [ebx - 0x7972f714]; in eax, dx; xor edi, edx; call dword ptr [eax + 0x53]; 
0x000f545a: cmp al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00051202: cmp al, byte ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009d97d: cmp al, byte ptr [edx - 1]; jne 0x9db2b; pop esi; xor eax, eax; pop ebx; ret; 
0x0015d611: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x001606eb: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x0010f827: cmp al, ch; ret; 
0x0009cbc5: cmp al, dh; pop edi; ret; 
0x001012f5: cmp ax, 0x12; ja 0x101305; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x0007e357: cmp bh, 0xff; call dword ptr [esi + 0x6a]; 
0x0002f376: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x00149675: cmp bh, bh; inc dword ptr [ecx + 0x46108c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014946e: cmp bh, bh; inc dword ptr [ecx + 0x4630fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a013e: cmp bh, bh; je 0xa0166; inc eax; push edi; call esi; 
0x000fa179: cmp bh, bh; jmp dword ptr [ebp - 0x77]; 
0x00135102: cmp bh, byte ptr [0x55e8ffef]; wait; std; jmp dword ptr [esi - 0x70]; 
0x00131ee2: cmp bh, byte ptr [ebx - 0x11]; call dword ptr [eax - 0x73]; 
0x000459da: cmp bh, ch; jmp dword ptr [esi - 0x70]; 
0x000c97da: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000c92b6: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0015290a: cmp bl, bl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006c7b2: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x001179aa: cmp bl, dh; call dword ptr [eax - 0x18]; 
0x000f5b40: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000f825d: cmp byte ptr [eax + 0x1a], bh; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000f5c84: cmp byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000efc01: cmp byte ptr [eax + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x000c346a: cmp byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72d3dba4], cl; sbb dword ptr [ebp + 0x47], -6; call dword ptr [eax - 0x73]; 
0x001110c3: cmp byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72d7dba4], cl; add dword ptr [edx + ebx*2], -6; call dword ptr [eax - 0x73]; 
0x00111b03: cmp byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72d7dba4], cl; xor dword ptr [ebx], 0x5a; cli; call dword ptr [eax - 0x73]; 
0x0010f683: cmp byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72dbdba4], cl; add ecx, 0x59; cli; call dword ptr [eax - 0x73]; 
0x00031d15: cmp byte ptr [eax + 0xb1], bh; call dword ptr gs:[0x10]; 
0x00031cbc: cmp byte ptr [eax + 0xb1], bh; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000d06ca: cmp byte ptr [eax + 1], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011b3a4: cmp byte ptr [eax + 2], 0; jne 0x11b3b8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0016291f: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x00054ff4: cmp byte ptr [eax + eax], bl; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00026185: cmp byte ptr [eax + eax], cl; add byte ptr [ecx], bh; ret 0x1f74; 
0x000b15c2: cmp byte ptr [eax + edx*4], 0xfa; call dword ptr [eax - 0x73]; 
0x0010aea5: cmp byte ptr [eax - 0x67], 0xfa; call dword ptr [eax + 0x6a]; 
0x00042d37: cmp byte ptr [eax - 1], 0x2f; jne 0x42d30; add esp, 8; pop ebx; ret; 
0x0007ab85: cmp byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00083db9: cmp byte ptr [eax], 0x8b; cli; call dword ptr [eax + 0x68]; 
0x00093342: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00092bd3: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x0009cbf5: cmp byte ptr [eax], ah; pop edi; ret; 
0x00108c20: cmp byte ptr [eax], al; add byte ptr [ebx + 0x56500cc4], al; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0015e956: cmp byte ptr [eax], al; ret 0xf66; 
0x001078ac: cmp byte ptr [eax], bl; int1; dec dword ptr [ecx + 0x30e82434]; sbb cl, dh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009cbe5: cmp byte ptr [eax], dl; pop edi; ret; 
0x000b256a: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00042d22: cmp byte ptr [ebp + 0x2c6ff42], cl; add byte ptr [ecx], bh; ret; 
0x0003919b: cmp byte ptr [ebp - 0x39f79], cl; call dword ptr [eax - 0x73]; 
0x000c69ed: cmp byte ptr [ebp - 0x47d18a0a], al; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c6aad: cmp byte ptr [ebp - 0x47d18a0a], al; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00133ca5: cmp byte ptr [ebp - 0x55a377a], cl; call dword ptr [eax - 0x73]; 
0x00039a84: cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a6f5: cmp byte ptr [ebp - 0x58c8f79], cl; call dword ptr [eax - 0x73]; 
0x000202bc: cmp byte ptr [ebp - 0x5f7bf00a], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x001469a9: cmp byte ptr [ebp - 1], ah; inc dword ptr [ecx + 0x48953c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0004389a: cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0009c091: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0006e275: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0002f490: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x0002f4c2: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0005813f: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012da1d: cmp byte ptr [ebx + 0x8b0cec], al; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00055be8: cmp byte ptr [ebx - 0x10768], cl; inc dword ptr [ebx + 0x3fcba]; add byte ptr [ebp - 0x75], ch; add ecx, dword ptr [edi]; test dword ptr [ecx], edx; ret 0xffff; 
0x00039ec5: cmp byte ptr [ebx - 0x10779], cl; jmp dword ptr [ebp - 0x39]; 
0x000edc97: cmp byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0005baa5: cmp byte ptr [ebx - 0x50f7b], cl; dec dword ptr [ecx + 0x29008bf2]; ret 0xd389; 
0x000540c2: cmp byte ptr [ebx - 0x5df7b], cl; dec dword ptr [ecx + 0x29008bf2]; ret 0xd389; 
0x000c0ce1: cmp byte ptr [ebx - 0x76cbdbb4], cl; rdtsc; jmp dword ptr [esi - 0x77]; 
0x00020939: cmp byte ptr [ebx - 0x7cdfdbbc], cl; rol byte ptr [ecx], 0x83; ret; 
0x000e9fc8: cmp byte ptr [ebx - 6], cl; call dword ptr [eax - 0x18]; 
0x000c6e43: cmp byte ptr [ebx], 0x48; cli; call dword ptr [eax - 0x18]; 
0x001136a6: cmp byte ptr [ebx], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013db6e: cmp byte ptr [ebx], dh; cli; call dword ptr [eax - 0x18]; 
0x00040c81: cmp byte ptr [ebx], dh; cli; call dword ptr [ebx + 0x6a]; 
0x000f77c6: cmp byte ptr [ecx + 0x190c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f5add: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x0013fb00: cmp byte ptr [ecx + 0x47896639], cl; or al, 0x31; jmp dword ptr [ebp - 0x5f]; 
0x000c0490: cmp byte ptr [ecx + 0x47896639], cl; or byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x000f22b4: cmp byte ptr [ecx + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x00027471: cmp byte ptr [ecx - 0x1bf63], cl; jmp dword ptr [ebp - 0x75]; 
0x00100894: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00022ab3: cmp byte ptr [ecx - 0x769fdbbc], cl; ret 0x44c7; 
0x000a7250: cmp byte ptr [ecx - 0x76bfdbac], cl; ret 0xe2d3; 
0x0007052f: cmp byte ptr [ecx - 0x76bfdbbc], cl; ret; 
0x0012d1c8: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00101939: cmp byte ptr [ecx], 0; je 0x101940; ret; 
0x0007b5bc: cmp byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x00093343: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x00092bd4: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b2567: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0001a770: cmp byte ptr [ecx], bl; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0001a6d0: cmp byte ptr [ecx], bl; add byte ptr [eax], al; ret; 
0x001312da: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], cl; std; sal esi, 1; call ecx; 
0x00163037: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000853fc: cmp byte ptr [edi + esi*8], 0xff; cmovne edx, eax; mov eax, edx; ret; 
0x0016ba8b: cmp byte ptr [edi - 6], ch; call dword ptr [eax - 0x73]; 
0x0015d3d8: cmp byte ptr [edi], dl; ret 0x2c73; 
0x0015dd99: cmp byte ptr [edi], dl; ret 0x3273; 
0x0015d3c3: cmp byte ptr [edi], dl; ret 0x3e73; 
0x0015dd7f: cmp byte ptr [edi], dl; ret 0x4c73; 
0x0015d3ae: cmp byte ptr [edi], dl; ret 0x5073; 
0x0015d399: cmp byte ptr [edi], dl; ret 0x6273; 
0x0015dd65: cmp byte ptr [edi], dl; ret 0x6673; 
0x0015cd34: cmp byte ptr [edi], dl; ret 0x830f; 
0x00139c7f: cmp byte ptr [edx + 0x50], dl; push dword ptr [esp + 0x40]; lea eax, [esp + 0x60]; push eax; call ecx; 
0x00162adc: cmp byte ptr [edx + 0xb], 0; je 0x162b62; mov eax, 0xc; pop edi; ret; 
0x00162b14: cmp byte ptr [edx + 0xf], 0; je 0x162b76; mov eax, 0x10; pop edi; ret; 
0x00157c34: cmp byte ptr [edx + 0xf], cl; jne 0x157a90; pop ebp; xor eax, eax; ret; 
0x00075edd: cmp byte ptr [edx + 3], ch; call 0xec3d0; add esp, 0x1c; ret; 
0x0014b7ca: cmp byte ptr [edx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148d4a: cmp byte ptr [edx + 4], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003427a: cmp byte ptr [edx], 0; jne 0x34288; add esp, 4; pop ebx; pop esi; ret; 
0x0012d1c1: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0007ab86: cmp byte ptr [edx], bl; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00078a55: cmp byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x000662d4: cmp byte ptr [edx], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000d195a: cmp byte ptr [edx], cl; je 0xd18c2; pop ebx; pop esi; pop edi; ret; 
0x0013c675: cmp byte ptr [esi + 0x64], 0xfa; call dword ptr [eax - 0x18]; 
0x0012f20b: cmp byte ptr [esi + edi*8 - 1], 0xff; mov eax, dword ptr gs:[eax]; test eax, eax; je 0x12f220; ret; 
0x000c70ed: cmp byte ptr [esi], ah; mov eax, 0x20; cmovne eax, edx; ret; 
0x000c6fa6: cmp byte ptr [esi], ah; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000c71c8: cmp byte ptr [esi], ah; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0015d564: cmp ch, bh; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x0016064a: cmp ch, bh; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x0001e23d: cmp ch, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x0009e590: cmp cl, 0; je 0x9e596; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000b08fa: cmp cl, bh; dec dword ptr [ebx - 0x362f7b]; call dword ptr [ebx - 1]; 
0x0002697b: cmp cl, byte ptr [ecx - 0x6bf04bab]; ret 0x5f3c; 
0x00106d4e: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0015d4c8: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x0016058e: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x0015f0a4: cmp cl, byte ptr [edx]; je 0x15f0c0; mov eax, 1; ja 0x15f0b1; neg eax; ret; 
0x0009d875: cmp cl, byte ptr [edx]; jne 0x9d87d; xor eax, eax; pop ebx; ret; 
0x000de45d: cmp cl, ch; mov edx, 0x89fffff4; ret 0x8ce9; 
0x00086e08: cmp cl, dl; je 0x86e0d; inc eax; pop edi; ret; 
0x000e2f1b: cmp cx, 2; je 0xe2f30; mov eax, edx; pop ebx; pop esi; ret; 
0x0015de23: cmp cx, bx; pop ebx; mov eax, 1; ja 0x15de30; neg eax; ret; 
0x00048de7: cmp dh, 0xff; dec dword ptr [ebx - 0x361f7b]; call dword ptr [edx + 0x6a]; 
0x0012f3ac: cmp dh, 0xff; dec dword ptr [ecx - 0x76097a09]; ret 0x468d; 
0x00139fb9: cmp dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0013a172: cmp dh, 0xff; jmp dword ptr [ebp - 0x77]; 
0x0002ac8a: cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0005aad7: cmp dh, byte ptr [ebp - 0x7d]; ret 0x8904; 
0x0015a1a2: cmp dh, byte ptr [ebx]; hlt; call dword ptr [ebx - 0x18]; 
0x0009e1ef: cmp dh, cl; jne 0x9e1f6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000854e4: cmp dh, dh; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x001601a7: cmp dh, dh; ret 0x7504; 
0x0013c2cb: cmp dl, 0x2f; ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x000a47e6: cmp dl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0011c192: cmp dl, 0xff; dec dword ptr [ebp + 0x2cac9a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000280fb: cmp dl, 0xff; pop edi; cmove edx, ecx; mov byte ptr [eax + 0x1115], dl; lea eax, [eax + 0x10e0]; ret; 
0x0016bdaa: cmp dl, bl; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00029412: cmp dl, byte ptr [ecx]; add byte ptr [0x1babeb], al; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293f2: cmp dl, byte ptr [ecx]; add byte ptr [0x1bac0b], al; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x000b4fc1: cmp dword ptr [eax + 0xf000020], -0x6b; ret 0xb38b; 
0x0006cbd8: cmp dword ptr [eax + 0xf0], 0x81b9; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0010c477: cmp dword ptr [eax + 4], ecx; jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x0009f2bd: cmp dword ptr [eax + 8], edx; jne 0x9f298; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000a5383: cmp dword ptr [eax + eax], ecx; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x00131ee8: cmp dword ptr [eax - 0x5b], -6; call dword ptr [eax - 0x73]; 
0x0012a7bd: cmp dword ptr [eax - 0x5e], -6; call dword ptr [eax - 0x73]; 
0x000ec017: cmp dword ptr [eax], -0x6b; cli; call dword ptr [eax + 0x68]; 
0x000c70ec: cmp dword ptr [eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x000c6fa5: cmp dword ptr [eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000c71c7: cmp dword ptr [eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0016ba8a: cmp dword ptr [eax], 0x6f; cli; call dword ptr [eax - 0x73]; 
0x000c68cb: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000581eb: cmp dword ptr [eax], eax; add byte ptr [ebx - 0x4f373], cl; dec dword ptr [ebx - 0x16b4f]; dec dword ptr [ecx - 0x53f4b]; jmp dword ptr [ebp - 0x75]; 
0x0010193a: cmp dword ptr [eax], eax; je 0x101940; ret; 
0x00028176: cmp dword ptr [ebx + 0x20], eax; jbe 0x2818e; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x0011baba: cmp dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0011bed3: cmp dword ptr [ebx - 0x68f0f001], eax; ret 0xc739; 
0x000846b6: cmp dword ptr [ebx - 0x7c72fb14], eax; rol byte ptr [edx + edi*8 - 1], 0x6a; add eax, 0x28838d50; jo 0x846c2; call dword ptr [eax - 0x18]; 
0x000e1e30: cmp dword ptr [ecx + 0x10], edx; jb 0xe1e3d; setne al; movzx eax, al; neg eax; ret; 
0x000fd9ac: cmp dword ptr [ecx + 0x4b], -6; call ptr [ebx + 0x5e]; ret; 
0x00134cf4: cmp dword ptr [ecx + 0x5e], -6; call dword ptr [eax - 0x18]; 
0x0012c582: cmp dword ptr [ecx + 0x62], -6; call dword ptr [edi - 0x17]; 
0x0001a6e9: cmp dword ptr [ecx + 0x94], edx; jne 0x1a6be; ret; 
0x000e1e50: cmp dword ptr [ecx + 4], edx; ja 0xe1e5b; setne al; movzx eax, al; ret; 
0x000bf225: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xbf2a0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00102734: cmp dword ptr [ecx + 8], edx; jb 0x102741; seta al; movzx eax, al; neg eax; ret; 
0x0013a200: cmp dword ptr [ecx + 8], edx; jb 0x13a20d; seta al; movzx eax, al; neg eax; ret; 
0x000f14b9: cmp dword ptr [ecx - 0x3fceebba], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012c3a7: cmp dword ptr [ecx], 0x6afffa62; add eax, 0x28818d50; jo 0x12c3ae; call dword ptr [eax - 0x18]; 
0x000ffa0a: cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009cc06: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x00052af0: cmp dword ptr [ecx], edi; ret 0x840f; 
0x000b248e: cmp dword ptr [edi + 0x10], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b24a3: cmp dword ptr [edi + 0x14], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b24b8: cmp dword ptr [edi + 0x18], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b24d3: cmp dword ptr [edi + 0x1c], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b24ee: cmp dword ptr [edi + 0x20], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2503: cmp dword ptr [edi + 0x24], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2518: cmp dword ptr [edi + 0x28], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2523: cmp dword ptr [edi + 0x2c], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b253e: cmp dword ptr [edi + 0x30], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2553: cmp dword ptr [edi + 0x34], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2568: cmp dword ptr [edi + 0x38], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2573: cmp dword ptr [edi + 0x3c], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000ac86e: cmp dword ptr [edi + 0x68fffa45], -0x3f; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub esp, -0x75; cli; call dword ptr [eax - 0x18]; 
0x000b240b: cmp dword ptr [edi + 0xc], ecx; jne 0xb2580; xor eax, eax; pop edi; pop esi; ret; 
0x000b2458: cmp dword ptr [edi + 8], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b242d: cmp dword ptr [edi], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x00071280: cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x000b5738: cmp dword ptr [edx + 0x46], -6; call dword ptr [eax - 0x18]; 
0x0006f0fa: cmp dword ptr [edx + 4], eax; cmovae eax, dword ptr [edx + 4]; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0007a3f7: cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x000b284e: cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0xb2830; mov eax, ecx; ret; 
0x000c5d6f: cmp dword ptr [edx + edx*2 - 0xb], -1; ret; 
0x000ffb7e: cmp dword ptr [edx], 0x26; je 0xffbb7; add esp, 4; pop ebx; pop esi; ret; 
0x0001e23c: cmp dword ptr [edx], 0x2e; cli; call dword ptr [eax - 0x18]; 
0x0006920c: cmp dword ptr [edx], eax; sti; call dword ptr [ebp + 0x57]; 
0x00033c44: cmp dword ptr [edx], esi; cli; call dword ptr [eax - 0x18]; 
0x00083252: cmp dword ptr [esi + 0x44], -6; call dword ptr [eax - 0x73]; 
0x00026ddb: cmp dword ptr [esi + 0xe], 0x878d00; outsd dx, dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x001622e6: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x000d026a: cmp dword ptr [esi + ecx*4], ebx; je 0xd0280; pop ebx; pop esi; ret; 
0x0013fb02: cmp dword ptr [esi - 0x77], esp; inc edi; or al, 0x31; jmp dword ptr [ebp - 0x5f]; 
0x000c0492: cmp dword ptr [esi - 0x77], esp; inc edi; or byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x000bee25: cmp dword ptr [esp + 0x14], 1; je 0xbee30; add esp, 0xc; ret; 
0x00031c70: cmp dword ptr [esp + 4], 0; je 0x31c90; lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x0007b334: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0011b1a4: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x000c70eb: cmp dword ptr gs:[eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x000c6fa4: cmp dword ptr gs:[eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000c71c6: cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000ffb7d: cmp dword ptr gs:[edx], 0x26; je 0xffbb7; add esp, 4; pop ebx; pop esi; ret; 
0x000bee78: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x000bef45: cmp eax, -0x26; jne 0xbefa0; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000e6030: cmp eax, -0x6c; cli; call dword ptr [eax - 0x73]; 
0x0011a3e7: cmp eax, -0xb; je 0x11a3e0; add esp, 8; pop ebx; ret; 
0x00081d41: cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0008f179: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00078ecd: cmp eax, -1; jne 0x78e96; add esp, 4; pop ebx; pop esi; ret; 
0x000c57fd: cmp eax, -1; mov edx, 0; cmove eax, edx; pop ebx; ret; 
0x0013d052: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x000f9a74: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x001012f6: cmp eax, 0x12; ja 0x101305; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x000b537a: cmp eax, 0x20c8ab83; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0009bf59: cmp eax, 0x3000e64; or al, 0x91; jmp ecx; 
0x0013b94a: cmp eax, 0x3758ab83; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000dcaec: cmp eax, 0x3904c083; ret 0xf375; 
0x000c5cdf: cmp eax, 0x39fffb40; ret; 
0x000bf31f: cmp eax, 0x3b9ac9ff; ja 0xbf3a8; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000cd1d8: cmp eax, 0x3b; ja 0xcd200; mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x0007b6a1: cmp eax, 0x3fc; jbe 0x7b6b0; ret; 
0x0010eb87: cmp eax, 0x3ff; ja 0x10eb95; sar eax, 5; add esp, 0xc; ret; 
0x0007b731: cmp eax, 0x50; jbe 0x7b740; ret; 
0x00135103: cmp eax, 0x55e8ffef; wait; std; jmp dword ptr [esi - 0x70]; 
0x000aa3fd: cmp eax, 0x5b20c483; pop esi; pop edi; ret; 
0x0007e434: cmp eax, 0x5b24c483; pop esi; ret; 
0x0008ef10: cmp eax, 0x5bffffff; ret; 
0x00030ea1: cmp eax, 0x65fffffe; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x0013d011: cmp eax, 0x65fffffe; mov dword ptr [eax], 0x16; xor eax, eax; ret; 
0x000c01e9: cmp eax, 0x65fffffe; mov dword ptr [eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000487eb: cmp eax, 0x73; cli; call dword ptr [eax - 0x73]; 
0x0007b571: cmp eax, 0x80000; jbe 0x7b580; ret; 
0x001375a4: cmp eax, 0x81000059; ret; 
0x0012f0a4: cmp eax, 0x810000de; ret; 
0x00121fa4: cmp eax, 0x810001af; ret; 
0x00095eb8: cmp eax, 0x81000a70; rol dword ptr [ebx + eax*8], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000722a4: cmp eax, 0x81000cac; ret; 
0x001532a4: cmp eax, 0x81fffe9c; ret; 
0x001527a4: cmp eax, 0x81fffea7; ret; 
0x0014e6a4: cmp eax, 0x81fffee8; ret; 
0x0014a5a4: cmp eax, 0x81ffff29; ret; 
0x0012befa: cmp eax, 0x83ffeee7; in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0016856f: cmp eax, 0x840f0800; ret; 
0x0007d435: cmp eax, 0x8b000011; jl 0x7d460; adc byte ptr [ebp - 0x5761b79], cl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x000505c2: cmp eax, 0x8d08ec83; xchg ch, ch; xor edi, edx; call dword ptr [eax + 0x53]; 
0x000ecbaf: cmp eax, 0x8dfff2e4; je 0xecbdc; add byte ptr [eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000b6c55: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0008790c: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0009d292: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000ec1ba: cmp eax, 0xc244c8d; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec31a: cmp eax, 0xc244c8d; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec26a: cmp eax, 0xc244c8d; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00149135: cmp eax, 0xc381ffff; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001491ce: cmp eax, 0xc381ffff; scasd eax, dword ptr es:[edi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c5959: cmp eax, 0xc; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012c87c: cmp eax, 0xf; ja 0x12c890; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x0007b6e1: cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x001015a0: cmp eax, 0xfffff000; ja 0x1015b0; pop ebx; pop esi; pop edi; ret; 
0x00101682: cmp eax, 0xfffff000; ja 0x101690; pop ebx; pop esi; pop edi; ret; 
0x0010184e: cmp eax, 0xfffff000; ja 0x101860; pop ebx; pop esi; pop edi; ret; 
0x00101892: cmp eax, 0xfffff000; ja 0x1018a0; pop ebx; pop esi; pop edi; ret; 
0x0010da02: cmp eax, 0xfffff000; ja 0x10da10; add esp, 8; pop ebx; ret; 
0x0014325a: cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00145592: cmp eax, 0xfffff000; ja 0x1455a0; pop ebx; pop esi; pop edi; ret; 
0x00145662: cmp eax, 0xfffff000; ja 0x145670; pop ebx; pop esi; pop edi; ret; 
0x00031186: cmp eax, 0xfffff000; ja 0x31190; pop ebx; ret; 
0x00050f45: cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x00050f7e: cmp eax, 0xfffff000; ja 0x50f90; pop ebx; pop esi; ret; 
0x000b4031: cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000b4149: cmp eax, 0xfffff000; ja 0xb4160; pop ebx; ret; 
0x000b4303: cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x000c0943: cmp eax, 0xfffff000; ja 0xc0950; pop ebx; ret; 
0x000e1e09: cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec097: cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec3b5: cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3e5: cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec415: cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x000ec709: cmp eax, 0xfffff000; ja 0xec728; pop ebx; ret; 
0x000ec75e: cmp eax, 0xfffff000; ja 0xec780; pop ebx; pop esi; ret; 
0x000ec8da: cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec90a: cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ecb89: cmp eax, 0xfffff000; ja 0xecbb8; pop ebx; ret; 
0x000ed315: cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f5681: cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5813: cmp eax, 0xfffff000; ja 0xf5830; add esp, 4; pop ebx; pop esi; ret; 
0x000f5876: cmp eax, 0xfffff000; ja 0xf5890; add esp, 4; pop ebx; pop esi; ret; 
0x000f58d2: cmp eax, 0xfffff000; ja 0xf58f0; add esp, 4; pop ebx; pop esi; ret; 
0x000f5935: cmp eax, 0xfffff000; ja 0xf5950; add esp, 4; pop ebx; pop esi; ret; 
0x000f5979: cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59b3: cmp eax, 0xfffff000; ja 0xf59c0; pop ebx; pop esi; pop edi; ret; 
0x000f59e9: cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f6205: cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f6235: cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f630a: cmp eax, 0xfffff000; ja 0xf6318; pop ebx; pop esi; ret; 
0x000f633a: cmp eax, 0xfffff000; ja 0xf6348; pop ebx; pop esi; ret; 
0x000f7b8b: cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000f9105: cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f92dd: cmp eax, 0xfffff000; ja 0xf9300; pop ebx; ret; 
0x000f9325: cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f9355: cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9389: cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b9: cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000fd22d: cmp eax, 0xfffff000; ja 0xfd250; pop ebx; ret; 
0x000ff47e: cmp eax, 0xfffff000; ja 0xff490; pop ebx; pop esi; ret; 
0x000ff5bf: cmp eax, 0xfffff000; ja 0xff5d0; pop ebx; pop esi; ret; 
0x000ffbf3: cmp eax, 0xfffff000; ja 0xffc10; pop ebx; pop esi; ret; 
0x000ffcf3: cmp eax, 0xfffff000; ja 0xffd00; pop ebx; pop esi; pop edi; ret; 
0x000f479e: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; pop ebp; ret; 
0x000f475a: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0014535c: cmp eax, 0xfffff000; mov eax, edi; pop edi; cmova eax, edx; pop ebp; ret; 
0x00031158: cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00043837: cmp eax, 0xfffff001; jae 0x1aff0; xor eax, eax; ret; 
0x001316ae: cmp eax, 1; je 0x1316d0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0013178e: cmp eax, 1; je 0x1317b0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00131d5e: cmp eax, 1; je 0x131d80; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0009ecfa: cmp eax, 1; je 0x9ed10; cmp eax, 2; je 0x9ed20; xor eax, eax; ret; 
0x000fa26c: cmp eax, 1; jg 0xfa278; pop ebx; pop esi; ret; 
0x00104b94: cmp eax, 1; jle 0x1048cb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001057ad: cmp eax, 1; jle 0x10572f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105824: cmp eax, 1; jle 0x105787; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001065b2: cmp eax, 1; jle 0x1064f5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001071fd: cmp eax, 1; jle 0x10717f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00107274: cmp eax, 1; jle 0x1071d7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d54c: cmp eax, 1; jle 0x10d4b5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d8d4: cmp eax, 1; jle 0x10d880; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010dd94: cmp eax, 1; jle 0x10dd23; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010e4d4: cmp eax, 1; jle 0x10e48a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013de2e: cmp eax, 1; jle 0x13dd98; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e026: cmp eax, 1; jle 0x13df6e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e1ac: cmp eax, 1; jle 0x13e14a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e32c: cmp eax, 1; jle 0x13e2ca; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033f7c: cmp eax, 1; jle 0x33e72; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033fa6: cmp eax, 1; jle 0x33f48; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00051144: cmp eax, 1; jle 0x5113a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0005412d: cmp eax, 1; jle 0x51e4e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0005a709: cmp eax, 1; jle 0x58706; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00062834: cmp eax, 1; jle 0x6273d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006785e: cmp eax, 1; jle 0x659d8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00067d1c: cmp eax, 1; jle 0x67c51; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068c24: cmp eax, 1; jle 0x68be5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068d64: cmp eax, 1; jle 0x68d1b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000691e4: cmp eax, 1; jle 0x68fa0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006959c: cmp eax, 1; jle 0x6954b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006977c: cmp eax, 1; jle 0x69700; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000698f4: cmp eax, 1; jle 0x69876; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069ea4: cmp eax, 1; jle 0x69e40; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069fd4: cmp eax, 1; jle 0x69f74; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a124: cmp eax, 1; jle 0x6a0a5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a2fe: cmp eax, 1; jle 0x6a249; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a5a6: cmp eax, 1; jle 0x6a498; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a871: cmp eax, 1; jle 0x6a785; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006ac34: cmp eax, 1; jle 0x6ab38; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b77c: cmp eax, 1; jle 0x6b69f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b9ec: cmp eax, 1; jle 0x6b9b6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bb94: cmp eax, 1; jle 0x6bb60; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bd0c: cmp eax, 1; jle 0x6bca2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bf54: cmp eax, 1; jle 0x6bddb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c084: cmp eax, 1; jle 0x6c038; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c494: cmp eax, 1; jle 0x6c415; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c604: cmp eax, 1; jle 0x6c585; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c744: cmp eax, 1; jle 0x6c6dd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c8b4: cmp eax, 1; jle 0x6c86d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006ca24: cmp eax, 1; jle 0x6c990; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cbd4: cmp eax, 1; jle 0x6cb5a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cdd4: cmp eax, 1; jle 0x6cd5b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d294: cmp eax, 1; jle 0x6d266; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d3b4: cmp eax, 1; jle 0x6d35c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d534: cmp eax, 1; jle 0x6d4a2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d6d4: cmp eax, 1; jle 0x6d642; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006faa7: cmp eax, 1; jle 0x6f51f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071734: cmp eax, 1; jle 0x716f5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071824: cmp eax, 1; jle 0x717e6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071914: cmp eax, 1; jle 0x718d6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071aa4: cmp eax, 1; jle 0x71a24; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071dec: cmp eax, 1; jle 0x71c5d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071f04: cmp eax, 1; jle 0x71ed3; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007204c: cmp eax, 1; jle 0x71fcb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000721b4: cmp eax, 1; jle 0x72133; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000724a4: cmp eax, 1; jle 0x72424; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072594: cmp eax, 1; jle 0x72562; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072f34: cmp eax, 1; jle 0x72f03; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007310e: cmp eax, 1; jle 0x73059; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000733f4: cmp eax, 1; jle 0x732c7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00073524: cmp eax, 1; jle 0x734ee; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000736ee: cmp eax, 1; jle 0x73649; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00074ad4: cmp eax, 1; jle 0x74a83; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00077704: cmp eax, 1; jle 0x77670; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000778d2: cmp eax, 1; jle 0x778f0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00077c64: cmp eax, 1; jle 0x77c80; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791fc: cmp eax, 1; jle 0x79028; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000798fc: cmp eax, 1; jle 0x797be; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e536: cmp eax, 1; jle 0x7e4df; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e592: cmp eax, 1; jle 0x7e511; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007fece: cmp eax, 1; jle 0x7fe00; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008001c: cmp eax, 1; jle 0x7fff5; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000803b7: cmp eax, 1; jle 0x802df; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008128d: cmp eax, 1; jle 0x80fcb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000817c4: cmp eax, 1; jle 0x81747; mov eax, 0xf0; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x00081a04: cmp eax, 1; jle 0x8195c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c0637: cmp eax, 1; jle 0xc0608; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c06df: cmp eax, 1; jle 0xc06b0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2904: cmp eax, 1; jle 0xc27dc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c28dc: cmp eax, 1; jle 0xc27e1; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a33: cmp eax, 1; jle 0xc39e3; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5715: cmp eax, 1; jle 0xc5697; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5794: cmp eax, 1; jle 0xc56ef; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012ab0f: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00132e1e: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0009ecff: cmp eax, 2; je 0x9ed20; xor eax, eax; ret; 
0x001316b3: cmp eax, 2; sete al; movzx eax, al; ret; 
0x00025507: cmp eax, 3; je 0x25518; add esp, 8; pop ebx; ret; 
0x0007b35b: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0001b70e: cmp eax, 8; ja 0x1b787; mov ecx, dword ptr [esp + 4]; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x000c5bb8: cmp eax, 8; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x000ff622: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x000ff663: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00081ab8: cmp eax, 9; ja 0x81b08; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x0014be5b: cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00137484: cmp eax, dword ptr [ebx + 0x3584ab]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0013bbf4: cmp eax, dword ptr [ebx + 0x3758ab]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00130734: cmp eax, dword ptr [ebx + 0x458b0cec]; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0012f19c: cmp eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0001d361: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001023b4: cmp eax, dword ptr [ecx + 0x26a4]; jae 0x1023c7; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x000ff8a1: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009ed56: cmp eax, dword ptr [ecx]; add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0015ee21: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x00163024: cmp eax, dword ptr [esi - 0x10]; jne 0x163070; pop edi; pop esi; pop ebx; ret; 
0x0004d2f5: cmp eax, ebx; ja 0x4d2e0; mov eax, ecx; pop ebx; pop esi; ret; 
0x00127ec0: cmp eax, ebx; jne 0x127eb0; pop ebx; ret; 
0x0008ac63: cmp eax, ebx; jne 0x8ac58; mov eax, edx; pop ebx; ret; 
0x0008ac9f: cmp eax, ebx; jne 0x8ac90; mov eax, edx; pop ebx; pop esi; ret; 
0x0009d32c: cmp eax, ecx; cmova eax, ecx; sub eax, esi; pop ebx; pop esi; ret; 
0x0009c6e0: cmp eax, ecx; ja 0x9c6f0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0013f253: cmp eax, ecx; jbe 0x13f330; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x0013f3a0: cmp eax, ecx; jbe 0x13f3b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0006e111: cmp eax, ecx; jbe 0x6e150; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0006e8a2: cmp eax, ecx; jbe 0x6e8d0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000728e2: cmp eax, ecx; jbe 0x72938; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x00074984: cmp eax, ecx; jbe 0x749b0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000767d7: cmp eax, ecx; jbe 0x76900; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007696d: cmp eax, ecx; jbe 0x769b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00078631: cmp eax, ecx; jbe 0x78660; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00078927: cmp eax, ecx; jbe 0x789f0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008adff: cmp eax, ecx; jne 0x8adf0; mov eax, edx; pop ebx; ret; 
0x0009d90a: cmp eax, ecx; jne 0x9db17; pop esi; xor eax, eax; pop ebx; ret; 
0x0009d9fd: cmp eax, ecx; jne 0x9db2b; pop esi; xor eax, eax; pop ebx; ret; 
0x0012f338: cmp eax, ecx; lea eax, [ebx + 0x3280]; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0012f2e8: cmp eax, ecx; lea eax, [ebx + 0x3284]; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0012f298: cmp eax, ecx; lea eax, [ebx + 0x3288]; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0009db29: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0002f689: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0006e978: cmp eax, edx; ja 0x6e970; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x00078f08: cmp eax, edx; ja 0x78f00; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x0010c473: cmp eax, edx; jae 0x10c480; cmp dword ptr [eax + 4], ecx; jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x0010798e: cmp eax, edx; jb 0x1079a0; mov eax, 1; ret; 
0x00078e30: cmp eax, edx; jbe 0x78e60; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000865a7: cmp eax, edx; jne 0x865a0; mov eax, ecx; ret; 
0x0012f252: cmp eax, edx; lea edx, [ebx + 0x32a0]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x0005a1a8: cmp ebp, -1; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x001178b9: cmp ebp, 0x5c; cli; call dword ptr [eax - 0x18]; 
0x000f97ba: cmp ebp, dword ptr [edi + 0x74]; ret 0x3b80; 
0x00058a8e: cmp ebx, 0x53; ja 0x59470; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x00059376: cmp ebx, 0x53; ja 0x597d6; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058975: cmp ebx, 0x53; ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000d17e5: cmp ebx, 0xa; je 0xd1819; add esp, 4; pop ebx; pop esi; ret; 
0x000c7688: cmp ebx, 0xf6; ja 0xc7808; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x0009f3c5: cmp ebx, 3; je 0x9f3d0; mov eax, esi; pop ebx; pop esi; ret; 
0x000580ee: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0016c22e: cmp ebx, edi; jmp dword ptr [esi - 0x70]; 
0x000eb434: cmp ebx, edx; ja 0xeb428; mov eax, ecx; pop ebx; ret; 
0x000b6c42: cmp ecx, 0x28f5c28; jbe 0xb6c50; mov eax, edx; ret; 
0x000584ee: cmp ecx, 0x2e; ja 0x58ab0; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x000e88be: cmp ecx, 0x2f; ja 0xe800c; mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x0010ecf8: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001258bb: cmp ecx, 1; je 0x1258e0; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000e2f1c: cmp ecx, 2; je 0xe2f30; mov eax, edx; pop ebx; pop esi; ret; 
0x00125dbd: cmp ecx, 3; jbe 0x125dd0; mov eax, 2; pop ebx; pop esi; ret; 
0x0008afbc: cmp ecx, 8; ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b07c: cmp ecx, 8; ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x000f56b8: cmp ecx, 9; je 0xf56f0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f574c: cmp ecx, 9; je 0xf5780; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000c6e44: cmp ecx, dword ptr [eax - 6]; call dword ptr [eax - 0x18]; 
0x0006a234: cmp ecx, dword ptr [ebx + 0x558be045]; in al, 0x89; ret; 
0x000d1a34: cmp ecx, dword ptr [ecx - 0x187e31]; add ah, bh; inc dword ptr [eax - 0x6bf0f907]; ret 0x7b89; 
0x000b4a26: cmp ecx, dword ptr [edi]; inc edi; ret 0xc86b; 
0x000bf323: cmp ecx, dword ptr [edi]; xchg dword ptr [esi], edi; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00126711: cmp ecx, dword ptr [edx + 0x14]; ja 0x126700; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x00163155: cmp ecx, dword ptr [edx - 4]; jne 0x163160; pop ebx; ret; 
0x0015ee17: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x15f060; pop ebx; ret; 
0x00096131: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015ed32: cmp ecx, dword ptr [edx]; je 0x15ed50; mov eax, 1; jg 0x15ed40; neg eax; ret; 
0x0011a6e6: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0015d690: cmp ecx, ebx; mov eax, 0; jne 0x15de10; pop ebx; ret; 
0x001604d2: cmp ecx, ebx; mov eax, 0; jne 0x160700; pop ebx; ret; 
0x0015de24: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x15de30; neg eax; ret; 
0x0009efce: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000b0792: cmp ecx, edi; dec dword ptr [ebx - 0x362f7b]; dec dword ptr [ebp - 0x3b7c50b2]; adc byte ptr [ebx - 0x36376b], cl; call ebx; 
0x0009efb0: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x000fdd8a: cmp ecx, edx; jne 0xfdd80; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00101340: cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x000486d2: cmp edi, -0x4b; ror cl, 0xff; call dword ptr [eax - 0x77]; 
0x000d8a20: cmp edi, 0xffff4cb5; call dword ptr [eax - 0x18]; 
0x000f8266: cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000b1601: cmp edi, dword ptr [eax - 9]; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x0010e9c1: cmp edi, dword ptr [esi + esi*8]; jmp dword ptr [esi - 0x70]; 
0x000a5263: cmp edi, eax; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x00087124: cmp edi, eax; jbe 0x87141; pop ebx; pop esi; pop edi; ret; 
0x001495be: cmp edi, edi; inc dword ptr [ecx + 0x461bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149525: cmp edi, edi; inc dword ptr [ecx + 0x46258c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001493d5: cmp edi, edi; inc dword ptr [ecx + 0x463a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014931e: cmp edi, edi; inc dword ptr [ecx + 0x4645fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ef9cb: cmp edi, edi; je 0xef9f3; cmp al, 0xe8; jnp 0xef9db; std; jmp dword ptr [ebp - 0x77]; 
0x000f0a4b: cmp edi, edi; je 0xf0a73; cmp al, 0xe8; sti; idiv esp; jmp dword ptr [ebp - 0x77]; 
0x0012b0d2: cmp edi, esi; dec dword ptr [ebp - 0x59e4f7d]; call dword ptr [edx + 0x6a]; 
0x0016bfa0: cmp edi, esi; jne 0x16bf90; pop ebx; pop esi; pop edi; ret; 
0x0014e908: cmp edi, esi; ret 3; 
0x000c07c7: cmp edx, 0x10d; cmovae esi, eax; mov eax, 0xdc; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e7ff8: cmp edx, 0x12; ja 0xe800c; mov esi, dword ptr [esp + 0xc]; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x000c718c: cmp edx, 0x1badface; setne al; ret; 
0x000c71a7: cmp edx, 0x1cd1; setne al; ret; 
0x000c2b69: cmp edx, 0x46; cli; call dword ptr [eax - 0x18]; 
0x000c704c: cmp edx, 0x54190100; jne 0xc7060; lea esi, [esi]; mov eax, 0x40; ret; 
0x000c7153: cmp edx, 0xadf5; setne al; ret; 
0x0016630b: cmp edx, 0xf; ja 0x1667dc; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x0008736e: cmp edx, 1; ja 0x87350; pop ebx; pop esi; pop edi; ret; 
0x000ec1b6: cmp edx, 1; je 0xec1f8; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec266: cmp edx, 1; je 0xec2a8; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000ec316: cmp edx, 1; je 0xec358; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000eb359: cmp edx, 2; ja 0xeb36a; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0006ca6b: cmp edx, dword ptr [eax + 4]; jae 0x6ca80; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000748e7: cmp edx, dword ptr [eax + 8]; jae 0x74900; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00074925: cmp edx, dword ptr [eax + 8]; jae 0x74938; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000293d2: cmp edx, dword ptr [ecx]; add byte ptr [0x1bac2b], al; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x0012858f: cmp edx, dword ptr [esi - 0x18]; ficom dword ptr [esi - 4]; jmp dword ptr [ebp - 0x77]; 
0x0010d9f0: cmp edx, dword ptr [esp + 0x1c]; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x0007a760: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000955d4: cmp edx, ebx; jb 0x94990; call 0x13cef9; add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949fe: cmp edx, ebx; jb 0x94990; call 0x13cef9; add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949e7: cmp edx, ebx; jb 0x94990; call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949cc: cmp edx, ebx; jb 0x94990; call 0x13cef9; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949aa: cmp edx, ebx; jb 0x94990; call 0x13cef9; add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096cd4: cmp edx, ebx; jb 0x95fd0; call 0x13cef9; add ecx, 0xeb55f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009603e: cmp edx, ebx; jb 0x95fd0; call 0x13cef9; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096027: cmp edx, ebx; jb 0x95fd0; call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009600c: cmp edx, ebx; jb 0x95fd0; call 0x13cef9; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fea: cmp edx, ebx; jb 0x95fd0; call 0x13cef9; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c574: cmp edx, ebx; jb 0x9bf70; call 0x13cef9; add ecx, 0xe5e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfde: cmp edx, ebx; jb 0x9bf70; call 0x13cef9; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfc7: cmp edx, ebx; jb 0x9bf70; call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfac: cmp edx, ebx; jb 0x9bf70; call 0x13cef9; add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf8a: cmp edx, ebx; jb 0x9bf70; call 0x13cef9; add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008ad1f: cmp edx, ebx; je 0x8ad18; pop ebx; ret; 
0x0006ddd5: cmp edx, ecx; cmovg edx, ecx; test eax, eax; jne 0x6ddd0; mov eax, edx; ret; 
0x00077d4d: cmp edx, ecx; cmovg edx, ecx; test eax, eax; jne 0x77d48; mov eax, edx; ret; 
0x00079e9a: cmp edx, ecx; jae 0x79ec0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00068fc0: cmp edx, ecx; jbe 0x69130; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x00069505: cmp edx, ecx; jbe 0x69568; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006beed: cmp edx, ecx; jbe 0x6bf78; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00071b62: cmp edx, ecx; jbe 0x71db0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000731f2: cmp edx, ecx; jbe 0x733c0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078582: cmp edx, ecx; jbe 0x785e0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000a0576: cmp edx, ecx; je 0xa057e; test edx, edx; jne 0xa0570; ret; 
0x0007bbdc: cmp edx, ecx; jne 0x7bbe9; add esp, 8; pop ebx; ret; 
0x000b2909: cmp edx, ecx; jne 0xb2900; ret; 
0x0008ad5b: cmp edx, esi; je 0x8ad50; pop ebx; pop esi; ret; 
0x00154b1b: cmp esi, -1; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ffbe2: cmp esi, -1; je 0xffc00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000e7c98: cmp esi, 0x2f; ja 0xe7e14; mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x000fe17a: cmp esi, 0x53; cli; call dword ptr [eax + 0x52]; 
0x00079645: cmp esi, 0xf0b8ffff; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009e768: cmp esi, 8; ja 0x9e8da; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x000cd1da: cmp esi, dword ptr [edi + 0x23]; mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x000ceba7: cmp esi, dword ptr [edi + 0x26]; mov edi, dword ptr [esp + 0x18]; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x000bf22b: cmp esi, dword ptr [edi + 0x72]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00037a81: cmp esi, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00145ad5: cmp esi, edi; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0016bf40: cmp esi, edi; jae 0x16bf51; lea esi, [esi]; call dword ptr [esi]; 
0x00033955: cmp esi, edi; jae 0x33969; lea esi, [esi]; call dword ptr [esi]; 
0x00035aaa: cmp esi, edi; jmp dword ptr [esi - 0x70]; 
0x001305d0: cmp esp, -0x5d; cli; call dword ptr [eax - 0x73]; 
0x00134cea: cmp esp, -1; jmp dword ptr [esi - 0x70]; 
0x00106819: cmp esp, 0x56; cli; call dword ptr [eax - 0x18]; 
0x0001e1a8: cmp esp, 0x6c; cli; call dword ptr [eax - 0x18]; 
0x0009d274: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x00160b76: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0009dcef: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x000dce90: cmpsb byte ptr [esi], byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00139d01: cmpsb byte ptr [esi], byte ptr es:[edi]; cli; call dword ptr [eax + 0x6a]; 
0x00138903: cmpsb byte ptr [esi], byte ptr es:[edi]; cli; call dword ptr [esi - 1]; 
0x0007bb81: cmpsb byte ptr [esi], byte ptr es:[edi]; pop ebx; cli; call dword ptr [eax + 0x6a]; 
0x0010b5ca: cmpsb byte ptr [esi], byte ptr es:[edi]; pop ebx; cli; call dword ptr [eax - 1]; 
0x00051576: cmpsb byte ptr [esi], byte ptr es:[edi]; test ch, bh; inc dword ptr [ebx - 0x72aff33c]; test ebx, ecx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x001628a5: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x000b6b95: cmpsd dword ptr [esi], dword ptr es:[edi]; and dh, bh; dec dword ptr [ebp - 0x56f677d]; call dword ptr [eax - 0x73]; 
0x000b5656: cmpsd dword ptr [esi], dword ptr es:[edi]; inc esi; cli; call dword ptr [eax + 0x57]; 
0x000a4995: cmpsd dword ptr [esi], dword ptr es:[edi]; inc esp; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x0010d8d8: cmpsd dword ptr [esi], dword ptr es:[edi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000714c7: cmpsd dword ptr [esi], dword ptr es:[edi]; mov edx, edi; jmp dword ptr [esi - 0x70]; 
0x0012e9af: cmpsd dword ptr [esi], dword ptr es:[edi]; out dx, al; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0011e4cf: cmpsd dword ptr [esi], dword ptr es:[edi]; pop esi; cli; call dword ptr [eax - 0x18]; 
0x0005cc75: cmpsd dword ptr [esi], dword ptr es:[edi]; ret; 
0x0001bd95: cmpsd dword ptr [esi], dword ptr es:[edi]; rol byte ptr [eax], 1; add byte ptr [ebp - 0x593a37f], cl; call dword ptr [eax - 0x73]; 
0x0012e9ae: cmpsd dword ptr ss:[esi], dword ptr es:[edi]; out dx, al; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000258b7: comiss xmm7, xmm2; call dword ptr [eax + 0x56]; 
0x0011a76a: cvtdq2ps xmm7, xmmword ptr [eax - 1]; pop esi; pop edi; ret; 
0x0014cf73: cvtps2pi mm0, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ba6a: cwde; aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148fea: cwde; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008ebb4: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00072dec: cwde; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor ebx, 0x40; cli; call dword ptr [eax - 0x18]; 
0x00069a9b: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0003f6fc: cwde; add byte ptr [eax], al; add cl, ch; wait; idiv bh; call dword ptr [ebx + 0x6a]; 
0x00080f64: cwde; add dword ptr [eax], eax; add byte ptr [ebx - 0x1977b], cl; jmp dword ptr [ebp - 0x75]; 
0x00163414: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x000bdd74: cwde; add dword ptr [eax], eax; add cl, ch; ret; 
0x001260f5: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0010990b: cwde; cli; call dword ptr [eax - 0x18]; 
0x00109974: cwde; cli; call dword ptr [eax - 0x18]; ret; 
0x00102ccf: cwde; cli; call dword ptr [eax - 0x73]; 
0x0013a0a5: cwde; cmp dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000e5d9f: cwde; dec edx; cli; call dword ptr [eax - 0x18]; 
0x001527aa: cwde; fadd qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ab1a4: cwde; fdivr st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x00064987: cwde; inc eax; ret 0xfff9; 
0x000a48d9: cwde; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000b61bd: cwde; inc esi; cli; call dword ptr [eax - 0x18]; 
0x00020523: cwde; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x001017ae: cwde; int1; jmp dword ptr [esi - 0x70]; 
0x0003a6c7: cwde; jb 0x3a6c4; call dword ptr [eax - 0x18]; 
0x0003d803: cwde; jb 0x3d800; call dword ptr [eax - 0x18]; 
0x00040712: cwde; jb 0x4070f; call dword ptr [eax - 0x18]; 
0x000499be: cwde; jb 0x499bb; call dword ptr [eax - 0x18]; 
0x000a4893: cwde; jb 0xa4890; call dword ptr [eax - 0x18]; 
0x000a755d: cwde; jb 0xa755a; call dword ptr [eax - 0x18]; 
0x000aa00f: cwde; jb 0xaa00c; call dword ptr [eax - 0x18]; 
0x000b14d4: cwde; jb 0xb14d1; call dword ptr [eax - 0x18]; 
0x0002a786: cwde; mov eax, 0xf0; mov ecx, 0x81; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b6b5d: cwde; nop; cli; call dword ptr [eax - 0x73]; 
0x0005ef22: cwde; or eax, 0x85c60000; idiv edi; jmp dword ptr [eax]; 
0x0009f412: cwde; pop ebx; pop esi; ret; 
0x0002a27c: cwde; push ebx; mov eax, dword ptr [eax + 0x1a58]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a484: cwde; push esi; mov eax, dword ptr [eax + 0x1a5c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001532aa: cwde; rol dword ptr [ebx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00029442: cwde; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00028bf1: cwde; sar dh, 0xff; jmp dword ptr [ebp - 0x77]; 
0x0001a707: cwde; sbb al, 0; mov edx, dword ptr [eax - 0x128]; test edx, edx; je 0x1a715; ret; 
0x0016baa4: cwde; shr ebx, cl; jmp dword ptr [esi - 0x70]; 
0x0001bebc: cwde; sldt word ptr [eax]; ret; 
0x0011d9c4: cwde; test cl, dh; inc dword ptr [ebx + 0x5ba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f05f8], al; ret 0x4589; 
0x0003a751: cwde; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0014d4f4: daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001040f7: daa; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ecc4e: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0008b54b: daa; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00092f75: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0013977c: daa; add esp, 0x28; pop ebx; ret; 
0x00105c6a: daa; bnd call dword ptr [eax - 0x18]; 
0x0012c5a6: daa; cli; call dword ptr [eax + 0x52]; 
0x0002674d: daa; das; cli; call dword ptr [eax - 0x18]; 
0x0008286d: daa; inc esp; cli; call dword ptr [eax - 1]; 
0x000ffa08: daa; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5458: daa; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55d8: daa; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f4de8: daa; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x001013f0: daa; mov eax, 0x75; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x0009e27e: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0009e624: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0011170b: daa; pop edx; cli; call dword ptr [eax - 0x18]; 
0x00115287: daa; pop esp; cli; call dword ptr [eax - 0x73]; 
0x00067ddb: daa; ret 0x17; 
0x000dcdf5: daa; ret 0xfff3; 
0x00055ae5: daa; ret; 
0x0014ccb4: das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011f26f: das; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011ef7c: das; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0009663d: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x00126bbe: das; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012ee7f: das; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c0174: das; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000d17e9: das; add esp, 4; pop ebx; pop esi; ret; 
0x0015a8ad: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000f5d3b: das; call dword ptr gs:[0x10]; 
0x0011e8c9: das; cli; call dword ptr [eax + 0x51]; 
0x000258b8: das; cli; call dword ptr [eax + 0x56]; 
0x0002674e: das; cli; call dword ptr [eax - 0x18]; 
0x0016ba9f: das; cli; call dword ptr [eax - 0x18]; cwde; shr ebx, cl; jmp dword ptr [esi - 0x70]; 
0x00026a74: das; cli; call dword ptr [edx + 0x50]; 
0x0002835f: das; cli; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0014b1d3: das; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013c2cd: das; ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x000e7c9a: das; ja 0xe7e14; mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x000e88c0: das; ja 0xe800c; mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x00138d15: das; jbe 0x138c9d; in al, dx; add al, 0x83; ret; 
0x0004a05b: das; jbe 0x49fe9; ret 0x40c7; 
0x000c71a2: das; je 0xc71ba; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x00042d3a: das; jne 0x42d30; add esp, 8; pop ebx; ret; 
0x000c66d8: das; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c6788: das; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000f5750: das; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000fe1d9: das; or al, 0; add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x000fe10d: das; or al, 0; add byte ptr [ebp - 0x5ac6e7d], cl; call dword ptr [ecx + 0x51]; 
0x00149c53: das; pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fcc23: das; pop esp; cli; jmp dword ptr [ebp - 0x77]; 
0x000f04dd: das; ret; 
0x0004645b: das; std; jmp dword ptr [esi - 0x70]; 
0x00082290: das; sub esp, 8; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0009e769: dec byte ptr [eax]; ja 0x9e8da; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x0015720b: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x0015b9bb: dec byte ptr [ebp - 0x7af00587]; ret; 
0x0015597b: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x001590bb: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0015670b: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0015517b: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x001581bb: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x000b394c: dec byte ptr [ebx + 0x292c247c]; ret 0x448b; 
0x00146208: dec byte ptr [ebx + 0x5b082444]; ret; 
0x00055e22: dec byte ptr [ebx - 0x5cf43]; inc dword ptr [ecx]; ret; 
0x0004b571: dec byte ptr [ebx - 0x8373]; call dword ptr [ebx - 0x75]; 
0x000a2ba2: dec byte ptr [ecx + 0x2920244c]; ret 0x7c89; 
0x000fc6a8: dec byte ptr [ecx + 0x488bd44d]; or dh, dh; ret 0x7401; 
0x000e45fc: dec byte ptr [edi]; test esp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x0009c4f2: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x00149ffb: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0009b8c2: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x0014bfeb: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0002a628: dec dword ptr [ebp + 0x11549a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002d0fc: dec dword ptr [ebp + 0x11c899]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000795a4: dec dword ptr [ebp + 0x195c9a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009fbf9: dec dword ptr [ebp + 0x1f5c92]; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x0010dfd8: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000617f5: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; jmp eax; 
0x00139b55: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x00067257: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x00125f97: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x0007e498: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00102b85: dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x0004a01b: dec dword ptr [ebp + 0x29002674]; ret 0xfac1; 
0x0011c195: dec dword ptr [ebp + 0x2cac9a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120ab6: dec dword ptr [ebp + 0x31809a]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000671cc: dec dword ptr [ebp + 0x44c70076]; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0011c2a3: dec dword ptr [ebp + 0x48d4004]; ret; 
0x000f7444: dec dword ptr [ebp + 0x52102454]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000468dc: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x000282d8: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0009cfd2: dec dword ptr [ebp + 0x5f103844]; ret; 
0x000efcb0: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0xefcde; xor bh, bh; jne 0xefcca; call dword ptr [ebp + 0x24]; 
0x000f0d30: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0xf0d5e; xor bh, bh; jne 0xf0d4a; call dword ptr [ebp + 0x24]; 
0x000ffb29: dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff1b4; ret; 
0x000f6029: dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff24f; ret; 
0x000ed129: dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff2de; ret; 
0x00049ed9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x29102454], cl; ret 0x4439; 
0x000b7289: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x000f02e9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000eac91: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c01e1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1077f], cl; jmp dword ptr [ebp - 0x39]; 
0x00122529: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x10f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x000d3939: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x13f79], cl; jmp dword ptr [ebp - 0x75]; 
0x00081171: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x80]; 
0x00081191: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x19b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013be49: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00064fa9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x6a76fb14], al; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x000f98d1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x0005e8c1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0011c291: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0x8363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000e57ea: dec dword ptr [ebp - 0x10101f80]; call dword ptr [eax + 0x6a]; 
0x000e530d: dec dword ptr [ebp - 0x10219f6a]; call dword ptr [edx + 0x6a]; 
0x00142385: dec dword ptr [ebp - 0x10414f80]; call dword ptr [eax + 0x6a]; 
0x00140985: dec dword ptr [ebp - 0x104c5f80]; call dword ptr [eax + 0x6a]; 
0x000cb8a5: dec dword ptr [ebp - 0x119c7f80]; call dword ptr [eax + 0x6a]; 
0x000c93a5: dec dword ptr [ebp - 0x11c1bf80]; call dword ptr [eax + 0x6a]; 
0x000e44b7: dec dword ptr [ebp - 0x12f63]; dec dword ptr [ebx - 0x10f70]; dec dword ptr [ebp - 0x1337b]; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x000e4566: dec dword ptr [ebp - 0x12f7b]; dec dword ptr [ebp - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x000e434f: dec dword ptr [ebp - 0x12f7b]; jmp dword ptr [ebp - 0x75]; 
0x000e456c: dec dword ptr [ebp - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x000e44c3: dec dword ptr [ebp - 0x1337b]; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x0012121c: dec dword ptr [ebp - 0x137cff8a]; add al, 0x6a; or byte ptr [ebx - 0x72f3dba4], cl; or dword ptr [esi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x000646bc: dec dword ptr [ebp - 0x137cff8a]; add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x000517a4: dec dword ptr [ebp - 0x137cff8a]; add al, 0x8d; test ebp, ebx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x00124a84: dec dword ptr [ebp - 0x137cff8a]; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000807e4: dec dword ptr [ebp - 0x137cff8a]; or bh, bh; je 0x80812; and al, 0x53; call eax; 
0x000f6a2b: dec dword ptr [ebp - 0x17ffd98c]; mov ebx, 0x89fff245; ret; 
0x0002cba4: dec dword ptr [ebp - 0x1b75ff7d]; call dword ptr [eax + 0x6a]; 
0x00027a57: dec dword ptr [ebp - 0x1bcbbf79]; call dword ptr [eax - 0x73]; 
0x0006f50f: dec dword ptr [ebp - 0x1d5f80]; dec dword ptr [ecx - 0x7bf047bb]; ret; 
0x0004845f: dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000490dd: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000b0882: dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00048b3c: dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000aee16: dec dword ptr [ebp - 0x36034b]; dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x77]; 
0x0004900b: dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x00049248: dec dword ptr [ebp - 0x361773]; dec dword ptr [edi]; xchg edi, eax; ret 0xf039; 
0x000489dc: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xe983; 
0x000b0f6e: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x0003c164: dec dword ptr [ebp - 0x39f49]; call dword ptr [esi + 0x6a]; 
0x00047ab5: dec dword ptr [ebp - 0x39f79]; call dword ptr [eax - 0x73]; 
0x000b079a: dec dword ptr [ebp - 0x3b7c50b2]; adc byte ptr [ebx - 0x36376b], cl; call ebx; 
0x000c7e64: dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0005f6e4: dec dword ptr [ebp - 0x427fff8a]; idiv edi; jmp dword ptr [eax]; 
0x0005be26: dec dword ptr [ebp - 0x4cb6b]; call dword ptr [edx + 0x50]; 
0x000e5bb8: dec dword ptr [ebp - 0x4e77b]; dec dword ptr [ecx - 0x50373]; call dword ptr [eax - 0x73]; 
0x000bd137: dec dword ptr [ebp - 0x5557378]; jmp dword ptr [esi - 0x70]; 
0x00139cfd: dec dword ptr [ebp - 0x559e37b]; call dword ptr [eax + 0x6a]; 
0x00136a4a: dec dword ptr [ebp - 0x55a037f]; call dword ptr [eax - 0x73]; 
0x001200f0: dec dword ptr [ebp - 0x55eeb7d]; call dword ptr [eax + 0x68]; 
0x0011f645: dec dword ptr [ebp - 0x560537f]; call dword ptr [eax - 0x73]; 
0x0011f7d5: dec dword ptr [ebp - 0x5605f7f]; call dword ptr [eax - 0x73]; 
0x0011fa9a: dec dword ptr [ebp - 0x560777a]; call dword ptr [eax - 0x73]; 
0x0011f2ac: dec dword ptr [ebp - 0x5609379]; call dword ptr [eax - 0x73]; 
0x0011b53c: dec dword ptr [ebp - 0x562c779]; call dword ptr [eax - 0x73]; 
0x00102ccb: dec dword ptr [ebp - 0x567b779]; call dword ptr [eax - 0x73]; 
0x000fecdf: dec dword ptr [ebp - 0x5686b7d]; call dword ptr [eax - 0x73]; 
0x000ee48e: dec dword ptr [ebp - 0x5696f79]; call dword ptr [eax - 0x73]; 
0x00144cea: dec dword ptr [ebp - 0x56ab379]; call dword ptr [eax - 0x73]; 
0x000ec015: dec dword ptr [ebp - 0x56ac77d]; call dword ptr [eax + 0x68]; 
0x000e5d89: dec dword ptr [ebp - 0x56b337a]; call dword ptr [eax - 0x73]; 
0x0014310a: dec dword ptr [ebp - 0x56e3779]; call dword ptr [eax - 0x73]; 
0x0014170a: dec dword ptr [ebp - 0x56e4b79]; call dword ptr [eax - 0x73]; 
0x000d01b3: dec dword ptr [ebp - 0x56e777d]; call dword ptr [eax + 0x68]; 
0x000cc62a: dec dword ptr [ebp - 0x56ec379]; call dword ptr [eax - 0x73]; 
0x000ca121: dec dword ptr [ebp - 0x56ecb7e]; call dword ptr [eax - 0x73]; 
0x000c8755: dec dword ptr [ebp - 0x56ed77d]; call dword ptr [eax + 0x68]; 
0x000b60c0: dec dword ptr [ebp - 0x56f537d]; call dword ptr [eax - 0x73]; 
0x000b6b5a: dec dword ptr [ebp - 0x56f677d]; call dword ptr [eax - 0x73]; 
0x000b02dd: dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b15c0: dec dword ptr [ebp - 0x56fc37e]; call dword ptr [eax - 0x73]; 
0x000ad9c1: dec dword ptr [ebp - 0x56fcf7b]; call dword ptr [eax - 0x73]; 
0x000ac865: dec dword ptr [ebp - 0x570537d]; call dword ptr [eax - 0x73]; 
0x000ab12b: dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x000aa119: dec dword ptr [ebp - 0x571677e]; call dword ptr [eax - 0x73]; 
0x0009fba5: dec dword ptr [ebp - 0x571f779]; call dword ptr [eax - 0x73]; 
0x0009f9fe: dec dword ptr [ebp - 0x572037e]; call dword ptr [eax - 0x73]; 
0x0009e8d9: dec dword ptr [ebp - 0x572c37b]; call dword ptr [eax - 0x73]; 
0x0008b3e7: dec dword ptr [ebp - 0x572d77b]; call dword ptr [eax - 0x73]; 
0x0008aa2f: dec dword ptr [ebp - 0x5738b70]; call dword ptr [edx - 0x73]; 
0x00088a55: dec dword ptr [ebp - 0x5741f70]; call dword ptr [edx - 0x73]; 
0x00056689: dec dword ptr [ebp - 0x5777b]; call dword ptr [eax + 0x52]; 
0x00076fa9: dec dword ptr [ebp - 0x583ff7b]; call dword ptr [eax - 0x73]; 
0x00072dbe: dec dword ptr [ebp - 0x5847b7d]; call dword ptr [eax - 0x73]; 
0x0007108e: dec dword ptr [ebp - 0x5854f7a]; call dword ptr [eax - 0x73]; 
0x0005e8cd: dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0005ca3c: dec dword ptr [ebp - 0x58a0b79]; call dword ptr [eax + 0x68]; 
0x00054386: dec dword ptr [ebp - 0x58a1f7a]; call dword ptr [eax - 0x73]; 
0x000498a0: dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x0004987b: dec dword ptr [ebp - 0x58c077a]; call dword ptr [eax - 0x73]; 
0x000487e9: dec dword ptr [ebp - 0x58c077d]; call dword ptr [eax - 0x73]; 
0x0004170d: dec dword ptr [ebp - 0x58c137e]; call dword ptr [eax + 0x68]; 
0x000499cd: dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x00115440: dec dword ptr [ebp - 0x58fd757]; call dword ptr [eax + 0x55]; 
0x00028e54: dec dword ptr [ebp - 0x58fd780]; call dword ptr [edx + 0x50]; 
0x00027ea5: dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x0002575f: dec dword ptr [ebp - 0x5912b7d]; call dword ptr [eax - 0x73]; 
0x0001d252: dec dword ptr [ebp - 0x593837d]; call dword ptr [eax - 0x73]; 
0x00122cf3: dec dword ptr [ebp - 0x594ff7d]; call dword ptr [eax - 0x73]; 
0x00116643: dec dword ptr [ebp - 0x59cce7d]; call dword ptr [esi + 0x6a]; 
0x0012b0d4: dec dword ptr [ebp - 0x59e4f7d]; call dword ptr [edx + 0x6a]; 
0x00126599: dec dword ptr [ebp - 0x59e5c7d]; call dword ptr [edx + 0x6a]; 
0x0012639c: dec dword ptr [ebp - 0x59e987d]; call dword ptr [edx + 0x6a]; 
0x00121fe1: dec dword ptr [ebp - 0x59fbc7d]; call dword ptr [edi + 0x6a]; 
0x0011b77d: dec dword ptr [ebp - 0x5a25b7a]; call dword ptr [ecx - 0x77]; 
0x001151ee: dec dword ptr [ebp - 0x5a84679]; call dword ptr [ebp - 0x77]; 
0x0010804f: dec dword ptr [ebp - 0x5a8d779]; call dword ptr [ebp - 1]; 
0x0005e973: dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x0010196b: dec dword ptr [ebp - 0x5a9d180]; jmp dword ptr [ebp - 0x75]; 
0x000fa6d0: dec dword ptr [ebp - 0x5b36079]; call dword ptr [esi + 0x50]; 
0x000db4a8: dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x000db21c: dec dword ptr [ebp - 0x5b6a271]; call dword ptr [eax - 0x77]; 
0x000c74e6: dec dword ptr [ebp - 0x5b79a79]; call dword ptr [eax - 0x18]; 
0x000c6c10: dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x0008b4ec: dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x0007d353: dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d32f: dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x0007d442: dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007f1b9: dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007fa7d: dec dword ptr [ebp - 0x5bec86d]; call dword ptr [eax - 0x73]; 
0x0003c15e: dec dword ptr [ebp - 0x5cd9b79]; dec dword ptr [ebp - 0x39f49]; call dword ptr [esi + 0x6a]; 
0x0003929d: dec dword ptr [ebp - 0x5cd9b80]; call dword ptr [esi + 0x6a]; 
0x00027f72: dec dword ptr [ebp - 0x5cefe48]; jmp dword ptr [ebp - 0x75]; 
0x000dedbd: dec dword ptr [ebp - 0x5fce87d]; call dword ptr [ecx + 0x6a]; 
0x0002678d: dec dword ptr [ebp - 0x6b9ff87c]; clc; call dword ptr [eax - 0x18]; 
0x0013992a: dec dword ptr [ebp - 0x6fffd98c]; mov eax, dword ptr [eax + 0x3750]; jmp dword ptr [eax + 8]; 
0x0003371a: dec dword ptr [ebp - 0x6fffd98c]; xor eax, eax; ret; 
0x00133df5: dec dword ptr [ebp - 0x72af5fbb]; xchg dword ptr [esi - 0x72b00000], esp; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x0013afff: dec dword ptr [ebp - 0x72dbdb8c]; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x001077fb: dec dword ptr [ebp - 0x74ffd98c]; inc edi; sbb byte ptr [ecx], ch; ret 0x5250; 
0x0013a53c: dec dword ptr [ebp - 0x76aaff8a]; ret 0x5657; 
0x0005a203: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x0012c58c: dec dword ptr [ebp - 0x7b74ff8a]; ret; 
0x0006910b: dec dword ptr [ebp - 0x7cffd98c]; in al, dx; or al, 0x89; ret; 
0x00121793: dec dword ptr [ebp - 0x7cffd98c]; in al, dx; or byte ptr [ebp - 0x5d33a7d], cl; call dword ptr [eax - 0x73]; 
0x000aea3a: dec dword ptr [ebp - 0x7efb7884]; ret 0; 
0x0012c1f8: dec dword ptr [ebp - 0x8b6b]; call dword ptr [edx + 0x50]; 
0x001362e3: dec dword ptr [ebp - 0x937b]; call dword ptr [edx + 0x6a]; 
0x001369df: dec dword ptr [ebp - 0x9b7b]; call dword ptr [eax + 0x6a]; 
0x00085110: dec dword ptr [ebp - 0x9bf9f70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x0010ce30: dec dword ptr [ebp - 0x9bfaf70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x000851a0: dec dword ptr [ebp - 0x9c2bf70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x0010ce80: dec dword ptr [ebp - 0x9c2cf70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x000854e0: dec dword ptr [ebp - 0x9c5df70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x0010cde0: dec dword ptr [ebp - 0x9c5ef70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x000851f0: dec dword ptr [ebp - 0x9cd8f70]; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x00063914: dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x0012ef84: dec dword ptr [ebp - 0xbf51f4a]; call dword ptr [ebp - 0x73]; 
0x00028399: dec dword ptr [ebp - 0xcb4b]; dec dword ptr [ecx - 0xdb6b]; call dword ptr [edi + 0x56]; 
0x000b7176: dec dword ptr [ebp - 0xd37b]; call dword ptr [eax - 0x73]; 
0x00102969: dec dword ptr [ebp - 0xe18df80]; call dword ptr [eax + 0x6a]; 
0x00143f65: dec dword ptr [ebp - 0xf88ff80]; call dword ptr [eax + 0x6a]; 
0x0002772b: dec dword ptr [ebx + 0x110194c]; ret 0xd139; 
0x0007e02f: dec dword ptr [ebx + 0x12495]; add byte ptr [ebp + 0x48486], cl; add al, ch; mov edi, 0x89ffffdb; ret; 
0x000528f6: dec dword ptr [ebx + 0x148b3856]; mov al, byte ptr [ebx - 0x7bf09106]; ret 0x27; 
0x000bdd71: dec dword ptr [ebx + 0x19888]; add cl, ch; ret; 
0x00082548: dec dword ptr [ebx + 0x1e10b3]; add byte ptr [edi], cl; inc esp; ret 0x938b; 
0x00083213: dec dword ptr [ebx + 0x1e3493]; add byte ptr [ecx + 0x77838d10], cl; inc esp; cli; call dword ptr [esi + 0x6a]; 
0x0013daf6: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax - 0x6bf08dc2]; ret; 
0x00084a7a: dec dword ptr [ebx + 0x3904244c]; ret; 
0x000810bc: dec dword ptr [ebx + 0x3908245c]; ret; 
0x0007d126: dec dword ptr [ebx + 0x391c2454]; ret 0x830f; 
0x00059782: dec dword ptr [ebx + 0x3939db09]; ret 0x840f; 
0x0011e19e: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00051672: dec dword ptr [ebx + 0x39c8290f]; ret; 
0x000de5c3: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000de5d8: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00133dc4: dec dword ptr [ebx + 0x4d891445]; mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00070b06: dec dword ptr [ebx + 0x508b5843]; adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x001315df: dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x000fe279: dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x00139399: dec dword ptr [ebx + 0x558b0446]; add byte ptr [ecx], al; ret 0xd139; 
0x001461e7: dec dword ptr [ebx + 0x5b082444]; ret; 
0x000ff23f: dec dword ptr [ebx + 0x5b108916]; pop esi; pop edi; ret; 
0x0005ed5b: dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x0011ce9f: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x000cdc5c: dec dword ptr [ebx + 0x728d044a]; add al, 0x81; ret 0x2000; 
0x00044361: dec dword ptr [ebx + 0x7503b855]; rol byte ptr [ebx + 0x4e8d10c4], 1; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x001028ab: dec dword ptr [ebx + 0x758b0845]; adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000dcae6: dec dword ptr [ebx + 0x75f68530]; cmp eax, 0x3904c083; ret 0xf375; 
0x000cdde0: dec dword ptr [ebx + 0x7a8d0c42]; or al, 0x83; ret 0xe910; 
0x0004110b: dec dword ptr [ebx + 0x7d8b0c45]; or byte ptr [ecx - 0xa37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00085116: dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x000668f0: dec dword ptr [ebx + 0xf48244c]; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x00066696: dec dword ptr [ebx + 0xf48244c]; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x0016b733: dec dword ptr [ebx + 0xf9c83]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x78a1f6d], cl; call dword ptr [edx + 0x50]; 
0x00119428: dec dword ptr [ebx + 0xff1390b]; xchg esi, eax; ret 0xf983; 
0x0010442c: dec dword ptr [ebx - 0x10745]; jmp dword ptr [ebp - 0x75]; 
0x00119b2d: dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0010603c: dec dword ptr [ebx - 0x10755]; jmp dword ptr [ebp - 0x75]; 
0x00128583: dec dword ptr [ebx - 0x10765]; inc dword ptr [ebx - 0x749af314]; cmp edx, dword ptr [esi - 0x18]; ficom dword ptr [esi - 4]; jmp dword ptr [ebp - 0x77]; 
0x000c85ae: dec dword ptr [ebx - 0x10765]; jmp dword ptr [ebp - 0x75]; 
0x0005447a: dec dword ptr [ebx - 0x10768]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0010d899: dec dword ptr [ebx - 0x10777]; jmp dword ptr [ebp - 0x7d]; 
0x00034b05: dec dword ptr [ebx - 0x10779]; jmp dword ptr [ebp - 0x39]; 
0x000f1866: dec dword ptr [ebx - 0x10779]; jmp dword ptr [ebp - 0x75]; 
0x000c7425: dec dword ptr [ebx - 0x1077a]; jmp dword ptr [ebp - 0x39]; 
0x000f30c6: dec dword ptr [ebx - 0x1077a]; jmp dword ptr [ebp - 0x75]; 
0x0003aaa4: dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0011e575: dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x75]; 
0x00049011: dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x000c8661: dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x75]; 
0x000693ad: dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x7d]; 
0x0009f94d: dec dword ptr [ebx - 0x1077e]; jmp dword ptr [ebp - 0x39]; 
0x00059393: dec dword ptr [ebx - 0x10780]; dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x0002ea5a: dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00069717: dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x75]; 
0x00051ddb: dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x000e4c0a: dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x7d]; 
0x000e44bd: dec dword ptr [ebx - 0x10f70]; dec dword ptr [ebp - 0x1337b]; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x00118b98: dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x39]; 
0x001188c0: dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x77]; 
0x000e4e83: dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x7d]; 
0x00050391: dec dword ptr [ebx - 0x12755]; jmp dword ptr [ebp - 0x75]; 
0x0013c66d: dec dword ptr [ebx - 0x137c3bbb]; or al, 0x8d; cmp byte ptr [esi + 0x64], 0xfa; call dword ptr [eax - 0x18]; 
0x000fd673: dec dword ptr [ebx - 0x137c47bb]; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ebp - 0x5b32780], cl; call dword ptr [eax - 0x18]; 
0x0010a7a0: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x57d5808d; cli; call dword ptr [eax - 0x75]; 
0x0010ae9b: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x9978808d; cli; call dword ptr [eax + 0x6a]; 
0x00029440: dec dword ptr [ebx - 0x13f68]; jmp dword ptr [ebp - 0x75]; 
0x000e424b: dec dword ptr [ebx - 0x1677b]; jmp dword ptr [ebp + 3]; 
0x000581f3: dec dword ptr [ebx - 0x16b4f]; dec dword ptr [ecx - 0x53f4b]; jmp dword ptr [ebp - 0x75]; 
0x000aa544: dec dword ptr [ebx - 0x16b7e]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x0005e885: dec dword ptr [ebx - 0x16b80]; jmp dword ptr [ebp - 0x75]; 
0x0005038b: dec dword ptr [ebx - 0x1774d]; dec dword ptr [ebx - 0x12755]; jmp dword ptr [ebp - 0x75]; 
0x000e425e: dec dword ptr [ebx - 0x1877b]; jmp dword ptr [ebp + 3]; 
0x000e41f9: dec dword ptr [ebx - 0x1877b]; jmp dword ptr [ebp - 0x39]; 
0x000e5026: dec dword ptr [ebx - 0x18f7b]; jmp dword ptr [ebp - 0x75]; 
0x0001acd6: dec dword ptr [ebx - 0x1a3b796c]; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x00027725: dec dword ptr [ebx - 0x1bb6b]; dec dword ptr [ebx + 0x110194c]; ret 0xd139; 
0x00027e9f: dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x0006390d: dec dword ptr [ebx - 0x29ff7e7c]; stc; dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x0001a71a: dec dword ptr [ebx - 0x2b70]; call dword ptr [esi + 0x53]; 
0x0005e96c: dec dword ptr [ebx - 0x2dff7d7c]; stc; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x00048398: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x0004850c: dec dword ptr [ebx - 0x361b4b]; jmp dword ptr [ecx]; 
0x00048755: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000af389: dec dword ptr [ebx - 0x361f63]; call dword ptr [esi - 0x77]; 
0x00048dea: dec dword ptr [ebx - 0x361f7b]; call dword ptr [edx + 0x6a]; 
0x000af0b8: dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x000aee1c: dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x77]; 
0x000b08fc: dec dword ptr [ebx - 0x362f7b]; call dword ptr [ebx - 1]; 
0x000b0794: dec dword ptr [ebx - 0x362f7b]; dec dword ptr [ebp - 0x3b7c50b2]; adc byte ptr [ebx - 0x36376b], cl; call ebx; 
0x000aff39: dec dword ptr [ebx - 0x36376b]; dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000479ef: dec dword ptr [ebx - 0x363f43]; dec dword ptr [ecx - 0x35ff7b]; dec dword ptr [ecx - 0x35fb6b]; dec dword ptr [ecx - 0x36274b]; dec dword ptr [ebx - 0x36774b]; jmp dword ptr [esi - 0x70]; 
0x000aed0d: dec dword ptr [ebx - 0x363f6b]; call dword ptr [ebx - 0x75]; 
0x00048a88: dec dword ptr [ebx - 0x363f7b]; call dword ptr [ebx - 1]; 
0x00048a74: dec dword ptr [ebx - 0x36437b]; call dword ptr [ebx - 1]; 
0x000b02d7: dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b152c: dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x000b0e67: dec dword ptr [ebx - 0x364763]; call dword ptr [esi - 1]; 
0x000b03c5: dec dword ptr [ebx - 0x364763]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x000afe6c: dec dword ptr [ebx - 0x36477b]; call dword ptr [edi + 0x6a]; 
0x0004749d: dec dword ptr [ebx - 0x364f6b]; call dword ptr [ebx - 0x75]; 
0x000b0b65: dec dword ptr [ebx - 0x364f73]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000b08e8: dec dword ptr [ebx - 0x364f7b]; call dword ptr [ebx - 1]; 
0x00048dab: dec dword ptr [ebx - 0x36577b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x0004989a: dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x000499c7: dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x00049875: dec dword ptr [ebx - 0x365b4b]; dec dword ptr [ebp - 0x58c077a]; call dword ptr [eax - 0x73]; 
0x00049005: dec dword ptr [ebx - 0x365b63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x00047a07: dec dword ptr [ebx - 0x36774b]; jmp dword ptr [esi - 0x70]; 
0x001228d1: dec dword ptr [ebx - 0x38dbdbbc]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x75]; 
0x000c635e: dec dword ptr [ebx - 0x3b7c2bbb]; adc byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x0010c8dd: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0010a29f: dec dword ptr [ebx - 0x3b7cf783]; adc byte ptr [ecx], cl; ret; 
0x000fdad4: dec dword ptr [ebx - 0x3f7adfc0]; cmove eax, edx; ret; 
0x000f7570: dec dword ptr [ebx - 0x3f7aefc0]; je 0xf7579; ret; 
0x000563e3: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00053e13: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret; 
0x000563dd: dec dword ptr [ebx - 0x4477b]; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0005a9b7: dec dword ptr [ebx - 0x4574b]; inc dword ptr [ebp + 0x25850ff6]; in al, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005c2e1: dec dword ptr [ebx - 0x4574b]; inc dword ptr [ebp + 0xc850ff6]; aam 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005d2cd: dec dword ptr [ebx - 0x4576b]; jmp dword ptr [ebp - 0x75]; 
0x000573ce: dec dword ptr [ebx - 0x4577b]; call dword ptr [ebx - 0x73]; 
0x000c8e71: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x000e731e: dec dword ptr [ebx - 0x46f6b]; call dword ptr [eax + 0x53]; 
0x000ca11b: dec dword ptr [ebx - 0x46f6b]; dec dword ptr [ebp - 0x56ecb7e]; call dword ptr [eax - 0x73]; 
0x000c9bfd: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000c9399: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x11c1bf80]; call dword ptr [eax + 0x6a]; 
0x00144ce4: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56ab379]; call dword ptr [eax - 0x73]; 
0x00143104: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56e3779]; call dword ptr [eax - 0x73]; 
0x00141704: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56e4b79]; call dword ptr [eax - 0x73]; 
0x000e753e: dec dword ptr [ebx - 0x47373]; call dword ptr [eax - 0x77]; 
0x000cc0e5: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00142379: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x10414f80]; call dword ptr [eax + 0x6a]; 
0x00140979: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x104c5f80]; call dword ptr [eax + 0x6a]; 
0x000cb899: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x119c7f80]; call dword ptr [eax + 0x6a]; 
0x00143f59: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0xf88ff80]; call dword ptr [eax + 0x6a]; 
0x00080daa: dec dword ptr [ebx - 0x47e3dba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cdd9: dec dword ptr [ebx - 0x47e7db8c]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c6ee: dec dword ptr [ebx - 0x47ebdba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000806c5: dec dword ptr [ebx - 0x47f3dba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c93ef: dec dword ptr [ebx - 0x47f6b]; call dword ptr [edi - 1]; 
0x0007d23e: dec dword ptr [ebx - 0x47f7dba4]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014237f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x10414f80]; call dword ptr [eax + 0x6a]; 
0x0014097f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x104c5f80]; call dword ptr [eax + 0x6a]; 
0x000cb89f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x119c7f80]; call dword ptr [eax + 0x6a]; 
0x000c939f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x11c1bf80]; call dword ptr [eax + 0x6a]; 
0x00143f5f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0xf88ff80]; call dword ptr [eax + 0x6a]; 
0x0004af91: dec dword ptr [ebx - 0x49f07fbb]; push eax; or al, 0xf6; ret 0xf40; 
0x00059c4b: dec dword ptr [ebx - 0x4ef63]; push esi; ret; 
0x0005ca36: dec dword ptr [ebx - 0x4f343]; dec dword ptr [ebp - 0x58a0b79]; call dword ptr [eax + 0x68]; 
0x00059e52: dec dword ptr [ebx - 0x4f363]; call dword ptr [eax + 0x51]; 
0x00059975: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x0005a6c0: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000597f7: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x50743]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0005939f: dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x00101c11: dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000589e0: dec dword ptr [ebx - 0x4ff63]; call dword ptr [edi - 0x75]; 
0x00101dd9: dec dword ptr [ebx - 0x5034b]; dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x0005ab99: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x0005cdb8: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 0x77]; 
0x00058889: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x0005a3f7: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x0005a479: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x52f4b]; jmp dword ptr [ebp - 0x75]; 
0x0005a360: dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x000597fd: dec dword ptr [ebx - 0x50743]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x000593a5: dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x0005869d: dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0005d30a: dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0005cdbe: dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 0x77]; 
0x0005abb5: dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x0005a732: dec dword ptr [ebx - 0x51763]; inc dword ptr [ebp - 0x687bf025]; or byte ptr [eax], al; add byte ptr [ebx - 0x7bf00001], al; ret 0x13; 
0x00058944: dec dword ptr [ebx - 0x51763]; jmp dword ptr [ebp - 0x77]; 
0x000e5d83: dec dword ptr [ebx - 0x51b4b]; dec dword ptr [ebp - 0x56b337a]; call dword ptr [eax - 0x73]; 
0x00055b76: dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x000527f0: dec dword ptr [ebx - 0x59b43]; dec dword ptr [edi]; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x0005241b: dec dword ptr [ebx - 0x59b43]; dec dword ptr [edi]; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x0005249d: dec dword ptr [ebx - 0x59b43]; dec dword ptr [edi]; mov dh, 0xc3; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x00054380: dec dword ptr [ebx - 0x59b4b]; dec dword ptr [ebp - 0x58a1f7a]; call dword ptr [eax - 0x73]; 
0x00055dfb: dec dword ptr [ebx - 0x59b63]; call dword ptr [ecx - 0x18]; 
0x00056f65: dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x00054474: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10768]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x00055036: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00055d2e: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x00057924: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ecx - 0x5af43]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00053900: dec dword ptr [ebx - 0x59f4b]; jmp dword ptr [ebp - 0x75]; 
0x000536ab: dec dword ptr [ebx - 0x59f4b]; jmp dword ptr [ebp - 0x77]; 
0x00053d6b: dec dword ptr [ebx - 0x59f73]; jmp dword ptr [ebp - 0x75]; 
0x000536a5: dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x59f4b]; jmp dword ptr [ebp - 0x77]; 
0x00054ced: dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x5bf4b]; jmp dword ptr [ebp - 0x77]; 
0x000565c2: dec dword ptr [ebx - 0x5a343]; jmp dword ptr [ebp - 0x77]; 
0x00051dd5: dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0005780d: dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x5ab63]; dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x77]; 
0x0005574e: dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x5ab63]; jmp dword ptr [ebp - 0x77]; 
0x00057ae9: dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x00053651: dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x00055b70: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x000538fa: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x59f4b]; jmp dword ptr [ebp - 0x75]; 
0x0005369f: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x59f4b]; jmp dword ptr [ebp - 0x77]; 
0x00054ce7: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x5bf4b]; jmp dword ptr [ebp - 0x77]; 
0x00057807: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x5ab63]; dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x77]; 
0x00055748: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x5ab63]; jmp dword ptr [ebp - 0x77]; 
0x00057ae3: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x00055a0a: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5bb43]; jmp dword ptr [ebp - 0x75]; 
0x00054d28: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5bf4b]; jmp dword ptr [ebp - 0x75]; 
0x000577ed: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x75]; 
0x00052444: dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00053a2a: dec dword ptr [ebx - 0x5a77b]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x00055731: dec dword ptr [ebx - 0x5b373]; inc dword ptr [ebp + 0x2d840fc9]; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7af00005], al; ret 0xfffe; 
0x00053a85: dec dword ptr [ebx - 0x5b743]; jmp dword ptr [ebp - 0x75]; 
0x00055a10: dec dword ptr [ebx - 0x5bb43]; jmp dword ptr [ebp - 0x75]; 
0x0005364b: dec dword ptr [ebx - 0x5bb63]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x00054fe9: dec dword ptr [ebx - 0x5bf4b]; inc dword ptr [ebp + 0x38850fc0]; sbb al, 0; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00054d2e: dec dword ptr [ebx - 0x5bf4b]; jmp dword ptr [ebp - 0x75]; 
0x00054cf3: dec dword ptr [ebx - 0x5bf4b]; jmp dword ptr [ebp - 0x77]; 
0x000546d6: dec dword ptr [ebx - 0x5c34b]; jmp dword ptr [ebp - 0x75]; 
0x000528f0: dec dword ptr [ebx - 0x5c74b]; dec dword ptr [ebx + 0x148b3856]; mov al, byte ptr [ebx - 0x7bf09106]; ret 0x27; 
0x0005533a: dec dword ptr [ebx - 0x5df73]; inc dword ptr [ecx]; ret; 
0x0005401b: dec dword ptr [ebx - 0x5fb6b]; inc dword ptr [ebp + 0x1f840fc0]; cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x0004cd41: dec dword ptr [ebx - 0x61177ba3]; ret; 
0x000c92b0: dec dword ptr [ebx - 0x6a74f3b3]; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000fcf65: dec dword ptr [ebx - 0x6b7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0a9: dec dword ptr [ebx - 0x6b7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0xfd1a0; call eax; 
0x00021f3c: dec dword ptr [ebx - 0x72abdb8c]; xchg al, al; cli; call dword ptr [eax + 0x68]; 
0x00021e43: dec dword ptr [ebx - 0x72abdb8c]; xchg al, al; cli; call dword ptr [eax - 0x73]; 
0x00021cf0: dec dword ptr [ebx - 0x72abdb8c]; xchg byte ptr [esi + ebp*2], ah; cli; call dword ptr [eax - 0x73]; 
0x00040817: dec dword ptr [ebx - 0x72b7db84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x0002460d: dec dword ptr [ebx - 0x72b7db84]; xchg eax, eax; cli; call dword ptr [eax + 0x68]; 
0x000245d1: dec dword ptr [ebx - 0x72b7db84]; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x00023ab5: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax - 0x73]; 
0x0003d75d: dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x000204a0: dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [esi + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x0001e261: dec dword ptr [ebx - 0x72c3dba4]; and dword ptr [eax], 0x69; cli; call dword ptr [eax + 0x68]; 
0x0001e223: dec dword ptr [ebx - 0x72c3dba4]; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x0003a6f1: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x00039a80: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x00021028: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x0002117e: dec dword ptr [ebx - 0x72d3db84]; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x00020c0f: dec dword ptr [ebx - 0x72d3db84]; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x001350c2: dec dword ptr [ebx - 0x72d7dba4]; sbb eax, -0x5b; cli; call dword ptr [eax - 0x73]; 
0x000a7615: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x00109959: dec dword ptr [ebx - 0x72dbdb84]; xchg eax, edi; cdq; cli; call dword ptr [eax - 0x73]; 
0x00109913: dec dword ptr [ebx - 0x72dbdb84]; xchg esp, ebp; cdq; cli; call dword ptr [eax - 0x73]; 
0x000a47aa: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x0009eb8a: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x73], ecx; cli; call dword ptr [eax + 0x68]; 
0x000ad480: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000a050d: dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x0009ff01: dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x000a3ad7: dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000fcc1c: dec dword ptr [ebx - 0x72e3dbac]; sub dword ptr [edi], 0x5c; cli; jmp dword ptr [ebp - 0x77]; 
0x000a49bb: dec dword ptr [ebx - 0x72e3dbac]; xor byte ptr [eax + 0x73], 0xfa; call dword ptr [eax - 0x73]; 
0x000ba354: dec dword ptr [ebx - 0x72e7db84]; xchg eax, edx; nop; cli; call dword ptr [eax - 0x73]; 
0x00038255: dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x000a2595: dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x00116933: dec dword ptr [ebx - 0x72ebdbac]; adc ah, 0x9b; cli; call dword ptr [eax - 0x73]; 
0x0004ef92: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [esp + esi*2 - 6], bl; call dword ptr [eax - 0x73]; 
0x00120c12: dec dword ptr [ebx - 0x72f3dbac]; add al, 0xa0; cli; call dword ptr [eax + 0x68]; 
0x00120a7a: dec dword ptr [ebx - 0x72f3dbac]; add al, 0xa0; cli; call dword ptr [eax - 0x73]; 
0x000ea1a3: dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000f45ed: dec dword ptr [ebx - 0x74abdbb4]; push esp; and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000bf548: dec dword ptr [ebx - 0x74abdbb4]; push esp; and al, 4; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000ecc8d: dec dword ptr [ebx - 0x74dfdbb4]; push esp; and al, 0x24; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecdad: dec dword ptr [ebx - 0x74dfdbb4]; push esp; and al, 0xc; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0001b59c: dec dword ptr [ebx - 0x74e7dbbc]; push esp; and al, 0x1c; add esp, 0x24; ret; 
0x000ed86c: dec dword ptr [ebx - 0x74f3dbac]; dec esp; and al, 0x54; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ffa3c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f548c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff541: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f554c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69de: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b4e: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e1c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000c5996: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a94: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c04: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00101134: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00101429: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f7894: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea244: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2f4: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ff81c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff8cc: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff97c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011dc: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58dc: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ffaec: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000fae8c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f688c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f692c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f447c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0ec: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed18c: dec dword ptr [ebx - 0x74f7dbb4]; push esp; and al, 0xc; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x0013ca1f: dec dword ptr [ebx - 0x74fbdbbc]; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x000a4f9a: dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x00168e69: dec dword ptr [ebx - 0x7697db84]; jl 0x168e95; or byte ptr [ecx], bh; ret; 
0x000ed828: dec dword ptr [ebx - 0x76abdbb4]; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0004fee4: dec dword ptr [ebx - 0x76dbdb84]; ret 0xf229; 
0x0008b4de: dec dword ptr [ebx - 0x76e3dbac]; lds ecx, ptr [ecx - 0x1c17dbec]; aad 0xf9; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x0013593d: dec dword ptr [ebx - 0x76e3dbb4]; fisubr dword ptr [ecx]; ret 0xc89; 
0x00021bb5: dec dword ptr [ebx - 0x76ebdbbc]; ret; 
0x00029b1b: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x00042f60: dec dword ptr [ebx - 0x76fbdbb4]; ret 0xc889; 
0x0011a389: dec dword ptr [ebx - 0x7972438b]; pushal; pushfd; cli; call dword ptr [eax - 0x73]; 
0x0003ddcf: dec dword ptr [ebx - 0x7a2dcecd]; test byte ptr [edi], -0x6b; ret 0x5409; 
0x000676dc: dec dword ptr [ebx - 0x7aafdbbc]; ror byte ptr [edi], 0x84; ret; 
0x0002868d: dec dword ptr [ebx - 0x7c034eb4]; jns 0x286ad; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xeb6b], cl; call dword ptr [ecx + 0x50]; 
0x0013585e: dec dword ptr [ebx - 0x7c726ba3]; in al, dx; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000fbf3e: dec dword ptr [ebx - 0x7cb3dbbc]; ret; 
0x0004ef64: dec dword ptr [ebx - 0x7cb7dba4]; ret; 
0x00109742: dec dword ptr [ebx - 0x7cdfdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x000b690e: dec dword ptr [ebx - 0x7cebdbac]; ret 0x3909; 
0x00080bfd: dec dword ptr [ebx - 0x7cefdbbc]; call 0xfe0450c; inc edi; ret; 
0x000eae2b: dec dword ptr [ebx - 0x7d7374fa]; inc eax; psubd mm7, mm7; add ecx, edx; jmp ecx; 
0x000ce9a9: dec dword ptr [ebx - 0x7e722bb3]; jo 0xce942; cli; call dword ptr [eax - 0x73]; 
0x000cea98: dec dword ptr [ebx - 0x7e722bb3]; jo 0xcea31; cli; call dword ptr [eax - 0x73]; 
0x000ccfd9: dec dword ptr [ebx - 0x7e7233b3]; jl 0xccf72; cli; call dword ptr [eax - 0x73]; 
0x000cd0c3: dec dword ptr [ebx - 0x7e7233b3]; jl 0xcd05c; cli; call dword ptr [eax - 0x73]; 
0x0006faca: dec dword ptr [ebx - 0x7e7257b3]; pushfd; jp 0x6facd; call dword ptr [eax - 0x73]; 
0x0011c29d: dec dword ptr [ebx - 0x8363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000604a6: dec dword ptr [ebx - 0x8737b]; inc dword ptr [ebx - 0x7f72f314]; je 0x6052a; cli; call dword ptr [eax - 0x18]; 
0x00064812: dec dword ptr [ebx - 0x89363]; call dword ptr [edx - 0x77]; 
0x00065004: dec dword ptr [ebx - 0x8937b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00065755: dec dword ptr [ebx - 0x8937b]; inc dword ptr [ebx - 0x7f72f314]; je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x0005f7af: dec dword ptr [ebx - 0x8b773]; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001340b4: dec dword ptr [ebx - 0x8b7b]; jmp dword ptr [ebp - 0x39]; 
0x0010ee16: dec dword ptr [ebx - 0x8b80]; jmp dword ptr [ebp - 0x75]; 
0x0005ef82: dec dword ptr [ebx - 0x8c37b]; call dword ptr [esi - 0x18]; 
0x0005ef13: dec dword ptr [ebx - 0x8db73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x0006512d: dec dword ptr [ebx - 0x8f34b]; inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00119422: dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx + 0xff1390b]; xchg esi, eax; ret 0xf983; 
0x00063d90: dec dword ptr [ebx - 0x8fb73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x0010aadc: dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x000bd12b: dec dword ptr [ebx - 0x937b]; dec dword ptr [ecx - 0x8743]; dec dword ptr [ebp - 0x5557378]; jmp dword ptr [esi - 0x70]; 
0x000be8e7: dec dword ptr [ebx - 0x9743]; jmp dword ptr [esi - 0x70]; 
0x000412c9: dec dword ptr [ebx - 0x9763]; call dword ptr [edi + 0x51]; 
0x00041707: dec dword ptr [ebx - 0x976b]; dec dword ptr [ebp - 0x58c137e]; call dword ptr [eax + 0x68]; 
0x000415ba: dec dword ptr [ebx - 0x977b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0010ac64: dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x0004cd70: dec dword ptr [ebx - 0xa34b]; call dword ptr [edx - 0x73]; 
0x000d9155: dec dword ptr [ebx - 0xa76b]; inc dword ptr [ecx]; ret; 
0x000bdd6b: dec dword ptr [ebx - 0xa77b]; dec dword ptr [ebx + 0x19888]; add cl, ch; ret; 
0x000bd592: dec dword ptr [ebx - 0xaf7b]; call dword ptr [edx + 0x6a]; 
0x00102cc5: dec dword ptr [ebx - 0xbb43]; dec dword ptr [ebp - 0x567b779]; call dword ptr [eax - 0x73]; 
0x000be47b: dec dword ptr [ebx - 0xbb7b]; call dword ptr [edi - 0x77]; 
0x0007e40c: dec dword ptr [ebx - 0xd77d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x7e41e; call eax; 
0x00136a44: dec dword ptr [ebx - 0xe373]; dec dword ptr [ebp - 0x55a037f]; call dword ptr [eax - 0x73]; 
0x000714a5: dec dword ptr [ebx - 0xf471f8b]; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000e4c00: dec dword ptr [ebx]; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x7d]; 
0x000e4e79: dec dword ptr [ebx]; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x7d]; 
0x0007e730: dec dword ptr [ebx]; add byte ptr [ecx + 0xf6c244c], cl; inc edi; ret 0x548b; 
0x000815b4: dec dword ptr [ebx]; add byte ptr [edi], cl; inc edi; ret 0xc083; 
0x000822a0: dec dword ptr [ecx + 0x10c48307]; pop ebx; pop esi; pop edi; ret; 
0x001021d4: dec dword ptr [ecx + 0x1c0b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c5ae4: dec dword ptr [ecx + 0x1db8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006bd2b: dec dword ptr [ecx + 0x1e9e445]; fdiv st(2), st(0); jmp dword ptr [esi - 0x70]; 
0x000428f4: dec dword ptr [ecx + 0x1fb29f3]; ret; 
0x0007d538: dec dword ptr [ecx + 0x21d8f7c8]; ror byte ptr [ebx + 0x1202454], 1; ret 0xfa81; 
0x000bf504: dec dword ptr [ecx + 0x244c8bee]; push esp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000dab9e: dec dword ptr [ecx + 0x24548bd9]; adc byte ptr [esi - 0x7f], ah; loope 0xdaba8; add esi, esi; ret; 
0x00107830: dec dword ptr [ecx + 0x24748bd3]; add al, 0x89; inc edi; adc al, 0x29; ret; 
0x00030def: dec dword ptr [ecx + 0x248c8dcb]; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000540c8: dec dword ptr [ecx + 0x29008bf2]; ret 0xd389; 
0x00053aba: dec dword ptr [ecx + 0x29008bfa]; ret 0x953b; 
0x000790b0: dec dword ptr [ecx + 0x29c129da]; ret 0xd139; 
0x001078af: dec dword ptr [ecx + 0x30e82434]; sbb cl, dh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005ef7a: dec dword ptr [ecx + 0x348d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c37b]; call dword ptr [esi - 0x18]; 
0x00069207: dec dword ptr [ecx + 0x39e9e045]; add bh, bl; call dword ptr [ebp + 0x57]; 
0x0005f7e0: dec dword ptr [ecx + 0x3c858bc2]; idiv edi; call dword ptr [ecx - 0x75]; 
0x0013b038: dec dword ptr [ecx + 0x45f6240c]; adc byte ptr [esi*2 - 0xf7d72e8], al; popal; cmc; jmp dword ptr [esi - 9]; 
0x000b4f46: dec dword ptr [ecx + 0x4708910]; pop ebx; pop esi; pop edi; ret; 
0x00145360: dec dword ptr [ecx + 0x470f5ff8]; ret 0xc35d; 
0x001328d9: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x000ff061: dec dword ptr [ecx + 0x4b82845]; add byte ptr [eax], al; add cl, ch; ret; 
0x000b771d: dec dword ptr [ecx + 0x4c48310]; xor eax, eax; pop ebx; pop esi; ret; 
0x00132e98: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000721d7: dec dword ptr [ecx + 0x54e9e445]; jle 0x721d9; call dword ptr [ebx - 0x7d]; 
0x00028be5: dec dword ptr [ecx + 0x5b108931]; pop esi; pop edi; ret; 
0x000822d3: dec dword ptr [ecx + 0x5f5e5b07]; ret; 
0x0006ce3c: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0004a8cd: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000d7076: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x0007206f: dec dword ptr [ecx + 0x62e9e445]; jg 0x72071; jmp dword ptr [esi - 0x70]; 
0x000edca4: dec dword ptr [ecx + 0x6b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073711: dec dword ptr [ecx + 0x6b90e9c7]; cli; jmp dword ptr [esi - 0x70]; 
0x00073151: dec dword ptr [ecx + 0x7042e9c7]; cli; jmp dword ptr [esi - 0x70]; 
0x00048cb7: dec dword ptr [ecx + 0x75c085d1]; sub al, byte ptr [ebp - 0x5b7af00a]; add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000537ed: dec dword ptr [ecx + 0x75c085f2]; jne 0x53780; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000b0a77: dec dword ptr [ecx + 0x75d285c8]; sub al, byte ptr [ebp + 0x76850ff6]; add dword ptr [eax], eax; add byte ptr [ebx - 0x363f7b], al; jmp eax; 
0x000f7a64: dec dword ptr [ecx + 0x76b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003a6d0: dec dword ptr [ecx + 0x7c808dc7]; jae 0x3a6d2; call dword ptr [eax - 0x73]; 
0x000f7b04: dec dword ptr [ecx + 0x94b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005ef19: dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x00165d62: dec dword ptr [ecx + 0x9ca89d0]; ret 0xf209; 
0x000d1cd3: dec dword ptr [ecx + 0xce82434]; je 0xd1ccf; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011dde2: dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x000fe0c7: dec dword ptr [ecx + 0xfa6f3d6]; xchg edi, eax; rcr byte ptr [eax + eax], 0x84; ror byte ptr [edi], 0x84; ret; 
0x0001c007: dec dword ptr [ecx + 0xfd28510]; test byte ptr [ebp + 0x6b000000], dl; ret 0x893c; 
0x000a0fac: dec dword ptr [ecx - 0x137cdbec]; or byte ptr [ebx - 0x72e7dbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000e3bd7: dec dword ptr [ecx - 0x14f73]; call dword ptr [eax + 0x56]; 
0x000e44c9: dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x000e44b1: dec dword ptr [ecx - 0x15f4b]; dec dword ptr [ebp - 0x12f63]; dec dword ptr [ebx - 0x10f70]; dec dword ptr [ebp - 0x1337b]; dec dword ptr [ecx - 0x15b7b]; jmp dword ptr [ebp - 0x5f]; 
0x001379d2: dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0004363f: dec dword ptr [ecx - 0x16f3dbbc]; ret; 
0x00100a94: dec dword ptr [ecx - 0x1732143d]; ret 0xe1; 
0x00069ec3: dec dword ptr [ecx - 0x1b161bbb]; idiv dl; jmp dword ptr [esi - 0x70]; 
0x000275f7: dec dword ptr [ecx - 0x1b373]; call dword ptr [eax - 1]; 
0x00027a8f: dec dword ptr [ecx - 0x1b743]; dec dword ptr [ecx - 0x1cb7b]; jmp dword ptr [ecx]; 
0x00027a95: dec dword ptr [ecx - 0x1cb7b]; jmp dword ptr [ecx]; 
0x0006b79f: dec dword ptr [ecx - 0x1f811639]; cli; jmp dword ptr [esi - 0x70]; 
0x0006bf81: dec dword ptr [ecx - 0x25f91639]; cli; jmp dword ptr [esi - 0x70]; 
0x0006979f: dec dword ptr [ecx - 0x2a81639]; cli; jmp dword ptr [esi - 0x70]; 
0x0006c763: dec dword ptr [ecx - 0x2c751639]; cli; jmp dword ptr [esi - 0x70]; 
0x0006cbf3: dec dword ptr [ecx - 0x2ff81639]; cli; jmp dword ptr [esi - 0x70]; 
0x0006cdf3: dec dword ptr [ecx - 0x319f1639]; cli; jmp dword ptr [esi - 0x70]; 
0x00047262: dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000479fb: dec dword ptr [ecx - 0x35fb6b]; dec dword ptr [ecx - 0x36274b]; dec dword ptr [ebx - 0x36774b]; jmp dword ptr [esi - 0x70]; 
0x0004725c: dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000479f5: dec dword ptr [ecx - 0x35ff7b]; dec dword ptr [ecx - 0x35fb6b]; dec dword ptr [ecx - 0x36274b]; dec dword ptr [ebx - 0x36774b]; jmp dword ptr [esi - 0x70]; 
0x000477cc: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000b00e7: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000b0888: dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00048b42: dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x00047a01: dec dword ptr [ecx - 0x36274b]; dec dword ptr [ebx - 0x36774b]; jmp dword ptr [esi - 0x70]; 
0x000474f6: dec dword ptr [ecx - 0x36576b]; call dword ptr [edx - 0x75]; 
0x000dd3c3: dec dword ptr [ecx - 0x3b7cbb8b]; adc byte ptr [ebx - 0x76e3dbac], cl; inc ebp; and byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000ce212: dec dword ptr [ecx - 0x3e0f7616]; cli; sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000e70f6: dec dword ptr [ecx - 0x46b7b]; jmp dword ptr [ebp - 0x5f]; 
0x000c87ea: dec dword ptr [ecx - 0x46b7b]; jmp dword ptr [ebp - 0x75]; 
0x000eb0b2: dec dword ptr [ecx - 0x472c763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eb0dd: dec dword ptr [ecx - 0x472c763f]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006a8b0: dec dword ptr [ecx - 0x48161bbb]; out dx, al; cli; jmp dword ptr [esi - 0x70]; 
0x001164c8: dec dword ptr [ecx - 0x48b7b]; call dword ptr [esi + 0x52]; 
0x0002ca8a: dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x000c9d88: dec dword ptr [ecx - 0x4976b]; call dword ptr [eax - 0x18]; 
0x000c9e54: dec dword ptr [ecx - 0x4977b]; inc dword ptr [ecx]; ret; 
0x00101ddf: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x0005a72c: dec dword ptr [ecx - 0x4cf63]; dec dword ptr [ebx - 0x51763]; inc dword ptr [ebp - 0x687bf025]; or byte ptr [eax], al; add byte ptr [ebx - 0x7bf00001], al; ret 0x13; 
0x00058883: dec dword ptr [ecx - 0x4cf7b]; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x0005a26c: dec dword ptr [ecx - 0x4ef6b]; call dword ptr [ecx + 0x50]; 
0x0005818b: dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x75]; 
0x00059399: dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x0005888f: dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x0005a3fd: dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x0005a604: dec dword ptr [ecx - 0x4ff4b]; jmp dword ptr [ebp - 0x75]; 
0x000e5995: dec dword ptr [ecx - 0x4ff6b]; call dword ptr [eax - 0x73]; 
0x000e5bbe: dec dword ptr [ecx - 0x50373]; call dword ptr [eax - 0x73]; 
0x000e5640: dec dword ptr [ecx - 0x5136b]; call dword ptr [ecx - 1]; 
0x000d19e5: dec dword ptr [ecx - 0x517dbcc]; jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005a47f: dec dword ptr [ecx - 0x52f4b]; jmp dword ptr [ebp - 0x75]; 
0x0005a403: dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x00058185: dec dword ptr [ecx - 0x53b73]; dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x75]; 
0x000581f9: dec dword ptr [ecx - 0x53f4b]; jmp dword ptr [ebp - 0x75]; 
0x00053d9b: dec dword ptr [ecx - 0x59f6b]; call dword ptr [ecx + 0x50]; 
0x00057813: dec dword ptr [ecx - 0x5ab63]; dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x77]; 
0x00055754: dec dword ptr [ecx - 0x5ab63]; jmp dword ptr [ebp - 0x77]; 
0x00054c7c: dec dword ptr [ecx - 0x5ab73]; call dword ptr [eax - 0x77]; 
0x000546ff: dec dword ptr [ecx - 0x5ab73]; call dword ptr [esi - 0x18]; 
0x00055826: dec dword ptr [ecx - 0x5ab7b]; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0005792a: dec dword ptr [ecx - 0x5af43]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005196a: dec dword ptr [ecx - 0x5af43]; dec dword ptr [ecx - 0x60373]; jmp dword ptr [ebp - 0x75]; 
0x000577f3: dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x75]; 
0x00057819: dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x77]; 
0x00052345: dec dword ptr [ecx - 0x5bb7b]; jmp dword ptr [ebp - 0x75]; 
0x000546d0: dec dword ptr [ecx - 0x5bf4b]; dec dword ptr [ebx - 0x5c34b]; jmp dword ptr [ebp - 0x75]; 
0x00056f5f: dec dword ptr [ecx - 0x5bf6b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x00057ead: dec dword ptr [ecx - 0x5cf6b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x0012673e: dec dword ptr [ecx - 0x5e17dbcc]; sub edi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00051970: dec dword ptr [ecx - 0x60373]; jmp dword ptr [ebp - 0x75]; 
0x00069946: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000efee5: dec dword ptr [ecx - 0x72961439]; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x7d8d04ec], al; mov word ptr [ecx - 0xbb6b], cs; call dword ptr [edi + 0x52]; 
0x0012f3af: dec dword ptr [ecx - 0x76097a09]; ret 0x468d; 
0x0012f4d2: dec dword ptr [ecx - 0x76097a0d]; ret 0x468d; 
0x0005dfed: dec dword ptr [ecx - 0x760ffe08]; ret; 
0x0013120e: dec dword ptr [ecx - 0x763e7606]; ret; 
0x000714c3: dec dword ptr [ecx - 0x76581639]; cli; jmp dword ptr [esi - 0x70]; 
0x000e98d0: dec dword ptr [ecx - 0x769bdbbc]; ret 0xc483; 
0x000e9cad: dec dword ptr [ecx - 0x769bdbbc]; ret; 
0x000296ce: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0007db52: dec dword ptr [ecx - 0x76dfdbb4]; push esp; and al, 0x14; call eax; 
0x0002c0d4: dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x000e95f9: dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x0004c5a2: dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x0006f515: dec dword ptr [ecx - 0x7bf047bb]; ret; 
0x000e3980: dec dword ptr [ecx - 0x7c067638]; ret 0x8920; 
0x0004e128: dec dword ptr [ecx - 0x7c8fdbbc]; les edx, ptr [ecx + ecx*4]; ret; 
0x0002dfec: dec dword ptr [ecx - 0x7ccbdbb4]; in al, dx; or al, 0xff; je 0x2e01b; cmp al, 0xe8; ret; 
0x0002c2c6: dec dword ptr [ecx - 0x7cdfdb8c]; ret 0x8b04; 
0x0003aa0e: dec dword ptr [ecx - 0x81d2c0e]; rol byte ptr [ebp + 0xf182454], cl; xchg ebp, eax; ret 0xb60f; 
0x000bd131: dec dword ptr [ecx - 0x8743]; dec dword ptr [ebp - 0x5557378]; jmp dword ptr [esi - 0x70]; 
0x000bdd65: dec dword ptr [ecx - 0x8743]; dec dword ptr [ebx - 0xa77b]; dec dword ptr [ebx + 0x19888]; add cl, ch; ret; 
0x000bccb3: dec dword ptr [ecx - 0x8743]; dec dword ptr [edi]; dec ebp; ret; 
0x00065169: dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006467e: dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00065074: dec dword ptr [ecx - 0x89f73]; call dword ptr [ecx + 0x6a]; 
0x0005e0ef: dec dword ptr [ecx - 0x8b77b]; dec dword ptr [ecx - 0x8c743]; jmp dword ptr [ebp - 0x75]; 
0x0005e0f5: dec dword ptr [ecx - 0x8c743]; jmp dword ptr [ebp - 0x75]; 
0x00063096: dec dword ptr [ecx - 0x8d77b]; jmp dword ptr [ebp - 0x75]; 
0x000c74d7: dec dword ptr [ecx - 0x937b]; jmp dword ptr [ebp - 0x75]; 
0x0004fa7f: dec dword ptr [ecx - 0x9ebdb84]; ret 0xf50; 
0x0004cfcf: dec dword ptr [ecx - 0xa37b]; call dword ptr [ecx - 1]; 
0x0004cb8b: dec dword ptr [ecx - 0xa773]; inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x0012c198: dec dword ptr [ecx - 0xab6b]; call dword ptr [eax + 0x53]; 
0x00136132: dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x00133dbe: dec dword ptr [ecx - 0xab7b]; dec dword ptr [ebx + 0x4d891445]; mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000fa2cb: dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013612c: dec dword ptr [ecx - 0xb36b]; dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x000d8322: dec dword ptr [ecx - 0xb743]; jmp dword ptr [ebp - 0x5f]; 
0x000bce3c: dec dword ptr [ecx - 0xbb6b]; call dword ptr [eax - 0x18]; 
0x000bcfa1: dec dword ptr [ecx - 0xbb73]; call dword ptr [eax - 0x18]; 
0x000bd951: dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x000d831c: dec dword ptr [ecx - 0xc36b]; dec dword ptr [ecx - 0xb743]; jmp dword ptr [ebp - 0x5f]; 
0x0006a341: dec dword ptr [ecx - 0xc8a1639]; cli; jmp dword ptr [esi - 0x70]; 
0x0010b7a6: dec dword ptr [ecx - 0xcb73]; call dword ptr [eax - 0x77]; 
0x00136628: dec dword ptr [ecx - 0xcf7b]; jmp dword ptr [ebp - 0x5f]; 
0x001369d9: dec dword ptr [ecx - 0xd77b]; dec dword ptr [ebp - 0x9b7b]; call dword ptr [eax + 0x6a]; 
0x00028361: dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0002839f: dec dword ptr [ecx - 0xdb6b]; call dword ptr [edi + 0x56]; 
0x000284e0: dec dword ptr [ecx - 0xdb73]; call dword ptr [edi + 0x50]; 
0x00136622: dec dword ptr [ecx - 0xdf63]; dec dword ptr [ecx - 0xcf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0006a5c9: dec dword ptr [ecx - 0xeb91639]; cli; jmp dword ptr [esi - 0x70]; 
0x000b72f3: dec dword ptr [ecx - 0xef6b]; call dword ptr [edi - 0x18]; 
0x000c6d21: dec dword ptr [ecx]; ret 0x850f; 
0x000f5b45: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; ret; 
0x000ff106: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x00161353: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00040a1e: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9f74; 
0x000aa28e: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0xa074; 
0x000e1ce8: dec dword ptr [edi]; add dword ptr [ecx], -0x6d; inc ebx; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00100488: dec dword ptr [edi]; and dword ptr [ecx - 0x55], 0xfffffff1; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000c5d6d: dec dword ptr [edi]; cmp dword ptr [edx + edx*2 - 0xb], -1; ret; 
0x0001dd7d: dec dword ptr [edi]; dec eax; ret 0x8dc3; 
0x000bccb9: dec dword ptr [edi]; dec ebp; ret; 
0x000b02c4: dec dword ptr [edi]; dec edi; ret 0xc801; 
0x0002e815: dec dword ptr [edi]; inc ebp; call 0x20006; jmp dword ptr [esi - 0x70]; 
0x000e477f: dec dword ptr [edi]; inc ebp; ret 0x8588; 
0x000b4109: dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x0011c052: dec dword ptr [edi]; inc ebp; ret; 
0x0015ccc9: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x00031021: dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00038725: dec dword ptr [edi]; inc esp; ret 0x489; 
0x000c27f7: dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x00081d43: dec dword ptr [edi]; inc esp; ret 0xc483; 
0x000c272d: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00028af7: dec dword ptr [edi]; inc esp; ret; 
0x00051db0: dec dword ptr [edi]; mov dh, 0xc0; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x000527f6: dec dword ptr [edi]; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x00052421: dec dword ptr [edi]; mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x000524a3: dec dword ptr [edi]; mov dh, 0xc3; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x00085274: dec dword ptr [edi]; mov esp, 0xf042444; inc esp; ret 0xc083; 
0x0004824d: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b6c0e: dec dword ptr [edi]; sbb ebx, 0x43; idiv bh; ret; 
0x0004383b: dec dword ptr [edi]; sub dword ptr [esi + 0x31fffd77], -0x40; ret; 
0x0005e728: dec dword ptr [edi]; test byte ptr [0x83000013], ch; ret; 
0x000e6576: dec dword ptr [edi]; test byte ptr [eax + eax - 0x6b750000], bl; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0009dcfe: dec dword ptr [edi]; test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x000b1270: dec dword ptr [edi]; test byte ptr [eax], bl; idiv bh; call dword ptr [edx + 0x6a]; 
0x0013aa54: dec dword ptr [edi]; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0005debe: dec dword ptr [edi]; test byte ptr [ebx - 0x7b000000], cl; ror byte ptr [edi], 0x84; ret; 
0x0013d25b: dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x0009dcdb: dec dword ptr [edi]; test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x0013a920: dec dword ptr [edi]; test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x00059dcd: dec dword ptr [edi]; test dh, bl; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00055820: dec dword ptr [edi]; test dword ptr [0x89fffffe], eax; test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0009d97f: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0004fa18: dec dword ptr [edi]; test dword ptr [ebp + 0xf000000], edi; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0009da8a: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0004bdbf: dec dword ptr [edi]; test dword ptr [edx - 0x9ffffff], ebx; ret 0xf50; 
0x0005686c: dec dword ptr [edi]; test edx, esi; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x000b07c5: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0007a056: dec dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x000fb450: dec dword ptr [edi]; xchg ebp, eax; ret 0xda21; 
0x000489e2: dec dword ptr [edi]; xchg ebp, eax; ret 0xe983; 
0x000460d8: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x000b0f74: dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x0004924e: dec dword ptr [edi]; xchg edi, eax; ret 0xf039; 
0x00048868: dec dword ptr [edi]; xchg edx, eax; ret 0xd320; 
0x0013d054: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00079f17: dec dword ptr [edi]; xchg esp, eax; ret 0x6e2b; 
0x0001adff: dec dword ptr [edi]; xchg esp, eax; ret 0x748b; 
0x0013eef5: dec dword ptr [edi]; xchg esp, eax; ret 0x9e3b; 
0x000db58b: dec dword ptr [edi]; xchg esp, eax; ret 0xc085; 
0x0006905f: dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x0006903e: dec dword ptr [edi]; xchg esp, eax; ret 0xd009; 
0x00070fa6: dec dword ptr [edi]; xchg esp, eax; ret 0xd108; 
0x00070f9d: dec dword ptr [edi]; xchg esp, eax; sar dword ptr [ebx], 0x9e; mov eax, 0xfffffff; xchg esp, eax; ret 0xd108; 
0x0002e65d: dec dword ptr [edi]; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x2e645; ret; 
0x000faff8: dec dword ptr [edi]; xor ecx, 0xffffffff; int1; inc ebx; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00064aaf: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000e4d57: dec dword ptr [edx]; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x0009c302: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098e7c: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x0009c2a1: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098e1e: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0007c86d: dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00070a17: dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00070b11: dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x0014913a: dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012438c: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x001258c7: dec eax; add al, 0x5b; ret; 
0x000d7c82: dec eax; add al, 0x75; fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0010c478: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000f012d: dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0xf4d0f6d], cl; call dword ptr [edx - 0x73]; 
0x000dd9fb: dec eax; add al, 0x89; ret; 
0x0006e12a: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0006de0a: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000748f0: dec eax; add al, 0xf; mov dh, 2; ret; 
0x0010fdcc: dec eax; add cl, byte ptr [edi]; xchg esp, eax; ret 0x7c8b; 
0x000738e9: dec eax; add dword ptr [eax], eax; add byte ptr [ebp - 0x49f0ff8a], cl; inc ebp; aam 0x89; ret 0xf889; 
0x000a7f14: dec eax; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b2854: dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x000fa451: dec eax; add dword ptr [ecx + 0xc6144a], ecx; and byte ptr [ebx - 0xa37b], cl; jmp dword ptr [ebp - 0x77]; 
0x000a0cf0: dec eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x001579fb: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001561f2: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x00098d90: dec eax; add eax, 0x824448b; pop esi; ret; 
0x0009c203: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0012e63e: dec eax; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00077f91: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0012413e: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0014db3a: dec eax; and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f6748: dec eax; bnd jmp dword ptr [esi - 0x70]; 
0x0012bf05: dec eax; call dword ptr [eax + 0x10]; 
0x0012bdaf: dec eax; call dword ptr [eax + 0x14]; 
0x0001dfbc: dec eax; call eax; 
0x00149f53: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf53: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001533a3: dec eax; cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000c6db0: dec eax; cli; call dword ptr [eax + 0x68]; 
0x000c6e45: dec eax; cli; call dword ptr [eax - 0x18]; 
0x000c8765: dec eax; cli; call dword ptr [eax - 0x73]; 
0x000c6c14: dec eax; cli; call dword ptr [esi + 0x50]; 
0x00078b31: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x78b30; ret; 
0x0004389c: dec eax; cmp al, 0x8b; inc eax; inc eax; ret; 
0x00102cce: dec eax; cwde; cli; call dword ptr [eax - 0x73]; 
0x00149ffa: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0014bfea: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0008550a: dec eax; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0005e0f2: dec eax; idiv edi; dec dword ptr [ecx - 0x8c743]; jmp dword ptr [ebp - 0x75]; 
0x0005f7b2: dec eax; idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0014b722: dec eax; imul al; mov esp, 0x81ffff17; ret; 
0x00149722: dec eax; imul al; mov esp, 0x81ffff37; ret; 
0x0008af16: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x00043858: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000192db: dec eax; jle 0x192f5; mov eax, 0xf0; lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009c2bf: dec eax; jnp 0x5b15e70a; pop esi; ret; 
0x00098e3c: dec eax; jnp 0x5e11b287; ret; 
0x00028e51: dec eax; jo 0x28e4e; dec dword ptr [ebp - 0x58fd780]; call dword ptr [edx + 0x50]; 
0x000fced6: dec eax; lodsb al, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x00035357: dec eax; mov ecx, esi; xor edx, edx; mov eax, edi; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00065ed7: dec eax; mov edx, dword ptr [esp + 0x78]; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x000668f4: dec eax; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0006669a: dec eax; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00065dff: dec eax; movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0013f7b7: dec eax; or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; xor eax, eax; ret; 
0x0006de3b: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0006de0d: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0007b471: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x000fc6ad: dec eax; or dh, dh; ret 0x7401; 
0x0002102f: dec eax; outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000960ad: dec eax; outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00069950: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000b327d: dec eax; pop ebx; ret; 
0x001455a4: dec eax; pop edx; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0009c243: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dd0: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015793f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00156192: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0009c3e9: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f46: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006ba83: dec eax; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0003383f: dec eax; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012ca8a: dec eax; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x000f51e6: dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x0009c223: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098db0: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00157a1b: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00156202: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000b2ab1: dec eax; ret 0x44c7; 
0x0001dd7f: dec eax; ret 0x8dc3; 
0x000b468e: dec eax; ret 0xb70f; 
0x000256ac: dec eax; ret 0xc083; 
0x000342ba: dec eax; ret 0xc483; 
0x0015dbe3: dec eax; ret 0xff3; 
0x0007a38f: dec eax; ret 0xff50; 
0x0001ec68: dec eax; ret; 
0x00046b8e: dec eax; rol byte ptr [eax - 0x79f0f607], 1; call dword ptr [esi]; 
0x000de365: dec eax; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x000c0935: dec eax; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x0006e311: dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0009c3bb: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098f28: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00127048: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014d03a: dec eax; sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010c647: dec eax; sub dword ptr [eax], eax; add byte ptr [eax - 0x73], bl; sub eax, 0x58; cli; call dword ptr [eax - 1]; 
0x0012b46c: dec eax; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000948ad: dec eax; xchg byte ptr [edx], cl; add byte ptr [ecx + 0xed7afc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ccff2: dec eax; xchg ecx, eax; cli; call dword ptr [eax - 0x18]; 
0x001018a4: dec eax; xchg edi, eax; int1; jmp dword ptr [esi - 0x70]; 
0x000891db: dec ebp; aam 0x29; ret 0x28b; 
0x00089270: dec ebp; aam 0x29; ret 0x748d; 
0x000fc6aa: dec ebp; aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x000ce72a: dec ebp; aam 0x8b; mov esp, 0xf9fc3481; inc dword ptr [ecx]; iretd; jmp edi; 
0x00053e0a: dec ebp; adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret; 
0x000e50dc: dec ebp; adc byte ptr [ecx - 0x53b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0006399a: dec ebp; adc byte ptr [ecx], ch; ret; 
0x0014ac94: dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00133860: dec ebp; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4b75; 
0x00087186: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000d181d: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x001476ad: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000aa24d: dec ebp; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0014ae94: dec ebp; and bh, bh; inc dword ptr [ecx + 0x44b68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f6243: dec ebp; bnd jmp dword ptr [esi - 0x70]; 
0x0014880b: dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000fecf3: dec ebp; cli; call dword ptr [eax - 0x18]; 
0x000f8365: dec ebp; cli; call dword ptr [edx - 0x77]; 
0x0002e813: dec ebp; cli; dec dword ptr [edi]; inc ebp; call 0x20006; jmp dword ptr [esi - 0x70]; 
0x0013c2ca: dec ebp; cmp dl, 0x2f; ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x0003a83d: dec ebp; fdiv st(7), st(0); dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0010d896: dec ebp; in al, 0x31; dec dword ptr [ebx - 0x10777]; jmp dword ptr [ebp - 0x7d]; 
0x001043d9: dec ebp; int1; jmp dword ptr [ebp - 0x77]; 
0x00133dc9: dec ebp; mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c7f24: dec ebp; or al, 0x89; lea ebp, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x000c92b2: dec ebp; or al, 0x8b; xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00101f5a: dec ebp; push esi; cli; call dword ptr [eax + 0x6a]; 
0x000bb27c: dec ebp; ret 0x4489; 
0x00027a05: dec ebp; ret 0x518b; 
0x00095ff5: dec ebp; ret 0xe; 
0x000bb0ea: dec ebp; ret; 
0x000ab5ff: dec ebp; shr bl, 1; or al, 0x8d; je 0xab62c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000f1d0a: dec ebp; sub byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0007bdb7: dec ebx; adc byte ptr [esi], 0; mov ecx, dword ptr [ecx + 0x1dfc]; test ecx, ecx; jne 0x7bdd0; ret; 
0x0003ac26: dec ebx; add al, 0; add byte ptr [eax], dl; add byte ptr [eax - 0x3b7cfb0c], al; adc byte ptr [ecx], cl; ret 0x850f; 
0x0014ae9b: dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00109216: dec ebx; add al, 0x89; je 0x10923f; adc al, 0xf; xchg ebp, eax; ret 0xc985; 
0x000fb250: dec ebx; add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x000bc9d1: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x9373], cl; inc dword ptr [ebx]; mov word ptr [ecx - 0x60bac], es; jmp ecx; 
0x000b2431: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000e0f34: dec ebx; add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x0003888e: dec ebx; add dword ptr [ecx - 0x7cf7dbbc], ecx; ret; 
0x0005dcb6: dec ebx; arpl word ptr [eax], bx; add byte ptr [ebx - 0x6f72f314], al; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x001457b6: dec ebx; call 0xec9757c5; sbb byte ptr [ebx - 0x10f80], cl; jmp dword ptr [ebp + 3]; 
0x0010b03b: dec ebx; cli; call dword ptr [eax + 0x57]; 
0x000e8ddb: dec ebx; cli; call dword ptr [eax + 0x6a]; 
0x0001e2a3: dec ebx; cli; call dword ptr [eax - 0x18]; 
0x000e8f2a: dec ebx; cli; call dword ptr [eax - 0x73]; 
0x000eea4c: dec ebx; cli; call dword ptr [ebp + 0x6a]; 
0x0012c4e3: dec ebx; cli; call dword ptr [esi + 0x57]; 
0x000fd9ae: dec ebx; cli; call ptr [ebx + 0x5e]; ret; 
0x000f7bbb: dec ebx; cli; jmp dword ptr [ebp - 0x75]; 
0x0008f161: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000857f0: dec ebx; in al, 0x83; ret 0x8301; 
0x00162994: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x00162034: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x00161974: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x0001b5b6: dec ebx; mov bl, byte ptr [eax + eax]; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x00081abc: dec ebx; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x0011f497: dec ebx; or al, 0; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x0012454a: dec ebx; out dx, eax; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000de1dc: dec ebx; ret 0xfff3; 
0x000f89e1: dec ebx; ret 0xfff7; 
0x000de961: dec ebx; ret; 
0x000edca1: dec ebx; sar al, 1; dec dword ptr [ecx + 0x6b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001beb6: dec ebx; sbb dword ptr [eax + eax], 0xf98808b; add byte ptr [eax], al; ret; 
0x00161519: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00161531: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00132eb9: dec ecx; adc dword ptr [ebx], ecx; add byte ptr [ebx - 0x417fb14], al; ret; 
0x0014b084: dec ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e43ee: dec ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00050183: dec ecx; add al, byte ptr es:[eax]; add esp, 0x1c; ret; 
0x00037ab3: dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000911a7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x00091307: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdc7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf27: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0009ce71: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000db4ac: dec ecx; cli; call dword ptr [eax - 0x17]; 
0x000cd0bb: dec ecx; cli; call dword ptr [eax - 0x18]; 
0x000d018c: dec ecx; cli; call dword ptr [eax - 0x73]; 
0x000db220: dec ecx; cli; call dword ptr [eax - 0x77]; 
0x000d26d0: dec ecx; cli; call dword ptr [eax - 1]; 
0x000db21a: dec ecx; cli; dec dword ptr [ebp - 0x5b6a271]; call dword ptr [eax - 0x77]; 
0x000bac3c: dec ecx; fld dword ptr [ecx]; ret; 
0x0008c0d7: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x0008dacb: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x0008c207: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x0008dc2b: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x00107e8d: dec ecx; inc ebx; adc al, 0x29; ret 0x728d; 
0x00107c6e: dec ecx; inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00043966: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000e1da7: dec ecx; into; call dword ptr gs:[0x10]; 
0x0009e6bc: dec ecx; jne 0x9e6b8; pop esi; ret; 
0x000bf228: dec ecx; lcall 0x194, 0xb872773b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c87a: dec ecx; or byte ptr [ebx + 0xf770ff8], al; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x00091347: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf67: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000c70cb: dec ecx; push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00091327: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf47: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000bcfc1: dec ecx; ret 0x1c8d; 
0x00063e95: dec ecx; ret 0x9589; 
0x000f6639: dec ecx; ret 0xc483; 
0x000bafb9: dec ecx; ret 0xc801; 
0x000badc4: dec ecx; ret 0xd801; 
0x0001ea8b: dec ecx; ret 0xec83; 
0x0004c5aa: dec ecx; ret; 
0x0004b43f: dec ecx; retf 0xf9c1; add eax, 0xf6944d89; ret 0xf1f; 
0x000bc11c: dec ecx; rol dword ptr [ecx], 1; ret 0x48b; 
0x001640d8: dec ecx; ror dword ptr [ecx + 0x5f8c1cd], 0xf6; rcr dword ptr [edi], 0xf; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x000b24a4: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000951af: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x0009680c: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x0009682e: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x0009686c: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x0009512c: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b248f: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0009bea6: dec edi; adc byte ptr [edx], cl; add byte ptr [ecx + 0xe64eac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009cbac: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0015b68d: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0014aa3e: dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00160bcd: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000967a0: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x00131a9b: dec edi; add esp, 0x18; pop ebx; ret; 
0x000b2504: dec edi; and al, 0x75; js 0xb2568; pop esi; ret; 
0x0001fb35: dec edi; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x00095336: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b24ef: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0010a3b3: dec edi; bnd call dword ptr [eax + 0x6a]; 
0x000fb165: dec edi; cmc; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000b2574: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000b2569: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x000f6027: dec edi; dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff24f; ret; 
0x0014b9b3: dec edi; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00098ba6: dec edi; inc ebx; or al, byte ptr [eax]; add ecx, 0xe976a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009684c: dec edi; jge 0x5e687b9a; pop ebx; ret; 
0x0009516c: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000f3fed: dec edi; mov al, byte ptr [0xc483fffa]; adc byte ptr [ebp + 0x393374c0], al; ret; 
0x000ffd9d: dec edi; mov dl, 0xf1; jmp dword ptr [esi - 0x70]; 
0x0010c189: dec edi; or al, 0x56; mov dword ptr [ebp - 0x44], ecx; push dword ptr [ebp - 0xbc]; push edx; call eax; 
0x0007031a: dec edi; or al, 0x89; ret 0xc801; 
0x001096cd: dec edi; or byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x000b2459: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0012f087: dec edi; or eax, dword ptr [eax]; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x0013cfdd: dec edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0014dd33: dec edi; pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00095100: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x00095276: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000950e0: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000fb158: dec edi; rcl dword ptr [eax - 0x73], 0x82; movsb byte ptr es:[edi], byte ptr [esi]; dec esp; cli; call dword ptr [eax + 0x53]; 
0x000fb71c: dec edi; rcl dword ptr [eax - 0x73], 0x82; scasb al, byte ptr es:[edi]; dec esp; cli; call dword ptr [eax + 0x53]; 
0x000d10f4: dec edi; ret 0x1e03; 
0x0011d9d4: dec edi; ret 0x4589; 
0x0012c0ec: dec edi; ret 0x5057; 
0x0009efb4: dec edi; ret 0x8dc3; 
0x0009efd3: dec edi; ret 0xc35f; 
0x00039a71: dec edi; ret 0xc801; 
0x0003ca76: dec edi; ret 0xf001; 
0x000e9d6d: dec edi; ret 0xffff; 
0x000bb099: dec edi; ret; 
0x000bf7e6: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000b24d4: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00096916: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x00096938: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x00096986: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0012055c: dec edi; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x000bf7dc: dec edi; sbb byte ptr [ecx - 0x76fbdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00095236: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b24b9: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000b2524: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x0014d233: dec edi; sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b2519: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x001609e0: dec edi; test dh, 4; jne 0x160a34; add eax, 0xb; ret; 
0x000b2554: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000b253f: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x0009cafa: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00030afd: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00132718: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000a7df2: dec edx; adc al, bh; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x0008e8be: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x00092caf: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0014af34: dec edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012e238: dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x00101937: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x101940; ret; 
0x00101bb0: dec edx; add al, 0x83; jmp dword ptr [eax]; 
0x000cf32e: dec edx; add al, 0x83; ret 0x8301; 
0x000da89d: dec edx; add al, 0x83; ret; 
0x00070a14: dec edx; add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00070b0e: dec edx; add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x0006e591: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00082420: dec edx; add al, 0x89; ret 0x4089; 
0x00082185: dec edx; add al, 0x89; ret 0xec83; 
0x000a0784: dec edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00153ac6: dec edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0008ef0c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0012f42c: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x00153b4e: dec edx; add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x00153a46: dec edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x0008eb0a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0013a512: dec edx; add dword ptr [esi - 0x7d], edx; ret; 
0x0008eb70: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000911b0: dec edx; add eax, 0x5f0c428d; ret; 
0x0008eb52: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000ec1ec: dec edx; add esp, 0x74; pop ebx; pop esi; ret; 
0x0013a134: dec edx; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x001548fa: dec edx; clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00163156: dec edx; cld; jne 0x163160; pop ebx; ret; 
0x0015ee18: dec edx; cld; mov eax, 0; jne 0x15f060; pop ebx; ret; 
0x00149f56: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf56: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x00132753: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x001533a6: dec edx; cld; pop ebx; ret; 
0x000e5d27: dec edx; cli; call dword ptr [eax + 0x6a]; 
0x000e224c: dec edx; cli; call dword ptr [eax - 0x18]; 
0x000e8d25: dec edx; cli; call dword ptr [eax - 0x18]; adc al, byte ptr [ecx]; hlt; jmp dword ptr [esi - 0x70]; 
0x000c1f08: dec edx; cli; call dword ptr [eax - 0x73]; 
0x000df3c2: dec edx; cli; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00121fdf: dec edx; cli; dec dword ptr [ebp - 0x59fbc7d]; call dword ptr [edi + 0x6a]; 
0x000c6c0e: dec edx; cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x001534c6: dec edx; cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000fb729: dec edx; cmc; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0014a08e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00149ffd: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0001c006: dec edx; dec dword ptr [ecx + 0xfd28510]; test byte ptr [ebp + 0x6b000000], dl; ret 0x893c; 
0x000c1f07: dec edx; dec edx; cli; call dword ptr [eax - 0x73]; 
0x00121fde: dec edx; dec edx; cli; dec dword ptr [ebp - 0x59fbc7d]; call dword ptr [edi + 0x6a]; 
0x000b7b5e: dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x0003920a: dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000c7185: dec edx; inc ecx; add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000b7b58: dec edx; mov byte ptr [0x8d01f980], al; dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00151d97: dec edx; mov cl, 0xfe; inc dword ptr [ecx + 0x3e6a5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00125872: dec edx; mov edi, 0xc4830000; adc byte ptr [ebp - 0x7c5b8b40], al; ret; 
0x0009ef59: dec edx; or al, 0x83; ret 0x8310; 
0x0008e884: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0009b81f: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x00092edb: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0008ebd4: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x0008ec48: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008f034: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0010d002: dec edx; or edi, ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000ec0a2: dec edx; out dx, eax; bnd jmp dword ptr [esi - 0x70]; 
0x0008ebb0: dec edx; pop es; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008efb0: dec edx; pop es; jne 0x8ee51; pop ebx; ret; 
0x000911f0: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x00091350: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x0008ce10: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x0008f9d3: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x0008cf70: dec edx; pop es; mov eax, edx; ret; 
0x000955e3: dec edx; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008ec78: dec edx; push cs; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0a8: dec edx; push cs; jne 0x8ee51; pop ebx; ret; 
0x0008eb92: dec edx; push es; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef92: dec edx; push es; jne 0x8ee51; pop ebx; ret; 
0x000911d0: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x00091330: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x0008cdf0: dec edx; push es; mov eax, edi; pop edi; ret; 
0x0008cf50: dec edx; push es; mov eax, edx; ret; 
0x0013515f: dec edx; pushal; cli; call dword ptr [eax + 0x6a]; 
0x00094a98: dec edx; salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0014a122: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c112: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00153562: dec edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00149fa7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfa7: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001533f7: dec edx; sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00153436: dec edx; sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001266f4: dec edx; xor al, 0x5b; ret; 
0x0009d289: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000d0fb0: dec esi; adc byte ptr [ecx], al; ret 0x5c89; 
0x0014abfb: dec esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0004436c: dec esi; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x00098d87: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aa071: dec esi; add eax, 0x8d500000; add byte ptr [ebx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x0003a876: dec esi; add eax, 0x8d500000; xchg dword ptr [ebx + esi*2], eax; cli; call dword ptr [eax - 0x18]; 
0x001609e5: dec esi; add eax, 0xb; ret; 
0x000f5fd1: dec esi; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ef438: dec esi; and bh, bh; xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000b2571: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000ea19a: dec esi; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x00146393: dec esi; imul edi, edi, -1; add ebx, 0x48ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000f4223: dec esi; inc eax; add ch, bl; ret; 
0x00100fee: dec esi; jle 0x100fe3; jmp dword ptr [esi - 0x70]; 
0x00020fee: dec esi; jle 0x20ff1; add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x000325bd: dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0003a6ee: dec esi; out 0xfe, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x000d7096: dec esi; pop esi; and al, 0x39; ret; 
0x000c716e: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x000efd8b: dec esi; ret 0x8589; 
0x00048038: dec esi; ret 0x9d8d; 
0x000da0a2: dec esi; ret 0xc085; 
0x0004615d: dec esi; ret 0xda29; 
0x0004b4a8: dec esi; ret 0xec83; 
0x00120c93: dec esi; ret 1; 
0x0004447f: dec esi; ret; 
0x000b24d1: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000bf7e9: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x00078945: dec esi; sbb al, 0x89; ret 0xff85; 
0x000bf7e3: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000b783c: dec esi; sbb byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x00139ded: dec esi; std; call dword ptr [ebx + 0x31]; 
0x000b2551: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00085eeb: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014ad4b: dec esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006d9c7: dec esp; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000eab2f: dec esp; add al, byte ptr [eax]; add byte ptr [ecx + 0xc42484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000f6222: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0006daa4: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00148041: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x000f57ff: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0010158d: dec esp; and al, 0x10; mov ebx, 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ec3a7: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ef25b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0010031b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe0b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010025b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d6b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbbb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc1b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaeb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d9b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffdb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000ff5ad: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00050f68: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00145580: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101670: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000f585f: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00082eba: dec esp; and al, 0x10; push dword ptr [esp + 8]; push ebp; call eax; 
0x0012e1a5: dec esp; and al, 0x10; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00069b33: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00131737: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x000fd21a: dec esp; and al, 0x10; test eax, eax; jne 0xfd240; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000bf27c: dec esp; and al, 0x14; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000f661a: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000faf50: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58bf: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ee8e0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef190: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003b0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00100140: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00100030: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00100180: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00100220: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd20: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb80: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000f591f: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00101785: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00025f50: dec esp; and al, 0x14; ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x000ffb59: dec esp; and al, 0x14; test edx, edx; je 0xffb90; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00025f0f: dec esp; and al, 0x18; call eax; 
0x000ffe45: dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000f6d46: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f7026: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00145340: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00126677: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00126637: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000fab55: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010e8db: dec esp; and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e94b: dec esp; and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x0011578c: dec esp; and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x0007db54: dec esp; and al, 0x20; mov dword ptr [esp + 0x14], edx; call eax; 
0x000ecc4a: dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecc8f: dec esp; and al, 0x20; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecdaf: dec esp; and al, 0x20; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001015dc: dec esp; and al, 0x20; mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x0012e0e8: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00131e7b: dec esp; and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x0013a0f4: dec esp; and al, 0x24; call ecx; 
0x000ece8e: dec esp; and al, 0x24; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed970: dec esp; and al, 0x24; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ecece: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecfee: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0013a3b7: dec esp; and al, 0x24; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000329c1: dec esp; and al, 0x24; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a2a7: dec esp; and al, 0x28; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007777f: dec esp; and al, 0x28; push ecx; call eax; 
0x0012e0d5: dec esp; and al, 0x28; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x0007d7a3: dec esp; and al, 0x28; sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push esi; call dword ptr [eax]; 
0x0013a27b: dec esp; and al, 0x2c; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012f701: dec esp; and al, 0x3c; sub ecx, dword ptr gs:[0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x000668f2: dec esp; and al, 0x48; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x00066698: dec esp; and al, 0x48; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x000bf48a: dec esp; and al, 0x54; call dword ptr gs:[0x10]; 
0x000f4534: dec esp; and al, 0x54; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000ff6ea: dec esp; and al, 0x54; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f45b4: dec esp; and al, 0x54; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f4ea2: dec esp; and al, 0x54; mov edx, dword ptr [esp + 0x58]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f45ef: dec esp; and al, 0x54; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000bf54a: dec esp; and al, 0x54; mov edx, dword ptr [esp + 4]; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000bf508: dec esp; and al, 0x54; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf435: dec esp; and al, 0x54; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000ed82a: dec esp; and al, 0x54; mov edx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed872: dec esp; and al, 0x54; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ad850: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x001013a9: dec esp; and al, 0x6c; sub ecx, dword ptr gs:[0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x0007b258: dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000ed221: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x001266ed: dec esp; and al, 0xc; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x0007b2a0: dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x000bf32b: dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000ec1bc: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec31c: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec26c: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000eb39d: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7ca2: dec esp; and al, 0xc; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x00050f37: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001004a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100066: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6816: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef226: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6656: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff256: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100106: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff36: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff66: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee876: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6966: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6996: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee846: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000e1df7: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f632a: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f62fc: dec esp; and al, 0xc; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ede02: dec esp; and al, 0xc; mov esi, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e8344: dec esp; and al, 0xc; movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x0007c7a9: dec esp; and al, 0xc; neg edi; sub esp, 0xc; push edi; call dword ptr [ebp]; 
0x0012e3af: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8c6: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x00034e04: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e57: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea4: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef7: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000b31c4: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000f81b5: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc1f: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x0007c7c9: dec esp; and al, 0xc; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x000ec087: dec esp; and al, 0xc; xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000bf380: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000f7996: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f7958: dec esp; and al, 4; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000c747c: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xc7490; ret; 
0x0001b714: dec esp; and al, 4; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x00129c5f: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x001316d4: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000fada2: dec esp; and al, 8; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x001000d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100343: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000edd93: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00100373: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001003e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100413: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100443: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x000ec0b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031143: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ff433: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000edd13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6353: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000f7e83: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec863: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec893: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f7813: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ffe73: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ed9b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000faf83: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000e1c43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c73: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1d53: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ffea3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031723: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c6683: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001001e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc73: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb43: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000ef153: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x000ffa3e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f548e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff543: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f554e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e0: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b50: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e1e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000c5998: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a96: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c06: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00101136: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010142b: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f7896: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea246: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2f6: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ff81e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff8ce: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff97e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011de: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58de: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ffaee: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352be: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000fae8e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f688e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f692e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f447e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0ee: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed18e: dec esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x000b42f7: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000b3f74: dec esp; and byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0xd], dh; in al, dx; call dword ptr [eax - 0x73]; 
0x000b3ed9: dec esp; and byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xor dword ptr [eax - 0xd], 0xffffffec; call dword ptr [eax - 1]; 
0x000f634c: dec esp; bnd call dword ptr [eax + 0x4c8bda89]; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001026eb: dec esp; call 0x1025c0; add esp, 4; ret; 
0x0001fc8c: dec esp; call eax; 
0x0002499c: dec esp; call esi; 
0x000f83a0: dec esp; cli; call dword ptr [eax + 0x50]; 
0x000fb15e: dec esp; cli; call dword ptr [eax + 0x53]; 
0x000514f4: dec esp; cli; call dword ptr [eax + 0x56]; 
0x000f8435: dec esp; cli; call dword ptr [eax - 0x18]; 
0x000f9ae1: dec esp; cli; call dword ptr [eax - 0x39]; 
0x000f9de0: dec esp; cli; call dword ptr [eax - 0x73]; 
0x000fa74f: dec esp; cli; call dword ptr [eax - 1]; 
0x000fa3b9: dec esp; cli; call dword ptr [ecx - 0x75]; 
0x000f89a1: dec esp; cli; call dword ptr [edx + 0x50]; 
0x000f8e22: dec esp; cli; call dword ptr [edx + 0x57]; 
0x000f8346: dec esp; cli; call dword ptr [edx - 0x77]; 
0x000fa6d4: dec esp; cli; call dword ptr [esi + 0x50]; 
0x000204dd: dec esp; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x0003a7cc: dec esp; jae 0x3a7c9; call dword ptr [eax - 0x18]; 
0x0003d70e: dec esp; jae 0x3d70b; call dword ptr [eax - 0x18]; 
0x0004077b: dec esp; jae 0x40778; call dword ptr [eax - 0x18]; 
0x0004994a: dec esp; jae 0x49947; call dword ptr [eax - 0x18]; 
0x000a47c4: dec esp; jae 0xa47c1; call dword ptr [eax - 0x18]; 
0x000a76bb: dec esp; jae 0xa76b8; call dword ptr [eax - 0x18]; 
0x000aa0e1: dec esp; jae 0xaa0de; call dword ptr [eax - 0x18]; 
0x000b15b7: dec esp; jae 0xb15b4; call dword ptr [eax - 0x18]; 
0x0007bb31: dec esp; jl 0x7bb2e; call dword ptr [edi - 1]; 
0x000bed5d: dec esp; loope 0xbed5f; call dword ptr [edx + 0x50]; 
0x0012c7d8: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00056bdd: dec esp; mov ebp, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0011a69d: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x000817af: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00032a52: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010d5db: dec esp; pop ecx; cli; call dword ptr [eax - 0x18]; 
0x000ff3ff: dec esp; push cs; add byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00024998: dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x000c1d04: dec esp; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x0002498f: dec esp; push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0012c82b: dec esp; push edx; call eax; 
0x000d7014: dec esp; ret 0x5650; 
0x000b695d: dec esp; ret 0x7d04; 
0x0012099b: dec esp; ret 0x8904; 
0x000d9dc3: dec esp; ret 0xc183; 
0x001419f0: dec esp; ret 0xfff5; 
0x000ef147: dec esp; ret; 
0x00033883: dec esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ea51e: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00116b5a: dec esp; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011149e: dec esp; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010448a: dec esp; sub byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00144ced: dec esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000e1185: dec esp; xchg edx, eax; cli; call dword ptr [eax - 0x73]; 
0x000f83fd: div byte ptr [ebp + 0x10]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c69ef: div byte ptr [ebp + 0x2e]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aaf: div byte ptr [ebp + 0x2e]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0016be00: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0016bd3d: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x0016b6de: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x000e5ecc: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x0001befd: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x000509eb: div byte ptr [ebx]; cli; call dword ptr [eax - 0x18]; 
0x001021c1: div byte ptr [esp + ecx - 0x77]; mov bl, 0xc0; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0004fd21: div dh; ret 0xf40; 
0x0016bfa1: div dword ptr [ebp - 0x14]; pop ebx; pop esi; pop edi; ret; 
0x0015eba0: div ebx; jmp dword ptr [esi - 0x70]; 
0x0004d305: div ebx; pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x0011353a: div edx; call dword ptr [eax - 0x18]; 
0x0012c87e: emms; lsl edx, word ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x000ff4c7: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff4c7: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0013a137: fadd dword ptr [eax]; add byte ptr [eax], al; mov eax, ebx; pop ebx; ret; 
0x000f035a: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ef328: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x000b7706: fadd dword ptr [ebp - 0x7cf28a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00050846: fadd dword ptr [ebp - 0x7cfa8a2e]; les ecx, ptr [eax]; pop ebx; ret; 
0x0015c9d8: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x00031206: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00076a7e: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000c5909: fadd dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000352e9: fadd dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005d8cb: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0005f1fa: fadd dword ptr [ebx - 0x1f3efe20]; add al, 0x89; ret 0xb60f; 
0x0005ecfe: fadd dword ptr [ebx - 0x1f3efe20]; add al, 9; ror byte ptr [eax - 0x7a72f2b9], 1; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x00046d0e: fadd dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00152bcb: fadd dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d55d6: fadd dword ptr [ecx]; ret 0x5489; 
0x000d5121: fadd dword ptr [ecx]; ret 0x9aeb; 
0x000441a3: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0008eb74: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0014b52a: fadd dword ptr [esp + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000659fe: fadd qword ptr [eax + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011bd3c: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xaf7b], cl; call dword ptr [eax + 0x6a]; 
0x000c0938: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c07d1: fadd qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b3b18: fadd qword ptr [eax]; add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00100fd3: fadd qword ptr [eax]; add byte ptr [ebp - 0x5682b7d], cl; call dword ptr [eax - 0x73]; 
0x001527ab: fadd qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00109e26: fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x0002f5d4: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0002fbbf: fadd st(0); add esp, 8; pop ebx; ret; 
0x0002f589: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00063e89: fadd st(1); clc; add ch, byte ptr [ecx]; ret 0xb8; 
0x0013c3ab: fadd st(7), st(0); inc esp; ret; 
0x00145e7d: fbld tbyte ptr [esi + 0xf]; jg 0x145ec4; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146f8d: fbld tbyte ptr [esi + 0xf]; jg 0x146fd4; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0003a681: fbstp tbyte ptr [edx]; cli; call dword ptr [eax - 0x18]; 
0x0005b0a9: fbstp tbyte ptr [esp + edx - 0x7d]; ret; 
0x000c0113: fcmove st(0), st(5); pop es; add byte ptr [ecx + 0x123ee9c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000fe159: fcom dword ptr [ebx - 6]; call dword ptr [eax + 0x52]; 
0x0014a5aa: fcom dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00128490: fcom qword ptr [edi - 4]; jmp dword ptr [ebp - 0x77]; 
0x0012bb0c: fcom st(5); out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0014000c: fcomi st(5); call dword ptr [edi - 1]; 
0x0014e974: fcomi st(7); ret 1; 
0x00126007: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0001e52c: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0011b51a: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x00028c67: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000311d1: fcomp dword ptr [ebx + 0x5e]; ret; 
0x000ac942: fcomp dword ptr [ebx + 0x5e]; sub eax, edx; pop edi; ret; 
0x001452f2: fcomp dword ptr [ebx - 0x17]; inc edi; stosb byte ptr es:[edi], al; cli; jmp dword ptr [esi - 0x70]; 
0x0001b457: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x0015e1a8: fcomp dword ptr [edi + 0x5b]; ret; 
0x0015e708: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x00163078: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b2588: fcomp dword ptr [edi + 0x5e]; ret; 
0x001453a2: fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x00043c34: fcomp dword ptr [esi + 0x5f]; ret; 
0x00113dc6: fcomp qword ptr [edx - 6]; call dword ptr [eax + 0x53]; 
0x00152a6a: fcomp st(1); add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00057bc2: fcos; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x0005adab: fcos; jmp dword ptr [esi - 0x70]; 
0x0002ca87: fdiv dword ptr [eax - 6]; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x0008aca0: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x00127ec1: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x0008ac64: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000439fc: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00121474: fdiv dword ptr [ecx]; add byte ptr [eax], al; ror edx, 9; xor edx, dword ptr gs:[0x18]; push edx; call eax; 
0x0004d2f6: fdiv dword ptr [edi - 0x19]; mov eax, ecx; pop ebx; pop esi; ret; 
0x00074d3b: fdiv dword ptr [esi + 0x42]; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0016b5cc: fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x000e5f09: fdiv dword ptr [esp + ebp - 0x7d]; ret 0x8301; 
0x0002ca91: fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x00087200: fdiv qword ptr [edx + 1]; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ebp - 0x8fef98c], cl; rol byte ptr [ecx], 1; ret; 
0x000ed112: fdiv st(0), st(0); inc dword ptr [ebx - 0x2776ef3c]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011b5ab: fdiv st(0); jmp dword ptr [esi - 0x70]; 
0x0010c1d4: fdiv st(1); inc dword ptr [ebx - 0x72afef3c]; xchg dword ptr [edi], ecx; pop eax; cli; call dword ptr [ebx + 0x50]; 
0x0006bd31: fdiv st(2), st(0); jmp dword ptr [esi - 0x70]; 
0x0013e10f: fdiv st(2); jmp dword ptr [ecx]; 
0x0003b1a3: fdiv st(6), st(0); dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x00049571: fdiv st(7), st(0); dec dword ptr [ebx - 0x365b63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x000552c4: fdiv st(7), st(0); dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0003a83e: fdiv st(7), st(0); dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0009f4f9: fdiv st(7); ret; 
0x00120de1: fdivp st(6); jmp dword ptr [esi - 0x70]; 
0x000b9a8e: fdivp st(7); call dword ptr [edi + 0x57]; 
0x00110d5e: fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000c3a9f: fdivr dword ptr [eax + 0xf0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00085f10: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0009efcd: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0005a4e9: fdivr dword ptr [ecx]; ret 0x830f; 
0x000f67c5: fdivr dword ptr [ecx]; ret; 
0x0009efaf: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x000ed323: fdivr st(2), st(0); jmp dword ptr [esi - 0x70]; 
0x0012479f: fdivr st(4), st(0); call dword ptr [edx - 0x73]; 
0x00131384: fdivr st(5); jmp dword ptr [esi - 0x70]; 
0x000ab148: fdivr st(7), st(0); dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x000ab1a5: fdivr st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x0012ab18: fdivr st(7); add esp, 0xc; ret; 
0x001113b0: fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x0009b8c1: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00093346: fdivr st(7); pop ebx; ret; 
0x00092bd7: fdivr st(7); pop edi; pop ebx; ret; 
0x0009db2e: fdivr st(7); pop esi; pop ebx; ret; 
0x000ed127: fdivrp st(2); dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff2de; ret; 
0x000f67c3: fdivrp st(7); fdivr dword ptr [ecx]; ret; 
0x00095ee3: ffreep st(2); push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b90e6: fiadd dword ptr [eax + 0x440f2df9]; ret 0x4789; 
0x000faf1e: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007b82c: fiadd dword ptr [ebx + 0x1489f8e2]; and al, 0x89; aad 0x89; ret 0xeac1; 
0x000bee77: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000bd942: fiadd dword ptr [ebx - 0x62f00c02]; shr dword ptr [ebx], 0x45; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x000bd9a5: fiadd dword ptr [ebx - 0x62f00c07]; shr dword ptr [ebx], 0x45; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x0008e284: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x0008dd04: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x0008d784: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x001529a4: fiadd dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011f492: fiadd dword ptr [ecx]; add byte ptr [0xc4b6b], al; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x00160193: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x0004213b: fiadd dword ptr [ecx]; ret 0x5489; 
0x0009e361: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0012f082: fiadd word ptr [eax]; add byte ptr [0xb4f7b], al; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x0012f0a5: fiadd word ptr [eax]; add byte ptr [ecx + 0xb4f58c3], al; add byte ptr [ebx - 0x18345], cl; jmp dword ptr [ebp - 0x75]; 
0x00152584: fiadd word ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a3f3e: fiadd word ptr [ecx]; cli; call dword ptr [ebx - 1]; 
0x0010f002: fiadd word ptr [edx]; add byte ptr [0xd4ffb], al; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x0012f081: fiadd word ptr fs:[eax]; add byte ptr [0xb4f7b], al; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x00128592: ficom dword ptr [esi - 4]; jmp dword ptr [ebp - 0x77]; 
0x000ff176: ficomp dword ptr [ebx + 0x5e]; and ecx, 0xfff00; pop edi; or eax, ecx; ret; 
0x0007a05e: ficomp dword ptr [ebx + 0x5e]; mov eax, edx; pop edi; pop ebp; ret; 
0x0002fc9b: ficomp dword ptr [ebx + 0x5e]; mov eax, edx; shr eax, 0x1f; ret; 
0x0001b53e: ficomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000f9112: ficomp dword ptr [esi]; bnd jmp dword ptr [esi - 0x70]; 
0x000bef47: fidiv dword ptr [ebp + 0x56]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008ad58: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0x8ad50; pop ebx; pop esi; ret; 
0x0008ad20: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x0008aaa8: fidiv dword ptr [ebp + esi*8 - 0x7c]; sal byte ptr [ecx + edi - 0x73], cl; push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x00145d07: fidiv dword ptr [ecx - 1]; inc dword ptr [ecx + 0x490f5c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0009bf8b: fidiv dword ptr [edx - 0x1e]; call 0x13cef9; add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095feb: fidiv dword ptr [edx - 0x1e]; call 0x13cef9; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ab: fidiv dword ptr [edx - 0x1e]; call 0x13cef9; add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfad: fidiv dword ptr [edx - 0x40]; call 0x13cef9; add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009600d: fidiv dword ptr [edx - 0x40]; call 0x13cef9; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949cd: fidiv dword ptr [edx - 0x40]; call 0x13cef9; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfc8: fidiv dword ptr [edx - 0x5b]; call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096028: fidiv dword ptr [edx - 0x5b]; call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949e8: fidiv dword ptr [edx - 0x5b]; call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfdf: fidiv dword ptr [edx - 0x72]; call 0x13cef9; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009603f: fidiv dword ptr [edx - 0x72]; call 0x13cef9; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ff: fidiv dword ptr [edx - 0x72]; call 0x13cef9; add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f479d: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; pop ebp; ret; 
0x000f4759: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0014535b: fidivr dword ptr [0xfffff000]; mov eax, edi; pop edi; cmova eax, edx; pop ebp; ret; 
0x000a5262: fidivr dword ptr [ebx]; clc; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x0004d2f4: fidivr dword ptr [ecx]; fdiv dword ptr [edi - 0x19]; mov eax, ecx; pop ebx; pop esi; ret; 
0x000414a4: fidivr dword ptr [ecx]; ret 0x860f; 
0x0004b6d5: fidivr dword ptr [ecx]; ret 0xee7f; 
0x0013dafc: fild dword ptr [eax - 0x6bf08dc2]; ret; 
0x00084006: fild dword ptr [eax - 0x6bf0cf06]; ret; 
0x00073924: fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x000faeee: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eb3a1: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009f2a1: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000ab11b: fild dword ptr [ebx + 0x7de9ffd3]; idiv edi; inc dword ptr [ebx + 0x75e9ffcb]; idiv edi; dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x00103054: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x001039fc: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x00152844: fild dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016ab32: fild dword ptr [ecx + 0x40000e6]; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0010ea81: fild dword ptr [ecx - 0xa]; jmp dword ptr [esi - 0x70]; 
0x0002f500: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00127e7d: fild qword ptr [ebp - 2]; jmp dword ptr [esi - 0x70]; 
0x0016ba80: fild word ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000cd9e8: fild word ptr [ebx - 0x6bf0bf02]; ret; 
0x001524eb: fild word ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000e08ad: fild word ptr [edx]; add byte ptr [eax], al; mov ecx, dword ptr [esi + eax*4 - 0x5fa08]; add ecx, esi; jmp ecx; 
0x0014b323: fild word ptr [esi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009648d: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094b92: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bf943: fimul dword ptr [ebx + 0x3b0c246c]; push 0x83b77d1c; ret 0x8301; 
0x000d7c85: fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x000b029b: fimul dword ptr [ebx - 0x364763]; call dword ptr [edx + 0x50]; 
0x000ecac1: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ecac1: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ff4c1: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff4c1: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000fff91: fimul dword ptr [ebx - 0x47fbdba4]; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7eb1: fimul dword ptr [ebx - 0x47fbdba4]; jae 0xf7eb9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100281: fimul dword ptr [ebx - 0x47fbdba4]; je 0x100289; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100471: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x10047a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffde1: fimul dword ptr [ebx - 0x47fbdba4]; jno 0xffde9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c57c1: fimul dword ptr [ebx - 0x47fbdba4]; jp 0xc57c9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7b1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7b1: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ede71: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef281: fimul dword ptr [ebx - 0x47fbdba4]; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c59f1: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000edd71: fimul dword ptr [ebx - 0x47fbdba4]; sub al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef2d1: fimul dword ptr [ebx - 0x47fbdba4]; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000edcf1: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c68a1: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ede91: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f79f1: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00053d65: fimul dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x59f73]; jmp dword ptr [ebp - 0x75]; 
0x001000d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100341: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000edd91: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00100371: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001003e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100411: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100441: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x000ec0b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031141: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ff431: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000edd11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6351: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000f7e81: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec861: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec891: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f7811: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ffe71: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ed9b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000faf81: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000e1c41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c71: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1d51: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ffea1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031721: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c6681: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001001e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc71: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb41: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000ef151: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x000aea34: fimul dword ptr [ecx - 0x361f7b]; dec dword ptr [ebp - 0x7efb7884]; ret 0; 
0x000a80d2: fimul dword ptr [ecx - 0x72dfdbbc]; jl 0xa8061; add al, 0x81; ret 0; 
0x000696ae: fimul dword ptr [ecx - 0x7c3ede2f]; stc; push dword ptr [eax + ebx*2 - 0x77]; ret; 
0x00096192: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a337d: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000bf0c6: fimul dword ptr [edi]; test dword ptr [ebx - 0x48000000], ecx; or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000955d5: fimul dword ptr [edi]; xor byte ptr [ebx + esi*8 + 0x18e8ffff], 0x79; or al, byte ptr [eax]; add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00021196: fimul dword ptr [esi]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x0005c6f9: fimul word ptr [ebx - 0x50763]; jmp dword ptr [ebp - 0x77]; 
0x000460d2: fimul word ptr [ebx - 0x7a24cec6]; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0004a1e9: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00138a73: fimul word ptr [ecx + 0xfa6f3c7]; xchg edi, eax; ret 0xda80; 
0x0007b256: fimul word ptr [ecx - 0x7cf3dbb4]; ret; 
0x000be8e1: fimul word ptr [edi]; and dword ptr [ecx + ebp*8], 0xffffffff; dec dword ptr [ebx - 0x9743]; jmp dword ptr [esi - 0x70]; 
0x000b9800: fimul word ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x000a53d7: fimul word ptr [edi]; xchg esp, eax; ret 0xeb89; 
0x0013611e: fimul word ptr [edx]; add byte ptr [ecx + 0xb0ec], al; add byte ptr [ecx - 0xaf7b], cl; dec dword ptr [ecx - 0xb36b]; dec dword ptr [ecx - 0xab73]; jmp dword ptr [ebp - 0x5f]; 
0x0004646a: fistp dword ptr [ecx]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000518d2: fistp word ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00149da3: fistp word ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007b727: fisttp dword ptr [eax + 0x448b0016]; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x7b740; ret; 
0x0007ace1: fisttp dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000876c2: fisttp dword ptr [ebp + 0xf58245c]; xchg ebp, eax; ret 0xc085; 
0x0001af3c: fisttp dword ptr [ebp - 0x2f76ff8a]; call dword ptr gs:[0x10]; 
0x000b28b9: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00036725: fisttp dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00109358: fisttp dword ptr [ebx - 0x13f80]; jmp dword ptr [ebp - 0x75]; 
0x00024642: fisttp dword ptr [ebx - 0x72b7db84]; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x000d56c3: fisttp dword ptr [ebx - 0x72e3dbb4]; inc ebx; add al, 0x83; ret; 
0x000f6328: fisttp dword ptr [ebx - 0x74f3dbb4]; push esp; and al, 0x10; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00041a8a: fisttp dword ptr [ebx - 0x784f616c]; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x0007b626: fisttp dword ptr [ecx + 0x548b0016]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x00032eb4: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000821fd: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0010eb16: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071070: fisttp dword ptr [ecx]; add byte ptr [ebp - 0x5854f7a], cl; call dword ptr [eax - 0x73]; 
0x000bbaad: fisttp dword ptr [edi]; dec ecx; ret; 
0x000bb2c2: fisttp dword ptr [edi]; dec edi; ret; 
0x000fc728: fisttp dword ptr [edi]; inc ebp; ret 0x4189; 
0x00037b68: fisttp dword ptr [edi]; inc ebp; ret 0xadeb; 
0x00167dde: fisttp dword ptr [edi]; inc ebp; ret; 
0x000c4381: fisttp dword ptr [edi]; inc esp; fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [edi + 0x47], bh; cli; call dword ptr [edi - 1]; 
0x00037b38: fisttp dword ptr [edi]; inc esp; ret 0xc483; 
0x000b0839: fisttp dword ptr [edi]; mov ss, ebp; or dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0002e54b: fisttp dword ptr [edi]; test byte ptr [esi - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x5ce047b], cl; call dword ptr [eax + 0x53]; 
0x00058517: fisttp dword ptr [edi]; test byte ptr [esp + ecx - 0x6a750000], ch; call 0x8405851f; ret 0x8904; 
0x00110341: fisttp dword ptr [edi]; test dword ptr [eax - 0x7cffffff], edi; clc; add dword ptr [ebp - 0x6bf0fdb8], ecx; ret 0x7c8b; 
0x0016a69f: fisttp dword ptr [edi]; xchg ebp, eax; ret 0x7489; 
0x000ab112: fisttp dword ptr [edi]; xchg ebp, eax; ret; 
0x0013fcb4: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x00031b6b: fisttp dword ptr [edi]; xchg esp, eax; ret 0xf685; 
0x0001d9fa: fisttp qword ptr [ecx - 0x7c2dce28]; ret; 
0x0007ee25: fisttp qword ptr [edi]; xchg ebp, eax; ret; 
0x000b7b5f: fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00115e47: fisttp qword ptr [edi]; xchg esp, eax; ret; 
0x0006537d: fisttp word ptr [ebp - 0x3b7d0000]; adc byte ptr [ebx - 0x7bf00008], al; ret; 
0x0009d3e0: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x000aaf9b: fisttp word ptr [ecx - 0x769bdbac]; ret 0xef83; 
0x000aafcb: fisttp word ptr [ecx - 0x76a3dbac]; ret 0xef83; 
0x000d4b9c: fisttp word ptr [ecx]; ret 0x5388; 
0x00167d15: fisttp word ptr [ecx]; test dword ptr [ebx], 0x751c247c; ret 0x7c8b; 
0x0010a551: fisttp word ptr [edi]; xchg esp, eax; ret; 
0x0012ed4e: fisub dword ptr [edx - 6]; call dword ptr [edi + 0x6a]; 
0x0014659d: fisub dword ptr [esi + 0xf]; jg 0x1465e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00146b2d: fisub dword ptr [esi + 0xf]; jg 0x146b74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0015d74c: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00129333: fisub word ptr [ecx - 6]; call dword ptr [eax - 0x18]; 
0x00129518: fisub word ptr [ecx - 6]; call dword ptr [eax - 0x73]; 
0x00145ead: fisub word ptr [esi + 0xf]; jg 0x145ef4; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146fbd: fisub word ptr [esi + 0xf]; jg 0x147004; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0015d50c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00135943: fisubr dword ptr [ecx]; ret 0xc89; 
0x0007980b: fisubr dword ptr [ecx]; ret 0xd139; 
0x000b4927: fisubr dword ptr [ecx]; ret 0xf980; 
0x000b48e3: fisubr dword ptr [ecx]; ret 0xfa83; 
0x000aa14b: fld dword ptr [0x8d500000]; or cl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0003a853: fld dword ptr [0x8d500000]; xchg ecx, ecx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0007e8a3: fld dword ptr [eax + eax]; add dh, dh; ret; 
0x0009c7f3: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x001001eb: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002fafb: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0002f86b: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x0008717e: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000c4384: fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [edi + 0x47], bh; cli; call dword ptr [edi - 1]; 
0x00152a6b: fld dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000bac3d: fld dword ptr [ecx]; ret; 
0x0015edc6: fld dword ptr [ecx]; retf 0xc801; call 0x13cee5; add ebx, 0x31bb4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002fb73: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002fa29: fld dword ptr [esp + 4]; ret; 
0x0002fa77: fld dword ptr [esp]; add esp, 4; ret; 
0x000d66fa: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x000ed720: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f56f9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000ed6b5: fld qword ptr [eax]; add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x00033bb0: fld qword ptr [ebp - 0x769a8b40]; ret; 
0x0015264b: fld qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00161b8f: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0002f8eb: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f6d9: fld qword ptr [esp + 4]; ret; 
0x0002f74a: fld qword ptr [esp]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000453c5: fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002f872: fld qword ptr [esp]; add esp, 8; ret; 
0x0002f585: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002f504: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002f57a: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f399: fld xword ptr [esp + 4]; ret; 
0x000453ff: fld xword ptr [esp]; add esp, 0x14; ret; 
0x0016b5ca: fld1; fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x00131381: fld1; fstpnce st(0), st(0); std; jmp dword ptr [esi - 0x70]; 
0x000ab45d: fldcw word ptr [ecx]; ret 0x28b; 
0x0006a462: fldcw word ptr [ecx]; ret 0xc129; 
0x00069502: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x69568; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006beea: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x6bf78; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00071b5f: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x71db0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000731ef: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x733c0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00021e63: fldcw word ptr [edi]; add byte ptr [ebx - 0x72abdb8c], cl; xchg al, al; cli; call dword ptr [eax + 0x68]; 
0x0009caf6: fldenv [esi + 0xf]; je 0x9cb4a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009d285: fldenv [esi + 0xf]; je 0x9d2d4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0015d7dc: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009c9fa: fldenv [esi + 0xf]; xlatb; ret; 
0x00163449: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x0006d72d: fmul dword ptr [eax + 0x4c4830a]; pop ebx; pop esi; ret; 
0x000e592a: fmul dword ptr [ebp + 0x418dc10c]; or byte ptr [ecx - 0x51373], cl; call dword ptr [eax - 1]; 
0x0008b99c: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x00109e20: fmul dword ptr [ebx + 0x45c7a445]; fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x0012e3ad: fmul dword ptr [ebx + 0x650c244c]; sub ecx, dword ptr [0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x00036e89: fmul dword ptr [ebx + 0xf302444]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x0001affc: fmul dword ptr [ebx - 0x1076e]; jmp dword ptr [ebp - 0x77]; 
0x000fb3ff: fmul dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0006a741: fmul dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005893e: fmul dword ptr [ebx - 0x54b4b]; dec dword ptr [ebx - 0x51763]; jmp dword ptr [ebp - 0x77]; 
0x000fd568: fmul dword ptr [ebx - 0x7f7247bb]; int 0x4c; cli; call dword ptr [eax - 0x18]; 
0x000fd48b: fmul dword ptr [ebx - 0x7f7247bb]; xor al, 0x97; cli; call dword ptr [eax - 0x18]; 
0x000ee2b8: fmul dword ptr [ecx + 0x39202444]; ret 0x7d72; 
0x0009f0f7: fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0013271b: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x0007d350: fmul dword ptr [ecx - 0x68720006]; mov byte ptr [ecx - 6], al; call dword ptr [eax - 0x73]; 
0x0007d32c: fmul dword ptr [ecx - 0x69720006]; mov byte ptr [ecx - 6], al; call dword ptr [eax - 0x73]; 
0x00044025: fmul dword ptr [ecx - 0x76080836]; ret; 
0x0001fe91: fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x00087bf6: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x00080c06: fmul dword ptr [edi]; inc edi; ret; 
0x00085f12: fmul dword ptr [edi]; inc edx; ret; 
0x000ea787: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x0001fe89: fmul dword ptr [edi]; test byte ptr [ecx + 0x29000003], bh; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000f67f7: fmul dword ptr [esi]; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f6718: fmul dword ptr [esi]; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0001d67f: fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x000d0a83: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x00029503: fmul qword ptr [ebx - 0x76f3db84]; ret; 
0x001391ec: fmul qword ptr [ebx - 0x7cefdba4]; ret; 
0x00119b22: fmul qword ptr [ecx + 0x458ba845]; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x000417ae: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00055b6a: fmul qword ptr [ecx - 0x5ab7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x00077236: fmul qword ptr [edi]; adc dword ptr [ebx + 1], 0; add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x000f1bfe: fmulp st(0); cli; jmp dword ptr [esi + 3]; 
0x000517ad: fnsave dword ptr [edx + edi*8]; call dword ptr [ecx + 0x50]; 
0x0015d691: fnstcw word ptr [eax]; jne 0x15de10; pop ebx; ret; 
0x001604d3: fnstcw word ptr [eax]; jne 0x160700; pop ebx; ret; 
0x0002fbba: fnstcw word ptr [edx + 0x13]; jne 0x2fbd0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0002f5cf: fnstcw word ptr [edx + 0xe]; jne 0x2f5e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0002f93e: fnstcw word ptr [edx + 0xf]; jne 0x2f950; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00085073: fnstcw word ptr [edx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011b3d8: fnstenv [esi + 9]; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0002f596: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0001cefe: fnstsw word ptr [eax + 0xf0]; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00115c8f: fnstsw word ptr [edi - 3]; inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x00152904: frstor dword ptr [ebp - 0x3c7e0002]; cmp bl, bl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d5ac: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0002f508: fscale; fstp st(1); ret; 
0x00153c08: fst dword ptr [edx - 0x3c7e0002]; hlt; leave; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002f7bc: fst qword ptr [eax]; fsubr qword ptr [esp]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000fe247: fst qword ptr [ebp - 6]; call dword ptr [eax + 0x52]; 
0x0002fa91: fstp dword ptr [eax]; fld dword ptr [esp]; add esp, 4; ret; 
0x0009efcf: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0006ec7e: fstp dword ptr [ebx + 0x5e]; mov eax, ecx; pop edi; pop ebp; ret; 
0x0015de25: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15de30; neg eax; ret; 
0x00120680: fstp dword ptr [edi - 6]; call dword ptr [eax - 0x18]; 
0x000d7073: fstp dword ptr [edx - 0x7760001]; pop ebx; pop esi; pop edi; ret; 
0x0002fa74: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0002f812: fstp qword ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002f748: fstp qword ptr [eax]; fld qword ptr [esp]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00035021: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a19af: fstp qword ptr [ebx + 0x5e]; mov edx, ebp; pop edi; pop ebp; ret; 
0x00087372: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x0008ae62: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0013907f: fstp qword ptr [ebx - 3]; jmp dword ptr [esi - 0x70]; 
0x000b329d: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002f86f: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0016b5d0: fstp st(0); add esp, 0x20; ret; 
0x0002f598: fstp st(0); and eax, 0x200; ret; 
0x0002f50a: fstp st(1); ret; 
0x0002fafa: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0002f86a: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x000c5e08: fstp xword ptr [eax + 0x55]; mov eax, 0x166; lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0002f4c1: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0001d6d1: fstp xword ptr [ecx - 0x3b7c0001]; adc byte ptr [ecx + 0x74c085c1], cl; ret 0xec83; 
0x00131383: fstpnce st(0), st(0); std; jmp dword ptr [esi - 0x70]; 
0x0002f599: fsub dword ptr [0x200]; ret; 
0x0007d53c: fsub dword ptr [ecx]; ror byte ptr [ebx + 0x1202454], 1; ret 0xfa81; 
0x00145fcd: fsub dword ptr [esi + 0xf]; jg 0x146014; call 0x42ea6f3d; clc; pop ebx; ret; 
0x001470dd: fsub dword ptr [esi + 0xf]; jg 0x147124; call 0x42ea804d; clc; pop ebx; ret; 
0x0015d87c: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000941ac: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x00145f0d: fsub qword ptr [esi + 0xf]; jg 0x145f54; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0014701d: fsub qword ptr [esi + 0xf]; jg 0x147064; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0015a667: fsub st(1), st(0); ret; 
0x00151f6a: fsub st(4); add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002f467: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000b329b: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002f497: fsubp st(1); ret; 
0x0012b2c5: fsubp st(6); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e27a8: fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e5311: fsubp st(7); call dword ptr [edx + 0x6a]; 
0x00105eaa: fsubr dword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000aca20: fsubr dword ptr [ecx]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0004645a: fsubr qword ptr [edi]; std; jmp dword ptr [esi - 0x70]; 
0x00071319: fsubr qword ptr [edx]; push ecx; push eax; push ebx; push edx; call esi; 
0x0002f7be: fsubr qword ptr [esp]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013c668: fsubr st(0); and eax, 0x458bfffd; les eax, ptr [ebx - 0x7f72f314]; jle 0x13c6dc; cli; call dword ptr [eax - 0x18]; 
0x000fb24e: fsubr st(1); dec ebx; add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x0016b82f: fsubr st(2); inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00058fed: fsubr st(3); mov byte ptr [ebx - 0x5037b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013f848: fsubr st(3); or al, 0x8d; je 0x13f874; add byte ptr [eax + 0x3904c083], dl; ret 0x4976; 
0x0013a15f: fucomi st(3); ret; 
0x00082546: fucomp st(1); dec dword ptr [ebx + 0x1e10b3]; add byte ptr [edi], cl; inc esp; ret 0x938b; 
0x000af428: fucompp; add dword ptr [eax], eax; add byte ptr [ebx - 0x36477b], cl; call dword ptr [edi + 0x6a]; 
0x00021f1b: fucompp; mov ecx, 0x89fffffb; ret 0xe283; 
0x0002f594: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x00101a38: fyl2x; call dword ptr [eax - 0x18]; 
0x0006390b: fyl2xp1; dec dword ptr [ebx - 0x29ff7e7c]; stc; dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x000ca84d: hlt; add al, byte ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x000838cb: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x5750b80], cl; call dword ptr [eax + 0x68]; 
0x0011a3eb: hlt; add esp, 8; pop ebx; ret; 
0x0012a674: hlt; call dword ptr [eax + 0x55]; 
0x0012d002: hlt; call dword ptr [eax + 0x57]; 
0x00128ecb: hlt; call dword ptr [eax - 0x18]; 
0x0012e407: hlt; call dword ptr [eax - 0x48]; 
0x001239a8: hlt; call dword ptr [eax - 0x73]; 
0x0012ef89: hlt; call dword ptr [ebp - 0x73]; 
0x00157c94: hlt; call dword ptr [ebx - 0x18]; 
0x00124983: hlt; call dword ptr [ecx - 0x73]; 
0x001247ac: hlt; call dword ptr [edx + 0x6a]; 
0x001247a0: hlt; call dword ptr [edx - 0x73]; 
0x0012e383: hlt; call dword ptr [edx - 0x75]; 
0x00124eb7: hlt; call dword ptr [esi - 0x73]; 
0x000fa178: hlt; cmp bh, bh; jmp dword ptr [ebp - 0x77]; 
0x000293f1: hlt; cmp dl, byte ptr [ecx]; add byte ptr [0x1bac0b], al; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x0012ef83: hlt; dec dword ptr [ebp - 0xbf51f4a]; call dword ptr [ebp - 0x73]; 
0x000d1cd2: hlt; dec dword ptr [ecx + 0xce82434]; je 0xd1ccf; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d19e4: hlt; dec dword ptr [ecx - 0x517dbcc]; jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000e95f8: hlt; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x000d19ec: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d1ea0: hlt; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0010edf4: hlt; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000e5cc8: hlt; jmp dword ptr [ebp - 0x5f]; 
0x000e8d2c: hlt; jmp dword ptr [esi - 0x70]; 
0x00163035: hlt; jne 0x163070; pop edi; pop esi; pop ebx; ret; 
0x0005ca3f: hlt; jne 0x5ca3c; call dword ptr [eax + 0x68]; 
0x0005cbdc: hlt; jne 0x5cbd9; call dword ptr [eax + 0x68]; 
0x00153c0e: hlt; leave; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000838d1: hlt; mov bh, dl; call dword ptr [eax + 0x68]; 
0x0002daf0: hlt; mov ch, 0xfe; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00146707: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001460a7: hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001461be: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bae: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0010c47b: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0006e97b: hlt; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x00149f51: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf51: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001533a1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00129cc8: hlt; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000468df: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001b974: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016119a: hlt; pop edi; ret; 
0x00079a03: hlt; ret; 
0x000499ea: hlt; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x000499c5: hlt; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x00049951: hlt; std; dec dword ptr [ebx - 0x365b4b]; dec dword ptr [ebp - 0x58c077a]; call dword ptr [eax - 0x73]; 
0x000a3788: hlt; stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x53]; 
0x0010606a: hlt; sub byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00160217: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0014beed: hlt; ud0; inc dword ptr [ecx + 0x43b0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009e2a3: hlt; xor eax, eax; ret; 
0x000acafb: idiv bh; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0010e991: idiv bh; add esp, 0x1c; ret; 
0x0010d27f: idiv bh; add esp, 0x2c; ret; 
0x00087afb: idiv bh; call dword ptr [ebx + 0x56]; 
0x0003c723: idiv bh; call dword ptr [ebx + 0x6a]; 
0x000bed4a: idiv bh; call dword ptr [edx + 0x51]; 
0x000b1274: idiv bh; call dword ptr [edx + 0x6a]; 
0x0008513b: idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0008517d: idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x000fca1e: idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000fecdd: idiv bh; dec dword ptr [ebp - 0x5686b7d]; call dword ptr [eax - 0x73]; 
0x00033718: idiv bh; dec dword ptr [ebp - 0x6fffd98c]; xor eax, eax; ret; 
0x00027e9d: idiv bh; dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x000b0ddf: idiv bh; dec dword ptr [ebx - 0x364763]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x000a4854: idiv bh; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000bd129: idiv bh; dec dword ptr [ebx - 0x937b]; dec dword ptr [ecx - 0x8743]; dec dword ptr [ebp - 0x5557378]; jmp dword ptr [esi - 0x70]; 
0x0008fa0c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f9b6: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f162: idiv bh; jmp dword ptr [esi + 0xf]; 
0x0010df1a: idiv bh; jmp dword ptr [esi - 0x70]; 
0x000b6be1: idiv bh; ret; 
0x00085170: idiv bh; test byte ptr [ecx + 0xb0], 4; lea eax, [eax - 0x9de90]; cmove edx, eax; mov eax, edx; ret; 
0x0010cee0: idiv bh; test byte ptr [ecx + 0xb0], 4; lea eax, [eax - 0x9dea0]; cmove edx, eax; mov eax, edx; ret; 
0x00085250: idiv bh; test byte ptr [ecx + 0xb0], 4; lea eax, [eax - 0x9e490]; cmove edx, eax; mov eax, edx; ret; 
0x00145695: idiv bl; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0002a763: idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x000c72ae: idiv cl; inc dword ptr [ecx]; bnd jmp edx; 
0x0014d875: idiv dh; inc dword ptr [ecx + 0x42408c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00069a30: idiv dl; inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x00069ec9: idiv dl; jmp dword ptr [esi - 0x70]; 
0x000341d9: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000f8ade: idiv edi; add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000f84ba: idiv edi; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00122dd9: idiv edi; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x0006031d: idiv edi; call dword ptr [eax + 0x53]; 
0x0006028d: idiv edi; call dword ptr [eax + 0x56]; 
0x0005ed0d: idiv edi; call dword ptr [eax + 0x57]; 
0x000397fe: idiv edi; call dword ptr [eax + 0x6a]; 
0x0005f7a7: idiv edi; call dword ptr [eax - 0x18]; 
0x000daf71: idiv edi; call dword ptr [eax - 1]; 
0x0005ee79: idiv edi; call dword ptr [eax]; 
0x0005f779: idiv edi; call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe1e], al; idiv edi; jmp dword ptr [eax]; 
0x0005f8ee: idiv edi; call dword ptr [ebx + 0x6a]; 
0x00064348: idiv edi; call dword ptr [ebx - 0x75]; 
0x0005e338: idiv edi; call dword ptr [ebx - 0x7d]; 
0x0005e338: idiv edi; call dword ptr [ebx - 0x7d]; ret; 
0x0005e0b3: idiv edi; call dword ptr [ebx - 0x7f]; 
0x00065078: idiv edi; call dword ptr [ecx + 0x6a]; 
0x0005f7e6: idiv edi; call dword ptr [ecx - 0x75]; 
0x0005f16a: idiv edi; call dword ptr [ecx - 1]; 
0x00064227: idiv edi; call dword ptr [edi - 1]; 
0x0005e330: idiv edi; call dword ptr [edx + 0x50]; 
0x0005e7b9: idiv edi; call dword ptr [edx - 0x18]; 
0x0005ebda: idiv edi; call dword ptr [edx - 0x77]; 
0x00064616: idiv edi; call dword ptr [edx - 1]; 
0x000648a6: idiv edi; call dword ptr [esi + 0x52]; 
0x0005f4ff: idiv edi; call dword ptr [esi + 0x6a]; 
0x0005ef86: idiv edi; call dword ptr [esi - 0x18]; 
0x00064035: idiv edi; call dword ptr [esi - 1]; 
0x0005f79b: idiv edi; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x00083eae: idiv edi; cmovne edx, eax; mov eax, edx; ret; 
0x00067255: idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000e4564: idiv edi; dec dword ptr [ebp - 0x12f7b]; dec dword ptr [ebp - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x000e5bb6: idiv edi; dec dword ptr [ebp - 0x4e77b]; dec dword ptr [ecx - 0x50373]; call dword ptr [eax - 0x73]; 
0x000ab129: idiv edi; dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x0005e8cb: idiv edi; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x0005ed59: idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x0005eac2: idiv edi; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005e883: idiv edi; dec dword ptr [ebx - 0x16b80]; jmp dword ptr [ebp - 0x75]; 
0x0011a387: idiv edi; dec dword ptr [ebx - 0x7972438b]; pushal; pushfd; cli; call dword ptr [eax - 0x73]; 
0x000676da: idiv edi; dec dword ptr [ebx - 0x7aafdbbc]; ror byte ptr [edi], 0x84; ret; 
0x00064810: idiv edi; dec dword ptr [ebx - 0x89363]; call dword ptr [edx - 0x77]; 
0x0005ef80: idiv edi; dec dword ptr [ebx - 0x8c37b]; call dword ptr [esi - 0x18]; 
0x0005ef11: idiv edi; dec dword ptr [ebx - 0x8db73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x0006512b: idiv edi; dec dword ptr [ebx - 0x8f34b]; inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00063d8e: idiv edi; dec dword ptr [ebx - 0x8fb73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x001021d2: idiv edi; dec dword ptr [ecx + 0x1c0b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005ef78: idiv edi; dec dword ptr [ecx + 0x348d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c37b]; call dword ptr [esi - 0x18]; 
0x0005f7de: idiv edi; dec dword ptr [ecx + 0x3c858bc2]; idiv edi; call dword ptr [ecx - 0x75]; 
0x0005ef17: idiv edi; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x00065167: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006467c: idiv edi; dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00065072: idiv edi; dec dword ptr [ecx - 0x89f73]; call dword ptr [ecx + 0x6a]; 
0x0005e0ed: idiv edi; dec dword ptr [ecx - 0x8b77b]; dec dword ptr [ecx - 0x8c743]; jmp dword ptr [ebp - 0x75]; 
0x0005e0f3: idiv edi; dec dword ptr [ecx - 0x8c743]; jmp dword ptr [ebp - 0x75]; 
0x00063094: idiv edi; dec dword ptr [ecx - 0x8d77b]; jmp dword ptr [ebp - 0x75]; 
0x0005e726: idiv edi; dec dword ptr [edi]; test byte ptr [0x83000013], ch; ret; 
0x00064aad: idiv edi; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000ab121: idiv edi; inc dword ptr [ebx + 0x75e9ffcb]; idiv edi; dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x0005f7b3: idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00065131: idiv edi; inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00060284: idiv edi; inc dword ptr [ebx - 0x7276f714]; xchg esp, eax; idiv edi; call dword ptr [eax + 0x56]; 
0x0006402c: idiv edi; inc dword ptr [ebx - 0x7276fb14]; pushal; idiv edi; call dword ptr [esi - 1]; 
0x0005ee83: idiv edi; inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x000604aa: idiv edi; inc dword ptr [ebx - 0x7f72f314]; je 0x6052a; cli; call dword ptr [eax - 0x18]; 
0x00065759: idiv edi; inc dword ptr [ebx - 0x7f72f314]; je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x0005e811: idiv edi; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x5e816; call dword ptr [eax - 0x18]; 
0x00063811: idiv edi; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x000641f3: idiv edi; inc dword ptr [ecx]; ror dword ptr [ebp + 0x26b4], 0; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x000649ba: idiv edi; inc edi; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0005ee8c: idiv edi; jmp dword ptr [eax]; 
0x000fa985: idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x0005e0f9: idiv edi; jmp dword ptr [ebp - 0x75]; 
0x00076f9c: idiv edi; jmp dword ptr [ebp - 0x77]; 
0x0005f7c2: idiv edi; jmp dword ptr [edx]; 
0x0008f26d: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0003401e: idiv edi; jmp dword ptr [esi - 0x70]; 
0x0009ede6: idiv edi; lea eax, [edx - 0x1316b0]; test byte ptr [ebx + 0x55], 2; pop ebx; cmovne eax, ecx; ret; 
0x000847f6: idiv edi; lea eax, [edx - 0x145bd0]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x00084546: idiv edi; lea eax, [edx - 0x145c90]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x00083f46: idiv edi; lea eax, [edx - 0x145d40]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x00120e0b: idiv edi; lea esi, [esi]; xor eax, eax; ret; 
0x000ffa3b: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ff540: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00101133: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00101428: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ff81b: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff8cb: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff97b: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011db: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000ffaeb: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000fae8b: idiv edi; mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0005f793: idiv edi; push dword ptr [ecx]; rol byte ptr [eax - 0x89b43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x0014d7ae: idiv esi; inc dword ptr [ecx + 0x424cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d715: idiv esi; inc dword ptr [ecx + 0x42568c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f0a52: idiv esp; jmp dword ptr [ebp - 0x77]; 
0x0014b723: imul al; mov esp, 0x81ffff17; ret; 
0x00149723: imul al; mov esp, 0x81ffff37; ret; 
0x00160237: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0008c0d8: imul byte ptr [ecx]; ret 0x280f; 
0x0008dacc: imul byte ptr [ecx]; ret 0xc301; 
0x0013affd: imul ch; dec dword ptr [ebp - 0x72dbdb8c]; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x001601c8: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0008c208: imul dword ptr [ecx]; ret 0x280f; 
0x0008dc2c: imul dword ptr [ecx]; ret 0xc301; 
0x00026c70: imul dword ptr [ecx]; ret 0xec83; 
0x000f6382: imul eax, dword ptr [eax + eax], -0x7f; ret 0xdc7b; 
0x00148bfb: imul eax, dword ptr [eax + eax], 3; sbb al, 0x8b; jmp ebx; 
0x000ecc64: imul eax, dword ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x0011b5f3: imul eax, dword ptr [ebx + eax*4], -0x3c; or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x0001be96: imul eax, dword ptr [ecx - 0x7f74ffe4], -0x6c; sldt word ptr [eax]; ret; 
0x0001ef70: imul eax, dword ptr [edi + ecx], 0x44; ret; 
0x00094d03: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x0007d36f: imul eax, dword ptr [edx], 0; add byte ptr [ebx - 0x72efdb84], cl; xchg eax, ebx; mov edx, edi; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x000c6981: imul eax, dword ptr [esi - 0xb], -1; ret; 
0x00163cad: imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00138de1: imul ebp, eax, -1; jmp dword ptr [esi - 0x70]; 
0x00151c97: imul ebp, eax, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006ac5c: imul ebp, ebx, -6; call dword ptr [ebp + 0x57]; 
0x000f28e1: imul ebp, esi, -1; jmp dword ptr [esi - 0x77]; 
0x000832d7: imul ebx, dword ptr [eax], -0x77; jae 0x832fc; mov dword ptr [ebx], eax; push eax; call ecx; 
0x001680e8: imul ecx, dword ptr [eax], -0x7f; les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x0011f496: imul ecx, dword ptr [ebx + 0xc], 0; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x0007b697: imul ecx, dword ptr [ecx + 0x448b0016], 0x24; add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x00146817: imul ecx, dword ptr [edx + 0x1c030004], -0x75; add edx, ecx; jmp ebx; 
0x00143396: imul ecx, dword ptr [edx + ecx], 0; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00146197: imul ecx, dword ptr [esi + 0x1c030004], -0x75; add edx, ecx; jmp ebx; 
0x00108084: imul ecx, dword ptr [esi + 3], 0x78c68100; mov edi, 0x8953000d; ret; 
0x00049fb6: imul edi, dword ptr [ecx], 0x29f57518; ret 0x5c89; 
0x0006d801: imul edi, dword ptr [edi - 1], -1; add esp, 0x1c; ret; 
0x00146394: imul edi, edi, -1; add ebx, 0x48ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146338: imul edi, edi, -1; add ebx, 0x48d45; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00072375: imul edi, edi, -1; add esp, 0x18; pop ebx; ret; 
0x000d4e9a: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000d7afa: imul edi, edi, -1; push esi; ret 0xf01; 
0x0001b04d: imul edi, edx, -1; ret; 
0x0009f9f1: imul edx, dword ptr [eax - 0x73], 0xfa452982; call dword ptr [eax - 0x18]; 
0x000bfa1e: imul edx, dword ptr [esp + 0x10], 0x34; add edx, dword ptr [eax]; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000c7150: imul esi, dword ptr [ecx], 0xf5fa81c0; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x0010e021: imul esi, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00053a27: imul esi, edx, -1; dec dword ptr [ebx - 0x5a77b]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x000fdb88: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014e95e: in al, 0x14; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000430fe: in al, 0x18; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007a7c6: in al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0008475f: in al, 0x1e; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0008458b: in al, 0x1e; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000845f2: in al, 0x1e; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011083e: in al, 0x29; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010197b: in al, 0x31; call dword ptr [eax - 0x18]; 
0x000ce472: in al, 0x31; call dword ptr [edx - 0x77]; 
0x0010d897: in al, 0x31; dec dword ptr [ebx - 0x10777]; jmp dword ptr [ebp - 0x7d]; 
0x00079d01: in al, 0x31; or al, 0; add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x0013514f: in al, 0x31; ror byte ptr [ebp - 0x72af47bb], 0x83; xor byte ptr [0x8d500000], dh; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x0012a22d: in al, 0x31; shr al, 0xeb; ret; 
0x00123854: in al, 0x50; push esi; call 0x125720; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011ede0: in al, 0x5e; cli; call dword ptr [esi - 0x18]; 
0x0006a54d: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00096011: in al, 0x6e; or al, byte ptr [eax]; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0006bc5a: in al, 0x83; in al, dx; add al, 0x53; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0006b638: in al, 0x83; in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0016bd3f: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000857f1: in al, 0x83; ret 0x8301; 
0x0007d43f: in al, 0x89; cli; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0006a23a: in al, 0x89; ret; 
0x00083065: in al, 0x8a; cli; call dword ptr [eax - 0x18]; 
0x000c1f32: in al, 0x90; cli; call dword ptr [eax - 0x18]; 
0x0012b0ee: in al, 0xa2; cli; call dword ptr [eax - 0x73]; 
0x0010f001: in al, 0xde; add al, byte ptr [eax]; add eax, 0xd4ffb; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x0006cccd: in al, 0xe8; insd dword ptr es:[edi], dx; ret; 
0x00069ff3: in al, 0xe9; adc esi, esi; cli; jmp dword ptr [esi - 0x70]; 
0x0006bd2e: in al, 0xe9; add esp, ebx; cli; jmp dword ptr [esi - 0x70]; 
0x00072072: in al, 0xe9; bound edi, qword ptr [edi - 6]; jmp dword ptr [esi - 0x70]; 
0x0006ac5a: in al, 0xe9; imul ebp, ebx, -6; call dword ptr [ebp + 0x57]; 
0x00069ec6: in al, 0xe9; in al, 0xf6; cli; jmp dword ptr [esi - 0x70]; 
0x000695bb: in al, 0xe9; jecxz 0x695bd; cli; jmp dword ptr [esi - 0x70]; 
0x0006c8d3: in al, 0xe9; jne 0x6c8a9; cli; jmp dword ptr [esi - 0x70]; 
0x000725b3: in al, 0xe9; jnp 0x725b2; jmp dword ptr [esi - 0x70]; 
0x0006a8b3: in al, 0xe9; mov bh, 0xee; cli; jmp dword ptr [esi - 0x70]; 
0x00074af3: in al, 0xe9; or dword ptr [eax - 6], ebx; jmp dword ptr [esi - 0x70]; 
0x000721da: in al, 0xe9; push esp; jle 0x721d9; call dword ptr [ebx - 0x7d]; 
0x0006d2b3: in al, 0xe9; sti; leave; cli; jmp dword ptr [esi - 0x70]; 
0x000ecbbb: in al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x00069ec8: in al, 0xf6; cli; jmp dword ptr [esi - 0x70]; 
0x00161b69: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x00161c94: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0014ea6c: in al, 0xfe; inc dword ptr [ecx + 0x41491c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014eac6: in al, 0xfe; inc dword ptr [ecx + 0x414f7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0014ea7c: in al, 0xfe; inc dword ptr [ecx + 0x41581c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000bed77: in al, 0xff; call dword ptr [edx + 0x50]; 
0x0005a9c3: in al, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000aa0f4: in al, 0xff; dec dword ptr [ebx - 0x72e3dbac]; xor byte ptr [eax + 0x73], 0xfa; call dword ptr [eax - 0x73]; 
0x000602ab: in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x00069dfa: in al, 0xff; jne 0x69e06; push esi; call dword ptr [ebx + 0x1c]; 
0x00025795: in al, 0xff; push edx; push dword ptr [eax + 0xfc0]; call 0xfc9f0; add esp, 0x1c; ret; 
0x000e07d7: in al, 2; add byte ptr [ebp - 0x56ed77d], cl; call dword ptr [eax + 0x68]; 
0x00151f6b: in al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c6911: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0xc68c0; add esp, 0x1c; ret; 
0x0007967d: in al, dx; adc al, 0x6a; add eax, ebp; lcall 0x18c4, 0x83fffff8; pop ebx; ret; 
0x0008b41d: in al, dx; adc al, 0x8b; xor dword ptr [eax - 2], 0xffffffff; jmp dword ptr [ebp - 1]; 
0x00078cfd: in al, dx; adc al, 0x8d; adc dword ptr [eax + 4], -0x17; jmp dword ptr [ebp + 0x33]; 
0x00138b4b: in al, dx; adc al, 0xff; je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; 
0x00138b4b: in al, dx; adc al, 0xff; je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; ret; 
0x0001b01b: in al, dx; adc byte ptr [eax - 0x55], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x59b3f80], cl; call dword ptr [eax + 0x6a]; 
0x0002ca0b: in al, dx; adc byte ptr [ebp - 0x39f80], cl; call dword ptr [eax - 0x75]; 
0x0016b84d: in al, dx; adc byte ptr [ebp - 0x787ff7d], cl; call dword ptr [eax - 1]; 
0x00083ecb: in al, dx; adc byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x000ece64: in al, dx; adc byte ptr [ebx - 0x9d7dbac], cl; ret 0x7540; 
0x000ecc24: in al, dx; adc byte ptr [ebx - 0x9dbdbac], cl; ret 0x7540; 
0x00077241: in al, dx; add al, 0x29; ret 0x5052; 
0x00070ae7: in al, dx; add al, 0x29; ret 0xfac1; 
0x0005169c: in al, dx; add al, 0x29; ret; 
0x000700fd: in al, dx; add al, 0x50; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x00075bde: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x000fbfe1: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0013e44b: in al, dx; add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007616c: in al, dx; add al, 0x51; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0004b320: in al, dx; add al, 0x51; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x00080541: in al, dx; add al, 0x51; push edx; push ebx; call eax; 
0x0006bc5c: in al, dx; add al, 0x53; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0005de41: in al, dx; add al, 0x53; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00069ad2: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00065888: in al, dx; add al, 0x53; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x0005ed86: in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639df: in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x00060d26: in al, dx; add al, 0x53; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0005ea35: in al, dx; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000626ee: in al, dx; add al, 0x53; push edx; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00065fb0: in al, dx; add al, 0x53; push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x0003262d: in al, dx; add al, 0x55; push dword ptr [esp + 0x34]; push esi; call edi; 
0x0007607a: in al, dx; add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00061904: in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000613b1: in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push esi; call dword ptr [ebx + 0x1c]; 
0x00032315: in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x0006d18b: in al, dx; add al, 0x55; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000322f9: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x000322c5: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x34]; call edi; 
0x00074bbd: in al, dx; add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0006ce6c: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00066c7c: in al, dx; add al, 0x56; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00082985: in al, dx; add al, 0x56; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call eax; 
0x00082c7a: in al, dx; add al, 0x56; push dword ptr [esp + 0x6c]; push ebp; call eax; 
0x00074d3f: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0005f392: in al, dx; add al, 0x56; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x00066f13: in al, dx; add al, 0x56; push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x000fbfaa: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x000fbfbe: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x000fbfd1: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0006b63a: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0006a470: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006060f: in al, dx; add al, 0x57; push dword ptr [esp + 0x18]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006ad6c: in al, dx; add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x0006d119: in al, dx; add al, 0x6a; adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x0007946e: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x2c]; 
0x00114fe1: in al, dx; add al, 0x6a; add dword ptr [ebx - 0x72efdbbc], ecx; add byte ptr [ecx], 0x31; cli; call dword ptr [eax + 0x56]; 
0x000debeb: in al, dx; add al, 0x6a; add eax, 0x2003848d; add bh, dl; call dword ptr [eax - 0x73]; 
0x000e5f1b: in al, dx; add al, 0x6a; add eax, 0x28818d50; jo 0xe5f1f; call dword ptr [eax - 0x18]; 
0x000504c8: in al, dx; add al, 0x6a; add eax, 0x28838d50; jo 0x504cc; call dword ptr [eax - 0x18]; 
0x0008433b: in al, dx; add al, 0x6a; add eax, 0x28838d50; jo 0x8433f; call dword ptr [eax - 0x18]; 
0x00084670: in al, dx; add al, 0x6a; add eax, 0x28838d50; jo 0x84674; call dword ptr [eax - 0x18]; 
0x000513d9: in al, dx; add al, 0x6a; add eax, 0x28858d50; jo 0x513dd; call dword ptr [eax - 0x18]; 
0x0010a864: in al, dx; add al, 0x6a; add eax, 0x579f918d; cli; call dword ptr [edx + 0x50]; 
0x0010a7a5: in al, dx; add al, 0x6a; add eax, 0x57d5808d; cli; call dword ptr [eax - 0x75]; 
0x0010c1be: in al, dx; add al, 0x6a; add eax, 0x6ac0878d; cli; call dword ptr [eax - 0x75]; 
0x0011cbc7: in al, dx; add al, 0x6a; add eax, 0x8d8134ff; sub byte ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x000e117f: in al, dx; add al, 0x6a; add eax, 0x924c868d; cli; call dword ptr [eax - 0x73]; 
0x0010aea0: in al, dx; add al, 0x6a; add eax, 0x9978808d; cli; call dword ptr [eax + 0x6a]; 
0x0013153e: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0013153e: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x00132fb2: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00121221: in al, dx; add al, 0x6a; or byte ptr [ebx - 0x72f3dba4], cl; or dword ptr [esi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x000c83fa: in al, dx; add al, 0x83; ret 0x5601; 
0x0003a386: in al, dx; add al, 0x83; ret; 
0x000414b4: in al, dx; add al, 0x83; rol byte ptr [ecx], 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x73]; 
0x0005f1f7: in al, dx; add al, 0x89; fadd dword ptr [ebx - 0x1f3efe20]; add al, 0x89; ret 0xb60f; 
0x00064df9: in al, dx; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000e591e: in al, dx; add al, 0x89; ret; 
0x00064fb1: in al, dx; add al, 0x89; xchg ebp, eax; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x0005fd06: in al, dx; add al, 0x89; xchg ebp, eax; xor bh, 0xff; call dword ptr [esi + 0x6a]; 
0x00107ef7: in al, dx; add al, 0x8b; inc eax; sbb al, 0x89; ret 0x532b; 
0x000646c1: in al, dx; add al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x001431e8: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0002a8f9: in al, dx; add al, 0x8d; adc dword ptr [eax + 0x5c], -0x1c; call dword ptr [eax - 0x77]; 
0x0012c3a4: in al, dx; add al, 0x8d; cmp dword ptr [ecx], 0x6afffa62; add eax, 0x28818d50; jo 0x12c3ae; call dword ptr [eax - 0x18]; 
0x000e3cfe: in al, dx; add al, 0x8d; inc ebx; sbb al, 0x83; mov byte ptr [ecx], 0x83; ret; 
0x00050a79: in al, dx; add al, 0x8d; lahf; int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x0013213f: in al, dx; add al, 0x8d; test dword ptr [eax + 0x6afffa61], esi; add eax, 0x28858d50; jo 0x132149; call dword ptr [eax - 0x18]; 
0x000c6ce9: in al, dx; add al, 0x8d; test dword ptr [ebx + ebp*8 - 1], eax; call dword ptr [eax - 1]; 
0x00136984: in al, dx; add al, 0x8d; test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax - 1]; 
0x00027d6d: in al, dx; add al, 0x8d; test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax - 1]; 
0x000c82f5: in al, dx; add al, 0x8d; test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax + 0x56]; 
0x0011564c: in al, dx; add al, 0x8d; test eax, esp; dec ecx; cli; call dword ptr [eax - 0x77]; 
0x000514a1: in al, dx; add al, 0x8d; test ebp, ebp; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x000517a9: in al, dx; add al, 0x8d; test ebp, ebx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x000515ab: in al, dx; add al, 0x8d; test edi, ecx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x00082e46: in al, dx; add al, 0x8d; xchg dword ptr [ebx + 0x44], edx; cli; call dword ptr [ebp + 0x50]; 
0x000fa5a1: in al, dx; add al, 0x8d; xchg eax, esp; xchg esi, eax; cli; call dword ptr [esi - 0x7f]; 
0x00067c03: in al, dx; add al, 0xc1; std; add dl, byte ptr [ebp + 0x52]; push esi; call dword ptr [ebx + 0x1c]; 
0x0002fafd: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00132ebe: in al, dx; add al, 0xe8; sti; ret; 
0x00108279: in al, dx; add al, 0xff; je 0x1082a2; and byte ptr [edx], ch; push 0x2000004; call eax; 
0x000327a1: in al, dx; add al, 0xff; je 0x327ca; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000328e3: in al, dx; add al, 0xff; je 0x3290c; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00032954: in al, dx; add al, 0xff; je 0x3297d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00069b2c: in al, dx; add al, 0xff; je 0x69b55; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007503c: in al, dx; add al, 0xff; je 0x75065; or al, 0x57; push ebx; call dword ptr [ecx + 0x3c]; 
0x00081ffd: in al, dx; add al, 0xff; je 0x82026; cmp al, 0x51; push ebx; call eax; 
0x000823a3: in al, dx; add al, 0xff; je 0x823cc; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00069df6: in al, dx; add al, 0xff; jne 0x69ddf; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006be24: in al, dx; add al, 0xff; jne 0x6be3d; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0006cd8d: in al, dx; add al, 0xff; jne 0x6cd72; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00064222: in al, dx; add al, 0xff; mov ch, 0x18; idiv edi; call dword ptr [edi - 1]; 
0x0013a303: in al, dx; add al, 0xff; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000fcfd7: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x5a4127d], cl; call dword ptr [eax + 0x6a]; 
0x000fd1a7: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x5a9607d], cl; call dword ptr [eax + 0x6a]; 
0x00126fca: in al, dx; add al, 1; int 0x29; retf 0x5552; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x001269b6: in al, dx; add al, 1; ret 0xc129; 
0x000b6b88: in al, dx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x70], -6; call dword ptr [eax - 0x18]; 
0x00070f7e: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x000b56a6: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e45ff: in al, dx; add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x0002ca45: in al, dx; add dword ptr [eax], eax; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x000a6438: in al, dx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74c7dbac], cl; inc edx; add al, 0x83; ret 0x8304; 
0x0010b147: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x000ec3c3: in al, dx; bnd jmp dword ptr [esi - 0x70]; 
0x0010dfd3: in al, dx; call 0x10d590; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x000b3f7d: in al, dx; call dword ptr [eax - 0x73]; 
0x000b3ee2: in al, dx; call dword ptr [eax - 1]; 
0x000b6c93: in al, dx; call dword ptr [ecx + 0x52]; 
0x000b6c93: in al, dx; call dword ptr [ecx + 0x52]; push eax; call 0xb3670; add esp, 0x1c; ret; 
0x001098f7: in al, dx; cdq; cli; call dword ptr [eax - 0x73]; 
0x000581ea: in al, dx; cmp dword ptr [eax], eax; add byte ptr [ebx - 0x4f373], cl; dec dword ptr [ebx - 0x16b4f]; dec dword ptr [ecx - 0x53f4b]; jmp dword ptr [ebp - 0x75]; 
0x000ea1a1: in al, dx; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000e7e2d: in al, dx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x00049950: in al, dx; hlt; std; dec dword ptr [ebx - 0x365b4b]; dec dword ptr [ebp - 0x58c077a]; call dword ptr [eax - 0x73]; 
0x0002ca44: in al, dx; in al, dx; add dword ptr [eax], eax; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x000232a9: in al, dx; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x00041710: in al, dx; jae 0x4170d; call dword ptr [eax + 0x68]; 
0x00041735: in al, dx; jae 0x41732; call dword ptr [eax + 0x68]; 
0x0012065d: in al, dx; lahf; cli; call dword ptr [eax - 0x18]; 
0x0006b09c: in al, dx; lea ebx, [edx + 0x1928]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007484c: in al, dx; lea ebx, [edx + 0x193c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079e1c: in al, dx; lea ebx, [edx + 0x195c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00146542: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f12: in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0014a4b3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c453: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00153883: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000ac87b: in al, dx; mov edi, edx; call dword ptr [eax - 0x18]; 
0x0015387e: in al, dx; movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00135864: in al, dx; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00114bed: in al, dx; or al, 0x31; call dword ptr [ebx - 0x18]; 
0x00069a21: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x0010eb13: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001171a5: in al, dx; or al, 0x50; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x000835d5: in al, dx; or al, 0x50; call edx; 
0x0001af9d: in al, dx; or al, 0x51; call edx; 
0x001174b1: in al, dx; or al, 0x53; call 0x139490; mov dword ptr [esp], ebp; call ebx; 
0x00024d0f: in al, dx; or al, 0x53; call 0x139490; mov dword ptr [esp], esi; call ebx; 
0x00124d5c: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00076972: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x0006e116: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x00074989: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x000767e0: in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x0012cfd5: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0012626b: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x0012cfec: in al, dx; or al, 0x55; call eax; 
0x0012beff: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0016b62d: in al, dx; or al, 0x56; call 0x139490; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0011730d: in al, dx; or al, 0x56; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0001bf01: in al, dx; or al, 0x56; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x0012423f: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00078930: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0013f25c: in al, dx; or al, 0x56; call dword ptr [ebp + 0x44]; 
0x0006950a: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0006bef6: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x00078587: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x0013f3a5: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x000273dc: in al, dx; or al, 0x56; call eax; 
0x0012bbd1: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001251e9: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x000c1af6: in al, dx; or al, 0x57; call 0x139490; add esp, 0x10; mov eax, edi; call eax; 
0x00125197: in al, dx; or al, 0x57; call 0xedc70; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0007c7af: in al, dx; or al, 0x57; call dword ptr [ebp]; 
0x001254d8: in al, dx; or al, 0x57; call eax; 
0x0010c5e0: in al, dx; or al, 0x68; add al, byte ptr [eax]; add byte ptr [eax + 0x2c16838d], al; cli; call dword ptr [eax - 0x18]; 
0x0008324d: in al, dx; or al, 0x6a; add eax, 0x447e838d; cli; call dword ptr [eax - 0x73]; 
0x0012ab01: in al, dx; or al, 0x83; ret 0x5208; 
0x0001c9a5: in al, dx; or al, 0x83; ret; 
0x0007da7b: in al, dx; or al, 0x89; inc esp; and al, 0x2c; push esi; call dword ptr [eax]; 
0x00041487: in al, dx; or al, 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x00053821: in al, dx; or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x000d6f81: in al, dx; or al, 0x89; ret 0xe989; 
0x000563c3: in al, dx; or al, 0x89; ret; 
0x00027f0b: in al, dx; or al, 0x89; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [ebx - 0x75]; 
0x0005feb3: in al, dx; or al, 0x89; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x0011fe84: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x000c5d21: in al, dx; or al, 0x8b; add byte ptr [edx + ebx - 0x3eae0000], 0xc8; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00124389: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0012e235: in al, dx; or al, 0x8b; dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x0012d5a9: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x00130736: in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001247bc: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0012efba: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00124a74: in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000c12fb: in al, dx; or al, 0x8b; jge 0xc12d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c14fb: in al, dx; or al, 0x8b; jge 0xc14d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000637b4: in al, dx; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x00065135: in al, dx; or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00124536: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0007d7a7: in al, dx; or al, 0x8b; test dword ptr [eax + 0x56fffffe], edx; call dword ptr [eax]; 
0x000c86c0: in al, dx; or al, 0x8b; test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [edi - 1]; 
0x0007fdb0: in al, dx; or al, 0x8b; xchg dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000f757a: in al, dx; or al, 0x8d; adc al, 0x96; cli; call dword ptr [eax - 0x73]; 
0x0005e815: in al, dx; or al, 0x8d; adc byte ptr [eax + 0x76], 0xfa; call dword ptr [eax - 0x18]; 
0x000e6271: in al, dx; or al, 0x8d; add dword ptr [ecx], 0x31; cli; call dword ptr [eax - 0x18]; 
0x0011b436: in al, dx; or al, 0x8d; and dword ptr [eax - 4], 0xffffffff; call dword ptr [eax + 0x6a]; 
0x00083061: in al, dx; or al, 0x8d; and esp, 0xffffff8a; cli; call dword ptr [eax - 0x18]; 
0x0013c672: in al, dx; or al, 0x8d; cmp byte ptr [esi + 0x64], 0xfa; call dword ptr [eax - 0x18]; 
0x00134cf1: in al, dx; or al, 0x8d; cmp dword ptr [ecx + 0x5e], -6; call dword ptr [eax - 0x18]; 
0x000b5735: in al, dx; or al, 0x8d; cmp dword ptr [edx + 0x46], -6; call dword ptr [eax - 0x18]; 
0x0011edb0: in al, dx; or al, 0x8d; mov bl, 0xd7; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011eddc: in al, dx; or al, 0x8d; mov bl, 0xe4; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011ee08: in al, dx; or al, 0x8d; mov bl, 0xf3; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011fbeb: in al, dx; or al, 0x8d; nop; add al, 0xa1; cli; call dword ptr [edx - 0x73]; 
0x0005dcbb: in al, dx; or al, 0x8d; nop; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x001246b4: in al, dx; or al, 0x8d; or edi, 0x60; cli; call dword ptr [eax - 0x18]; 
0x0004b56d: in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8373]; call dword ptr [ebx - 0x75]; 
0x000b7291: in al, dx; or al, 0x8d; pop edx; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x000f27a1: in al, dx; or al, 0x8d; push 0x34e85501; mov ebp, 0xc483fffa; or al, 0x89; ret 0x408d; 
0x0012c827: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x0002835a: in al, dx; or al, 0x8d; sbb dword ptr [edi], 0x2f; cli; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0002e70e: in al, dx; or al, 0x8d; sub dword ptr [esi], 0x2f; cli; call dword ptr [eax - 0x18]; 
0x0011ee2c: in al, dx; or al, 0x8d; wait; or ebx, dword ptr [edi - 6]; call dword ptr [ebx - 0x18]; 
0x000ecf67: in al, dx; or al, 0x8d; xchg ah, cl; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x0012dfb2: in al, dx; or al, 0x8d; xchg bh, cl; pushal; cli; call dword ptr [eax - 0x18]; 
0x00115d7d: in al, dx; or al, 0x8d; xchg byte ptr [0x83fffa5c], dh; iretd; call dword ptr [eax - 0x18]; 
0x00115c97: in al, dx; or al, 0x8d; xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x00115db0: in al, dx; or al, 0x8d; xchg byte ptr [ecx + 0x5c], dl; cli; call dword ptr [eax - 0x18]; 
0x000ed087: in al, dx; or al, 0x8d; xchg byte ptr [esi + edx*4], al; cli; call dword ptr [eax - 0x18]; 
0x0013457c: in al, dx; or al, 0x8d; xchg dword ptr [ecx + 0x5e], edi; cli; call dword ptr [eax - 0x18]; 
0x00026749: in al, dx; or al, 0x8d; xchg dword ptr [edi], esp; das; cli; call dword ptr [eax - 0x18]; 
0x000c63a4: in al, dx; or al, 0x8d; xchg dword ptr [edx], esp; das; cli; call dword ptr [eax - 0x18]; 
0x000675d2: in al, dx; or al, 0x8d; xchg dword ptr [esi + esi*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x000267ab: in al, dx; or al, 0x8d; xchg dword ptr [esi], ebp; das; cli; call dword ptr [eax - 0x18]; 
0x0007ae0e: in al, dx; or al, 0x8d; xchg dword ptr [esp + edi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x000509e7: in al, dx; or al, 0x8d; xchg esi, esi; xor edi, edx; call dword ptr [eax - 0x18]; 
0x000ccda1: in al, dx; or al, 0x8d; xor bh, 0x48; cli; call dword ptr [eax - 0x18]; 
0x00121f89: in al, dx; or al, 0x8d; xor byte ptr [eax], 0xa1; cli; call dword ptr [eax - 0x18]; 
0x000c9647: in al, dx; or al, 0x8d; xor dl, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0011f4b1: in al, dx; or al, 0xe8; push 0x83fffa71; les ecx, ptr [edi + ecx]; mov bh, 0xc0; ret; 
0x001188a2: in al, dx; or al, 0xff; je 0x1188cb; and al, ch; ret; 
0x0002dff2: in al, dx; or al, 0xff; je 0x2e01b; cmp al, 0xe8; ret; 
0x00033c83: in al, dx; or al, 0xff; je 0x33cac; sub al, ch; ret 0xfffe; 
0x000de95a: in al, dx; or al, 0xff; je 0xde983; sub al, ch; dec ebx; ret; 
0x000f33d3: in al, dx; or al, 0xff; je 0xf33fc; sbb al, 0xe8; ret 0xfcce; 
0x00144ee0: in al, dx; or al, 1; call dword ptr [ebp - 0x18]; 
0x00135cf6: in al, dx; or al, 1; ret; 
0x00130030: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb3d8f7d], cl; call dword ptr [eax - 0x73]; 
0x0012a8f0: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb945f7d], cl; call dword ptr [eax - 0x73]; 
0x00124003: in al, dx; or bh, bh; je 0x12402c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00129f83: in al, dx; or bh, bh; je 0x129fac; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012cad8: in al, dx; or bh, bh; je 0x12cb01; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012fbcf: in al, dx; or bh, bh; je 0x12fbf8; sbb al, 0x53; call eax; 
0x0002b231: in al, dx; or bh, bh; je 0x2b25a; sbb byte ptr [ebp - 0x18], dl; ret; 
0x00080279: in al, dx; or bh, bh; je 0x802a2; and al, 0x56; call eax; 
0x000807e9: in al, dx; or bh, bh; je 0x80812; and al, 0x53; call eax; 
0x00082133: in al, dx; or bh, bh; je 0x8215c; sbb al, 0x52; call eax; 
0x00082292: in al, dx; or bh, bh; je 0x822bb; sbb al, 0x53; call eax; 
0x000a0a41: in al, dx; or bh, bh; je 0xa0a6a; and byte ptr [ebx - 0x18], dl; ret; 
0x0006480b: in al, dx; or bh, bh; mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89363]; call dword ptr [edx - 0x77]; 
0x0005ebd5: in al, dx; or bh, bh; mov ch, 0x94; idiv edi; call dword ptr [edx - 0x77]; 
0x000fced1: in al, dx; or byte ptr [eax - 0x73], dl; or dword ptr [eax - 0x54], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000835a9: in al, dx; or byte ptr [eax - 1], dl; jae 0x835d3; call edx; 
0x000fd678: in al, dx; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ebp - 0x5b32780], cl; call dword ptr [eax - 0x18]; 
0x00068de6: in al, dx; or byte ptr [ebp + 0x50142444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00075535: in al, dx; or byte ptr [ebp + 0x50242444], cl; push ebx; call dword ptr [edi + 0x48]; 
0x000751cc: in al, dx; or byte ptr [ebp + 0x50342444], cl; push ebx; call dword ptr [esi + 0x48]; 
0x0006fcc8: in al, dx; or byte ptr [ebp + 0x503c2444], cl; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0013e794: in al, dx; or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [edx + 0x48]; 
0x000c7ed9: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x0012e656: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x00075878: in al, dx; or byte ptr [ebp + 0x52342454], cl; push esi; call dword ptr [eax + 0x48]; 
0x000786fd: in al, dx; or byte ptr [ebp + 0x52500179], cl; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000bef31: in al, dx; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x000e386f: in al, dx; or byte ptr [ebp - 0x12f63], cl; call dword ptr [ebx + 0x56]; 
0x000e3bd0: in al, dx; or byte ptr [ebp - 0x12f7b], cl; dec dword ptr [ecx - 0x14f73]; call dword ptr [eax + 0x56]; 
0x000c86e5: in al, dx; or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax - 0x75]; 
0x000aee0f: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x36034b]; dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x77]; 
0x000aff32: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36376b]; dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000490d6: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000af274: in al, dx; or byte ptr [ebp - 0x39f48], cl; call dword ptr [edi + 0x53]; 
0x001388fe: in al, dx; or byte ptr [ebp - 0x559f34d], cl; call dword ptr [esi - 1]; 
0x0002d179: in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x000296c7: in al, dx; or byte ptr [ebp - 0x58f4f7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00025d7e: in al, dx; or byte ptr [ebp - 0x58fbf79], cl; call dword ptr [eax + 0x56]; 
0x0013cb5c: in al, dx; or byte ptr [ebp - 0x59b656d], cl; call dword ptr [edx + 0x50]; 
0x0012821e: in al, dx; or byte ptr [ebp - 0x59f5e7d], cl; call dword ptr [eax - 1]; 
0x00116dab: in al, dx; or byte ptr [ebp - 0x5a33b6d], cl; call dword ptr [edx + 0x50]; 
0x00116909: in al, dx; or byte ptr [ebp - 0x5a36b6d], cl; call dword ptr [edx + 0x50]; 
0x0010c601: in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x001164c1: in al, dx; or byte ptr [ebp - 0x5a8466d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [esi + 0x52]; 
0x000f8360: in al, dx; or byte ptr [ebp - 0x5b28b6a], cl; call dword ptr [edx - 0x77]; 
0x000f837f: in al, dx; or byte ptr [ebp - 0x5b3f36a], cl; call dword ptr [edx - 0x77]; 
0x000f8341: in al, dx; or byte ptr [ebp - 0x5b3f66a], cl; call dword ptr [edx - 0x77]; 
0x000c6c09: in al, dx; or byte ptr [ebp - 0x5b58950], cl; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000f8429: in al, dx; or byte ptr [ebp - 0x5b5897d], cl; call dword ptr [eax - 0x73]; 
0x000b5652: in al, dx; or byte ptr [ebp - 0x5b9587d], cl; call dword ptr [eax + 0x57]; 
0x00083093: in al, dx; or byte ptr [ebp - 0x5bb957d], cl; call dword ptr [eax + 0x56]; 
0x00081cf7: in al, dx; or byte ptr [ebp - 0x5bc017a], cl; call dword ptr [ebx + 0x50]; 
0x00122dcc: in al, dx; or byte ptr [ebp - 0x5bc377f], cl; call dword ptr [eax + 0x52]; 
0x00076c1b: in al, dx; or byte ptr [ebp - 0x5beeb7b], cl; call dword ptr [eax - 0x75]; 
0x000505c4: in al, dx; or byte ptr [ebp - 0x5cc127a], cl; call dword ptr [eax + 0x53]; 
0x0002e553: in al, dx; or byte ptr [ebp - 0x5ce047b], cl; call dword ptr [eax + 0x53]; 
0x000f9fe2: in al, dx; or byte ptr [ebp - 0x5ce497a], cl; call dword ptr [eax - 1]; 
0x000fce82: in al, dx; or byte ptr [ebp - 0x5ce497d], cl; call dword ptr [eax + 0x6a]; 
0x0011e048: in al, dx; or byte ptr [ebp - 0x5ce4b7b], cl; call dword ptr [eax + 0x56]; 
0x00025632: in al, dx; or byte ptr [ebp - 0x5d10f7d], cl; call dword ptr [eax - 1]; 
0x00025614: in al, dx; or byte ptr [ebp - 0x5d1156d], cl; call dword ptr [edx + 0x50]; 
0x00113fe9: in al, dx; or byte ptr [ebp - 0x5d33a7b], cl; call dword ptr [eax + 0x53]; 
0x0011dbf3: in al, dx; or byte ptr [ebp - 0x5d33a7b], cl; call dword ptr [eax - 0x73]; 
0x000b56d6: in al, dx; or byte ptr [ebp - 0x5d33a7d], cl; call dword ptr [eax + 0x57]; 
0x000f98d9: in al, dx; or byte ptr [ebp - 0x5d33a7d], cl; call dword ptr [eax - 0x73]; 
0x000b6efd: in al, dx; or byte ptr [ebp - 0x5d33a7f], cl; call dword ptr [eax + 0x53]; 
0x0010c733: in al, dx; or byte ptr [ebp - 0x72ad2fab], cl; xchg ebx, eax; push eax; test edx, esi; call dword ptr [edx - 1]; 
0x00124137: in al, dx; or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0016b73f: in al, dx; or byte ptr [ebp - 0x78a1f6d], cl; call dword ptr [edx + 0x50]; 
0x000fa331: in al, dx; or byte ptr [ebp - 0x877b], cl; call dword ptr [eax - 0x73]; 
0x0010bd44: in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0012c191: in al, dx; or byte ptr [ebp - 0x8b63], cl; dec dword ptr [ecx - 0xab6b]; call dword ptr [eax + 0x53]; 
0x0012c2f8: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x000b7159: in al, dx; or byte ptr [ebp - 0xa763], cl; call dword ptr [ebx + 0x6a]; 
0x001239a2: in al, dx; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x0012cff5: in al, dx; or byte ptr [ebp - 0xb72cf7d], cl; call dword ptr [eax - 0x73]; 
0x0012a667: in al, dx; or byte ptr [ebp - 0xb9d0f7d], cl; call dword ptr [eax - 0x73]; 
0x00129f6b: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x00125a42: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016c01d: in al, dx; or byte ptr [ebx + 0x22e083], cl; add byte ptr [ebp - 0x17fa8b40], al; ret 0xf65c; 
0x00139789: in al, dx; or byte ptr [ebx + 0x375080], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 4]; 
0x001396e1: in al, dx; or byte ptr [ebx + 0x375080], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x0012b591: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00123fed: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00124157: in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0012b4f1: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x00131e1d: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0006e8a7: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x00126699: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x00126649: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0012faa1: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00123fd1: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0012efa9: in al, dx; or byte ptr [ebx + 0x778b04c1], al; add al, 0x51; push edi; call dword ptr [esi + 8]; 
0x0012b46e: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x00125ae9: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00110789: in al, dx; or byte ptr [ebx - 0x10f7d], cl; jmp dword ptr [ebp + 3]; 
0x0011f3fc: in al, dx; or byte ptr [ebx - 0x1768], cl; jmp dword ptr [ebp - 0x75]; 
0x0012f23d: in al, dx; or byte ptr [ebx - 0x1837d], cl; jmp dword ptr [ebp - 0x75]; 
0x00125abe: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00125b33: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0005a446: in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x0005a672: in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [esi + 0x50]; 
0x0005a265: in al, dx; or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4ef6b]; call dword ptr [ecx + 0x50]; 
0x000593f0: in al, dx; or byte ptr [ebx - 0x4f77b], cl; call dword ptr [edi - 1]; 
0x000591dc: in al, dx; or byte ptr [ebx - 0x50b7b], cl; call dword ptr [edi - 1]; 
0x0005c261: in al, dx; or byte ptr [ebx - 0x52f6b], cl; call dword ptr [ebx - 0x75]; 
0x00055e71: in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x00053aca: in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x00053d94: in al, dx; or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x59f6b]; call dword ptr [ecx + 0x50]; 
0x0012ca9f: in al, dx; or byte ptr [ebx - 0x6b72afbd], cl; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x000c19ad: in al, dx; or byte ptr [ebx - 0x72cfdb94], cl; test dword ptr [esi], ecx; inc edi; cli; call dword ptr [eax + 0x53]; 
0x000a0b18: in al, dx; or byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000a1b60: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000a1598: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000a0f60: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x00117212: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; add ah, 0x5c; cli; call dword ptr [eax - 1]; 
0x00114d55: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; or al, 0x5b; cli; call dword ptr [eax + 0x6a]; 
0x0012fce1: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000f6617: in al, dx; or byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x000e13cb: in al, dx; or byte ptr [ebx - 0x75723383], cl; mov dh, 0x31; cli; call dword ptr [ecx + 0x50]; 
0x0002a0ce: in al, dx; or byte ptr [ebx - 0x7d72f739], al; mov ah, 0x31; cli; call dword ptr [eax + 0x57]; 
0x0010aad5: in al, dx; or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0010ac5d: in al, dx; or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x0007a382: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x7a3af; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0010b595: in al, dx; or byte ptr [ebx - 1], dl; jae 0x10b5cb; call eax; 
0x00037d60: in al, dx; or byte ptr [ecx + 0x244489d1], cl; and byte ptr [ebx - 0x76a9fe20], al; ret 0x74ff; 
0x000627c5: in al, dx; or byte ptr [ecx + 0x245489fb], cl; or al, 0x6a; call dword ptr [esi - 0x18]; 
0x000b35b2: in al, dx; or byte ptr [ecx + 0x536c247c], cl; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c1973: in al, dx; or byte ptr [ecx + 0x5858dc7], cl; inc edi; cli; call dword ptr [eax + 0x53]; 
0x00124ca9: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x000286d3: in al, dx; or byte ptr [ecx - 0x17adafe9], cl; ret 0x75e; 
0x0002776e: in al, dx; or byte ptr [ecx - 0x1ab6b], cl; call dword ptr [esi + 0x51]; 
0x0002ce52: in al, dx; or byte ptr [ecx - 0x1d76b], cl; call dword ptr [eax - 1]; 
0x0012e3f6: in al, dx; or byte ptr [ecx - 0x72540c29], cl; and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x0007433e: in al, dx; or byte ptr [ecx - 0x7c72f7bb], cl; pushal; add cl, ch; call dword ptr [eax - 0x73]; 
0x00060288: in al, dx; or byte ptr [ecx - 0x86b73], cl; call dword ptr [eax + 0x56]; 
0x00060318: in al, dx; or byte ptr [ecx - 0x88773], cl; call dword ptr [eax + 0x53]; 
0x0006544d: in al, dx; or byte ptr [ecx - 0x89f73], cl; call dword ptr [esi - 1]; 
0x0002711d: in al, dx; or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00109f89: in al, dx; or byte ptr [ecx - 0x976b], cl; call dword ptr [edx + 0x53]; 
0x0012c1f1: in al, dx; or byte ptr [ecx - 0xaf6b], cl; dec dword ptr [ebp - 0x8b6b]; call dword ptr [edx + 0x50]; 
0x000efdee: in al, dx; or byte ptr [ecx - 0xb77b], cl; call dword ptr [esi + 0x50]; 
0x000f0e6e: in al, dx; or byte ptr [ecx - 0xc77b], cl; call dword ptr [esi + 0x50]; 
0x00028699: in al, dx; or byte ptr [ecx - 0xeb6b], cl; call dword ptr [ecx + 0x50]; 
0x00083543: in al, dx; or byte ptr [ecx - 1], dl; jae 0x8356d; call eax; 
0x000dd532: in al, dx; or byte ptr [ecx], al; rcl byte ptr [eax + 0x53], 0xe8; ret; 
0x0002efbf: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x0008769d: in al, dx; or byte ptr [ecx], al; ret 0xf829; 
0x0005a2e1: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00075421: in al, dx; or byte ptr [ecx], ch; ret 0x352; 
0x0011f33b: in al, dx; or byte ptr [ecx], ch; ret; 
0x000bf063: in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x00077365: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, ebx; call dword ptr [eax + 0xc]; 
0x0006fa0d: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x00033e73: in al, dx; or byte ptr [edx], ch; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001260fa: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x00068fc9: in al, dx; or byte ptr [edx], ch; push edi; call dword ptr [ebx + 8]; 
0x000728e7: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebp + 8]; 
0x000c6e3f: in al, dx; or byte ptr [esi - 0x73], dl; cmp byte ptr [ebx], 0x48; cli; call dword ptr [eax - 0x18]; 
0x0008344e: in al, dx; or byte ptr [esi - 1], dl; jae 0x83478; call eax; 
0x00082afa: in al, dx; or byte ptr [esi - 1], dl; je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x0002f86d: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x000b3400: in al, dx; pop ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016bfa3: in al, dx; pop ebx; pop esi; pop edi; ret; 
0x00127ec3: in al, dx; pop ebx; ret; 
0x00110995: in al, dx; pop ecx; cli; call dword ptr [eax - 0x18]; 
0x00138c70: in al, dx; pop edi; std; jmp dword ptr [esi - 0x70]; 
0x0004a7d0: in al, dx; pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0014a896: in al, dx; push edx; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0003123f: in al, dx; pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x10748], cl; jmp dword ptr [ebp - 0x75]; 
0x0011b5a4: in al, dx; pushfd; cli; call dword ptr [eax - 0x18]; 
0x000e5fd4: in al, dx; sbb al, 0x8b; adc cl, byte ptr [ebx + 0x246c8b01]; xor byte ptr [ecx], bh; ret 0x2674; 
0x001036c0: in al, dx; sbb al, 0x8b; jl 0x1036e9; xor byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00043047: in al, dx; sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010ec6b: in al, dx; sbb byte ptr [ebp - 0x5a67a80], cl; call dword ptr [eax - 0x18]; 
0x0010d59b: in al, dx; sbb byte ptr [ebp - 0x5a6cc80], cl; call dword ptr [eax - 0x18]; 
0x00075589: in al, dx; sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001457bb: in al, dx; sbb byte ptr [ebx - 0x10f80], cl; jmp dword ptr [ebp + 3]; 
0x00035e3b: in al, dx; sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x00031a11: in al, dx; sbb byte ptr [edx], ch; call 0x312c0; add esp, 0x1c; ret; 
0x000ba84c: in al, dx; stc; inc dword ptr [ecx]; int1; jmp ecx; 
0x00112b3a: in al, dx; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fdbc3: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001628f7: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000e3456: in eax, 0x21; ret; 
0x000ca137: in eax, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0008adba: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x001176cc: in eax, 0x5c; cli; call dword ptr [eax - 0x18]; 
0x001178b3: in eax, 0x5c; cli; call dword ptr [eax - 0x73]; 
0x0012118b: in eax, 0x5f; cli; call dword ptr [eax + 0x56]; 
0x0016be02: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012ff2a: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008ee96: in eax, 0x83; ret; 
0x0009f072: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0009ee32: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0013b1da: in eax, 0x89; ret; 
0x00126efa: in eax, 0xe8; pushal; jge 0x126efd; call dword ptr [ebp + 0x57]; 
0x0009c010: in eax, 0xe; or al, byte ptr [eax]; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a4f97: in eax, 0xf1; stc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x0008b4dc: in eax, 0xf9; dec dword ptr [ebx - 0x76e3dbac]; lds ecx, ptr [ecx - 0x1c17dbec]; aad 0xf9; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x0001acdb: in eax, 0xf9; inc dword ptr [ecx]; bnd jmp edx; 
0x000b2773: in eax, 0xf; je 0xb2790; add eax, 2; ret; 
0x00125ac4: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0003a861: in eax, 0xfe; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0014e959: in eax, 0xfe; inc dword ptr [ecx + 0x414e4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006db00: in eax, 0xff; call dword ptr [eax - 0x73]; 
0x0006942e: in eax, 0xff; call dword ptr [ecx + 0x52]; 
0x000bed54: in eax, 0xff; call dword ptr [edx + 0x51]; 
0x0005b79d: in eax, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00056870: in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00110755: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x0009f318: in eax, 2; lea eax, [eax - 0x81480]; cmovne edx, eax; mov eax, edx; ret; 
0x000850e8: in eax, 2; lea eax, [eax - 0x84f80]; cmovne edx, eax; mov eax, edx; ret; 
0x00085438: in eax, 2; lea eax, [eax - 0x89e70]; cmovne edx, eax; mov eax, edx; ret; 
0x000853b8: in eax, 2; lea eax, [eax - 0x89ea0]; cmovne edx, eax; mov eax, edx; ret; 
0x000853f8: in eax, 2; lea eax, [eax - 0x8c380]; cmovne edx, eax; mov eax, edx; ret; 
0x00085378: in eax, 2; lea eax, [eax - 0x8c3b0]; cmovne edx, eax; mov eax, edx; ret; 
0x00084498: in eax, 2; lea eax, [eax - 0x8dda0]; cmovne edx, eax; mov eax, edx; ret; 
0x00083ea8: in eax, 2; lea eax, [eax - 0x8f210]; cmovne edx, eax; mov eax, edx; ret; 
0x00145a87: in eax, 9; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0015e462: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0015cfdb: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000d6624: in eax, dx; add dword ptr [ebx - 0x7603e7bc], ecx; ret; 
0x0009cfc7: in eax, dx; add eax, ecx; pop edi; ret; 
0x0014abf4: in eax, dx; and bh, bh; inc dword ptr [ecx + 0x44e08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011efa1: in eax, dx; call 0x11ebb0; or dword ptr [ebx + 0x2f74], 2; add esp, 8; pop ebx; ret; 
0x0001dc81: in eax, dx; call 0x1d790; or dword ptr [ebx + 0xfb0], 2; add esp, 8; pop ebx; ret; 
0x000c224b: in eax, dx; call dword ptr [eax - 0x18]; 
0x0013affe: in eax, dx; dec dword ptr [ebp - 0x72dbdb8c]; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x000b4108: in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x0007106f: in eax, dx; fisttp dword ptr [ecx]; add byte ptr [ebp - 0x5854f7a], cl; call dword ptr [eax - 0x73]; 
0x0013cc6d: in eax, dx; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0013d1c1: in eax, dx; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000c5ea8: in eax, dx; inc edi; cli; call dword ptr [eax + 0x6a]; 
0x000a494f: in eax, dx; inc esp; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x0014326c: in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00083514: in eax, dx; jne 0x83463; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0008aca2: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ae02: in eax, dx; mov eax, edx; pop ebx; ret; 
0x00088af3: in eax, dx; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x000f45b2: in eax, dx; mov ecx, dword ptr [esp + 0x54]; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00146512: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145ee2: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0015d0d7: in eax, dx; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000fcfdd: in eax, dx; pop ebx; cli; call dword ptr [eax + 0x6a]; 
0x000fcb62: in eax, dx; pop ebx; cli; call dword ptr [eax - 1]; 
0x000514a5: in eax, dx; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x000fcbfe: in eax, dx; pop ebx; cli; call dword ptr [ecx + 0x50]; 
0x0011b046: in eax, dx; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0009fedf: in eax, dx; push es; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x000513f0: in eax, dx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x000505c8: in eax, dx; xor edi, edx; call dword ptr [eax + 0x53]; 
0x000cd9ea: inc byte ptr [eax + 0xf]; xchg esp, eax; ret; 
0x000fff97: inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fc8f4: inc byte ptr [ebx - 0x7401fba0]; inc edi; add al, 0x89; ret 0xe083; 
0x00081cfb: inc byte ptr [ebx - 6]; call dword ptr [ebx + 0x50]; 
0x0006294a: inc byte ptr [edx]; push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0009e71b: inc dword ptr [0x76800000]; out 0x89, eax; ret; 
0x00145a84: inc dword ptr [0x9e57b]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143394: inc dword ptr [0xa0c6b]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143374: inc dword ptr [0xa0c8b]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143334: inc dword ptr [0xa0ccb]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143314: inc dword ptr [0xa0ceb]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001432f4: inc dword ptr [0xa0d0b]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001432d4: inc dword ptr [0xa0d2b]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0008fa0e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f9b8: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000d1a3c: inc dword ptr [eax - 0x6bf0f907]; ret 0x7b89; 
0x00047b35: inc dword ptr [eax - 0x7bf08f05]; ret; 
0x000853f6: inc dword ptr [eax - 0x7f72fd1b]; cmp byte ptr [edi + esi*8], 0xff; cmovne edx, eax; mov eax, edx; ret; 
0x000850e6: inc dword ptr [eax - 0x7f72fd1b]; xor byte ptr [eax + 0x450ffff7], 0xd0; mov eax, edx; ret; 
0x0004cdfe: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi + 0x75]; 
0x0004cb91: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x00063ba2: inc dword ptr [eax]; add byte ptr [eax], al; add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0005526a: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000efe25: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x972; 
0x000b0cf1: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000efd85: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8589; 
0x000fffe3: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016131c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000e3978: inc dword ptr [eax]; add byte ptr [ecx - 0x1677b], cl; dec dword ptr [ecx - 0x7c067638]; ret 0x8920; 
0x0002f35e: inc dword ptr [eax]; add byte ptr [ecx], ch; ret 0xd089; 
0x000c6ef0: inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x0015b8cc: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001572c8: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0007b6e3: inc dword ptr [eax]; add byte ptr [esi + 8], dh; ret; 
0x000d1c39: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x000d1a39: inc dword ptr [eax]; cld; inc dword ptr [eax - 0x6bf0f907]; ret 0x7b89; 
0x0009d6af: inc dword ptr [eax]; je 0x9d6b4; inc eax; pop edi; ret; 
0x0009d853: inc dword ptr [eax]; je 0x9d858; inc eax; pop edi; pop esi; ret; 
0x0008aad2: inc dword ptr [eax]; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0010ed27: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0010ed0b: inc dword ptr [eax]; ret; 
0x0005744f: inc dword ptr [ebp + 0x19850fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00054021: inc dword ptr [ebp + 0x1f840fc0]; cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x0005a9bd: inc dword ptr [ebp + 0x25850ff6]; in al, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0008f17c: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00055737: inc dword ptr [ebp + 0x2d840fc9]; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7af00005], al; ret 0xfffe; 
0x00054fef: inc dword ptr [ebp + 0x38850fc0]; sbb al, 0; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0008f15c: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b6f16: inc dword ptr [ebp + 0x51840fc0]; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e5430: inc dword ptr [ebp + 0x77840fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x5177b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0008f19c: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0005c2e7: inc dword ptr [ebp + 0xc850ff6]; aam 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000d4e94: inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000f8973: inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00021557: inc dword ptr [ebp - 0x227af00a]; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000b0837: inc dword ptr [ebp - 0x2a71f025]; or dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004a054: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x49fe9; ret 0x40c7; 
0x000342b6: inc dword ptr [ebp - 0x3db7f040]; add esp, 4; pop ebx; pop esi; ret; 
0x0013fc77: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00132191: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x001457df: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000df202: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x000410da: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x0005a738: inc dword ptr [ebp - 0x687bf025]; or byte ptr [eax], al; add byte ptr [ebx - 0x7bf00001], al; ret 0x13; 
0x000f26fe: inc dword ptr [ebp - 0x6d7bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x75]; 
0x0013b1d6: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x001191a9: inc dword ptr [ebp - 0x76ad8740]; ret; 
0x00073b47: inc dword ptr [ebp - 0x76cb8b40]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000262d1: inc dword ptr [ebp - 0x76f78b2e]; add al, 0x24; call edx; 
0x000513d3: inc dword ptr [ebp - 0x7cb78b40]; in al, dx; add al, 0x6a; add eax, 0x28858d50; jo 0x513dd; call dword ptr [eax - 0x18]; 
0x000504c2: inc dword ptr [ebp - 0x7cbf8b40]; in al, dx; add al, 0x6a; add eax, 0x28838d50; jo 0x504cc; call dword ptr [eax - 0x18]; 
0x0008466a: inc dword ptr [ebp - 0x7cce8b40]; in al, dx; add al, 0x6a; add eax, 0x28838d50; jo 0x84674; call dword ptr [eax - 0x18]; 
0x000c7cfa: inc dword ptr [ebp - 0x7cde8b2e]; rol dword ptr [ecx], 0x89; ret 0xb60f; 
0x00048af1: inc dword ptr [ebp - 0xf71f040]; or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00081d11: inc dword ptr [ebx + 0x16b804c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000f9931: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0011da37: inc dword ptr [ebx + 0x1eba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f1ef8], al; ret 0x4589; 
0x0011efa6: inc dword ptr [ebx + 0x2f748b]; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x000b0e57: inc dword ptr [ebx + 0x348d04ec]; lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x35f37b], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [esi - 1]; 
0x0013a301: inc dword ptr [ebx + 0x36ff04ec]; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00055bee: inc dword ptr [ebx + 0x3fcba]; add byte ptr [ebp - 0x75], ch; add ecx, dword ptr [edi]; test dword ptr [ecx], edx; ret 0xffff; 
0x0002af74: inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x00119bb9: inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x000ddbb7: inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x00126250: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x126267; push edi; call dword ptr [eax + 8]; 
0x0010a9d5: inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0011aff9: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0009f40c: inc dword ptr [ebx + 0x48d14c4]; cwde; pop ebx; pop esi; ret; 
0x0010e8d6: inc dword ptr [ebx + 0x4c8b10c4]; and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e946: inc dword ptr [ebx + 0x4c8b10c4]; and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x00115787: inc dword ptr [ebx + 0x4c8b10c4]; and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x000b31bf: inc dword ptr [ebx + 0x4c8b10c4]; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000f81b0: inc dword ptr [ebx + 0x4c8b10c4]; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000f60fd: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0004b31e: inc dword ptr [ebx + 0x535104ec]; push dword ptr [ebp - 0x88]; call eax; 
0x0013f8ea: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x000bc703: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee03: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x0012e654: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0011d9c7: inc dword ptr [ebx + 0x5ba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f05f8], al; ret 0x4589; 
0x000d6e35: inc dword ptr [ebx + 0x5d3b01c3]; add al, 0x7c; ret 0x9066; 
0x000f5834: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0008aee5: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0011b60e: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret 4; 
0x000e5fb4: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00028a74: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00025c83: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00131fdd: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x0001bd5f: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000d1ea1: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000bb963: inc dword ptr [ebx + 0x5fb82dfb]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000bed44: inc dword ptr [ebx + 0x67e910c4]; idiv bh; call dword ptr [edx + 0x51]; 
0x000f89d5: inc dword ptr [ebx + 0x685704ec]; add byte ptr [eax + eax], al; add byte ptr [esi - 0x18], dl; dec ebx; ret 0xfff7; 
0x0007c77d: inc dword ptr [ebx + 0x6a0cec]; call dword ptr [ebp]; 
0x00061943: inc dword ptr [ebx + 0x6a5304ec]; and byte ptr [esi - 0x18], dl; adc byte ptr [ebx - 0x3b7d0000], dl; adc byte ptr [ecx], bh; ret; 
0x00062253: inc dword ptr [ebx + 0x6a5304ec]; and byte ptr [esi - 0x18], dl; add byte ptr [edx - 0x3b7d0000], cl; adc byte ptr [ecx], bh; ret; 
0x0001b1ac: inc dword ptr [ebx + 0x74ff0cec]; and al, 0x1c; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ab123: inc dword ptr [ebx + 0x75e9ffcb]; idiv edi; dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x0007e412: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x7e41e; call eax; 
0x000fcf6b: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0af: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0xfd1a0; call eax; 
0x0015e94c: inc dword ptr [ebx + 0xf66f0e0]; outsd dx, dword ptr [esi]; add byte ptr [esi + 0xf], ah; cmp byte ptr [eax], al; ret 0xf66; 
0x0001dc86: inc dword ptr [ebx + 0xfb08b]; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x0011da0f: inc dword ptr [ebx + 0xfba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x0011edab: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xd7; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011edd7: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xe4; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011ee03: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xf3; pop esi; cli; call dword ptr [esi - 0x18]; 
0x00115c92: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x00125ae4: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00022e09: inc dword ptr [ebx - 0x16fef391]; ret; 
0x000838e4: inc dword ptr [ebx - 0x17aceb3c]; add edi, edi; jmp dword ptr [esi - 0x70]; 
0x001174af: inc dword ptr [ebx - 0x17acf314]; xlatb; pop ds; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00053ce4: inc dword ptr [ebx - 0x17adf314]; ret 0x26f; 
0x0008736d: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x0013d03a: inc dword ptr [ebx - 0x247aef3c]; jne 0x13d050; add esp, 8; pop ebx; ret; 
0x0013d07a: inc dword ptr [ebx - 0x247aef3c]; jne 0x13d090; add esp, 8; pop ebx; ret; 
0x0001b452: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x000fb167: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0012aae1: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000ed114: inc dword ptr [ebx - 0x2776ef3c]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c5b04: inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0016551b: inc dword ptr [ebx - 0x297cf740]; add byte ptr [ebx - 0x2d7cff29], al; add cl, ch; ret 0xfff0; 
0x00132dd4: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000b0525: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0004839e: inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x00046ad1: inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000b1214: inc dword ptr [ebx - 0x363f7b]; jmp eax; 
0x000495e9: inc dword ptr [ebx - 0x364f7b]; jmp eax; 
0x000b008f: inc dword ptr [ebx - 0x36637b]; call dword ptr [eax]; 
0x00078e95: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0002daf3: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000f8adf: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0007a3de: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x000eb0af: inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000eb0da: inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010dbcb: inc dword ptr [ebx - 0x3f7aef3c]; je 0x10dbe0; add esp, 8; pop ebx; ret; 
0x000c5b4f: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xc5b60; add esp, 8; pop ebx; ret; 
0x00122dda: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x000414b2: inc dword ptr [ebx - 0x3f7cfb14]; add dword ptr [ecx - 0x9373], ecx; call dword ptr [eax - 0x73]; 
0x00073be3: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0002e94a: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000e1dcd: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013cc6e: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00047f91: inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00059372: inc dword ptr [ebx - 0x47cda15]; push ebx; ja 0x597d6; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x0005f7b5: inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000e4775: inc dword ptr [ebx - 0x49f0ffc8]; test dword ptr [edi + 0xffffffe], ecx; inc ebp; ret 0x8588; 
0x0007e351: inc dword ptr [ebx - 0x4c00f33c]; cmp bh, 0xff; call dword ptr [esi + 0x6a]; 
0x000c6c07: inc dword ptr [ebx - 0x4f72f714]; jbe 0xc6c59; cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000a8e95: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x00065133: inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00064c4f: inc dword ptr [ebx - 0x6274fb14]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x000daf6b: inc dword ptr [ebx - 0x6316ef3c]; idiv edi; call dword ptr [eax - 1]; 
0x0011ee2a: inc dword ptr [ebx - 0x6472f314]; or ebx, dword ptr [edi - 6]; call dword ptr [ebx - 0x18]; 
0x0005feb1: inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x0005fd04: inc dword ptr [ebx - 0x6a76fb14]; xor bh, 0xff; call dword ptr [esi + 0x6a]; 
0x000ff662: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000ff621: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x001164bf: inc dword ptr [ebx - 0x6c72f714]; mov ecx, 0x89fffa57; test dword ptr [ebx + edi*8 - 1], esi; call dword ptr [esi + 0x52]; 
0x0006544b: inc dword ptr [ebx - 0x7276f714]; pushal; idiv edi; call dword ptr [esi - 1]; 
0x00060286: inc dword ptr [ebx - 0x7276f714]; xchg esp, eax; idiv edi; call dword ptr [eax + 0x56]; 
0x0006402e: inc dword ptr [ebx - 0x7276fb14]; pushal; idiv edi; call dword ptr [esi - 1]; 
0x0005fdba: inc dword ptr [ebx - 0x7276fb14]; xor bh, 0xff; call dword ptr [ebx + 0x6a]; 
0x000c6e3d: inc dword ptr [ebx - 0x72a9f714]; cmp byte ptr [ebx], 0x48; cli; call dword ptr [eax - 0x18]; 
0x0012bf86: inc dword ptr [ebx - 0x72afef3c]; sbb dword ptr [ebx], -6; call dword ptr [eax - 0x73]; 
0x000c6da8: inc dword ptr [ebx - 0x72afef3c]; sbb dword ptr [esi], 0x48; cli; call dword ptr [eax + 0x68]; 
0x0010c1d6: inc dword ptr [ebx - 0x72afef3c]; xchg dword ptr [edi], ecx; pop eax; cli; call dword ptr [ebx + 0x50]; 
0x000513e9: inc dword ptr [ebx - 0x72aff33c]; test ebp, ebp; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x00051579: inc dword ptr [ebx - 0x72aff33c]; test ebx, ecx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x00101f53: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [ebp + 0x56], ecx; cli; call dword ptr [eax + 0x6a]; 
0x0014335d: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00128589: inc dword ptr [ebx - 0x749af314]; cmp edx, dword ptr [esi - 0x18]; ficom dword ptr [esi - 4]; jmp dword ptr [ebp - 0x77]; 
0x0012befd: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0010ca78: inc dword ptr [ebx - 0x74aff314]; inc ebp; mov esp, 0x8db075ff; xor dh, 0x58; cli; call dword ptr [edx - 0x17]; 
0x00069a32: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x000e45f6: inc dword ptr [ebx - 0x77ccf3c]; dec byte ptr [edi]; test esp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x0012ab0b: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00132e1a: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0013d255: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00114eb4: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x000509e5: inc dword ptr [ebx - 0x7872f314]; div byte ptr [ebx]; cli; call dword ptr [eax - 0x18]; 
0x000675d0: inc dword ptr [ebx - 0x7872f314]; je 0x6764e; cli; call dword ptr [eax - 0x18]; 
0x0013457a: inc dword ptr [ebx - 0x7872f314]; jns 0x1345e0; cli; call dword ptr [eax - 0x18]; 
0x00082e44: inc dword ptr [ebx - 0x7872fb14]; push ebx; inc esp; cli; call dword ptr [ebp + 0x50]; 
0x000ed085: inc dword ptr [ebx - 0x7972f314]; add al, 0x96; cli; call dword ptr [eax - 0x18]; 
0x00115dae: inc dword ptr [ebx - 0x7972f314]; push ecx; pop esp; cli; call dword ptr [eax - 0x18]; 
0x00115d7b: inc dword ptr [ebx - 0x7972f314]; xor eax, 0x83fffa5c; iretd; call dword ptr [eax - 0x18]; 
0x000f9fe0: inc dword ptr [ebx - 0x7972f714]; mov dh, 0x31; cli; call dword ptr [eax - 1]; 
0x0005ee85: inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x000515a9: inc dword ptr [ebx - 0x7a72fb14]; iretd; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x00057787: inc dword ptr [ebx - 0x7af00005]; ret; 
0x00053a21: inc dword ptr [ebx - 0x7af00008]; imul esi, edx, -1; dec dword ptr [ebx - 0x5a77b]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x00056869: inc dword ptr [ebx - 0x7af00008]; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0013cc65: inc dword ptr [ebx - 0x7af09f1e]; and eax, 0x83ffedda; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00056077: inc dword ptr [ebx - 0x7bf00008]; ret; 
0x000ecd2b: inc dword ptr [ebx - 0x7c72f314]; pop esp; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x000ece4b: inc dword ptr [ebx - 0x7c72f314]; xchg esp, eax; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x000b5995: inc dword ptr [ebx - 0x7c72f714]; cmpsd dword ptr [esi], dword ptr es:[edi]; inc esi; cli; call dword ptr [eax + 0x57]; 
0x00134e7e: inc dword ptr [ebx - 0x7cef3c]; push dword ptr [eax + ebx - 0x75]; jnp 0x8b4f72e2; inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x00133f63: inc dword ptr [ebx - 0x7cef3c]; push dword ptr [ecx + ebx - 0x75]; jnp 0x419edfc8; or byte ptr [ecx], bh; ret 0x2875; 
0x000b6efb: inc dword ptr [ebx - 0x7e72f714]; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x000c9645: inc dword ptr [ebx - 0x7f72f314]; dec eax; cli; call dword ptr [eax - 0x18]; 
0x000604ac: inc dword ptr [ebx - 0x7f72f314]; je 0x6052a; cli; call dword ptr [eax - 0x18]; 
0x0006575b: inc dword ptr [ebx - 0x7f72f314]; je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x0005e813: inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x5e816; call dword ptr [eax - 0x18]; 
0x00063813: inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x000d864d: inc dword ptr [ebx - 0xa77b]; jmp dword ptr [eax]; 
0x0011a3e6: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x00069d0d: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x0006b572: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0010cf38: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0010eb88: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x10eb95; sar eax, 5; add esp, 0xc; ret; 
0x00161411: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00034d19: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x000f8267: inc dword ptr [ebx]; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000bc9da: inc dword ptr [ebx]; mov word ptr [ecx - 0x60bac], es; jmp ecx; 
0x000bc919: inc dword ptr [ebx]; test byte ptr [eax - 0x60f84], bl; jmp eax; 
0x00059384: inc dword ptr [ebx]; test byte ptr [eax - 0x62f84], bl; jmp eax; 
0x00058a9c: inc dword ptr [ebx]; test byte ptr [eax - 0x630d4], bl; jmp eax; 
0x00058983: inc dword ptr [ebx]; test byte ptr [eax - 0x63224], bl; jmp eax; 
0x000584fc: inc dword ptr [ebx]; test byte ptr [eax - 0x632e0], cl; jmp eax; 
0x000c9e4e: inc dword ptr [ebx]; test dword ptr [ebx + edi*8 - 1], esi; dec dword ptr [ecx - 0x4977b]; inc dword ptr [ecx]; ret; 
0x001343c4: inc dword ptr [ebx]; test dword ptr [edi + edi*8 - 1], edi; call dword ptr [ebx + 0x50]; 
0x001148ac: inc dword ptr [ecx + 0x200f9]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0015edcf: inc dword ptr [ecx + 0x31bb4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015ed0a: inc dword ptr [ecx + 0x31c79c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015d3ef: inc dword ptr [ecx + 0x33490c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015d2e0: inc dword ptr [ecx + 0x3359fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00154d11: inc dword ptr [ecx + 0x3baaec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00154b1d: inc dword ptr [ecx + 0x3bba2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00154038: inc dword ptr [ecx + 0x3c687c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153f2e: inc dword ptr [ecx + 0x3c791c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153e27: inc dword ptr [ecx + 0x3c898c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153d2b: inc dword ptr [ecx + 0x3c994c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153c0b: inc dword ptr [ecx + 0x3c9f4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153d78: inc dword ptr [ecx + 0x3ca07c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00153977: inc dword ptr [ecx + 0x3cac8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015335e: inc dword ptr [ecx + 0x3d0e1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153340: inc dword ptr [ecx + 0x3d0ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001532a7: inc dword ptr [ecx + 0x3d198c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001531e0: inc dword ptr [ecx + 0x3d25fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153147: inc dword ptr [ecx + 0x3d2f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153080: inc dword ptr [ecx + 0x3d3bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152fe7: inc dword ptr [ecx + 0x3d458c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152f20: inc dword ptr [ecx + 0x3d51fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152e87: inc dword ptr [ecx + 0x3d5b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152dc0: inc dword ptr [ecx + 0x3d67fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152d27: inc dword ptr [ecx + 0x3d718c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152c60: inc dword ptr [ecx + 0x3d7dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152bc7: inc dword ptr [ecx + 0x3d878c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152b00: inc dword ptr [ecx + 0x3d93fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152a67: inc dword ptr [ecx + 0x3d9d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001529a0: inc dword ptr [ecx + 0x3da9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152907: inc dword ptr [ecx + 0x3db38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152840: inc dword ptr [ecx + 0x3dbffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001527a7: inc dword ptr [ecx + 0x3dc98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001526e0: inc dword ptr [ecx + 0x3dd5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152647: inc dword ptr [ecx + 0x3ddf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152580: inc dword ptr [ecx + 0x3debfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001524e7: inc dword ptr [ecx + 0x3df58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152420: inc dword ptr [ecx + 0x3e01fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152387: inc dword ptr [ecx + 0x3e0b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001522c0: inc dword ptr [ecx + 0x3e17fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152227: inc dword ptr [ecx + 0x3e218c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152160: inc dword ptr [ecx + 0x3e2dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001520c7: inc dword ptr [ecx + 0x3e378c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152000: inc dword ptr [ecx + 0x3e43fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151f67: inc dword ptr [ecx + 0x3e4d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151e9f: inc dword ptr [ecx + 0x3e660c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151d9a: inc dword ptr [ecx + 0x3e6a5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151c94: inc dword ptr [ecx + 0x3e86bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151b8b: inc dword ptr [ecx + 0x3e8b4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151a61: inc dword ptr [ecx + 0x3e91ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151bd5: inc dword ptr [ecx + 0x3e9eac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0015185d: inc dword ptr [ecx + 0x3ea22c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00150d68: inc dword ptr [ecx + 0x3f517c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00150c5e: inc dword ptr [ecx + 0x3f621c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00150b57: inc dword ptr [ecx + 0x3f728c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00150a5b: inc dword ptr [ecx + 0x3f824c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015084d: inc dword ptr [ecx + 0x3f872c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00150aa8: inc dword ptr [ecx + 0x3f897c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0005252e: inc dword ptr [ecx + 0x400fa]; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0014fd68: inc dword ptr [ecx + 0x40357c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014fc5e: inc dword ptr [ecx + 0x40461c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014fb57: inc dword ptr [ecx + 0x40568c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014fa4e: inc dword ptr [ecx + 0x40671c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014f87d: inc dword ptr [ecx + 0x40682c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014faa8: inc dword ptr [ecx + 0x406d7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0014fa5e: inc dword ptr [ecx + 0x40761c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ed88: inc dword ptr [ecx + 0x41177c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ec7e: inc dword ptr [ecx + 0x41281c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014eb77: inc dword ptr [ecx + 0x41388c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ea6e: inc dword ptr [ecx + 0x41491c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014e95b: inc dword ptr [ecx + 0x414e4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014eac8: inc dword ptr [ecx + 0x414f7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0014ea7e: inc dword ptr [ecx + 0x41581c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014e6a7: inc dword ptr [ecx + 0x415d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014e00e: inc dword ptr [ecx + 0x41c71c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014dff0: inc dword ptr [ecx + 0x41c8fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014df57: inc dword ptr [ecx + 0x41d28c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014de90: inc dword ptr [ecx + 0x41defc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ddf7: inc dword ptr [ecx + 0x41e88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014dd30: inc dword ptr [ecx + 0x41f4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014dc97: inc dword ptr [ecx + 0x41fe8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014dbd0: inc dword ptr [ecx + 0x420afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014db37: inc dword ptr [ecx + 0x42148c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014da70: inc dword ptr [ecx + 0x4220fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d9d7: inc dword ptr [ecx + 0x422a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d910: inc dword ptr [ecx + 0x4236fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d877: inc dword ptr [ecx + 0x42408c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d7b0: inc dword ptr [ecx + 0x424cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d717: inc dword ptr [ecx + 0x42568c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d650: inc dword ptr [ecx + 0x4262fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d5b7: inc dword ptr [ecx + 0x426c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d4f0: inc dword ptr [ecx + 0x4278fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d457: inc dword ptr [ecx + 0x42828c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d390: inc dword ptr [ecx + 0x428efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d2f7: inc dword ptr [ecx + 0x42988c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d230: inc dword ptr [ecx + 0x42a4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d197: inc dword ptr [ecx + 0x42ae8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d0d0: inc dword ptr [ecx + 0x42bafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014d037: inc dword ptr [ecx + 0x42c48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014cf70: inc dword ptr [ecx + 0x42d0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ced7: inc dword ptr [ecx + 0x42da8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ce10: inc dword ptr [ecx + 0x42e6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014cd77: inc dword ptr [ecx + 0x42f08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ccb0: inc dword ptr [ecx + 0x42fcfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014cc17: inc dword ptr [ecx + 0x43068c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014cb4f: inc dword ptr [ecx + 0x431f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ca4a: inc dword ptr [ecx + 0x43235c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014c944: inc dword ptr [ecx + 0x433fbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014c83b: inc dword ptr [ecx + 0x43444c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014c547: inc dword ptr [ecx + 0x434b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014c885: inc dword ptr [ecx + 0x4357ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0014bf0e: inc dword ptr [ecx + 0x43af1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bef0: inc dword ptr [ecx + 0x43b0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014be57: inc dword ptr [ecx + 0x43ba8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bda0: inc dword ptr [ecx + 0x43c5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bd07: inc dword ptr [ecx + 0x43cf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bc50: inc dword ptr [ecx + 0x43dafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bbb7: inc dword ptr [ecx + 0x43e48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014bb00: inc dword ptr [ecx + 0x43effc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ba67: inc dword ptr [ecx + 0x43f98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b9b0: inc dword ptr [ecx + 0x4404fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b917: inc dword ptr [ecx + 0x440e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b860: inc dword ptr [ecx + 0x4419fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b7c7: inc dword ptr [ecx + 0x44238c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b710: inc dword ptr [ecx + 0x442efc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b677: inc dword ptr [ecx + 0x44388c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b5c0: inc dword ptr [ecx + 0x4443fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b527: inc dword ptr [ecx + 0x444d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b470: inc dword ptr [ecx + 0x4458fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b3d7: inc dword ptr [ecx + 0x44628c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b320: inc dword ptr [ecx + 0x446dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b287: inc dword ptr [ecx + 0x44778c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b1d0: inc dword ptr [ecx + 0x4482fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b137: inc dword ptr [ecx + 0x448c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b080: inc dword ptr [ecx + 0x4497fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014afe7: inc dword ptr [ecx + 0x44a18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014af30: inc dword ptr [ecx + 0x44acfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ae97: inc dword ptr [ecx + 0x44b68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ade0: inc dword ptr [ecx + 0x44c1fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ad47: inc dword ptr [ecx + 0x44cb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ac90: inc dword ptr [ecx + 0x44d6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014abf7: inc dword ptr [ecx + 0x44e08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ab3f: inc dword ptr [ecx + 0x44f80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014aa3a: inc dword ptr [ecx + 0x44fc5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014a934: inc dword ptr [ecx + 0x4518bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014a82e: inc dword ptr [ecx + 0x451d1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014a5a7: inc dword ptr [ecx + 0x451d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014a893: inc dword ptr [ecx + 0x452ecc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0014a844: inc dword ptr [ecx + 0x4537bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149f0e: inc dword ptr [ecx + 0x45871c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149ef0: inc dword ptr [ecx + 0x4588fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149e57: inc dword ptr [ecx + 0x45928c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149da0: inc dword ptr [ecx + 0x459dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149d07: inc dword ptr [ecx + 0x45a78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149c50: inc dword ptr [ecx + 0x45b2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149bb7: inc dword ptr [ecx + 0x45bc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149b00: inc dword ptr [ecx + 0x45c7fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149a67: inc dword ptr [ecx + 0x45d18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001499b0: inc dword ptr [ecx + 0x45dcfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149917: inc dword ptr [ecx + 0x45e68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149860: inc dword ptr [ecx + 0x45f1fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001497c7: inc dword ptr [ecx + 0x45fb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149710: inc dword ptr [ecx + 0x4606fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149677: inc dword ptr [ecx + 0x46108c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001495c0: inc dword ptr [ecx + 0x461bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149527: inc dword ptr [ecx + 0x46258c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149470: inc dword ptr [ecx + 0x4630fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001493d7: inc dword ptr [ecx + 0x463a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149320: inc dword ptr [ecx + 0x4645fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149287: inc dword ptr [ecx + 0x464f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001491d0: inc dword ptr [ecx + 0x465afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149137: inc dword ptr [ecx + 0x46648c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149080: inc dword ptr [ecx + 0x466ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148fe7: inc dword ptr [ecx + 0x46798c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148f30: inc dword ptr [ecx + 0x4684fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148e97: inc dword ptr [ecx + 0x468e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148de0: inc dword ptr [ecx + 0x4699fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148d47: inc dword ptr [ecx + 0x46a38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148c90: inc dword ptr [ecx + 0x46aefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148bf7: inc dword ptr [ecx + 0x46b88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148b3f: inc dword ptr [ecx + 0x46d00c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148a3a: inc dword ptr [ecx + 0x46d45c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148934: inc dword ptr [ecx + 0x46f0bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014882e: inc dword ptr [ecx + 0x46f51c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148893: inc dword ptr [ecx + 0x4706cc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00148844: inc dword ptr [ecx + 0x470fbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00146efc: inc dword ptr [ecx + 0x48683c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146e4c: inc dword ptr [ecx + 0x48733c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146d88: inc dword ptr [ecx + 0x48777c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001469ac: inc dword ptr [ecx + 0x48953c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001468fc: inc dword ptr [ecx + 0x48a03c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146814: inc dword ptr [ecx + 0x48a6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146452: inc dword ptr [ecx + 0x48c2dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146396: inc dword ptr [ecx + 0x48ce9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0014633a: inc dword ptr [ecx + 0x48d45c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0014627c: inc dword ptr [ecx + 0x48e03c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146194: inc dword ptr [ecx + 0x48e6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145e22: inc dword ptr [ecx + 0x48fddc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145d66: inc dword ptr [ecx + 0x49099c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145d0a: inc dword ptr [ecx + 0x490f5c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145c4c: inc dword ptr [ecx + 0x491b3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145b88: inc dword ptr [ecx + 0x491f7c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0016b845: inc dword ptr [ecx + 0x787bac3]; add byte ptr [ebx - 0x7c72ef14], al; add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x0015e345: inc dword ptr [ecx + 0x85cbac3]; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0015de45: inc dword ptr [ecx + 0x861bac3]; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0015a165: inc dword ptr [ecx + 0x89e9ac3]; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00157c55: inc dword ptr [ecx + 0x8c3aac3]; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0013e407: inc dword ptr [ecx + 0xa5bf8c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x000482c1: inc dword ptr [ecx]; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cbc64: inc dword ptr [ecx]; add byte ptr [eax], al; add cl, ch; ret 0xfff4; 
0x00161401: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0001acdd: inc dword ptr [ecx]; bnd jmp edx; 
0x0009cf86: inc dword ptr [ecx]; clc; pop edi; ret; 
0x0009cfc3: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000524ad: inc dword ptr [ecx]; cli; jmp edx; 
0x0005a4e7: inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x000dd211: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x000ba84e: inc dword ptr [ecx]; int1; jmp ecx; 
0x000ccd6a: inc dword ptr [ecx]; iretd; jmp edi; 
0x00076bb4: inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x0013546d: inc dword ptr [ecx]; ret 0x789; 
0x0002d477: inc dword ptr [ecx]; ret 0xd089; 
0x000563e9: inc dword ptr [ecx]; ret 0xd801; 
0x00055240: inc dword ptr [ecx]; ret 0xf801; 
0x000472af: inc dword ptr [ecx]; ret; 
0x000b7245: inc dword ptr [ecx]; retf; jmp ebx; 
0x000641f5: inc dword ptr [ecx]; ror dword ptr [ebp + 0x26b4], 0; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x0005242b: inc dword ptr [ecx]; stc; jmp ecx; 
0x00051dba: inc dword ptr [ecx]; sti; jmp ebx; 
0x00161421: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016bca4: inc eax; aam 0xea; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0007c86a: inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00132a45: inc eax; adc al, 4; mov eax, 1; ret; 
0x0016284c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00070610: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0016261d: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0014b91b: inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fdd8f: inc eax; add al, 0x5b; ret; 
0x0016295a: inc eax; add al, 0x5f; ret; 
0x00131771: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0001ca8b: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x000ec74c: inc eax; add al, 0x85; sal byte ptr [ebp + 0x1e], 0xb8; sub dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00083569: inc eax; add al, 0x85; sal byte ptr [edi + ebx - 0x70], 0x39; ret 0x476; 
0x0012b309: inc eax; add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x00123a45: inc eax; add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0x5489; 
0x000c6631: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000c7096: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000c7029: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x00103b85: inc eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002903d: inc eax; add byte ptr [eax], al; ret; 
0x000f4224: inc eax; add ch, bl; ret; 
0x000f919e: inc eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x0009cec5: inc eax; add edx, eax; jl 0x9cf00; add eax, ecx; ret; 
0x0009e364: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0006e4ad: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000b6c83: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x21108a], cl; add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x00065d0d: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000fdad6: inc eax; and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x00078707: inc eax; call dword ptr [esi + 0xc]; 
0x00020782: inc eax; call eax; 
0x000c1d0d: inc eax; call ebx; 
0x0010a2c4: inc eax; cdq; cli; call dword ptr [eax - 0x75]; 
0x00149f8b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf8b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001533db: inc eax; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001533f4: inc eax; cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00023b25: inc eax; cli; call dword ptr [eax + 0x68]; 
0x0006efa8: inc eax; cli; call dword ptr [eax - 0x18]; 
0x000239ac: inc eax; cli; call dword ptr [eax - 0x73]; 
0x00108663: inc eax; cmovne eax, edx; pop ebx; ret; 
0x00029399: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0009e58f: inc eax; cmp cl, 0; je 0x9e596; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x00026df4: inc eax; das; cli; call dword ptr [eax - 0x18]; 
0x0013ca35: inc eax; dec eax; ret; 
0x001026ea: inc eax; dec esp; call 0x1025c0; add esp, 4; ret; 
0x0013ca65: inc eax; dec esp; ret; 
0x0016b5c9: inc eax; fld1; fdiv dword ptr [esp + 4]; fstp st(0); add esp, 0x20; ret; 
0x000e2b53: inc eax; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000c72ad: inc eax; idiv cl; inc dword ptr [ecx]; bnd jmp edx; 
0x0008f2cc: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0006daff: inc eax; in eax, 0xff; call dword ptr [eax - 0x73]; 
0x00078e94: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0009e363: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0009e362: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000fddb1: inc eax; inc eax; pop ebx; ret; 
0x0004389f: inc eax; inc eax; ret; 
0x00107661: inc eax; jmp dword ptr [eax]; 
0x0014a11e: inc eax; jmp dword ptr [esi - 0x77]; 
0x0015618d: inc eax; jne 0x156200; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001609bc: inc eax; jne 0x160a24; add eax, 7; ret; 
0x001609fc: inc eax; jne 0x160a44; add eax, 0xf; ret; 
0x00160cd5: inc eax; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x00160d28: inc eax; jne 0x160e10; lea eax, [edi + 0xf]; pop edi; ret; 
0x00160c49: inc eax; jne 0x160e20; lea eax, [edi + 0xf]; pop edi; ret; 
0x00160ba6: inc eax; jne 0x160e20; lea eax, [edi + 7]; pop edi; ret; 
0x00161691: inc eax; jne 0x1617c0; lea eax, [edi + 7]; pop edi; ret; 
0x001616e4: inc eax; jne 0x161820; lea eax, [edi + 0xf]; pop edi; ret; 
0x00161d09: inc eax; jne 0x161db0; test al, 0x20; jne 0x161da0; lea eax, [ecx + 4]; ret; 
0x00162361: inc eax; jne 0x162410; lea eax, [edx + 7]; ret; 
0x001623b4: inc eax; jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x00162794: inc eax; jne 0x162b49; add eax, 7; pop edi; ret; 
0x001627e4: inc eax; jne 0x162b71; add eax, 0xf; pop edi; ret; 
0x00025d82: inc eax; jo 0x25d7f; call dword ptr [eax + 0x56]; 
0x0002664a: inc eax; jo 0x26647; call dword ptr [eax + 0x56]; 
0x00086c98: inc eax; lea eax, [eax - 0x146f30]; cmove edx, eax; mov eax, edx; ret; 
0x0008b2d8: inc eax; lea eax, [eax - 0x1473b0]; cmove edx, eax; mov eax, edx; ret; 
0x000850a8: inc eax; lea eax, [eax - 0x147710]; cmove edx, eax; mov eax, edx; ret; 
0x00084518: inc eax; lea eax, [eax - 0x147900]; cmove edx, eax; mov eax, edx; ret; 
0x00083e68: inc eax; lea eax, [eax - 0x147a10]; cmove edx, eax; mov eax, edx; ret; 
0x000843e8: inc eax; lea eax, [eax - 0x1589f0]; cmove edx, eax; mov eax, edx; ret; 
0x00139c85: inc eax; lea eax, [esp + 0x60]; push eax; call ecx; 
0x000f5e6d: inc eax; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010093d: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100b64: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010079a: inc eax; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0002a22e: inc eax; mov eax, dword ptr [eax + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00029f7e: inc eax; mov eax, dword ptr [edi + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a665: inc eax; mov eax, dword ptr [edi + 0x1a5c]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0009c4f5: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001010fa: inc eax; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x000ea36a: inc eax; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea41a: inc eax; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f6a5a: inc eax; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6bca: inc eax; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f785a: inc eax; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f06bc: inc eax; mov ebp, 0xc483ffff; adc byte ptr [ebx - 0x16f7dbac], cl; ret; 
0x0012413c: inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000310c7: inc eax; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ec679: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0007d556: inc eax; or al, 0x39; ret 0x870f; 
0x001629b6: inc eax; or al, 0x5f; ret; 
0x00070ae4: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0007ba74: inc eax; or al, 0x83; ret; 
0x0010ab36: inc eax; or al, 0x89; ret; 
0x000f5af5: inc eax; or byte ptr [0x100f], ah; ret; 
0x0004a069: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0007b439: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x000d7c8a: inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0011f61e: inc eax; or byte ptr [ecx], al; je 0x11f646; add esp, 0xc; ret; 
0x0002e58d: inc eax; or dword ptr [eax + eax*8 - 0x6a74928c], eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00094b2c: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c93a8: inc eax; out dx, al; call dword ptr [eax + 0x6a]; 
0x000281c6: inc eax; pop eax; ret; 
0x0009e00c: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0002f493: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x000f5428: inc eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f429: inc eax; pop ebx; pop esi; pop edi; ret; 
0x000fddb2: inc eax; pop ebx; ret; 
0x00139d49: inc eax; pop ecx; cmc; call dword ptr [eax - 0x73]; 
0x00096c53: inc eax; pop edi; pop esi; pop ebx; ret; 
0x0009d857: inc eax; pop edi; pop esi; ret; 
0x00086e0c: inc eax; pop edi; ret; 
0x0007dcd6: inc eax; pop es; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00081b20: inc eax; pop es; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0007dd26: inc eax; pop es; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001628c5: inc eax; pop es; pop edi; ret; 
0x0013ca95: inc eax; pop esp; ret; 
0x000eae31: inc eax; psubd mm7, mm7; add ecx, edx; jmp ecx; 
0x001629d6: inc eax; push cs; pop edi; ret; 
0x000ad857: inc eax; push dword ptr [eax]; call esi; 
0x00080c4e: inc eax; push dword ptr [esp + 0x14]; push ebp; call eax; 
0x00107d44: inc eax; push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0009f601: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x0013ca85: inc eax; push eax; ret; 
0x0002a252: inc eax; push ebx; mov eax, dword ptr [edi + 0x1a5c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0009fe72: inc eax; push edi; call esi; 
0x00043176: inc eax; push edx; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000dab75: inc eax; push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00162976: inc eax; push es; pop edi; ret; 
0x0013cb05: inc eax; push esp; ret; 
0x0012190c: inc eax; ret 0xfff7; 
0x0004a5a8: inc eax; ret 0xfff9; 
0x00028c2a: inc eax; ret; 
0x0012cfe5: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00123874: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x001255ae: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x00107efa: inc eax; sbb al, 0x89; ret 0x532b; 
0x0011f399: inc eax; sbb byte ptr [ebp + 0x5b0975c0], al; pop esi; pop edi; ret; 
0x00109623: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x0010a85e: inc eax; sbb byte ptr [ebx - 0x137c53b3], cl; add al, 0x6a; add eax, 0x579f918d; cli; call dword ptr [edx + 0x50]; 
0x0002f379: inc eax; shr eax, 0x1f; ret; 
0x001175ab: inc eax; sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0012a811: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000291ca: inc eax; sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x000bc761: inc eax; sub byte ptr [ecx - 0x9763], cl; jmp dword ptr [ebp - 0x75]; 
0x0010c5f8: inc eax; sub dword ptr [eax], eax; add byte ptr [ebp - 0x7c808b40], al; in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x0009e595: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0009d6aa: inc eax; test ecx, 0xff0000; je 0x9d6b4; inc eax; pop edi; ret; 
0x0002678a: inc eax; xchg esp, eax; clc; dec dword ptr [ebp - 0x6b9ff87c]; clc; call dword ptr [eax - 0x18]; 
0x000342f1: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00027a5a: inc eax; xor al, 0xe4; call dword ptr [eax - 0x73]; 
0x00029369: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00029349: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00029329: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000292a9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000292e9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00029249: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000292c9: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00029289: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00029209: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x00029269: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x00029309: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x00029229: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0002919a: inc eax; xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00130641: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x00135da9: inc eax; xor eax, 0x55890000; rcl byte ptr [eax - 0x73], 0x87; mov ah, byte ptr [eax - 6]; call dword ptr [eax + 0x6a]; 
0x000c640c: inc ebp; aam 0x83; ret; 
0x00089d60: inc ebp; aam 0x85; ror byte ptr [edi], 0x89; ret 0; 
0x000738f2: inc ebp; aam 0x89; ret 0xf889; 
0x000ef971: inc ebp; adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efcb2: inc ebp; adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efc41: inc ebp; adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0009f8cc: inc ebp; adc al, 0x85; ror byte ptr [edi], 0x84; ret 0; 
0x0002adfa: inc ebp; adc al, 0x85; ror byte ptr [edi], 0x85; ret 0; 
0x00133dc6: inc ebp; adc al, 0x89; dec ebp; mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000fa2c4: inc ebp; adc byte ptr [ebx - 0x10761], cl; dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x000e3661: inc ebp; adc byte ptr [ecx - 0x1537b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011609a: inc ebp; adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000650a8: inc ebp; adc byte ptr [ecx - 0x7ef0efbb], cl; ret 0xfff4; 
0x0011bb36: inc ebp; adc byte ptr [ecx - 0x977b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013661b: inc ebp; adc byte ptr [ecx - 0xe343], cl; dec dword ptr [ecx - 0xdf63]; dec dword ptr [ecx - 0xcf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013b03d: inc ebp; adc byte ptr [esi*2 - 0xf7d72e8], al; popal; cmc; jmp dword ptr [esi - 9]; 
0x0014b474: inc ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0001e458: inc ebp; add al, 0x39; ret; 
0x000a626a: inc ebp; add al, 0x85; sal byte ptr [eax + esi*4 - 0x77], cl; ret 0xe889; 
0x000a3549: inc ebp; add al, 0x85; sal byte ptr [ecx + esi*4 - 0x77], cl; ret 0xe889; 
0x00068129: inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xb0e9; 
0x0008a6e3: inc ebp; add byte ptr [ebp + 0x1b8d2], 0; add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x00123fea: inc ebp; add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x000327e1: inc ebp; add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0004d139: inc ebp; add byte ptr [ebx - 0x74fe4fbb], 0x50; or byte ptr [ebx - 0x7f747bbb], cl; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000b8b16: inc ebp; add byte ptr [ebx - 0x76f7db8c], cl; ret 0x44f6; 
0x00124151: inc ebp; add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x000f1bf7: inc ebp; add byte ptr [ecx - 0x17a9fbbd], cl; fmulp st(0); cli; jmp dword ptr [esi + 3]; 
0x000f3457: inc ebp; add byte ptr [ecx - 0x17a9fbbd], cl; jle 0xf3410; cli; jmp dword ptr [esi + 3]; 
0x00108ad1: inc ebp; add byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x001609fe: inc ebp; add eax, 0xf; ret; 
0x0010765c: inc ebp; add edi, esi; aad 0xc6; inc eax; jmp dword ptr [eax]; 
0x0007577b: inc ebp; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000dd3cf: inc ebp; and byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002e817: inc ebp; call 0x20006; jmp dword ptr [esi - 0x70]; 
0x000a4877: inc ebp; clc; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a489a: inc ebp; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x0009e8f0: inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000ad9d8: inc ebp; cli; call dword ptr [eax - 0x18]; pop edi; mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x000a023c: inc ebp; cli; call dword ptr [eax - 0x18]; sti; mov edi, eax; jmp dword ptr [esi - 0x70]; 
0x0012d5ac: inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x0012d540: inc ebp; cmp al, 0xff; jne 0x12d595; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x000f6a29: inc ebp; dec dword ptr [ebp - 0x17ffd98c]; mov ebx, 0x89fff245; ret; 
0x0011bd3b: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xaf7b], cl; call dword ptr [eax + 0x6a]; 
0x00109e25: inc ebp; fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x0013c3aa: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x0006a740: inc ebp; fmul dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000fd567: inc ebp; fmul dword ptr [ebx - 0x7f7247bb]; int 0x4c; cli; call dword ptr [eax - 0x18]; 
0x000fd48a: inc ebp; fmul dword ptr [ebx - 0x7f7247bb]; xor al, 0x97; cli; call dword ptr [eax - 0x18]; 
0x000d05e7: inc ebp; fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0001d67e: inc ebp; fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x00119b21: inc ebp; fmul qword ptr [ecx + 0x458ba845]; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x000e5bb5: inc ebp; idiv edi; dec dword ptr [ebp - 0x4e77b]; dec dword ptr [ecx - 0x50373]; call dword ptr [eax - 0x73]; 
0x0013514e: inc ebp; in al, 0x31; ror byte ptr [ebp - 0x72af47bb], 0x83; xor byte ptr [0x8d500000], dh; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x0012a22c: inc ebp; in al, 0x31; shr al, 0xeb; ret; 
0x0006cccc: inc ebp; in al, 0xe8; insd dword ptr es:[edi], dx; ret; 
0x00069ff2: inc ebp; in al, 0xe9; adc esi, esi; cli; jmp dword ptr [esi - 0x70]; 
0x0006bd2d: inc ebp; in al, 0xe9; add esp, ebx; cli; jmp dword ptr [esi - 0x70]; 
0x00072071: inc ebp; in al, 0xe9; bound edi, qword ptr [edi - 6]; jmp dword ptr [esi - 0x70]; 
0x0006ac59: inc ebp; in al, 0xe9; imul ebp, ebx, -6; call dword ptr [ebp + 0x57]; 
0x00069ec5: inc ebp; in al, 0xe9; in al, 0xf6; cli; jmp dword ptr [esi - 0x70]; 
0x000695ba: inc ebp; in al, 0xe9; jecxz 0x695bd; cli; jmp dword ptr [esi - 0x70]; 
0x0006c8d2: inc ebp; in al, 0xe9; jne 0x6c8a9; cli; jmp dword ptr [esi - 0x70]; 
0x000725b2: inc ebp; in al, 0xe9; jnp 0x725b2; jmp dword ptr [esi - 0x70]; 
0x0006a8b2: inc ebp; in al, 0xe9; mov bh, 0xee; cli; jmp dword ptr [esi - 0x70]; 
0x00074af2: inc ebp; in al, 0xe9; or dword ptr [eax - 6], ebx; jmp dword ptr [esi - 0x70]; 
0x000721d9: inc ebp; in al, 0xe9; push esp; jle 0x721d9; call dword ptr [ebx - 0x7d]; 
0x0006d2b2: inc ebp; in al, 0xe9; sti; leave; cli; jmp dword ptr [esi - 0x70]; 
0x0001d0e3: inc ebp; inc edi; cli; call dword ptr [eax - 1]; 
0x00148a3d: inc ebp; insd dword ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0001af9a: inc ebp; int 0x83; in al, dx; or al, 0x51; call edx; 
0x0014633d: inc ebp; lea eax, [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0013c66f: inc ebp; les eax, ptr [ebx - 0x7f72f314]; jle 0x13c6dc; cli; call dword ptr [eax - 0x18]; 
0x0013c2d5: inc ebp; les eax, ptr [ebx]; test byte ptr [eax - 0x5d528], dl; jmp eax; 
0x00029ed0: inc ebp; les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0001d0df: inc ebp; les ecx, ptr [ebp - 0x5b8ba7d]; call dword ptr [eax - 1]; 
0x0008a6a9: inc ebp; les ecx, ptr [edi]; mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x00119b6b: inc ebp; les esp, ptr [ebp - 0x77]; push es; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0002af79: inc ebp; mov ah, 0x83; ret 0x5201; 
0x0010bc76: inc ebp; mov ah, 0x83; ret; 
0x001192ed: inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x00151e9c: inc ebp; mov al, 0xfe; inc dword ptr [ecx + 0x3e660c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00133df7: inc ebp; mov al, byte ptr [0x24878d50]; xor eax, 0x8d500000; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x0002acf7: inc ebp; mov al, byte ptr [0xfffba6e9]; jmp dword ptr [esi - 0x70]; 
0x00135153: inc ebp; mov eax, 0x30838d50; xor eax, 0x8d500000; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x000fd56a: inc ebp; mov eax, 0x4ccd808d; cli; call dword ptr [eax - 0x18]; 
0x0010bd3e: inc ebp; mov eax, 0x837d7440; in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x000fd48d: inc ebp; mov eax, 0x9734808d; cli; call dword ptr [eax - 0x18]; 
0x0010c234: inc ebp; mov esp, 0; push 0x1000002; call edx; 
0x0006f5ca: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x0001b970: inc ebp; mov esp, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x0010ca7e: inc ebp; mov esp, 0x8db075ff; xor dh, 0x58; cli; call dword ptr [edx - 0x17]; 
0x0001d24c: inc ebp; mov esp, 0xfffde6e9; dec dword ptr [ebp - 0x593837d]; call dword ptr [eax - 0x73]; 
0x00119bbe: inc ebp; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x00119b27: inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x00130739: inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000fa981: inc ebp; or al, ch; pop eax; idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x000fe378: inc ebp; or byte ptr [eax - 0x7c72ebbb], cl; ret 0xfa4d; 
0x00130710: inc ebp; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00074341: inc ebp; or byte ptr [ebp - 0x16ff9f7d], cl; call dword ptr [eax - 0x73]; 
0x000f2bc1: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000eacdd: inc ebp; or byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x75]; 
0x000270a8: inc ebp; or byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00130a9c: inc ebp; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0004af93: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0xf40; 
0x0015ddca: inc ebp; pop ebx; ret; 
0x000f60c7: inc ebp; pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000fc72a: inc ebp; ret 0x4189; 
0x001166b8: inc ebp; ret 0x4389; 
0x00084a21: inc ebp; ret 0x4401; 
0x0002069e: inc ebp; ret 0x4489; 
0x0001bfa0: inc ebp; ret 0x4589; 
0x0006de92: inc ebp; ret 0x4689; 
0x000228bf: inc ebp; ret 0x548b; 
0x000d191d: inc ebp; ret 0x5e5b; 
0x0007850e: inc ebp; ret 0x689; 
0x0007b74e: inc ebp; ret 0x8189; 
0x000e4781: inc ebp; ret 0x8588; 
0x000bee81: inc ebp; ret 0x8dc3; 
0x00037b6a: inc ebp; ret 0xadeb; 
0x000fb374: inc ebp; ret 0xc084; 
0x0008a6ed: inc ebp; ret 0xc289; 
0x00108665: inc ebp; ret 0xc35b; 
0x0008163b: inc ebp; ret 0xc483; 
0x0006a378: inc ebp; ret 0xec83; 
0x0001f68e: inc ebp; ret 0xf289; 
0x000b56f7: inc ebp; ret 0xfffb; 
0x0009e7a4: inc ebp; ret; 
0x00089262: inc ebp; rol byte ptr [ebp - 0x4e76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x748d; 
0x0007388a: inc ebp; salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000f45bd: inc ebp; sar byte ptr [eax + 0x135], 1; call dword ptr gs:[0x10]; 
0x00030f5e: inc ebp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00133dcf: inc ebp; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000de5c8: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f1977: inc ebp; sub byte ptr [ebx - 0x6bf0fc02], al; ret; 
0x00119b24: inc ebp; test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0006f6d1: inc ebp; test al, 0x8b; push ebp; les ecx, ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0004d143: inc ebp; test byte ptr [ebx - 0x13f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0004d232: inc ebp; test byte ptr [ebx - 0xa343], cl; call dword ptr [ebx + 0x6a]; 
0x000bd94a: inc ebp; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x0011c805: inc ebp; xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x000de5dd: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00107e8e: inc ebx; adc al, 0x29; ret 0x728d; 
0x00072202: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x0012570c: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000737fe: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00120562: inc ebx; adc al, 0x89; ret 0xc985; 
0x00116682: inc ebx; adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x00123fd4: inc ebx; adc bh, bh; je 0x123ffd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00116685: inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x001240cf: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0014b67b: inc ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a95e: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x000ea72f: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001247bf: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0012b4f4: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00124d8f: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00083602: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00124d59: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00029cae: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001248de: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00026d6a: inc ebx; add al, 0x83; ret; 
0x000754d3: inc ebx; add al, 0x89; inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000dce96: inc ebx; add al, 0x89; ret 0xe283; 
0x000cc901: inc ebx; add al, 0xeb; mov word ptr [ebp + 0x538b0076], cs; or al, 0x83; ret; 
0x0012664c: inc ebx; add al, 0xff; je 0x126675; sbb al, 0x53; call dword ptr [eax]; 
0x0012669c: inc ebx; add al, 0xff; je 0x1266c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0011b1fe: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000cca64: inc ebx; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001398a8: inc ebx; add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x000311cc: inc ebx; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0001ce8e: inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x00028177: inc ebx; and byte ptr [esi + 0x13], dh; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x0008353e: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0x8356d; call eax; 
0x00122dd1: inc ebx; cli; call dword ptr [eax + 0x52]; 
0x00081cfc: inc ebx; cli; call dword ptr [ebx + 0x50]; 
0x000f1b32: inc ebx; cmp al, byte ptr [ebp - 0x72e8812e]; push eax; jmp dword ptr [esi - 0x7d]; 
0x000b6c12: inc ebx; idiv bh; ret; 
0x000747f9: inc ebx; inc esi; sti; jmp dword ptr [esi - 0x70]; 
0x000c693e: inc ebx; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000faffe: inc ebx; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000e1cee: inc ebx; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0010048e: inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000c5d73: inc ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x0010029e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000fffae: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000f7a0e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001002be: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000ede8e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000e1d2e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001000ce: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002de: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000edd8e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x000c68be: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000edd0e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f7e7e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000e1d4e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff29e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001240c8: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0010bc34: inc ebx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0010bad6: inc ebx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0013950d: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x001257e7: inc ebx; or al, 0x83; ret; 
0x00070125: inc ebx; or al, 1; ret 0xc8d; 
0x00098bec: inc ebx; or al, byte ptr [eax]; add ecx, 0xe9725; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bcb: inc ebx; or al, byte ptr [eax]; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098ba7: inc ebx; or al, byte ptr [eax]; add ecx, 0xe976a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b89: inc ebx; or al, byte ptr [eax]; add ecx, 0xe9788; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b6d: inc ebx; or al, byte ptr [eax]; add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012faa4: inc ebx; or bh, bh; je 0x12facd; adc al, 0x53; call dword ptr [eax]; 
0x0011cc63: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000737f8: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000cc93c: inc ebx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000754d6: inc ebx; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008441f: inc ebx; pop ebx; add al, 0x5b; cmovne eax, ecx; ret; 
0x0013eee0: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0012caa2: inc ebx; push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0012ca86: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x000c57de: inc ebx; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00034f62: inc ebx; push es; pop ebx; ret; 
0x00133289: inc ebx; pushal; cli; call dword ptr [eax + 0x6a]; 
0x00123354: inc ebx; pushal; cli; call dword ptr [eax - 0x73]; 
0x00121fe4: inc ebx; pushal; cli; call dword ptr [edi + 0x6a]; 
0x000b8c0f: inc ebx; ret 0x4c80; 
0x0002efbc: inc ebx; ret 0xec83; 
0x00084a82: inc ebx; ret; 
0x000e3d01: inc ebx; sbb al, 0x83; mov byte ptr [ecx], 0x83; ret; 
0x00083437: inc ebx; sbb al, 0x83; ret 0x3964; 
0x00085598: inc ebx; sbb al, 0x83; ret; 
0x00070122: inc ebx; sbb al, 0x89; inc ebx; or al, 1; ret 0xc8d; 
0x000e18e9: inc ebx; sbb al, 0x89; ret 0x1ae9; 
0x000e1879: inc ebx; sbb al, 0x89; ret 0x21e9; 
0x000dda7d: inc ebx; sbb al, 0x8b; adc eax, dword ptr [ebp - 0x74a48b2e]; inc edx; or byte ptr [ebp + 0x390474c0], al; ret; 
0x001166eb: inc ebx; sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x00030a51: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0007800f: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000835cf: inc ebx; sub byte ptr [ecx], al; jne 0x835a8; sub esp, 0xc; push eax; call edx; 
0x000fbfbc: inc ebx; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0003824c: inc ebx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0006e9cb: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x001640d2: inc ecx; adc eax, dword ptr [ebx + 0x490f0ce9]; ror dword ptr [ecx + 0x5f8c1cd], 0xf6; rcr dword ptr [edi], 0xf; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x0014b864: inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001324df: inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x00131adf: inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x00091116: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x00091256: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x0008cd46: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x0008ce76: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0002556c: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000fc73c: inc ecx; add al, 0x89; ret 0xe083; 
0x000d7da1: inc ecx; add al, 0x89; ret; 
0x000c7186: inc ecx; add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0005184a: inc ecx; add byte ptr [eax - 0x73], dl; xor cl, 0x33; cli; call dword ptr [eax - 0x18]; 
0x000c68f1: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0008ce47: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x0009b48a: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x0008cd27: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x000ed71b: inc ecx; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000f8761: inc ecx; add dword ptr [ebp - 0x28], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000d0281: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00095a3b: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x0009b5ae: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x00091135: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x00091265: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0008ce85: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x0009b4f8: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x0008cd55: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x00027a00: inc ecx; and byte ptr [ecx], bh; ret 0x4d0f; 
0x0012a8a3: inc ecx; call 0xc496a897; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f65fc: inc ecx; clc; pop ds; add esp, 8; pop ebx; ret; 
0x000747f4: inc ecx; cli; call dword ptr [eax - 0x18]; 
0x0007d333: inc ecx; cli; call dword ptr [eax - 0x73]; 
0x00076c20: inc ecx; cli; call dword ptr [eax - 0x75]; 
0x00027a8e: inc ecx; dec dword ptr [ecx - 0x1b743]; dec dword ptr [ecx - 0x1cb7b]; jmp dword ptr [ecx]; 
0x0014000b: inc ecx; fcomi st(5); call dword ptr [edi - 1]; 
0x0012e3ff: inc ecx; hlt; call dword ptr [edx - 0x73]; 
0x001148ab: inc ecx; inc dword ptr [ecx + 0x200f9]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x00086008: inc ecx; inc dword ptr [ecx]; ret; 
0x0009e29e: inc ecx; inc edx; test al, al; jne 0x9e298; xor eax, eax; ret; 
0x00041b8c: inc ecx; jmp dword ptr [eax]; 
0x0008c4d9: inc ecx; jmp dword ptr [esi + 0xf]; 
0x000835a3: inc ecx; lea esi, [esi]; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00073765: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x000944db: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0009b52c: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x0009437b: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000fc736: inc ecx; or byte ptr [ecx + 0x418b0446], cl; add al, 0x89; ret 0xe083; 
0x0009453b: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000e592f: inc ecx; or byte ptr [ecx - 0x51373], cl; call dword ptr [eax - 1]; 
0x0009b58c: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000943db: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00133f72: inc ecx; or byte ptr [ecx], bh; ret 0x2875; 
0x00134e8e: inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x00135305: inc ecx; or byte ptr [ecx], bh; ret 0x4575; 
0x000dbbfb: inc ecx; or byte ptr [ecx], bh; ret 0x474; 
0x00133867: inc ecx; or byte ptr [ecx], bh; ret 0x4b75; 
0x0009590a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bfb: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000942ea: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000945bb: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x00091285: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cea5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000912e5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008cf05: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000912a6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cec6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000959fb: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x00095b5b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000943bb: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0009451b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00095a7b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bdb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0009443b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0009459b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000912c5: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cee5: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0008edb7: inc ecx; pop es; pop ebx; ret; 
0x00161dc1: inc ecx; pop es; ret; 
0x00161e11: inc ecx; push cs; ret; 
0x00095a5b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bbb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0009441b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0009457b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x0008eda7: inc ecx; push es; pop ebx; ret; 
0x00161db1: inc ecx; push es; ret; 
0x0010798c: inc ecx; sbb al, 0x39; sal byte ptr [edx + 0xe], 1; mov eax, 1; ret; 
0x00126647: inc ecx; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0009f9fb: inc ecx; xchg esp, eax; clc; dec dword ptr [ebp - 0x572037e]; call dword ptr [eax - 0x73]; 
0x00107838: inc edi; adc al, 0x29; ret; 
0x0006e566: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0009686f: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x0002eb6d: inc edi; adc al, 0x89; ret; 
0x0005ed5d: inc edi; adc al, 0x8b; pop edi; sbb byte ptr [ecx], ch; ret; 
0x00096831: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000967f9: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0006e6c6: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0013aa4d: inc edi; adc byte ptr [esi - 0x3f], ah; call 0x1012e659; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x00024d14: inc edi; adc dword ptr [eax], eax; mov dword ptr [esp], esi; call ebx; 
0x0009680f: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0009684f: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0007c425: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b974d2], al; ret 0xb574; 
0x0014b28b: inc edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012efbd: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00096695: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x00160d81: inc edi; add al, 0x5f; ret; 
0x00125ac1: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000a8f32: inc edi; add al, 0x85; sal byte ptr [eax + esi*4 - 0x77], cl; ret 0xf889; 
0x000afb7b: inc edi; add al, 0x85; sal byte ptr [edi + ebx*4 - 0x77], cl; ret 0xf889; 
0x000fc8fa: inc edi; add al, 0x89; ret 0xe083; 
0x0002eb98: inc edi; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x00135466: inc edi; add al, 3; test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ecx]; ret 0x789; 
0x00096667: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00132edb: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00115d16: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000ba658: inc edi; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0016bce7: inc edi; add dword ptr [eax + 0x12], 0; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00089d5a: inc edi; add dword ptr [ecx + 0x458bc045], ecx; aam 0x85; ror byte ptr [edi], 0x89; ret 0; 
0x00096655: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0009667d: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d9d03: inc edi; and al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x00096a03: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000953b3: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x0009d092: inc edi; call ptr [esi + 0x5f]; pop ebp; ret; 
0x001611c3: inc edi; clc; pop edi; ret; 
0x001611ec: inc edi; cld; pop edi; ret; 
0x00033861: inc edi; cld; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000c197a: inc edi; cli; call dword ptr [eax + 0x53]; 
0x000c5ea9: inc edi; cli; call dword ptr [eax + 0x6a]; 
0x000c1f58: inc edi; cli; call dword ptr [eax - 0x18]; 
0x000c2b64: inc edi; cli; call dword ptr [eax - 0x73]; 
0x0001d0e4: inc edi; cli; call dword ptr [eax - 1]; 
0x000c273b: inc edi; cli; call dword ptr [ecx + 0x50]; 
0x000c4322: inc edi; cli; call dword ptr [ecx - 1]; 
0x000c438c: inc edi; cli; call dword ptr [edi - 1]; 
0x00161261: inc edi; cli; pop edi; ret; 
0x00136fb4: inc edi; cmc; jmp dword ptr [ebp - 0x5f]; 
0x00161221: inc edi; cmc; pop edi; ret; 
0x00161199: inc edi; hlt; pop edi; ret; 
0x00063bb6: inc edi; idiv edi; jmp dword ptr [eax]; 
0x00096c52: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x000c273a: inc edi; inc edi; cli; call dword ptr [ecx + 0x50]; 
0x000dec96: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000b4e30: inc edi; inc esi; cli; call dword ptr [eax + 0x55]; 
0x0006733f: inc edi; inc esp; and al, 0x60; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0011c115: inc edi; inc esp; ret; 
0x0013593b: inc edi; int1; dec dword ptr [ebx - 0x76e3dbb4]; fisubr dword ptr [ecx]; ret 0xc89; 
0x001611f1: inc edi; int1; pop edi; ret; 
0x000967e3: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0013fb05: inc edi; or al, 0x31; jmp dword ptr [ebp - 0x5f]; 
0x0009677f: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x00160df1: inc edi; or al, 0x5f; ret; 
0x001208ec: inc edi; or al, 0x81; ret; 
0x000c8611: inc edi; or al, 0xeb; mov word ptr [ebx - 0x1077d], cs; jmp dword ptr [ebp - 0x7d]; 
0x00096741: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00126255: inc edi; or byte ptr [ebp - 1], dl; jbe 0x126267; push edi; call dword ptr [eax + 8]; 
0x00126298: inc edi; or byte ptr [ebp - 1], dl; jbe 0x1262aa; push edi; call dword ptr [eax + 0x10]; 
0x000c0495: inc edi; or byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x000ea4e3: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00096709: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009671f: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0005f205: inc edi; or eax, 0x9efe083; ror byte ptr [eax - 0x7a72f2b9], 1; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x0009675f: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000969e3: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x0011aa86: inc edi; pop ebp; cli; call dword ptr [eax - 0x18]; 
0x00163028: inc edi; pop edi; pop esi; pop ebx; ret; 
0x00161201: inc edi; pop edi; ret; 
0x000966eb: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x00160bae: inc edi; pop es; pop edi; ret; 
0x000968d3: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000967c3: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00160e11: inc edi; push cs; pop edi; ret; 
0x000969c3: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x0012cfd2: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00095427: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x00160da1: inc edi; push es; pop edi; ret; 
0x00101efc: inc edi; push esi; cli; call dword ptr [eax + 0x52]; 
0x000968b3: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x0007e738: inc edi; ret 0x548b; 
0x0007eb06: inc edi; ret 0x5c89; 
0x000f4766: inc edi; ret 0x66c3; 
0x000b4735: inc edi; ret 0x960f; 
0x000815b8: inc edi; ret 0xc083; 
0x0002c3c3: inc edi; ret 0xc189; 
0x000f47aa: inc edi; ret 0xc35d; 
0x000b4a28: inc edi; ret 0xc86b; 
0x00113942: inc edi; ret 0xf983; 
0x000e7425: inc edi; ret 0xfff9; 
0x00080c08: inc edi; ret; 
0x00096989: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0010a9da: inc edi; sbb al, 0x89; ret 0x572b; 
0x000ddbbc: inc edi; sbb al, 0x89; ret 0xc085; 
0x000de699: inc edi; sbb al, 0x89; ret 0xeac0; 
0x0009693b: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000ddc39: inc edi; sbb byte ptr [ebx - 0x7cebdbb4], cl; ret; 
0x00107801: inc edi; sbb byte ptr [ecx], ch; ret 0x5250; 
0x000968f3: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00096919: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00096969: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0009d32f: inc edi; shr dword ptr [ecx], 0xf0; pop ebx; pop esi; ret; 
0x00161251: inc edi; stc; pop edi; ret; 
0x0013a53a: inc edi; std; dec dword ptr [ebp - 0x76aaff8a]; ret 0x5657; 
0x00138dbb: inc edi; std; jmp dword ptr [esi - 0x70]; 
0x00161281: inc edi; std; pop edi; ret; 
0x0009d0b2: inc edi; std; pop esi; pop edi; pop ebp; ret; 
0x00161271: inc edi; sti; pop edi; ret; 
0x001452f5: inc edi; stosb byte ptr es:[edi], al; cli; jmp dword ptr [esi - 0x70]; 
0x000dd213: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x000716e8: inc edi; sub dword ptr [ebx], 1; pop ebx; pop esi; pop edi; ret; 
0x000e4bfa: inc edi; test dword ptr [eax + 0xbfffffe], esi; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x7d]; 
0x000e4e73: inc edi; test dword ptr [eax + 0xbfffffe], esi; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x7d]; 
0x000649bc: inc edi; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x00101e21: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001601c3: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0004171c: inc edi; xor edi, edx; call dword ptr [eax - 0x73]; 
0x001326e2: inc edx; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00092ede: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x0014b714: inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00124a77: inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x001323e9: inc edx; add al, 0x5b; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x001265f1: inc edx; add al, 0x5b; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0008b0f3: inc edx; add al, 0x5b; pop esi; ret; 
0x00081d89: inc edx; add al, 0x5b; ret; 
0x00092e32: inc edx; add al, 0x5f; pop ebx; ret; 
0x0009110b: inc edx; add al, 0x5f; ret; 
0x00095b38: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000944f8: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000d01f7: inc edx; add al, 0x74; sbb ecx, dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000a36f1: inc edx; add al, 0x83; ret 0x8304; 
0x0009f0e1: inc edx; add al, 0x83; ret 0x8504; 
0x000ccbe4: inc edx; add al, 0x83; ret 0x8d04; 
0x00068541: inc edx; add al, 0x83; ret 0xb904; 
0x000f946e: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x001249d7: inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0009b4bb: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x0008cd38: inc edx; add al, 0x89; clc; pop edi; ret; 
0x001316d1: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008afdb: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00139898: inc edx; add al, 0x89; ret 0x448b; 
0x000944d8: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00094378: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x00094538: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000943d8: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0007c451: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0007e0c0: inc edx; add al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x00091108: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000958b9: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x00095b08: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x000510c2: inc edx; add al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00051058: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000510e1: inc edx; add al, 1; xor eax, eax; pop ebx; pop esi; ret; 
0x0008b006: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0008ef2a: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0x8ee51; pop ebx; ret; 
0x00153b00: inc edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0011adb2: inc edx; add dword ptr [eax + 2], edi; ret; 
0x0008b0bc: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000cc7eb: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xcc7be; xor eax, eax; pop ebx; ret; 
0x00153a80: inc edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x00095a40: inc edx; add eax, 0x5f0c428d; ret; 
0x0009b5b3: inc edx; add eax, 0x5f5bf889; ret; 
0x0008b0df: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x0008efa8: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0x8ee51; pop ebx; ret; 
0x0001ea88: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x0003141b: inc edx; add esp, 0x94; pop ebx; pop edi; ret; 
0x00103d81: inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x00103417: inc edx; and edx, 0x100; mov eax, edx; ret; 
0x00103c81: inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x00103a81: inc edx; and edx, 0x200; mov eax, edx; ret; 
0x00103b81: inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x00103881: inc edx; and edx, 0x400; mov eax, edx; ret; 
0x00103b01: inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x00103901: inc edx; and edx, 1; mov eax, edx; ret; 
0x00103981: inc edx; and edx, 2; mov eax, edx; ret; 
0x00103c01: inc edx; and edx, 4; mov eax, edx; ret; 
0x00103801: inc edx; and edx, 8; mov eax, edx; ret; 
0x001535d2: inc edx; call 0x409345cb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00145fd1: inc edx; call 0x42ea6f3d; clc; pop ebx; ret; 
0x00146611: inc edx; call 0x42ea757d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146ba1: inc edx; call 0x42ea7b0d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001470e1: inc edx; call 0x42ea804d; clc; pop ebx; ret; 
0x00108915: inc edx; call dword ptr [esi + 0x53]; 
0x00166517: inc edx; call ebx; 
0x001461c0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bb0: inc edx; clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00146616: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf90: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00145fd6: inc edx; clc; pop ebx; ret; 
0x001461c3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfaa: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x00145bb3: inc edx; cld; pop ebx; ret; 
0x00146203: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bf3: inc edx; cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146066: inc edx; cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146207: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001461e6: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0009d97e: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0009da89: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0014659c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x1465e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00146b2c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x146b74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00146706: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001460a6: inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00145bad: inc edx; hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001533a0: inc edx; hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0010ea50: inc edx; idiv bh; add esp, 0x1c; ret; 
0x00146541: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f11: inc edx; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00153882: inc edx; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00145ee1: inc edx; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0008aad1: inc edx; inc dword ptr [eax]; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000c7cf9: inc edx; inc dword ptr [ebp - 0x7cde8b2e]; rol dword ptr [ecx], 0x89; ret 0xb60f; 
0x000f42ca: inc edx; inc edx; xor eax, eax; ret; 
0x0001a756: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x16fbaf70], ecx; jmp dword ptr [ebp + 0x33]; 
0x000f87c3: inc edx; jmp dword ptr [eax]; 
0x00145d52: inc edx; jo 0x145cd6; ret 0x80; 
0x00145db9: inc edx; jo 0x145d3d; ret 0x80; 
0x00145e0b: inc edx; jo 0x145d8f; ret 0x80; 
0x00146382: inc edx; jo 0x146306; ret 0x80; 
0x001463e9: inc edx; jo 0x14636d; ret 0x80; 
0x0014643b: inc edx; jo 0x1463bf; ret 0x80; 
0x00073155: inc edx; jo 0x73152; jmp dword ptr [esi - 0x70]; 
0x0016351d: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x001465a1: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00145bed: inc edx; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146746: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001460d6: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146786: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146106: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00145bcd: inc edx; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00149f86: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf86: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001533d6: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00146686: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00092e9f: inc edx; or al, 0x5f; pop ebx; ret; 
0x000911b3: inc edx; or al, 0x5f; ret; 
0x00049c82: inc edx; or al, 0x83; les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x001398dc: inc edx; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0002c2e0: inc edx; or al, 0x83; ret 0x8908; 
0x00109e2f: inc edx; or al, 0x89; ret; 
0x00098c54: inc edx; or al, byte ptr [eax]; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c2f: inc edx; or al, byte ptr [eax]; add ecx, 0xe96e2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c05: inc edx; or al, byte ptr [eax]; add ecx, 0xe970c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001539f6: inc edx; or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x000f5b0d: inc edx; or byte ptr [0x100f], ah; ret; 
0x00081d81: inc edx; or byte ptr [0xfedabeeb], dh; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x000dda86: inc edx; or byte ptr [ebp + 0x390474c0], al; ret; 
0x00092e9c: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x0008efec: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0x8ee51; pop ebx; ret; 
0x0008f00e: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0x8ee51; pop ebx; ret; 
0x0008f04c: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0x8ee51; pop ebx; ret; 
0x00136ca5: inc edx; or byte ptr [ecx], al; ret; 
0x00092e64: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x001464e1: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145eb1: inc edx; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00153762: inc edx; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001464b1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e81: inc edx; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001536b2: inc edx; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00111ffd: inc edx; pop edx; cli; call dword ptr [eax - 0x73]; 
0x00093f7e: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0009118c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912cc: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x00095a80: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095be0: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x0009b56f: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cdac: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x0008ceec: inc edx; pop es; mov eax, edx; ret; 
0x0008b0ae: inc edx; pop es; pop ebx; pop esi; ret; 
0x00091039: inc edx; pop es; pop edi; ret; 
0x00091279: inc edx; pop es; ret; 
0x00157943: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x00156196: inc edx; pop es; sub eax, ecx; ret; 
0x00093ea6: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000911f3: inc edx; push cs; pop edi; ret; 
0x00091353: inc edx; push cs; ret; 
0x0008b049: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0008b119: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x00095a60: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bc0: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x0009b5d3: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x00094420: inc edx; push es; mov eax, edi; pop edi; ret; 
0x00094580: inc edx; push es; mov eax, edx; ret; 
0x0008b11f: inc edx; push es; pop ebx; pop esi; ret; 
0x0009113b: inc edx; push es; pop edi; ret; 
0x0009126b: inc edx; push es; ret; 
0x00157a1f: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x00156206: inc edx; push es; sub eax, ecx; ret; 
0x000efdcc: inc edx; ret 0x489; 
0x0011b1ad: inc edx; ret 0x57c3; 
0x00101348: inc edx; ret 0x8dc3; 
0x000ee2da: inc edx; ret 0xc001; 
0x001460f7: inc edx; ret 0xf66; 
0x000810c4: inc edx; ret; 
0x00113939: inc edx; rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x00145c13: inc edx; stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146227: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145c17: inc edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001461e3: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bd3: inc edx; sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00074d3d: inc edx; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0009e29f: inc edx; test al, al; jne 0x9e298; xor eax, eax; ret; 
0x00146200: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0014a040: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000f5ae2: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x00029471: inc edx; xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x000f2a6a: inc edx; xor eax, eax; ret; 
0x000dec98: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00107920: inc esi; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4689; 
0x000273d5: inc esi; adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x000756f0: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0014b324: inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00079a82: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001315c4: inc esi; add al, 0x51; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131604: inc esi; add al, 0x51; push edx; push esi; call dword ptr [eax + 8]; 
0x001315e1: inc esi; add al, 0x53; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131621: inc esi; add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x00131e20: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x000d4e31: inc esi; add al, 0x83; ret; 
0x001392f8: inc esi; add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x000fc203: inc esi; add al, 0x89; ret 0xe083; 
0x000dd217: inc esi; add al, 0x89; ret 0xe283; 
0x000fc739: inc esi; add al, 0x8b; inc ecx; add al, 0x89; ret 0xe083; 
0x0013939b: inc esi; add al, 0x8b; push ebp; add byte ptr [ecx], al; ret 0xd139; 
0x000760ec: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0009eb39: inc esi; add al, 0xe9; ret 0xfffe; 
0x00044514: inc esi; add al, 0xf; xchg edx, eax; ret; 
0x0009f50f: inc esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0009e1f4: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x000f56e0: inc esi; add esp, 0x18; pop ebx; ret; 
0x000d122d: inc esi; and al, 0x39; ret; 
0x000787fc: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x00107309: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00144fac: inc esi; and byte ptr [ebx], dh; push esi; and al, 9; ret 0x850f; 
0x00075bd9: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x000a47ee: inc esi; clc; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a47cb: inc esi; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000b49fa: inc esi; cli; call dword ptr [eax + 0x53]; 
0x000b4d96: inc esi; cli; call dword ptr [eax + 0x55]; 
0x000b88f2: inc esi; cli; call dword ptr [eax + 0x56]; 
0x000b5657: inc esi; cli; call dword ptr [eax + 0x57]; 
0x000b573a: inc esi; cli; call dword ptr [eax - 0x18]; 
0x000b40dd: inc esi; cli; call dword ptr [eax - 1]; 
0x000c693c: inc esi; cmc; inc ebx; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0012dd4a: inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0006de95: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f87c1: inc esi; inc edx; jmp dword ptr [eax]; 
0x000f8704: inc esi; int1; call dword ptr [eax - 0x73]; 
0x0006a5cd: inc esi; int1; cli; jmp dword ptr [esi - 0x70]; 
0x000d1e9e: inc esi; jb 0xd1e95; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000423c4: inc esi; jmp dword ptr [eax]; 
0x0001a757: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x16fbaf70], ecx; jmp dword ptr [ebp + 0x33]; 
0x0010bb44: inc esi; or al, 0x53; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x00079a7f: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000ed782: inc esi; or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013c239: inc esi; or bl, ch; mov ebp, eax; push ds; sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x00074f4c: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0003424f: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00079a95: inc esi; or byte ptr [ecx - 0x3fcefbba], cl; pop ebx; pop esi; pop edi; ret; 
0x000c7064: inc esi; pop eax; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000c7170: inc esi; push ebx; setne al; ret; 
0x0015cccb: inc esi; ret 0x5d5e; 
0x0007a75c: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0010a4a7: inc esi; sbb al, 0x89; ret 0x562b; 
0x000747fa: inc esi; sti; jmp dword ptr [esi - 0x70]; 
0x00079b2c: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00078076: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00068174: inc esi; sub byte ptr [eax], al; or byte ptr [eax], al; add bl, ch; ret; 
0x001609f9: inc esi; test dh, 0x40; jne 0x160a44; add eax, 0xf; ret; 
0x000949af: inc esi; test dword ptr [edx], ecx; add byte ptr [ecx + 0xed72dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00098bd0: inc esi; xchg edi, eax; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0001dd66: inc esi; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0009d2a4: inc esp; adc al, dh; ret; 
0x00073cec: inc esp; adc bh, bh; add bl, ch; ror dword ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0009d2d4: inc esp; adc byte ptr [eax], ah; ret; 
0x001259e8: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0009d2c4: inc esp; adc byte ptr [eax], dl; ret; 
0x00081631: inc esp; adc eax, dword ptr [ebx + eax*4]; ljmp 0x450f:0x1e08304; ret 0xc483; 
0x0014bd9d: inc esp; adc edi, edi; inc dword ptr [ecx + 0x43c5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011603b: inc esp; adc edi, edx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00065e02: inc esp; add ah, al; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0014b52b: inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c71d1: inc esp; add bh, bh; ret; 
0x0011b3e1: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x0009d29b: inc esp; add dh, byte ptr [eax]; ret; 
0x000672e3: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0009cedb: inc esp; add dword ptr [eax], edx; ret; 
0x0009cefb: inc esp; add dword ptr [eax], esi; ret; 
0x0009ceeb: inc esp; add dword ptr [eax], esp; ret; 
0x0011b46f: inc esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000eddeb: inc esp; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0010e099: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00030661: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x0006d191: inc esp; and al, 0x10; call dword ptr [eax + 0x1c]; 
0x0013b0e9: inc esp; and al, 0x10; call eax; 
0x0002f582: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002f501: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0002f577: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00145ab1: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00081ca7: inc esp; and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x001026e6: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x1025c0; add esp, 4; ret; 
0x00101086: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100937: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008713a: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0001fd61: inc esp; and al, 0x10; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x000fab5d: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x000bf278: inc esp; and al, 0x14; lea ecx, [esp + 0x14]; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000bf37c: inc esp; and al, 0x14; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000f6d4e: inc esp; and al, 0x14; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f702e: inc esp; and al, 0x14; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x0010093f: inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100896: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100794: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100b66: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff329: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000f4665: inc esp; and al, 0x14; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0006d8cd: inc esp; and al, 0x14; pop ebx; pop esi; pop edi; ret; 
0x00068de9: inc esp; and al, 0x14; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00022a92: inc esp; and al, 0x14; push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00060943: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000608f3: inc esp; and al, 0x18; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0010840b: inc esp; and al, 0x18; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0012bbd5: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x00062950: inc esp; and al, 0x18; call dword ptr [eax + 0x1c]; 
0x0012385d: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0010079c: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff331: inc esp; and al, 0x18; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0001b59e: inc esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x000c1990: inc esp; and al, 0x1c; call 0x139490; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0005d940: inc esp; and al, 0x1c; call dword ptr [eax + 0x1c]; 
0x0002ca1b: inc esp; and al, 0x1c; push dword ptr [eax]; call 0x9d3a0; add esp, 0x1c; ret; 
0x00131678: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x000327aa: inc esp; and al, 0x20; call eax; 
0x00031de2: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0012c43a: inc esp; and al, 0x20; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x00065bbb: inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00065b73: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0012f904: inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x001221bf: inc esp; and al, 0x24; call eax; 
0x001004ff: inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100810: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00075538: inc esp; and al, 0x24; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x00108170: inc esp; and al, 0x28; call dword ptr [eax + 0x14]; 
0x00125e3c: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00107d4c: inc esp; and al, 0x28; call eax; 
0x0010060f: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ed785: inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00116870: inc esp; and al, 0x2c; call 0x139490; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0011687c: inc esp; and al, 0x2c; call eax; 
0x0007da7e: inc esp; and al, 0x2c; push esi; call dword ptr [eax]; 
0x0007db36: inc esp; and al, 0x30; call dword ptr [eax]; 
0x000619d1: inc esp; and al, 0x33; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x000b35bb: inc esp; and al, 0x34; call eax; 
0x0007112f: inc esp; and al, 0x34; push eax; call ebx; 
0x0009fad0: inc esp; and al, 0x34; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0009f746: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000751cf: inc esp; and al, 0x34; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x000f5d02: inc esp; and al, 0x37; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000671d1: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00100590: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012a1cd: inc esp; and al, 0x3c; call eax; 
0x0010089a: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006fccb: inc esp; and al, 0x3c; push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0012f771: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e1: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f851: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b4: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f914: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f981: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa01: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x00065d0b: inc esp; and al, 0x40; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00020780: inc esp; and al, 0x40; call eax; 
0x0010093b: inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100798: inc esp; and al, 0x40; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ad855: inc esp; and al, 0x40; push dword ptr [eax]; call esi; 
0x0009f5ff: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x000672e1: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0001e4ba: inc esp; and al, 0x44; call eax; 
0x00100b6a: inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013e797: inc esp; and al, 0x44; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0012bf03: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0012bdad: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x0001dfba: inc esp; and al, 0x48; call eax; 
0x00065dfd: inc esp; and al, 0x48; movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0001fc8a: inc esp; and al, 0x4c; call eax; 
0x000c1d02: inc esp; and al, 0x4c; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x00067261: inc esp; and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0001f0df: inc esp; and al, 0x50; call eax; 
0x000b3b1e: inc esp; and al, 0x54; call eax; 
0x000ff32d: inc esp; and al, 0x54; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000e2244: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x4a; cli; call dword ptr [eax - 0x18]; 
0x000672d1: inc esp; and al, 0x58; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006660b: inc esp; and al, 0x60; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00067341: inc esp; and al, 0x60; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00139c87: inc esp; and al, 0x60; push eax; call ecx; 
0x000615fb: inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00067271: inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0009fd0a: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000a0362: inc esp; and al, 0x64; push eax; push esi; call ebx; 
0x00067281: inc esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0001f78b: inc esp; and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000221d3: inc esp; and al, 0x78; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x000de1e5: inc esp; and al, 0xc; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x000833e7: inc esp; and al, 0xc; call dword ptr [edx]; 
0x000c199c: inc esp; and al, 0xc; call eax; 
0x0002f8e8: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f396: inc esp; and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x000bee89: inc esp; and al, 0xc; mov dword ptr [eax], ebx; xor eax, eax; pop ebx; ret; 
0x00100594: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ed218: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00083331: inc esp; and al, 0xc; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x000f4cfa: inc esp; and al, 0xc; mov ebp, eax; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00101941: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0002f371: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0009c093: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00162853: inc esp; and al, 0xc; pop edi; ret; 
0x0012feb7: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x00034d64: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db7: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x000eb51f: inc esp; and al, 0xc; xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x00132a41: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0011a561: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00074871: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000291e1: inc esp; and al, 4; and eax, 0x7f; ret; 
0x0010ecd1: inc esp; and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x0010ecc1: inc esp; and al, 4; bswap eax; ret; 
0x00034181: inc esp; and al, 4; cdq; xor eax, edx; sub eax, edx; ret; 
0x00085277: inc esp; and al, 4; cmove eax, edx; add eax, 1; ret; 
0x0002fa26: inc esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x000453c2: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00129c63: inc esp; and al, 4; jmp edx; 
0x000eb377: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000eb35f: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0002f8ec: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000ffa46: inc esp; and al, 4; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5496: inc esp; and al, 4; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff54b: inc esp; and al, 4; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5556: inc esp; and al, 4; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e8: inc esp; and al, 4; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b58: inc esp; and al, 4; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e26: inc esp; and al, 4; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x00100503: inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c0701: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013063d: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00079d31: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca31: inc esp; and al, 4; mov eax, dword ptr [eax + 0x48]; ret; 
0x0013ca61: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0013ca81: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x0013cb01: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013caf1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x0013ca91: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000f5af1: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0013ca45: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000737b1: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00073781: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0007b69c: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x7b6b0; ret; 
0x0007b72c: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x7b740; ret; 
0x0007b56c: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x7b580; ret; 
0x0007b6dc: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x000c0ae1: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x00074881: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00074891: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x0010080c: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010060b: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00132a51: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0013ca71: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000ea981: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00079a11: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca21: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027441: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000ea961: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0002f6da: inc esp; and al, 4; ret; 
0x0007b335: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x00073791: inc esp; and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x000737a1: inc esp; and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0007b25f: inc esp; and al, 8; call edx; 
0x0009dc22: inc esp; and al, 8; cld; pop edi; ret; 
0x0007b331: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0002fb70: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f6d6: inc esp; and al, 8; fld qword ptr [esp + 4]; ret; 
0x0007b4f7: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000bf384: inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000bf50e: inc esp; and al, 8; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000f45f7: inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00100613: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010058c: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00119612: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0014c597: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00069b48: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000f799a: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x00029381: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029391: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00030bfa: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x000ea938: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0006e97d: inc esp; and al, 8; pop ebx; add eax, ecx; ret; 
0x001461c6: inc esp; and al, 8; pop ebx; ret; 
0x0009dbf8: inc esp; and al, 8; pop edi; ret; 
0x00098c73: inc esp; and al, 8; pop esi; ret; 
0x000293c5: inc esp; and al, 8; ret; 
0x0012e231: inc esp; and al, 8; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x000e5e03: inc esp; and eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001e4bc: inc esp; call eax; 
0x000ce068: inc esp; cdq; add al, 0x39; ret 0xd67f; 
0x000a4950: inc esp; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000a49b9: inc esp; clc; dec dword ptr [ebx - 0x72e3dbac]; xor byte ptr [eax + 0x73], 0xfa; call dword ptr [eax - 0x73]; 
0x00083098: inc esp; cli; call dword ptr [eax + 0x56]; 
0x00115830: inc esp; cli; call dword ptr [eax + 0x6a]; 
0x00083254: inc esp; cli; call dword ptr [eax - 0x73]; 
0x0008286e: inc esp; cli; call dword ptr [eax - 1]; 
0x00082e4b: inc esp; cli; call dword ptr [ebp + 0x50]; 
0x00082cdc: inc esp; cli; call dword ptr [ebp + 0x52]; 
0x0008b4f0: inc esp; cli; call dword ptr [edi + 0x55]; 
0x000828de: inc esp; cli; call dword ptr [esi + 0x50]; 
0x0008321f: inc esp; cli; call dword ptr [esi + 0x6a]; 
0x0009cbc4: inc esp; cmp al, dh; pop edi; ret; 
0x0009cbf4: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x0009cbe4: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000c4383: inc esp; fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [edi + 0x47], bh; cli; call dword ptr [edi - 1]; 
0x000b6be0: inc esp; idiv bh; ret; 
0x00039b0b: inc esp; jl 0x39b32; adc byte ptr [ecx - 0x7c2ed628], cl; ret 0xd31d; 
0x000344d8: inc esp; mov ch, 6; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00100b6c: inc esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001398da: inc esp; mov eax, dword ptr [edx + 0xc]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x000f4dde: inc esp; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f544e: inc esp; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55ce: inc esp; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ff9fe: inc esp; mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5e69: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00028c28: inc esp; nop; inc eax; ret; 
0x000668f7: inc esp; or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0006669d: inc esp; or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00060b2c: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f75: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x0006163e: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a6: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a6e: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0009cea4: inc esp; or byte ptr [eax], ah; ret; 
0x0009ceb4: inc esp; or byte ptr [eax], dh; ret; 
0x0009ce94: inc esp; or byte ptr [eax], dl; ret; 
0x0005ca45: inc esp; or eax, dword ptr [eax]; add byte ptr [ebp - 0x5cb0279], cl; call dword ptr [eax - 0x73]; 
0x0014efce: inc esp; pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eeae: inc esp; pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000296c0: inc esp; pop es; add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x58f4f7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0014ee1e: inc esp; pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0014f05e: inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x0014ef3e: inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0014f5fe: inc esp; pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0014f44e: inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f32e: inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0014f20e: inc esp; pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x0014f29e: inc esp; pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0014f4de: inc esp; pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0014f3be: inc esp; pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0014f17e: inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f56e: inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f0ee: inc esp; pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00044c6f: inc esp; popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0009bfd2: inc esp; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00082a4e: inc esp; push ds; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010b79e: inc esp; push ds; add dword ptr [ebx - 0xc363], ecx; dec dword ptr [ecx - 0xcb73]; call dword ptr [eax - 0x77]; 
0x0013e799: inc esp; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00108660: inc esp; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x0006190a: inc esp; push esi; call dword ptr [eax + 0x1c]; 
0x000613b7: inc esp; push esi; call dword ptr [ebx + 0x1c]; 
0x0012d595: inc esp; push esi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012a1ca: inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000ada12: inc esp; ret 0x108b; 
0x00031023: inc esp; ret 0x4489; 
0x001148b4: inc esp; ret 0x4589; 
0x000b90eb: inc esp; ret 0x4789; 
0x00038727: inc esp; ret 0x489; 
0x000fd0d2: inc esp; ret 0x5056; 
0x000c709b: inc esp; ret 0x66c3; 
0x001212e2: inc esp; ret 0x708b; 
0x00107691: inc esp; ret 0x7789; 
0x000d4711: inc esp; ret 0x804; 
0x00081af9: inc esp; ret 0x8389; 
0x001090ba: inc esp; ret 0x87eb; 
0x000f2217: inc esp; ret 0x8966; 
0x000c27f9: inc esp; ret 0x8d50; 
0x0008791a: inc esp; ret 0x8dc3; 
0x00082550: inc esp; ret 0x938b; 
0x00102b8d: inc esp; ret 0x958d; 
0x000c6f2d: inc esp; ret 0xb8c3; 
0x0008527b: inc esp; ret 0xc083; 
0x000c5806: inc esp; ret 0xc35b; 
0x00037b19: inc esp; ret 0xc483; 
0x00041f1b: inc esp; ret 0xe1c1; 
0x000c272f: inc esp; ret 0xec83; 
0x0009f7fb: inc esp; ret 0xff50; 
0x0009fc01: inc esp; ret 0xff65; 
0x0001ca90: inc esp; ret; 
0x000432e4: inc esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00109740: inc esp; stc; dec dword ptr [ebx - 0x7cdfdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x000cd1e4: inc esp; sti; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00084ba0: inc esp; test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x0014c83e: inc esp; xor al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149d9d: inc esp; xor edi, edi; inc dword ptr [ecx + 0x459dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00067c92: insb byte ptr es:[edi], dx; add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x000ed6b0: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012fc0f: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x000e635e: insb byte ptr es:[edi], dx; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00101781: insb byte ptr es:[edi], dx; and al, 0x20; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000b3453: insb byte ptr es:[edi], dx; and al, 0x6c; push ebp; call eax; 
0x000bef34: insb byte ptr es:[edi], dx; and al, 0xc; push ebp; push ebx; call eax; 
0x0002f586: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002f505: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0002f57b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0002f39a: insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00082b00: insb byte ptr es:[edi], dx; call eax; 
0x00021439: insb byte ptr es:[edi], dx; call esi; 
0x0001b79e: insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x0001b78e: insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x0001bf3a: insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x000a4853: insb byte ptr es:[edi], dx; idiv bh; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000637b8: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x000632eb: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx - 0x7d]; 
0x000632eb: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx - 0x7d]; ret; 
0x00064815: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x000646c5: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x00065139: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x000638c2: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x00065007: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00065166: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006467b: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00065071: insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x89f73]; call dword ptr [ecx + 0x6a]; 
0x00065758: insb byte ptr es:[edi], dx; idiv edi; inc dword ptr [ebx - 0x7f72f314]; je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x00063810: insb byte ptr es:[edi], dx; idiv edi; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x00050d88: insb byte ptr es:[edi], dx; je 0x50d85; call dword ptr [eax - 0x18]; 
0x00148896: insb byte ptr es:[edi], dx; jo 0x14889d; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0011f2af: insb byte ptr es:[edi], dx; lahf; cli; call dword ptr [eax - 0x73]; 
0x00043964: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0001f0dd: insb byte ptr es:[edi], dx; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000a2865: insb byte ptr es:[edi], dx; mov ebp, 0x2444c704; adc al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7e377626], cl; ret 0; 
0x00043859: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00132159: insb byte ptr es:[edi], dx; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000e834d: insb byte ptr es:[edi], dx; or al, 0xfa; inc dword ptr [ecx]; retf; jmp ebx; 
0x0001f3fd: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0001b0d8: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00021435: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x0001f78d: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00082c80: insb byte ptr es:[edi], dx; push ebp; call eax; 
0x000b35b7: insb byte ptr es:[edi], dx; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c7ec5: insb byte ptr es:[edi], dx; sub ebx, dword ptr gs:[0x14]; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca405: insb byte ptr es:[edi], dx; sub ebx, dword ptr gs:[0x14]; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df425: insb byte ptr es:[edi], dx; sub ebx, dword ptr gs:[0x14]; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff35: insb byte ptr es:[edi], dx; sub ebx, dword ptr gs:[0x14]; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb785: insb byte ptr es:[edi], dx; sub ebx, dword ptr gs:[0x14]; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x001013ab: insb byte ptr es:[edi], dx; sub ecx, dword ptr gs:[0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x000d1c3f: insb byte ptr es:[edi], dx; syscall; 
0x000e1345: insb byte ptr es:[edi], dx; xchg edx, eax; cli; call dword ptr [eax - 0x73]; 
0x0012910a: insb byte ptr es:[edi], dx; xor eax, dword ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043822: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0009be88: insd dword ptr es:[edi], dx; adc byte ptr [edx], cl; add byte ptr [ecx + 0xe6508c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00148a3e: insd dword ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cd74: insd dword ptr es:[edi], dx; add edi, edi; inc dword ptr [ecx + 0x42f08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001467eb: insd dword ptr es:[edi], dx; cld; jmp dword ptr [esi - 0x70]; 
0x000204bb: insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x000232aa: insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x00073437: insd dword ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x70]; 
0x00149674: insd dword ptr es:[edi], dx; cmp bh, bh; inc dword ptr [ecx + 0x46108c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000e9f02: insd dword ptr es:[edi], dx; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x0012a902: insd dword ptr es:[edi], dx; hlt; call dword ptr [eax - 0x73]; 
0x0014d874: insd dword ptr es:[edi], dx; idiv dh; inc dword ptr [ecx + 0x42408c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00098b88: insd dword ptr es:[edi], dx; inc ebx; or al, byte ptr [eax]; add ecx, 0xe9788; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0014eb74: insd dword ptr es:[edi], dx; jecxz 0x14eb75; inc dword ptr [ecx + 0x41388c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009c952: insd dword ptr es:[edi], dx; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001123ff: insd dword ptr es:[edi], dx; pop edx; cli; call dword ptr [eax - 0x18]; 
0x00027ec7: insd dword ptr es:[edi], dx; push cs; add byte ptr [ebx - 0x1bf73], cl; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x0006cccf: insd dword ptr es:[edi], dx; ret; 
0x00111bef: insd dword ptr es:[edi], dx; sar bh, 1; jmp dword ptr [esi - 0x70]; 
0x0014b674: insd dword ptr es:[edi], dx; sbb bh, bh; inc dword ptr [ecx + 0x44388c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000835ea: insd dword ptr es:[edi], dx; stc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000c6da6: insd dword ptr es:[edi], dx; std; inc dword ptr [ebx - 0x72afef3c]; sbb dword ptr [esi], 0x48; cli; call dword ptr [eax + 0x68]; 
0x00094888: insd dword ptr es:[edi], dx; xchg byte ptr [edx], cl; add byte ptr [ecx + 0xed7d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c668b: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00126fcd: int 0x29; retf 0x5552; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000b88f1: int 0x46; cli; call dword ptr [eax + 0x56]; 
0x000fd56e: int 0x4c; cli; call dword ptr [eax - 0x18]; 
0x000a0aa4: int 0x5f; mov eax, ebp; pop ebp; ret; 
0x00030ec5: int 0x80; 
0x000c5d66: int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0001af9b: int 0x83; in al, dx; or al, 0x51; call edx; 
0x0006d298: int 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033cfa: int 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x001640db: int 0xc1; clc; add eax, 0xf1fc1f6; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x00100a98: int 0xe8; ret 0xe1; 
0x00136598: int 0xe8; ret 0xfd86; 
0x000e5cc7: int 0xf4; jmp dword ptr [ebp - 0x5f]; 
0x00039a6f: int 0xf; dec edi; ret 0xc801; 
0x0007ed8b: int 0xff; jmp dword ptr [esi - 0x70]; 
0x000c1f3e: int 4; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax], edx; xchg ecx, eax; cli; call dword ptr [eax - 0x73]; 
0x000c0114: int 7; add byte ptr [ecx + 0x123ee9c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0006a46b: int1; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x6a47e; push esi; call dword ptr [ebx + 0x1c]; 
0x0008790e: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0010296e: int1; call dword ptr [eax + 0x6a]; 
0x00101a39: int1; call dword ptr [eax - 0x18]; 
0x000f8705: int1; call dword ptr [eax - 0x73]; 
0x0007bdd4: int1; call dword ptr [edx + 0x51]; 
0x0007bdd4: int1; call dword ptr [edx + 0x51]; push eax; call 0x9dc80; add esp, 0x1c; ret; 
0x000c07d6: int1; call dword ptr gs:[0x10]; 
0x000ffd03: int1; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0006a5ce: int1; cli; jmp dword ptr [esi - 0x70]; 
0x0014bf11: int1; cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011e8c8: int1; das; cli; call dword ptr [eax + 0x51]; 
0x00102b84: int1; dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x000ffb28: int1; dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff1b4; ret; 
0x00109958: int1; dec dword ptr [ebx - 0x72dbdb84]; xchg eax, edi; cdq; cli; call dword ptr [eax - 0x73]; 
0x00109912: int1; dec dword ptr [ebx - 0x72dbdb84]; xchg esp, ebp; cdq; cli; call dword ptr [eax - 0x73]; 
0x0013593c: int1; dec dword ptr [ebx - 0x76e3dbb4]; fisubr dword ptr [ecx]; ret 0xc89; 
0x001078ae: int1; dec dword ptr [ecx + 0x30e82434]; sbb cl, dh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00100a93: int1; dec dword ptr [ecx - 0x1732143d]; ret 0xe1; 
0x0011da36: int1; inc dword ptr [ebx + 0x1eba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f1ef8], al; ret 0x4589; 
0x0011d9c6: int1; inc dword ptr [ebx + 0x5ba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f05f8], al; ret 0x4589; 
0x000fc0c0: int1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001078b6: int1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011da0e: int1; inc dword ptr [ebx + 0xfba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x0013d039: int1; inc dword ptr [ebx - 0x247aef3c]; jne 0x13d050; add esp, 8; pop ebx; ret; 
0x0013d079: int1; inc dword ptr [ebx - 0x247aef3c]; jne 0x13d090; add esp, 8; pop ebx; ret; 
0x0010c1d5: int1; inc dword ptr [ebx - 0x72afef3c]; xchg dword ptr [edi], ecx; pop eax; cli; call dword ptr [ebx + 0x50]; 
0x000faffd: int1; inc ebx; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010048d: int1; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0010029d: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000fffad: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001002bd: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00098c04: int1; inc edx; or al, byte ptr [eax]; add ecx, 0xe970c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b164b: int1; ja 0xb1645; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x0008aa4b: int1; jecxz 0x8aa47; dec dword ptr [ebp - 0x5738b70]; call dword ptr [edx - 0x73]; 
0x001043da: int1; jmp dword ptr [ebp - 0x77]; 
0x000fd254: int1; jmp dword ptr [esi - 0x70]; 
0x000ba850: int1; jmp ecx; 
0x00146147: int1; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00051148: int1; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008ac66: int1; mov eax, edx; pop ebx; ret; 
0x000310c9: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000e2f56: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0008ad5e: int1; pop ebx; pop esi; ret; 
0x000439fe: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001611f2: int1; pop edi; ret; 
0x001177b5: int1; pop esp; cli; call dword ptr [eax - 0x18]; 
0x0001fa77: int1; push cs; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x000ff3ed: int1; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x000faffb: int1; push ecx; inc ebx; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000a4f98: int1; stc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x001601e7: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00031b1e: int1; xor eax, eax; ret; 
0x0005184f: int1; xor edi, edx; call dword ptr [eax - 0x18]; 
0x00050a7d: int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x00035359: int1; xor edx, edx; mov eax, edi; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0001c5cb: into; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call edi; 
0x000b56ee: into; add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; inc ebp; ret 0xfffb; 
0x000ecd66: into; add byte ptr [ebp - 0x74cb8a40], 0x4c; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecfa6: into; add byte ptr [ebp - 0x74cb8a40], 0x5c; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001016f8: into; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000437b3: into; add eax, 0x1cc48300; ret; 
0x0003160c: into; add edi, esi; ret 0; 
0x00095eb3: into; bsf edx, edx; call 0x13cef9; add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009c04b: into; call 0x13cef9; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c02b: into; call 0x13cef9; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c00e: into; call 0x13cef9; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960ab: into; call 0x13cef9; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009608b: into; call 0x13cef9; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009606e: into; call 0x13cef9; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a6b: into; call 0x13cef9; add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a4b: into; call 0x13cef9; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a2e: into; call 0x13cef9; add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002cf23: into; call dword ptr [eax]; 
0x000e1da8: into; call dword ptr gs:[0x10]; 
0x0006cdf8: into; cli; jmp dword ptr [esi - 0x70]; 
0x0009d8a3: into; jmp ebx; 
0x0009e1f0: into; jne 0x9e1f6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0001d26e: into; mov ebx, 0x838d0000; jl 0x1d2e2; cli; call dword ptr [eax - 0x73]; 
0x000930cd: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0013e98d: iretd; add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0014f32a: iretd; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f3ba: iretd; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f44a: iretd; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f4da: iretd; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f56a: iretd; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f5fa: iretd; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ee1a: iretd; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eeaa: iretd; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ef3a: iretd; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014efca: iretd; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f05a: iretd; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f0ea: iretd; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f17a: iretd; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f20a: iretd; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f29a: iretd; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009606c: iretd; add esi, ecx; call 0x13cef9; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a2c: iretd; add esi, ecx; call 0x13cef9; add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014d7b3: iretd; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00115d86: iretd; call dword ptr [eax - 0x18]; 
0x0014ccb3: iretd; das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014af33: iretd; dec edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9a8d: iretd; fdivp st(7); call dword ptr [edi + 0x57]; 
0x000ccd6c: iretd; jmp edi; 
0x000716f2: iretd; mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x0006125d: iretd; or byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x001499b3: iretd; pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016bbd0: iretd; pop ebx; pop esi; pop edi; ret; 
0x00113b36: iretd; pop edx; cli; call dword ptr [esi + 0x6a]; 
0x001246b8: iretd; pushal; cli; call dword ptr [eax - 0x18]; 
0x00074876: iretd; ret; 
0x00131d4b: iretd; std; jmp dword ptr [esi - 0x70]; 
0x000515af: iretd; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x001012f9: ja 0x101305; movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x001015a5: ja 0x1015b0; pop ebx; pop esi; pop edi; ret; 
0x00101687: ja 0x101690; pop ebx; pop esi; pop edi; ret; 
0x0010179c: ja 0x1017a8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00101853: ja 0x101860; pop ebx; pop esi; pop edi; ret; 
0x00101897: ja 0x1018a0; pop ebx; pop esi; pop edi; ret; 
0x0010da07: ja 0x10da10; add esp, 8; pop ebx; ret; 
0x0010d9f4: ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010eb8c: ja 0x10eb95; sar eax, 5; add esp, 0xc; ret; 
0x0011b045: ja 0x11b034; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0011b8fc: ja 0x11b8f1; call dword ptr [eax - 0x73]; 
0x0011b9bc: ja 0x11b9b1; call dword ptr [eax - 0x73]; 
0x00126714: ja 0x126700; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x0012c433: ja 0x12c575; mov eax, dword ptr [esp + 0x20]; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x0012c87f: ja 0x12c890; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x0012efaf: ja 0x12efb5; push ecx; push edi; call dword ptr [esi + 8]; 
0x001350fc: ja 0x135161; cli; call dword ptr [eax - 0x18]; 
0x0014325f: ja 0x143268; pop ebx; ret; 
0x00143f69: ja 0x143f5b; call dword ptr [eax + 0x6a]; 
0x00145597: ja 0x1455a0; pop ebx; pop esi; pop edi; ret; 
0x00145667: ja 0x145670; pop ebx; pop esi; pop edi; ret; 
0x00146d8b: ja 0x146d14; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0014ed8b: ja 0x14ed9e; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00156255: ja 0x156259; neg eax; ret; 
0x00157a95: ja 0x157a99; neg eax; pop ebp; ret; 
0x0015a145: ja 0x15a149; neg eax; add esp, 4; pop ebx; ret; 
0x0015c9d5: ja 0x15c9d9; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0015ce95: ja 0x15ce99; neg eax; ret; 
0x0015d185: ja 0x15d189; neg eax; pop ebp; ret; 
0x0015d345: ja 0x15d349; neg eax; ret; 
0x0015de2c: ja 0x15de30; neg eax; ret; 
0x0015e1a5: ja 0x15e1a9; neg eax; pop edi; pop ebx; ret; 
0x0015e705: ja 0x15e709; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0015f0ad: ja 0x15f0b1; neg eax; ret; 
0x00160726: ja 0x16072a; neg eax; ret; 
0x0016630e: ja 0x1667dc; mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x0013c2ce: ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x0001b711: ja 0x1b787; mov ecx, dword ptr [esp + 4]; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x00025f01: ja 0x25f13; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 0x18], ecx; call eax; 
0x0002df7b: ja 0x2e208; movzx ecx, cl; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x00030eca: ja 0x30ecc; add byte ptr [eax], al; int 0x80; 
0x0003118b: ja 0x31190; pop ebx; ret; 
0x000311cb: ja 0x31210; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003529e: ja 0x352f0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00036c48: ja 0x36bcd; ret 0x3901; 
0x0004172a: ja 0x4172a; dec dword ptr [ebx - 0x976b]; dec dword ptr [ebp - 0x58c137e]; call dword ptr [eax + 0x68]; 
0x0004d2f7: ja 0x4d2e0; mov eax, ecx; pop ebx; pop esi; ret; 
0x00050f4a: ja 0x50f50; pop ebx; ret; 
0x00050f83: ja 0x50f90; pop ebx; pop esi; ret; 
0x00052416: ja 0x51e10; mov edi, dword ptr [ebp - 0x59c]; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x00052498: ja 0x51e10; mov edi, dword ptr [ebp - 0x59c]; movzx eax, bl; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x000584f1: ja 0x58ab0; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x00058a91: ja 0x59470; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x00059379: ja 0x597d6; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058978: ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000668eb: ja 0x65949; mov ecx, dword ptr [esp + 0x48]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x00067e25: ja 0x67e50; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x00067ec1: ja 0x67ee8; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x6257c]; add ecx, ebx; jmp ecx; 
0x0006e97a: ja 0x6e970; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x00076ba9: ja 0x76be0; movzx eax, al; mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x00076fc5: ja 0x76fe5; sti; dec dword ptr [ebp - 0x583ff7b]; call dword ptr [eax - 0x73]; 
0x00078f0a: ja 0x78f00; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x00081abb: ja 0x81b08; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x0008321e: ja 0x83264; cli; call dword ptr [esi + 0x6a]; 
0x00087371: ja 0x87350; pop ebx; pop esi; pop edi; ret; 
0x0008afbf: ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b07f: ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0009c6e2: ja 0x9c6f0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0009e76b: ja 0x9e8da; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x000b164c: ja 0xb1645; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b1671: ja 0xb166a; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b4036: ja 0xb4040; pop ebx; ret; 
0x000b414e: ja 0xb4160; pop ebx; ret; 
0x000b4308: ja 0xb4310; pop ebx; ret; 
0x000ba8e7: ja 0xba900; mov ebx, dword ptr [esp + 0x14]; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x000ba83e: ja 0xba904; mov esi, dword ptr [esp + 0x14]; mov ecx, dword ptr [esi + eax*4 - 0x6135c]; add ecx, esi; jmp ecx; 
0x000bc90e: ja 0xbca18; mov eax, dword ptr [ebp - 0x94]; add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x000bc9cf: ja 0xbcb20; mov ecx, dword ptr [ebp - 0x94]; add ecx, dword ptr [ecx + eax*4 - 0x60bac]; jmp ecx; 
0x000bf22c: ja 0xbf2a0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000bf324: ja 0xbf3a8; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000c0948: ja 0xc0950; pop ebx; ret; 
0x000c5ad2: ja 0xc5b10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c768e: ja 0xc7808; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x000c7b13: ja 0xc7c62; mov ecx, dword ptr [edx + eax*4 - 0x60590]; add ecx, edx; jmp ecx; 
0x000ccd5b: ja 0xccfda; mov ecx, dword ptr [ebp - 0x34]; mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x000cd1db: ja 0xcd200; mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x000ceba8: ja 0xcebd0; mov edi, dword ptr [esp + 0x18]; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x000d19e3: ja 0xd19d9; dec dword ptr [ecx - 0x517dbcc]; jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d67df: ja 0xd6764; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000e1e0e: ja 0xe1e18; pop ebx; ret; 
0x000e1e53: ja 0xe1e5b; setne al; movzx eax, al; ret; 
0x000e7c9b: ja 0xe7e14; mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x000e88c1: ja 0xe800c; mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x000e7ffb: ja 0xe800c; mov esi, dword ptr [esp + 0xc]; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x000e8341: ja 0xe8368; mov ecx, dword ptr [esp + 0xc]; movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x000eb35c: ja 0xeb36a; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000eb436: ja 0xeb428; mov eax, ecx; pop ebx; ret; 
0x000ec09c: ja 0xec0a0; pop ebx; ret; 
0x000ec3ba: ja 0xec3c0; pop ebx; ret; 
0x000ec3ea: ja 0xec3f0; pop ebx; ret; 
0x000ec41a: ja 0xec420; pop ebx; ret; 
0x000ec70e: ja 0xec728; pop ebx; ret; 
0x000ec763: ja 0xec780; pop ebx; pop esi; ret; 
0x000ec8df: ja 0xec8e8; pop ebx; ret; 
0x000ec90f: ja 0xec918; pop ebx; ret; 
0x000ecb8e: ja 0xecbb8; pop ebx; ret; 
0x000ecc63: ja 0xeccd0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ecd86: ja 0xecdf0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ecea2: ja 0xecf08; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ecfc5: ja 0xed028; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ed0ce: ja 0xed120; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ed16e: ja 0xed1c0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ed31a: ja 0xed320; pop ebx; ret; 
0x000edc96: ja 0xedcd0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000eddea: ja 0xede30; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f2a62: ja 0xf2a70; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f3d6d: ja 0xf3dc2; bnd jmp dword ptr [ebp - 0x77]; 
0x000f42c2: ja 0xf42d0; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000f445e: ja 0xf44b0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f5686: ja 0xf5690; pop ebx; ret; 
0x000f5818: ja 0xf5830; add esp, 4; pop ebx; pop esi; ret; 
0x000f587b: ja 0xf5890; add esp, 4; pop ebx; pop esi; ret; 
0x000f58d7: ja 0xf58f0; add esp, 4; pop ebx; pop esi; ret; 
0x000f593a: ja 0xf5950; add esp, 4; pop ebx; pop esi; ret; 
0x000f597e: ja 0xf5988; pop ebx; ret; 
0x000f59b8: ja 0xf59c0; pop ebx; pop esi; pop edi; ret; 
0x000f59ee: ja 0xf59f8; pop ebx; ret; 
0x000f5fd0: ja 0xf6020; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f620a: ja 0xf6210; pop ebx; ret; 
0x000f623a: ja 0xf6240; pop ebx; ret; 
0x000f630f: ja 0xf6318; pop ebx; pop esi; ret; 
0x000f633f: ja 0xf6348; pop ebx; pop esi; ret; 
0x000f6736: ja 0xf6740; xor eax, eax; pop ebx; ret; 
0x000f686e: ja 0xf68c0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f690e: ja 0xf6960; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f7a56: ja 0xf7a90; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f7af6: ja 0xf7b30; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f7b90: ja 0xf7b98; pop ebx; ret; 
0x000f910a: ja 0xf9110; pop ebx; ret; 
0x000f92e2: ja 0xf9300; pop ebx; ret; 
0x000f932a: ja 0xf9330; pop ebx; ret; 
0x000f935a: ja 0xf9360; pop ebx; ret; 
0x000f938e: ja 0xf9398; pop ebx; ret; 
0x000f93be: ja 0xf93c8; pop ebx; ret; 
0x000fad39: ja 0xfad45; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fae6e: ja 0xfaec0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fbbd5: ja 0xfbbd8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fd232: ja 0xfd250; pop ebx; ret; 
0x000ff483: ja 0xff490; pop ebx; pop esi; ret; 
0x000ff5c4: ja 0xff5d0; pop ebx; pop esi; ret; 
0x000fface: ja 0xffb20; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ffbf8: ja 0xffc10; pop ebx; pop esi; ret; 
0x000ffcf8: ja 0xffd00; pop ebx; pop esi; pop edi; ret; 
0x000ffd3d: ja 0xffd48; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ffd8d: ja 0xffd98; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001023ba: jae 0x1023c7; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x00107ec9: jae 0x107ea0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b599: jae 0x10b5cb; call eax; 
0x0010c475: jae 0x10c480; cmp dword ptr [eax + 4], ecx; jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x0010e3b2: jae 0x10e3a9; jmp dword ptr [esi - 0x70]; 
0x0011a769: jae 0x11a77a; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00124cae: jae 0x124cb8; push esi; call dword ptr [ebx + 0xc]; 
0x0012ca89: jae 0x12cad3; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0013187c: jae 0x1318af; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0013196c: jae 0x13199f; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00139448: jae 0x139430; mov eax, 1; pop ebx; ret; 
0x0013b0e5: jae 0x13b0eb; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0013e78d: jae 0x13eba0; sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00145b86: jae 0x145b87; inc dword ptr [ecx + 0x491f7c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145d60: jae 0x145d20; call 0x13cee5; add ebx, 0x49099; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146276: jae 0x146290; call 0x13cee5; add ebx, 0x48e03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146390: jae 0x146350; call 0x13cee5; add ebx, 0x48ce9; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001468f6: jae 0x146910; call 0x13cee5; add ebx, 0x48a03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146d7e: jae 0x146e20; call 0x13cee5; add ebx, 0x48777; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00146e46: jae 0x146e60; call 0x13cee5; add ebx, 0x48733; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0015d699: jae 0x15d6a2; add byte ptr [eax], al; pop ebx; ret; 
0x00160ba9: jae 0x160bad; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0016bf42: jae 0x16bf51; lea esi, [esi]; call dword ptr [esi]; 
0x0003115d: jae 0x1aff0; ret; 
0x0004383c: jae 0x1aff0; xor eax, eax; ret; 
0x0001bccc: jae 0x1bcd2; call esi; 
0x0001bd2e: jae 0x1bd34; call esi; 
0x00031b94: jae 0x31b88; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00031bf4: jae 0x31be8; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00033957: jae 0x33969; lea esi, [esi]; call dword ptr [esi]; 
0x00034156: jae 0x3415c; call eax; 
0x00035356: jae 0x353a0; mov ecx, esi; xor edx, edx; mov eax, edi; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0003823a: jae 0x38236; call dword ptr [eax + 0x68]; 
0x0003825d: jae 0x38259; call dword ptr [eax + 0x68]; 
0x00039a88: jae 0x39a84; call dword ptr [eax - 0x73]; 
0x0003a66f: jae 0x3a66b; call dword ptr [eax - 0x73]; 
0x0003a692: jae 0x3a68e; call dword ptr [eax - 0x73]; 
0x0003a6b5: jae 0x3a6b1; call dword ptr [eax - 0x73]; 
0x0003a6d6: jae 0x3a6d2; call dword ptr [eax - 0x73]; 
0x0003a6f9: jae 0x3a6f5; call dword ptr [eax - 0x73]; 
0x0003a71c: jae 0x3a718; call dword ptr [eax - 0x73]; 
0x0003a73f: jae 0x3a73b; call dword ptr [eax - 0x73]; 
0x0003a762: jae 0x3a75e; call dword ptr [eax - 0x73]; 
0x0003a797: jae 0x3a793; call dword ptr [eax - 0x73]; 
0x0003a7ba: jae 0x3a7b6; call dword ptr [eax - 0x73]; 
0x0003a7cd: jae 0x3a7c9; call dword ptr [eax - 0x18]; 
0x0003a7e8: jae 0x3a7e4; call dword ptr [eax - 0x73]; 
0x0003a848: jae 0x3a844; call dword ptr [eax - 0x73]; 
0x0003a86b: jae 0x3a867; call dword ptr [eax - 0x73]; 
0x0003a87e: jae 0x3a87a; call dword ptr [eax - 0x18]; 
0x0003a88e: jae 0x3a88a; call dword ptr [eax - 0x73]; 
0x0003b18a: jae 0x3b186; call dword ptr [eax + 0x68]; 
0x0003b1ad: jae 0x3b1a9; call dword ptr [eax + 0x68]; 
0x0003ca8d: jae 0x3ca89; call dword ptr [eax - 0x73]; 
0x0003d5cf: jae 0x3d5cb; call dword ptr [eax - 0x73]; 
0x0003d5f2: jae 0x3d5ee; call dword ptr [eax - 0x73]; 
0x0003d61c: jae 0x3d618; call dword ptr [eax - 0x73]; 
0x0003d63f: jae 0x3d63b; call dword ptr [eax - 0x73]; 
0x0003d693: jae 0x3d68f; call dword ptr [eax - 0x73]; 
0x0003d6b6: jae 0x3d6b2; call dword ptr [eax - 0x73]; 
0x0003d6d9: jae 0x3d6d5; call dword ptr [eax - 0x73]; 
0x0003d6ec: jae 0x3d6e8; call dword ptr [eax - 0x18]; 
0x0003d6fc: jae 0x3d6f8; call dword ptr [eax - 0x73]; 
0x0003d70f: jae 0x3d70b; call dword ptr [eax - 0x18]; 
0x0003d71f: jae 0x3d71b; call dword ptr [eax - 0x73]; 
0x0003d742: jae 0x3d73e; call dword ptr [eax - 0x73]; 
0x0003d765: jae 0x3d761; call dword ptr [eax - 0x73]; 
0x0003d788: jae 0x3d784; call dword ptr [eax - 0x73]; 
0x0003d7ab: jae 0x3d7a7; call dword ptr [eax - 0x73]; 
0x0003d7ce: jae 0x3d7ca; call dword ptr [eax - 0x73]; 
0x0003d7f1: jae 0x3d7ed; call dword ptr [eax - 0x73]; 
0x0003d814: jae 0x3d810; call dword ptr [eax - 0x73]; 
0x0003e0ca: jae 0x3e0c6; call dword ptr [eax + 0x68]; 
0x0003e0ed: jae 0x3e0e9; call dword ptr [eax + 0x68]; 
0x0003f963: jae 0x3f95f; call dword ptr [eax - 0x73]; 
0x00040674: jae 0x40670; call dword ptr [eax - 0x73]; 
0x00040697: jae 0x40693; call dword ptr [eax - 0x73]; 
0x000406ba: jae 0x406b6; call dword ptr [eax - 0x73]; 
0x000406dd: jae 0x406d9; call dword ptr [eax - 0x73]; 
0x00040700: jae 0x406fc; call dword ptr [eax - 0x73]; 
0x00040723: jae 0x4071f; call dword ptr [eax - 0x73]; 
0x00040746: jae 0x40742; call dword ptr [eax - 0x73]; 
0x00040769: jae 0x40765; call dword ptr [eax - 0x73]; 
0x0004077c: jae 0x40778; call dword ptr [eax - 0x18]; 
0x0004078c: jae 0x40788; call dword ptr [eax - 0x73]; 
0x000407b6: jae 0x407b2; call dword ptr [eax - 0x73]; 
0x000407d9: jae 0x407d5; call dword ptr [eax - 0x73]; 
0x000407ec: jae 0x407e8; call dword ptr [eax - 0x18]; 
0x000407fc: jae 0x407f8; call dword ptr [eax - 0x73]; 
0x0004081f: jae 0x4081b; call dword ptr [eax - 0x73]; 
0x00040842: jae 0x4083e; call dword ptr [eax - 0x73]; 
0x00040865: jae 0x40861; call dword ptr [eax - 0x73]; 
0x00041711: jae 0x4170d; call dword ptr [eax + 0x68]; 
0x00041724: jae 0x41720; call dword ptr [eax - 0x18]; 
0x00041736: jae 0x41732; call dword ptr [eax + 0x68]; 
0x00044210: jae 0x44208; mov eax, edx; pop ebx; pop esi; ret; 
0x000466ea: jae 0x466e6; call dword ptr [eax + 0x68]; 
0x0004670d: jae 0x46709; call dword ptr [eax + 0x68]; 
0x000487ed: jae 0x487e9; call dword ptr [eax - 0x73]; 
0x0004987f: jae 0x4987b; call dword ptr [eax - 0x73]; 
0x000498a4: jae 0x498a0; call dword ptr [eax - 0x73]; 
0x000498c9: jae 0x498c5; call dword ptr [eax - 0x73]; 
0x000498dc: jae 0x498d8; call dword ptr [eax - 0x18]; 
0x000498ee: jae 0x498ea; call dword ptr [eax - 0x73]; 
0x00049913: jae 0x4990f; call dword ptr [eax - 0x73]; 
0x00049938: jae 0x49934; call dword ptr [eax - 0x73]; 
0x0004994b: jae 0x49947; call dword ptr [eax - 0x18]; 
0x0004995d: jae 0x49959; call dword ptr [eax - 0x73]; 
0x00049982: jae 0x4997e; call dword ptr [eax - 0x73]; 
0x000499ac: jae 0x499a8; call dword ptr [eax - 0x73]; 
0x000499d1: jae 0x499cd; call dword ptr [eax - 0x73]; 
0x000499f6: jae 0x499f2; call dword ptr [eax - 0x73]; 
0x00049a1b: jae 0x49a17; call dword ptr [eax - 0x73]; 
0x00049a62: jae 0x49a5e; call dword ptr [eax - 0x73]; 
0x00049a87: jae 0x49a83; call dword ptr [eax - 0x73]; 
0x00049acb: jae 0x49ac7; call dword ptr [eax - 0x73]; 
0x000871a0: jae 0x5e637e6a; pop edi; pop ebp; ret; 
0x000d5d0d: jae 0x5e6899d7; pop edi; pop ebp; ret; 
0x000e2008: jae 0x5e694cd2; pop edi; pop ebp; ret; 
0x000ec967: jae 0x5e6a1a31; pop edi; ret; 
0x000ec9c7: jae 0x5e6a1a91; pop edi; ret; 
0x0011b385: jae 0x5e6d004f; pop edi; pop ebp; ret; 
0x0011fe98: jae 0x5e6d0b62; pop edi; pop ebp; ret; 
0x0006c8f0: jae 0x6c900; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0006ca6e: jae 0x6ca80; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0006e9d0: jae 0x6ea02; add esp, 4; pop ebx; pop esi; ret; 
0x0006fa03: jae 0x6fa99; mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x000729ec: jae 0x72a02; mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x000729ef: jae 0x72a09; pop ebx; pop esi; pop edi; ret; 
0x00073922: jae 0x73999; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x000748ea: jae 0x74900; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00074928: jae 0x74938; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00076488: jae 0x76498; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000799bb: jae 0x799ed; add esp, 4; pop ebx; pop esi; ret; 
0x00079e9c: jae 0x79ec0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000832da: jae 0x832fc; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00083452: jae 0x83478; call eax; 
0x00083547: jae 0x8356d; call eax; 
0x00083576: jae 0x83588; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x83570; xor eax, eax; ret; 
0x000835ad: jae 0x835d3; call edx; 
0x0001911f: jae 0x868e9e11; aam 0x6b; cli; call dword ptr [eax - 0x18]; 
0x000963f9: jae 0x96402; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009d57f: jae 0x9d583; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0009dc58: jae 0x9dc5c; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a257a: jae 0xa2576; call dword ptr [eax + 0x68]; 
0x000a259d: jae 0xa2599; call dword ptr [eax + 0x68]; 
0x000a47c5: jae 0xa47c1; call dword ptr [eax - 0x18]; 
0x000a4904: jae 0xa4900; call dword ptr [eax - 0x18]; 
0x000a49c3: jae 0xa49bf; call dword ptr [eax - 0x73]; 
0x000a524a: jae 0xa5246; call dword ptr [eax + 0x68]; 
0x000a526d: jae 0xa5269; call dword ptr [eax + 0x68]; 
0x000a760d: jae 0xa7609; call dword ptr [eax - 0x18]; 
0x000a761d: jae 0xa7619; call dword ptr [eax - 0x73]; 
0x000a76bc: jae 0xa76b8; call dword ptr [eax - 0x18]; 
0x000a7dda: jae 0xa7dd6; call dword ptr [eax + 0x68]; 
0x000a7dfd: jae 0xa7df9; call dword ptr [eax + 0x68]; 
0x000aa079: jae 0xaa075; call dword ptr [eax - 0x18]; 
0x000aa0e2: jae 0xaa0de; call dword ptr [eax - 0x18]; 
0x000aa0fe: jae 0xaa0fa; call dword ptr [eax - 0x73]; 
0x000ae6ba: jae 0xae6b6; call dword ptr [eax + 0x68]; 
0x000ae6dd: jae 0xae6d9; call dword ptr [eax + 0x68]; 
0x000b1536: jae 0xb1532; call dword ptr [eax - 0x73]; 
0x000b15b8: jae 0xb15b4; call dword ptr [eax - 0x18]; 
0x000b1646: jae 0xb1642; call dword ptr [eax - 0x18]; 
0x00125820: jae 0xc0435cea; pop ebx; pop esi; ret; 
0x000c70ca: jae 0xc7115; push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x0007ad2c: jae 0xd090b1f6; pop ebx; pop esi; ret; 
0x000e43d0: jae 0xe43d6; push dword ptr [ebx]; push dword ptr [ebp - 0x18c]; push 2; push dword ptr [ebp - 0x17c]; call esi; 
0x000e7c9d: jae 0xe7ca0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x000f7eb7: jae 0xf7eb9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102737: jb 0x102741; seta al; movzx eax, al; neg eax; ret; 
0x00107990: jb 0x1079a0; mov eax, 1; ret; 
0x0011cd95: jb 0x11cd1a; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0012ea3f: jb 0x12e9c2; les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013a203: jb 0x13a20d; seta al; movzx eax, al; neg eax; ret; 
0x0013caea: jb 0x13cb0d; std; jmp dword ptr [esi - 0x70]; 
0x0013daff: jb 0x13db10; xchg esp, eax; ret; 
0x00145c4a: jb 0x145c4b; inc dword ptr [ecx + 0x491b3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00147a1a: jb 0x147a77; cld; jmp dword ptr [esi - 0x70]; 
0x00150850: jb 0x15084a; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a1a: jb 0x1509e7; sti; jmp dword ptr [esi - 0x70]; 
0x0015d360: jb 0x15d370; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00161983: jb 0x1619c0; lea eax, [edi + 0xa]; pop edi; ret; 
0x001618c5: jb 0x1619c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00161993: jb 0x1619c0; lea eax, [edi + 0xc]; pop edi; ret; 
0x001619a3: jb 0x1619c0; lea eax, [edi + 0xd]; pop edi; ret; 
0x001619b3: jb 0x1619c0; lea eax, [edi + 0xe]; pop edi; ret; 
0x001618ee: jb 0x1619c0; lea eax, [edi + 0xf]; pop edi; ret; 
0x00161913: jb 0x1619c0; lea eax, [edi + 1]; pop edi; ret; 
0x00161923: jb 0x1619c0; lea eax, [edi + 2]; pop edi; ret; 
0x0016185a: jb 0x1619c0; lea eax, [edi + 3]; pop edi; ret; 
0x00161933: jb 0x1619c0; lea eax, [edi + 4]; pop edi; ret; 
0x00161943: jb 0x1619c0; lea eax, [edi + 5]; pop edi; ret; 
0x00161953: jb 0x1619c0; lea eax, [edi + 6]; pop edi; ret; 
0x0016188b: jb 0x1619c0; lea eax, [edi + 7]; pop edi; ret; 
0x00161963: jb 0x1619c0; lea eax, [edi + 8]; pop edi; ret; 
0x00161973: jb 0x1619c0; lea eax, [edi + 9]; pop edi; ret; 
0x001629a3: jb 0x1629e0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001628f5: jb 0x1629e0; lea eax, [eax + 0xb]; pop edi; ret; 
0x001629b3: jb 0x1629e0; lea eax, [eax + 0xc]; pop edi; ret; 
0x001629c3: jb 0x1629e0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001629d3: jb 0x1629e0; lea eax, [eax + 0xe]; pop edi; ret; 
0x0016291e: jb 0x1629e0; lea eax, [eax + 0xf]; pop edi; ret; 
0x00162933: jb 0x1629e0; lea eax, [eax + 1]; pop edi; ret; 
0x00162943: jb 0x1629e0; lea eax, [eax + 2]; pop edi; ret; 
0x0016288b: jb 0x1629e0; lea eax, [eax + 3]; pop edi; ret; 
0x00162953: jb 0x1629e0; lea eax, [eax + 4]; pop edi; ret; 
0x00162963: jb 0x1629e0; lea eax, [eax + 5]; pop edi; ret; 
0x00162973: jb 0x1629e0; lea eax, [eax + 6]; pop edi; ret; 
0x001628be: jb 0x1629e0; lea eax, [eax + 7]; pop edi; ret; 
0x00162983: jb 0x1629e0; lea eax, [eax + 8]; pop edi; ret; 
0x00162993: jb 0x1629e0; lea eax, [eax + 9]; pop edi; ret; 
0x0002df7a: jb 0x2df8b; xchg dword ptr [edi + 0xf000002], eax; mov dh, 0xc9; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x0003a6c8: jb 0x3a6c4; call dword ptr [eax - 0x18]; 
0x0003a775: jb 0x3a771; call dword ptr [eax - 0x18]; 
0x0003a775: jb 0x3a771; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x0003a7fa: jb 0x3a82e; cli; call dword ptr [eax - 0x18]; 
0x0003d605: jb 0x3d601; call dword ptr [eax - 0x18]; 
0x0003d804: jb 0x3d800; call dword ptr [eax - 0x18]; 
0x0003d7e0: jb 0x3d814; cli; call dword ptr [eax - 0x18]; 
0x00040713: jb 0x4070f; call dword ptr [eax - 0x18]; 
0x00040759: jb 0x40755; call dword ptr [eax - 0x18]; 
0x0004079e: jb 0x407d2; cli; call dword ptr [eax - 0x18]; 
0x000499bf: jb 0x499bb; call dword ptr [eax - 0x18]; 
0x00049a2d: jb 0x49a61; cli; call dword ptr [eax - 0x18]; 
0x00049a75: jb 0x49a71; call dword ptr [eax - 0x18]; 
0x00049a75: jb 0x49a71; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x00051055: jb 0x5105f; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0007b099: jb 0x7b024; ret 0x703b; 
0x00087201: jb 0x87204; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ebp - 0x8fef98c], cl; rol byte ptr [ecx], 1; ret; 
0x000955d6: jb 0x94990; call 0x13cef9; add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a00: jb 0x94990; call 0x13cef9; add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949e9: jb 0x94990; call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ce: jb 0x94990; call 0x13cef9; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ac: jb 0x94990; call 0x13cef9; add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095546: jb 0x94a28; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x00096cd6: jb 0x95fd0; call 0x13cef9; add ecx, 0xeb55f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096040: jb 0x95fd0; call 0x13cef9; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096029: jb 0x95fd0; call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009600e: jb 0x95fd0; call 0x13cef9; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fec: jb 0x95fd0; call 0x13cef9; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c576: jb 0x9bf70; call 0x13cef9; add ecx, 0xe5e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfe0: jb 0x9bf70; call 0x13cef9; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfc9: jb 0x9bf70; call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfae: jb 0x9bf70; call 0x13cef9; add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf8c: jb 0x9bf70; call 0x13cef9; add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a04ea: jb 0xa04d3; push es; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000a47ca: jb 0xa4812; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000a4894: jb 0xa4890; call dword ptr [eax - 0x18]; 
0x000a494a: jb 0xa4946; call dword ptr [eax - 0x18]; 
0x000a4926: jb 0xa495a; cli; call dword ptr [eax - 0x18]; 
0x000a753b: jb 0xa7537; call dword ptr [eax - 0x18]; 
0x000a755e: jb 0xa755a; call dword ptr [eax - 0x18]; 
0x000a75e9: jb 0xa761d; cli; call dword ptr [eax - 0x18]; 
0x000aa010: jb 0xaa00c; call dword ptr [eax - 0x18]; 
0x000aa033: jb 0xaa02f; call dword ptr [eax - 0x18]; 
0x000aa1a9: jb 0xaa1dd; cli; call dword ptr [eax - 0x18]; 
0x000b14d5: jb 0xb14d1; call dword ptr [eax - 0x18]; 
0x000b1523: jb 0xb1557; cli; call dword ptr [eax - 0x18]; 
0x000b1621: jb 0xb161d; call dword ptr [eax - 0x18]; 
0x000c58b1: jb 0xc58b3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c58e8: jb 0xc58ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c714c: jb 0xc714e; add byte ptr [ecx + ebp*2 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000c7a2d: jb 0xc7a33; add al, ch; mov eax, 0x81000754; ret 0xc5cb; 
0x000d1787: jb 0xd17a5; mov dword ptr [edx + 0x20], esi; pop esi; pop edi; pop ebp; ret; 
0x000d178a: jb 0xd17ac; pop esi; pop edi; pop ebp; ret; 
0x000d17a4: jb 0xd17c2; mov dword ptr [edx + 0x20], esi; pop esi; pop edi; pop ebp; ret; 
0x000d17a7: jb 0xd17c9; pop esi; pop edi; pop ebp; ret; 
0x000d1e9f: jb 0xd1e95; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000e1e33: jb 0xe1e3d; setne al; movzx eax, al; neg eax; ret; 
0x000fc494: jb 0xfc41f; ret; 
0x00101d47: jbe 0x101d10; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010cac6: jbe 0x10ca8b; int1; jmp dword ptr [esi - 0x70]; 
0x0010eb10: jbe 0x10eb64; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0011adce: jbe 0x11add0; mov eax, 0xffffffff; ret; 
0x0011b3d9: jbe 0x11b3e4; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0011fc36: jbe 0x11fc38; xor ecx, ecx; mov eax, ecx; ret; 
0x00120e0e: jbe 0x120e10; xor eax, eax; ret; 
0x0012379e: jbe 0x1237a0; ret; 
0x001237be: jbe 0x1237c0; xor eax, eax; ret; 
0x00124a86: jbe 0x124a88; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00124d67: jbe 0x124d79; push ebx; call dword ptr [esi + 0x14]; 
0x00125dc0: jbe 0x125dd0; mov eax, 2; pop ebx; pop esi; ret; 
0x00125fbe: jbe 0x125fc0; ret; 
0x00126259: jbe 0x126267; push edi; call dword ptr [eax + 8]; 
0x0012629c: jbe 0x1262aa; push edi; call dword ptr [eax + 0x10]; 
0x00127601: jbe 0x127601; jmp dword ptr [esi - 0x70]; 
0x0012814e: jbe 0x128150; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0012fcde: jbe 0x12fce0; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0013168e: jbe 0x131690; mov eax, 1; ret; 
0x001316be: jbe 0x1316c0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x001316ce: jbe 0x1316d0; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0013179e: jbe 0x1317a0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x001317ae: jbe 0x1317b0; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00131d6e: jbe 0x131d70; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x00131d7e: jbe 0x131d80; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00131da6: jbe 0x131da8; mov eax, 1; ret; 
0x00132b16: jbe 0x132b20; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00138d18: jbe 0x138c9d; in al, dx; add al, 0x83; ret; 
0x001394c6: jbe 0x1394c8; ret; 
0x00139b5e: jbe 0x139b60; mov dword ptr [esp + 0xc], edx; call esi; 
0x0013affc: jbe 0x13aff4; in eax, dx; dec dword ptr [ebp - 0x72dbdb8c]; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x0013d45a: jbe 0x13d570; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x0013f255: jbe 0x13f330; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x0013f3a2: jbe 0x13f3b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0013f60e: jbe 0x13f610; xor eax, eax; ret; 
0x0013f64e: jbe 0x13f650; xor eax, eax; ret; 
0x0013f68e: jbe 0x13f690; xor eax, eax; ret; 
0x0013f6ce: jbe 0x13f6d0; xor eax, eax; ret; 
0x0013f70e: jbe 0x13f710; xor eax, eax; ret; 
0x00145a9e: jbe 0x145aa0; mov eax, 0xffffffff; ret; 
0x00145aae: jbe 0x145ab0; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00157a8e: jbe 0x157a90; mov eax, 1; ja 0x157a99; neg eax; pop ebp; ret; 
0x001579b3: jbe 0x157aa3; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001579d3: jbe 0x157aa3; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0015d17e: jbe 0x15d180; mov eax, 1; ja 0x15d189; neg eax; pop ebp; ret; 
0x0015ed1e: jbe 0x15ed20; pop ebx; xor eax, eax; ret; 
0x0016071e: jbe 0x160720; pop ebx; mov eax, 1; ja 0x16072a; neg eax; ret; 
0x001613ae: jbe 0x1613b0; and eax, 3; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613be: jbe 0x1613c0; and eax, 7; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613ce: jbe 0x1613d0; and eax, 0x1f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613de: jbe 0x1613e0; and eax, 0x3f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613ee: jbe 0x1613f0; and eax, 0x7f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613fe: jbe 0x161400; and eax, 0x1ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00161fce: jbe 0x161fd0; add edx, 2; jl 0x162080; lea eax, [ecx + 2]; ret; 
0x00161fde: jbe 0x161fe0; add edx, 3; jl 0x162080; lea eax, [ecx + 3]; ret; 
0x00161fee: jbe 0x161ff0; add edx, 5; jl 0x162080; lea eax, [ecx + 5]; ret; 
0x00161ffe: jbe 0x162000; add edx, 6; jl 0x162080; lea eax, [ecx + 6]; ret; 
0x0016307e: jbe 0x163080; pop edi; pop esi; pop ebx; ret; 
0x0001af3e: jbe 0x1af40; mov eax, edx; call dword ptr gs:[0x10]; 
0x0001be86: jbe 0x1be88; add esp, 4; pop ebx; pop esi; ret; 
0x00025c7d: jbe 0x25c83; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00028179: jbe 0x2818e; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x00030c3e: jbe 0x30c40; pop ebp; ret; 
0x000311d6: jbe 0x311d8; call 0x7acf0; mov ecx, 8; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0003197e: jbe 0x31980; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003385e: jbe 0x33860; mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0004a05e: jbe 0x49fe9; ret 0x40c7; 
0x000580eb: jbe 0x580bf; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0005dcc0: jbe 0x5dcbc; call dword ptr [edx - 0x73]; 
0x0005e078: jbe 0x5e074; call dword ptr [eax - 0x73]; 
0x0005e08b: jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x0005e81a: jbe 0x5e816; call dword ptr [eax - 0x18]; 
0x0005e8d1: jbe 0x5e8cd; call dword ptr [eax - 0x73]; 
0x0005e8e4: jbe 0x5e8e0; call dword ptr [eax - 0x18]; 
0x0005ed7f: jbe 0x5f628; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0005ec5c: jbe 0x60102; sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000604b3: jbe 0x604af; call dword ptr [eax - 0x18]; 
0x000617fe: jbe 0x61800; jmp eax; 
0x00060db8: jbe 0x61a88; sub esp, 4; push ebx; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00062021: jbe 0x6201d; call dword ptr [eax - 0x18]; 
0x000618fd: jbe 0x62208; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000628cb: jbe 0x6289f; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x00062c60: jbe 0x62c5c; call dword ptr [edx - 0x73]; 
0x00063020: jbe 0x6301c; call dword ptr [eax - 0x73]; 
0x00063033: jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x0006381a: jbe 0x63816; call dword ptr [eax - 0x18]; 
0x000638c9: jbe 0x638c5; call dword ptr [eax - 0x73]; 
0x000638dc: jbe 0x638d8; call dword ptr [eax - 0x18]; 
0x00065762: jbe 0x6575e; call dword ptr [eax - 0x18]; 
0x00066b26: jbe 0x66b28; jmp eax; 
0x000671ce: jbe 0x671d0; mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x000675d7: jbe 0x675d3; call dword ptr [eax - 0x18]; 
0x000683cb: jbe 0x6839f; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x00068fc2: jbe 0x69130; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x00069507: jbe 0x69568; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006a469: jbe 0x6a560; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006ad69: jbe 0x6ad97; sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x0006beef: jbe 0x6bf78; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0006ce69: jbe 0x6ce90; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0006d116: jbe 0x6d118; sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0006e13e: jbe 0x6e140; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0006e113: jbe 0x6e150; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0006e70e: jbe 0x6e682; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0006e8a4: jbe 0x6e8d0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00071b64: jbe 0x71db0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000728e4: jbe 0x72938; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x000731f4: jbe 0x733c0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00074986: jbe 0x749b0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00074bba: jbe 0x74c20; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00074d3c: jbe 0x74d80; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x00074ebd: jbe 0x74ee0; push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x000751c5: jbe 0x753e0; sub esp, 8; lea eax, [esp + 0x34]; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x00076077: jbe 0x76091; sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00076165: jbe 0x76298; sub esp, 4; push ecx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000767d9: jbe 0x76900; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007696f: jbe 0x769b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00076a5b: jbe 0x76ad8; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00078584: jbe 0x785e0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00078633: jbe 0x78660; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00078929: jbe 0x789f0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x00078d2e: jbe 0x78d30; xor eax, eax; ret; 
0x00078e32: jbe 0x78e60; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00079a0e: jbe 0x79a10; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00079c9e: jbe 0x79ca0; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00079cbe: jbe 0x79cc0; mov eax, 0xffffffff; ret; 
0x00079cce: jbe 0x79cd0; xor eax, eax; ret; 
0x00079cee: jbe 0x79cf0; ret; 
0x0007a79e: jbe 0x7a7a0; xor eax, eax; ret; 
0x0007a7de: jbe 0x7a7e0; xor eax, eax; ret; 
0x0007a81e: jbe 0x7a820; xor eax, eax; ret; 
0x0007a85e: jbe 0x7a860; xor eax, eax; ret; 
0x0007a89e: jbe 0x7a8a0; xor eax, eax; ret; 
0x0007a8de: jbe 0x7a8e0; xor eax, eax; ret; 
0x0007a91e: jbe 0x7a920; xor eax, eax; ret; 
0x0007a95e: jbe 0x7a960; xor eax, eax; ret; 
0x0007a99e: jbe 0x7a9a0; xor eax, eax; ret; 
0x0007a9de: jbe 0x7a9e0; xor eax, eax; ret; 
0x0007aa1e: jbe 0x7aa20; xor eax, eax; ret; 
0x0007ab5e: jbe 0x7ab60; xor eax, eax; ret; 
0x0007ab9e: jbe 0x7aba0; xor eax, eax; ret; 
0x0007abde: jbe 0x7abe0; xor eax, eax; ret; 
0x0007ac1e: jbe 0x7ac20; xor eax, eax; ret; 
0x0007ac5e: jbe 0x7ac60; xor eax, eax; ret; 
0x0007ac9e: jbe 0x7aca0; xor eax, eax; ret; 
0x0007b576: jbe 0x7b580; ret; 
0x0007b6a6: jbe 0x7b6b0; ret; 
0x0007b6e6: jbe 0x7b6f0; ret; 
0x0007b734: jbe 0x7b740; ret; 
0x0007bbe6: jbe 0x7bbe8; ret; 
0x0007be66: jbe 0x7be1c; pop ebx; pop esi; pop edi; ret; 
0x0007db2e: jbe 0x7db30; sub esp, 0xc; push 0; mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x0007db46: jbe 0x7db48; call eax; 
0x000807e6: jbe 0x807e8; sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x00081d8e: jbe 0x81d90; mov dword ptr [ebx + 0x1e14], eax; pop ebx; ret; 
0x00087126: jbe 0x87141; pop ebx; pop esi; pop edi; ret; 
0x0008ce1e: jbe 0x8ce20; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0008ce8e: jbe 0x8ce90; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008ed4e: jbe 0x8ed50; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000910be: jbe 0x910c0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0009135e: jbe 0x91360; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0009319e: jbe 0x931a0; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0009444e: jbe 0x94450; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009535e: jbe 0x95360; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0009542e: jbe 0x95430; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0009591e: jbe 0x95920; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x00096a4e: jbe 0x96a50; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00096b1e: jbe 0x96b20; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0009c0ca: jbe 0x9c0ce; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c8ce: jbe 0x9c8d0; xor eax, eax; pop edi; ret; 
0x0009c92e: jbe 0x9c960; add eax, ecx; ret; 
0x0009cc05: jbe 0x9cc40; add eax, edi; pop edi; ret; 
0x0009cc18: jbe 0x9cc40; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0009cc28: jbe 0x9cc40; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009cc38: jbe 0x9cc40; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009ce8e: jbe 0x9ce90; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0009d2be: jbe 0x9d2c0; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0009f74b: jbe 0x9f755; call ebx; 
0x000a48e6: jbe 0xa488b; push es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000b27be: jbe 0xb27c0; mov eax, 2; ret; 
0x000b27ce: jbe 0xb27d0; mov eax, 3; ret; 
0x000b27de: jbe 0xb27e0; mov eax, 4; ret; 
0x000b27ee: jbe 0xb27f0; mov eax, 5; ret; 
0x000b27fe: jbe 0xb2800; mov eax, 6; ret; 
0x000b280e: jbe 0xb2810; mov eax, 7; ret; 
0x000b6c48: jbe 0xb6c50; mov eax, edx; ret; 
0x000bef43: jbe 0xbef5f; cmp eax, -0x26; jne 0xbefa0; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000bf116: jbe 0xbf118; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c022e: jbe 0xc0230; mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000c6c0d: jbe 0xc6c59; cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000c7e66: jbe 0xc7e68; xor eax, eax; ret; 
0x000c8546: jbe 0xc8548; sub esp, 0xc; mov eax, dword ptr [ebp - 0x194]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000ca3a6: jbe 0xca3a8; xor eax, eax; ret; 
0x000d027e: jbe 0xd0280; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000d028e: jbe 0xd0290; xor eax, eax; pop ebx; pop esi; ret; 
0x000d19eb: jbe 0xd19e1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000df3c6: jbe 0xdf3c8; xor eax, eax; ret; 
0x000dfaa6: jbe 0xdfaa8; sub esp, 0xc; mov eax, dword ptr [ebp - 0x194]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000dfed6: jbe 0xdfed8; xor eax, eax; ret; 
0x000ea796: jbe 0xea798; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000eb726: jbe 0xeb728; xor eax, eax; ret; 
0x000ebe06: jbe 0xebe08; sub esp, 0xc; mov eax, dword ptr [ebp - 0x194]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000ef43f: jbe 0xef44d; call dword ptr [esi + 0x24]; 
0x000f0482: jbe 0xf0490; call dword ptr [esi + 0x24]; 
0x000f56ee: jbe 0xf56f0; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000f582e: jbe 0xf5830; call 0x1aff0; add esp, 4; pop ebx; pop esi; ret; 
0x000f58ee: jbe 0xf58f0; call 0x1aff0; add esp, 4; pop ebx; pop esi; ret; 
0x000f7a44: jbe 0xf7a46; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7a68: jbe 0xf7a6a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f842d: jbe 0xf8479; cli; call dword ptr [eax - 0x73]; 
0x000f84fd: jbe 0xf8549; cli; call dword ptr [eax - 0x73]; 
0x000f856e: jbe 0xf8570; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000f944e: jbe 0xf9450; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; ret; 
0x000fddb6: jbe 0xfddb8; mov eax, dword ptr [eax + 0x260]; pop ebx; ret; 
0x00100287: je 0x100289; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100e27: je 0x100e84; pop esi; ret; 
0x001012bd: je 0x1012e5; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0010164e: je 0x101674; sbb al, 0xe8; sbb al, byte ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001017e0: je 0x101806; or byte ptr [ebx - 0x47dbdb84], cl; jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010193c: je 0x101940; ret; 
0x00101c02: je 0x101c1f; lea edx, [edi + edi]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00101d84: je 0x101dac; add byte ptr [eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x001021c2: je 0x1021d0; mov dword ptr [ebx + 0x1c0], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001050f8: je 0x10511e; sbb al, 0x8d; xchg cl, cl; push esi; cli; call dword ptr [eax - 0x73]; 
0x001055ab: je 0x1055be; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00106b18: je 0x106b3e; sbb al, 0x8d; xchg byte ptr [edi], al; push edi; cli; call dword ptr [eax - 0x73]; 
0x00107834: je 0x10785a; add al, 0x89; inc edi; adc al, 0x29; ret; 
0x00107a34: je 0x107a5a; adc al, ch; test eax, 0x81000354; ret; 
0x00107d46: je 0x107d6c; and byte ptr [edi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00107deb: je 0x107dd8; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00108166: je 0x10818c; and byte ptr [edx + 0x68], dl; add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x0010827c: je 0x1082a2; and byte ptr [edx], ch; push 0x2000004; call eax; 
0x00108407: je 0x10842d; sbb byte ptr [ebx + 0x5182444], cl; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x001085fa: je 0x108600; xor eax, eax; pop ebx; ret; 
0x00109219: je 0x10923f; adc al, 0xf; xchg ebp, eax; ret 0xc985; 
0x0010b57d: je 0x10b588; add esp, 8; pop ebx; ret; 
0x0010b592: je 0x10b5b8; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0010c51f: je 0x10c530; ret; 
0x0010c67d: je 0x10c688; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0010cffe: je 0x10d024; sbb al, 0xe8; dec edx; or edi, ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0010d274: je 0x10d29a; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x0010d279: je 0x10d29f; sub al, 0xe8; jg 0x10d2d6; idiv bh; add esp, 0x2c; ret; 
0x0010dbd1: je 0x10dbe0; add esp, 8; pop ebx; ret; 
0x0010ddf9: je 0x10de1f; sub al, 0xe8; scasd eax, dword ptr es:[edi]; test eax, 0xc483fff6; adc byte ptr [ecx], bh; ret; 
0x0010e095: je 0x10e0bd; add byte ptr [ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0010e264: je 0x10e28a; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0010e844: je 0x10e86c; add byte ptr [eax - 0x12bc18], dl; jmp dword ptr [esi - 0x70]; 
0x0010e884: je 0x10e8ac; add byte ptr [eax - 0x12fc18], dl; jmp dword ptr [esi - 0x70]; 
0x0010f825: je 0x10f84b; cmp al, ch; ret; 
0x0010f9dd: je 0x10fa05; add byte ptr [ebx - 0x10f79], cl; jmp dword ptr [ebp - 0x39]; 
0x0010fc4d: je 0x10fc75; add byte ptr [ebx - 0x10f79], cl; jmp dword ptr [ebp - 0x39]; 
0x00111ff8: je 0x11201e; sbb al, 0x8d; xchg byte ptr [edx + 0x5a], al; cli; call dword ptr [eax - 0x73]; 
0x001128b8: je 0x1128de; sbb al, 0x8d; xchg byte ptr [ebx + 0x5a], bh; cli; call dword ptr [eax - 0x73]; 
0x00112e67: je 0x112e8d; sub byte ptr [ebp - 0x5a5737a], cl; call dword ptr [eax - 0x73]; 
0x00113407: je 0x11342d; sbb byte ptr [ebp - 0x5a5637a], cl; call dword ptr [eax - 0x73]; 
0x001138d5: je 0x1138fb; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00113d75: je 0x113d9b; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115ce8: je 0x115d0e; xor al, ch; jo 0x115cef; bnd jmp dword ptr [esi - 0x77]; 
0x0011691d: je 0x116928; sub esp, 0xc; push esi; call eax; 
0x00116c05: je 0x116c10; sub esp, 0xc; push esi; call eax; 
0x00116ced: je 0x116cfe; sub esp, 0xc; lea edx, [ebx + 0x2c20]; push edx; call eax; 
0x00116dfd: je 0x116e23; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00116e01: je 0x116e27; pop eax; push esi; call edi; 
0x001171a2: je 0x1171b5; sub esp, 0xc; push eax; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x001174aa: je 0x117325; sub esp, 0xc; push ebx; call 0x139490; mov dword ptr [esp], ebp; call ebx; 
0x00117e68: je 0x117e8e; sbb al, 0x8d; xchg byte ptr [ebx], cl; pop ebp; cli; call dword ptr [eax - 0x73]; 
0x001188a5: je 0x1188cb; and al, ch; ret; 
0x001196d5: je 0x1196fd; add byte ptr [ebx + 0x6b81b], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011a3ea: je 0x11a3e0; add esp, 8; pop ebx; ret; 
0x0011a552: je 0x11a4f0; cli; call dword ptr [eax - 0x18]; 
0x0011b115: je 0x11b13b; sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x0011eb4f: je 0x11eb75; or al, 0x8d; xchg al, ch; sahf; cli; call dword ptr [eax - 0x73]; 
0x0011ed45: je 0x11ed6b; xor al, 0x8d; sub dword ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x0011ef7b: je 0x11efac; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011f16c: je 0x11f194; add byte ptr [eax - 0x7cdf397d], dl; ret 0x3901; 
0x0011f61b: je 0x11f627; add dword ptr [eax + 8], 1; je 0x11f646; add esp, 0xc; ret; 
0x0011f621: je 0x11f646; add esp, 0xc; ret; 
0x0011fb6d: je 0x11fb78; add esp, 8; pop ebx; ret; 
0x0011fc2c: je 0x11fc60; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0011ff0e: je 0x11ff34; adc byte ptr [esi - 0x73], dl; sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x00121795: je 0x1217bd; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x001221b5: je 0x1221db; sbb al, 0x51; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001221bb: je 0x1221e1; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x00122e39: je 0x122e20; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00123878: je 0x123883; sub esp, 0xc; push esi; call eax; 
0x00123fd7: je 0x123ffd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00124006: je 0x12402c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00124015: je 0x1240fd; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00124256: je 0x124261; sub esp, 0xc; push esi; call eax; 
0x00124239: je 0x1242a0; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00124386: je 0x12439b; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00124438: je 0x12445e; adc al, 0xff; je 0x124462; je 0x124490; call dword ptr [ecx]; 
0x0012443c: je 0x124462; je 0x124490; call dword ptr [ecx]; 
0x0012443e: je 0x124490; call dword ptr [ecx]; 
0x00124533: je 0x124542; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00124577: je 0x124580; add esp, 8; pop ebx; ret; 
0x00124587: je 0x1245bb; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00124d56: je 0x124ce9; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00124d72: je 0x124ce9; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00124ebb: je 0x124ee1; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001251e6: je 0x125191; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00125209: je 0x125214; sub esp, 0xc; push esi; call eax; 
0x001254d1: je 0x12535a; sub esp, 0xc; push edi; call eax; 
0x001254b8: je 0x1254de; and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00125565: je 0x12558b; and al, 0x8b; inc esp; and al, 0x34; call eax; 
0x001255b2: je 0x1255bd; sub esp, 0xc; push edi; call eax; 
0x00125599: je 0x1255bf; and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00125604: je 0x125610; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0012577a: je 0x1257a0; sbb al, 0xe8; push cs; mov byte ptr [eax], 0; add esp, 0x1c; ret; 
0x0012581f: je 0x125830; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001258be: je 0x1258e0; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x001258ea: je 0x125900; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00125955: je 0x12597d; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x00125e37: je 0x125e5d; or byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00125e6f: je 0x125e7a; sub esp, 0xc; push edi; call eax; 
0x0012600d: je 0x126035; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x001260a4: je 0x1260c8; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00126264: je 0x12636b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001265c9: je 0x1265f0; mov eax, ecx; pop ebx; ret; 
0x0012661d: je 0x126670; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0012664f: je 0x126675; sbb al, 0x53; call dword ptr [eax]; 
0x00126646: je 0x126689; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0012669f: je 0x1266c5; sbb al, 0x53; call dword ptr [eax + 4]; 
0x001267a4: je 0x1267cc; add byte ptr [eax + 0x5ec0315b], dl; pop edi; ret; 
0x0012689d: je 0x1268b0; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x00127141: je 0x127167; sbb byte ptr [ebp - 0x59e4043], cl; call dword ptr [esi + 0x6a]; 
0x001272f4: je 0x127300; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00128004: je 0x128010; add esp, 4; pop ebx; pop esi; ret; 
0x001280c4: je 0x1280d0; add esp, 4; pop ebx; pop esi; ret; 
0x00128184: je 0x128190; add esp, 4; pop ebx; pop esi; ret; 
0x00128246: je 0x12826c; xor al, ch; ret 0xf40f; 
0x001285b3: je 0x1285d9; adc al, 0xe8; mov ch, 0x56; cld; jmp dword ptr [ebp - 0x77]; 
0x00129818: je 0x12983e; sbb al, 0x8d; xchg dh, bh; popal; cli; call dword ptr [eax - 0x73]; 
0x00129ca7: je 0x129cb8; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x00129d1c: je 0x129d44; add byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x00129f34: je 0x129f5a; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x00129f86: je 0x129fac; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012a1c8: je 0x12a1ee; inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012a65b: je 0x12a666; sub esp, 0xc; push esi; call eax; 
0x0012a634: je 0x12a770; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0012a888: je 0x12a896; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0012b4ec: je 0x12b514; add byte ptr [eax - 0x74f7137d], dl; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0012bba8: je 0x12bbb3; sub esp, 0xc; push esi; call eax; 
0x0012bd60: je 0x12bd6b; sub esp, 0xc; push edi; call eax; 
0x0012c579: je 0x12c59f; xor bh, bh; je 0x12c5a3; xor byte ptr [eax - 0x73], dl; cmp dword ptr [ecx + 0x62], -6; call dword ptr [edi - 0x17]; 
0x0012c57d: je 0x12c5a3; xor byte ptr [eax - 0x73], dl; cmp dword ptr [ecx + 0x62], -6; call dword ptr [edi - 0x17]; 
0x0012ca8c: je 0x12cab2; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0012cadb: je 0x12cb01; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012cd00: je 0x12cd26; inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012cfe9: je 0x12cff4; sub esp, 0xc; push ebp; call eax; 
0x0012cfcb: je 0x12d0d8; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0012d394: je 0x12d3a2; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0012d546: je 0x12d56c; pop esp; push esi; call dword ptr [eax + 0x14]; 
0x0012d593: je 0x12d5b9; inc esp; push esi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012d5a2: je 0x12db0b; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push esi; call dword ptr [eax + 0x10]; 
0x0012dd47: je 0x12ddb0; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0012e2b4: je 0x12e2da; cmp al, 0x55; push dword ptr [esp + 0x20]; push esi; push eax; call dword ptr [edx]; 
0x0012e2b9: je 0x12e2df; and byte ptr [esi + 0x50], dl; call dword ptr [edx]; 
0x0012e434: je 0x12e491; pop edi; ret; 
0x0012e989: je 0x12e99a; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0012f1ec: je 0x12f19d; mov dword ptr gs:[esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0012f19b: je 0x12f1d8; add esp, 4; pop ebx; pop esi; ret; 
0x0012f215: je 0x12f220; ret; 
0x0012f3f4: je 0x12f41c; add byte ptr [eax - 0x3f7c3e77], dl; or byte ptr [ebx + 0x74fff878], al; jne 0x12f387; ret 0x3901; 
0x0012f695: je 0x12f6bd; add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x0012faa7: je 0x12facd; adc al, 0x53; call dword ptr [eax]; 
0x0012fbd2: je 0x12fbf8; sbb al, 0x53; call eax; 
0x0012fcc7: je 0x12fced; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0012feb4: je 0x12fed0; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x0012ffc8: je 0x12ffd6; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001306b1: je 0x1306bf; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00130733: je 0x130770; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0013147c: je 0x1314a2; adc byte ptr [ebp - 0x59e4f7a], cl; call dword ptr [eax - 0x73]; 
0x0013153b: je 0x131558; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x001316b1: je 0x1316d0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00131791: je 0x1317b0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00131d61: je 0x131d80; cmp eax, 2; sete al; movzx eax, al; ret; 
0x001323b9: je 0x1323e8; mov eax, ecx; pop ebx; ret; 
0x00132419: je 0x132448; mov eax, ecx; pop ebx; ret; 
0x00132fae: je 0x132fd4; add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x001336a3: je 0x1336c9; xor byte ptr [ecx], ch; ret 0x5356; 
0x00133ca3: je 0x133cc9; cmp byte ptr [ebp - 0x55a377a], cl; call dword ptr [eax - 0x73]; 
0x00133d63: je 0x133d89; xor byte ptr [ecx], ch; ret 0x5356; 
0x0013776e: je 0x13776d; jmp dword ptr [esi - 0x70]; 
0x001377fe: je 0x1377fd; jmp dword ptr [esi - 0x70]; 
0x00137c1d: je 0x137c45; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00138b4e: je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; 
0x00138b4e: je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; ret; 
0x00138ffc: je 0x139022; sbb al, 0x6a; sub byte ptr [ebp - 0x75], dl; inc esp; and al, 0x24; call eax; 
0x00139508: je 0x13950c; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0013992c: je 0x139954; add byte ptr [eax + 0x3750808b], dl; add byte ptr [eax], al; jmp dword ptr [eax + 8]; 
0x00139c83: je 0x139ca9; inc eax; lea eax, [esp + 0x60]; push eax; call ecx; 
0x0013a0f0: je 0x13a116; and al, 0x8b; dec esp; and al, 0x24; call ecx; 
0x0013a14b: je 0x13a171; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0013a7dc: je 0x13a804; add byte ptr [eax + 0x66d2b60f], dl; and eax, 0xe2c1f807; add ecx, dword ptr [ecx]; ret 0x8966; 
0x0013b001: je 0x13b027; and al, 0x8d; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x0013b005: je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x0013b2ad: je 0x13b2d5; add dh, dh; ret; 
0x0013b3e8: je 0x13b40e; adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x0013be7d: je 0x13bea5; add al, ch; push 0x81000010; ret 0x817b; 
0x0013c2c9: je 0x13c318; cmp dl, 0x2f; ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x0013c67d: je 0x13c672; call dword ptr [ebp - 0x47]; 
0x0013ca7d: je 0x13caa5; add byte ptr [ebx - 0x74fbdbbc], cl; inc eax; push eax; ret; 
0x0013cb35: je 0x13cb5b; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0013cb83: je 0x13cba9; adc byte ptr [ecx + 0x376483], cl; add byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0013cbb6: je 0x13cbd4; cmp al, 4; jne 0x1a68f; mov eax, 8; add esp, 0xc; ret; 
0x0013cfa6: je 0x13cfcc; sbb al, 0xe8; ret 0xef6d; 
0x0013cfd9: je 0x13cfff; sbb al, 0xe8; dec edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0013d0bd: je 0x13d0d7; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0013d121: je 0x13d12f; lea edx, [ebx - 0x1ca0]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0013d19e: je 0x13d1b0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0013dbee: je 0x13dc00; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0013e44f: je 0x13e475; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0013e534: je 0x13e55a; adc al, ch; test eax, 0x81ffffe9; ret; 
0x0013f0ed: je 0x13f115; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x7d]; 
0x0013f180: je 0x13f190; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013f5f2: je 0x13f610; mov eax, dword ptr [eax + 0x1a10]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f632: je 0x13f650; mov eax, dword ptr [eax + 0x1a14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f672: je 0x13f690; mov eax, dword ptr [eax + 0x1a18]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6b2: je 0x13f6d0; mov eax, dword ptr [eax + 0x1a1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6f2: je 0x13f710; mov eax, dword ptr [eax + 0x1a20]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f733: je 0x13f750; mov eax, dword ptr [eax + 0x1a24]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f84c: je 0x13f874; add byte ptr [eax + 0x3904c083], dl; ret 0x4976; 
0x0013fce2: je 0x13fd08; sub al, 0xff; je 0x13fd0c; sub al, 0xe8; ret 0xf833; 
0x0013fce6: je 0x13fd0c; sub al, 0xe8; ret 0xf833; 
0x00143264: je 0x14328c; add byte ptr [eax + 0x7d82e95b], dl; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00145a82: je 0x145a83; inc dword ptr [0x9e57b]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0014616b: je 0x146169; jmp dword ptr [esi - 0x70]; 
0x001469dc: je 0x1469e0; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146f2c: je 0x146f30; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x0014888d: je 0x1488a0; call 0x13cee5; add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014a88d: je 0x14a8a0; call 0x13cee5; add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014c87f: je 0x14c8a0; call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014eac2: je 0x14eae0; call 0x13cee5; add ebx, 0x414f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014faa2: je 0x14fac0; call 0x13cee5; add ebx, 0x406d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00150aa2: je 0x150ac0; call 0x13cee5; add ebx, 0x3f897; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00151bcf: je 0x151bf0; call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00153d72: je 0x153d90; call 0x13cee5; add ebx, 0x3ca07; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0015619c: je 0x1561c4; add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x001561bc: je 0x1561e4; add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001561cc: je 0x1561f4; add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001561dc: je 0x156204; add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001561ec: je 0x156214; add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001561fc: je 0x156224; add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0015620c: je 0x156234; add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x0015624c: je 0x156274; add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0015c95c: je 0x15c984; add byte ptr [eax - 0x7cf73f7d], dl; ret 0x8308; 
0x0015d33d: je 0x15d350; pop ebx; mov eax, 1; ja 0x15d349; neg eax; ret; 
0x0015d35c: je 0x15d384; add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0015db3c: je 0x15db64; add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x0015ec85: je 0x15ecad; add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0015ed34: je 0x15ed50; mov eax, 1; jg 0x15ed40; neg eax; ret; 
0x0015f0a6: je 0x15f0c0; mov eax, 1; ja 0x15f0b1; neg eax; ret; 
0x00160d4c: je 0x160d74; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x0016177c: je 0x1617a4; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x00161bf2: je 0x161bfd; pmovmskb eax, xmm1; test eax, eax; jne 0x161e30; xor eax, eax; ret; 
0x00162102: je 0x162160; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00162a37: je 0x162b3a; mov eax, 4; pop edi; ret; 
0x00162a90: je 0x162b4e; mov eax, 8; pop edi; ret; 
0x00162ae0: je 0x162b62; mov eax, 0xc; pop edi; ret; 
0x00162b12: je 0x162b76; cmp byte ptr [edx + 0xf], 0; je 0x162b76; mov eax, 0x10; pop edi; ret; 
0x00162b18: je 0x162b76; mov eax, 0x10; pop edi; ret; 
0x00163312: je 0x163320; test al, 1; jne 0x163330; lea eax, [ecx + 4]; ret; 
0x001633ab: je 0x16333a; je 0x1633d5; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x0016331d: je 0x163345; add dh, dh; les eax, ptr [ecx]; jne 0x163340; lea eax, [ecx + 0xc]; ret; 
0x001633ad: je 0x1633d5; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001634fc: je 0x163494; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001635c0: je 0x1635a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001635d3: je 0x1635a0; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x001635bb: je 0x1635d0; and eax, 1; je 0x1635a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001647db: je 0x1647d4; ret 0; 
0x001647d9: je 0x1647ff; je 0x1647d4; ret 0; 
0x00164ed9: je 0x164eff; or al, 0x29; ret 0x448b; 
0x00166ea9: je 0x166e34; ret 0xb60f; 
0x00166ea3: je 0x166ec9; jo 0x166e32; jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x00167135: je 0x16715d; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x001678fb: je 0x167921; or al, 0xb; je 0x167925; sbb al, 0xf; xchg ebp, eax; ret; 
0x001678ff: je 0x167925; sbb al, 0xf; xchg ebp, eax; ret; 
0x00167991: je 0x1679b7; or al, 0xb; je 0x1679bb; sbb al, 0xf; xchg ebp, eax; ret; 
0x00167995: je 0x1679bb; sbb al, 0xf; xchg ebp, eax; ret; 
0x0016a051: je 0x16a077; adc al, 0x29; ret 0x448b; 
0x0016a853: je 0x16a7d7; add al, 0x83; ret 0xd304; 
0x0016b8dd: je 0x16b8e1; call eax; 
0x0016b9dd: je 0x16b9ec; sub esp, 0xc; push eax; call edx; 
0x0001b1a7: je 0x19185; sub esp, 0xc; push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012bef8: je 0x1a63b; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0001a6bc: je 0x1a6d5; lea edx, [eax - 0x16fbb0]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0001a712: je 0x1a715; ret; 
0x0001aeee: je 0x1af14; sbb byte ptr [ebp - 0x5d4336a], cl; call dword ptr [edx - 1]; 
0x0001afcc: je 0x1aff2; sbb byte ptr [ebp - 0x5d4197a], cl; call dword ptr [eax - 0x75]; 
0x0001b03c: je 0x1b064; add byte ptr [eax + 0x121ea4e8], dl; add byte ptr [0x1c8fbb], al; lea eax, [eax - 0x59434]; ret; 
0x0001b712: je 0x1b69f; dec esp; and al, 4; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x0001bcc3: je 0x1bce9; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x0001bcc8: je 0x1bcee; xor bh, bh; jae 0x1bcd2; call esi; 
0x0001befe: je 0x1bf13; sub esp, 0xc; push esi; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x0001ce55: je 0x1ce6a; sub esp, 0xc; push esi; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x0001db4c: je 0x1db74; add byte ptr [eax - 0x7c378275], dl; rol dword ptr [ecx], 0x83; ret; 
0x0001dfae: je 0x1dfd4; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001dfb2: je 0x1dfd8; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001dfb6: je 0x1dfdc; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001e4ae: je 0x1e4d4; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001e4b2: je 0x1e4d8; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001e4b6: je 0x1e4dc; pushal; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001eb0c: je 0x1eb32; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001eb10: je 0x1eb36; pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001eb14: je 0x1eb3a; mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x0001f0d3: je 0x1f0f9; push 0x642474ff; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0001f0d7: je 0x1f0fd; push dword ptr fs:[esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0001f0db: je 0x1f101; insb byte ptr es:[edi], dx; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0001f790: je 0x1f7b6; push esp; push dword ptr [esp + 0x5c]; call edi; 
0x0001f794: je 0x1f7ba; pop esp; call edi; 
0x0001f909: je 0x1f92f; cmp al, 0x8d; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x0001fa21: je 0x1fa47; cmp al, 0x8d; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x0001fa7b: je 0x1faa1; cmp al, 0x8d; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x0001fc82: je 0x1fca8; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0001fc86: je 0x1fcac; pop eax; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000202ba: je 0x202e0; cmp byte ptr [ebp - 0x5f7bf00a], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00020546: je 0x205b5; cli; call dword ptr [eax - 0x18]; 
0x00020778: je 0x2079e; push eax; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0002077c: je 0x207a2; push eax; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0002116b: je 0x211da; cli; call dword ptr [eax - 0x18]; 
0x00021433: je 0x21459; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x00021437: je 0x2145d; insb byte ptr es:[edi], dx; call esi; 
0x00021561: je 0x21587; sbb al, 0x89; ret 0xb60f; 
0x00021d0a: je 0x21d79; cli; call dword ptr [eax - 0x18]; 
0x000221d8: je 0x221fe; push 0x682474ff; call esi; 
0x000229b3: je 0x229d9; push 0x682474ff; call esi; 
0x00022ab1: je 0x22ad7; cmp byte ptr [ecx - 0x769fdbbc], cl; ret 0x44c7; 
0x00023348: je 0x233b7; cli; call dword ptr [eax - 0x18]; 
0x0002355e: je 0x23584; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00023562: je 0x23588; mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x00023d7b: je 0x23da1; push 0x682474ff; call esi; 
0x00024710: je 0x2477f; cli; call dword ptr [eax - 0x18]; 
0x00024992: je 0x249b8; pop eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x00024996: je 0x249bc; dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x0002499a: je 0x249c0; dec esp; call esi; 
0x00024ac2: je 0x24ae8; dec esp; push dword ptr [esp + 0x4c]; call esi; 
0x00024ac6: je 0x24aec; dec esp; call esi; 
0x00024d0c: je 0x24d31; sub esp, 0xc; push ebx; call 0x139490; mov dword ptr [esp], esi; call ebx; 
0x00025490: je 0x254b6; sub al, 0xe9; or eax, 0xe8fffffc; ret; 
0x0002550a: je 0x25518; add esp, 8; pop ebx; ret; 
0x00025505: je 0x25518; cmp eax, 3; je 0x25518; add esp, 8; pop ebx; ret; 
0x0002614b: je 0x2614f; call edx; 
0x000262d4: je 0x262de; mov dword ptr [esp], eax; call edx; 
0x00026fb5: je 0x26fdd; add dh, dh; ret 0x7503; 
0x000273d9: je 0x273e4; sub esp, 0xc; push esi; call eax; 
0x00028127: je 0x2814d; sbb al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000291dc: je 0x29204; add byte ptr [eax + 0x424448b], dl; and eax, 0x7f; ret; 
0x00029a66: je 0x29a8c; sbb byte ptr [edx], ch; call 0x29a20; add esp, 0x1c; ret; 
0x0002b0ee: je 0x2b114; sub byte ptr [edx], ch; call 0x2b090; add esp, 0x2c; ret; 
0x0002b234: je 0x2b25a; sbb byte ptr [ebp - 0x18], dl; ret; 
0x0002bb1e: je 0x2bb44; sub al, ch; ret 0xfed5; 
0x0002c0f9: je 0x2c11f; sbb byte ptr [ecx], al; ret 0x6c89; 
0x0002dff5: je 0x2e01b; cmp al, 0xe8; ret; 
0x00031b1d: je 0x31b10; xor eax, eax; ret; 
0x00031b63: je 0x31b89; sbb byte ptr [ebx - 0x7aefdbb4], cl; fisttp dword ptr [edi]; xchg esp, eax; ret 0xf685; 
0x00031bc3: je 0x31be9; sbb byte ptr [ebx - 0x7aefdbb4], cl; fisttp dword ptr [edi]; xchg esp, eax; ret 0xf685; 
0x00031c75: je 0x31c90; lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x00032168: je 0x3218e; sbb al, 0xe8; mov al, 0x3d; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000325b9: je 0x325df; xor al, 0x8d; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x00032631: je 0x32657; xor al, 0x56; call edi; 
0x000327a4: je 0x327ca; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00032806: je 0x3282c; adc bh, bh; jne 0x3280c; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000328e6: je 0x3290c; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00032957: je 0x3297d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000329bd: je 0x329e3; sub byte ptr [ecx + 0x5624244c], cl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0003383d: je 0x33863; dec eax; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00033881: je 0x338a7; dec esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00033a19: je 0x33a3f; sbb al, 0xe8; paddw mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00033c86: je 0x33cac; sub al, ch; ret 0xfffe; 
0x00034019: je 0x3403f; sbb al, 0xe8; maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00034045: je 0x3406b; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x000343b5: je 0x343bd; mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00034f25: je 0x34f4b; sbb al, 0xe8; jecxz 0x34f2c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00034f85: je 0x34fab; sbb al, 0xe8; add eax, dword ptr [edx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00034fa8: je 0x34fce; sbb byte ptr [eax + 0x50], dl; call 0x34fc0; add esp, 0x1c; ret; 
0x0003534d: je 0x35375; add byte ptr [esi + ebx*2 + 1], dh; ret; 
0x00035eb3: je 0x35ed9; sub al, 0xe8; test dword ptr [esi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00035f73: je 0x35f99; sub al, 0xe8; mov ch, 0x12; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00035fa1: je 0x35fc7; sub al, 0xe8; xchg dword ptr [edx], edx; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000379ef: je 0x37a15; sbb al, 0xe8; jns 0x379fd; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00037a7d: je 0x37aa3; sbb al, 0xe8; cmp esi, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00037aaf: je 0x37ad5; sbb al, 0xe8; dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00038191: je 0x381b7; sbb byte ptr [ecx], al; ret; 
0x0003a8ca: je 0x3a8f0; sbb al, 0xff; je 0x3a8f4; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x0003a8ce: je 0x3a8f4; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x0003ad45: je 0x3ad6b; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x0003b0e1: je 0x3b107; sbb byte ptr [ecx], al; ret; 
0x0003c404: je 0x3c42c; add byte ptr [eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0003e021: je 0x3e047; sbb byte ptr [ecx], al; ret; 
0x00040f43: je 0x40f69; and byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0004168d: je 0x416b5; add byte ptr [ebx - 0x977b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000418da: je 0x418e8; add esp, 4; pop ebx; pop esi; ret; 
0x00041938: je 0x4195e; sub byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x00042d35: je 0x42d3d; cmp byte ptr [eax - 1], 0x2f; jne 0x42d30; add esp, 8; pop ebx; ret; 
0x000432e2: je 0x43308; inc esp; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00043536: je 0x4355c; and byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + esi - 6], esi; call dword ptr [ebx + 0x51]; 
0x0004353c: je 0x43571; cli; call dword ptr [ebx + 0x51]; 
0x000437ae: je 0x437d4; sbb al, 0xe8; mov cl, dh; add eax, 0x1cc48300; ret; 
0x00046641: je 0x46667; sbb byte ptr [ecx], al; ret; 
0x0004a01d: je 0x4a045; add byte ptr [ecx], ch; ret 0xfac1; 
0x0004a065: je 0x4a0db; jns 0x4a02f; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0004a066: je 0x4a0e1; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x0004d29e: je 0x4d2c4; sbb bh, bh; je 0x4d2c8; sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x0004d2a2: je 0x4d2c8; sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x0004da61: je 0x4da87; adc byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0004e6a5: je 0x4e6cd; add dh, dh; ret; 
0x0004ef9a: je 0x4ef96; call dword ptr [eax - 0x73]; 
0x0004efad: je 0x4efa9; call dword ptr [eax - 0x18]; 
0x0004ef94: je 0x4efba; or al, 0x8d; xchg byte ptr [esp + esi*2 - 6], bl; call dword ptr [eax - 0x73]; 
0x00050148: je 0x50109; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0005013e: je 0x50164; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x00050144: je 0x5016a; sub al, 0xe8; je 0x50109; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0005017f: je 0x501a5; sbb al, 0xe8; dec ecx; add al, byte ptr es:[eax]; add esp, 0x1c; ret; 
0x000501be: je 0x501e4; sbb al, 0xe8; jp 0x501db; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000501de: je 0x50204; sbb al, 0xe8; jp 0x50263; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00050a74: je 0x50a9c; add byte ptr [eax - 0x72fb137d], dl; lahf; int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x00050d76: je 0x50d72; call dword ptr [eax - 0x73]; 
0x00050d89: je 0x50d85; call dword ptr [eax - 0x18]; 
0x00050fc8: je 0x51008; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000510cc: je 0x510f4; add byte ptr [eax + 0x10b8], dl; add byte ptr [ebx + 0x5e], bl; ret; 
0x000511fe: je 0x51224; sbb al, 0xe8; cmp al, byte ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005149c: je 0x514c4; add byte ptr [eax - 0x72fb137d], dl; test ebp, ebp; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x0005180c: je 0x51834; add byte ptr [eax + 0x34b2858d], dl; cli; call dword ptr [esi - 0x77]; 
0x00051db7: je 0x51d81; stc; inc dword ptr [ecx]; sti; jmp ebx; 
0x0005d939: je 0x5d95f; or al, 0x56; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0005de3c: je 0x5de64; add byte ptr [eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x0005de45: je 0x5de6b; adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x0005e59c: je 0x5e5c4; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x0005f8e5: je 0x5f90d; add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [ebx + 0x6a]; 
0x000604b2: je 0x6052a; cli; call dword ptr [eax - 0x18]; 
0x000613b5: je 0x613db; inc esp; push esi; call dword ptr [ebx + 0x1c]; 
0x00061908: je 0x6192e; inc esp; push esi; call dword ptr [eax + 0x1c]; 
0x00062020: je 0x62098; cli; call dword ptr [eax - 0x18]; 
0x00062de5: je 0x62e0b; adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x0006455d: je 0x64585; add byte ptr [eax - 0x8b843], al; jmp dword ptr [eax]; 
0x00065761: je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x0006588c: je 0x658b2; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x00066455: je 0x6647b; xor al, 0x56; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x0006645a: je 0x66480; push eax; push ebp; call dword ptr [ebx + 0x1c]; 
0x00066c80: je 0x66ca6; push eax; push ebp; call dword ptr [ebx + 0x1c]; 
0x000675d6: je 0x6764e; cli; call dword ptr [eax - 0x18]; 
0x00069a97: je 0x69aa6; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00069acf: je 0x69ae8; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00069b2f: je 0x69b55; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00069b45: je 0x69b58; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00069b86: je 0x69b98; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0006a545: je 0x6a56d; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0006acf5: je 0x6ad1d; add byte ptr [ebx + 0x106a04ec], al; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0006b551: je 0x6b560; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0006cb65: je 0x6cb8d; add dh, dh; ret 0x7420; 
0x0006e561: je 0x6e587; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0006e6c1: je 0x6e6e7; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0006e8b4: je 0x6e8b9; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0006e909: je 0x6e90e; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0006e985: je 0x6e9ad; add byte ptr [ecx], ch; ret; 
0x0006ffa3: je 0x6ffc9; adc bh, bh; je 0x6ffcd; adc byte ptr [ebx + 0x571c247c], cl; call dword ptr [ebx + 0x40]; 
0x0006ffa7: je 0x6ffcd; adc byte ptr [ebx + 0x571c247c], cl; call dword ptr [ebx + 0x40]; 
0x000700a5: je 0x700cb; sbb al, 0x56; call dword ptr [ebx + 0x40]; 
0x0007060c: je 0x70632; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x00070976: je 0x7099c; xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x00071534: je 0x7155a; adc al, ch; test eax, 0x81000cb9; ret; 
0x00071955: je 0x71960; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x71960; ret; 
0x0007222c: je 0x72254; add byte ptr [eax - 0x74aca9a9], dl; je 0x7225a; adc al, ch; test eax, 0x81000cac; ret; 
0x00072234: je 0x7225a; adc al, ch; test eax, 0x81000cac; ret; 
0x00073b4a: je 0x73b80; mov eax, edx; pop ebx; pop esi; ret; 
0x00073fee: je 0x74020; mov eax, edx; pop ebx; ret; 
0x00074ec0: je 0x74ee6; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00074fa2: je 0x74fb0; add esp, 4; pop ebx; pop esi; ret; 
0x0007503f: je 0x75065; or al, 0x57; push ebx; call dword ptr [ecx + 0x3c]; 
0x0007607e: je 0x760a4; cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x00076e64: je 0x76e8c; add byte ptr [eax - 0x7ce541f1], dl; rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x00077456: je 0x7747c; and al, 0x8b; adc esi, esi; ret 0xf08; 
0x00078134: je 0x7815a; adc al, ch; test eax, 0x81000c4d; ret; 
0x000781d5: je 0x781fb; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000783a5: je 0x783cb; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00078a53: je 0x78a79; cmp byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00078bdd: je 0x78bf3; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00078ddd: je 0x78e05; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x00078e42: je 0x78e47; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x00078f15: je 0x78f3d; add byte ptr [ecx], ch; ret; 
0x000799fa: je 0x79a08; mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x799f8; ret; 
0x0007a389: je 0x7a3af; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0007a782: je 0x7a7a0; mov eax, dword ptr [eax + 0x19e0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a7c2: je 0x7a7e0; mov eax, dword ptr [eax + 0x19e4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a802: je 0x7a820; mov eax, dword ptr [eax + 0x19e8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a842: je 0x7a860; mov eax, dword ptr [eax + 0x19ec]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a882: je 0x7a8a0; mov eax, dword ptr [eax + 0x19f0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8c2: je 0x7a8e0; mov eax, dword ptr [eax + 0x19f4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a902: je 0x7a920; mov eax, dword ptr [eax + 0x19f8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a942: je 0x7a960; mov eax, dword ptr [eax + 0x19fc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a982: je 0x7a9a0; mov eax, dword ptr [eax + 0x1a00]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a9c2: je 0x7a9e0; mov eax, dword ptr [eax + 0x1a04]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa02: je 0x7aa20; mov eax, dword ptr [eax + 0x1a08]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa43: je 0x7aa60; mov eax, dword ptr [eax + 0x1a0c]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aac3: je 0x7aae0; mov eax, dword ptr [eax + 0x1a2c]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab03: je 0x7ab20; mov eax, dword ptr [eax + 0x1a30]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab42: je 0x7ab60; mov eax, dword ptr [eax + 0x1a34]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab82: je 0x7aba0; mov eax, dword ptr [eax + 0x1a38]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007abc2: je 0x7abe0; mov eax, dword ptr [eax + 0x1a3c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac02: je 0x7ac20; mov eax, dword ptr [eax + 0x1a40]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac42: je 0x7ac60; mov eax, dword ptr [eax + 0x1a44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac82: je 0x7aca0; mov eax, dword ptr [eax + 0x1a48]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007acc6: je 0x7ace8; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007ad2b: je 0x7ad3c; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x0007adc5: je 0x7aded; add byte ptr [ebp + 0xf0], bh; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0007ae29: je 0x7ae38; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0007b1ef: je 0x7b1f3; call eax; 
0x0007b255: je 0x7b235; mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0007b29d: je 0x7b235; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x0007b45b: je 0x7b470; test edx, edx; jne 0x7b480; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0007b4c7: je 0x7b4d8; or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0007c776: je 0x7c797; mov ebp, dword ptr [esi - 0x170]; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x0007cddb: je 0x7ce01; sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007d327: je 0x7d34d; adc byte ptr [ebp - 0x576277a], cl; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x0007d9bf: je 0x7d9db; sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push 0; call dword ptr [eax]; 
0x0007e41a: je 0x7e41e; call eax; 
0x0007f1b1: je 0x7f1d7; or al, 0x8d; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007f25f: je 0x7f285; or al, 0x8d; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007f382: je 0x7f3a8; or al, 0x8d; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007f3a6: je 0x7f3cc; or al, 0x8d; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007f3ca: je 0x7f3f0; or al, 0x8d; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x00080255: je 0x8027d; add byte ptr [ebx - 0x1077b], cl; push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x0008027c: je 0x802a2; and al, 0x56; call eax; 
0x000807ec: je 0x80812; and al, 0x53; call eax; 
0x00080c4c: je 0x80c72; inc eax; push dword ptr [esp + 0x14]; push ebp; call eax; 
0x00080c50: je 0x80c76; adc al, 0x55; call eax; 
0x000811d5: je 0x811fb; or byte ptr [ecx], bh; ret; 
0x00081ca4: je 0x81cae; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x00082000: je 0x82026; cmp al, 0x51; push ebx; call eax; 
0x00082136: je 0x8215c; sbb al, 0x52; call eax; 
0x0008212c: je 0x821e0; sub esp, 8; push dword ptr [esp + 0x1c]; push edx; call eax; 
0x00082295: je 0x822bb; sbb al, 0x53; call eax; 
0x0008228f: je 0x822c0; sub esp, 8; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x000823a6: je 0x823cc; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x00082989: je 0x829af; pop esp; push dword ptr [esp + 0x5c]; call eax; 
0x0008298d: je 0x829b3; pop esp; call eax; 
0x00082afe: je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x00082af3: je 0x82b90; sub esp, 8; push esi; push dword ptr [esp + 0x6c]; call eax; 
0x00082c7e: je 0x82ca4; insb byte ptr es:[edi], dx; push ebp; call eax; 
0x00083056: je 0x83060; pop ebx; pop esi; pop edi; ret; 
0x0008305d: je 0x83085; add byte ptr [ebx - 0x7c72f314], al; in al, 0x8a; cli; call dword ptr [eax - 0x18]; 
0x00083447: je 0x83508; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00083540: je 0x83550; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000835a5: je 0x835cd; add byte ptr [ebx - 0xaff714], al; jae 0x835d3; call edx; 
0x0008506f: je 0x85095; sbb al, 0xe8; fnstcw word ptr [edx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00086e06: je 0x86e0d; cmp cl, dl; je 0x86e0d; inc eax; pop edi; ret; 
0x00086e0a: je 0x86e0d; inc eax; pop edi; ret; 
0x0008720b: je 0x87213; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x00087af6: je 0x87b1c; sub al, 0xe8; push edx; idiv bh; call dword ptr [ebx + 0x56]; 
0x0008aa32: je 0x8a9c0; cli; call dword ptr [edx - 0x73]; 
0x0008aa51: je 0x8a9df; cli; call dword ptr [edx - 0x73]; 
0x0008aacc: je 0x8aaf4; add byte ptr [eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0008aae5: je 0x8ab0d; add byte ptr [ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x0008ac61: je 0x8ac67; cmp eax, ebx; jne 0x8ac58; mov eax, edx; pop ebx; ret; 
0x0008ad21: je 0x8ad18; pop ebx; ret; 
0x0008ad59: je 0x8ad50; cmp edx, esi; je 0x8ad50; pop ebx; pop esi; ret; 
0x0008ad5d: je 0x8ad50; pop ebx; pop esi; ret; 
0x0008adfd: je 0x8ae10; cmp eax, ecx; jne 0x8adf0; mov eax, edx; pop ebx; ret; 
0x0008afb5: je 0x8afdb; adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x1c], dh; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b075: je 0x8b09b; adc byte ptr [ebx - 0x7cebdba4], cl; stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0008b0b4: je 0x8b0dc; add byte ptr [eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0008b5dc: je 0x8b604; add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0008ccec: je 0x8cd14; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008ccfd: je 0x8cd25; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0008cf7d: je 0x8cfa5; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0008ebd8: je 0x8ebdc; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008ecdc: je 0x8ed04; add byte ptr [eax + 0x5b118966], dl; ret; 
0x0008ed0c: je 0x8ed34; add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x0008ed9c: je 0x8edc4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edac: je 0x8edd4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edbc: je 0x8ede4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008faea: je 0x8ef20; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x0008fa8f: je 0x8efa0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000910ac: je 0x910d4; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0009312c: je 0x93154; add byte ptr [eax + 0x5b118966], dl; ret; 
0x0009315c: je 0x93184; add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x000931ec: je 0x93214; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000931fc: je 0x93224; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0009320c: je 0x93234; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000942fd: je 0x94325; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x00094bf8: je 0x94c02; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009533d: je 0x95365; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009534c: je 0x95374; add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x000954fe: je 0x954cc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000955ed: je 0x95615; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x00096a2d: je 0x96a55; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00096a3c: je 0x96a64; add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x00096ced: je 0x96d15; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000985ad: je 0x985d5; add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0009ab5d: je 0x9ab85; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x0009c58d: je 0x9c5b5; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009c76f: je 0x9c8d0; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0009c927: je 0x9c940; bsf ecx, ecx; sub edx, ecx; jbe 0x9c960; add eax, ecx; ret; 
0x0009caf9: je 0x9cb4a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009cbab: je 0x9cbfc; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0009ce42: je 0x9ce4d; pmovmskb eax, xmm1; test eax, eax; jne 0x9cec0; xor eax, eax; ret; 
0x0009ce70: je 0x9cebb; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0009cf2a: je 0x9cf00; bsr ecx, edx; add eax, ecx; ret; 
0x0009cf82: je 0x9cfe0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0009d0ff: je 0x9d110; bsf ecx, ecx; add eax, ecx; ret; 
0x0009d148: je 0x9d160; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x0009d288: je 0x9d2d4; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009d3df: je 0x9d3c0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009d44f: je 0x9d430; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009d58f: je 0x9d59f; call ecx; 
0x0009d6b1: je 0x9d6b4; inc eax; pop edi; ret; 
0x0009d855: je 0x9d858; inc eax; pop edi; pop esi; ret; 
0x0009dc03: je 0x9dc13; call ecx; 
0x0009de6e: je 0x9de74; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009e593: je 0x9e596; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0009e6b6: je 0x9e6bf; mov byte ptr [ecx + eax], 0; dec ecx; jne 0x9e6b8; pop esi; ret; 
0x0009ecfd: je 0x9ed10; cmp eax, 2; je 0x9ed20; xor eax, eax; ret; 
0x0009ed02: je 0x9ed20; xor eax, eax; ret; 
0x0009ee31: je 0x9ee18; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0009f071: je 0x9f058; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0009f29d: je 0x9f2c5; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0009f3c8: je 0x9f3d0; mov eax, esi; pop ebx; pop esi; ret; 
0x0009f7cb: je 0x9f7d6; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x0009f803: je 0x9f829; sbb byte ptr [edx], ch; call 0x9f820; add esp, 0x1c; ret; 
0x0009fd34: je 0x9fd5a; sbb al, 0x8d; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x0009fe6c: je 0x9fe92; xor al, 0xff; je 0x9fe96; inc eax; push edi; call esi; 
0x0009fe70: je 0x9fe96; inc eax; push edi; call esi; 
0x0009fee3: je 0x9ff09; sbb al, 0x8d; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x0009ff03: je 0x9ff29; sbb al, 0x8d; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x0009ff23: je 0x9ff49; sbb al, 0x8d; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x000a013c: je 0xa0162; cmp bh, bh; je 0xa0166; inc eax; push edi; call esi; 
0x000a0140: je 0xa0166; inc eax; push edi; call esi; 
0x000a035d: je 0xa0383; sub al, 0x55; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x000a03b9: je 0xa03df; sbb al, 0x8d; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000a04ef: je 0xa0515; sbb al, 0x8d; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000a050f: je 0xa0535; sbb al, 0x8d; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000a0578: je 0xa057e; test edx, edx; jne 0xa0570; ret; 
0x000a05a3: je 0xa05c9; sub al, 0xe8; jne 0xa05ab; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a0603: je 0xa0629; sub al, 0xe8; mov ch, 6; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a0631: je 0xa0657; sub al, 0xe8; xchg dword ptr [esi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a0663: je 0xa0689; sub al, 0xe8; lds ecx, ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a071f: je 0xa0745; sbb al, 0xe8; mov dword ptr [esi], ebx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a0a3c: je 0xa0a64; add byte ptr [eax - 0xf7137d], dl; je 0xa0a6a; and byte ptr [ebx - 0x18], dl; ret; 
0x000a0a44: je 0xa0a6a; and byte ptr [ebx - 0x18], dl; ret; 
0x000a2195: je 0xa21bb; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000a2574: je 0xa259a; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000a2597: je 0xa25bd; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000a5244: je 0xa526a; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000a5267: je 0xa528d; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000a76da: je 0xa7700; sbb al, 0xff; je 0xa7704; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffdb; ret; 
0x000a76de: je 0xa7704; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffdb; ret; 
0x000a7dd4: je 0xa7dfa; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000a7df7: je 0xa7e1d; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000aa50c: je 0xaa514; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000aa9f7: je 0xaa982; ret 0x860f; 
0x000ab604: je 0xab62c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000ac0e4: je 0xac10c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000ad39d: je 0xad3c5; add byte ptr [ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000ad5ba: je 0xad5e0; sbb al, 0xff; je 0xad5e4; sbb al, 0xe8; lcall 0x1cc4, 0x83fffaab; ret; 
0x000ad5be: je 0xad5e4; sbb al, 0xe8; lcall 0x1cc4, 0x83fffaab; ret; 
0x000ae6b4: je 0xae6da; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000ae6d7: je 0xae6fd; adc al, 0x8d; xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x000af584: je 0xaf5ac; add byte ptr [eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x36277b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000b258d: je 0xb25b5; add byte ptr [edi + 0x5e], bl; ret; 
0x000b25ad: je 0xb25d5; add byte ptr [eax + 1], bh; jg 0xb25b9; neg eax; ret; 
0x000b2757: je 0xb2770; mov cl, dl; and cl, 0xf; je 0xb2780; ret; 
0x000b275e: je 0xb2780; ret; 
0x000b2775: je 0xb2790; add eax, 2; ret; 
0x000b284c: je 0xb2860; cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0xb2830; mov eax, ecx; ret; 
0x000b285c: je 0xb2884; add byte ptr [eax - 0x37763e77], dl; ret; 
0x000b2905: je 0xb2910; mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xb2900; ret; 
0x000b2b1e: je 0xb2b44; and byte ptr [ebx - 0x7cebdb8c], cl; ret 0x89ff; 
0x000b2b22: je 0xb2b48; adc al, 0x83; ret 0x89ff; 
0x000b3945: je 0xb396b; sub cl, al; call 0x8c09626d; jl 0xb3974; sub al, 0x29; ret 0x448b; 
0x000b3b12: je 0xb3b38; pop eax; lea eax, [esp + 0xdc]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000b3d8a: je 0xb3db0; pop eax; lea eax, [esp + 0xa4]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000b54c1: je 0xb54e7; adc al, 0xff; je 0xb54eb; adc al, 0xe8; ret; 
0x000b54c5: je 0xb54eb; adc al, 0xe8; ret; 
0x000b96c9: je 0xb96ef; add al, 0x89; ret; 
0x000ba653: je 0xba679; sub al, 0xe8; jne 0xba6a0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ba845: je 0xba86b; adc al, 0x8b; mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x000bee2a: je 0xbee30; add esp, 0xc; ret; 
0x000beecc: je 0xbef20; mov eax, 0x196; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bef2e: je 0xbef88; sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x000bf05c: je 0xbf118; sub esp, 8; push edi; push ebx; call eax; 
0x000bfb13: je 0xbfb39; adc al, 0x83; jmp dword ptr [ebx + 0xf]; 
0x000c017d: je 0xc01a5; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000c0ee9: je 0xc0f00; sub esp, 0xc; push esi; call eax; 
0x000c12f8: je 0xc1317; sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c14f8: je 0xc1517; sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c1a11: je 0xc1a37; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x000c1a15: je 0xc1a3b; pop eax; push dword ptr [esp + 0x1c]; call edi; 
0x000c1cfe: je 0xc1d24; xor byte ptr [ebp + 0x504c2444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x000c1d07: je 0xc1d2d; xor al, 0xff; je 0xc1d31; inc eax; call ebx; 
0x000c1d0b: je 0xc1d31; inc eax; call ebx; 
0x000c43a5: je 0xc43cd; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000c4df7: je 0xc4e1d; sbb byte ptr [ebp - 0x5b8397a], cl; call dword ptr [eax - 0x73]; 
0x000c51c7: je 0xc51ed; sbb byte ptr [ebp - 0x5b82e7a], cl; call dword ptr [eax - 0x73]; 
0x000c57fb: je 0xc5810; cmp eax, -1; mov edx, 0; cmove eax, edx; pop ebx; ret; 
0x000c5836: je 0xc585c; sbb byte ptr [edx - 1], ch; call 0xc5850; add esp, 0x1c; ret; 
0x000c585e: je 0xc5884; sbb al, 0xe8; sub al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c587c: je 0xc58a2; sbb byte ptr [edx - 1], ch; call 0xc5890; add esp, 0x1c; ret; 
0x000c5add: je 0xc5b05; add al, ch; or edx, dword ptr [edx - 5]; dec dword ptr [ecx + 0x1db8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c5b5d: je 0xc5b85; add byte ptr [ebx - 0x1076d], cl; jmp dword ptr [ebp - 0x77]; 
0x000c7055: je 0xc707d; add byte ptr [eax + 0x40], bh; ret; 
0x000c7188: je 0xc71ba; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000c71a3: je 0xc71ba; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000c714f: je 0xc71ba; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000c7690: je 0xc7693; add byte ptr [eax], al; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x000c7ed5: je 0xc7efd; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000c84cc: je 0xc84f4; add byte ptr [eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x000c8678: je 0xc868e; sub esp, 8; push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000ca415: je 0xca43d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000caa2c: je 0xcaa54; add byte ptr [eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x000caba8: je 0xcabbe; sub esp, 8; push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000cc7ca: je 0xcc7d0; cmp al, 0x3f; jne 0xcc7e9; mov eax, 1; pop ebx; ret; 
0x000d01f9: je 0xd0216; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d026d: je 0xd0280; pop ebx; pop esi; ret; 
0x000d17e8: je 0xd1819; add esp, 4; pop ebx; pop esi; ret; 
0x000d195c: je 0xd18c2; pop ebx; pop esi; pop edi; ret; 
0x000d1cd1: je 0xd1cc7; dec dword ptr [ecx + 0xce82434]; je 0xd1ccf; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d1cd9: je 0xd1ccf; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d50a4: je 0xd50ca; cmp al, 0x29; ret 0x448b; 
0x000d7c8d: je 0xd7cb3; sbb al, 0x89; shr dword ptr [ecx], cl; ret; 
0x000d981e: je 0xd985a; or al, ch; ret 0xf3f8; 
0x000db6a0: je 0xdb6c6; xor byte ptr [ebx + 0x114868c], cl; cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x000dcdca: je 0xdcdf0; adc byte ptr [ecx + 0x568b0846], cl; and al, 0xe9; ret; 
0x000dd6d8: je 0xdd6fe; sbb byte ptr [edi], cl; xchg esp, eax; ret 0xc985; 
0x000dd7b4: je 0xdd7dc; add byte ptr [eax - 0x7c69eb77], dl; ret 0x3901; 
0x000de95d: je 0xde983; sub al, ch; dec ebx; ret; 
0x000df435: je 0xdf45d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000dfa2c: je 0xdfa54; add byte ptr [eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x000dfbd8: je 0xdfbee; sub esp, 8; push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000dff45: je 0xdff6d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000e055c: je 0xe0584; add byte ptr [eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x000e06d8: je 0xe06ee; sub esp, 8; push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000e1ba8: je 0xe1bce; sub al, 0xe8; mov al, byte ptr [0x83fffff8]; les ebp, ptr [eax]; pop ebx; ret; 
0x000e27a2: je 0xe27c8; add al, 0x8d; xchg byte ptr [eax], ah; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e2b4a: je 0xe2b70; adc byte ptr [ebx - 0x72fbdba4], cl; add dword ptr [eax - 0x22], -0x11; call dword ptr [eax + 0x6a]; 
0x000e2f1f: je 0xe2f30; mov eax, edx; pop ebx; pop esi; ret; 
0x000e2fbd: je 0xe2fe5; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000e7ffe: je 0xe8024; or al, 0x8b; mov word ptr [esi - 0x5f3e0], ss; add ecx, esi; jmp ecx; 
0x000e8b4d: je 0xe8b75; add byte ptr [ebx - 0x7cf3dbbc], cl; ret; 
0x000e8f24: je 0xe8f4a; adc al, 0x8d; xchg byte ptr [eax], cl; dec ebx; cli; call dword ptr [eax - 0x73]; 
0x000ea9aa: je 0xea9d0; sub al, 0xe8; jle 0xea9b8; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000eb39a: je 0xeb3b2; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000eb795: je 0xeb7bd; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ebd8c: je 0xebdb4; add byte ptr [eax - 0x3f7ccf75], dl; add al, 0x83; ret 0x8904; 
0x000ebf38: je 0xebf4e; sub esp, 8; push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000ec1b9: je 0xec1f8; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec1ef: je 0xec24c; pop esi; ret; 
0x000ec269: je 0xec2a8; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000ec29f: je 0xec2fc; pop esi; ret; 
0x000ec319: je 0xec358; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec34f: je 0xec3ac; pop esi; ret; 
0x000ec693: je 0xec6b9; or byte ptr [ebx - 0x10772], cl; jmp dword ptr [ebp - 0x7d]; 
0x000ec724: je 0xec74c; add byte ptr [eax - 0x173d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ec824: je 0xec84a; sbb al, 0x75; pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000ec8e4: je 0xec90c; add byte ptr [eax - 0x18fd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ec914: je 0xec93c; add byte ptr [eax - 0x192d16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ecb47: je 0xecb58; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000ecbb4: je 0xecbdc; add byte ptr [eax - 0x1bcd16a5], dl; bnd jmp dword ptr [esi - 0x70]; 
0x000ed8dc: je 0xed902; sbb al, 0xe8; or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ee655: je 0xee67b; sbb al, ch; ret; 
0x000ef977: je 0xef99d; xor bh, bh; jne 0xef989; call dword ptr [ebp + 0x24]; 
0x000ef9cd: je 0xef9f3; cmp al, 0xe8; jnp 0xef9db; std; jmp dword ptr [ebp - 0x77]; 
0x000efc47: je 0xefc6d; xor bh, bh; jne 0xefc59; call dword ptr [ebp + 0x24]; 
0x000efcb8: je 0xefcde; xor bh, bh; jne 0xefcca; call dword ptr [ebp + 0x24]; 
0x000efcf4: je 0xefd1a; or byte ptr [ebp - 0x569637a], cl; call dword ptr [eax - 0x73]; 
0x000efd17: je 0xefd3d; or byte ptr [ebp - 0x569637a], cl; call dword ptr [eax - 0x73]; 
0x000f09f7: je 0xf0a1d; xor bh, bh; jne 0xf0a09; call dword ptr [ebp + 0x24]; 
0x000f0a4d: je 0xf0a73; cmp al, 0xe8; sti; idiv esp; jmp dword ptr [ebp - 0x77]; 
0x000f0cc7: je 0xf0ced; xor bh, bh; jne 0xf0cd9; call dword ptr [ebp + 0x24]; 
0x000f0d38: je 0xf0d5e; xor bh, bh; jne 0xf0d4a; call dword ptr [ebp + 0x24]; 
0x000f0d74: je 0xf0d9a; or byte ptr [ebp - 0x569637a], cl; call dword ptr [eax - 0x73]; 
0x000f0d97: je 0xf0dbd; or byte ptr [ebp - 0x569637a], cl; call dword ptr [eax - 0x73]; 
0x000f33d6: je 0xf33fc; sbb al, 0xe8; ret 0xfcce; 
0x000f4741: je 0xf4767; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x000f4eae: je 0xf4ed4; pop esp; call dword ptr gs:[0x10]; 
0x000f4f17: je 0xf4f3d; pop esp; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000f52d5: je 0xf52fd; add byte ptr [ebx - 0x48], bl; ljmp 0xce9:0x5effffff; pop ebp; bnd jmp dword ptr [esi - 0x70]; 
0x000f56bb: je 0xf56f0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f574f: je 0xf5780; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f57fc: je 0xf5820; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000f585c: je 0xf5888; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000f58bc: je 0xf58e0; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f591c: je 0xf5948; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f5e67: je 0xf5e8d; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f5f8e: je 0xf5fb4; sbb al, 0xe8; jp 0xf5f9c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f64fd: je 0xf6525; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f6561: je 0xf6587; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x000f6a2d: je 0xf6a55; add al, ch; mov ebx, 0x89fff245; ret; 
0x000f7576: je 0xf7579; ret; 
0x000f7b95: je 0xf7bbd; add byte ptr [ebx - 0x17], bl; push edx; xor al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000f7e0d: je 0xf7e35; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f7f76: je 0xf7f9c; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x000f8364: je 0xf83b3; cli; call dword ptr [edx - 0x77]; 
0x000f8425: je 0xf844d; add byte ptr [ebx - 0x7c72f714], al; jbe 0xf8479; cli; call dword ptr [eax - 0x73]; 
0x000f84f5: je 0xf851d; add byte ptr [ebx - 0x7c72f714], al; jbe 0xf8549; cli; call dword ptr [eax - 0x73]; 
0x000f8513: je 0xf8528; mov dword ptr [ebx + 0x2380], eax; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000f92cf: je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000f9442: je 0xf9447; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [eax + 4], edx; ret; 
0x000f946b: je 0xf9470; mov dword ptr [edx + 4], eax; test eax, eax; je 0xf9476; mov dword ptr [eax], edx; ret; 
0x000f9472: je 0xf9476; mov dword ptr [eax], edx; ret; 
0x000fa275: je 0xfa29d; add byte ptr [ebp + 0x24f09a], cl; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fab26: je 0xfab2e; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x000fba0f: je 0xfba35; xor cl, bl; ror byte ptr [edi], 0x9e; ret; 
0x000fbc55: je 0xfbc7b; sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fbc90: je 0xfbca0; pop ebx; pop esi; pop edi; ret; 
0x000fbfa7: je 0xfbfe0; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000fc027: je 0xfc060; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000fc420: je 0xfc440; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x000fc9da: je 0xfc9e0; test edx, edx; jne 0xfc9e8; ret; 
0x000fc9fe: je 0xfca04; test edx, edx; jne 0xfca08; ret; 
0x000fccea: je 0xfcd10; sbb al, 0xe8; mov esi, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x000fcf73: je 0xfcfd0; call eax; 
0x000fd0ce: je 0xfd0f4; cmp al, 0xf; inc esp; ret 0x5056; 
0x000fd0b7: je 0xfd1a0; call eax; 
0x000fd24c: je 0xfd274; add byte ptr [eax - 0x226516a5], dl; int1; jmp dword ptr [esi - 0x70]; 
0x000fd50d: je 0xfd519; add dword ptr [ebx + 0x7589d855], ecx; les edi, ptr [ecx]; ret 0x2676; 
0x000fdd88: je 0xfdd98; cmp ecx, edx; jne 0xfdd80; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000ff374: je 0xff39a; sbb byte ptr [edx], ch; call 0xfff00; add esp, 0x1c; ret; 
0x000ff3ef: je 0xff3f2; ret; 
0x000ffb5e: je 0xffb90; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000ffb81: je 0xffbb7; add esp, 4; pop ebx; pop esi; ret; 
0x000ffbe5: je 0xffc00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010303f: jecxz 0x103042; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001039e9: jecxz 0x1039ec; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0011211a: jecxz 0x11210e; call dword ptr [eax - 0x18]; 
0x00114ebc: jecxz 0x114e47; ret 0xb70f; 
0x001171a9: jecxz 0x1171cd; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00128073: jecxz 0x127ff8; in al, dx; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x0013154c: jecxz 0x1314d1; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00132fac: jecxz 0x132f39; je 0x132fd4; add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00138c6e: jecxz 0x138c58; in al, dx; pop edi; std; jmp dword ptr [esi - 0x70]; 
0x00148839: jecxz 0x1487c8; mov dh, 0; add byte ptr [eax], al; add al, ch; mov al, byte ptr [0x81ffff46]; ret; 
0x0014893f: jecxz 0x148929; mov al, byte ptr [0x81ffff45]; ret; 
0x0014a839: jecxz 0x14a7c8; mov dh, 0; add byte ptr [eax], al; add al, ch; mov al, byte ptr [0x81ffff26]; ret; 
0x0014a93f: jecxz 0x14a929; mov al, byte ptr [0x81ffff25]; ret; 
0x0014ea79: jecxz 0x14ea63; in al, 0xfe; inc dword ptr [ecx + 0x41581c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014eb75: jecxz 0x14eb75; inc dword ptr [ecx + 0x41388c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014ec89: jecxz 0x14ec18; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0014fc69: jecxz 0x14fbf8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00150c69: jecxz 0x150bf8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001520cb: jecxz 0x1520d0; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153f39: jecxz 0x153ec8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0015d83f: jecxz 0x15d846; add byte ptr [eax], al; pop ebx; ret; 
0x00161ed9: jecxz 0x161edb; add byte ptr [eax], al; add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x001622ce: jecxz 0x162253; ret 0x6640; 
0x0016b6e0: jecxz 0x16b665; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00034f29: jecxz 0x34f2c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00044170: jecxz 0x440fb; pop ds; pop ebx; pop esi; pop edi; ret; 
0x00057e7e: jecxz 0x57e7f; call dword ptr [ecx + 0x51]; 
0x000695bd: jecxz 0x695bd; cli; jmp dword ptr [esi - 0x70]; 
0x0007c909: jecxz 0x7c88e; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00085215: jecxz 0x8521b; lea eax, [eax - 0x924c0]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0008aa4c: jecxz 0x8aa47; dec dword ptr [ebp - 0x5738b70]; call dword ptr [edx - 0x73]; 
0x0008b4e9: jecxz 0x8b4c0; stc; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x00094d89: jecxz 0x94d91; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009c033: jecxz 0x9c098; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009daff: jecxz 0x9da84; ret 0x8304; 
0x000fd0b9: jecxz 0xfd0bb; add byte ptr [eax], al; call eax; 
0x000fdcb8: jecxz 0xfdcba; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010c5ff: jg 0x10c584; in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x0010d27d: jg 0x10d2d6; idiv bh; add esp, 0x2c; ret; 
0x00115c90: jg 0x115c8f; inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x00127eb8: jg 0x127ec9; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x127eb0; pop ebx; ret; 
0x0012e652: jg 0x12e64d; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0012e742: jg 0x12e73d; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x00145db8: jg 0x145dfc; jo 0x145d3d; ret 0x80; 
0x00145e80: jg 0x145ec4; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00145eb0: jg 0x145ef4; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00145ee0: jg 0x145f24; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00145f10: jg 0x145f54; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00145fd0: jg 0x146014; call 0x42ea6f3d; clc; pop ebx; ret; 
0x001460c6: jg 0x14610a; ret; 
0x001460f6: jg 0x14613a; ret 0xf66; 
0x001463e8: jg 0x14642c; jo 0x14636d; ret 0x80; 
0x001464b0: jg 0x1464f4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001464e0: jg 0x146524; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146540: jg 0x146584; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014659b: jg 0x1465df; fisub dword ptr [esi + 0xf]; jg 0x1465e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001465a0: jg 0x1465e4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00146610: jg 0x146654; call 0x42ea757d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146736: jg 0x14677a; ret; 
0x00146776: jg 0x1467ba; ret 0xf66; 
0x00146a40: jg 0x146a84; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146a70: jg 0x146ab4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146ad0: jg 0x146b14; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146b2b: jg 0x146b6f; fisub dword ptr [esi + 0xf]; jg 0x146b74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00146b30: jg 0x146b74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00146ba0: jg 0x146be4; call 0x42ea7b0d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146cc6: jg 0x146d0a; ret; 
0x00146d06: jg 0x146d4a; ret 0xf66; 
0x00146f90: jg 0x146fd4; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146fc0: jg 0x147004; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146ff0: jg 0x147034; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00147020: jg 0x147064; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001470e0: jg 0x147124; call 0x42ea804d; clc; pop ebx; ret; 
0x001471d6: jg 0x14721a; ret; 
0x00147206: jg 0x14724a; ret 0xf66; 
0x00149b03: jg 0x149b61; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b083: jg 0x14b0ce; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001522c3: jg 0x1522a6; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152dc3: jg 0x152d9b; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001535d1: jg 0x153615; call 0x409345cb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001536b1: jg 0x1536f5; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00153761: jg 0x1537a5; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00153881: jg 0x1538c5; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0015ed3b: jg 0x15ed40; neg eax; ret; 
0x0015f066: jg 0x15f070; neg eax; ret; 
0x00163075: jg 0x163080; neg eax; pop edi; pop esi; pop ebx; ret; 
0x00163166: jg 0x163170; neg eax; ret; 
0x00163beb: jg 0x163bef; mov eax, edi; pop edi; ret; 
0x00163c76: jg 0x163c7a; mov eax, edx; ret; 
0x00163f9c: jg 0x163f9e; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x00165819: jg 0x16581b; add byte ptr [ecx], cl; ret 0x448b; 
0x001691c6: jg 0x1691c8; add byte ptr [edi], cl; test byte ptr [ecx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x49f0fe0e], al; ret 0x4489; 
0x0002f390: jg 0x2f392; add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0002f67d: jg 0x2f608; ret; 
0x0002f6d2: jg 0x2f6dd; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0002f9f7: jg 0x2f9f8; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0002fa22: jg 0x2fa2d; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0002fc93: jg 0x2fc1e; ret; 
0x00031c6e: jg 0x31c88; cmp dword ptr [esp + 4], 0; je 0x31c90; lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x00072075: jg 0x72071; jmp dword ptr [esi - 0x70]; 
0x00074fe7: jg 0x74ff5; add byte ptr [ecx + 0x16f016c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0007c017: jg 0x7c02f; add byte ptr [ebx - 0x5b46e714], al; add al, byte ptr [eax]; add byte ptr [ebp - 0x5768770], cl; call dword ptr [edx - 0x73]; 
0x0008ccf6: jg 0x8ccfa; mov eax, edi; pop edi; ret; 
0x0008cf86: jg 0x8cf8a; mov eax, edx; ret; 
0x000910b6: jg 0x910ba; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091366: jg 0x9136a; lea eax, [edx + 0xf]; ret; 
0x00094ac6: jg 0x94ac9; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094b4b: jg 0x94b52; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094b70: jg 0x94b78; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094b8e: jg 0x94b97; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094bac: jg 0x94bb6; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094bcf: jg 0x94bda; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094bf4: jg 0x94c00; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094c32: jg 0x94c40; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094c56: jg 0x94c65; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094cb6: jg 0x94cc7; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094cdc: jg 0x94cee; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094db6: jg 0x94dce; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094de6: jg 0x94dff; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094e7e: jg 0x94e9a; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094eac: jg 0x94ec9; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094edc: jg 0x94efa; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094f06: jg 0x94f25; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094f36: jg 0x94f56; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094f66: jg 0x94f87; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094f96: jg 0x94fb8; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00095116: jg 0x9511f; pop edi; pop esi; pop ebx; ret; 
0x00095129: jg 0x95132; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x0009514a: jg 0x95153; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x00095169: jg 0x95172; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095189: jg 0x95192; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000951cb: jg 0x951d4; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000951eb: jg 0x951f4; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x0009520b: jg 0x95214; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952ab: jg 0x952b4; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952cb: jg 0x952d4; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952eb: jg 0x952f4; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0009530b: jg 0x95314; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952cf: jg 0x95328; push cs; pop edi; pop esi; pop ebx; ret; 
0x000952ef: jg 0x95348; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0009530f: jg 0x95368; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00095332: jg 0x9538b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00095442: jg 0x9544b; pop edi; pop esi; pop ebx; ret; 
0x00095432: jg 0x9547b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000954c3: jg 0x954cc; add edi, 0x10; call 0x13cef9; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954df: jg 0x954e8; add edi, 0x10; call 0x13cef9; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009554f: jg 0x95581; pop edi; pop esi; pop ebx; ret; 
0x0009554e: jg 0x955cf; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009612d: jg 0x96131; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096150: jg 0x96155; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009616b: jg 0x96171; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009618e: jg 0x96195; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000961b3: jg 0x961bb; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000961d1: jg 0x961da; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096237: jg 0x96243; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096265: jg 0x96272; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096295: jg 0x962a3; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000962c9: jg 0x962d8; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000962f9: jg 0x96309; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096329: jg 0x9633a; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009634f: jg 0x96361; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000963c5: jg 0x963da; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000964ec: jg 0x96507; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009657f: jg 0x9659d; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000965a9: jg 0x965c8; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000965d9: jg 0x965f9; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096609: jg 0x9662a; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096639: jg 0x9665b; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000967f6: jg 0x967ff; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0009699f: jg 0x969f8; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000969df: jg 0x96a38; jge 0x5e68892e; pop ebx; ret; 
0x000969ff: jg 0x96a58; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x00096a22: jg 0x96a7b; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00096b32: jg 0x96b3b; pop edi; pop esi; pop ebx; ret; 
0x00096b22: jg 0x96b6b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x00096bc3: jg 0x96bcc; add edi, 0x10; call 0x13cef9; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bdf: jg 0x96be8; add edi, 0x10; call 0x13cef9; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096c4f: jg 0x96c81; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x00096c4e: jg 0x96ccf; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x00098de6: jg 0x98de8; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098df6: jg 0x98df8; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e1a: jg 0x98e1c; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e39: jg 0x98e3b; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e59: jg 0x98e5b; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e79: jg 0x98e7b; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e9b: jg 0x98e9d; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098ebb: jg 0x98ebd; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098edb: jg 0x98edd; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098efb: jg 0x98efd; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f1f: jg 0x98f21; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f3e: jg 0x98f40; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f5e: jg 0x98f60; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f7b: jg 0x98f7d; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f9b: jg 0x98f9d; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098fbb: jg 0x98fbd; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f7f: jg 0x98fd1; or eax, 0x824448b; pop esi; ret; 
0x00098fdb: jg 0x98fdd; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f9f: jg 0x98ff1; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098fbf: jg 0x99011; jnp 0x5e11b40b; ret; 
0x00098fdf: jg 0x99031; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0009c259: jg 0x9c25b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c27c: jg 0x9c27e; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c29d: jg 0x9c29f; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c2bc: jg 0x9c2be; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c2dc: jg 0x9c2de; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c31e: jg 0x9c320; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c33e: jg 0x9c340; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c35e: jg 0x9c360; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c43e: jg 0x9c440; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c45e: jg 0x9c460; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c47e: jg 0x9c480; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c442: jg 0x9c494; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0009c49e: jg 0x9c4a0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c462: jg 0x9c4b4; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c482: jg 0x9c4d4; jnp 0x5b15e8ce; pop esi; ret; 
0x0009c4a2: jg 0x9c4f4; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000a1280: jg 0xa1205; ret; 
0x000a18c0: jg 0xa1845; ret; 
0x000b2585: jg 0xb2590; neg eax; pop edi; pop esi; ret; 
0x000b25b5: jg 0xb25b9; neg eax; ret; 
0x000ba95b: jg 0xba8e0; ret; 
0x000c438b: jg 0xc43d4; cli; call dword ptr [edi - 1]; 
0x000c5f64: jg 0xc5f75; test byte ptr [eax - 0x7d000000], cl; ret 0x8904; 
0x000c6eea: jg 0xc6eec; add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000c6f22: jg 0xc6f24; add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000c6f44: jg 0xc6f46; add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000c6f5f: jg 0xc6f61; add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000c6f85: jg 0xc6f87; add byte ptr [eax], al; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000c6f2a: jg 0xc6f87; cmove eax, edx; ret; 
0x000c6fa9: jg 0xc6fab; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000c7686: jg 0xc7660; cmp ebx, 0xf6; ja 0xc7808; mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x000e49b4: jg 0xe49ef; ret 0x7b74; 
0x000f60fb: jg 0xf60fc; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x000f73f6: jg 0xf737b; les ebp, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000f74d6: jg 0xf745b; les ebp, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000fa26f: jg 0xfa278; pop ebx; pop esi; ret; 
0x000fff3e: jg 0xfff40; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010044b: jge 0x10044e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010bd42: jge 0x10bcc7; in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x00126efd: jge 0x126efd; call dword ptr [ebp + 0x57]; 
0x001312ec: jge 0x1312dc; dec dword ptr [ecx - 0x763e7606]; ret; 
0x0014326b: jge 0x14325a; jmp dword ptr [esi - 0x70]; 
0x0016116f: jge 0x161171; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161cef: jge 0x161cf1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0002112c: jge 0x2112e; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x0009684d: jge 0x5e687b9a; pop ebx; ret; 
0x000968d1: jge 0x5e68801e; pop ebx; ret; 
0x000969e1: jge 0x5e68892e; pop ebx; ret; 
0x0006b637: jge 0x6b61d; sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0007108c: jge 0x71089; dec dword ptr [ebp - 0x5854f7a]; call dword ptr [eax - 0x73]; 
0x0007c5a0: jge 0x7c59c; call dword ptr [eax + 0x56]; 
0x0007c695: jge 0x7c691; call dword ptr [eax - 1]; 
0x0008eca6: jge 0x8517fbf6; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x00096327: jge 0x851872ac; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009f9df: jge 0x9f9d3; push es; add byte ptr [ebp - 0x572037e], cl; call dword ptr [eax - 0x73]; 
0x000bf25d: jge 0xbf1e2; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000bf35d: jge 0xbf2e2; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000c12fe: jge 0xc12d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c14fe: jge 0xc14d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c640a: jge 0xc6397; inc ebp; aam 0x83; ret; 
0x000c6f65: jge 0xc6f67; add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x000fae1e: jge 0xfae20; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001014bb: jl 0x1014e1; adc al, 0x89; pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001017e4: jl 0x10180a; and al, 0xb8; jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001036c3: jl 0x1036e9; xor byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00109915: jl 0x10993b; and al, 0x8d; xchg esp, ebp; cdq; cli; call dword ptr [eax - 0x73]; 
0x0010995b: jl 0x109981; and al, 0x8d; xchg eax, edi; cdq; cli; call dword ptr [eax - 0x73]; 
0x001099a1: jl 0x1099c7; and al, 0x8d; xchg eax, edi; cdq; cli; call dword ptr [eax - 0x73]; 
0x0010d5cf: jl 0x10d5f5; push 0x2cc5838d; cli; call dword ptr [eax - 0x73]; 
0x00113b00: jl 0x113a83; les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00113ec0: jl 0x113e43; les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00113fda: jl 0x113f65; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00114f72: jl 0x114f98; adc byte ptr [ebp - 0x5655f79], cl; call dword ptr [eax - 0x73]; 
0x001151c1: jl 0x1151e7; adc byte ptr [ebp - 0x564c779], cl; call dword ptr [eax - 0x73]; 
0x001152da: jl 0x115300; adc byte ptr [ebp - 0x5653f79], cl; call dword ptr [eax - 0x73]; 
0x0011540d: jl 0x115433; adc byte ptr [ebp - 0x5a45579], cl; call dword ptr [eax - 0x73]; 
0x00118e24: jl 0x118e4a; adc al, ch; mov ecx, 0x81000240; ret; 
0x001191a7: jl 0x1191a7; inc dword ptr [ebp - 0x76ad8740]; ret; 
0x0011b119: jl 0x11b13f; sub al, 0x83; ret 0x8902; 
0x0011b1a5: jl 0x11b1cb; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x57c3; 
0x0012413a: jl 0x124160; inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x001249cf: jl 0x1249d1; add byte ptr [ebx - 0x74e3dbac], cl; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x00127271: jl 0x127297; sbb byte ptr [ebp - 0x59e3355], cl; call dword ptr [edi + 0x6a]; 
0x00127486: jl 0x1274ac; and byte ptr [edi], cl; xchg esp, eax; ret; 
0x0012ed49: jl 0x12ed6f; sub byte ptr [ebp - 0x59d254b], cl; call dword ptr [edi + 0x6a]; 
0x00133354: jl 0x1332df; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001382cf: jl 0x1382f5; or byte ptr [ecx + 0xfa6f3c6], cl; xchg edi, eax; ret 0xda80; 
0x0013b2c1: jl 0x13b2e7; add al, 0x83; ret; 
0x0013cb31: jl 0x13cb57; adc al, 0x89; je 0x13cb5b; adc byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x0013e988: jl 0x13e9ae; and al, 0xf; mov edi, cs; add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x001455ec: jl 0x145612; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00162033: jl 0x162080; lea eax, [ecx + 0xa]; ret; 
0x00162043: jl 0x162080; lea eax, [ecx + 0xb]; ret; 
0x00161fae: jl 0x162080; lea eax, [ecx + 0xc]; ret; 
0x00162053: jl 0x162080; lea eax, [ecx + 0xd]; ret; 
0x00162063: jl 0x162080; lea eax, [ecx + 0xe]; ret; 
0x00162073: jl 0x162080; lea eax, [ecx + 0xf]; ret; 
0x00161fc3: jl 0x162080; lea eax, [ecx + 1]; ret; 
0x00161fd3: jl 0x162080; lea eax, [ecx + 2]; ret; 
0x00161fe3: jl 0x162080; lea eax, [ecx + 3]; ret; 
0x00161f4b: jl 0x162080; lea eax, [ecx + 4]; ret; 
0x00161ff3: jl 0x162080; lea eax, [ecx + 5]; ret; 
0x00162003: jl 0x162080; lea eax, [ecx + 6]; ret; 
0x00162013: jl 0x162080; lea eax, [ecx + 7]; ret; 
0x00161f84: jl 0x162080; lea eax, [ecx + 8]; ret; 
0x00162023: jl 0x162080; lea eax, [ecx + 9]; ret; 
0x00161e61: jl 0x162080; mov eax, ecx; ret; 
0x00162ae2: jl 0x162ae4; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x0016458d: jl 0x164518; ret 0xf209; 
0x001647d3: jl 0x16475e; jl 0x1647fb; js 0x164762; je 0x1647ff; je 0x1647d4; ret 0; 
0x001647d5: jl 0x1647fb; js 0x164762; je 0x1647ff; je 0x1647d4; ret 0; 
0x00164eb6: jl 0x164e3a; add al, 0x83; ret 0xd304; 
0x001667b7: jl 0x1667f2; ret 0x860f; 
0x00166ea7: jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x00167623: jl 0x167649; and byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00167d11: jl 0x167d37; or al, 9; fisttp word ptr [ecx]; test dword ptr [ebx], 0x751c247c; ret 0x7c8b; 
0x00167d19: jl 0x167d3f; sbb al, 0x75; ret 0x7c8b; 
0x0016876c: jl 0x1686f7; ret; 
0x00168e6f: jl 0x168e95; or byte ptr [ecx], bh; ret; 
0x0016a02e: jl 0x169fb2; add al, 0x83; ret 0xd304; 
0x0001af0c: jl 0x1af28; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ff3e9: jl 0x1aff0; je 0xff3f2; ret; 
0x0001b788: jl 0x1b7ae; add al, 0x8d; xchg dword ptr [eax], esi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x0001d255: jl 0x1d2c3; cli; call dword ptr [eax - 0x73]; 
0x0001d274: jl 0x1d2e2; cli; call dword ptr [eax - 0x73]; 
0x0001d298: jl 0x1d306; cli; call dword ptr [eax - 0x73]; 
0x0001ed89: jl 0x1edaf; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax - 0x73]; 
0x0001ee1b: jl 0x1ee41; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax - 0x73]; 
0x0001ee4a: jl 0x1ee70; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax - 0x73]; 
0x0001ee6d: jl 0x1ee93; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax + 0x68]; 
0x0001ee97: jl 0x1eebd; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax + 0x68]; 
0x0001f196: jl 0x1f1bc; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0001fd0b: jl 0x1fd68; pop esi; pop edi; pop ebp; ret; 
0x00020160: jl 0x201bd; pop esi; pop edi; pop ebp; jmp eax; 
0x00020af0: jl 0x20b16; sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x00020c11: jl 0x20c37; sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x00020fd0: jl 0x20ff6; sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x00020ff3: jl 0x21019; sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x0002102a: jl 0x21050; sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x0002110d: jl 0x21133; sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x0002114f: jl 0x21151; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x00021130: jl 0x21156; sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x00021153: jl 0x21179; sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x00021180: jl 0x211a6; sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x0002119a: jl 0x211c0; sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x00022a3b: jl 0x22a98; pop esi; pop edi; pop ebp; ret; 
0x00022ecb: jl 0x22f28; pop esi; pop edi; pop ebp; jmp eax; 
0x00023e0b: jl 0x23e68; pop esi; pop edi; pop ebp; ret; 
0x0002429e: jl 0x242fb; pop esi; pop edi; pop ebp; jmp eax; 
0x000248f8: jl 0x24955; pop esi; pop edi; pop ebp; ret; 
0x00024bb7: jl 0x24bdd; add al, 0x83; ret 0x8d01; 
0x00026fae: jl 0x26f35; add byte ptr [0x748dd375], al; add dh, dh; ret 0x7503; 
0x00029505: jl 0x2952b; or al, 0x89; ret; 
0x0002d500: jl 0x2d509; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x0002d560: jl 0x2d569; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x0002eb91: jl 0x2ebb7; sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x00030b14: jl 0x30b3a; adc al, ch; leave; ret; 
0x00031c71: jl 0x31c97; add al, 0; je 0x31c90; lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x000341da: jl 0x34200; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000341fa: jl 0x34220; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00038234: jl 0x3825a; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x00038257: jl 0x3827d; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x00039199: jl 0x391bf; cmp byte ptr [ebp - 0x39f79], cl; call dword ptr [eax - 0x73]; 
0x00039a82: jl 0x39aa8; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x00039a87: jl 0x39afc; cli; call dword ptr [eax - 0x73]; 
0x00039b0c: jl 0x39b32; adc byte ptr [ecx - 0x7c2ed628], cl; ret 0xd31d; 
0x00039ec3: jl 0x39ee9; cmp byte ptr [ebx - 0x10779], cl; jmp dword ptr [ebp - 0x39]; 
0x0003a2ae: jl 0x3a2d4; cmp byte ptr [ebx - 0x10779], cl; jmp dword ptr [ebp - 0x39]; 
0x0003a669: jl 0x3a68f; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a68c: jl 0x3a6b2; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a6af: jl 0x3a6d5; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a66e: jl 0x3a6e3; cli; call dword ptr [eax - 0x73]; 
0x0003a691: jl 0x3a706; cli; call dword ptr [eax - 0x73]; 
0x0003a6f3: jl 0x3a719; cmp byte ptr [ebp - 0x58c8f79], cl; call dword ptr [eax - 0x73]; 
0x0003a6b4: jl 0x3a729; cli; call dword ptr [eax - 0x73]; 
0x0003a716: jl 0x3a73c; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a6d5: jl 0x3a74a; cli; call dword ptr [eax - 0x73]; 
0x0003a739: jl 0x3a75f; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a75c: jl 0x3a782; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a71b: jl 0x3a790; cli; call dword ptr [eax - 0x73]; 
0x0003a73e: jl 0x3a7b3; cli; call dword ptr [eax - 0x73]; 
0x0003a791: jl 0x3a7b7; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a761: jl 0x3a7d6; cli; call dword ptr [eax - 0x73]; 
0x0003a7b4: jl 0x3a7da; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a7e2: jl 0x3a808; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a796: jl 0x3a80b; cli; call dword ptr [eax - 0x73]; 
0x0003a7b9: jl 0x3a82e; cli; call dword ptr [eax - 0x73]; 
0x0003a7e7: jl 0x3a85c; cli; call dword ptr [eax - 0x73]; 
0x0003a842: jl 0x3a868; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a865: jl 0x3a88b; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a888: jl 0x3a8ae; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x0003a847: jl 0x3a8bc; cli; call dword ptr [eax - 0x73]; 
0x0003a86a: jl 0x3a8df; cli; call dword ptr [eax - 0x73]; 
0x0003a88d: jl 0x3a902; cli; call dword ptr [eax - 0x73]; 
0x0003b184: jl 0x3b1aa; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0003b1a7: jl 0x3b1cd; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0003dc8d: jl 0x3dcb3; sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x0003e0c4: jl 0x3e0ea; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0003e0e7: jl 0x3e10d; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x000466e4: jl 0x4670a; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x00046707: jl 0x4672d; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0004fa77: jl 0x4fa9d; adc byte ptr [ebp - 0x5cd9b45], cl; dec dword ptr [ecx - 0x9ebdb84]; ret 0xf50; 
0x0004fa81: jl 0x4faa7; adc al, 0xf6; ret 0xf50; 
0x0004fee6: jl 0x4ff0c; and al, 0x89; ret 0xf229; 
0x00050614: jl 0x5063a; sub byte ptr [edi - 0x18], dl; ret; 
0x000511c0: jl 0x511c9; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00068e5d: jl 0x68eba; pop esi; pop edi; pop ebp; ret; 
0x0006ffab: jl 0x6ffd1; sbb al, 0x57; call dword ptr [ebx + 0x40]; 
0x00076fad: jl 0x76fa9; call dword ptr [eax - 0x73]; 
0x00076fcc: jl 0x76fc8; call dword ptr [eax - 0x73]; 
0x0007ae13: jl 0x7ae0f; call dword ptr [eax - 0x18]; 
0x0007ba92: jl 0x7bab8; adc byte ptr [ecx], al; pop eax; add al, 0x89; ret; 
0x0007bb32: jl 0x7bb2e; call dword ptr [edi - 1]; 
0x0007d34b: jl 0x7d371; adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d374: jl 0x7d39a; adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d398: jl 0x7d3be; adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d3bc: jl 0x7d3e2; adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d43a: jl 0x7d460; adc byte ptr [ebp - 0x5761b79], cl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007f697: jl 0x7f6bd; adc al, 0x8d; xchg dword ptr [eax], ecx; mov bh, dl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x000814e8: jl 0x8150e; sub al, 0x8d; xchg dword ptr [eax], ebp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0008150c: jl 0x81532; sub al, 0x8d; xchg dword ptr [eax], ebp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00085e5d: jl 0x85e83; and byte ptr [ebp - 0x107c00bf], cl; add dword ptr [ecx], eax; ret; 
0x00086306: jl 0x8632c; sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x00086f28: jl 0x86f31; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x000964f0: jl 0x964f8; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009cec8: jl 0x9cf00; add eax, ecx; ret; 
0x0009ced8: jl 0x9cf00; lea eax, [ecx + eax + 0x10]; ret; 
0x0009cee8: jl 0x9cf00; lea eax, [ecx + eax + 0x20]; ret; 
0x0009cef8: jl 0x9cf00; lea eax, [ecx + eax + 0x30]; ret; 
0x0009eb8c: jl 0x9ebb2; sbb al, 0x8d; xchg dword ptr [eax - 0x73], ecx; cli; call dword ptr [eax + 0x68]; 
0x0009ebaf: jl 0x9ebd5; sbb al, 0x8d; xchg dword ptr [eax - 0x73], ecx; cli; call dword ptr [eax + 0x68]; 
0x000a084e: jl 0xa0874; pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000a0cee: jl 0xa0d14; dec eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000a43d5: jl 0xa43fb; sub al, 0xf; xchg edi, eax; ret; 
0x000a47ac: jl 0xa47d2; sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a47f2: jl 0xa4818; sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a4858: jl 0xa487e; sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a487b: jl 0xa48a1; sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a48eb: jl 0xa4911; sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a4931: jl 0xa4957; sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000a4e6d: jl 0xa4e93; sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x000a70be: jl 0xa70e4; xor byte ptr [edi], cl; xchg edi, eax; ret; 
0x000a7617: jl 0xa763d; and al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x000a80d8: jl 0xa8061; add al, 0x81; ret 0; 
0x000a911b: jl 0xa9141; add al, 0x89; ret; 
0x000ad3ae: jl 0xad3d4; sbb al, 0x8d; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000ad482: jl 0xad4a8; sbb al, 0x8d; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000ad4e6: jl 0xad50c; sbb al, 0x8d; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000ad509: jl 0xad52f; sbb al, 0x8d; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000aea3c: jl 0xae9c5; add al, 0x81; ret 0; 
0x000b2600: jl 0xb260c; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000b284f: jl 0xb27d3; add al, 0; lea ecx, [eax + 1]; jne 0xb2830; mov eax, ecx; ret; 
0x000b344a: jl 0xb3470; adc byte ptr [ecx + 0x5168247c], cl; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x000b344e: jl 0xb3474; push 0x246c8d51; insb byte ptr es:[edi], dx; push ebp; call eax; 
0x000b348c: jl 0xb34e9; pop esi; pop edi; pop ebp; ret; 
0x000b35b5: jl 0xb35db; insb byte ptr es:[edi], dx; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000b394e: jl 0xb3974; sub al, 0x29; ret 0x448b; 
0x000b8c0b: jl 0xb8c31; adc byte ptr [edi], cl; inc ebx; ret 0x4c80; 
0x000ba356: jl 0xba37c; sbb byte ptr [ebp - 0x56f2f79], cl; call dword ptr [eax - 0x73]; 
0x000bee26: jl 0xbee4c; adc al, 1; je 0xbee30; add esp, 0xc; ret; 
0x000c0cdf: jl 0xc0d05; cmp byte ptr [ebx - 0x76cbdbb4], cl; rdtsc; jmp dword ptr [esi - 0x77]; 
0x000c1e8b: jl 0xc1eb1; sbb byte ptr [ebp + 0x31b887], cl; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; xor edx, edi; call dword ptr [eax - 0x73]; 
0x000c1efb: jl 0xc1f21; sbb byte ptr [ebp + 0x31c487], cl; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4a], ecx; cli; call dword ptr [eax - 0x73]; 
0x000c1f42: jl 0xc1f68; sbb byte ptr [ebp - 0x56eef79], cl; call dword ptr [eax - 0x73]; 
0x000c5d70: jl 0xc5dc4; cmc; inc ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000ccfdf: jl 0xccf72; cli; call dword ptr [eax - 0x73]; 
0x000cd0a7: jl 0xcd03a; cli; call dword ptr [eax - 0x73]; 
0x000cd0c9: jl 0xcd05c; cli; call dword ptr [eax - 0x73]; 
0x000cd0c0: jl 0xcd07f; cmc; dec dword ptr [ebx - 0x7e7233b3]; jl 0xcd05c; cli; call dword ptr [eax - 0x73]; 
0x000cd1de: jl 0xcd204; sbb byte ptr [ebx - 0x4bb7874], cl; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x000cebab: jl 0xcebd1; sbb byte ptr [edi], cl; mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x000d68fb: jl 0xd6958; pop esi; pop edi; pop ebp; ret; 
0x000d7e24: jl 0xd7e81; pop esi; pop edi; pop ebp; ret; 
0x000daf68: jl 0xdaf4b; inc dword ptr [ebx - 0x6316ef3c]; idiv edi; call dword ptr [eax - 1]; 
0x000db4a0: jl 0xdb4c6; cmp al, 0x8d; xchg dword ptr [ecx], eax; xor edx, edi; dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x000dc1fe: jl 0xdc224; adc al, 0x89; ret 0xf889; 
0x000e089b: jl 0xe0826; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000e1901: jl 0xe1927; adc al, 0x8d; xchg edx, esp; dec ecx; cli; call dword ptr [eax - 0x73]; 
0x000e19e4: jl 0xe1a0a; adc al, 0x8d; xchg dword ptr [ebx + edx*4], edx; cli; call dword ptr [eax - 0x73]; 
0x000e1a27: jl 0xe1a4d; adc al, 0x8d; xchg dword ptr [ebx + edx*4], edx; cli; call dword ptr [eax - 0x73]; 
0x000e1e96: jl 0xe1ebc; sub al, 0x31; jmp dword ptr [esi - 0x7d]; 
0x000e2c0a: jl 0xe2c30; add al, 0x8d; xchg dword ptr [eax], esp; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e8d0c: jl 0xe8d32; or al, 0x8d; xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000e8f65: jl 0xe8f8b; or al, 0x8d; xchg eax, edi; xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x000e91c3: jl 0xe9220; pop esi; pop edi; pop ebp; ret; 
0x000e9fb0: jl 0xe9fd6; or byte ptr [ebp - 0x56afb79], cl; call dword ptr [eax - 0x73]; 
0x000ea182: jl 0xea1a8; or byte ptr [ebp - 0x56afb79], cl; call dword ptr [eax - 0x73]; 
0x000ea1a5: jl 0xea1cb; or byte ptr [ebp - 0x56adf79], cl; call dword ptr [eax - 0x73]; 
0x000ea534: jl 0xea55a; adc al, ch; test eax, 0x81000529; ret; 
0x000ec677: jl 0xec69d; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ed2b1: jl 0xed2d7; sub al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed5be: jl 0xed549; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000eec0b: jl 0xeec16; ret 0x850f; 
0x000ef033: jl 0xef03e; ret 0x850f; 
0x000f4747: jl 0xf476d; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x000f6ca8: jl 0xf6cce; add al, 0xb8; jp 0xf6caf; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6f88: jl 0xf6fae; add al, 0xb8; jnp 0xf6f8f; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff3d8: jl 0xff3fe; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x000ffbe8: jl 0xffbeb; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100477: jle 0x10047a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100fef: jle 0x100fe3; jmp dword ptr [esi - 0x70]; 
0x001040ed: jle 0x104097; mov eax, 0xf0; lea ebx, [ebx + 0x27c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010429d: jle 0x1041de; mov eax, 0xf0; lea ebx, [ebx + 0x2808]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010447d: jle 0x1043aa; mov eax, 0xf0; lea ebx, [ebx + 0x284c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010467e: jle 0x1045d6; mov eax, 0xf0; lea ebx, [ebx + 0x2888]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104b97: jle 0x1048cb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c75: jle 0x104c33; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104d6d: jle 0x104d1c; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104e7d: jle 0x104e28; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001057ff: jle 0x1056f0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001057b0: jle 0x10572f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105827: jle 0x105787; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a83: jle 0x105a04; mov eax, 0xf0; lea ebx, [ebx + 0x28a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105bfd: jle 0x105bbd; mov eax, 0xf0; lea ebx, [ebx + 0x28a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ced: jle 0x105c97; mov eax, 0xf0; lea ebx, [ebx + 0x28c0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105e9d: jle 0x105dde; mov eax, 0xf0; lea ebx, [ebx + 0x28d8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010605d: jle 0x105fbc; mov eax, 0xf0; lea ebx, [ebx + 0x28f4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010628e: jle 0x1061e6; mov eax, 0xf0; lea ebx, [ebx + 0x290c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001065b5: jle 0x1064f5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106695: jle 0x106653; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010678d: jle 0x10673c; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010689d: jle 0x106848; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010724f: jle 0x107138; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00107200: jle 0x10717f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00107277: jle 0x1071d7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d54f: jle 0x10d4b5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d8d7: jle 0x10d880; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010dd97: jle 0x10dd23; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010e4d7: jle 0x10e48a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110835: jle 0x1107e3; mov eax, 0xf0; lea ebx, [ebx + 0x29e4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011091d: jle 0x1108da; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110a0d: jle 0x1109bc; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110b2d: jle 0x110ad9; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111495: jle 0x111443; mov eax, 0xf0; lea ebx, [ebx + 0x2a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011157d: jle 0x11153a; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011166d: jle 0x11161c; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011178d: jle 0x111739; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d7d: jle 0x111cc6; mov eax, 0xf0; lea ebx, [ebx + 0x2a80]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011219d: jle 0x112147; mov eax, 0xf0; lea ebx, [ebx + 0x2aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011227d: jle 0x11223a; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011236d: jle 0x11231c; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011247d: jle 0x11242d; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011262d: jle 0x11256e; mov eax, 0xf0; lea ebx, [ebx + 0x2ac8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b2d: jle 0x112a6a; mov eax, 0xf0; lea ebx, [ebx + 0x2aec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130dd: jle 0x113022; mov eax, 0xf0; lea ebx, [ebx + 0x2b10]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135bd: jle 0x113567; mov eax, 0xf0; lea ebx, [ebx + 0x2b34]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011369d: jle 0x11365a; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011378d: jle 0x11373c; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011389d: jle 0x11384d; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116b4d: jle 0x116a89; mov eax, 0xf0; lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116d4d: jle 0x116ccb; mov eax, 0xf0; lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011708d: jle 0x11704b; mov eax, 0xf0; lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117735: jle 0x1176f3; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011782d: jle 0x1177dc; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011793d: jle 0x1178e8; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a2d: jle 0x1179d7; mov eax, 0xf0; lea ebx, [ebx + 0x2c78]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117bdd: jle 0x117b1e; mov eax, 0xf0; lea ebx, [ebx + 0x2c90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011817d: jle 0x11809a; mov eax, 0xf0; lea ebx, [edi + 0x2ca0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011908a: jle 0x11900f; ret 0x8303; 
0x0011c190: jle 0x11bc18; lea ebx, [edx + 0x2cac]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4b5: jle 0x11c463; mov eax, 0xf0; lea ebx, [edi + 0x2cac]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011f261: jle 0x11f0e2; mov eax, 0xf0; lea ebx, [edi + 0x2f70]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200c5: jle 0x11ff4d; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001201d5: jle 0x120180; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001202a5: jle 0x120248; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120ab1: jle 0x120749; lea ebx, [edx + 0x3180]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120b8f: jle 0x120a6b; lea ebx, [edx + 0x3180]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120bec: jle 0x120b17; lea ebx, [edx + 0x3180]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120d1d: jle 0x120cae; mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012173d: jle 0x121626; mov eax, 0xf0; lea ebx, [ebx + 0x31e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001219cd: jle 0x121715; mov eax, 0xf0; lea ebx, [ebx + 0x31e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121d35: jle 0x121c36; mov eax, 0xf0; lea ebx, [ebx + 0x31e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e3d: jle 0x123bb7; mov eax, 0xf0; lea ebx, [edi + 0x3264]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f4d: jle 0x128ef7; mov eax, 0xf0; lea ebx, [ebx + 0x3358]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001290fd: jle 0x12903e; mov eax, 0xf0; lea ebx, [ebx + 0x336c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292ad: jle 0x1291f6; mov eax, 0xf0; lea ebx, [ebx + 0x3380]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012939d: jle 0x12935a; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012948d: jle 0x12943c; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012959d: jle 0x12954d; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b245: jle 0x12b1b3; mov eax, 0xf0; lea ebx, [ebx + 0x3400]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e33d: jle 0x12e2de; mov eax, 0xf0; lea ebx, [ebx + 0x3410]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012edd9: jle 0x12ede8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0013120c: jle 0x1311fc; dec dword ptr [ecx - 0x763e7606]; ret; 
0x00132b19: jle 0x132b2f; pop ebx; pop esi; pop edi; ret; 
0x0013709d: jle 0x137026; mov eax, 0xf0; lea ebx, [ebp + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374cd: jle 0x13748c; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00137575: jle 0x13753a; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00137625: jle 0x1375e6; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001376cd: jle 0x13768c; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001378ad: jle 0x13786f; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013797d: jle 0x13793e; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00138995: jle 0x138961; mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013c676: jle 0x13c6dc; cli; call dword ptr [eax - 0x18]; 
0x0013d5af: jle 0x13d440; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d614: jle 0x13d5ff; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d7f6: jle 0x13d715; mov eax, 0xf0; lea ebx, [ebp + 0x193c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013dacb: jle 0x13d9a7; mov eax, 0xf0; lea ebx, [ebp + 0x193c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013de31: jle 0x13dd98; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013de93: jle 0x13de80; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e029: jle 0x13df6e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e08b: jle 0x13e078; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e1af: jle 0x13e14a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e20a: jle 0x13e1f7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e28e: jle 0x13e267; bnd jmp dword ptr [ecx]; 
0x0013e28e: jle 0x13e267; bnd jmp dword ptr [ecx]; ret 0xc483; 
0x0013e32f: jle 0x13e2ca; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e38a: jle 0x13e377; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013f9e4: jle 0x13f9c6; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013fbee: jle 0x13fb1b; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00149f8a: jle 0x149fcc; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014a196: jle 0x14a1d8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014a62a: jle 0x14a62c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf8a: jle 0x14bfcc; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0014c186: jle 0x14c1c8; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0014e08a: jle 0x14e0cc; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014e296: jle 0x14e2d8; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014e72a: jle 0x14e72c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001533da: jle 0x15341c; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001535d6: jle 0x153618; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001539fa: jle 0x1539fc; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0016bebd: jle 0x16be7d; mov eax, 0xf0; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000192dc: jle 0x192f5; mov eax, 0xf0; lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0001948a: jle 0x19475; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000194e4: jle 0x194d0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001953d: jle 0x1952a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019596: jle 0x19583; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000195f0: jle 0x195dc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001964a: jle 0x19636; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000196a4: jle 0x19690; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000196fd: jle 0x196ea; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019756: jle 0x19743; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000197b1: jle 0x1979c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001980b: jle 0x197f7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019864: jle 0x19851; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000198c2: jle 0x198af; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001991b: jle 0x19908; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019975: jle 0x19961; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000199ce: jle 0x199bb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019a28: jle 0x19a14; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019a81: jle 0x19a6e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019adb: jle 0x19ac7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019b34: jle 0x19b21; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019b8e: jle 0x19b7a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019be8: jle 0x19bd4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019c41: jle 0x19c2e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019c9a: jle 0x19c87; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019cf4: jle 0x19ce0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019d4d: jle 0x19d3a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019da6: jle 0x19d93; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019dff: jle 0x19dec; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019e58: jle 0x19e45; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019eb1: jle 0x19e9e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f0a: jle 0x19ef7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f66: jle 0x19f50; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019fc0: jle 0x19fac; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a01a: jle 0x1a006; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a074: jle 0x1a060; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a0cd: jle 0x1a0ba; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a127: jle 0x1a113; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a181: jle 0x1a16d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a1da: jle 0x1a1c7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a236: jle 0x1a220; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a28f: jle 0x1a27c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a2e8: jle 0x1a2d5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a342: jle 0x1a32e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a39b: jle 0x1a388; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a4e8: jle 0x1a4d4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a541: jle 0x1a52e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a59a: jle 0x1a587; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a5f3: jle 0x1a5e0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cc5d: jle 0x1cb4a; mov eax, 0xf0; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cda2: jle 0x1cb4a; mov eax, 0xf0; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0001cd65: jle 0x1cc11; mov eax, 0xf0; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cefd: jle 0x1cedc; mov eax, 0xf0; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001d42f: jle 0x1d414; call dword ptr [eax - 0x73]; 
0x0001d683: jle 0x1d668; call dword ptr [eax - 0x73]; 
0x00020fef: jle 0x20ff1; add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x00026ddc: jle 0x26dec; add byte ptr [ebp - 0x590ff79], cl; call dword ptr [eax - 0x73]; 
0x0002a623: jle 0x29ebf; lea ebx, [edx + 0x1154]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002b70b: jle 0x2b6a4; mov eax, 0xf0; lea ebx, [edi + 0x11a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002d0f7: jle 0x2d002; lea ebx, [ecx + 0x11c8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000335e1: jle 0x3356f; lea ebx, [edx + 0x1284]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000336ad: jle 0x33675; mov eax, 0xf0; lea ebx, [ebx + 0x1284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003399b: jle 0x33768; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000338c8: jle 0x33817; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000339d2: jle 0x3393e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033b2f: jle 0x33aa4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033ad9: jle 0x33aa4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x00033d4f: jle 0x33cc8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033cf9: jle 0x33cc8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x00033f7f: jle 0x33e72; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033fa9: jle 0x33f48; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345dd: jle 0x3459d; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000346ad: jle 0x3465f; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003476b: jle 0x3472b; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003483d: jle 0x347ea; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00040eef: jle 0x40bc1; mov eax, 0xf0; lea ebx, [ebp + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00040e91: jle 0x40d85; mov eax, 0xf0; lea ebx, [ebp + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004107d: jle 0x41005; mov eax, 0xf0; lea ebx, [edi + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004303a: jle 0x42ef4; mov eax, 0xf0; lea ebx, [ebx + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043595: jle 0x432cc; mov eax, 0xf0; lea ebx, [edi + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004382b: jle 0x4382d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00043860: jle 0x43862; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004396e: jle 0x43970; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004a8c8: jle 0x4a7f5; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0004d3bd: jle 0x4d379; mov eax, 0xf0; lea ebx, [ebx + 0x1900]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f12d: jle 0x4f003; mov eax, 0xf0; lea ebx, [ebx + 0x190c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f3fd: jle 0x4f3bc; mov eax, 0xf0; lea ebx, [ebx + 0x1910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00051147: jle 0x5113a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00054130: jle 0x51e4e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0005a70c: jle 0x58706; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000622ae: jle 0x60744; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00062837: jle 0x6273d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00067861: jle 0x659d8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00067d1f: jle 0x67c51; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068c27: jle 0x68be5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068d67: jle 0x68d1b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000691e7: jle 0x68fa0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069150: jle 0x6902d; mov eax, 0xf0; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006959f: jle 0x6954b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006977f: jle 0x69700; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000698f7: jle 0x69876; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069ae6: jle 0x69aeb; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00069ea7: jle 0x69e40; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069fd7: jle 0x69f74; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a127: jle 0x6a0a5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a301: jle 0x6a249; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a5a9: jle 0x6a498; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a874: jle 0x6a785; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006ac37: jle 0x6ab38; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006afe6: jle 0x6ae95; mov eax, 0xf0; lea ebx, [edi + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b09b: jle 0x6b089; lea ebx, [edx + 0x1928]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4c3: jle 0x6b351; mov eax, 0xf0; lea ebx, [ebp + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b77f: jle 0x6b69f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b7a3: jle 0x6b785; cli; jmp dword ptr [esi - 0x70]; 
0x0006b9ef: jle 0x6b9b6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bb97: jle 0x6bb60; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bd0f: jle 0x6bca2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006bf57: jle 0x6bddb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c087: jle 0x6c038; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c497: jle 0x6c415; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c607: jle 0x6c585; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c747: jle 0x6c6dd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006c8b7: jle 0x6c86d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006ca27: jle 0x6c990; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cbd7: jle 0x6cb5a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006cdd7: jle 0x6cd5b; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d297: jle 0x6d266; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d3b7: jle 0x6d35c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d537: jle 0x6d4a2; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d6d7: jle 0x6d642; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006faaa: jle 0x6f51f; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000708cf: jle 0x70854; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000714a0: jle 0x713de; mov esi, dword ptr [ebp - 0x20]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071737: jle 0x716f5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071827: jle 0x717e6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071917: jle 0x718d6; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071aa7: jle 0x71a24; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071def: jle 0x71c5d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071f07: jle 0x71ed3; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007204f: jle 0x71fcb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000721b7: jle 0x72133; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000721dd: jle 0x721d9; call dword ptr [ebx - 0x7d]; 
0x000724a7: jle 0x72424; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072597: jle 0x72562; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00072f37: jle 0x72f03; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00073111: jle 0x73059; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000733f7: jle 0x732c7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00073527: jle 0x734ee; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000736f1: jle 0x73649; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00073729: jle 0x73740; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00073839: jle 0x73850; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007484b: jle 0x74839; lea ebx, [edx + 0x193c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00074ad7: jle 0x74a83; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000773d7: jle 0x771fa; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00077707: jle 0x77670; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776db: jle 0x7769c; mov eax, 0xf0; lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000778d5: jle 0x778f0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000779bb: jle 0x7792c; mov eax, 0xf0; lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00077ccb: jle 0x77bd5; mov eax, 0xf0; lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00077c67: jle 0x77c80; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791ff: jle 0x79028; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791a5: jle 0x79126; mov eax, 0xf0; lea ebx, [ebp + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007959f: jle 0x7938d; lea ebx, [edx + 0x195c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079643: jle 0x794ca; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000798ff: jle 0x797be; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007992b: jle 0x79862; mov eax, 0xf0; lea ebx, [ebp + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079e1b: jle 0x79e09; lea ebx, [edx + 0x195c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007afdd: jle 0x7af48; mov eax, 0xf0; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b135: jle 0x7b11d; mov eax, 0xf0; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2e7: jle 0x7b1d8; mov eax, 0xf0; lea ebx, [edi + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c15d: jle 0x7c0de; mov eax, 0xf0; lea ebx, [ebx + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c6e9: jle 0x7c4c5; mov ebx, dword ptr [esp + 0x14]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c6b9: jle 0x7c6b5; call dword ptr [eax - 1]; 
0x0007d239: jle 0x7cd82; mov ebx, dword ptr [esp + 8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df7d: jle 0x7deb2; mov eax, 0xf0; lea ebx, [ebp + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e201: jle 0x7e11a; mov eax, 0xf0; lea ebx, [ebp + 0x1df0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e288: jle 0x7e16c; mov eax, 0xf0; lea ebx, [ebp + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e539: jle 0x7e4df; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e595: jle 0x7e511; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007fed1: jle 0x7fe00; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008001f: jle 0x7fff5; mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008004d: jle 0x80010; mov eax, 0xf0; lea ebx, [ebp + 0x1df0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000803ba: jle 0x802df; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000806c0: jle 0x805b7; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008096b: jle 0x8091d; mov eax, 0xf0; lea ebx, [edi + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080da5: jle 0x80cfb; mov ebx, dword ptr [esp + 0x1c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081290: jle 0x80fcb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000817c7: jle 0x81747; mov eax, 0xf0; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x00081a07: jle 0x8195c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00083253: jle 0x83299; cli; call dword ptr [eax - 0x73]; 
0x00094aee: jle 0x94af9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009fede: jle 0x9fecd; push es; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x000a01de: jle 0xa01ca; push es; add byte ptr [ebx - 0x72e3dba4], cl; or dword ptr [eax - 0x72], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x000ad03d: jle 0xacfcc; mov eax, 0xf0; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b53c5: jle 0xb5382; mov eax, 0xf0; lea ebx, [ebx + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b557d: jle 0xb549f; mov eax, 0xf0; lea ebx, [ebp + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b777d: jle 0xb778f; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000bf326: jle 0xbf328; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000c0374: jle 0xc0356; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c057e: jle 0xc04ab; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c063a: jle 0xc0608; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c06e2: jle 0xc06b0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c0bc4: jle 0xc0ba6; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c0dde: jle 0xc0d00; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c189e: jle 0xc1816; mov eax, 0xf0; lea ebx, [ebx + 0x2180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22cd: jle 0xc2277; mov eax, 0xf0; lea ebx, [ebx + 0x219c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c246d: jle 0xc23b6; mov eax, 0xf0; lea ebx, [ebx + 0x21b4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c262d: jle 0xc256e; mov eax, 0xf0; lea ebx, [ebx + 0x21cc]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2907: jle 0xc27dc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c28df: jle 0xc27e1; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29e5: jle 0xc29a3; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2add: jle 0xc2a8c; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2bed: jle 0xc2b98; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3ad1: jle 0xc3997; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a36: jle 0xc39e3; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a9e: jle 0xc3a78; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c40fe: jle 0xc4056; mov eax, 0xf0; lea ebx, [ebx + 0x2218]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c449d: jle 0xc4447; mov eax, 0xf0; lea ebx, [ebx + 0x223c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c464d: jle 0xc458e; mov eax, 0xf0; lea ebx, [ebx + 0x2260]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c47fd: jle 0xc4746; mov eax, 0xf0; lea ebx, [ebx + 0x2284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48e5: jle 0xc48a3; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c49dd: jle 0xc498c; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4aed: jle 0xc4a98; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5767: jle 0xc5655; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5718: jle 0xc5697; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5797: jle 0xc56ef; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c6fc1: jle 0xc6fc3; add byte ptr [eax], al; pop ebx; ret; 
0x000d181c: jle 0xd186b; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000d1a4e: jle 0xd1aac; add dword ptr [edi], ecx; lahf; ret 0xd789; 
0x000de988: jle 0xde762; mov ebx, dword ptr [esp + 0x1c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000deeed: jle 0xdee7d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000ea9ae: jle 0xea9b8; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ed910: jle 0xed912; add byte ptr [ebx - 0x3b7cef3c], al; adc al, 0x5b; pop esi; ret; 
0x000f345e: jle 0xf3410; cli; jmp dword ptr [esi + 3]; 
0x000fa80d: jle 0xfa565; mov eax, 0xf0; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa9dd: jle 0xfa999; mov eax, 0xf0; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000faadd: jle 0xfaa69; mov eax, 0xf0; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001316c3: jmp dword ptr [eax + 4]; 
0x00139936: jmp dword ptr [eax + 8]; 
0x00041b8d: jmp dword ptr [eax]; 
0x00055f3e: jmp dword ptr [ebp + 0x31]; 
0x0001a6c3: jmp dword ptr [ebp + 0x33]; 
0x0011fa2f: jmp dword ptr [ebp + 0x39]; 
0x0001b5bf: jmp dword ptr [ebp + 3]; 
0x0001b665: jmp dword ptr [ebp - 0x39]; 
0x000555ae: jmp dword ptr [ebp - 0x42]; 
0x0001cd33: jmp dword ptr [ebp - 0x5f]; 
0x000270af: jmp dword ptr [ebp - 0x75]; 
0x0001b002: jmp dword ptr [ebp - 0x77]; 
0x0001b0e5: jmp dword ptr [ebp - 0x7d]; 
0x00080205: jmp dword ptr [ebp - 0x80]; 
0x00028122: jmp dword ptr [ebp - 1]; 
0x0005b2ab: jmp dword ptr [ebp]; 
0x00019010: jmp dword ptr [ebx + 0xc]; 
0x000bfb17: jmp dword ptr [ebx + 0xf]; 
0x00019006: jmp dword ptr [ebx + 8]; 
0x00126cff: jmp dword ptr [ebx - 0x41]; 
0x000276fd: jmp dword ptr [ebx]; 
0x00139f6d: jmp dword ptr [ecx - 0xf]; 
0x00027a9b: jmp dword ptr [ecx]; 
0x001019e1: jmp dword ptr [edi + 0x6d]; 
0x0004ce04: jmp dword ptr [edi + 0x75]; 
0x0004cb97: jmp dword ptr [edi - 0x75]; 
0x001181dd: jmp dword ptr [edx - 8]; 
0x0005f7c4: jmp dword ptr [edx]; 
0x0004ea0c: jmp dword ptr [esi + 0x3d]; 
0x000d1c3c: jmp dword ptr [esi + 0xb]; 
0x0004b71a: jmp dword ptr [esi + 0xf]; 
0x000f1c01: jmp dword ptr [esi + 3]; 
0x00149083: jmp dword ptr [esi + 4]; 
0x00049468: jmp dword ptr [esi + 6]; 
0x0011a3ab: jmp dword ptr [esi - 0x39]; 
0x0004e1c9: jmp dword ptr [esi - 0x3f]; 
0x000190d5: jmp dword ptr [esi - 0x70]; 
0x0002ca94: jmp dword ptr [esi - 0x77]; 
0x00167711: jmp dword ptr [esi - 0x7b]; 
0x000b4e76: jmp dword ptr [esi - 0x7d]; 
0x0001dbd4: jmp dword ptr [esi - 0x7f]; 
0x0013b047: jmp dword ptr [esi - 9]; 
0x0001b227: jmp eax; 
0x00051dbd: jmp ebx; 
0x0002df8d: jmp ecx; 
0x00029b35: jmp edi; 
0x0001ace0: jmp edx; 
0x0005e3b9: jmp esi; 
0x0003cf20: jmp esp; 
0x00100532: jne 0x100549; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001005b5: jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x00100642: jne 0x100659; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001006aa: jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x0010072a: jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x001007bd: jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x00100835: jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x001008cd: jne 0x1008e9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001009f2: jne 0x100a09; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00100a7d: jne 0x100a99; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00100b02: jne 0x100b19; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00100b9d: jne 0x100bb9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00100c1d: jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100c95: jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d0a: jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00100d95: jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00100e23: jne 0x100e2b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00101039: jne 0x10103f; add esp, 0x1c; ret; 
0x001010bd: jne 0x1010d9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00101103: jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001011ae: jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00101286: jne 0x1012b0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001013b3: jne 0x1013c0; add esp, 0x7c; ret; 
0x001013f2: jne 0x1013f4; add byte ptr [eax], al; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x001013ef: jne 0x101418; mov eax, 0x75; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x00101435: jne 0x101437; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001014b6: jne 0x1014b8; add byte ptr [eax], al; lea edi, [esp + 0x14]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0010151c: jne 0x10151e; add byte ptr [eax], al; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001016ee: jne 0x1016f0; add byte ptr [eax], al; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x001017e8: jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00101bb5: jne 0x101bee; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0010351f: jne 0x103530; mov eax, edx; pop ebx; pop esi; ret; 
0x0010358a: jne 0x103598; mov eax, edx; pop ebx; pop esi; ret; 
0x00103775: jne 0x103780; mov eax, edx; pop ebx; pop esi; ret; 
0x00103dca: jne 0x103dd8; mov eax, edx; pop ebx; pop esi; ret; 
0x00103e2a: jne 0x103e38; mov eax, edx; pop ebx; pop esi; ret; 
0x00104005: jne 0x104010; mov eax, edx; pop ebx; pop esi; ret; 
0x001086c3: jne 0x1086af; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0010a0d2: jne 0x10a088; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0010a900: jne 0x10a8b6; call dword ptr [ebx + 0x14]; 
0x0010af7a: jne 0x10afa0; pop ebx; pop esi; pop edi; ret; 
0x0010b146: jne 0x10b134; add esp, 4; pop ebx; pop esi; ret; 
0x0010c47a: jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x0010c535: jne 0x10c521; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0010c519: jne 0x10c528; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x10c530; ret; 
0x0010dde7: jne 0x10ddf0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0010dfd2: jne 0x10dfc0; call 0x10d590; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0010e14c: jne 0x10e106; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0010e8e5: jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e955: jne 0x10e965; add esp, 0x2c; ret; 
0x00115710: jne 0x115719; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00115796: jne 0x11579c; add esp, 0x2c; ret; 
0x00116be6: jne 0x116bd0; add esp, 4; pop ebx; pop esi; ret; 
0x00118d69: jne 0x118e0e; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001196cc: jne 0x1196f4; add esp, 0x24; pop ebx; pop esi; ret; 
0x00119b68: jne 0x119b2a; mov eax, dword ptr [ebp - 0x3c]; mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0011a5f8: jne 0x11a620; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0011ada9: jne 0x11add0; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0011af53: jne 0x11af70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0011b3a8: jne 0x11b3b8; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0011b46e: jne 0x11b4b4; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011b99a: jne 0x11b9f8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011cc8b: jne 0x11cccb; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011ce4f: jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0011ceab: jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011cef7: jne 0x11cefd; add esp, 0x1c; ret; 
0x0011efa0: jne 0x11ef8f; call 0x11ebb0; or dword ptr [ebx + 0x2f74], 2; add esp, 8; pop ebx; ret; 
0x0011f39d: jne 0x11f3a8; pop ebx; pop esi; pop edi; ret; 
0x0011f3df: jne 0x11f3c8; pop ebx; pop esi; pop edi; ret; 
0x00120cac: jne 0x120cb8; add esp, 4; pop ebx; pop esi; ret; 
0x00122120: jne 0x122129; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012371b: jne 0x1236a8; pop ebx; pop esi; ret; 
0x0012388e: jne 0x123897; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00123955: jne 0x123960; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001245dc: jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x001247b9: jne 0x1247d8; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00124850: jne 0x1248f3; add esp, 0x34; pop ebx; pop esi; ret; 
0x00124a71: jne 0x124a9f; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00124af9: jne 0x124b08; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00124c82: jne 0x124cb9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00125679: jne 0x125688; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00125739: jne 0x125748; add esp, 4; pop ebx; pop esi; ret; 
0x001257b5: jne 0x1257c0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001258d5: jne 0x125928; mov dword ptr [eax], 0; pop ebx; ret; 
0x00125a3b: jne 0x125b70; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00126687: jne 0x126698; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00126b32: jne 0x126b66; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00126bbd: jne 0x126bee; add esp, 0x14; pop ebx; pop esi; ret; 
0x001275eb: jne 0x1275ff; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00127ec2: jne 0x127eb0; pop ebx; ret; 
0x00127fb2: jne 0x127fc0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00128055: jne 0x128060; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0012b2fd: jne 0x12b377; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012d543: jne 0x12d595; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x0012e3b9: jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e430: jne 0x12e44c; add esp, 0x74; pop ebx; pop edi; ret; 
0x0012e4e0: jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e580: jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x0012e63d: jne 0x12e687; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012e72d: jne 0x12e777; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012e850: jne 0x12e860; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0012e8d0: jne 0x12e8d6; add esp, 0x1c; ret; 
0x0012e947: jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x0012ea3e: jne 0x12eab2; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0012ee7e: jne 0x12eeaf; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012f402: jne 0x12f387; ret 0x3901; 
0x0012f70b: jne 0x12f711; add esp, 0x4c; ret; 
0x0012f77b: jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7eb: jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f85b: jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8be: jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f91e: jne 0x12f924; add esp, 0x4c; ret; 
0x0012f98b: jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa0b: jne 0x12fa11; add esp, 0x4c; ret; 
0x0012fde9: jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x0012fec1: jne 0x12fef4; add esp, 0x1c; ret; 
0x0012ff29: jne 0x12ff10; add esp, 8; pop ebx; ret; 
0x0013024f: jne 0x130260; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x00131682: jne 0x131688; add esp, 0x2c; ret; 
0x00131713: jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317f3: jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00131895: jne 0x13193e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00131985: jne 0x131a2e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00131a9a: jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b2a: jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131be5: jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c4e: jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131cea: jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x001321d9: jne 0x13227e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x001322d9: jne 0x13237e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0013249a: jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x0013252a: jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325ba: jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x0013264a: jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x00132922: jne 0x1328a7; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00132a1b: jne 0x132a39; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00132c33: jne 0x132c3b; add esp, 0x54; pop ebx; pop esi; ret; 
0x00132c92: jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132ce2: jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x00132d3b: jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d9b: jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x00132dfe: jne 0x132e08; add esp, 0xc; ret; 
0x00132e3e: jne 0x132e48; add esp, 0xc; ret; 
0x00132e58: jne 0x132e4d; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001336bd: jne 0x1336c6; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00133d7d: jne 0x133d86; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00136ebe: jne 0x136edd; add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x00137417: jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00137483: jne 0x1374c0; sub dword ptr [ebx + 0x3584], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00137683: jne 0x1376c0; sub dword ptr [ebx + 0x3584], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013773d: jne 0x13776c; add esp, 0x14; pop ebx; pop esi; ret; 
0x001377cd: jne 0x1377fc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00138bdc: jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x00138c5d: jne 0x138c6f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00139634: jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d9: jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x0013977b: jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x001398a7: jne 0x1398ec; add esp, 0x34; mov eax, edx; pop ebx; pop esi; ret; 
0x00139ea1: jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x0013a133: jne 0x13a17f; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x0013a1e1: jne 0x13a1ea; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013a497: jne 0x13a538; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013a9bc: jne 0x13aa18; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013b949: jne 0x13b988; sub dword ptr [ebx + 0x3758], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013ba29: jne 0x13ba68; sub dword ptr [ebx + 0x3758], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013bab6: jne 0x13bac0; pop ebx; pop esi; pop edi; ret; 
0x0013bbf3: jne 0x13bc30; sub dword ptr [ebx + 0x3758], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013bcc3: jne 0x13bd00; sub dword ptr [ebx + 0x3758], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013bf17: jne 0x13bf20; add esp, 8; pop ebx; ret; 
0x0013c20f: jne 0x13c206; call dword ptr [eax - 0x18]; 
0x0013cae2: jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013cbd2: jne 0x13cbf4; mov eax, 4; add esp, 0xc; ret; 
0x0013d040: jne 0x13d050; add esp, 8; pop ebx; ret; 
0x0013d080: jne 0x13d090; add esp, 8; pop ebx; ret; 
0x0013f1bc: jne 0x13f1c8; add esp, 8; pop ebx; ret; 
0x0013f77a: jne 0x13f79b; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0013f8f9: jne 0x13f8ff; add esp, 0x1c; ret; 
0x00145445: jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x001454de: jne 0x1454e6; add esp, 0x14; pop ebx; pop esi; ret; 
0x00145558: jne 0x145560; add esp, 0x14; pop ebx; pop esi; ret; 
0x001455f0: jne 0x1455f2; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00145612: jne 0x145637; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0015618e: jne 0x156200; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00157c37: jne 0x157a90; pop ebp; xor eax, eax; ret; 
0x0015ccac: jne 0x15ccc0; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0015d697: jne 0x15de10; pop ebx; ret; 
0x0015d4d0: jne 0x15de26; pop ebx; ret; 
0x0015ee1f: jne 0x15f060; pop ebx; ret; 
0x001604d9: jne 0x160700; pop ebx; ret; 
0x00160596: jne 0x160720; pop ebx; ret; 
0x0016099a: jne 0x160992; ret 0x7504; 
0x00160999: jne 0x160a10; test dl, 4; jne 0x160a14; add eax, 3; ret; 
0x0016099e: jne 0x160a14; add eax, 3; ret; 
0x001609b8: jne 0x160a20; test dl, 0x40; jne 0x160a24; add eax, 7; ret; 
0x001609bd: jne 0x160a24; add eax, 7; ret; 
0x001609df: jne 0x160a30; test dh, 4; jne 0x160a34; add eax, 0xb; ret; 
0x001609e4: jne 0x160a34; add eax, 0xb; ret; 
0x001609f8: jne 0x160a40; test dh, 0x40; jne 0x160a44; add eax, 0xf; ret; 
0x001609fd: jne 0x160a44; add eax, 0xf; ret; 
0x00160cce: jne 0x160d90; test al, 0x40; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x00160cd6: jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x00160b9e: jne 0x160da0; test dl, 0x40; jne 0x160e20; lea eax, [edi + 7]; pop edi; ret; 
0x00160d29: jne 0x160e10; lea eax, [edi + 0xf]; pop edi; ret; 
0x00160c90: jne 0x160e20; lea eax, [edi + 0xb]; pop edi; ret; 
0x00160c4a: jne 0x160e20; lea eax, [edi + 0xf]; pop edi; ret; 
0x00160bed: jne 0x160e20; lea eax, [edi + 3]; pop edi; ret; 
0x00160ba7: jne 0x160e20; lea eax, [edi + 7]; pop edi; ret; 
0x001612ed: jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016116d: jne 0x1611f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161192: jne 0x161220; lea eax, [edi - 0xc]; pop edi; ret; 
0x001611bc: jne 0x161250; lea eax, [edi - 8]; pop edi; ret; 
0x001611e5: jne 0x161280; lea eax, [edi - 4]; pop edi; ret; 
0x001612e4: jne 0x1613c0; and eax, 0xf; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016166f: jne 0x161790; lea eax, [edi + 3]; pop edi; ret; 
0x00161692: jne 0x1617c0; lea eax, [edi + 7]; pop edi; ret; 
0x001616b3: jne 0x1617e0; test ah, 4; jne 0x1617f0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001616bc: jne 0x1617f0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001616dc: jne 0x161810; test ah, 0x40; jne 0x161820; lea eax, [edi + 0xf]; pop edi; ret; 
0x001616e5: jne 0x161820; lea eax, [edi + 0xf]; pop edi; ret; 
0x00161762: jne 0x161830; xor eax, eax; pop edi; ret; 
0x00161851: jne 0x161920; sub edx, 4; jb 0x1619c0; lea eax, [edi + 3]; pop edi; ret; 
0x00161882: jne 0x161950; sub edx, 8; jb 0x1619c0; lea eax, [edi + 7]; pop edi; ret; 
0x001618bc: jne 0x161980; sub edx, 0xc; jb 0x1619c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001620aa: jne 0x161cd0; xor eax, eax; ret; 
0x00161b8d: jne 0x161d70; mov eax, ecx; ret; 
0x00161b85: jne 0x161d80; test al, 2; jne 0x161d70; mov eax, ecx; ret; 
0x00161d12: jne 0x161da0; lea eax, [ecx + 4]; ret; 
0x00161d0a: jne 0x161db0; test al, 0x20; jne 0x161da0; lea eax, [ecx + 4]; ret; 
0x00161d3c: jne 0x161dd0; lea eax, [ecx + 8]; ret; 
0x00161d65: jne 0x161e00; lea eax, [ecx + 0xc]; ret; 
0x00161bfa: jne 0x161e30; xor eax, eax; ret; 
0x00161c39: jne 0x161eb0; xor eax, eax; ret; 
0x00161e58: jne 0x161fc0; add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x00161f42: jne 0x161ff0; add edx, 4; jl 0x162080; lea eax, [ecx + 4]; ret; 
0x00161f7b: jne 0x162020; add edx, 8; jl 0x162080; lea eax, [ecx + 8]; ret; 
0x00161fa5: jne 0x162050; add edx, 0xc; jl 0x162080; lea eax, [ecx + 0xc]; ret; 
0x00162337: jne 0x1623d0; test al, 4; jne 0x1623e0; lea eax, [edx + 3]; ret; 
0x0016233f: jne 0x1623e0; lea eax, [edx + 3]; ret; 
0x0016235a: jne 0x162400; test al, 0x40; jne 0x162410; lea eax, [edx + 7]; ret; 
0x00162362: jne 0x162410; lea eax, [edx + 7]; ret; 
0x00162383: jne 0x162430; test ah, 4; jne 0x162440; lea eax, [edx + 0xb]; ret; 
0x0016238c: jne 0x162440; lea eax, [edx + 0xb]; ret; 
0x001623ac: jne 0x162460; test ah, 0x40; jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x001623b5: jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x00162850: jne 0x162860; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00162882: jne 0x162940; sub edi, 4; jb 0x1629e0; lea eax, [eax + 3]; pop edi; ret; 
0x0016276f: jne 0x162b35; add eax, 3; pop edi; ret; 
0x00162795: jne 0x162b49; add eax, 7; pop edi; ret; 
0x001627b3: jne 0x162b58; test dh, 4; jne 0x162b5d; add eax, 0xb; pop edi; ret; 
0x001627bc: jne 0x162b5d; add eax, 0xb; pop edi; ret; 
0x001627e5: jne 0x162b71; add eax, 0xf; pop edi; ret; 
0x00163027: jne 0x163070; pop edi; pop esi; pop ebx; ret; 
0x00163158: jne 0x163160; pop ebx; ret; 
0x0016320c: jne 0x1632d0; test dl, 0xf; jne 0x163350; lea eax, [ecx + 4]; ret; 
0x001632e7: jne 0x163300; test dh, 0xf; jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x00163316: jne 0x163330; lea eax, [ecx + 4]; ret; 
0x00163323: jne 0x163340; lea eax, [ecx + 0xc]; ret; 
0x001632ec: jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x00163215: jne 0x163350; lea eax, [ecx + 4]; ret; 
0x001634a7: jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x0016349f: jne 0x163570; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x00163543: jne 0x163580; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x00163573: jne 0x163590; lea eax, [edi - 8]; pop edi; ret; 
0x00163bcb: jne 0x163c00; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00163be3: jne 0x163c10; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0016b6df: jne 0x16b6c4; add esp, 4; pop ebx; pop esi; ret; 
0x0016b744: jne 0x16b73e; call dword ptr [edx + 0x50]; 
0x0016bbcf: jne 0x16bba0; pop ebx; pop esi; pop edi; ret; 
0x0016bd3e: jne 0x16bd24; add esp, 4; pop ebx; pop esi; ret; 
0x0016be01: jne 0x16bde8; add esp, 4; pop ebx; pop esi; ret; 
0x0016be74: jne 0x16beb0; sub dword ptr [ebx + 0x1aa0], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0016bfa2: jne 0x16bf90; pop ebx; pop esi; pop edi; ret; 
0x000835e7: jne 0x1a3b5; pop ebx; pop esi; pop edi; ret; 
0x0013cbba: jne 0x1a68f; mov eax, 8; add esp, 0xc; ret; 
0x0013cc69: jne 0x1a694; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0001a6e1: jne 0x1a6be; mov ecx, dword ptr [eax - 0x100]; cmp dword ptr [ecx + 0x94], edx; jne 0x1a6be; ret; 
0x0001a6ef: jne 0x1a6be; ret; 
0x0001af34: jne 0x1af4b; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0001b63d: jne 0x1b66f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0001dc80: jne 0x1dc6f; call 0x1d790; or dword ptr [ebx + 0xfb0], 2; add esp, 8; pop ebx; ret; 
0x00024fde: jne 0x25012; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00028c64: jne 0x28c70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0002ca40: jne 0x2ca5d; add byte ptr [ecx + 0x1ecec], al; add byte ptr [ecx - 0x1cb63], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002e666: jne 0x2e645; ret; 
0x0002f5d2: jne 0x2f5e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0002f983: jne 0x2f945; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0002f941: jne 0x2f950; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0002fbff: jne 0x2fbc1; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x0002fbbd: jne 0x2fbd0; fadd st(0); add esp, 8; pop ebx; ret; 
0x0002fd18: jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309eb: jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00030a4e: jne 0x30a60; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00030d24: jne 0x30d30; add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x000310c6: jne 0x31108; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000310f7: jne 0x31137; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x000311b1: jne 0x311d8; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00031322: jne 0x31334; add esp, 0x114; pop ebx; pop edi; ret; 
0x000313a2: jne 0x313b4; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003141a: jne 0x3145e; add esp, 0x94; pop ebx; pop edi; ret; 
0x000314bd: jne 0x314c8; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003152c: jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x000316d2: jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x00031a8c: jne 0x31a98; add esp, 0x120; pop ebx; pop esi; pop edi; ret; 
0x00031e84: jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031ef4: jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x00031f6a: jne 0x31f75; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003280a: jne 0x3280c; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00033416: jne 0x333e0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00034177: jne 0x34140; pop ebx; pop esi; pop edi; ret; 
0x0003427d: jne 0x34288; add esp, 4; pop ebx; pop esi; ret; 
0x0003437c: jne 0x34382; add esp, 0x2c; ret; 
0x0003449c: jne 0x344a2; add esp, 0x2c; ret; 
0x00034594: jne 0x345d0; sub dword ptr [ebx + 0x1700], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000347f9: jne 0x3485d; add esp, 0x14; pop ebx; pop esi; ret; 
0x00034d6e: jne 0x34d74; add esp, 0x1c; ret; 
0x00034dc1: jne 0x34dc7; add esp, 0x1c; ret; 
0x00034e0e: jne 0x34e14; add esp, 0x1c; ret; 
0x00034e61: jne 0x34e67; add esp, 0x1c; ret; 
0x00034eae: jne 0x34eb4; add esp, 0x1c; ret; 
0x00034f01: jne 0x34f07; add esp, 0x1c; ret; 
0x00035289: jne 0x352b0; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00037b4e: jne 0x37b6e; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0003a93e: jne 0x3a95e; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0003d8ae: jne 0x3d8ce; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000417ad: jne 0x4178b; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00042d3b: jne 0x42d30; add esp, 8; pop ebx; ret; 
0x000439fd: jne 0x439f0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00043a1d: jne 0x43a08; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00043aed: jne 0x43ae0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00043b0d: jne 0x43af8; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00043c2f: jne 0x43be0; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00043d06: jne 0x43cf8; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00045006: jne 0x45059; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x000450ef: jne 0x450a0; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00045a46: jne 0x45a51; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00045ac4: jne 0x45acf; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00045b3e: jne 0x45b5e; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00049b44: jne 0x49b4f; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004a0f7: jne 0x4a115; add esp, 0x434; pop ebx; pop esi; ret; 
0x00050849: jne 0x50850; add esp, 8; pop ebx; ret; 
0x000508d0: jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x00050e88: jne 0x50e97; add esp, 0x1c; ret; 
0x00051135: jne 0x51140; sub dword ptr [ebx], 1; pop ebx; pop esi; ret; 
0x000537f3: jne 0x53780; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0005438a: jne 0x54386; call dword ptr [eax - 0x73]; 
0x0005ca40: jne 0x5ca3c; call dword ptr [eax + 0x68]; 
0x0005cbdd: jne 0x5cbd9; call dword ptr [eax + 0x68]; 
0x00069df9: jne 0x69ddf; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00069dfc: jne 0x69e06; push esi; call dword ptr [ebx + 0x1c]; 
0x0006a345: jne 0x6a33a; cli; jmp dword ptr [esi - 0x70]; 
0x0006a474: jne 0x6a47e; push esi; call dword ptr [ebx + 0x1c]; 
0x0006b080: jne 0x6b090; sub dword ptr [edx + 0x1928], 1; pop ebx; pop esi; ret; 
0x0006b63e: jne 0x6b648; push eax; call dword ptr [ebx + 0x1c]; 
0x0006bc60: jne 0x6bc6e; push esi; call dword ptr [eax + 0x2c]; 
0x0006bcc2: jne 0x6bcd0; push esi; call dword ptr [eax + 0x2c]; 
0x0006be2a: jne 0x6be38; push esi; call dword ptr [ebx + 0x2c]; 
0x0006be27: jne 0x6be3d; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0006c8d5: jne 0x6c8a9; cli; jmp dword ptr [esi - 0x70]; 
0x0006cd90: jne 0x6cd72; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006cd93: jne 0x6cd9d; push esi; call dword ptr [ebx + 0x1c]; 
0x0006dddc: jne 0x6ddd0; mov eax, edx; ret; 
0x0006e2f3: jne 0x6e358; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0006e57f: jne 0x6e50b; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0006e6df: jne 0x6e66b; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00070f7c: jne 0x7106e; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0007127b: jne 0x71290; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x000714a7: jne 0x71489; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000716e7: jne 0x71730; sub dword ptr [ebx], 1; pop ebx; pop esi; pop edi; ret; 
0x000744c2: jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x00074830: jne 0x74840; sub dword ptr [edx + 0x193c], 1; pop ebx; pop esi; ret; 
0x00074b12: jne 0x74b20; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00075582: jne 0x756a7; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x000770ac: jne 0x770b8; add esp, 8; pop ebx; ret; 
0x00077d54: jne 0x77d48; mov eax, edx; ret; 
0x00078b3c: jne 0x78b30; ret; 
0x00078ed0: jne 0x78e96; add esp, 4; pop ebx; pop esi; ret; 
0x00079a02: jne 0x799f8; ret; 
0x00079a34: jne 0x79a40; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0007b45f: jne 0x7b480; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0007bbde: jne 0x7bbe9; add esp, 8; pop ebx; ret; 
0x0007bdc3: jne 0x7bdd0; ret; 
0x0007c7c6: jne 0x7c800; mov dword ptr [esp + 0xc], ecx; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x0007e433: jne 0x7e472; add esp, 0x24; pop ebx; pop esi; ret; 
0x00082578: jne 0x82622; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00083515: jne 0x83463; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0008357d: jne 0x83570; xor eax, eax; ret; 
0x000835d2: jne 0x835a8; sub esp, 0xc; push eax; call edx; 
0x0008362b: jne 0x83620; mov eax, ecx; ret; 
0x00083d72: jne 0x83d7e; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x000855a7: jne 0x85560; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00085838: jne 0x85800; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00086475: jne 0x86460; pop ebx; pop esi; pop edi; ret; 
0x000865a9: jne 0x865a0; mov eax, ecx; ret; 
0x00086f2f: jne 0x86f18; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00086f21: jne 0x86f24; add byte ptr [ebx + 0x7c8d10c4], al; pop es; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x00087341: jne 0x87357; pop ebx; pop esi; pop edi; ret; 
0x0008790d: jne 0x87900; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00088af2: jne 0x88ae1; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0008aac4: jne 0x8aab8; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0008ac65: jne 0x8ac58; mov eax, edx; pop ebx; ret; 
0x0008aca1: jne 0x8ac90; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ae01: jne 0x8adf0; mov eax, edx; pop ebx; ret; 
0x0008e7ec: jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008eeec: jne 0x8ee51; pop ebx; ret; 
0x00092cb1: jne 0x932a0; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x0009333c: jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00093461: jne 0x932a1; pop ebx; ret; 
0x00094a8b: jne 0x949fb; call 0x13cef9; add ecx, 0xed64a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094ac8: jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000960cb: jne 0x9603b; call 0x13cef9; add ecx, 0xec16a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009610a: jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096f6a: jne 0x96f62; ret 0x7504; 
0x0009926a: jne 0x99262; ret 0x7504; 
0x0009c06b: jne 0x9bfdb; call 0x13cef9; add ecx, 0xe639e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009cb02: jne 0x9cbf0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009cbb4: jne 0x9cc10; xor eax, eax; pop edi; ret; 
0x0009cb7a: jne 0x9cc30; xor eax, eax; pop edi; ret; 
0x0009cdda: jne 0x9ce90; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0009ce4a: jne 0x9cec0; xor eax, eax; ret; 
0x0009ce79: jne 0x9cee0; xor eax, eax; ret; 
0x0009d089: jne 0x9d080; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009d291: jne 0x9d2d0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0009d877: jne 0x9d87d; xor eax, eax; pop ebx; ret; 
0x0009d90c: jne 0x9db17; pop esi; xor eax, eax; pop ebx; ret; 
0x0009d980: jne 0x9db2b; pop esi; xor eax, eax; pop ebx; ret; 
0x0009e1f1: jne 0x9e1f6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0009e2a2: jne 0x9e298; xor eax, eax; ret; 
0x0009e41d: jne 0x9e421; xor eax, eax; ret; 
0x0009e6bd: jne 0x9e6b8; pop esi; ret; 
0x0009ef95: jne 0x9ef80; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009f2c0: jne 0x9f298; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0009fad5: jne 0x9fadf; call ebx; 
0x0009fb3f: jne 0x9fb49; call ebx; 
0x000a057c: jne 0xa0570; ret; 
0x000a05a7: jne 0xa05ab; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a1d8e: jne 0xa1dae; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000a4a8e: jne 0xa4aae; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000a774e: jne 0xa776e; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000aa24c: jne 0xaa29b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000aa31c: jne 0xaa37d; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000aa3fc: jne 0xaa43b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000acb5e: jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000adb6e: jne 0xadb8e; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000b16f4: jne 0xb16ff; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000b1776: jne 0xb1781; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000b17f4: jne 0xb17ff; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000b242f: jne 0xb2580; pop edi; pop esi; ret; 
0x000b240e: jne 0xb2580; xor eax, eax; pop edi; pop esi; ret; 
0x000b25ef: jne 0xb25e0; mov eax, ecx; pop ebx; pop esi; ret; 
0x000b2856: jne 0xb2830; mov eax, ecx; ret; 
0x000b290b: jne 0xb2900; ret; 
0x000b293c: jne 0xb2930; mov eax, ecx; pop ebx; ret; 
0x000b314e: jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31ce: jne 0xb31d4; add esp, 0x1c; ret; 
0x000b3219: jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000b3279: jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000b413b: jne 0xb4158; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000b42a6: jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000b5379: jne 0xb53b8; sub dword ptr [ebx + 0x20c8], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000b6e24: jne 0xb6e2d; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x000b7709: jne 0xb7718; add esp, 4; pop ebx; pop esi; ret; 
0x000ba657: jne 0xba6a0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000bc712: jne 0xbc718; add esp, 0x1c; ret; 
0x000bee12: jne 0xbee18; add esp, 0x1c; ret; 
0x000bef48: jne 0xbefa0; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000bf005: jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x000bf0c7: jne 0xbf158; mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000bf25c: jne 0xbf2db; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000bf35c: jne 0xbf3db; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000bf47e: jne 0xbf540; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x000bf60a: jne 0xbf627; add esp, 0x34; pop ebx; pop esi; ret; 
0x000bfa38: jne 0xbfa10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000bff6b: jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfffe: jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x000c0173: jne 0xc01a4; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000c112d: jne 0xc1169; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000c216b: jne 0xc21a0; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000c218d: jne 0xc21ee; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000c41fc: jne 0xc4223; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x000c58ae: jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c5960: jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c5abd: jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000c5b55: jne 0xc5b60; add esp, 8; pop ebx; ret; 
0x000c66d7: jne 0xc6708; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c66f9: jne 0xc674e; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000c6787: jne 0xc67b8; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000c67a9: jne 0xc67fe; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000c69f0: jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6a12: jne 0xc6a6f; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x000c6ab0: jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000c6ad2: jne 0xc6b2f; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x000c7052: jne 0xc7060; lea esi, [esi]; mov eax, 0x40; ret; 
0x000c725e: jne 0xc7460; add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x000c7aae: jne 0xc7c9c; add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x000c7d09: jne 0xc7cec; xor eax, eax; pop ebx; ret; 
0x000c7ecd: jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca249: jne 0xca22c; xor eax, eax; pop ebx; ret; 
0x000ca40d: jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000cc7f2: jne 0xcc7be; xor eax, eax; pop ebx; ret; 
0x000cc7ce: jne 0xcc7e9; mov eax, 1; pop ebx; ret; 
0x000df269: jne 0xdf24c; xor eax, eax; pop ebx; ret; 
0x000df42d: jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dfd79: jne 0xdfd5c; xor eax, eax; pop ebx; ret; 
0x000dff3d: jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000e2f55: jne 0xe2f48; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000e5ecd: jne 0xe5eb0; pop ebx; pop esi; pop edi; ret; 
0x000e6e26: jne 0xe6dab; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000ea214: jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2c4: jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ea373: jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea423: jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ea95e: jne 0xea969; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000eb3f1: jne 0xeb407; add esp, 0x1c; ret; 
0x000eb54e: jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000eb5c9: jne 0xeb5ac; xor eax, eax; pop ebx; ret; 
0x000eb78d: jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x000ec122: jne 0xec128; add esp, 0x1c; ret; 
0x000ec179: jne 0xec17f; add esp, 0x1c; ret; 
0x000ec1eb: jne 0xec237; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ec29b: jne 0xec2e7; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ec34b: jne 0xec397; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ec6fb: jne 0xec718; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000ec750: jne 0xec770; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000ec7f4: jne 0xec807; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ec827: jne 0xec848; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000ec966: jne 0xec977; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x000ec9c6: jne 0xec9d7; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x000eca1d: jne 0xeca47; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000eca8d: jne 0xecab7; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ecb76: jne 0xecb98; test ah, 1; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000ecb7b: jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000ecc47: jne 0xecc80; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecd6a: jne 0xecda0; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ece87: jne 0xecec0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecfaa: jne 0xecfe0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed0b9: jne 0xed0e0; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed159: jne 0xed180; mov eax, 4; call dword ptr gs:[0x10]; 
0x000ed2de: jne 0xed2f7; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ed6ae: jne 0xed820; mov eax, 0xdd; mov edx, esi; call dword ptr gs:[0x10]; 
0x000ed719: jne 0xed860; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed932: jne 0xed958; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000eda5e: jne 0xedb10; add esp, 0x24; pop ebx; pop esi; ret; 
0x000edbae: jne 0xedc60; add esp, 0x24; pop ebx; pop esi; ret; 
0x000edc81: jne 0xedca0; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eddd5: jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000ee7d1: jne 0xee833; add esp, 0xd4; pop ebx; pop esi; ret; 
0x000ef140: jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000ef97b: jne 0xef989; call dword ptr [ebp + 0x24]; 
0x000efc4b: jne 0xefc59; call dword ptr [ebp + 0x24]; 
0x000efcbc: jne 0xefcca; call dword ptr [ebp + 0x24]; 
0x000f09fb: jne 0xf0a09; call dword ptr [ebp + 0x24]; 
0x000f0ccb: jne 0xf0cd9; call dword ptr [ebp + 0x24]; 
0x000f0d3c: jne 0xf0d4a; call dword ptr [ebp + 0x24]; 
0x000f4449: jne 0xf4470; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000f471c: jne 0xf4724; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f4de7: jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f504c: jne 0xf5064; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f5118: jne 0xf512c; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f5457: jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f5519: jne 0xf5540; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f55d7: jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f56df: jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x000f5771: jne 0xf57d6; add esp, 0x18; mov eax, edx; pop ebx; ret; 
0x000f5ba7: jne 0xf5b80; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; ret; 
0x000f5d27: jne 0xf5d60; mov edi, dword ptr [edi - 0x108]; mov eax, 0x36; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5f0d: jne 0xf5f22; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f5f68: jne 0xf5f75; add esp, 0x1c; ret; 
0x000f5fb1: jne 0xf5fe0; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f62c1: jne 0xf62e7; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f63d0: jne 0xf647f; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000f64f4: jne 0xf6514; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f65bc: jne 0xf65cb; add esp, 0x54; pop ebx; pop esi; ret; 
0x000f6859: jne 0xf6880; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68f9: jne 0xf6920; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f69a4: jne 0xf69d0; mov eax, 0x14d; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6a63: jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b14: jne 0xf6b40; mov eax, 0x14e; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6bd3: jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f6ca1: jne 0xf6d30; mov edi, dword ptr [esp + 4]; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6e17: jne 0xf6ec0; mov ebx, edx; mov eax, 0x17a; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f6f81: jne 0xf7010; mov edi, dword ptr [esp + 4]; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f70f7: jne 0xf71a0; mov ebx, edx; mov eax, 0x17b; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f724b: jne 0xf7280; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f726d: jne 0xf72ce; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f730b: jne 0xf7340; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000f732d: jne 0xf738e; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f73cc: jne 0xf7420; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000f73f5: jne 0xf7476; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f74ac: jne 0xf7500; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000f74d5: jne 0xf7556; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x000f75d5: jne 0xf75db; add esp, 0x1c; ret; 
0x000f77c5: jne 0xf77ff; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x000f7863: jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f7951: jne 0xf7988; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f7a41: jne 0xf7a60; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7ae1: jne 0xf7b00; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000f7e04: jne 0xf7e2f; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f814e: jne 0xf815f; add esp, 0x3c; ret; 
0x000f81bf: jne 0xf81c5; add esp, 0x1c; ret; 
0x000f83fe: jne 0xf8410; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f85c7: jne 0xf85a0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000f8628: jne 0xf8600; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000f8719: jne 0xf86d8; add esp, 0xc; ret; 
0x000f8763: jne 0xf873d; mov eax, esi; pop ebx; pop esi; ret; 
0x000f91c5: jne 0xf91df; add esp, 0x24; pop ebx; pop esi; ret; 
0x000f928f: jne 0xf92af; add esp, 0x24; pop ebx; pop esi; ret; 
0x000fa253: jne 0xfa260; sub dword ptr [edx + 0x24f0], 1; ret; 
0x000fad21: jne 0xfad40; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000fae59: jne 0xfae80; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000fbc29: jne 0xfbc2f; add esp, 0x1c; ret; 
0x000fbfce: jne 0xfbff0; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x000fbfbb: jne 0xfc000; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x000fc04e: jne 0xfc070; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x000fc03b: jne 0xfc080; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x000fc0af: jne 0xfc0dc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000fc4c3: jne 0xfc48d; mov dword ptr [ebp - 0x30], edx; call eax; 
0x000fc9de: jne 0xfc9e8; ret; 
0x000fca02: jne 0xfca08; ret; 
0x000fce25: jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x000fcfc4: jne 0xfcfee; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000fd21f: jne 0xfd240; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000fd864: jne 0xfd86e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fd8e4: jne 0xfd8ee; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fdd8c: jne 0xfdd80; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000ff1bf: jne 0xff1c7; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000ff352: jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x000ff503: jne 0xff530; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000ff7ee: jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff89e: jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff94e: jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ffa07: jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ffab9: jne 0xffae0; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0010eb6d: jno 0x10eb73; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00145d08: jno 0x145d09; inc dword ptr [ecx + 0x490f5c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145d64: jno 0x145d65; inc dword ptr [ecx + 0x49099c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00149f11: jno 0x149f6b; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e011: jno 0x14e02f; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fa51: jno 0x14fa59; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00161c3b: jno 0x161c3f; add byte ptr [eax], al; xor eax, eax; ret; 
0x00033b0c: jno 0x33b08; call dword ptr [eax - 0x73]; 
0x00033c35: jno 0x33c31; call dword ptr [eax - 0x73]; 
0x00033d2c: jno 0x33d28; call dword ptr [eax - 0x73]; 
0x0003a6a5: jno 0x3a6a1; call dword ptr [eax - 0x18]; 
0x0003a7aa: jno 0x3a7a6; call dword ptr [eax - 0x18]; 
0x0003d62f: jno 0x3d62b; call dword ptr [eax - 0x18]; 
0x0003d6c9: jno 0x3d6c5; call dword ptr [eax - 0x18]; 
0x000406cd: jno 0x406c9; call dword ptr [eax - 0x18]; 
0x000407c9: jno 0x407c5; call dword ptr [eax - 0x18]; 
0x000498b7: jno 0x498b3; call dword ptr [eax - 0x18]; 
0x00049970: jno 0x4996c; call dword ptr [eax - 0x18]; 
0x0006efa7: jno 0x6efe9; cli; call dword ptr [eax - 0x18]; 
0x00072f56: jno 0x72f52; jmp dword ptr [esi - 0x70]; 
0x0007a25d: jno 0x7a29f; cli; call dword ptr [eax - 0x18]; 
0x000a482e: jno 0xa482a; call dword ptr [eax - 0x18]; 
0x000a49b3: jno 0xa49af; call dword ptr [eax - 0x18]; 
0x000a7653: jno 0xa764f; call dword ptr [eax - 0x18]; 
0x000a7699: jno 0xa7695; call dword ptr [eax - 0x18]; 
0x000a9fd7: jno 0xa9fd3; call dword ptr [eax - 0x18]; 
0x000aa0bf: jno 0xaa0bb; call dword ptr [eax - 0x18]; 
0x000b14b0: jno 0xb14ac; call dword ptr [eax - 0x18]; 
0x000b1690: jno 0xb168c; call dword ptr [eax - 0x18]; 
0x000ffde7: jno 0xffde9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001128bd: jnp 0x112919; cli; call dword ptr [eax - 0x73]; 
0x00117311: jnp 0x117334; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00124ac7: jnp 0x124ac9; add byte ptr [ebx - 0x74e3dbac], cl; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0012f086: jnp 0x12f0d7; or eax, dword ptr [eax]; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x00131ee3: jnp 0x131ed4; call dword ptr [eax - 0x73]; 
0x00137386: jnp 0x137354; or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00144ce1: jnp 0x144c82; cld; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56ab379]; call dword ptr [eax - 0x73]; 
0x00145a86: jnp 0x145a6d; or dword ptr [eax], eax; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000d4ac9: jnp 0x149a5314; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x0014a847: jnp 0x14a89c; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00162004: jnp 0x161f93; inc ecx; push es; ret; 
0x00133f6d: jnp 0x419edfc8; or byte ptr [ecx], bh; ret 0x2875; 
0x000451ac: jnp 0x451b2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c2c0: jnp 0x5b15e70a; pop esi; ret; 
0x0009c344: jnp 0x5b15e78e; pop esi; ret; 
0x0009c484: jnp 0x5b15e8ce; pop esi; ret; 
0x00098e3d: jnp 0x5e11b287; ret; 
0x00098ec1: jnp 0x5e11b30b; ret; 
0x00098fc1: jnp 0x5e11b40b; ret; 
0x000725b6: jnp 0x725b2; jmp dword ptr [esi - 0x70]; 
0x00072c41: jnp 0x72c3d; call dword ptr [eax - 0x73]; 
0x00072da3: jnp 0x72d9f; call dword ptr [eax - 0x73]; 
0x00072db6: jnp 0x72db2; call dword ptr [eax - 0x18]; 
0x00072dc2: jnp 0x72dbe; call dword ptr [eax - 0x73]; 
0x00072de1: jnp 0x72ddd; call dword ptr [eax - 0x73]; 
0x000744cf: jnp 0x744cb; call dword ptr [eax - 0x18]; 
0x000747e4: jnp 0x747e0; call dword ptr [eax - 0x73]; 
0x00076a5c: jnp 0x76ac8; add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000ed235: jnp 0x891ef67f; ret; 
0x000e7ffc: jnp 0x8b1aa476; mov word ptr [esi - 0x5f3e0], ss; add ecx, esi; jmp ecx; 
0x00134e88: jnp 0x8b4f72e2; inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x000ee784: jnp 0xee7d1; cli; call dword ptr [eax - 0x18]; 
0x000ef9d1: jnp 0xef9db; std; jmp dword ptr [ebp - 0x77]; 
0x000f6f8c: jnp 0xf6f8f; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7032: jnp 0xf7035; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7100: jnp 0xf7103; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f71be: jnp 0xf71c1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f8264: jnp 0xf8265; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ffdbe: jnp 0xffdc0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010eb70: jns 0x10eb7a; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00119086: jns 0x11908a; add esi, dword ptr [esi + edi*2 - 0x7d]; ret 0x8303; 
0x001272c7: jns 0x1272c7; jmp dword ptr [esi - 0x70]; 
0x0012c583: jns 0x12c5e7; cli; call dword ptr [edi - 0x17]; 
0x00134580: jns 0x1345e0; cli; call dword ptr [eax - 0x18]; 
0x00134cf5: jns 0x134d55; cli; call dword ptr [eax - 0x18]; 
0x0015ed0d: jns 0x15ed2b; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00024d13: jns 0x24d5c; adc dword ptr [eax], eax; mov dword ptr [esp], esi; call ebx; 
0x00028693: jns 0x286ad; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xeb6b], cl; call dword ptr [ecx + 0x50]; 
0x000379f3: jns 0x379fd; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000966e6: jns 0x47966a43; pop es; pop edi; pop esi; pop ebx; ret; 
0x0004a067: jns 0x4a02f; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x00095016: jns 0x5e685373; pop ebx; ret; 
0x000e2fb8: jns 0x749bf38e; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000754f4: jns 0x75502; add byte ptr [ecx + 0x16eb09c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00078700: jns 0x78703; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x0008f9ba: jns 0x8f9c9; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008fa10: jns 0x8fa1c; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00093e8a: jns 0x93e99; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000954f9: jns 0x95505; add byte ptr [ecx + 0xecc74c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000955de: jns 0x955ea; add byte ptr [ecx + 0xecaffc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000961f3: jns 0x961fe; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b1491: jns 0xb148a; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b14b6: jns 0xb14af; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b14db: jns 0xb14d4; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b152a: jns 0xb1523; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x000bf226: jns 0xbf230; dec ecx; lcall 0x194, 0xb872773b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c1afb: jns 0xc1b04; add byte ptr [ebx - 0x776ef3c], al; call eax; 
0x000ccd5d: jns 0xccd61; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x34]; mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x000ee7a1: jns 0xee7ee; cli; call dword ptr [eax + 0x6a]; 
0x000f22b5: jns 0xf2302; cli; call dword ptr [eax - 0x18]; 
0x000f3b15: jns 0xf3b62; cli; call dword ptr [eax - 0x18]; 
0x000f4dea: jns 0xf4ded; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f4e2a: jns 0xf4e2d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f781b: jns 0xf781d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7ee9: jns 0xf7eee; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000fa186: jns 0xfa10b; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000fd9ad: jns 0xfd9fa; cli; call ptr [ebx + 0x5e]; ret; 
0x00113fa9: jo 0x113fa5; call dword ptr [eax - 0x18]; 
0x0011406f: jo 0x11406b; call dword ptr [eax - 0x18]; 
0x0011409f: jo 0x11409b; call dword ptr [eax - 0x18]; 
0x00114f7f: jo 0x114f7b; call dword ptr [eax - 0x18]; 
0x001151ce: jo 0x1151ca; call dword ptr [eax - 0x18]; 
0x001152e7: jo 0x1152e3; call dword ptr [eax - 0x18]; 
0x00115381: jo 0x11537d; call dword ptr [eax - 0x18]; 
0x0011541a: jo 0x115416; call dword ptr [eax - 0x18]; 
0x00115444: jo 0x115440; call dword ptr [eax + 0x55]; 
0x00115cec: jo 0x115cef; bnd jmp dword ptr [esi - 0x77]; 
0x00116417: jo 0x116413; call dword ptr [eax - 0x18]; 
0x00116651: jo 0x11664d; call dword ptr [eax - 0x18]; 
0x00117c06: jo 0x117c07; jmp dword ptr [esi - 0x70]; 
0x0011cbaa: jo 0x11cba6; call dword ptr [eax - 0x18]; 
0x0011cbd1: jo 0x11cbcd; call dword ptr [eax - 0x18]; 
0x0011cfb4: jo 0x11cf54; cli; call dword ptr [eax - 0x73]; 
0x0011d1a1: jo 0x11d141; cli; call dword ptr [eax - 0x73]; 
0x0011dd0f: jo 0x11dd4a; ret 0x840f; 
0x0011e1a2: jo 0x11e1dd; ret 0x840f; 
0x0011e395: jo 0x11e3d0; ret 0x840f; 
0x0011e676: jo 0x11e6b1; ret 0x840f; 
0x0011e947: jo 0x11e943; call dword ptr [eax - 0x18]; 
0x0011eae7: jo 0x11eae3; call dword ptr [eax - 0x18]; 
0x0011eb5c: jo 0x11eb58; call dword ptr [eax - 0x18]; 
0x0011ed4b: jo 0x11ed47; call dword ptr [eax - 0x18]; 
0x0011f26e: jo 0x11f29f; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011ff60: jo 0x11feeb; clc; pop ebx; pop esi; pop edi; ret; 
0x0011ff0a: jo 0x11ff3d; ror byte ptr [ebp + 0x56102474], 0x8d; sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x00123779: jo 0x12378f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001242af: jo 0x1242ab; call dword ptr [eax - 0x18]; 
0x001247e7: jo 0x1247e3; call dword ptr [eax - 0x18]; 
0x001249b8: jo 0x1249b4; call dword ptr [eax - 0x18]; 
0x00124ab0: jo 0x124aac; call dword ptr [eax - 0x18]; 
0x001262bf: jo 0x1262bb; call dword ptr [eax - 0x18]; 
0x0012638b: jo 0x126387; call dword ptr [eax - 0x18]; 
0x001264af: jo 0x1264ab; call dword ptr [eax - 0x18]; 
0x0012653a: jo 0x126536; call dword ptr [eax - 0x18]; 
0x00126567: jo 0x126563; call dword ptr [eax - 0x18]; 
0x00126dbc: jo 0x126db8; call dword ptr [eax - 0x18]; 
0x0012a672: jo 0x12a6d7; hlt; call dword ptr [eax + 0x55]; 
0x0012a7b2: jo 0x12a7ae; call dword ptr [eax - 0x18]; 
0x0012a96d: jo 0x12a969; call dword ptr [eax - 0x18]; 
0x0012b00f: jo 0x12b00b; call dword ptr [eax - 0x18]; 
0x0012b095: jo 0x12b091; call dword ptr [eax - 0x18]; 
0x0012b0e2: jo 0x12b0de; call dword ptr [eax - 0x18]; 
0x0012bb8b: jo 0x12bb87; call dword ptr [eax - 0x18]; 
0x0012bf7e: jo 0x12bf7a; call dword ptr [eax - 0x18]; 
0x0012c3b2: jo 0x12c3ae; call dword ptr [eax - 0x18]; 
0x0012c46b: jo 0x12c467; call dword ptr [eax - 0x18]; 
0x0012d153: jo 0x12d14f; call dword ptr [eax - 0x18]; 
0x0012de49: jo 0x12de45; call dword ptr [eax - 0x18]; 
0x0013003a: jo 0x12fffe; hlt; call dword ptr [eax - 0x73]; 
0x001300ad: jo 0x1300a9; call dword ptr [eax - 0x18]; 
0x0013050f: jo 0x13050b; call dword ptr [eax - 0x18]; 
0x00130561: jo 0x13055d; call dword ptr [eax - 0x18]; 
0x001305c5: jo 0x1305c1; call dword ptr [eax - 0x18]; 
0x00130929: jo 0x130925; call dword ptr [eax - 0x18]; 
0x00130e61: jo 0x130e5d; call dword ptr [eax - 0x18]; 
0x00130eb1: jo 0x130ead; call dword ptr [eax - 0x18]; 
0x00130eef: jo 0x130eeb; call dword ptr [eax - 0x18]; 
0x00130f92: jo 0x130f8e; call dword ptr [eax - 0x18]; 
0x00131489: jo 0x131485; call dword ptr [eax - 0x18]; 
0x00131aec: jo 0x131abf; std; call dword ptr [ebx - 0x7d]; 
0x00131edd: jo 0x131ed9; call dword ptr [eax - 0x18]; 
0x0013214d: jo 0x132149; call dword ptr [eax - 0x18]; 
0x001324ec: jo 0x1324b5; std; call dword ptr [ebx - 0x7d]; 
0x00132974: jo 0x132965; call dword ptr [eax - 0x73]; 
0x0013296e: jo 0x13296a; call dword ptr [eax - 0x18]; 
0x00132cec: jo 0x132cad; std; call dword ptr [ebx - 0x7d]; 
0x00132dce: jo 0x132ddc; call 0x71e30; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00132e18: jo 0x132e0d; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00132ff9: jo 0x132ff5; call dword ptr [eax - 0x18]; 
0x00133c82: jo 0x133c85; ret; 
0x0013955b: jo 0x13955f; add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001395ad: jo 0x1395b1; add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00139974: jo 0x139978; add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00139dec: jo 0x139e3c; std; call dword ptr [ebx + 0x31]; 
0x00145d53: jo 0x145cd6; ret 0x80; 
0x00145dba: jo 0x145d3d; ret 0x80; 
0x00145e0c: jo 0x145d8f; ret 0x80; 
0x00145e20: jo 0x145e21; inc dword ptr [ecx + 0x48fddc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00146246: jo 0x146208; add bh, dh; ret 0xf; 
0x00146383: jo 0x146306; ret 0x80; 
0x001463ea: jo 0x14636d; ret 0x80; 
0x0014643c: jo 0x1463bf; ret 0x80; 
0x001468c6: jo 0x146888; add bh, dh; ret 0xf; 
0x00148848: jo 0x14884e; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148897: jo 0x14889d; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0015618f: jo 0x1561a0; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00164c78: jo 0x164c71; ret 0; 
0x00165447: jo 0x1653d2; ret 0x44c7; 
0x00166ea5: jo 0x166e32; jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x001695bb: jo 0x1695b4; ret; 
0x00169e38: jo 0x169e31; ret; 
0x00020775: jo 0x207c7; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00025d83: jo 0x25d7f; call dword ptr [eax + 0x56]; 
0x0002664b: jo 0x26647; call dword ptr [eax + 0x56]; 
0x00026e4c: jo 0x26e53; add byte ptr [eax], al; pop ebx; ret; 
0x00027967: jo 0x279d8; cli; call dword ptr [eax - 0x18]; 
0x00027d50: jo 0x27dc1; cli; call dword ptr [eax - 0x18]; 
0x00028e52: jo 0x28e4e; dec dword ptr [ebp - 0x58fd780]; call dword ptr [edx + 0x50]; 
0x00028e58: jo 0x28e54; call dword ptr [edx + 0x50]; 
0x00028ed9: jo 0x28ed5; call dword ptr [eax - 0x18]; 
0x000296cc: jo 0x296c8; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0002ca88: jo 0x2ca84; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x0002ca92: jo 0x2ca8e; jmp dword ptr [esi - 0x77]; 
0x0002d173: jo 0x2d16f; push dword ptr [eax + ebp*2 - 0x7d]; in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x0002d17e: jo 0x2d17a; call dword ptr [edi + 0x56]; 
0x00030bf1: jo 0x30bf7; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00030c71: jo 0x30c77; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00038239: jo 0x382ae; cli; call dword ptr [eax + 0x68]; 
0x0003825c: jo 0x382d1; cli; call dword ptr [eax + 0x68]; 
0x0003a6f8: jo 0x3a76d; cli; call dword ptr [eax - 0x73]; 
0x0003b189: jo 0x3b1fe; cli; call dword ptr [eax + 0x68]; 
0x0003b1ac: jo 0x3b221; cli; call dword ptr [eax + 0x68]; 
0x0003d764: jo 0x3d7d9; cli; call dword ptr [eax - 0x73]; 
0x0003e0c9: jo 0x3e13e; cli; call dword ptr [eax + 0x68]; 
0x0003e0ec: jo 0x3e161; cli; call dword ptr [eax + 0x68]; 
0x0003f636: jo 0x3f639; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000400af: jo 0x400b1; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004081e: jo 0x40893; cli; call dword ptr [eax - 0x73]; 
0x000466e9: jo 0x4675e; cli; call dword ptr [eax + 0x68]; 
0x0004670c: jo 0x46781; cli; call dword ptr [eax + 0x68]; 
0x000499d0: jo 0x49a45; cli; call dword ptr [eax - 0x73]; 
0x0004d849: jo 0x4d7d4; ret 0xc483; 
0x0004e12c: jo 0x4e0b1; les edx, ptr [ecx + ecx*4]; ret; 
0x000504d0: jo 0x504cc; call dword ptr [eax - 0x18]; 
0x000513e1: jo 0x513dd; call dword ptr [eax - 0x18]; 
0x0005143f: jo 0x5143b; call dword ptr [eax - 0x18]; 
0x00051e6c: jo 0x51e88; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00058724: jo 0x58740; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0005e977: jo 0x5e91e; out 0xff, eax; jmp eax; 
0x00066793: jo 0x6677d; push edi; ret 0xffff; 
0x00073156: jo 0x73152; jmp dword ptr [esi - 0x70]; 
0x000748b9: jo 0x748cf; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x000749d9: jo 0x749ef; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00075edc: jo 0x75f16; push 3; call 0xec3d0; add esp, 0x1c; ret; 
0x000819f1: jo 0x81976; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00081dcf: jo 0x81dcb; call dword ptr [eax - 0x18]; 
0x0008325b: jo 0x83257; call dword ptr [eax - 0x18]; 
0x000841cc: jo 0x841c8; call dword ptr [eax - 0x18]; 
0x00084275: jo 0x84271; call dword ptr [eax - 0x18]; 
0x00084343: jo 0x8433f; call dword ptr [eax - 0x18]; 
0x00084678: jo 0x84674; call dword ptr [eax - 0x18]; 
0x000846c6: jo 0x846c2; call dword ptr [eax - 0x18]; 
0x0008517b: jo 0x8519e; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x0008525b: jo 0x85278; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x00085341: jo 0x85316; ljmp 0xd089:0xd0450fff; ret; 
0x0008583b: jo 0x85859; pop ebx; pop esi; ret; 
0x000865a4: jo 0x865a5; sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0008b4d6: jo 0x8b4d2; call dword ptr [eax - 0x18]; 
0x00095eb9: jo 0x95ec5; add byte ptr [ecx + 0xec304c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00095ede: jo 0x95eea; add byte ptr [ecx + 0xec2dfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098c97: jo 0x98c9b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098cb3: jo 0x98cb9; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098d05: jo 0x98d0f; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098df9: jo 0x98e0b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e7f: jo 0x98e95; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f03: jo 0x98f1d; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c0cd: jo 0x9c0d1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c0f9: jo 0x9c0ff; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c17b: jo 0x9c185; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c27f: jo 0x9c291; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c305: jo 0x9c31b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c389: jo 0x9c3a3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000a2579: jo 0xa25ee; cli; call dword ptr [eax + 0x68]; 
0x000a259c: jo 0xa2611; cli; call dword ptr [eax + 0x68]; 
0x000a49c2: jo 0xa4a37; cli; call dword ptr [eax - 0x73]; 
0x000a5249: jo 0xa52be; cli; call dword ptr [eax + 0x68]; 
0x000a526c: jo 0xa52e1; cli; call dword ptr [eax + 0x68]; 
0x000a761c: jo 0xa7691; cli; call dword ptr [eax - 0x73]; 
0x000a7dd9: jo 0xa7e4e; cli; call dword ptr [eax + 0x68]; 
0x000a7dfc: jo 0xa7e71; cli; call dword ptr [eax + 0x68]; 
0x000aa0fd: jo 0xaa172; cli; call dword ptr [eax - 0x73]; 
0x000ae6b9: jo 0xae72e; cli; call dword ptr [eax + 0x68]; 
0x000ae6dc: jo 0xae751; cli; call dword ptr [eax + 0x68]; 
0x000b1535: jo 0xb15aa; cli; call dword ptr [eax - 0x73]; 
0x000b32de: jo 0xb32e4; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b332b: jo 0xb3331; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b337e: jo 0xb3384; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b33cb: jo 0xb33d1; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b3ee0: jo 0xb3ed5; in al, dx; call dword ptr [eax - 1]; 
0x000b3f7b: jo 0xb3f70; in al, dx; call dword ptr [eax - 0x73]; 
0x000b4f4a: jo 0xb4f50; pop ebx; pop esi; pop edi; ret; 
0x000c0177: jo 0xc01d4; pop esi; pop edi; ret; 
0x000c1131: jo 0xc118e; pop esi; pop edi; ret; 
0x000ce9af: jo 0xce942; cli; call dword ptr [eax - 0x73]; 
0x000cea7c: jo 0xcea0f; cli; call dword ptr [eax - 0x73]; 
0x000cea9e: jo 0xcea31; cli; call dword ptr [eax - 0x73]; 
0x000debfa: jo 0xdebf6; call dword ptr [eax - 0x18]; 
0x000ded6e: jo 0xded6a; call dword ptr [eax - 0x18]; 
0x000e113d: jo 0xe1139; call dword ptr [eax - 0x18]; 
0x000e118d: jo 0xe1189; call dword ptr [eax - 0x18]; 
0x000e12cb: jo 0xe12c7; call dword ptr [eax - 0x18]; 
0x000e134d: jo 0xe1349; call dword ptr [eax - 0x18]; 
0x000e1407: jo 0xe1403; call dword ptr [eax - 0x18]; 
0x000e190e: jo 0xe190a; call dword ptr [eax - 0x18]; 
0x000e19f1: jo 0xe19ed; call dword ptr [eax - 0x18]; 
0x000e1a34: jo 0xe1a30; call dword ptr [eax - 0x18]; 
0x000e429b: jo 0xe42a1; push dword ptr [eax]; push dword ptr [ebp - 0x164]; push dword ptr [ebp - 0x17c]; call esi; 
0x000e45dd: jo 0xe45e3; push dword ptr [eax]; push dword ptr [ebp - 0x18c]; push 0xa; push dword ptr [ebp - 0x17c]; call esi; 
0x000e5f23: jo 0xe5f1f; call dword ptr [eax - 0x18]; 
0x000e8f31: jo 0xe8f2d; call dword ptr [eax - 0x18]; 
0x000ec496: jo 0xec499; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000ec7f8: jo 0xec855; pop esi; pop edi; ret; 
0x000eca21: jo 0xeca7e; pop esi; pop edi; ret; 
0x000eca91: jo 0xecaee; pop esi; pop edi; ret; 
0x000f9ddf: jo 0xf9e2d; cli; call dword ptr [eax - 0x73]; 
0x000fabfb: jo 0xfab86; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0011fa6a: jp 0x11fa02; out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x0014c888: jp 0x14c8bf; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00162a7a: jp 0x162a82; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00162add: jp 0x162aea; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00162b15: jp 0x162b26; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0002f5d0: jp 0x2f5e0; jne 0x2f5e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0002f93f: jp 0x2f950; jne 0x2f950; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0002fbbb: jp 0x2fbd0; jne 0x2fbd0; fadd st(0); add esp, 8; pop ebx; ret; 
0x000501c2: jp 0x501db; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000501e2: jp 0x50263; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006ef95: jp 0x6ef91; call dword ptr [eax - 0x73]; 
0x0006fad1: jp 0x6facd; call dword ptr [eax - 0x73]; 
0x00071076: jp 0x71072; call dword ptr [eax - 0x73]; 
0x00071092: jp 0x7108e; call dword ptr [eax - 0x73]; 
0x00072dd5: jp 0x72dd1; call dword ptr [eax - 0x18]; 
0x0007a24b: jp 0x7a247; call dword ptr [eax - 0x73]; 
0x000954ca: jp 0x954d6; add byte ptr [ecx + 0xecca3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000954e6: jp 0x954f2; add byte ptr [ecx + 0xecc87c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000985b1: jp 0x985b4; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000985c1: jp 0x985c5; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000985f1: jp 0x985f7; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x00098661: jp 0x9866b; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0009b7c5: jp 0x9b7cf; mov eax, edi; pop ebx; pop edi; ret; 
0x0009b822: jp 0x9b834; mov eax, edi; pop ebx; pop edi; ret; 
0x000b5739: jp 0xb5781; cli; call dword ptr [eax - 0x18]; 
0x000ba8e6: jp 0xba95f; pop ss; mov ebx, dword ptr [esp + 0x14]; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x000bc90d: jp 0xbc91e; xchg dword ptr [ecx + eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x94]; add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x000bc9ce: jp 0xbc9df; xchg dword ptr [ebx + 1], ecx; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x94]; add ecx, dword ptr [ecx + eax*4 - 0x60bac]; jmp ecx; 
0x000c16c7: jp 0xc16cd; pop ebx; pop esi; pop edi; ret; 
0x000c1995: jp 0xc199e; add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x000c57c7: jp 0xc57c9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f5adf: jp 0xf5b1d; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x000f5f92: jp 0xf5f9c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f6cac: jp 0xf6caf; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6d52: jp 0xf6d55; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6e20: jp 0xf6e23; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f6ede: jp 0xf6ee1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109950: js 0x1098ea; cli; call dword ptr [eax - 0x18]; 
0x0010992d: js 0x109986; cli; call dword ptr [eax - 0x18]; 
0x0010aea6: js 0x10ae41; cli; call dword ptr [eax + 0x6a]; 
0x00117a36: js 0x117a64; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011b3a5: js 0x11b3a9; add byte ptr [ebp + 0xe], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0012a7be: js 0x12a762; cli; call dword ptr [eax - 0x73]; 
0x0012b2fe: js 0x12b283; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012f3fe: js 0x12f3f8; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x00131ee9: js 0x131e90; cli; call dword ptr [eax - 0x73]; 
0x00132153: js 0x132144; call dword ptr [eax - 0x73]; 
0x00137359: js 0x137368; add esp, 4; pop ebx; pop esi; ret; 
0x00137446: js 0x137445; jmp dword ptr [esi - 0x70]; 
0x0013f79d: js 0x13f7b9; add byte ptr [eax], al; mov eax, esi; ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x00145674: js 0x1456cf; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x00149d0a: js 0x149d66; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b28a: js 0x14b2d3; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001520ca: js 0x1520af; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152bca: js 0x152ba4; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001647d7: js 0x164762; je 0x1647ff; je 0x1647d4; ret 0; 
0x0016b852: js 0x16b84c; call dword ptr [eax - 1]; 
0x0001cea9: js 0x1ced7; cli; call dword ptr [eax - 0x18]; 
0x000221d5: js 0x22227; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x0002355b: js 0x235ad; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00030bf4: js 0x30bfe; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00030c74: js 0x30c7e; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000322be: js 0x32672; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x34]; call edi; 
0x00033b0b: js 0x33b7e; cli; call dword ptr [eax - 0x73]; 
0x00042d38: js 0x42d39; das; jne 0x42d30; add esp, 8; pop ebx; ret; 
0x00096678: js 0x479668d5; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000499c4: js 0x499ba; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x00094fd8: js 0x5e685235; pop ebx; ret; 
0x00094ff6: js 0x5e685453; pop ebx; ret; 
0x0007195c: js 0x71960; ret; 
0x00073920: js 0x73923; jae 0x73999; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x0007c024: js 0x7bfaf; cli; call dword ptr [edx - 0x73]; 
0x000867cf: js 0x86754; ret 0x3901; 
0x0009c4f4: js 0x9c536; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c57d: js 0x9c588; or al, byte ptr [eax]; add ecx, 0xe5e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009f4f7: js 0x9f482; fdiv st(7); ret; 
0x000a6cc4: js 0xa6cc7; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000ad128: js 0xad0ad; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000b154f: js 0xb1548; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b1574: js 0xb156d; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b1599: js 0xb1592; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b15be: js 0xb15b7; dec dword ptr [ebp - 0x56fc37e]; call dword ptr [eax - 0x73]; 
0x000b15dd: js 0xb15d6; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b1602: js 0xb15fb; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b1627: js 0xb1620; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000b2507: js 0xb2568; pop esi; ret; 
0x000b3ac3: js 0xb3a48; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x000b3bfe: js 0xb3bf6; push dword ptr [ecx]; rol byte ptr [ebx - 0x1f7cef3c], cl; add eax, dword ptr [ebx - 0x6bf0fe08]; ret 0x2be9; 
0x000dd5eb: js 0xc090dbfd; add dword ptr [ecx], edi; ret 0xda75; 
0x000c5e09: js 0xc5e60; mov eax, 0x166; lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000c7486: js 0xc7490; ret; 
0x000c7ed1: js 0xc7f2e; ret; 
0x000ca411: js 0xca46e; ret; 
0x000dd5bd: js 0xdd5f8; ret 0x8e0f; 
0x000df431: js 0xdf48e; ret; 
0x000dff41: js 0xdff9e; ret; 
0x000eb791: js 0xeb7ee; ret; 
0x000efc02: js 0xefc4f; cli; call dword ptr [eax - 0x18]; 
0x000f0c82: js 0xf0ccf; cli; call dword ptr [eax - 0x18]; 
0x000f2ded: js 0xf2df8; ret 0xaa75; 
0x000f5b0a: js 0xf5b14; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000ff3dc: js 0xff3de; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x000ffb61: js 0xffb64; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015b43d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00118d6b: lahf; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x001321db: lahf; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x000930fd: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00041085: lahf; and byte ptr [edi], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080973: lahf; clc; sbb eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00144ce2: lahf; cld; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56ab379]; call dword ptr [eax - 0x73]; 
0x0012063b: lahf; cli; call dword ptr [eax - 0x18]; 
0x0011f2b0: lahf; cli; call dword ptr [eax - 0x73]; 
0x000fa6d3: lahf; dec esp; cli; call dword ptr [esi + 0x50]; 
0x00057bc1: lahf; fcos; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x001529a3: lahf; fiadd dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000435a1: lahf; in al, dx; sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014b863: lahf; inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00050a7c: lahf; int1; xor edi, edx; call dword ptr [ecx + 0x53]; 
0x0011f26d: lahf; jo 0x11f29f; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000785e6: lahf; lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0011c4bd: lahf; lodsb al, byte ptr [esi]; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ffd4d: lahf; mov dl, 0xf1; jmp dword ptr [esi - 0x70]; 
0x0012e33e: lahf; mov eax, 0xf0; lea ebx, [ebx + 0x3410]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cf05: lahf; nop; sldt word ptr [eax]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000962cd: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000776e3: lahf; pop esp; sbb dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010a86a: lahf; push edi; cli; call dword ptr [edx + 0x50]; 
0x000fd1ad: lahf; push esi; cli; call dword ptr [eax + 0x6a]; 
0x000528e7: lahf; ret 0xd629; 
0x000d1a52: lahf; ret 0xd789; 
0x000ea789: lahf; ret 0xe8c1; 
0x0004cb84: lahf; ret 0xfa80; 
0x000b28b5: lahf; ret; 
0x0006aff2: lahf; sub byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002b713: lahf; test al, 0x11; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e49: lahf; xor al, byte ptr fs:[eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079682: lcall 0x18c4, 0x83fffff8; pop ebx; ret; 
0x000bf22a: lcall 0x194, 0xb872773b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ad5c2: lcall 0x1cc4, 0x83fffaab; ret; 
0x0003a8d2: lcall 0x1cc4, 0x83ffffd9; ret; 
0x000a76e2: lcall 0x1cc4, 0x83ffffdb; ret; 
0x0003b1a2: lcall 0x247c, 0x8bfffedc; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0014ca47: lcall 0x35c3, 0x81ffff04; xor al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000840e5: lcall 0x5b10, 0xc4830001; pop esi; pop edi; ret; 
0x000d7074: lcall 0x5e5b, 0xf889ffff; pop edi; ret; 
0x00137bc5: lcall 0x718d, 0x35a0; jmp dword ptr [esi - 0x7d]; 
0x000c5b4d: lcall 0x8510, 0xc483ffff; sal byte ptr [ebp + 9], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000c6b47: lcall 0xb5c3, 0x81000763; aam 0x11; add byte ptr [ecx + 0x154cec], al; add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x0009da8d: lcall 0xc031, 0x5e000000; pop ebx; ret; 
0x0010cac1: lcall 0xc376, 0xe850fffa; int1; jmp dword ptr [esi - 0x70]; 
0x0011b6da: lcall 0xc86, 0x8d80eb3b; popfd; cli; call dword ptr [eax - 0x73]; 
0x0002a62a: lcall 0xf0b8, 0x1154; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000335e4: lcall 0xf0b8, 0x1284; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b09e: lcall 0xf0b8, 0x1928; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007484e: lcall 0xf0b8, 0x193c; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000795a6: lcall 0xf0b8, 0x195c; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa279: lcall 0xf0b8, 0x24f0; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c197: lcall 0xf0b8, 0x2cac; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120ab8: lcall 0xf0b8, 0x3180; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00057e79: lcall 0xffe3, 0x5ce9ffff; call dword ptr [ecx + 0x51]; 
0x000d6044: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp + 0x508b1904], cl; add al, 0xf7; ret 0xff00; 
0x000b877e: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000baa74: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448d; 
0x000ba9dc: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x548d; 
0x000bea3d: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000bcb95: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x858b; 
0x000b9233: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000b467f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000b9267: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000bddeb: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd329; 
0x000bb318: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd889; 
0x000ec270: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec3d2: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a2f1b: lds eax, ptr [ebx + eax*4]; ret; 
0x0008350f: lds eax, ptr [ebx - 0x127aef3c]; jne 0x83463; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x000327e7: lds eax, ptr [ecx + ecx*4]; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0015ee97: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x00094a30: lds eax, ptr [edx + ecx - 0x533e7f00]; salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6f01: lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x0002ca9d: lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x56]; 
0x000b56da: lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x57]; 
0x000f98dd: lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x00124d63: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0012de3b: lds ecx, ptr [ebp - 0x59e4f7d]; call dword ptr [ecx + 0x6a]; 
0x00068abf: lds ecx, ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x00031d11: lds ecx, ptr [ebx - 0x47c7dbac]; mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00101516: lds ecx, ptr [ebx - 0x47f3dbac]; jne 0x10151e; add byte ptr [eax], al; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0008b4e4: lds ecx, ptr [ecx - 0x1c17dbec]; aad 0xf9; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x0014aa3d: lds ecx, ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00039b09: lds ecx, ptr [edi]; inc esp; jl 0x39b32; adc byte ptr [ecx - 0x7c2ed628], cl; ret 0xd31d; 
0x001074d4: lds ecx, ptr [edi]; xchg dword ptr [0x89000002], eax; ret; 
0x000e8488: lds ecx, ptr [edx - 6]; call dword ptr [eax - 0x18]; 
0x000a0667: lds ecx, ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000c59a0: lds edi, ptr [eax + 0x11c]; call dword ptr gs:[0x10]; 
0x000f6a9e: lds edi, ptr [eax + 0x14d]; call dword ptr gs:[0x10]; 
0x000f6c0e: lds edi, ptr [eax + 0x14e]; call dword ptr gs:[0x10]; 
0x0010113e: lds edi, ptr [eax + 0x151]; call dword ptr gs:[0x10]; 
0x00101433: lds edi, ptr [eax + 0x75]; call dword ptr gs:[0x10]; 
0x000f789e: lds edi, ptr [eax + 0x8e]; call dword ptr gs:[0x10]; 
0x000ea24e: lds edi, ptr [eax + 0xb4]; call dword ptr gs:[0x10]; 
0x000ea2fe: lds edi, ptr [eax + 0xb5]; call dword ptr gs:[0x10]; 
0x000fad27: lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x0006b9f0: lds edi, ptr [eax + 0xf0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c457: lds edi, ptr [ecx]; ret; 
0x000b3ac1: lds esi, ptr [eax + edi*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x000f5d26: lds esi, ptr [ebp + 0x37]; mov edi, dword ptr [edi - 0x108]; mov eax, 0x36; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x0003ddb7: lds esp, ptr [ebx]; add byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x0016284b: lea eax, [eax + 0x10]; test edx, edx; jne 0x162860; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00028108: lea eax, [eax + 0x10e0]; ret; 
0x000fbbcd: lea eax, [eax + 0x25a4]; push eax; call 0xfbd50; add esp, 0x1c; ret; 
0x0012f090: lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x001629a5: lea eax, [eax + 0xa]; pop edi; ret; 
0x001628fb: lea eax, [eax + 0xb]; pop edi; ret; 
0x001629b5: lea eax, [eax + 0xc]; pop edi; ret; 
0x001629c5: lea eax, [eax + 0xd]; pop edi; ret; 
0x001629d5: lea eax, [eax + 0xe]; pop edi; ret; 
0x00162924: lea eax, [eax + 0xf]; pop edi; ret; 
0x00162939: lea eax, [eax + 1]; pop edi; ret; 
0x00162949: lea eax, [eax + 2]; pop edi; ret; 
0x00162891: lea eax, [eax + 3]; pop edi; ret; 
0x00162959: lea eax, [eax + 4]; pop edi; ret; 
0x00162965: lea eax, [eax + 5]; pop edi; ret; 
0x00162975: lea eax, [eax + 6]; pop edi; ret; 
0x001628c4: lea eax, [eax + 7]; pop edi; ret; 
0x00162985: lea eax, [eax + 8]; pop edi; ret; 
0x00162995: lea eax, [eax + 9]; pop edi; ret; 
0x000c71d0: lea eax, [eax + eax - 1]; ret; 
0x00043bcb: lea eax, [eax + eax*8 + 6]; call 0x43b90; jmp eax; 
0x00045090: lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x0014633e: lea eax, [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0009f410: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x0009ce93: lea eax, [eax + ecx + 0x10]; ret; 
0x0009cea3: lea eax, [eax + ecx + 0x20]; ret; 
0x0009ceb3: lea eax, [eax + ecx + 0x30]; ret; 
0x00153356: lea eax, [eax + ecx]; pop edi; call 0x13cee5; add ebx, 0x3d0e1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e006: lea eax, [eax + ecx]; pop edi; call 0x13cee5; add ebx, 0x41c71; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149f06: lea eax, [eax + ecx]; pop edi; call 0x13cee5; add ebx, 0x45871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009cbe3: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0009cbf3: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0009cbc3: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0009d2c3: lea eax, [eax + edx + 0x10]; ret; 
0x0009d2d3: lea eax, [eax + edx + 0x20]; ret; 
0x001259e7: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0009d2a3: lea eax, [eax + edx - 0x10]; ret; 
0x00086c99: lea eax, [eax - 0x146f30]; cmove edx, eax; mov eax, edx; ret; 
0x0008b2d9: lea eax, [eax - 0x1473b0]; cmove edx, eax; mov eax, edx; ret; 
0x000850a9: lea eax, [eax - 0x147710]; cmove edx, eax; mov eax, edx; ret; 
0x00084519: lea eax, [eax - 0x147900]; cmove edx, eax; mov eax, edx; ret; 
0x00083e69: lea eax, [eax - 0x147a10]; cmove edx, eax; mov eax, edx; ret; 
0x0008445f: lea eax, [eax - 0x14b000]; cmovne edx, eax; mov eax, edx; ret; 
0x00083e2f: lea eax, [eax - 0x14d300]; cmovne edx, eax; mov eax, edx; ret; 
0x0008533f: lea eax, [eax - 0x152c90]; cmovne edx, eax; mov eax, edx; ret; 
0x000852ff: lea eax, [eax - 0x154500]; cmovne edx, eax; mov eax, edx; ret; 
0x000844df: lea eax, [eax - 0x157070]; cmovne edx, eax; mov eax, edx; ret; 
0x00083f1f: lea eax, [eax - 0x1588c0]; cmovne edx, eax; mov eax, edx; ret; 
0x000843e9: lea eax, [eax - 0x1589f0]; cmove edx, eax; mov eax, edx; ret; 
0x0007c21e: lea eax, [eax - 0x164940]; mov dword ptr [edx], eax; ret; 
0x0001b04a: lea eax, [eax - 0x59434]; ret; 
0x0001b06a: lea eax, [eax - 0x5943c]; ret; 
0x0009f31a: lea eax, [eax - 0x81480]; cmovne edx, eax; mov eax, edx; ret; 
0x000850ea: lea eax, [eax - 0x84f80]; cmovne edx, eax; mov eax, edx; ret; 
0x0008543a: lea eax, [eax - 0x89e70]; cmovne edx, eax; mov eax, edx; ret; 
0x000853ba: lea eax, [eax - 0x89ea0]; cmovne edx, eax; mov eax, edx; ret; 
0x000853fa: lea eax, [eax - 0x8c380]; cmovne edx, eax; mov eax, edx; ret; 
0x0008537a: lea eax, [eax - 0x8c3b0]; cmovne edx, eax; mov eax, edx; ret; 
0x0008449a: lea eax, [eax - 0x8dda0]; cmovne edx, eax; mov eax, edx; ret; 
0x00083eaa: lea eax, [eax - 0x8f210]; cmovne edx, eax; mov eax, edx; ret; 
0x00085217: lea eax, [eax - 0x924c0]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00085137: lea eax, [eax - 0x97810]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0010ce57: lea eax, [eax - 0x97820]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000851c7: lea eax, [eax - 0x997f0]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0010cea7: lea eax, [eax - 0x99800]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00085507: lea eax, [eax - 0x9b7f0]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0010ce07: lea eax, [eax - 0x9b800]; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00085179: lea eax, [eax - 0x9de90]; cmove edx, eax; mov eax, edx; ret; 
0x0010cee9: lea eax, [eax - 0x9dea0]; cmove edx, eax; mov eax, edx; ret; 
0x00085259: lea eax, [eax - 0x9e490]; cmove edx, eax; mov eax, edx; ret; 
0x0006fae3: lea eax, [eax - 6]; call dword ptr [eax - 0x18]; 
0x000b0e5d: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x35f37b], cl; dec dword ptr [ebx - 0x364763]; call dword ptr [esi - 1]; 
0x000b00dd: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x0005a2e7: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00051411: lea eax, [eax]; ret; 
0x000ef970: lea eax, [ebp + 0x14]; push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efcb1: lea eax, [ebp + 0x14]; push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efc40: lea eax, [ebp + 0x14]; push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000845a3: lea eax, [ebx + 0x1e80]; mov dword ptr [ebx + 0x1e64], eax; add esp, 8; pop ebx; ret; 
0x001238f2: lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x0012f33a: lea eax, [ebx + 0x3280]; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0012f2ea: lea eax, [ebx + 0x3284]; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x0012f29a: lea eax, [ebx + 0x3288]; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x000cca63: lea eax, [ebx + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00034f61: lea eax, [ebx + 6]; pop ebx; ret; 
0x000cc93b: lea eax, [ebx + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b4224: lea eax, [ebx - 0x12fed0]; cmovne eax, edx; add esp, 0x38; pop ebx; ret; 
0x000b4243: lea eax, [ebx - 0x12fed0]; pop ebx; ret; 
0x000b4104: lea eax, [ebx - 0x12ffe0]; cmovne eax, edx; add esp, 0x38; pop ebx; ret; 
0x000b4123: lea eax, [ebx - 0x12ffe0]; pop ebx; ret; 
0x000fd9ab: lea eax, [ebx - 0x5b487]; pop ebx; pop esi; ret; 
0x0006e98d: lea eax, [ebx - 1]; pop ebx; ret; 
0x00161de0: lea eax, [ecx + 0xa]; ret; 
0x00161df0: lea eax, [ecx + 0xb]; ret; 
0x00161d6b: lea eax, [ecx + 0xc]; ret; 
0x00161e00: lea eax, [ecx + 0xd]; ret; 
0x00161e10: lea eax, [ecx + 0xe]; ret; 
0x00161e20: lea eax, [ecx + 0xf]; ret; 
0x000f8760: lea eax, [ecx + 1]; jne 0xf873d; mov eax, esi; pop ebx; pop esi; ret; 
0x000d0280: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00161d70: lea eax, [ecx + 1]; ret; 
0x00161d80: lea eax, [ecx + 2]; ret; 
0x00161d90: lea eax, [ecx + 3]; ret; 
0x00161d18: lea eax, [ecx + 4]; ret; 
0x00161da0: lea eax, [ecx + 5]; ret; 
0x00161db0: lea eax, [ecx + 6]; ret; 
0x00161dc0: lea eax, [ecx + 7]; ret; 
0x00161d42: lea eax, [ecx + 8]; ret; 
0x00161dd0: lea eax, [ecx + 9]; ret; 
0x0009ceda: lea eax, [ecx + eax + 0x10]; ret; 
0x0009ceea: lea eax, [ecx + eax + 0x20]; ret; 
0x0009cefa: lea eax, [ecx + eax + 0x30]; ret; 
0x00063915: lea eax, [ecx + eax - 0x180aae]; jmp eax; 
0x000e5f20: lea eax, [ecx - 0x58fd8]; push eax; call 0x29a20; add esp, 0x18; pop ebx; ret; 
0x00031c90: lea eax, [ecx - 1]; mov dword ptr [edx + 0x48], eax; mov eax, ecx; ret; 
0x000967f8: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0009680e: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x00096830: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x0009684e: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x0009686e: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x00096894: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000968b2: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000968d2: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000968f2: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x00096918: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x0009693a: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x00096968: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x00096988: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000969a2: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000969c2: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000969e2: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x00096a02: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x00096c51: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x00096740: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x00160dd0: lea eax, [edi + 0xa]; pop edi; ret; 
0x0009675e: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x00160c96: lea eax, [edi + 0xb]; pop edi; ret; 
0x0009677e: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x00160df0: lea eax, [edi + 0xc]; pop edi; ret; 
0x000967a2: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x00160e00: lea eax, [edi + 0xd]; pop edi; ret; 
0x000967c2: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x00160e10: lea eax, [edi + 0xe]; pop edi; ret; 
0x000967e2: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00160c50: lea eax, [edi + 0xf]; pop edi; ret; 
0x00096654: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x00160d50: lea eax, [edi + 1]; pop edi; ret; 
0x00096666: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x00160d60: lea eax, [edi + 2]; pop edi; ret; 
0x0009667c: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x00160bf3: lea eax, [edi + 3]; pop edi; ret; 
0x00096694: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00160d80: lea eax, [edi + 4]; pop edi; ret; 
0x000966aa: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x00160d90: lea eax, [edi + 5]; pop edi; ret; 
0x000966cc: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x00160da0: lea eax, [edi + 6]; pop edi; ret; 
0x000966ea: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x00160bad: lea eax, [edi + 7]; pop edi; ret; 
0x00096708: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00160db0: lea eax, [edi + 8]; pop edi; ret; 
0x0009671e: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x00160dc0: lea eax, [edi + 9]; pop edi; ret; 
0x0009cc1a: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0009cc2a: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009cb0f: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0014f32d: lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152c57: lea eax, [edi + eax + 0xa]; pop edi; call 0x13cee5; add ebx, 0x3d7df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d907: lea eax, [edi + eax + 0xa]; pop edi; call 0x13cee5; add ebx, 0x4236f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b857: lea eax, [edi + eax + 0xa]; pop edi; call 0x13cee5; add ebx, 0x4419f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149857: lea eax, [edi + eax + 0xa]; pop edi; call 0x13cee5; add ebx, 0x45f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f3bd: lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152db7: lea eax, [edi + eax + 0xb]; pop edi; call 0x13cee5; add ebx, 0x3d67f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014da67: lea eax, [edi + eax + 0xb]; pop edi; call 0x13cee5; add ebx, 0x4220f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b9a7: lea eax, [edi + eax + 0xb]; pop edi; call 0x13cee5; add ebx, 0x4404f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001499a7: lea eax, [edi + eax + 0xb]; pop edi; call 0x13cee5; add ebx, 0x45dcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f44d: lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f4dd: lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153077: lea eax, [edi + eax + 0xd]; pop edi; call 0x13cee5; add ebx, 0x3d3bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dd27: lea eax, [edi + eax + 0xd]; pop edi; call 0x13cee5; add ebx, 0x41f4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bc47: lea eax, [edi + eax + 0xd]; pop edi; call 0x13cee5; add ebx, 0x43daf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149c47: lea eax, [edi + eax + 0xd]; pop edi; call 0x13cee5; add ebx, 0x45b2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f56d: lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f5fd: lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153337: lea eax, [edi + eax + 0xf]; pop edi; call 0x13cee5; add ebx, 0x3d0ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dfe7: lea eax, [edi + eax + 0xf]; pop edi; call 0x13cee5; add ebx, 0x41c8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149ee7: lea eax, [edi + eax + 0xf]; pop edi; call 0x13cee5; add ebx, 0x4588f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ee1d: lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151ff7: lea eax, [edi + eax + 1]; pop edi; call 0x13cee5; add ebx, 0x3e43f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cca7: lea eax, [edi + eax + 1]; pop edi; call 0x13cee5; add ebx, 0x42fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148c87: lea eax, [edi + eax + 1]; pop edi; call 0x13cee5; add ebx, 0x46aef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eead: lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152157: lea eax, [edi + eax + 2]; pop edi; call 0x13cee5; add ebx, 0x3e2df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ce07: lea eax, [edi + eax + 2]; pop edi; call 0x13cee5; add ebx, 0x42e6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014add7: lea eax, [edi + eax + 2]; pop edi; call 0x13cee5; add ebx, 0x44c1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148dd7: lea eax, [edi + eax + 2]; pop edi; call 0x13cee5; add ebx, 0x4699f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ef3d: lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001522b7: lea eax, [edi + eax + 3]; pop edi; call 0x13cee5; add ebx, 0x3e17f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cf67: lea eax, [edi + eax + 3]; pop edi; call 0x13cee5; add ebx, 0x42d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014af27: lea eax, [edi + eax + 3]; pop edi; call 0x13cee5; add ebx, 0x44acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148f27: lea eax, [edi + eax + 3]; pop edi; call 0x13cee5; add ebx, 0x4684f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014efcd: lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f05d: lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152577: lea eax, [edi + eax + 5]; pop edi; call 0x13cee5; add ebx, 0x3debf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d227: lea eax, [edi + eax + 5]; pop edi; call 0x13cee5; add ebx, 0x42a4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b1c7: lea eax, [edi + eax + 5]; pop edi; call 0x13cee5; add ebx, 0x4482f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001491c7: lea eax, [edi + eax + 5]; pop edi; call 0x13cee5; add ebx, 0x465af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f0ed: lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f17d: lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f20d: lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152997: lea eax, [edi + eax + 8]; pop edi; call 0x13cee5; add ebx, 0x3da9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d647: lea eax, [edi + eax + 8]; pop edi; call 0x13cee5; add ebx, 0x4262f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b5b7: lea eax, [edi + eax + 8]; pop edi; call 0x13cee5; add ebx, 0x4443f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001495b7: lea eax, [edi + eax + 8]; pop edi; call 0x13cee5; add ebx, 0x461bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f29d: lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152af7: lea eax, [edi + eax + 9]; pop edi; call 0x13cee5; add ebx, 0x3d93f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d7a7: lea eax, [edi + eax + 9]; pop edi; call 0x13cee5; add ebx, 0x424cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b707: lea eax, [edi + eax + 9]; pop edi; call 0x13cee5; add ebx, 0x442ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149707: lea eax, [edi + eax + 9]; pop edi; call 0x13cee5; add ebx, 0x4606f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bcfa3: lea eax, [edi + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00161173: lea eax, [edi - 0x10]; pop edi; ret; 
0x00161230: lea eax, [edi - 0xa]; pop edi; ret; 
0x00161220: lea eax, [edi - 0xb]; pop edi; ret; 
0x00161198: lea eax, [edi - 0xc]; pop edi; ret; 
0x00161210: lea eax, [edi - 0xd]; pop edi; ret; 
0x00161200: lea eax, [edi - 0xe]; pop edi; ret; 
0x001611f0: lea eax, [edi - 0xf]; pop edi; ret; 
0x001612a0: lea eax, [edi - 1]; pop edi; ret; 
0x0009d091: lea eax, [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x00161290: lea eax, [edi - 2]; pop edi; ret; 
0x0009d0a1: lea eax, [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x00161280: lea eax, [edi - 3]; pop edi; ret; 
0x0009d0b1: lea eax, [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x001611eb: lea eax, [edi - 4]; pop edi; ret; 
0x00161270: lea eax, [edi - 5]; pop edi; ret; 
0x00161260: lea eax, [edi - 6]; pop edi; ret; 
0x00161250: lea eax, [edi - 7]; pop edi; ret; 
0x001611c2: lea eax, [edi - 8]; pop edi; ret; 
0x00161240: lea eax, [edi - 9]; pop edi; ret; 
0x00160d40: lea eax, [edi]; pop edi; ret; 
0x00092edd: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009118e: lea eax, [edx + 0xa]; pop edi; ret; 
0x000912ce: lea eax, [edx + 0xa]; ret; 
0x00093ef7: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0009107e: lea eax, [edx + 0xb]; pop edi; ret; 
0x000912ee: lea eax, [edx + 0xb]; ret; 
0x00092e9e: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000911b2: lea eax, [edx + 0xc]; pop edi; ret; 
0x00091312: lea eax, [edx + 0xc]; ret; 
0x000911d2: lea eax, [edx + 0xd]; pop edi; ret; 
0x00091332: lea eax, [edx + 0xd]; ret; 
0x00093ea5: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000911f2: lea eax, [edx + 0xe]; pop edi; ret; 
0x00091352: lea eax, [edx + 0xe]; ret; 
0x000910b8: lea eax, [edx + 0xf]; pop edi; ret; 
0x00091368: lea eax, [edx + 0xf]; ret; 
0x0008b0bb: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000910d6: lea eax, [edx + 1]; pop edi; ret; 
0x00091216: lea eax, [edx + 1]; ret; 
0x000910ec: lea eax, [edx + 2]; pop edi; ret; 
0x0009122c: lea eax, [edx + 2]; ret; 
0x00093fd4: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008b0de: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x00091004: lea eax, [edx + 3]; pop edi; ret; 
0x00091234: lea eax, [edx + 3]; ret; 
0x0008b0f2: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x00092e31: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x0009110a: lea eax, [edx + 4]; pop edi; ret; 
0x0009124a: lea eax, [edx + 4]; ret; 
0x0008b10a: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x0009111c: lea eax, [edx + 5]; pop edi; ret; 
0x0009125c: lea eax, [edx + 5]; ret; 
0x0008b11e: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x0009113a: lea eax, [edx + 6]; pop edi; ret; 
0x0009126a: lea eax, [edx + 6]; ret; 
0x00093f7d: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008b0ad: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x00091038: lea eax, [edx + 7]; pop edi; ret; 
0x00091278: lea eax, [edx + 7]; ret; 
0x00092e63: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x0009114e: lea eax, [edx + 8]; pop edi; ret; 
0x0009128e: lea eax, [edx + 8]; ret; 
0x00091170: lea eax, [edx + 9]; pop edi; ret; 
0x000912b0: lea eax, [edx + 9]; ret; 
0x0009d29a: lea eax, [edx + eax + 0x30]; ret; 
0x0011b3e0: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0005e974: lea eax, [edx + eax - 0x185a90]; jmp eax; 
0x0009ede8: lea eax, [edx - 0x1316b0]; test byte ptr [ebx + 0x55], 2; pop ebx; cmovne eax, ecx; ret; 
0x000847f8: lea eax, [edx - 0x145bd0]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x00084548: lea eax, [edx - 0x145c90]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x00083f48: lea eax, [edx - 0x145d40]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x00084418: lea eax, [edx - 0x146d10]; test byte ptr [ebx + 0x5b], 4; pop ebx; cmovne eax, ecx; ret; 
0x0011cba7: lea eax, [edx - 0x58fd8]; push eax; call 0x29a20; add esp, 0x10; add esp, 0xc; ret; 
0x0005184d: lea eax, [edx - 0x5cc0f]; push eax; call 0xecc20; add esp, 0x1c; ret; 
0x000eb4a8: lea eax, [edx - 0xf8bf0]; test byte ptr [ebx + 0x56], 0x80; pop ebx; cmove eax, ecx; ret; 
0x000910c4: lea eax, [edx]; pop edi; ret; 
0x00091204: lea eax, [edx]; ret; 
0x0006874e: lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x0009e1f3: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0006cfd6: lea eax, [esi + ebx]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011affd: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x000822ce: lea eax, [esi - 0x161df0]; mov dword ptr [edi], eax; pop ebx; pop esi; pop edi; ret; 
0x000f4664: lea eax, [esp + 0x14]; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x00068de8: lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075537: lea eax, [esp + 0x24]; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x0009facf: lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0009f745: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x000751ce: lea eax, [esp + 0x34]; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x0006fcca: lea eax, [esp + 0x3c]; push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0009f5fe: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0013e796: lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x000c1d01: lea eax, [esp + 0x4c]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x00139c86: lea eax, [esp + 0x60]; push eax; call ecx; 
0x0009fd09: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000a0361: lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0001f78a: lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000221d2: lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x000229aa: lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x000b3d8d: lea eax, [esp + 0xa4]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000b3b15: lea eax, [esp + 0xdc]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0009ced9: lea eax, es:[ecx + eax + 0x10]; ret; 
0x0009cc19: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x00117fb5: lea ebp, [eax - 0x76000005]; ret 0xb58d; 
0x0005ac51: lea ebp, [eax - 0x76000005]; ret 0xc889; 
0x000414ba: lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x73]; 
0x0004148a: lea ebp, [edi + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x000bc9d6: lea ebp, [edi + edi*8 - 1]; inc dword ptr [ebx]; mov word ptr [ecx - 0x60bac], es; jmp ecx; 
0x000c7f27: lea ebp, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x000b3452: lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x000bef33: lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x0009f2e0: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x0009f2d0: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x0012368d: lea ebx, [eax + 7]; and eax, 7; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x0009f2c2: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000192e3: lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00040e9c: lea ebx, [ebp + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4ce: lea ebx, [ebp + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d801: lea ebx, [ebp + 0x193c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791b0: lea ebx, [ebp + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e20c: lea ebx, [ebp + 0x1df0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df88: lea ebx, [ebp + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b5588: lea ebx, [ebp + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001370a4: lea ebx, [ebp + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000336b4: lea ebx, [ebx + 0x1284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345e4: lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043045: lea ebx, [ebx + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3c4: lea ebx, [ebx + 0x1900]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f138: lea ebx, [ebx + 0x190c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f404: lea ebx, [ebx + 0x1910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007afe8: lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c168: lea ebx, [ebx + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b53cc: lea ebx, [ebx + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c18a9: lea ebx, [ebx + 0x2180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22d4: lea ebx, [ebx + 0x219c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2478: lea ebx, [ebx + 0x21b4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2638: lea ebx, [ebx + 0x21cc]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29ec: lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4109: lea ebx, [ebx + 0x2218]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c44a4: lea ebx, [ebx + 0x223c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4658: lea ebx, [ebx + 0x2260]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4808: lea ebx, [ebx + 0x2284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48ec: lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f844b: lea ebx, [ebx + 0x2380]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001040f4: lea ebx, [ebx + 0x27c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a8: lea ebx, [ebx + 0x2808]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104488: lea ebx, [ebx + 0x284c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104689: lea ebx, [ebx + 0x2888]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c7c: lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a8e: lea ebx, [ebx + 0x28a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cf4: lea ebx, [ebx + 0x28c0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea8: lea ebx, [ebx + 0x28d8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106068: lea ebx, [ebx + 0x28f4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106299: lea ebx, [ebx + 0x290c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010669c: lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011083c: lea ebx, [ebx + 0x29e4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110924: lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011149c: lea ebx, [ebx + 0x2a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111584: lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d88: lea ebx, [ebx + 0x2a80]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001121a4: lea ebx, [ebx + 0x2aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112284: lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112638: lea ebx, [ebx + 0x2ac8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b38: lea ebx, [ebx + 0x2aec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e8: lea ebx, [ebx + 0x2b10]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135c4: lea ebx, [ebx + 0x2b34]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001136a4: lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116b58: lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011773c: lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a34: lea ebx, [ebx + 0x2c78]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117be8: lea ebx, [ebx + 0x2c90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200d0: lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121748: lea ebx, [ebx + 0x31e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f54: lea ebx, [ebx + 0x3358]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129108: lea ebx, [ebx + 0x336c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b8: lea ebx, [ebx + 0x3380]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001293a4: lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b250: lea ebx, [ebx + 0x3400]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e344: lea ebx, [ebx + 0x3410]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374d4: lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cc68: lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdad: lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b28ba: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000bee5e: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0002d0fd: lea ebx, [ecx + 0x11c8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000333fb: lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b85: lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0002b712: lea ebx, [edi + 0x11a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00041084: lea ebx, [edi + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000435a0: lea ebx, [edi + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006aff1: lea ebx, [edi + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776e2: lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2f2: lea ebx, [edi + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080972: lea ebx, [edi + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa818: lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118188: lea ebx, [edi + 0x2ca0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4bc: lea ebx, [edi + 0x2cac]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011f26c: lea ebx, [edi + 0x2f70]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e48: lea ebx, [edi + 0x3264]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cf04: lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000632e2: lea ebx, [edi + esi*8 - 1]; call dword ptr [edx + 0x50]; 
0x0002a629: lea ebx, [edx + 0x1154]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002a791: lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x000335e3: lea ebx, [edx + 0x1284]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b09d: lea ebx, [edx + 0x1928]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007484d: lea ebx, [edx + 0x193c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000795a5: lea ebx, [edx + 0x195c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa278: lea ebx, [edx + 0x24f0]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c196: lea ebx, [edx + 0x2cac]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120ab7: lea ebx, [edx + 0x3180]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d3f8: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0013d67e: lea ebx, [esp + 0x28]; push ebx; call eax; 
0x0012db8b: lea ebx, [esp + 0xd0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x000eb524: lea ebx, [esp + 8]; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000f5d0c: lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00043857: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000b2853: lea ecx, [eax + 1]; jne 0xb2830; mov eax, ecx; ret; 
0x00031c77: lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x0007c210: lea ecx, [eax - 0x164540]; mov dword ptr [edx], ecx; mov edx, dword ptr [eax - 0xc0]; lea eax, [eax - 0x164940]; mov dword ptr [edx], eax; ret; 
0x000c5e10: lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00101d82: lea ecx, [ebp - 0x6fffd98c]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0002b1a3: lea ecx, [ebx + 0x1180]; mov eax, dword ptr [ebx + 0x1a5c]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ffca9: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00043965: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001328d4: lea ecx, [ecx - 0x520]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008e8bd: lea ecx, [edx + 0x10]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0fd: lea ecx, [edx + 0x10]; jne 0x8ee51; pop ebx; ret; 
0x000935ce: lea ecx, [edx + 0x10]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008f015: lea ecx, [edx + 0xa]; jne 0x8ee51; pop ebx; ret; 
0x000934b6: lea ecx, [edx + 0xa]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008f033: lea ecx, [edx + 0xb]; jne 0x8ee51; pop ebx; ret; 
0x000934e4: lea ecx, [edx + 0xb]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008e883: lea ecx, [edx + 0xc]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f053: lea ecx, [edx + 0xc]; jne 0x8ee51; pop ebx; ret; 
0x00093514: lea ecx, [edx + 0xc]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008ec47: lea ecx, [edx + 0xd]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f077: lea ecx, [edx + 0xd]; jne 0x8ee51; pop ebx; ret; 
0x00093548: lea ecx, [edx + 0xd]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008ec77: lea ecx, [edx + 0xe]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0a7: lea ecx, [edx + 0xe]; jne 0x8ee51; pop ebx; ret; 
0x0008eca7: lea ecx, [edx + 0xf]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0d7: lea ecx, [edx + 0xf]; jne 0x8ee51; pop ebx; ret; 
0x000935a8: lea ecx, [edx + 0xf]; jne 0x932a1; pop ebx; ret; 
0x0008eb09: lea ecx, [edx + 1]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008eee9: lea ecx, [edx + 1]; jne 0x8ee51; pop ebx; ret; 
0x00093339: lea ecx, [edx + 1]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000748ec: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008ef0b: lea ecx, [edx + 2]; jne 0x8ee51; pop ebx; ret; 
0x0009335c: lea ecx, [edx + 2]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008eb51: lea ecx, [edx + 3]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef31: lea ecx, [edx + 3]; jne 0x8ee51; pop ebx; ret; 
0x00093382: lea ecx, [edx + 3]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008ef49: lea ecx, [edx + 4]; jne 0x8ee51; pop ebx; ret; 
0x000933aa: lea ecx, [edx + 4]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0006c8f2: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0008eb6f: lea ecx, [edx + 5]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef6f: lea ecx, [edx + 5]; jne 0x8ee51; pop ebx; ret; 
0x000933d0: lea ecx, [edx + 5]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008eb91: lea ecx, [edx + 6]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef91: lea ecx, [edx + 6]; jne 0x8ee51; pop ebx; ret; 
0x0008ebaf: lea ecx, [edx + 7]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008efaf: lea ecx, [edx + 7]; jne 0x8ee51; pop ebx; ret; 
0x0008efcd: lea ecx, [edx + 8]; jne 0x8ee51; pop ebx; ret; 
0x0009345e: lea ecx, [edx + 8]; jne 0x932a1; pop ebx; ret; 
0x0008ebd3: lea ecx, [edx + 9]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008eff3: lea ecx, [edx + 9]; jne 0x8ee51; pop ebx; ret; 
0x00093484: lea ecx, [edx + 9]; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00055733: lea ecx, [edx + edi*8 - 1]; inc dword ptr [ebp + 0x2d840fc9]; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7af00005], al; ret 0xfffe; 
0x00083f42: lea ecx, [edx - 0x85710]; lea eax, [edx - 0x145d40]; test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x000eb4a2: lea ecx, [edx - 0xf8bc0]; lea eax, [edx - 0xf8bf0]; test byte ptr [ebx + 0x56], 0x80; pop ebx; cmove eax, ecx; ret; 
0x000275f9: lea ecx, [esi + edi*8 - 1]; call dword ptr [eax - 1]; 
0x0012e1a4: lea ecx, [esp + 0x10]; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00069b32: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00131736: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x000bf27b: lea ecx, [esp + 0x14]; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x0012e0e7: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00131e7a: lea ecx, [esp + 0x20]; push ecx; push esi; call dword ptr [eax]; 
0x0007777e: lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0012e0d4: lea ecx, [esp + 0x28]; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x000ad84f: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x00030df2: lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x000bf32a: lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000ec1bb: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec31b: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec26b: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000bf37f: lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000ad03e: lea edi, [eax + 0xf0]; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003394f: lea edi, [eax - 0x1d60]; cmp esi, edi; jae 0x33969; lea esi, [esi]; call dword ptr [esi]; 
0x0016bf35: lea edi, [ebx - 0x1d64]; call 0x79260; cmp esi, edi; jae 0x16bf51; lea esi, [esi]; call dword ptr [esi]; 
0x000f8263: lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000786ff: lea edi, [ecx + 1]; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00094cdb: lea edi, [edi + 0x10]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x0009634e: lea edi, [edi + 0x10]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000963c4: lea edi, [edi + 0x13]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094db5: lea edi, [edi + 0x16]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094de5: lea edi, [edi + 0x17]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000964eb: lea edi, [edi + 0x19]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094e7d: lea edi, [edi + 0x1a]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094eab: lea edi, [edi + 0x1b]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094edb: lea edi, [edi + 0x1c]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x0009657e: lea edi, [edi + 0x1c]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094f05: lea edi, [edi + 0x1d]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000965a8: lea edi, [edi + 0x1d]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094f35: lea edi, [edi + 0x1e]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000965d8: lea edi, [edi + 0x1e]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094f65: lea edi, [edi + 0x1f]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00096608: lea edi, [edi + 0x1f]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094f95: lea edi, [edi + 0x20]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00096638: lea edi, [edi + 0x20]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094bf3: lea edi, [edi + 0xa]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00096236: lea edi, [edi + 0xa]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00096264: lea edi, [edi + 0xb]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094c31: lea edi, [edi + 0xc]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00096294: lea edi, [edi + 0xc]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094c55: lea edi, [edi + 0xd]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000962c8: lea edi, [edi + 0xd]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000962f8: lea edi, [edi + 0xe]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094cb5: lea edi, [edi + 0xf]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00096328: lea edi, [edi + 0xf]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094ac5: lea edi, [edi + 1]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x0009612c: lea edi, [edi + 2]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009614f: lea edi, [edi + 3]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009616a: lea edi, [edi + 4]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094b4a: lea edi, [edi + 5]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x0009618d: lea edi, [edi + 5]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094b6f: lea edi, [edi + 6]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000961b2: lea edi, [edi + 6]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094b8d: lea edi, [edi + 7]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000961d0: lea edi, [edi + 7]; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x00094bab: lea edi, [edi + 8]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00094bce: lea edi, [edi + 9]; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x0004b573: lea edi, [edi + edi*8 - 1]; call dword ptr [ebx - 0x75]; 
0x0005e32e: lea edi, [edi + esi*8 - 1]; call dword ptr [edx + 0x50]; 
0x001014ba: lea edi, [esp + 0x14]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00124139: lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x001455eb: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00124987: lea edx, [eax + 0x6afff4d6]; add byte ptr [ecx + 0x6a], dl; add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00043962: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00043820: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00124980: lea edx, [eax + 0xb]; hlt; call dword ptr [ecx - 0x73]; 
0x00087bf2: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0009f311: lea edx, [eax - 0x131790]; and ch, 2; lea eax, [eax - 0x81480]; cmovne edx, eax; mov eax, edx; ret; 
0x00085335: lea edx, [eax - 0x1459d0]; test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x152c90]; cmovne edx, eax; mov eax, edx; ret; 
0x000852f5: lea edx, [eax - 0x145a60]; test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x154500]; cmovne edx, eax; mov eax, edx; ret; 
0x00083ea1: lea edx, [eax - 0x145d70]; and ch, 2; lea eax, [eax - 0x8f210]; cmovne edx, eax; mov eax, edx; ret; 
0x00083f15: lea edx, [eax - 0x145e00]; test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x1588c0]; cmovne edx, eax; mov eax, edx; ret; 
0x00083e25: lea edx, [eax - 0x146330]; test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x14d300]; cmovne edx, eax; mov eax, edx; ret; 
0x000850e1: lea edx, [eax - 0x1467a0]; and ch, 2; lea eax, [eax - 0x84f80]; cmovne edx, eax; mov eax, edx; ret; 
0x00085371: lea edx, [eax - 0x146c00]; and ch, 2; lea eax, [eax - 0x8c3b0]; cmovne edx, eax; mov eax, edx; ret; 
0x00084455: lea edx, [eax - 0x147a60]; test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x14b000]; cmovne edx, eax; mov eax, edx; ret; 
0x000844d5: lea edx, [eax - 0x158920]; test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x157070]; cmovne edx, eax; mov eax, edx; ret; 
0x00084491: lea edx, [eax - 0x158aa0]; and ch, 2; lea eax, [eax - 0x8dda0]; cmovne edx, eax; mov eax, edx; ret; 
0x0001a6be: lea edx, [eax - 0x16fbb0]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x000e4ce8: lea edx, [ebp - 0x11c]; push 0x100; push edx; push eax; call ebx; 
0x0010c735: lea edx, [ebp - 0x30]; push edx; lea edx, [ebx - 0xd7ab0]; push edx; call eax; 
0x0002a8dc: lea edx, [ebx + 0x1160]; mov eax, dword ptr [ebx + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a931: lea edx, [ebx + 0x1160]; mov eax, dword ptr [ebx + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002b143: lea edx, [ebx + 0x1180]; mov eax, dword ptr [ebx + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002b2d5: lea edx, [ebx + 0x1180]; mov eax, dword ptr [ebx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e5287: lea edx, [ebx + 0x2348]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00116cf2: lea edx, [ebx + 0x2c20]; push edx; call eax; 
0x001175e9: lea edx, [ebx + 0x2c50]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012f254: lea edx, [ebx + 0x32a0]; cmove eax, edx; add esp, 8; pop ebx; ret; 
0x0012f17a: lea edx, [ebx + 0x3420]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012d399: lea edx, [ebx + 0x38]; push edx; call eax; 
0x0012c829: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x00129cac: lea edx, [ebx + 0xac]; push edx; call eax; 
0x0002a854: lea edx, [ebx + 0xfe0]; mov eax, dword ptr [ebx + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002856d: lea edx, [ebx + 0xfe0]; mov eax, dword ptr [ebx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00026210: lea edx, [ebx + 0xfe0]; mov eax, dword ptr [ebx + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013d123: lea edx, [ebx - 0x1ca0]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0010c739: lea edx, [ebx - 0xd7ab0]; push edx; call eax; 
0x000bfe73: lea edx, [ecx + 0xfe0]; mov eax, dword ptr [ecx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012667a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0012663a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00028188: lea edx, [ecx - 0x5ceff]; mov eax, edx; pop ebx; ret; 
0x00028aab: lea edx, [edi + 0xfe0]; mov eax, dword ptr [edi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028a83: lea edx, [edi + 0xfe0]; mov eax, dword ptr [edi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012a88d: lea edx, [edi + 8]; push edx; call eax; 
0x00136134: lea edx, [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x00101c04: lea edx, [edi + edi]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x001315da: lea edx, [edi - 0x5d52c]; mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x000bfe3b: lea edx, [edx + 0xfe0]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00054c7e: lea edx, [edx + edi*8 - 1]; call dword ptr [eax - 0x77]; 
0x00053824: lea edx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x00054701: lea edx, [edx + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x000537e9: lea edx, [edx + edi*8 - 1]; dec dword ptr [ecx + 0x75c085f2]; jne 0x53780; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00056762: lea edx, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0005523c: lea edx, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xf801; 
0x00132e93: lea edx, [edx - 0x4e0]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0007112a: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00068235: lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x000bfc6b: lea edx, [esi + 0xfe0]; mov eax, dword ptr [esi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bfc3d: lea edx, [esi + 0xfe0]; mov eax, dword ptr [esi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00071209: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0012e815: lea edx, [esi - 0xb2970]; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x001247a8: lea edx, [esi - 0xbf520]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001248d1: lea edx, [esi - 0xbf520]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x001324da: lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00131ada: lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0013220c: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0012b508: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131926: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318c3: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x001324ae: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00131bbe: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00131aae: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0011b8ae: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b976: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000c21b9: lea edx, [esp + 0x10]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012d558: lea edx, [esp + 0x13c]; push edx; push esi; call dword ptr [eax + 4]; 
0x000c7edb: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000ed713: lea edx, [esp + 0x14]; test eax, eax; jne 0xed860; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f4f0e: lea edx, [esp + 0x1c]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0006275a: lea edx, [esp + 0x20]; push edx; call eax; 
0x0012e658: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00067c6e: lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adfe: lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9c4: lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b36e: lea edx, [esp + 0x34]; push edx; call eax; 
0x0007587a: lea edx, [esp + 0x34]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000f5c81: lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012fce4: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x00040d3f: lea edx, [esp + 0x3c]; push edx; call eax; 
0x00129f4f: lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x000607f9: lea edx, [esp + 0xc4]; push edx; call eax; 
0x000f62a4: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f9199: lea edx, [esp + 0xc]; mov eax, 0x140; mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x001321f6: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00132243: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131903: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318ae: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x00131c5e: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x000f9269: lea edx, [esp + 0xc]; xor ecx, ecx; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00065a85: lea edx, [esp + 0xcc]; push edx; call eax; 
0x000f56f4: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000f5e6e: lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000b02c0: lea esi, [eax + 0xfffffc9]; dec edi; ret 0xc801; 
0x00033949: lea esi, [eax - 0x1d64]; lea edi, [eax - 0x1d60]; cmp esi, edi; jae 0x33969; lea esi, [esi]; call dword ptr [esi]; 
0x00025f00: lea esi, [edi + 0x10]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 0x18], ecx; call eax; 
0x00064dfc: lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x00064680: lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x0003a70b: lea esi, [edx]; cli; call dword ptr [eax - 0x18]; 
0x00160a0a: lea esi, [esi]; add eax, 1; ret; 
0x00161fcd: lea esi, [esi]; add edx, 2; jl 0x162080; lea eax, [ecx + 2]; ret; 
0x00161fdd: lea esi, [esi]; add edx, 3; jl 0x162080; lea eax, [ecx + 3]; ret; 
0x00161fed: lea esi, [esi]; add edx, 5; jl 0x162080; lea eax, [ecx + 5]; ret; 
0x00161ffd: lea esi, [esi]; add edx, 6; jl 0x162080; lea eax, [ecx + 6]; ret; 
0x000b423c: lea esi, [esi]; add esp, 0x38; lea eax, [ebx - 0x12fed0]; pop ebx; ret; 
0x000b411c: lea esi, [esi]; add esp, 0x38; lea eax, [ebx - 0x12ffe0]; pop ebx; ret; 
0x0006e13d: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0001be85: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0012600c: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0010dfd9: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x000ea795: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001613cd: lea esi, [esi]; and eax, 0x1f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613fd: lea esi, [esi]; and eax, 0x1ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613dd: lea esi, [esi]; and eax, 0x3f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613ed: lea esi, [esi]; and eax, 0x7f; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0010ed02: lea esi, [esi]; and eax, 0xffffff; ret; 
0x0007b4d2: lea esi, [esi]; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x001613ad: lea esi, [esi]; and eax, 3; jne 0x161150; xor eax, eax; pop edi; ret; 
0x001613bd: lea esi, [esi]; and eax, 7; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0009cbba: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x0009d2bd: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x0009ce8d: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0009cfcc: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0014a83a: lea esi, [esi]; call 0x13cee5; add ebx, 0x4537b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014883a: lea esi, [esi]; call 0x13cee5; add ebx, 0x470fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f582d: lea esi, [esi]; call 0x1aff0; add esp, 4; pop ebx; pop esi; ret; 
0x000311d5: lea esi, [esi]; call 0x7acf0; mov ecx, 8; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000c5adc: lea esi, [esi]; call 0x7acf0; mov esi, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00033959: lea esi, [esi]; call dword ptr [esi]; 
0x0007db45: lea esi, [esi]; call eax; 
0x000617fd: lea esi, [esi]; jmp eax; 
0x000d027d: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001632f9: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00160dcc: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00160ddc: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00160dec: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00160dfc: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00160e0c: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00160d5c: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x00160d6c: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x00160d7c: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x00160d8c: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x00160d9c: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x00160dac: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x00160dbc: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0016122c: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0016121c: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0016120c: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001611fc: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x0016129c: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x0016128c: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x0016127c: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x0016358c: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x0016126c: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0016125c: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0016124c: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0016357a: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x0016123c: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001623ca: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000fa274: lea esi, [esi]; lea ebx, [edx + 0x24f0]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00160a03: lea esi, [esi]; lea esi, [esi]; add eax, 1; ret; 
0x000617f6: lea esi, [esi]; lea esi, [esi]; jmp eax; 
0x001632f2: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001623c3: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x00139b56: lea esi, [esi]; lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x00079cb6: lea esi, [esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000b27a3: lea esi, [esi]; lea esi, [esi]; mov eax, 1; ret; 
0x000b27b6: lea esi, [esi]; lea esi, [esi]; mov eax, 2; ret; 
0x000b27c6: lea esi, [esi]; lea esi, [esi]; mov eax, 3; ret; 
0x000b27d6: lea esi, [esi]; lea esi, [esi]; mov eax, 4; ret; 
0x000b27e6: lea esi, [esi]; lea esi, [esi]; mov eax, 5; ret; 
0x000b27f6: lea esi, [esi]; lea esi, [esi]; mov eax, 6; ret; 
0x000b2806: lea esi, [esi]; lea esi, [esi]; mov eax, 7; ret; 
0x001632c5: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x00123eb1: lea esi, [esi]; lea esi, [esi]; nop; ret; 
0x0008ecb3: lea esi, [esi]; lea esi, [esi]; pop ebx; ret; 
0x00079ce6: lea esi, [esi]; lea esi, [esi]; ret; 
0x00079cc6: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000910bd: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x0008ccfc: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0008ce1d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0008ecc9: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000f944d: lea esi, [esi]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; ret; 
0x00125954: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x00081d8d: lea esi, [esi]; mov dword ptr [ebx + 0x1e14], eax; pop ebx; ret; 
0x0007b579: lea esi, [esi]; mov dword ptr [edx + 0x128], eax; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b6e9: lea esi, [esi]; mov dword ptr [edx + 0x158], eax; ret; 
0x000671cd: lea esi, [esi]; mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x00139b5d: lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x000ed589: lea esi, [esi]; mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x00081cb2: lea esi, [esi]; mov eax, 0x16; add esp, 0xc; ret; 
0x000bf115: lea esi, [esi]; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c7054: lea esi, [esi]; mov eax, 0x40; ret; 
0x000ffb89: lea esi, [esi]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000c6fb1: lea esi, [esi]; mov eax, 0xfc17; pop ebx; ret; 
0x00078ddc: lea esi, [esi]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00031c81: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x00157a8d: lea esi, [esi]; mov eax, 1; ja 0x157a99; neg eax; pop ebp; ret; 
0x0015ce8a: lea esi, [esi]; mov eax, 1; ja 0x15ce99; neg eax; ret; 
0x0015d17d: lea esi, [esi]; mov eax, 1; ja 0x15d189; neg eax; pop ebp; ret; 
0x000b25ac: lea esi, [esi]; mov eax, 1; jg 0xb25b9; neg eax; ret; 
0x00031b22: lea esi, [esi]; mov eax, 1; ret; 
0x000b27bd: lea esi, [esi]; mov eax, 2; ret; 
0x000b27cd: lea esi, [esi]; mov eax, 3; ret; 
0x000b27dd: lea esi, [esi]; mov eax, 4; ret; 
0x000b27ed: lea esi, [esi]; mov eax, 5; ret; 
0x000b27fd: lea esi, [esi]; mov eax, 6; ret; 
0x000b280d: lea esi, [esi]; mov eax, 7; ret; 
0x000fddb5: lea esi, [esi]; mov eax, dword ptr [eax + 0x260]; pop ebx; ret; 
0x000fdda9: lea esi, [esi]; mov eax, dword ptr [eax + 0x40]; pop ebx; ret; 
0x000319d2: lea esi, [esi]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x00125dca: lea esi, [esi]; mov eax, dword ptr [ebx + ecx*4 - 0x2a4]; pop ebx; pop esi; jmp eax; 
0x0003197d: lea esi, [esi]; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003385d: lea esi, [esi]; mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001316bd: lea esi, [esi]; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x001316cd: lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000c022d: lea esi, [esi]; mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0010e094: lea esi, [esi]; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x00145aad: lea esi, [esi]; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000bee84: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], ebx; xor eax, eax; pop ebx; ret; 
0x0008332c: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x001629da: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0011a55c: lea esi, [esi]; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00079d2a: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca59: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0013ca7c: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00079a0d: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x001632cc: lea esi, [esi]; mov eax, ecx; ret; 
0x00073a02: lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000955ec: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x0016176c: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x0001af3d: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0007adc4: lea esi, [esi]; mov ebp, 0xf0; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x001196d4: lea esi, [esi]; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000f56ed: lea esi, [esi]; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00073771: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x000833dc: lea esi, [esi]; mov edx, dword ptr [edi - 0x70]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0008ecec: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0009535d: lea esi, [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0009135d: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0008cf7c: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0009542d: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0008ed4d: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0008ce8d: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b277b: lea esi, [esi]; nop; add eax, 1; ret; 
0x000b278b: lea esi, [esi]; nop; add eax, 3; ret; 
0x000f9903: lea esi, [esi]; nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0001b03b: lea esi, [esi]; nop; call 0x13cee9; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x00161ddb: lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00161deb: lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00161dfb: lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00161e0b: lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00161e1b: lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x00161d7b: lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x00161d8b: lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x00161d9b: lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x00161dab: lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00161dbb: lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00161dcb: lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00160d4b: lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x00160d3b: lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x0016243b: lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x0016244b: lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x0016245b: lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x0016246b: lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x001623db: lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x001623eb: lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x001623fb: lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x0016240b: lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x0016241b: lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x0016242b: lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x00028183: lea esi, [esi]; nop; lea edx, [ecx - 0x5ceff]; mov eax, edx; pop ebx; ret; 
0x0008ed0b: lea esi, [esi]; nop; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x00067258: lea esi, [esi]; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000c70f8: lea esi, [esi]; nop; mov eax, 0x100; ret; 
0x000510cb: lea esi, [esi]; nop; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0007b477: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x000ec1f3: lea esi, [esi]; nop; mov eax, 0x6a; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ec353: lea esi, [esi]; nop; mov eax, 0x6b; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ec2a3: lea esi, [esi]; nop; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00101d83: lea esi, [esi]; nop; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00071287: lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0015624b: lea esi, [esi]; nop; mov eax, 1; ja 0x156259; neg eax; ret; 
0x000c7e6b: lea esi, [esi]; nop; mov eax, 1; ret; 
0x00125f98: lea esi, [esi]; nop; mov eax, 2; ret; 
0x0013992b: lea esi, [esi]; nop; mov eax, dword ptr [eax + 0x3750]; jmp dword ptr [eax + 8]; 
0x000291db: lea esi, [esi]; nop; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00079d38: lea esi, [esi]; nop; mov eax, dword ptr [esp + 4]; ret; 
0x000b285b: lea esi, [esi]; nop; mov ecx, eax; mov eax, ecx; ret; 
0x0008ecdb: lea esi, [esi]; nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x0008ed9b: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edab: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edbb: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x001561bb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001561cb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001561db: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001561eb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001561fb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0015619b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00098fe8: lea esi, [esi]; nop; pop esi; ret; 
0x00123eb8: lea esi, [esi]; nop; ret; 
0x0010134b: lea esi, [esi]; nop; xor eax, eax; pop ebx; ret; 
0x0009c6eb: lea esi, [esi]; nop; xor eax, eax; pop edi; ret; 
0x0003371b: lea esi, [esi]; nop; xor eax, eax; ret; 
0x00030c3d: lea esi, [esi]; pop ebp; ret; 
0x0016071d: lea esi, [esi]; pop ebx; mov eax, 1; ja 0x16072a; neg eax; ret; 
0x0007ace2: lea esi, [esi]; pop ebx; pop esi; ret; 
0x0008ecba: lea esi, [esi]; pop ebx; ret; 
0x0015d34a: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x0009533c: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000b258c: lea esi, [esi]; pop edi; pop esi; ret; 
0x00051922: lea esi, [esi]; ret; 
0x0010eda4: lea esi, [esi]; shr eax, 0x18; ret; 
0x00074934: lea esi, [esi]; sub esp, 0x18; push eax; call 0x78300; add esp, 0x1c; ret; 
0x000c8545: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x194]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x0012fcf4: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00124a85: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0007db2d: lea esi, [esi]; sub esp, 0xc; push 0; mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x00083502: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x0006acf4: lea esi, [esi]; sub esp, 4; push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0006d115: lea esi, [esi]; sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x000c7ed4: lea esi, [esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000807e5: lea esi, [esi]; sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x000835a4: lea esi, [esi]; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0012fcdd: lea esi, [esi]; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0016356c: lea esi, [esi]; test ah, 0xf0; jne 0x163590; lea eax, [edi - 8]; pop edi; ret; 
0x0016331c: lea esi, [esi]; test ah, 1; jne 0x163340; lea eax, [ecx + 0xc]; ret; 
0x00043cb4: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x00108669: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000b259a: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x0009c8cd: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x0002e669: lea esi, [esi]; xor eax, eax; ret; 
0x0011fc35: lea esi, [esi]; xor ecx, ecx; mov eax, ecx; ret; 
0x00124eba: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001017df: lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0008288b: lea esp, [di - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00117faf: lea esp, [eax - 0x72000005]; lea ebp, [eax - 0x76000005]; ret 0xb58d; 
0x0013374c: lea esp, [eax - 6]; call dword ptr [eax + 0x6a]; 
0x00123514: lea esp, [eax - 6]; call dword ptr [eax - 0x73]; 
0x000468dd: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001b972: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00045008: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0010ac60: lea esp, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x000c5fea: lea esp, es:[ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b6c40: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x000f5baa: leave; add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; ret; 
0x000c6651: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00088f5f: leave; add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x00021d4f: leave; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebp*2 - 6], cl; call dword ptr [eax - 0x18]; 
0x000204d6: leave; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ebp*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x00153c0f: leave; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009d103: leave; add eax, ecx; ret; 
0x000299d7: leave; call 0x29480; mov edx, dword ptr [esp + 0x14]; mov eax, edx; add esp, 0xc; ret; 
0x0006d2b6: leave; cli; jmp dword ptr [esi - 0x70]; 
0x00037b17: leave; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x000c07c6: leave; cmp edx, 0x10d; cmovae esi, eax; mov eax, 0xdc; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00071085: leave; inc eax; cli; call dword ptr [eax - 0x18]; 
0x001085f9: leave; je 0x108600; xor eax, eax; pop ebx; ret; 
0x0010c51e: leave; je 0x10c530; ret; 
0x00083055: leave; je 0x83060; pop ebx; pop esi; pop edi; ret; 
0x0009d0fe: leave; je 0x9d110; bsf ecx, ecx; add eax, ecx; ret; 
0x000f92ce: leave; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000f9441: leave; je 0xf9447; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [eax + 4], edx; ret; 
0x0013120b: leave; jle 0x1311fc; dec dword ptr [ecx - 0x763e7606]; ret; 
0x0010351e: leave; jne 0x103530; mov eax, edx; pop ebx; pop esi; ret; 
0x00103589: leave; jne 0x103598; mov eax, edx; pop ebx; pop esi; ret; 
0x00103774: leave; jne 0x103780; mov eax, edx; pop ebx; pop esi; ret; 
0x00103dc9: leave; jne 0x103dd8; mov eax, edx; pop ebx; pop esi; ret; 
0x00103e29: leave; jne 0x103e38; mov eax, edx; pop ebx; pop esi; ret; 
0x00104004: leave; jne 0x104010; mov eax, edx; pop ebx; pop esi; ret; 
0x001258d4: leave; jne 0x125928; mov dword ptr [eax], 0; pop ebx; ret; 
0x0007127a: leave; jne 0x71290; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0007bdc2: leave; jne 0x7bdd0; ret; 
0x0008aac3: leave; jne 0x8aab8; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0009e41c: leave; jne 0x9e421; xor eax, eax; ret; 
0x000b413a: leave; jne 0xb4158; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000b1573: leave; js 0xb156d; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000c7485: leave; js 0xc7490; ret; 
0x000f5b09: leave; js 0xf5b14; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000bf229: leave; lcall 0x194, 0xb872773b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009b6c4: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000f926e: leave; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00072598: leave; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033ada: leave; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0011b6b4: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0011fc39: leave; mov eax, ecx; ret; 
0x00043824: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0002df83: leave; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x000bee5b: leave; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009602c: leave; outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001050fd: leave; push esi; cli; call dword ptr [eax - 0x73]; 
0x00030b18: leave; ret; 
0x0002741b: leave; sbb al, 0xff; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00052429: leave; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x0009c92b: leave; sub edx, ecx; jbe 0x9c960; add eax, ecx; ret; 
0x001265c6: leave; test eax, eax; je 0x1265f0; mov eax, ecx; pop ebx; ret; 
0x001323b6: leave; test eax, eax; je 0x1323e8; mov eax, ecx; pop ebx; ret; 
0x00132416: leave; test eax, eax; je 0x132448; mov eax, ecx; pop ebx; ret; 
0x0003a85a: leave; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0008e888: les eax, ptr [0x5b5f0000]; ret; 
0x0002f492: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x0002f428: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00123f31: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000f14e9: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00081d13: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000ec320: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00160cd8: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x000eab36: les eax, ptr [eax]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000ec402: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000607fc: les eax, ptr [eax]; add byte ptr [eax], al; push edx; call eax; 
0x0009d1bd: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00161b36: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009cdb2: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000f6a28: les eax, ptr [ebp - 0xe]; dec dword ptr [ebp - 0x17ffd98c]; mov ebx, 0x89fff245; ret; 
0x00078ed1: les eax, ptr [ebx + 0x5e5b04c4]; ret; 
0x00070613: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0002e8e6: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0001be89: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015a14a: les eax, ptr [ebx + ebx*2]; ret; 
0x0013c670: les eax, ptr [ebx - 0x7f72f314]; jle 0x13c6dc; cli; call dword ptr [eax - 0x18]; 
0x0013c2d6: les eax, ptr [ebx]; test byte ptr [eax - 0x5d528], dl; jmp eax; 
0x001268cf: les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x00080ee8: les eax, ptr [ecx + ebp]; ret 0xda21; 
0x00049f64: les eax, ptr [ecx + ecx*4]; call 0x5d63fdc7; ret; 
0x00126004: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0007b7eb: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000311ce: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0007ad2e: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0011b6b1: les eax, ptr [ecx + esi]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x000fd9a9: les eax, ptr [ecx*4 - 0x5b4867d]; call ptr [ebx + 0x5e]; ret; 
0x00163321: les eax, ptr [ecx]; jne 0x163340; lea eax, [ecx + 0xc]; ret; 
0x000ecb79: les eax, ptr [ecx]; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00127318: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x001611ba: les eax, ptr [edx]; jne 0x161250; lea eax, [edi - 8]; pop edi; ret; 
0x00161d3a: les eax, ptr [edx]; jne 0x161dd0; lea eax, [ecx + 8]; ret; 
0x00161f79: les eax, ptr [edx]; jne 0x162020; add edx, 8; jl 0x162080; lea eax, [ecx + 8]; ret; 
0x00162381: les eax, ptr [edx]; jne 0x162430; test ah, 4; jne 0x162440; lea eax, [edx + 0xb]; ret; 
0x0015c9e1: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00166389: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x000317fb: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00045a49: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x000fb121: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000c2190: les ebp, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0013fcb9: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x000316d5: les ebp, ptr [eax]; pop ebx; ret; 
0x0012fc0e: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e635d: les ebp, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0001f3fc: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0001b0d7: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000a0e74: les ebp, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0001b73e: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00067c91: les ebp, ptr [ecx + eax*4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002d5a9: les ebp, ptr [ecx + ecx*4]; call 0x5d62340c; ret; 
0x000a0d19: les ebp, ptr [ecx + ecx*4]; call 0x5d696b7c; ret; 
0x000a24d5: les ebp, ptr [ecx + ecx*4]; call 0x5d698338; ret; 
0x000a2550: les ebp, ptr [ecx + ecx*4]; call 0x5d6983b3; ret; 
0x000a51a5: les ebp, ptr [ecx + ecx*4]; call 0x5d69b008; ret; 
0x000a5222: les ebp, ptr [ecx + ecx*4]; call 0x5d69b085; ret; 
0x000a7d35: les ebp, ptr [ecx + ecx*4]; call 0x5d69db98; ret; 
0x000a7db0: les ebp, ptr [ecx + ecx*4]; call 0x5d69dc13; ret; 
0x000ae615: les ebp, ptr [ecx + ecx*4]; call 0x5d6a4478; ret; 
0x000ae692: les ebp, ptr [ecx + ecx*4]; call 0x5d6a44f5; ret; 
0x0013c055: les ebp, ptr [ecx + ecx*4]; call 0x5d731eb8; ret; 
0x00038185: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00073d06: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000abea8: les ebp, ptr [ecx]; ret; 
0x000ff66a: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x000df209: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0012e80f: les ebp, ptr [edx]; cli; call dword ptr [edi + 0x52]; 
0x000f7ccf: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0003152f: les ebx, ptr [eax + 0x5b000000]; ret; 
0x0012fdec: les ebx, ptr [eax + 0x5f000000]; ret; 
0x001646fe: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x000312a5: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000cd289: les ebx, ptr [eax + ebp + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000cec59: les ebx, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00034f5f: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x000f63d7: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00049c85: les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x000f5774: les ebx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00131774: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00085c28: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f5d7: les ebx, ptr [eax]; pop ebx; ret; 
0x000b6e27: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000c691d: les ebx, ptr [ebx + eax*8]; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0001e177: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0001f82d: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000e6115: les ebx, ptr [ebx + ebx*2]; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x00062acb: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0006b854: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0001bcf0: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0014335f: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x000324bb: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00029ac5: les ebx, ptr [ecx + ecx*4]; call 0x5d61f928; ret; 
0x00042c4e: les ebx, ptr [ecx + ecx*4]; call 0x5d638ab1; ret; 
0x00042ca4: les ebx, ptr [ecx + ecx*4]; call 0x5d638b07; ret; 
0x00076572: les ebx, ptr [ecx + ecx*4]; call 0x5d66c3d5; ret; 
0x000e609c: les ebx, ptr [ecx + ecx*4]; call 0x5d6dbeff; ret; 
0x000f832e: les ebx, ptr [ecx + ecx*4]; call 0x5d6ee191; ret; 
0x000fca96: les ebx, ptr [ecx + ecx*4]; call 0x5d6f28f9; ret; 
0x00032e3b: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0001b275: les ebx, ptr [ecx + ecx*4]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00062a0b: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000340eb: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000cca61: les ebx, ptr [ecx*4 + 0x5e5b0243]; pop edi; pop ebp; ret; 
0x000cc939: les ebx, ptr [ecx*4 + 0x5e5b0843]; pop edi; pop ebp; ret; 
0x00050ebb: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x00127ee6: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x000f4d1c: les ebx, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00152f1d: les ebx, ptr [edi - 0x3c7e0002]; pop ds; aad 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00120106: les ebx, ptr [edi - 6]; call dword ptr [eax - 0x18]; 
0x00123858: les ebx, ptr [esi]; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000b327c: les ecx, ptr [eax + 0x5b]; ret; 
0x000e6d9e: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0010a0ce: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00108403: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x001089d6: les ecx, ptr [eax + edx*2]; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x00108c24: les ecx, ptr [eax + edx*2]; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8fb: les ecx, ptr [eax + edx*2]; push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x001238f0: les ecx, ptr [eax]; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x0010e66e: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x000f851c: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x000f7eef: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000bfa26: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000770cd: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x00126117: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x000ea78f: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x0008aee7: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001dc70: les ecx, ptr [eax]; pop ebx; ret; 
0x0002f876: les ecx, ptr [eax]; ret; 
0x00030a54: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00029ed1: les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x001088e7: les ecx, ptr [ebp - 0x5a8ce80]; call dword ptr [eax - 1]; 
0x0001d0e0: les ecx, ptr [ebp - 0x5b8ba7d]; call dword ptr [eax - 1]; 
0x000ac705: les ecx, ptr [ebx + 0xc8dbc45]; mov cs, word ptr [ebx - 0x3f7cfb90]; add al, 0x83; ret; 
0x0007b368: les ecx, ptr [ebx + eax*8]; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00087183: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000817ae: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00032a51: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0002d23f: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00107003: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0003466b: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0006e1ae: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00083d1a: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00033beb: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00126252: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x126267; push edi; call dword ptr [eax + 8]; 
0x0006f6d5: les ecx, ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0006daa3: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ac9c1: les ecx, ptr [ecx + ebp]; ret; 
0x00072b86: les ecx, ptr [ecx + ecx*4]; call 0x5d6689e9; ret; 
0x00072bbd: les ecx, ptr [ecx + ecx*4]; call 0x5d668a20; ret; 
0x000e61c9: les ecx, ptr [ecx + ecx*4]; call 0x5d6dc02c; ret; 
0x000eb484: les ecx, ptr [ecx + ecx*4]; call 0x5d6e12e7; ret; 
0x000fc434: les ecx, ptr [ecx + ecx*4]; call 0x5d6f2297; ret; 
0x000fcb10: les ecx, ptr [ecx + ecx*4]; call 0x5d6f2973; ret; 
0x0010d0cc: les ecx, ptr [ecx + ecx*4]; call 0x5d702f2f; ret; 
0x0011a50e: les ecx, ptr [ecx + ecx*4]; call 0x5d710371; ret; 
0x001315ad: les ecx, ptr [ecx + ecx*4]; call 0x5d727410; ret; 
0x00077072: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0001d67b: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x0002af76: les ecx, ptr [ecx + ecx*4]; inc ebp; mov ah, 0x83; ret 0x5201; 
0x0006cc5b: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000f27ad: les ecx, ptr [ecx + ecx*4]; ret 0x408d; 
0x000574d9: les ecx, ptr [ecx + ecx*4]; ret 0x8489; 
0x000573bb: les ecx, ptr [ecx + ecx*4]; ret 0x8589; 
0x00028ec9: les ecx, ptr [ecx + ecx*4]; ret; 
0x0001cedd: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0011f4b9: les ecx, ptr [edi + ecx]; mov bh, 0xc0; ret; 
0x0001b8a9: les ecx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x000410e1: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x001632e5: les ecx, ptr [edi]; jne 0x163300; test dh, 0xf; jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x0008a6aa: les ecx, ptr [edi]; mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0006d9c6: les ecx, ptr [edx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00085eea: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c7ed0: les edi, ptr [eax + 0x5b]; ret; 
0x001680eb: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x000502cf: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000b4241: les edi, ptr [eax]; lea eax, [ebx - 0x12fed0]; pop ebx; ret; 
0x000b4121: les edi, ptr [eax]; lea eax, [ebx - 0x12ffe0]; pop ebx; ret; 
0x000b321c: les edi, ptr [eax]; pop ebx; ret; 
0x0002015f: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0001fd0a: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0016b4d5: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0001a88c: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d0574: les edi, ptr [ebx + ebx*2]; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000ed5bd: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e089a: les edi, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024eb5: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a0879: les edi, ptr [ecx + ecx*4]; call 0x5d6966dc; ret; 
0x00036714: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008431d: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0002f34c: les edi, ptr [ecx + ecx*4]; ret 0xd8f7; 
0x000d0485: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000fd515: les edi, ptr [ecx]; ret 0x2676; 
0x000310fa: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000f77c8: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x000ec969: les edx, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0003141d: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x00136ec1: les edx, ptr [eax - 0x27770000]; pop ebx; pop esi; ret; 
0x00137b5a: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x000b43f1: les edx, ptr [eax - 0x77000000]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0012ea41: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010cf3a: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000807f3: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003505a: les edx, ptr [eax]; add esp, 0xc; ret; 
0x00126195: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00081e7f: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0001bf23: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x001238ed: les edx, ptr [eax]; add esp, 8; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x000f8ae1: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0001dc6d: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0007b3b5: les edx, ptr [eax]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012ab0d: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00132e1c: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00058973: les edx, ptr [eax]; cmp ebx, 0x53; ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000e88bc: les edx, ptr [eax]; cmp ecx, 0x2f; ja 0xe800c; mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x0011affb: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0011f5c3: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f8663: les edx, ptr [eax]; mov dword ptr [ebx + 0x2380], 0; add esp, 8; pop ebx; ret; 
0x0010c6a1: les edx, ptr [eax]; mov dword ptr [ebx + 0x2940], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000bee3f: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x000f84bd: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0006a3a0: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0007e414: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x7e41e; call eax; 
0x000fcf6d: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0b1: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0xfd1a0; call eax; 
0x00107be6: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00131675: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x0012f76e: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7de: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f84e: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b1: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f911: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f97e: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012f9fe: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x000c1999: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00034d61: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db4: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x000352e6: les edx, ptr [eax]; mov eax, ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00031203: les edx, ptr [eax]; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0011b517: les edx, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x000821aa: les edx, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c1aff: les edx, ptr [eax]; mov eax, edi; call eax; 
0x00083c98: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret 4; 
0x00069a34: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0010180c: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0006b574: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x000bfb77: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010e8d8: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e948: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x00115789: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x0012f6fe: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0x3c]; sub ecx, dword ptr gs:[0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x00034e01: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e54: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea1: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef4: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000b31c1: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000f81b2: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000f9933: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003436f: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x0003448f: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x0013f8ec: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x000bc705: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee05: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000ec115: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x0001b454: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x0004f231: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024fe1: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0011725a: les edx, ptr [eax]; push dword ptr [esp + 0xc]; push 0x400; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x0012fbd9: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0012efb7: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0012e998: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00125ae6: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0010dbcd: les edx, ptr [eax]; test eax, eax; je 0x10dbe0; add esp, 8; pop ebx; ret; 
0x00116919: les edx, ptr [eax]; test eax, eax; je 0x116928; sub esp, 0xc; push esi; call eax; 
0x00116c01: les edx, ptr [eax]; test eax, eax; je 0x116c10; sub esp, 0xc; push esi; call eax; 
0x00126260: les edx, ptr [eax]; test eax, eax; je 0x12636b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000c5b51: les edx, ptr [eax]; test eax, eax; jne 0xc5b60; add esp, 8; pop ebx; ret; 
0x000f8715: les edx, ptr [eax]; test eax, eax; jne 0xf86d8; add esp, 0xc; ret; 
0x00122ddc: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x00083511: les edx, ptr [eax]; test ebp, ebp; jne 0x83463; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0013d03c: les edx, ptr [eax]; test ebx, ebx; jne 0x13d050; add esp, 8; pop ebx; ret; 
0x0013d07c: les edx, ptr [eax]; test ebx, ebx; jne 0x13d090; add esp, 8; pop ebx; ret; 
0x0002e94c: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000e1dcf: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000f65bf: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0001b4ff: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00025c85: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x001248e1: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00031325: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x000fd867: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x000352a1: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0013189c: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0004e12e: les edx, ptr [ecx + ecx*4]; ret; 
0x0010c8d7: les edx, ptr [ecx - 0x18]; add bl, byte ptr [ecx + edi*8]; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0009f40e: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x00074995: les edx, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0001b53b: les edx, ptr [edi + esi*8]; ficomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000c0176: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x000ec495: les esi, ptr [eax + 1]; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0011ff5f: les esi, ptr [eax - 0x77]; clc; pop ebx; pop esi; pop edi; ret; 
0x000fabfa: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0002d17d: les esi, ptr [eax - 6]; call dword ptr [edi + 0x56]; 
0x0002d172: les esi, ptr [eax - 6]; push dword ptr [eax + ebp*2 - 0x7d]; in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x000b3fef: les esi, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00070f83: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000ec1ee: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0012e433: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x001398df: les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00034257: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x000bf60d: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x00041723: les esi, ptr [ebx - 6]; call dword ptr [eax - 0x18]; 
0x001398aa: les esi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000d1731: les esi, ptr [edi - 0x3e7efffa]; retf; sub byte ptr [ecx], dl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0004a0fa: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0012e1c9: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00030d27: les esp, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00117624: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x001611e3: les esp, ptr [eax]; jne 0x161280; lea eax, [edi - 4]; pop edi; ret; 
0x00161d63: les esp, ptr [eax]; jne 0x161e00; lea eax, [ecx + 0xc]; ret; 
0x00161fa3: les esp, ptr [eax]; jne 0x162050; add edx, 0xc; jl 0x162080; lea eax, [ecx + 0xc]; ret; 
0x001623aa: les esp, ptr [eax]; jne 0x162460; test ah, 0x40; jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x00100971: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000bf1cc: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000507b7: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000fbc1c: les esp, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x000ec16c: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x0001b640: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0016b5d3: les esp, ptr [eax]; ret; 
0x00119b6c: les esp, ptr [ebp - 0x77]; push es; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x000b451e: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0007e436: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001008d0: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c6a15: les esp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001040f6: les esp, ptr [edi]; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c6c9b: ljmp 0:0x5b9ffff; add byte ptr [ecx + 0xfa6f3c6], cl; xchg edi, eax; ret 0xda80; 
0x0010ed98: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00085836: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x00038252: ljmp 0x247c:0x8bffff0b; adc al, 0x8d; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x00127668: ljmp 0x3108:0xeac1d831; ret 0xe281; 
0x001465a2: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0005b560: ljmp 0x440f:0x93048d01; ret; 
0x0006a372: ljmp 0x450f:0x107f602; ret 0xec83; 
0x00081635: ljmp 0x450f:0x1e08304; ret 0xc483; 
0x0011393c: ljmp 0x470f:0x9f88357; ret 0xf983; 
0x000f5bb9: ljmp 0x542e:0xe9ffffff; bnd jmp dword ptr [esi - 0x70]; 
0x00161941: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x00094e82: ljmp 0x5b5e:0x5f000005; ret; 
0x0010369f: ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x001086c4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x0016bdac: ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0016b830: ljmp 0x5e5b:0x14c483ff; ret; 
0x0016bca6: ljmp 0x5e5b:0x1cc483ff; pop edi; pop ebp; ret; 
0x0016b685: ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x001469da: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146f2a: ljmp 0x5f07:0x88027402; pop ebx; ret; 
0x00161951: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x0013cfa0: ljmp 0x74ff:0x6affff; and al, 0x1c; call 0x33d70; add esp, 0x1c; ret; 
0x0001e236: ljmp 0x838d:0x50000002; cmp ch, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x00161961: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x0001f4d3: ljmp 0x868d:0x50000002; cmp ch, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x0001e8bc: ljmp 0x878d:0x50000002; cmp ch, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x000654d0: ljmp 0x8b04:0xec83ffff; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x001683a6: ljmp 0x8c89:0xd309f109; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x0009cef4: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000c6c05: ljmp 0x8d08:0xec83ffff; mov al, 0x76; dec edx; cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x0009cee4: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x0009ced4: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x000ac863: ljmp 0x8fac:0x838dffff; cli; call dword ptr [eax - 0x73]; 
0x0009beac: ljmp 0x910c:0x3000e64; jmp ecx; 
0x000d017a: ljmp 0x9188:0x838d0003; cli; call dword ptr [eax + 0x68]; 
0x00161971: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x000394f9: ljmp 0x970f:0x9fa8330; ret 0xd284; 
0x00037d9a: ljmp 0x9d2:0xf781f083; ret 0x840f; 
0x00161981: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x00151bd8: ljmp 0xbb1c:0x30003e9; jmp ebx; 
0x000ce214: ljmp 0xc118:0xfac1f089; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x0009cc11: ljmp 0xc229:0xc0bc0f10; jbe 0x9cc40; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0009cc21: ljmp 0xc229:0xc0bc0f20; jbe 0x9cc40; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009cc31: ljmp 0xc229:0xc0bc0f30; jbe 0x9cc40; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00161991: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x000f52da: ljmp 0xce9:0x5effffff; pop ebp; bnd jmp dword ptr [esi - 0x70]; 
0x001033f8: ljmp 0xd089:0x5b01e283; pop esi; pop edi; ret; 
0x0002fcbd: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x000843ed: ljmp 0xd089:0xd0440fff; ret; 
0x00083f23: ljmp 0xd089:0xd0450fff; ret; 
0x001619a1: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x001619b1: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x000bee7a: ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x0015d76a: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x00151abf: ljmp 0xf702:0x89068b04; ret 0xf; 
0x0014e9bf: ljmp 0xf702:0x89078b04; ret 0xf; 
0x000e7ff6: ljmp 0xf77:0x12fa832d; mov esi, dword ptr [esp + 0xc]; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x0002e658: ljmp 0xfff:0xffff2518; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x2e645; ret; 
0x0009be05: lock adc byte ptr [edx], cl; add byte ptr [ecx + 0xe658bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0002b70e: lock add byte ptr [eax], al; add byte ptr [ebp + 0x11a89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000192df: lock add byte ptr [eax], al; add byte ptr [ebp + 0x12649d], cl; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000336b0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x12849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345e0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x17009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00040e98: lock add byte ptr [eax], al; add byte ptr [ebp + 0x17209d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00041080: lock add byte ptr [eax], al; add byte ptr [ebp + 0x17209f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043041: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18ec9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004359c: lock add byte ptr [eax], al; add byte ptr [ebp + 0x18ec9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3c0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x19009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f134: lock add byte ptr [eax], al; add byte ptr [ebp + 0x190c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f400: lock add byte ptr [eax], al; add byte ptr [ebp + 0x19109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4ca: lock add byte ptr [eax], al; add byte ptr [ebp + 0x19289d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006afed: lock add byte ptr [eax], al; add byte ptr [ebp + 0x19289f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d7fd: lock add byte ptr [eax], al; add byte ptr [ebp + 0x193c9d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791ac: lock add byte ptr [eax], al; add byte ptr [ebp + 0x195c9d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776de: lock add byte ptr [eax], al; add byte ptr [ebp + 0x195c9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007afe4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2ee: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1aa09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e208: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1df09d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c164: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1df89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df84: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1df89d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008096e: lock add byte ptr [eax], al; add byte ptr [ebp + 0x1df89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b53c8: lock add byte ptr [eax], al; add byte ptr [ebp + 0x20c89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b5584: lock add byte ptr [eax], al; add byte ptr [ebp + 0x20c89d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c18a5: lock add byte ptr [eax], al; add byte ptr [ebp + 0x21809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22d0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x219c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2474: lock add byte ptr [eax], al; add byte ptr [ebp + 0x21b49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2634: lock add byte ptr [eax], al; add byte ptr [ebp + 0x21cc9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29e8: lock add byte ptr [eax], al; add byte ptr [ebp + 0x21d09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4105: lock add byte ptr [eax], al; add byte ptr [ebp + 0x22189b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c44a0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x223c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4654: lock add byte ptr [eax], al; add byte ptr [ebp + 0x22609b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4804: lock add byte ptr [eax], al; add byte ptr [ebp + 0x22849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48e8: lock add byte ptr [eax], al; add byte ptr [ebp + 0x22889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa814: lock add byte ptr [eax], al; add byte ptr [ebp + 0x24f09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001040f0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x27c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x28089b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104484: lock add byte ptr [eax], al; add byte ptr [ebp + 0x284c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104685: lock add byte ptr [eax], al; add byte ptr [ebp + 0x28889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c78: lock add byte ptr [eax], al; add byte ptr [ebp + 0x288c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a8a: lock add byte ptr [eax], al; add byte ptr [ebp + 0x28a89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cf0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x28c09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x28d89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106064: lock add byte ptr [eax], al; add byte ptr [ebp + 0x28f49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106295: lock add byte ptr [eax], al; add byte ptr [ebp + 0x290c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106698: lock add byte ptr [eax], al; add byte ptr [ebp + 0x29109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110838: lock add byte ptr [eax], al; add byte ptr [ebp + 0x29e49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110920: lock add byte ptr [eax], al; add byte ptr [ebp + 0x29e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111498: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2a4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111580: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2a509b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d84: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2a809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001121a0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112280: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2aa49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112634: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2ac89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b34: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2aec9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2b109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135c0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2b349b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001136a0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2b389b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116b54: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2c4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117738: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2c549b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a30: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2c789b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117be4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2c909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118184: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2ca09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4b8: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2cac9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011f268: lock add byte ptr [eax], al; add byte ptr [ebp + 0x2f709f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200cc: lock add byte ptr [eax], al; add byte ptr [ebp + 0x31809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121744: lock add byte ptr [eax], al; add byte ptr [ebp + 0x31e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e44: lock add byte ptr [eax], al; add byte ptr [ebp + 0x32649f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f50: lock add byte ptr [eax], al; add byte ptr [ebp + 0x33589b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129104: lock add byte ptr [eax], al; add byte ptr [ebp + 0x336c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b4: lock add byte ptr [eax], al; add byte ptr [ebp + 0x33809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001293a0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x33849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b24c: lock add byte ptr [eax], al; add byte ptr [ebp + 0x34009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e340: lock add byte ptr [eax], al; add byte ptr [ebp + 0x34109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374d0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x35849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001370a0: lock add byte ptr [eax], al; add byte ptr [ebp + 0x35849d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cc64: lock add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cda9: lock add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0001cf00: lock add byte ptr [eax], al; add byte ptr [ebp + 0xf909f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009eb97: lock add byte ptr [eax], al; add byte ptr [ebp - 0x5bb1979], cl; call dword ptr [eax - 0x73]; 
0x000423ae: lock add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret; 
0x00139d79: lock add byte ptr [eax], al; add byte ptr [ebx - 0x7e46e33d], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0007acc9: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0002a788: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cddf: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081585: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001948d: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000339a2: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033adc: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x000817ce: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a759: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000333f2: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b7c: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000b5878: lock and byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x870f; 
0x0012010e: lock dec dword ptr [ebp - 0x55eeb7d]; call dword ptr [eax + 0x68]; 
0x0011f644: lock dec dword ptr [ebp - 0x560537f]; call dword ptr [eax - 0x73]; 
0x0011fa99: lock dec dword ptr [ebp - 0x560777a]; call dword ptr [eax - 0x73]; 
0x0010a9d4: lock inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x00118e63: lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00048af6: lock or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00088af5: lock or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0014cb52: lock xor dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f7cd0: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000eda60: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0016638a: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000317fc: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00118040: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x4637b], cl; jmp dword ptr [ebp - 0x7d]; 
0x001688b4: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x00129c5a: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00041102: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x977b], cl; dec dword ptr [ebx + 0x7d8b0c45]; or byte ptr [ecx - 0xa37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00129f52: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00088a90: lodsb al, byte ptr [esi]; add edi, edx; jmp dword ptr [esi - 0x70]; 
0x000ee93d: lodsb al, byte ptr [esi]; and al, 0x68; add dword ptr [eax], eax; add byte ptr [ebx - 0x1074d], cl; jmp dword ptr [ebp - 0x75]; 
0x000ee443: lodsb al, byte ptr [esi]; bnd jmp dword ptr [ebp - 0x75]; 
0x000fced7: lodsb al, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x00037f67: lodsb al, byte ptr [esi]; cli; dec dword ptr [ebx - 0x10779]; jmp dword ptr [ebp - 0x39]; 
0x0003da10: lodsb al, byte ptr [esi]; cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0003db35: lodsb al, byte ptr [esi]; cli; jmp dword ptr [ebp - 0x39]; 
0x000fba21: lodsb al, byte ptr [esi]; cli; jmp dword ptr [ecx]; 
0x000fb5bb: lodsb al, byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0003f962: lodsb al, byte ptr [esi]; jae 0x3f95f; call dword ptr [eax - 0x73]; 
0x00040673: lodsb al, byte ptr [esi]; jae 0x40670; call dword ptr [eax - 0x73]; 
0x00040696: lodsb al, byte ptr [esi]; jae 0x40693; call dword ptr [eax - 0x73]; 
0x000406b9: lodsb al, byte ptr [esi]; jae 0x406b6; call dword ptr [eax - 0x73]; 
0x000406dc: lodsb al, byte ptr [esi]; jae 0x406d9; call dword ptr [eax - 0x73]; 
0x000406ff: lodsb al, byte ptr [esi]; jae 0x406fc; call dword ptr [eax - 0x73]; 
0x00040722: lodsb al, byte ptr [esi]; jae 0x4071f; call dword ptr [eax - 0x73]; 
0x00040745: lodsb al, byte ptr [esi]; jae 0x40742; call dword ptr [eax - 0x73]; 
0x00040768: lodsb al, byte ptr [esi]; jae 0x40765; call dword ptr [eax - 0x73]; 
0x0004078b: lodsb al, byte ptr [esi]; jae 0x40788; call dword ptr [eax - 0x73]; 
0x000407b5: lodsb al, byte ptr [esi]; jae 0x407b2; call dword ptr [eax - 0x73]; 
0x000407d8: lodsb al, byte ptr [esi]; jae 0x407d5; call dword ptr [eax - 0x73]; 
0x000407fb: lodsb al, byte ptr [esi]; jae 0x407f8; call dword ptr [eax - 0x73]; 
0x00040841: lodsb al, byte ptr [esi]; jae 0x4083e; call dword ptr [eax - 0x73]; 
0x00040864: lodsb al, byte ptr [esi]; jae 0x40861; call dword ptr [eax - 0x73]; 
0x000b1490: lodsb al, byte ptr [esi]; jns 0xb148a; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x0011f629: lodsb al, byte ptr [esi]; lahf; cli; call dword ptr [eax - 0x73]; 
0x00110836: lodsb al, byte ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x29e4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111496: lodsb al, byte ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4b6: lodsb al, byte ptr [esi]; mov eax, 0xf0; lea ebx, [edi + 0x2cac]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b60c3: lodsb al, byte ptr [esi]; nop; cli; call dword ptr [eax - 0x73]; 
0x000e4400: lodsb al, byte ptr [esi]; or eax, dword ptr [eax]; add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00113633: lodsb al, byte ptr [esi]; pop edx; cli; call dword ptr [eax - 0x18]; 
0x00113818: lodsb al, byte ptr [esi]; pop edx; cli; call dword ptr [eax - 0x73]; 
0x00104c0c: lodsb al, byte ptr [esi]; push esi; cli; call dword ptr [eax - 0x18]; 
0x00104df3: lodsb al, byte ptr [esi]; push esi; cli; call dword ptr [eax - 0x73]; 
0x000b6515: lodsb al, byte ptr [esi]; ret 0xf0; 
0x0005c318: lodsb al, byte ptr [esi]; ret; 
0x000ff12c: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x00094a36: lodsb al, byte ptr [esi]; salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000293d7: lodsb al, byte ptr [esi]; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x000293f7: lodsb al, byte ptr [esi]; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x0011c198: lodsb al, byte ptr [esi]; sub al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4be: lodsb al, byte ptr [esi]; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001d2ab: lodsb al, byte ptr [esi]; sub al, 0xfa; call dword ptr [eax - 0x18]; 
0x000c7156: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00024d93: lodsd eax, dword ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x0003aaa2: lodsd eax, dword ptr [esi]; cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x000fb44e: lodsd eax, dword ptr [esi]; cli; dec dword ptr [edi]; xchg ebp, eax; ret 0xda21; 
0x00157cf5: lodsd eax, dword ptr [esi]; cli; jmp dword ptr [esi + 0xf]; 
0x00149134: lodsd eax, dword ptr [esi]; cmp eax, 0xc381ffff; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000441a2: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x001113af: lodsd eax, dword ptr [esi]; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000c2ade: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c49de: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104d6e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010678e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110a0e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011166e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011236e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011378e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011782e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012948e: lodsd eax, dword ptr [esi]; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000e42b7: lodsd eax, dword ptr [esi]; or al, byte ptr [eax]; add byte ptr [ebx - 0x1677b], cl; jmp dword ptr [ebp - 0x75]; 
0x000441be: lodsd eax, dword ptr [esi]; ret; 
0x0007e34f: lodsd eax, dword ptr [esi]; stc; inc dword ptr [ebx - 0x4c00f33c]; cmp bh, 0xff; call dword ptr [esi + 0x6a]; 
0x0007e34e: lodsd eax, dword ptr cs:[esi]; stc; inc dword ptr [ebx - 0x4c00f33c]; cmp bh, 0xff; call dword ptr [esi + 0x6a]; 
0x001029e3: loope 0x1029f4; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x0010ecf3: loope 0x10ecf5; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x0010ed92: loope 0x10ed94; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x001108b3: loope 0x11090e; cli; call dword ptr [eax - 0x18]; 
0x001108b3: loope 0x11090e; cli; call dword ptr [eax - 0x18]; sbb dword ptr [ecx], 1; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x00110aa4: loope 0x110aff; cli; call dword ptr [eax - 0x73]; 
0x001275fe: loope 0x1275e8; pop esp; jbe 0x127601; jmp dword ptr [esi - 0x70]; 
0x0014ed86: loope 0x14ed86; inc dword ptr [ecx + 0x41177c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151a74: loope 0x151a6d; ret 1; 
0x001522c4: loope 0x1522c9; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153361: loope 0x153333; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154d24: loope 0x154d1d; ret 1; 
0x0015eb0e: loope 0x15eb6b; add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0015ed08: loope 0x15ed07; inc dword ptr [ecx + 0x31c79c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015edcd: loope 0x15edcc; inc dword ptr [ecx + 0x31bb4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00160d2b: loope 0x160d2d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0005a3f5: loope 0x5a3f6; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x0005ab97: loope 0x5ab98; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ebx - 0x50743]; jmp dword ptr [ebp - 0x77]; 
0x0007391e: loope 0x738a0; js 0x73923; jae 0x73999; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x000857d7: loope 0x857e0; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x0008acee: loope 0x8ad4b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0008b4ef: loope 0x8b535; cli; call dword ptr [edi + 0x55]; 
0x0009499f: loope 0x94924; ret; 
0x000954d7: loope 0x9545c; ret; 
0x000954f3: loope 0x95478; ret; 
0x000955eb: loope 0x9557a; je 0x95615; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x00095fdf: loope 0x95f64; ret; 
0x00096bd7: loope 0x96b5c; ret; 
0x00096bf3: loope 0x96b78; ret; 
0x00096ceb: loope 0x96c7a; je 0x96d15; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0009bf7f: loope 0x9bf04; ret; 
0x0009c58b: loope 0x9c51a; je 0x9c5b5; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009d1b6: loope 0x9d13b; ret 0x6640; 
0x000b0299: loope 0xb029c; fimul dword ptr [ebx - 0x364763]; call dword ptr [edx + 0x50]; 
0x000b275c: loope 0xb276d; je 0xb2780; ret; 
0x000bed5e: loope 0xbed5f; call dword ptr [edx + 0x50]; 
0x000c0adb: loope 0xc0ae1; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x000ce510: loope 0xce495; ret; 
0x000ce6b7: loope 0xce63c; ret; 
0x000d1917: loope 0xd1899; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000d2718: loope 0xd2703; psubd mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x000daba7: loope 0xdaba8; add esi, esi; ret; 
0x000daf69: loope 0xdaf5e; inc dword ptr [ebx - 0x6316ef3c]; idiv edi; call dword ptr [eax - 1]; 
0x000e5ece: loope 0xe5f2b; pop esi; pop edi; ret; 
0x000f7a0b: loope 0xf7a42; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000f7b7d: loope 0xf7b7d; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x000fb44a: loope 0xfb429; adc byte ptr [eax - 0x53], 0xfa; dec dword ptr [edi]; xchg ebp, eax; ret 0xda21; 
0x000fba1a: loope 0xfba2b; xchg ebp, eax; ret 0xa8db; 
0x000b564d: lsl eax, word ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cmpsd dword ptr [esi], dword ptr es:[edi]; inc esi; cli; call dword ptr [eax + 0x57]; 
0x0012c880: lsl edx, word ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x0003401d: maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x0014f600: maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0009516d: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000ea217: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120d9c: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000319f2: mov ah, 0x10; add byte ptr [0x1b260b], al; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0015edd2: mov ah, 0x1b; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c247a: mov ah, 0x21; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000838c9: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x5750b80], cl; call dword ptr [eax + 0x68]; 
0x000f5c7b: mov ah, 0x24; mov byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec7bc: mov ah, 0x24; nop; add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x0010dfda: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0003395a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr [esi]; 
0x001632fa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00160a04: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x000617f7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; jmp eax; 
0x001632f3: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001623c4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x00139b57: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [esp + 0xc], edx; call esi; 
0x00079cb7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000b27a4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000b27b7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000b27c7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000b27d7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000b27e7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000b27f7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000b2807: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x001632c6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x00123eb2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; ret; 
0x0008ecb4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00079ce7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; ret; 
0x00079cc7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0008ecca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0007b57a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x128], eax; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b6ea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x158], eax; ret; 
0x000ed58a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x000ffb8a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000c6fb2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x00031c82: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x000fddaa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x40]; pop ebx; ret; 
0x0013ca5a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016332a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001618fa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00073772: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 1; mov eax, edx; ret; 
0x00067259: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000c70f9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x0007b478: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00071288: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xffffffff; ret; 
0x001237a9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 1; ret; 
0x00125f99: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x00079d39: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; ret; 
0x00098fe9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x00123eb9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x00079d19: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0007e49a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0010866a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0009cfda: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0002e66a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0011e04c: mov ah, 0x31; cli; call dword ptr [eax + 0x56]; 
0x0002a0d5: mov ah, 0x31; cli; call dword ptr [eax + 0x57]; 
0x00039a9a: mov ah, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0003ca9f: mov ah, 0x32; cli; call dword ptr [eax - 0x18]; xchg edi, eax; ret; 
0x0007be67: mov ah, 0x5b; pop esi; pop edi; ret; 
0x000c06fb: mov ah, 0x66; nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0010a1ea: mov ah, 0x6a; add eax, 0x57f6808d; cli; call dword ptr [eax - 0x75]; 
0x0005e077: mov ah, 0x76; cli; call dword ptr [eax - 0x73]; 
0x0005dcbf: mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x0002af7a: mov ah, 0x83; ret 0x5201; 
0x0010bc77: mov ah, 0x83; ret; 
0x001192ee: mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x0010c9c8: mov ah, 0x8d; add byte ptr [edx], 0x59; cli; call dword ptr [ecx + 0x52]; 
0x0014170d: mov ah, 0x91; cli; call dword ptr [eax - 0x73]; 
0x0010990a: mov ah, 0x98; cli; call dword ptr [eax - 0x18]; 
0x00031c31: mov ah, 0xb2; adc byte ptr [eax], al; add eax, 0x1b23cb; mov eax, dword ptr [eax + 0x48]; ret; 
0x0006c8b8: mov ah, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00151b8e: mov ah, 0xe8; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010a8f4: mov ah, 0xe8; push esi; sbb eax, dword ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x000b7242: mov ah, 0xe9; stc; inc dword ptr [ecx]; retf; jmp ebx; 
0x0013dc10: mov ah, 0xed; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000ffb27: mov ah, 0xf1; dec dword ptr [ebp + 0xb6]; add al, ch; mov ebx, 0x89fff1b4; ret; 
0x000ad9bf: mov ah, 0xf7; dec dword ptr [ebp - 0x56fcf7b]; call dword ptr [eax - 0x73]; 
0x000ad9de: mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x0011c78b: mov ah, 0xf; mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00026bbe: mov ah, 0xf; xchg esp, eax; ret 0x3a3c; 
0x0002697e: mov ah, 0xf; xchg esp, eax; ret 0x5f3c; 
0x0010a588: mov ah, 0xf; xchg esp, eax; ret; 
0x000cebb4: mov ah, 0xfc; stc; inc dword ptr [ecx]; cli; jmp edx; 
0x00151a5f: mov ah, 0xfe; inc dword ptr [ecx + 0x3e91ec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002cba8: mov ah, ah; call dword ptr [eax + 0x6a]; 
0x001359d2: mov ah, byte ptr [eax - 6]; call dword ptr [eax + 0x6a]; 
0x00129f4b: mov al, 0; add byte ptr [eax], al; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00031172: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0009cddc: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0012a63c: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0009cb7c: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00105c69: mov al, 0x27; bnd call dword ptr [eax - 0x18]; 
0x0003216c: mov al, 0x3d; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000636ce: mov al, 0x40; ret 0xfff9; 
0x00128ec9: mov al, 0x54; hlt; call dword ptr [eax - 0x18]; 
0x0011694d: mov al, 0x5c; cli; call dword ptr [eax - 0x18]; 
0x00131481: mov al, 0x61; cli; call dword ptr [eax - 0x73]; 
0x0012de3e: mov al, 0x61; cli; call dword ptr [ecx + 0x6a]; 
0x0012b0d7: mov al, 0x61; cli; call dword ptr [edx + 0x6a]; 
0x000296cb: mov al, 0x70; cli; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000c6c0c: mov al, 0x76; dec edx; cli; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x00071075: mov al, 0x7a; cli; call dword ptr [eax - 0x73]; 
0x0013cf9e: mov al, 0x80; ljmp 0x74ff:0x6affff; and al, 0x1c; call 0x33d70; add esp, 0x1c; ret; 
0x0004bd94: mov al, 0x83; ret; 
0x00041a8e: mov al, 0x87; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x000a626f: mov al, 0x89; ret 0xe889; 
0x000a8f37: mov al, 0x89; ret 0xf889; 
0x0012d000: mov al, 0x8d; hlt; call dword ptr [eax + 0x57]; 
0x00089d58: mov al, 0x8d; inc edi; add dword ptr [ecx + 0x458bc045], ecx; aam 0x85; ror byte ptr [edi], 0x89; ret 0; 
0x0010ca82: mov al, 0x8d; xor dh, 0x58; cli; call dword ptr [edx - 0x17]; 
0x0012ba95: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0012ba95: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0011eadf: mov al, 0x9e; cli; call dword ptr [eax - 0x73]; 
0x000346ae: mov al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x17009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008096c: mov al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x1df89f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00142388: mov al, 0xbe; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000c69e5: mov al, 0xc0; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aa5: mov al, 0xc0; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00025799: mov al, 0xc0; sldt word ptr [eax]; call 0xfc9f0; add esp, 0x1c; ret; 
0x0012479e: mov al, 0xdc; hlt; call dword ptr [edx - 0x73]; 
0x0013d078: mov al, 0xf1; inc dword ptr [ebx - 0x247aef3c]; jne 0x13d090; add esp, 8; pop ebx; ret; 
0x000fffac: mov al, 0xf1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00113539: mov al, 0xf7; bnd call dword ptr [eax - 0x18]; 
0x0001dc5b: mov al, 0xf; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000f345f: mov al, 0xfa; jmp dword ptr [esi + 3]; 
0x00151e9d: mov al, 0xfe; inc dword ptr [ecx + 0x3e660c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00113b7f: mov al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007c211: mov al, al; mov edx, 0xa89ffe9; mov edx, dword ptr [eax - 0xc0]; lea eax, [eax - 0x164940]; mov dword ptr [edx], eax; ret; 
0x0016be78: mov al, byte ptr [0x100001a]; add esp, 4; pop ebx; pop esi; ret; 
0x00133df8: mov al, byte ptr [0x24878d50]; xor eax, 0x8d500000; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x0006bc49: mov al, byte ptr [0x29ffffe2]; ret 0x4d89; 
0x0013f15d: mov al, byte ptr [0x29ffffe2]; ret 0xc129; 
0x00068dd3: mov al, byte ptr [0x29ffffe2]; ret 0xd989; 
0x00076a4f: mov al, byte ptr [0x29ffffe2]; ret 0xf189; 
0x000701d0: mov al, byte ptr [0x29ffffe2]; ret 0xf989; 
0x00133f70: mov al, byte ptr [0x3908418b]; ret 0x2875; 
0x000e5f04: mov al, byte ptr [0x39fffa08]; fdiv dword ptr [esp + ebp - 0x7d]; ret 0x8301; 
0x0012e1ca: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x0012159f: mov al, byte ptr [0x5b1cc483]; pop esi; pop edi; pop ebp; ret; 
0x0008e8c2: mov al, byte ptr [0x5b5f0000]; ret; 
0x0008ecac: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000853f3: mov al, byte ptr [0x80ffeb93]; in eax, 2; lea eax, [eax - 0x8c380]; cmovne edx, eax; mov eax, edx; ret; 
0x0014c941: mov al, byte ptr [0x81ffff05]; ret; 
0x0014a941: mov al, byte ptr [0x81ffff25]; ret; 
0x0014a841: mov al, byte ptr [0x81ffff26]; ret; 
0x00148941: mov al, byte ptr [0x81ffff45]; ret; 
0x00148841: mov al, byte ptr [0x81ffff46]; ret; 
0x000fa32c: mov al, byte ptr [0x83000001]; in al, dx; or byte ptr [ebp - 0x877b], cl; call dword ptr [eax - 0x73]; 
0x000d5445: mov al, byte ptr [0x83000002]; rol byte ptr [ecx], 0x39; ret 0xe875; 
0x0005ec5e: mov al, byte ptr [0x83000014]; in al, dx; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000e1bac: mov al, byte ptr [0x83fffff8]; les ebp, ptr [eax]; pop ebx; ret; 
0x000cbf76: mov al, byte ptr [0x85fffffb]; ror byte ptr [edi], 0x84; ret; 
0x0006a45d: mov al, byte ptr [0x89ffffe2]; fldcw word ptr [ecx]; ret 0xc129; 
0x00069a03: mov al, byte ptr [0x89ffffe5]; ret 0x9689; 
0x000e73bc: mov al, byte ptr [0x89fffffb]; ret 0xb18b; 
0x000aed0a: mov al, byte ptr [0x8bffffc9]; xchg ebp, eax; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x000f837d: mov al, byte ptr [0x8d08ec83]; xchg esi, eax; or al, 0x4c; cli; call dword ptr [edx - 0x77]; 
0x00117fb0: mov al, byte ptr [0x8dfffffb]; lea ebp, [eax - 0x76000005]; ret 0xb58d; 
0x0010804c: mov al, byte ptr [0x8dfffffe]; xchg dword ptr [eax], ebp; push edi; cli; call dword ptr [ebp - 1]; 
0x0016235c: mov al, byte ptr [0xa8000000]; inc eax; jne 0x162410; lea eax, [edx + 7]; ret; 
0x000310cd: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00127f22: mov al, byte ptr [0xc0850000]; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00152e85: mov al, byte ptr [0xc381fffe]; mov eax, 0x30003d5; sbb al, 0x8b; jmp ebx; 
0x000f84b9: mov al, byte ptr [0xc483fff7]; adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x000f3fee: mov al, byte ptr [0xc483fffa]; adc byte ptr [ebp + 0x393374c0], al; ret; 
0x000e72b9: mov al, byte ptr [0xe8fffffb]; scasb al, byte ptr es:[edi]; ret; 
0x0012f256: mov al, byte ptr [0xf000032]; inc esp; ret 0xc483; 
0x000202c1: mov al, byte ptr [0xf6000001]; ret 0xf08; 
0x0002acf8: mov al, byte ptr [0xfffba6e9]; jmp dword ptr [esi - 0x70]; 
0x00146818: mov al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000528fc: mov al, byte ptr [ebx - 0x7bf09106]; ret 0x27; 
0x000910e6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x00091226: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0009b489: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd26: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0008ce46: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00091244: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0008ce64: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000959ba: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x00095b1a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0009b52b: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0009437a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000944da: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00091284: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cea4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00160c92: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000910c0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x00091200: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0009b463: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd00: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0008ce20: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x00091114: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x00091254: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0008cd44: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x0008ce74: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000959da: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x00095b3a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0009b54b: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0009439a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000944fa: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000912a4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cec4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000910d0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x00091210: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x00091220: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0008ce40: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0009b473: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd10: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0008ce30: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00161fc5: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x000edf34: mov bh, 0; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ea935: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00103d7f: mov bh, 0x14; inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x00103415: mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x00103c7f: mov bh, 0x14; inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x00103a7f: mov bh, 0x14; inc edx; and edx, 0x200; mov eax, edx; ret; 
0x00103b7f: mov bh, 0x14; inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x0010387f: mov bh, 0x14; inc edx; and edx, 0x400; mov eax, edx; ret; 
0x00103aff: mov bh, 0x14; inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x001038ff: mov bh, 0x14; inc edx; and edx, 1; mov eax, edx; ret; 
0x0010397f: mov bh, 0x14; inc edx; and edx, 2; mov eax, edx; ret; 
0x00103bff: mov bh, 0x14; inc edx; and edx, 4; mov eax, edx; ret; 
0x001037ff: mov bh, 0x14; inc edx; and edx, 8; mov eax, edx; ret; 
0x0013aa4c: mov bh, 0x47; adc byte ptr [esi - 0x3f], ah; call 0x1012e659; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000b4691: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x00109a7c: mov bh, 0x57; cli; call dword ptr [eax + 0x57]; 
0x000fce08: mov bh, 0x57; cli; call dword ptr [eax + 0x6a]; 
0x0011c78d: mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00113715: mov bh, 0x5a; cli; call dword ptr [eax - 0x18]; 
0x000e283c: mov bh, 0x64; and eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0xe74; 
0x000bf94c: mov bh, 0x83; ret 0x8301; 
0x000293bd: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000855a8: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002ca8f: mov bh, 0x93; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x001012fc: mov bh, 0xc0; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x0011f4bc: mov bh, 0xc0; ret; 
0x0010eced: mov bh, 0xd0; movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00096bd0: mov bh, 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0006a8b5: mov bh, 0xee; cli; jmp dword ptr [esi - 0x70]; 
0x00056680: mov bh, 0xff; call dword ptr [eax - 0x73]; 
0x00056612: mov bh, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0008032b: mov bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000290e8: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x000290b8: mov bh, 4; push eax; and eax, 0x100; ret; 
0x00029088: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00028fd8: mov bh, 4; push eax; and eax, 0x200; ret; 
0x00029038: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x00028f58: mov bh, 4; push eax; and eax, 0x400; ret; 
0x00029008: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00028fa8: mov bh, 4; push eax; and eax, 0x800; ret; 
0x00029178: mov bh, 4; push eax; and eax, 1; ret; 
0x00028f88: mov bh, 4; push eax; and eax, 2; ret; 
0x00029068: mov bh, 4; push eax; and eax, 4; ret; 
0x00028f38: mov bh, 4; push eax; and eax, 8; ret; 
0x0010c4f0: mov bh, 4; push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x000d1732: mov bh, 6; add byte ptr [ecx + 0x1128cbc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0014a709: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153ac9: mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x00072ec2: mov bh, bh; jmp dword ptr [ecx]; 
0x000faade: mov bh, byte ptr [eax + 0xf0]; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010dd98: mov bh, byte ptr [eax + 0xf0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000cf057: mov bh, byte ptr [ecx]; ret 0x840f; 
0x000838d2: mov bh, dl; call dword ptr [eax + 0x68]; 
0x00083066: mov bh, dl; call dword ptr [eax - 0x18]; 
0x0007f69d: mov bh, dl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x000311e5: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001634a9: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x000311b4: mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00078cf9: mov bl, 0x16; add byte ptr [ebx - 0x7c72eb14], al; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x00028c17: mov bl, 0x1b; add byte ptr [ebx - 0x74fbdbac], cl; adc byte ptr [esi + edi*8 - 0x749a0001], 0; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00157cf3: mov bl, 0x20; lodsd eax, dword ptr [esi]; cli; jmp dword ptr [esi + 0xf]; 
0x000710a1: mov bl, 0x40; cli; call dword ptr [eax - 0x18]; 
0x0011b79b: mov bl, 0x5d; cli; call dword ptr [ecx + 0x50]; 
0x00123bf2: mov bl, 0x60; cli; call dword ptr [eax - 0x39]; 
0x00043b8d: mov bl, 0x66; nop; add eax, dword ptr [esp]; ret; 
0x0001ce8c: mov bl, 0x8b; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x00145c4f: mov bl, 0x91; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00129f2e: mov bl, 0xa8; add byte ptr [eax], al; add bh, bh; je 0x129f5a; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x001021c5: mov bl, 0xc0; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00168024: mov bl, 0xc8; retf 0xfffa; add edx, ebx; jmp edx; 
0x00138901: mov bl, 0xc; cmpsb byte ptr [esi], byte ptr es:[edi]; cli; call dword ptr [esi - 1]; 
0x0011edb3: mov bl, 0xd7; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011eddf: mov bl, 0xe4; pop esi; cli; call dword ptr [esi - 0x18]; 
0x000845f1: mov bl, 0xe4; push ds; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00140989: mov bl, 0xef; call dword ptr [eax + 0x6a]; 
0x000ffc14: mov bl, 0xf1; jmp dword ptr [esi - 0x70]; 
0x0011ee0b: mov bl, 0xf3; pop esi; cli; call dword ptr [esi - 0x18]; 
0x00151b89: mov bl, 0xfe; inc dword ptr [ecx + 0x3e8b4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00151bd3: mov bl, 0xfe; inc dword ptr [ecx + 0x3e9eac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x000d4e92: mov bl, 0xff; inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0001b5b7: mov bl, byte ptr [eax + eax]; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x000f9362: mov bl, byte ptr [edx + esi*8]; jmp dword ptr [esi - 0x70]; 
0x00154b20: mov byte ptr [0x30003bb], al; sbb al, 0x8b; jmp ebx; 
0x00094aca: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00030e9a: mov byte ptr [0x66000002], al; nop; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0009bf53: mov byte ptr [0x81000a0f], al; sar dword ptr [0x3000e64], 0xc; xchg ecx, eax; jmp ecx; 
0x00098c53: mov byte ptr [0x81000a42], al; sar dword ptr [ebp + 0x3000e96], 0xc; xchg ecx, eax; jmp ecx; 
0x0004a051: mov byte ptr [0x85fffa33], al; sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x49fe9; ret 0x40c7; 
0x000b7b59: mov byte ptr [0x8d01f980], al; dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00062c52: mov byte ptr [0xab05000d], al; adc ebx, dword ptr [eax]; add byte ptr [ebx - 0x6f72f314], al; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x0001cda4: mov byte ptr [0xb8fffffd], al; lock add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000e3c79: mov byte ptr [0xc483fffb], al; adc byte ptr [ecx + 0xfc085c6], cl; test ch, al; or byte ptr [eax], al; add byte ptr [ebx - 0x17b73], cl; call dword ptr [ebx + 0x29]; 
0x0016019a: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x0016c22b: mov byte ptr [0xfb39afe8], al; jmp dword ptr [esi - 0x70]; 
0x0009c27e: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098df8: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00028102: mov byte ptr [eax + 0x1115], dl; lea eax, [eax + 0x10e0]; ret; 
0x0009c304: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e7e: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c388: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f02: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c4f3: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001609fb: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x00160c48: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001627e3: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x0009c0cc: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c96: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c0f8: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cb2: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0004a068: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x0009c17a: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d04: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006994a: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0012edfd: mov byte ptr [eax + esi], 0; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000bdd73: mov byte ptr [eax - 0x16ffffff], bl; ret; 
0x00127ebd: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x127eb0; pop ebx; ret; 
0x0011f3db: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x00162a7f: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00125758: mov byte ptr [eax], 0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012577f: mov byte ptr [eax], 0; add esp, 0x1c; ret; 
0x0008ab2c: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fd94d: mov byte ptr [eax], 0; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00107f6f: mov byte ptr [eax], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00107f28: mov byte ptr [eax], 0xa; add esp, 4; pop ebx; pop esi; ret; 
0x00074fc7: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000ff7b7: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff7b7: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00161d14: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00161194: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x000f5c7d: mov byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00024abc: mov byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0006e2fa: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00069954: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0009c090: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009b8c3: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0010468b: mov byte ptr [eax], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009b6c5: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x0005191c: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x0009c0a5: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c70: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011f359: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0009d269: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0011b1fd: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x0014b67a: mov byte ptr [ebx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148bfa: mov byte ptr [ebx + 4], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00058fef: mov byte ptr [ebx - 0x5037b], cl; jmp dword ptr [ebp - 0x75]; 
0x00083091: mov byte ptr [ebx - 0x7c72f714], 0x6a; inc esp; cli; call dword ptr [eax + 0x56]; 
0x00137bda: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0015403c: mov byte ptr [ebx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f7eeb: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0014eb7a: mov byte ptr [ebx], dl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00062d82: mov byte ptr [ecx + 0xf000001], bl; xchg ebp, eax; ret 0xc085; 
0x0008ecf3: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0008ed12: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008ed54: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000fab1f: mov byte ptr [ecx + eax - 0x2d7b0000], bl; je 0xfab2e; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x0009e6b8: mov byte ptr [ecx + eax], 0; dec ecx; jne 0x9e6b8; pop esi; ret; 
0x0009de70: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0011af60: mov byte ptr [ecx + edx], 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0007d332: mov byte ptr [ecx - 6], al; call dword ptr [eax - 0x73]; 
0x000db219: mov byte ptr [ecx - 6], cl; dec dword ptr [ebp - 0x5b6a271]; call dword ptr [eax - 0x77]; 
0x0011defd: mov byte ptr [ecx], 0x3c; and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x0011e07d: mov byte ptr [ecx], 0x3c; and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x5ce4b7b], cl; call dword ptr [eax + 0x56]; 
0x00087093: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x0010cf97: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x00038731: mov byte ptr [ecx], 0x83; ret 0x8d01; 
0x00021be9: mov byte ptr [ecx], 0x83; ret; 
0x000888b4: mov byte ptr [ecx], 0x85; ror byte ptr [edi], 0x8e; ret 0; 
0x000b971c: mov byte ptr [ecx], 0x89; ret 0x44f6; 
0x000423c1: mov byte ptr [ecx], 0xc6; inc esi; jmp dword ptr [eax]; 
0x00101d21: mov byte ptr [ecx], 1; ret; 
0x00021a7d: mov byte ptr [ecx], 9; ret 0x7439; 
0x0014d2fa: mov byte ptr [ecx], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008ecd0: mov byte ptr [ecx], dl; pop ebx; ret; 
0x0009680b: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x0009512b: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x00096891: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000951b1: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x00096915: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x00095235: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x00095335: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x00098b8e: mov byte ptr [edi + 0xc03000e], dl; xchg ecx, eax; jmp ecx; 
0x00096679: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x00094fd9: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000966a7: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x00094ff7: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x0009671b: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x0009503b: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00160c8e: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00028c03: mov byte ptr [edi + edi*8 - 1], dh; jmp dword ptr [ebp - 0x77]; 
0x0009e27d: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0009e623: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001469de: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146f2e: mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x0014f8b9: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00154b59: mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x00019178: mov byte ptr [edi], cl; add byte ptr [eax], al; mov dword ptr [esi + 0xf8c], eax; pop esi; pop edi; ret; 
0x00096652: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x00094fb2: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x0009b821: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0011adb1: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000985b0: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0008b005: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000910e9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x00091229: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0009b48c: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd29: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0008ce49: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000985c0: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x00091107: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x00091247: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0009b4ba: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd37: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x0008ce67: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000985f0: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0008b118: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x0008b048: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0009114b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x0009128b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0009b52e: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd6b: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008ceab: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0009b7c4: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00098660: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00094a6d: mov byte ptr [edx + ecx + 0x6fc18100], al; salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00160195: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x0008aad0: mov byte ptr [edx - 1], 0; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x001461e5: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c114: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00145bd5: mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00149ffc: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfec: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0015343c: mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0008afe8: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x001609dd: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x160a34; add eax, 0xb; ret; 
0x000c48ee: mov byte ptr [edx], ah; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000910c2: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x00091202: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0014c773: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0014a7a3: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0009b465: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd02: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0008ce22: mov byte ptr [edx], al; mov eax, edx; ret; 
0x00153b53: mov byte ptr [edx], al; pop ebx; ret; 
0x000f5d0d: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006d72e: mov byte ptr [edx], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0014c62b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0014a67b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000748bd: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00153a4b: mov byte ptr [edx], cl; pop ebx; ret; 
0x0012f29c: mov byte ptr [edx], dh; add byte ptr [eax], al; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x00116786: mov byte ptr [esi + 0x2c04], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00118a2f: mov byte ptr [esi + 0x39000002], ch; ret; 
0x0006659c: mov byte ptr [esi + 0x39000014], dh; ret 0x820f; 
0x0005dde5: mov byte ptr [esi + 0xf000001], dl; xchg ebp, eax; ret 0xc085; 
0x000846e1: mov byte ptr [esi + eax], 0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0001b0bb: mov byte ptr [esi - 0x71], 0x1c; add byte ptr [ebx - 0x77], dl; ret; 
0x00126596: mov byte ptr [esi - 0x7c720002], 0xa3; popal; cli; call dword ptr [edx + 0x6a]; 
0x000322bf: mov byte ptr [esi - 0x7cfffffd], ch; in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x34]; call edi; 
0x0014ddfa: mov byte ptr [esi], bl; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007b728: mov byte ptr [esi], dl; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x000f5d01: mov byte ptr [esp + 0x37], al; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0009c0a4: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00101d18: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x0004b45c: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x976b], cl; call dword ptr [ebx - 0x75]; 
0x0004b0d5: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0004b4a2: mov ch, 0; add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x000ea2c7: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001623b7: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x00035f77: mov ch, 0x12; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00064225: mov ch, 0x18; idiv edi; call dword ptr [edi - 1]; 
0x00124eb4: mov ch, 0x30; or al, 0xf4; call dword ptr [esi - 0x73]; 
0x0005f7a5: mov ch, 0x34; idiv edi; call dword ptr [eax - 0x18]; 
0x0005ef76: mov ch, 0x38; idiv edi; dec dword ptr [ecx + 0x348d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c37b]; call dword ptr [esi - 0x18]; 
0x0005f7dc: mov ch, 0x38; idiv edi; dec dword ptr [ecx + 0x3c858bc2]; idiv edi; call dword ptr [ecx - 0x75]; 
0x000efd2f: mov ch, 0x4b; cli; call dword ptr [eax - 0x18]; 
0x000fe137: mov ch, 0x53; cli; call dword ptr [eax + 0x52]; 
0x001285b7: mov ch, 0x56; cld; jmp dword ptr [ebp - 0x77]; 
0x00104cf5: mov ch, 0x56; cli; call dword ptr [eax - 0x18]; 
0x0010ede9: mov ch, 0x59; cli; call dword ptr [eax + 0x6a]; 
0x001388a7: mov ch, 0x63; std; jmp dword ptr [esi - 0x70]; 
0x00132e17: mov ch, 0x70; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0006480e: mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89363]; call dword ptr [edx - 0x77]; 
0x0006402a: mov ch, 0x74; idiv edi; inc dword ptr [ebx - 0x7276fb14]; pushal; idiv edi; call dword ptr [esi - 1]; 
0x0005ed57: mov ch, 0x7c; idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x0005ebd8: mov ch, 0x94; idiv edi; call dword ptr [edx - 0x77]; 
0x0005e0b1: mov ch, 0xb8; idiv edi; call dword ptr [ebx - 0x7f]; 
0x0006512f: mov ch, 0xc; idiv edi; inc dword ptr [ebx - 0x6274f314]; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00096ce4: mov ch, 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ddbb5: mov ch, 0xf3; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x00122dd8: mov ch, 0xf7; inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x000eb0ad: mov ch, 0xfd; inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000eb0d8: mov ch, 0xfd; inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x001336c8: mov ch, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0002daf1: mov ch, 0xfe; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00100df5: mov ch, 0xfe; jmp dword ptr [ebp - 0x77]; 
0x00056bbe: mov ch, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000a0607: mov ch, 6; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000344d9: mov ch, 6; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0015d56d: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000961b7: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00079678: mov ch, byte ptr [ecx - 0x137cffea]; adc al, 0x6a; add eax, ebp; lcall 0x18c4, 0x83fffff8; pop ebx; ret; 
0x000b2770: mov ch, dh; and ch, 0xf; je 0xb2790; add eax, 2; ret; 
0x001306d7: mov ch, dh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00031d17: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00031cbe: mov cl, 0; add byte ptr [eax], al; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000c693b: mov cl, 0x46; cmc; inc ebx; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0007108b: mov cl, 0x7d; sti; dec dword ptr [ebp - 0x5854f7a]; call dword ptr [eax - 0x73]; 
0x000725b0: mov cl, 0x89; inc ebp; in al, 0xe9; jnp 0x725b2; jmp dword ptr [esi - 0x70]; 
0x000a354e: mov cl, 0x89; ret 0xe889; 
0x0001912b: mov cl, 0xa9; add eax, 0x8dc78900; xchg byte ptr [esp + ebp], ah; cli; call dword ptr [edx + 0x52]; 
0x0010e4d8: mov cl, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00023b44: mov cl, 0xe; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax + 0x68]; 
0x00151d98: mov cl, 0xfe; inc dword ptr [ecx + 0x3e6a5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00032a4d: mov cl, 6; add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00074fc6: mov cl, byte ptr [eax - 0x7d000000]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000437b2: mov cl, dh; add eax, 0x1cc48300; ret; 
0x000b2759: mov cl, dl; and cl, 0xf; je 0xb2780; ret; 
0x0014da73: mov cr0, esp; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d589c: mov cs, ebx; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x0006b4c4: mov cs, word ptr [eax - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ebp + 0x19289d], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00070ade: mov cs, word ptr [ebp - 0x75000000]; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000ac70b: mov cs, word ptr [ebx - 0x3f7cfb90]; add al, 0x83; ret; 
0x0013d5b0: mov cs, word ptr [ebx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00098c90: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014a83b: mov dh, 0; add byte ptr [eax], al; add al, ch; mov al, byte ptr [0x81ffff26]; ret; 
0x0014883b: mov dh, 0; add byte ptr [eax], al; add al, ch; mov al, byte ptr [0x81ffff46]; ret; 
0x0010732b: mov dh, 0; add byte ptr [eax], al; add al, ch; mov eax, 0x8100035b; ret 0xcccb; 
0x000ffb2b: mov dh, 0; add byte ptr [eax], al; add al, ch; mov ebx, 0x89fff1b4; ret; 
0x000f602b: mov dh, 0; add byte ptr [eax], al; add al, ch; mov ebx, 0x89fff24f; ret; 
0x000ed12b: mov dh, 0; add byte ptr [eax], al; add al, ch; mov ebx, 0x89fff2de; ret; 
0x0010ed03: mov dh, 0; add byte ptr [eax], al; add byte ptr [0xffffff], ah; ret; 
0x00081cb3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; add esp, 0xc; ret; 
0x0015ce8b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x15ce99; neg eax; ret; 
0x00031b23: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0011adbb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 2], bh; ret; 
0x00079cdb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0014ec8b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00049edb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x29102454], cl; ret 0x4439; 
0x000423bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x46c601c6], al; jmp dword ptr [eax]; 
0x001268c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x562b1056], cl; or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x0007f013: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000b728b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x0007ace3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001629db: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000efeeb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x7d8d04ec], al; mov word ptr [ecx - 0xbb6b], cs; call dword ptr [edi + 0x52]; 
0x00050feb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1076b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000f02eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000f829b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x39]; 
0x000eac93: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x75]; 
0x000282f3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000fceab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000c01e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077f], cl; jmp dword ptr [ebp - 0x39]; 
0x000319d3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0010f8fb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x10f69], cl; jmp dword ptr [ebp - 0x77]; 
0x0012252b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x10f7b], cl; jmp dword ptr [ebp - 0x39]; 
0x000d393b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13f79], cl; jmp dword ptr [ebp - 0x75]; 
0x000342c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f51b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7f], cl; jmp dword ptr [ebp - 0x75]; 
0x000f93c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; and bl, byte ptr [edx + esi*8]; jmp dword ptr [esi - 0x70]; 
0x000f5983: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; bound edx, qword ptr [esi - 0xe]; jmp dword ptr [esi - 0x70]; 
0x000f568b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; pop edx; pop ecx; bnd jmp dword ptr [esi - 0x70]; 
0x000f59f3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; push ebp; bnd jmp dword ptr [esi - 0x70]; 
0x000f9393: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x17], bl; push edx; sbb al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x00081173: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x80]; 
0x00081193: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x19b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013be4b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00047f3b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x00064fab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x6a76fb14], al; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x00113fe3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x53]; 
0x000f98d3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x0005e8c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x5895f79]; call dword ptr [eax - 0x73]; 
0x000271a3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x8f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011c293: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0x8363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0010cfa3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x1d329cb], cl; ret; 
0x0011907b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1f77; 
0x0004f8b3: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0x7401; 
0x00068703: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0010d88b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0016277b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00161cb6: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000bf05e: mov dh, 0; add byte ptr [eax], al; sub esp, 8; push edi; push ebx; call eax; 
0x00116746: mov dh, 0; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0007864e: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0014a7a1: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153b51: mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x0015d363: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0007648b: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0002e662: mov dh, 0x11; test dl, dl; jne 0x2e645; ret; 
0x0015d366: mov dh, 0x12; sub eax, edx; ret; 
0x00127eba: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x127eb0; pop ebx; ret; 
0x000d58a2: mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000d292e: mov dh, 0x14; ret 0xc083; 
0x000dca41: mov dh, 0x1c; add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x000fce86: mov dh, 0x31; cli; call dword ptr [eax + 0x6a]; 
0x000f9fe6: mov dh, 0x31; cli; call dword ptr [eax - 1]; 
0x000e13d2: mov dh, 0x31; cli; call dword ptr [ecx + 0x50]; 
0x0008a6ac: mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x00078e93: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0014a11d: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x0002e58c: mov dh, 0x40; or dword ptr [eax + eax*8 - 0x6a74928c], eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000cc7ea: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xcc7be; xor eax, eax; pop ebx; ret; 
0x00157942: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x00156195: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x00157a1e: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x00156205: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x000dce95: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00065e01: mov dh, 0x44; add ah, al; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x000668f6: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0006669c: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00060b2b: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f74: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x0006163d: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a5: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a6d: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000738f1: mov dh, 0x45; aam 0x89; ret 0xf889; 
0x000dd216: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x000b6b70: mov dh, 0x46; cli; call dword ptr [eax - 0x18]; 
0x0005f204: mov dh, 0x47; or eax, 0x9efe083; ror byte ptr [eax - 0x7a72f2b9], 1; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x000de698: mov dh, 0x47; sbb al, 0x89; ret 0xeac0; 
0x001601c2: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001579fa: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001561f1: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x00149ff9: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0014bfe9: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0015793e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00156191: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00157a1a: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00156201: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0003888d: mov dh, 0x4b; add dword ptr [ecx - 0x7cf7dbbc], ecx; ret; 
0x0004af96: mov dh, 0x50; or al, 0xf6; ret 0xf40; 
0x000e2fb1: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000d9c99: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000de1e1: mov dh, 0x53; add al, 0x8b; inc esp; and al, 0xc; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x000834d2: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x0004f8b9: mov dh, 0x55; or al, 0xf6; ret 0x7401; 
0x0004fa20: mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00160235: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001601c6: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0004da65: mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x001601f5: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000dd7c3: mov dh, 0x58; sbb byte ptr [ecx - 0x76d7dbbc], cl; ret 0x5c88; 
0x0011b051: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x001200ff: mov dh, 0x5f; cli; call dword ptr [eax - 0x73]; 
0x0011b101: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x00089828: mov dh, 0x76; add dword ptr [ecx + 0x75d938f1], ecx; adc eax, 0x8394758b; ret 0xf01; 
0x001239a0: mov dh, 0x83; in al, dx; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x0012fd89: mov dh, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000b9084: mov dh, 0x83; ret 0x8901; 
0x0002e254: mov dh, 0x83; ret 0x8d01; 
0x0004203a: mov dh, 0x83; ret; 
0x000264a8: mov dh, 0x84; push ds; aas; xchg esp, eax; clc; call dword ptr [ebp + 3]; 
0x00060281: mov dh, 0x85; idiv edi; inc dword ptr [ebx - 0x7276f714]; xchg esp, eax; idiv edi; call dword ptr [eax + 0x56]; 
0x000dd9f9: mov dh, 0x8b; dec eax; add al, 0x89; ret; 
0x00132c95: mov dh, 0xc0; add esp, 0x1c; ret; 
0x000ef143: mov dh, 0xc0; add esp, 0x4c; ret; 
0x00127395: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x000f9a7b: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x0010ecf0: mov dh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000c71ce: mov dh, 0xc0; lea eax, [eax + eax - 1]; ret; 
0x00030a79: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000e8348: mov dh, 0xc0; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x00051db2: mov dh, 0xc0; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x00067ec4: mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x6257c]; add ecx, ebx; jmp ecx; 
0x00067e28: mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x000527f8: mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x00052423: mov dh, 0xc0; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x00076bac: mov dh, 0xc0; mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x000cebaf: mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x00050f0f: mov dh, 0xc0; neg eax; add esp, 4; pop ebx; pop esi; ret; 
0x0001b8ac: mov dh, 0xc0; neg eax; ret; 
0x000770d0: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00074998: mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0012731b: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0012611a: mov dh, 0xc0; pop ebx; ret; 
0x000319cf: mov dh, 0xc0; ret; 
0x000ef323: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0007b362: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x0001dd77: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000524a5: mov dh, 0xc3; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x0012e80e: mov dh, 0xc4; sub bh, dl; call dword ptr [edi + 0x52]; 
0x000ff129: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0002df82: mov dh, 0xc9; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x000dbf8e: mov dh, 0xc; add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000dd5e9: mov dh, 0xc; js 0xc090dbfd; add dword ptr [ecx], edi; ret 0xda75; 
0x0015ce6a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x0016b82e: mov dh, 0xd8; ljmp 0x5e5b:0x14c483ff; ret; 
0x000b28b8: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012ef86: mov dh, 0xe0; or dh, ah; call dword ptr [ebp - 0x73]; 
0x00096bec: mov dh, 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008b5fa: mov dh, 0xfb; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x0003d75b: mov dh, 0xfe; dec dword ptr [ebx - 0x72bfdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x00114eb2: mov dh, 0xfe; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x0015185b: mov dh, 0xfe; inc dword ptr [ecx + 0x3ea22c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000807e2: mov dh, 0xff; dec dword ptr [ebp - 0x137cff8a]; or bh, bh; je 0x80812; and al, 0x53; call eax; 
0x00048a86: mov dh, 0xff; dec dword ptr [ebx - 0x363f7b]; call dword ptr [ebx - 1]; 
0x000c7d21: mov dh, 1; pop ebx; test al, al; mov eax, 0; cmovne eax, ecx; ret; 
0x000c7d05: mov dh, 1; test al, al; jne 0xc7cec; xor eax, eax; pop ebx; ret; 
0x000ca245: mov dh, 1; test al, al; jne 0xca22c; xor eax, eax; pop ebx; ret; 
0x000df265: mov dh, 1; test al, al; jne 0xdf24c; xor eax, eax; pop ebx; ret; 
0x000dfd75: mov dh, 1; test al, al; jne 0xdfd5c; xor eax, eax; pop ebx; ret; 
0x000eb5c5: mov dh, 1; test al, al; jne 0xeb5ac; xor eax, eax; pop ebx; ret; 
0x0008eb96: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0015a004: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x00079e9f: mov dh, 2; pop ebx; pop esi; ret; 
0x0013e612: mov dh, 2; pop esi; pop edi; ret; 
0x000748f3: mov dh, 2; ret; 
0x0015795d: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x001561a4: mov dh, 2; sub eax, ecx; ret; 
0x000dbf96: mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000dca49: mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x00154b57: mov dh, 6; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0009d873: mov dh, 8; cmp cl, byte ptr [edx]; jne 0x9d87d; xor eax, eax; pop ebx; ret; 
0x0014a679: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153a49: mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x0015795a: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x001561a1: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0005163f: mov dh, byte ptr [edx + edi*8]; call dword ptr [ebx + 0x50]; 
0x0009c0c9: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009c0a3: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00031de6: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00031c32: mov dl, 0x10; add byte ptr [0x1b23cb], al; mov eax, dword ptr [eax + 0x48]; ret; 
0x00031c12: mov dl, 0x10; add byte ptr [0x1b23eb], al; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00051812: mov dl, 0x34; cli; call dword ptr [esi - 0x77]; 
0x000c4965: mov dl, 0x47; cli; call dword ptr [eax - 0x18]; 
0x00096043: mov dl, 0x6e; or al, byte ptr [eax]; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00083781: mov dl, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x000f019d: mov dl, 0x8d; test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [eax - 0x75]; 
0x000f122d: mov dl, 0x8d; test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax - 0x75]; 
0x00068d68: mov dl, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f0135: mov dl, 0xf0; call dword ptr [edx - 0x73]; 
0x000ffd02: mov dl, 0xf1; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000ffd4e: mov dl, 0xf1; jmp dword ptr [esi - 0x70]; 
0x001457dd: mov dl, 0xfc; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00151c92: mov dl, 0xfe; inc dword ptr [ecx + 0x3e86bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005d45f: mov dl, 0xff; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x00094dba: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094cba: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0006c767: mov dl, bl; cli; jmp dword ptr [esi - 0x70]; 
0x000b6c8a: mov dl, byte ptr [eax]; and dword ptr [eax], eax; add byte ptr [ebp - 0x130d2f6e], cl; call dword ptr [ecx + 0x52]; 
0x0007b568: mov dl, byte ptr [esi]; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x00094fb0: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000773d8: mov ds, word ptr [0xb8fffffe]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003cb74: mov ds, word ptr [esi - 0x77000000]; ret; 
0x0005f4f4: mov ds, word ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x000abfc1: mov dword ptr [0x29c47d8b], eax; ret; 
0x000954cf: mov dword ptr [0x3000ecc], eax; or al, 0x99; jmp ecx; 
0x000963c9: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x000ca43e: mov dword ptr [0x8100072a], eax; ret; 
0x00131897: mov dword ptr [0x83000000], eax; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005ed81: mov dword ptr [0x83000008], eax; in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0012c841: mov dword ptr [0x83ffeec8], eax; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00041ff4: mov dword ptr [0x83fffffb], eax; ret; 
0x0008f159: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000f6e19: mov dword ptr [0x89000000], eax; sar dword ptr [eax + 0x17a], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70f9: mov dword ptr [0x89000000], eax; sar dword ptr [eax + 0x17b], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000a39d9: mov dword ptr [0x89fffa07], eax; ret 0x1b8; 
0x000f8979: mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000299d9: mov dword ptr [0x8bfffffa], eax; push esp; and al, 0x14; mov eax, edx; add esp, 0xc; ret; 
0x000b6c58: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00152afe: mov dword ptr [0xc381fffe], eax; aas; fld dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152bc5: mov dword ptr [0xc381fffe], eax; js 0x152ba4; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014335b: mov dword ptr [0xc483fffa], eax; sbb al, 0xc1; clc; pop ds; ret; 
0x0006d3b8: mov dword ptr [0xf0b8], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011dba3: mov dword ptr [0xf3830000], esp; add dword ptr [ebx - 0x49f0ef3c], eax; ret; 
0x00019007: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x000eb37a: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0007b418: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0012704a: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0006d3fb: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0007c86c: mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0009c301: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e7b: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c2a0: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e1d: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000737e5: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x000eb362: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0007b63a: mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5ea: mov dword ptr [eax + 0x124], edx; ret; 
0x0007b680: mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b660: mov dword ptr [eax + 0x130], edx; ret; 
0x0007b5ba: mov dword ptr [eax + 0x138], edx; ret; 
0x0007b630: mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5e0: mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5b0: mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x00035131: mov dword ptr [eax + 0x14], 5; xor eax, eax; ret; 
0x001328da: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000748b8: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0007b710: mov dword ptr [eax + 0x15c], edx; ret; 
0x000f610a: mov dword ptr [eax + 0x16], edx; ret; 
0x0009c3e8: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f45: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00127047: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0009c3ba: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f27: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0001a76e: mov dword ptr [eax + 0x1938], edx; pop ebx; pop esi; ret; 
0x0001a6ce: mov dword ptr [eax + 0x1938], edx; ret; 
0x00079e5e: mov dword ptr [eax + 0x1964], 0; ret; 
0x000fab28: mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x0008583a: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007b610: mov dword ptr [eax + 0x1dfc], edx; ret; 
0x0006de43: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0006de14: mov dword ptr [eax + 0x20], ecx; ret; 
0x0006e4ac: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x00077f5c: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x00077f90: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000f5373: mov dword ptr [eax + 0x28], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00077f56: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0013ca78: mov dword ptr [eax + 0x4c], edx; ret; 
0x000f51e5: mov dword ptr [eax + 0x50], ecx; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x000f51e8: mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x00069949: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0013d129: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0007b411: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00077f5f: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0013278a: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0013275a: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00132ea0: mov dword ptr [eax + 0xc], edx; ret; 
0x0011b250: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000351cb: mov dword ptr [eax + 0xe], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0009c2be: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e3b: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c13a: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ce7: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011fb97: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00078be5: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0012598e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000df1d1: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000f9456: mov dword ptr [eax + 4], 0; ret; 
0x0011a58f: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001258f2: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0012591c: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000ada35: mov dword ptr [eax + 4], ecx; mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0006de09: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0012c7b3: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0012d1a3: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x000748ef: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x001258c6: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0006de3d: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x00098cc9: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000737df: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x00132e99: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00077f93: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00077f62: mov dword ptr [eax + 4], edx; ret; 
0x000ea988: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000b4f49: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x0009c1be: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d4b: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011f5c5: mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000df1ca: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00078bec: mov dword ptr [eax + 8], 0; ret; 
0x0007b41f: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0006de40: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x001258f9: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0006de11: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0009c1a0: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d2d: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009f3d0: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x000f6101: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000df1bb: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00129c32: mov dword ptr [eax + 8], edx; ret; 
0x000f5b93: mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x001469b0: mov dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00132edc: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00078bdf: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000f9450: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; ret; 
0x000df1c4: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00145ab4: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x001258d7: mov dword ptr [eax], 0; pop ebx; ret; 
0x00125988: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001258ec: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x001258c0: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000c0288: mov dword ptr [eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000fbd8f: mov dword ptr [eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0010e667: mov dword ptr [eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00031077: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00030d77: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003186b: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop edi; ret; 
0x00030ea7: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x000f2a77: mov dword ptr [eax], 0x16; mov eax, 1; ret; 
0x00069cae: mov dword ptr [eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0013d017: mov dword ptr [eax], 0x16; xor eax, eax; ret; 
0x0002f61a: mov dword ptr [eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0002fc08: mov dword ptr [eax], 0x22; add esp, 8; pop ebx; ret; 
0x00031a01: mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x0013f7c1: mov dword ptr [eax], 0x26; xor eax, eax; ret; 
0x0011d5fe: mov dword ptr [eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00125970: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00125960: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x0011a589: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00125958: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x000c6641: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x000c01ef: mov dword ptr [eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000fdd9f: mov dword ptr [eax], 2; xor eax, eax; pop ebx; ret; 
0x00125916: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00125903: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00125980: mov dword ptr [eax], 8; pop ebx; ret; 
0x00125946: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0001b8bf: mov dword ptr [eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00071967: mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x000f6ca3: mov dword ptr [eax], eax; add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6f83: mov dword ptr [eax], eax; add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000b24f3: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000204c1: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [esi + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x001328d2: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x520]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000bee8c: mov dword ptr [eax], ebx; xor eax, eax; pop ebx; ret; 
0x00098c94: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c138: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ce5: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f9447: mov dword ptr [eax], ecx; mov dword ptr [eax + 4], edx; ret; 
0x0006e593: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0006c8f5: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0009c0fb: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cb5: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000de566: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0012c7ae: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0012d19e: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0002f57e: mov dword ptr [eax], ecx; ret; 
0x000f5baf: mov dword ptr [eax], ecx; xor eax, eax; ret; 
0x0005813e: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x000b771e: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000b4f47: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x0006de0f: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x001267d1: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00101946: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0009c0b7: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c84: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00028be8: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0006de46: mov dword ptr [eax], edx; pop ebx; ret; 
0x000f9474: mov dword ptr [eax], edx; ret; 
0x00081caa: mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x00035100: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0006ea72: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000ada38: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0007b4fa: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0013ccda: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000855a9: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000f1b82: mov dword ptr [ebp + 0x5840fc0], 0x8b000002; pop ebp; sub dh, dh; ret; 
0x0013070f: mov dword ptr [ebp + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00130a9b: mov dword ptr [ebp + 8], 1; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000fc4c5: mov dword ptr [ebp - 0x30], edx; call eax; 
0x0010c22e: mov dword ptr [ebp - 0x38], eax; push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0001c074: mov dword ptr [ebp - 0x40], eax; push eax; call 0x139490; mov dword ptr [esp], ebx; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x0002613f: mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3e4]; test edx, edx; je 0x2614f; call edx; 
0x0010c233: mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0010bb47: mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0010bc37: mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0010bad9: mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0006f5c9: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0010c18c: mov dword ptr [ebp - 0x44], ecx; push dword ptr [ebp - 0xbc]; push edx; call eax; 
0x0010b990: mov dword ptr [ebp - 0x44], edx; call eax; 
0x0010bf76: mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0010bb9f: mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0010c039: mov dword ptr [ebp - 0x44], edx; push dword ptr [ebp - 0xbc]; push ebx; call eax; 
0x0001c5c5: mov dword ptr [ebp - 0x44], edx; push edi; call 0x139490; mov dword ptr [esp], ebx; call edi; 
0x0002afe0: mov dword ptr [ebp - 0x4c], ecx; mov eax, dword ptr [ebx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000584e8: mov dword ptr [ebp - 0x4d0], eax; cmp ecx, 0x2e; ja 0x58ab0; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x00101cd4: mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00101ea4: mov dword ptr [ebp - 0x500], ecx; call dword ptr gs:[0x10]; 
0x000d4ac5: mov dword ptr [ebp - 0x74f08140], 0x148d0845; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000675cc: mov dword ptr [ebp - 0x7c000015], edx; in al, dx; or al, 0x8d; xchg dword ptr [esi + esi*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x0008308d: mov dword ptr [ebp - 0x7c398b40], 0x838d08ec; push 0x44; cli; call dword ptr [eax + 0x56]; 
0x00074524: mov dword ptr [ebp - 0x7c7bf040], 0x89000001; ret 0xda29; 
0x001388f8: mov dword ptr [ebp - 0x7cac8b40], 0xb38d08ec; or al, 0xa6; cli; call dword ptr [esi - 1]; 
0x00064626: mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x00078011: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000835fe: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x0016bce8: mov dword ptr [ebx + 0x1280], 0; add esp, 0x18; pop ebx; ret; 
0x000737fd: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x000729eb: mov dword ptr [ebx + 0x14], esi; mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x001166ea: mov dword ptr [ebx + 0x18], eax; add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x00030a50: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000832d6: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000729ee: mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x001021c4: mov dword ptr [ebx + 0x1c0], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00081d90: mov dword ptr [ebx + 0x1e14], eax; pop ebx; ret; 
0x000845a9: mov dword ptr [ebx + 0x1e64], eax; add esp, 8; pop ebx; ret; 
0x000832d9: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000f8665: mov dword ptr [ebx + 0x2380], 0; add esp, 8; pop ebx; ret; 
0x000f8515: mov dword ptr [ebx + 0x2380], eax; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000f9d7a: mov dword ptr [ebx + 0x2454], 0; add esp, 0x18; pop ebx; ret; 
0x000f9d22: mov dword ptr [ebx + 0x2454], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000f9da4: mov dword ptr [ebx + 0x2454], eax; add esp, 8; pop ebx; ret; 
0x0010c6a3: mov dword ptr [ebx + 0x2940], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0006e9cf: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00124585: mov dword ptr [ebx + 0x3274], eax; add esp, 8; pop ebx; ret; 
0x0013cb86: mov dword ptr [ebx + 0x3764], eax; pop ebx; pop esi; pop edi; jmp eax; 
0x0013eedf: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00098b6c: mov dword ptr [ebx + 0xa], eax; add byte ptr [ecx + 0xe97a4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001240c7: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0011cc6a: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0013950c: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0007b3ef: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00072c15: mov dword ptr [ebx + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00107c1a: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x000c5827: mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x001175a9: mov dword ptr [ebx + 0xf40], eax; add esp, 0x18; pop ebx; ret; 
0x00083601: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x000ea5ed: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ea858: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000ea72e: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000451ab: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00107b7a: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x00074012: mov dword ptr [ebx + 4], edx; xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x0013955f: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0011cc62: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000737f7: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0012e163: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x000754d5: mov dword ptr [ebx + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00107bca: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x000c5821: mov dword ptr [ebx + 8], edx; mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00154b1a: mov dword ptr [ebx - 0x3c7e0002], 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00130251: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x00153f32: mov dword ptr [ebx], 0x8b1c0300; jmp ebx; 
0x00069c6b: mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00139978: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00085abc: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00073b77: mov dword ptr [ebx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00074017: mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x0004a8a9: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00124cab: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000832dc: mov dword ptr [ebx], eax; push eax; call ecx; 
0x0006e453: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00132783: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000580ed: mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0013d058: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0005191a: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x0005813c: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x0013f88e: mov dword ptr [ecx + 0x1e00], edi; pop ebx; pop esi; pop edi; ret; 
0x0007b750: mov dword ptr [ecx + 0x1e08], eax; ret; 
0x000f5b3e: mov dword ptr [ecx + 0x38], edx; and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00069952: mov dword ptr [ecx + 0x88], edx; ret; 
0x0008ed32: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0002556b: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x000f9444: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [eax + 4], edx; ret; 
0x0008ed23: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x000341e1: mov dword ptr [ecx + 4], edx; ret 4; 
0x0008ed74: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0007b4cc: mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0008ed65: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0004a82c: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000ddcd5: mov dword ptr [ecx], 0x7520ff83; aam 0x83; ret; 
0x000888ae: mov dword ptr [ecx], 0x83ff538d; mov byte ptr [ecx], 0x85; ror byte ptr [edi], 0x8e; ret 0; 
0x00076cdc: mov dword ptr [ecx], 0x940f5f3c; ret 0x3a3c; 
0x0009e621: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x00071508: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00072206: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000341dd: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0010ed2d: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00029479: mov dword ptr [ecx], eax; pop ebx; ret; 
0x000ff3e0: mov dword ptr [ecx], ebx; int 0x80; 
0x0008ecf1: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0008ed10: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008ed30: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0008ed20: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0011b07a: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x0007388c: mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x0008ece1: mov dword ptr [ecx], edx; pop ebx; ret; 
0x00028be6: mov dword ptr [ecx], esi; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0009682d: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x0009686b: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000951ae: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x0009514d: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095275: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x00096937: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x00096985: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x00095257: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x0009684b: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x0009516b: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000966e7: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x00095017: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x00095009: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x0009507b: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ea4e2: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0009673d: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x0009677b: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x0009505d: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x00095370: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0011de70: mov dword ptr [edi - 6], edx; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x000822a1: mov dword ptr [edi], eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00044168: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x000822d4: mov dword ptr [edi], eax; pop ebx; pop esi; pop edi; ret; 
0x0011a79f: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00044171: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00094fd7: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x00094ff5: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x00095015: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x00095006: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x00096664: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x00096692: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00095390: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000953a0: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000716f3: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x00094fc4: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x00034153: mov dword ptr [edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0011a442: mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x00126716: mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x0007b580: mov dword ptr [edx + 0x128], eax; mov dword ptr [edx + 0x140], 1; ret; 
0x0007b586: mov dword ptr [edx + 0x140], 1; ret; 
0x001326e1: mov dword ptr [edx + 0x14], eax; mov eax, 1; pop ebx; ret; 
0x00132717: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00030afc: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0007b6c5: mov dword ptr [edx + 0x150], eax; ret; 
0x0007b6f0: mov dword ptr [edx + 0x158], eax; ret; 
0x00030b02: mov dword ptr [edx + 0x18], eax; ret; 
0x000d1786: mov dword ptr [edx + 0x1c], esi; mov dword ptr [edx + 0x20], esi; pop esi; pop edi; pop ebp; ret; 
0x000d1789: mov dword ptr [edx + 0x20], esi; pop esi; pop edi; pop ebp; ret; 
0x001266f0: mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000f5ae1: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x001266f3: mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000f5ade: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x000f2a69: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x000f42c9: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00031c93: mov dword ptr [edx + 0x48], eax; mov eax, ecx; ret; 
0x00031c7a: mov dword ptr [edx + 0x4c], ecx; ret; 
0x00074fc5: mov dword ptr [edx + 0x88], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00098c2e: mov dword ptr [edx + 0xa], 0xe2c18100; xchg esi, eax; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00049c81: mov dword ptr [edx + 0xc], eax; add esp, 0x18; mov eax, edx; pop ebx; ret 4; 
0x0013271c: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00030aff: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x00153b4d: mov dword ptr [edx + 1], ecx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x00153a45: mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00153ac5: mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x00091137: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x00091267: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0009b4fa: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd57: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0008ce87: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000510c1: mov dword ptr [edx + 4], 1; pop ebx; pop esi; ret; 
0x00091119: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x00091259: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000958b8: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x00095b07: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000959b7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x00095b17: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x00094377: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000944d7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00095b37: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000944f7: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00095a17: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x00095b77: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000943d7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00094537: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b4dc: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd49: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x0008afda: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0008ce79: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00081d88: mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x000f946d: mov dword ptr [edx + 4], eax; test eax, eax; je 0xf9476; mov dword ptr [eax], edx; ret; 
0x0008b105: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x0008b035: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000ea855: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0014f909: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00154b99: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000c16c6: mov dword ptr [edx + 4], edi; pop ebx; pop esi; pop edi; ret; 
0x0009118b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912cb: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0009b56e: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cdab: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008ceeb: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00093ef4: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0009107b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000912eb: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x00092e9b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x0009116d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000912ad: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0009b550: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eaab: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x0008ccbb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008fa24: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x0008cecd: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00051054: mov dword ptr [edx + 8], esi; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000d06c8: mov dword ptr [edx + eax*4], ecx; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001479fa: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000262c8: mov dword ptr [edx + edi*4], ecx; mov edx, dword ptr [ebx + edi*4 - 0x3e0]; test edx, edx; je 0x262de; mov dword ptr [esp], eax; call edx; 
0x00145ba9: mov dword ptr [edx - 0x10], eax; mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001461ff: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bef: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00145bac: mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00145bcc: mov dword ptr [edx - 0xd], eax; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00145bec: mov dword ptr [edx - 0xe], eax; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146206: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bf6: mov dword ptr [edx - 2], eax; pop ebx; ret; 
0x0014a08d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c07d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x001534cd: mov dword ptr [edx - 2], ecx; pop ebx; ret; 
0x00146226: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145c16: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014a121: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c111: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00153561: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001461c2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfa9: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00145bb2: mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00149f55: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf55: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00132752: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x001533a5: mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001461e2: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bd2: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00149fa6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfa6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001533f6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00153435: mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00146202: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bf2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001534c5: mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00145c12: mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001461bf: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145baf: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001548f9: mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001461df: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bcf: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000343b7: mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00092fd5: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0002fa72: mov dword ptr [edx], eax; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x000910d4: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x00091214: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x00093fd2: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008b0dc: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x00091002: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x00091232: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x0008b0f0: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x00092e2f: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x0008b108: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x0008b11c: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000910e4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x00091224: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0008cd24: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0008ce44: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x00091242: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0008ce62: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x00091252: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0008ce72: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0001b004: mov dword ptr [edx], eax; mov eax, 0xffffffff; ret; 
0x0005009f: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00091132: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x00091262: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0008cd52: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0008ce82: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000944c2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0009b477: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea3f: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc42: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0008b014: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0008faf2: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x0008ce34: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00079a0a: mov dword ptr [edx], eax; ret; 
0x000350a0: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0007b43e: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001479f4: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000e1ad6: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0006e12e: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0014c594: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0014a5f4: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007c216: mov dword ptr [edx], ecx; mov edx, dword ptr [eax - 0xc0]; lea eax, [eax - 0x164940]; mov dword ptr [edx], eax; ret; 
0x0006d400: mov dword ptr [edx], ecx; pop ebx; ret; 
0x000438f8: mov dword ptr [edx], ecx; ret; 
0x00034d12: mov dword ptr [edx], ecx; shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0006c7b1: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x0006d594: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008b0b9: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000c16c4: mov dword ptr [edx], esi; mov dword ptr [edx + 4], edi; pop ebx; pop esi; pop edi; ret; 
0x0008b001: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0008aff1: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000dec97: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f14ba: mov dword ptr [esi + 0x14], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00072c12: mov dword ptr [esi + 0x18], edx; mov dword ptr [ebx + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00107308: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000d70c3: mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x00107953: mov dword ptr [esi + 0x20], edx; pop esi; pop edi; ret; 
0x00078075: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00079b2b: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0006de94: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00072340: mov dword ptr [esi + 0xa4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00071660: mov dword ptr [esi + 0xa4], edx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00034253: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0001917c: mov dword ptr [esi + 0xf8c], eax; pop esi; pop edi; ret; 
0x00079a81: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00074f4b: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x000871fc: mov dword ptr [esi + edx*2], 0x172dce8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ebp - 0x8fef98c], cl; rol byte ptr [ecx], 1; ret; 
0x000b60d6: mov dword ptr [esi - 6], eax; call dword ptr [eax - 0x18]; 
0x00088304: mov dword ptr [esi], eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00078510: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0006e9cd: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0013e5ef: mov dword ptr [esi], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00119b6e: mov dword ptr [esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00085026: mov dword ptr [esi], eax; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a0723: mov dword ptr [esi], ebx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007b698: mov dword ptr [esi], edx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x0007b6d8: mov dword ptr [esi], edx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x7b6f0; ret; 
0x0008aac6: mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x00101085: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100936: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00082eb9: mov dword ptr [esp + 0x10], ecx; push dword ptr [esp + 8]; push ebp; call eax; 
0x000b3449: mov dword ptr [esp + 0x10], edi; mov dword ptr [esp + 0x68], edi; push ecx; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x00123f1c: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0013cb82: mov dword ptr [esp + 0x10], esi; mov dword ptr [ebx + 0x3764], eax; pop ebx; pop esi; pop edi; jmp eax; 
0x0007060b: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0006e6c0: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0006e560: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0013cb34: mov dword ptr [esp + 0x10], esi; pop ebx; pop esi; pop edi; jmp eax; 
0x000c0997: mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000bf277: mov dword ptr [esp + 0x14], eax; lea ecx, [esp + 0x14]; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000f6d4d: mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f702d: mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x0010093e: mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100895: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100793: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100b65: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff328: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x0013cb30: mov dword ptr [esp + 0x14], edi; mov dword ptr [esp + 0x10], esi; pop ebx; pop esi; pop edi; jmp eax; 
0x0007db57: mov dword ptr [esp + 0x14], edx; call eax; 
0x001269be: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00060942: mov dword ptr [esp + 0x18], 0; jmp eax; 
0x000608f2: mov dword ptr [esp + 0x18], 1; jmp eax; 
0x0010079b: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ff330: mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x001014be: mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00025f0e: mov dword ptr [esp + 0x18], ecx; call eax; 
0x000bf284: mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000f629e: mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c198f: mov dword ptr [esp + 0x1c], eax; call 0x139490; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00031de1: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0007db53: mov dword ptr [esp + 0x20], ecx; mov dword ptr [esp + 0x14], edx; call eax; 
0x0013176c: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00065bba: mov dword ptr [esp + 0x24], 0; jmp eax; 
0x00065b72: mov dword ptr [esp + 0x24], 1; jmp eax; 
0x0012f903: mov dword ptr [esp + 0x24], 5; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0013a3b6: mov dword ptr [esp + 0x24], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000329c0: mov dword ptr [esp + 0x24], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000ed784: mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013a2a6: mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007d7a2: mov dword ptr [esp + 0x28], ecx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push esi; call dword ptr [eax]; 
0x0012f761: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0011686f: mov dword ptr [esp + 0x2c], eax; call 0x139490; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0007da7d: mov dword ptr [esp + 0x2c], eax; push esi; call dword ptr [eax]; 
0x0013a27a: mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00124992: mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0012f6f1: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0009fd0d: mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000671d0: mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x00065d0a: mov dword ptr [esp + 0x40], 0x20; jmp eax; 
0x00078704: mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000672e0: mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x00067260: mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x000672d0: mov dword ptr [esp + 0x58], 1; jmp ebx; 
0x0006660a: mov dword ptr [esp + 0x60], 0; jmp eax; 
0x00067340: mov dword ptr [esp + 0x60], 1; jmp ebx; 
0x000615fa: mov dword ptr [esp + 0x64], 1; jmp eax; 
0x00067270: mov dword ptr [esp + 0x64], 1; jmp ebx; 
0x00067280: mov dword ptr [esp + 0x68], 1; jmp ebx; 
0x000b344d: mov dword ptr [esp + 0x68], edi; push ecx; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x000b35b4: mov dword ptr [esp + 0x6c], edi; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000eab33: mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000833e6: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0002f395: mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00100593: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ed217: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f4cf9: mov dword ptr [esp + 0xc], eax; mov ebp, eax; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000eb51e: mov dword ptr [esp + 0xc], eax; xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x001323d3: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e3: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0007b257: mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0007b29f: mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x0007c7a8: mov dword ptr [esp + 0xc], ecx; neg edi; sub esp, 0xc; push edi; call dword ptr [ebp]; 
0x0007c7c8: mov dword ptr [esp + 0xc], ecx; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x00139b60: mov dword ptr [esp + 0xc], edx; call esi; 
0x0013223f: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001318ff: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0002f572: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002fa25: mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x000453c1: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00129c62: mov dword ptr [esp + 4], eax; jmp edx; 
0x000ffa45: mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5495: mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff54a: mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5555: mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e7: mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b57: mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e25: mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x00100502: mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010080b: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010060a: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007ae2e: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00069b8e: mov dword ptr [esp + 4], edx; jmp eax; 
0x000453f8: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x14; ret; 
0x0002fb6b: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001240ab: mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0007b25e: mov dword ptr [esp + 8], eax; call edx; 
0x0002f6d5: mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x000bf383: mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000bf50d: mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000f45f6: mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00100612: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010058b: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000f7999: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x0012e230: mov dword ptr [esp + 8], eax; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x00129c5e: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001316d3: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0002f8e3: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00069a9f: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x001323d7: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e7: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0013bf29: mov dword ptr [esp], eax; call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012e04b: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000262d6: mov dword ptr [esp], eax; call edx; 
0x00045378: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x000453fc: mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x14; ret; 
0x001004fb: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001009bb: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001251a2: mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x001174b9: mov dword ptr [esp], ebp; call ebx; 
0x001171ad: mov dword ptr [esp], ebp; call esi; 
0x0001c5ce: mov dword ptr [esp], ebx; call edi; 
0x0001bf09: mov dword ptr [esp], ebx; call esi; 
0x0001c07d: mov dword ptr [esp], ebx; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x001249d9: mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0002fa8e: mov dword ptr [esp], edx; fstp dword ptr [eax]; fld dword ptr [esp]; add esp, 4; ret; 
0x00124153: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000d19e6: mov dword ptr [esp], esi; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00123860: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00024d17: mov dword ptr [esp], esi; call ebx; 
0x00116878: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0009fd0c: mov dword ptr fs:[esp + 0x34], edx; push eax; push edi; call esi; 
0x000c0287: mov dword ptr gs:[eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000fbd8e: mov dword ptr gs:[eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0010e666: mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00031076: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00030d76: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003186a: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop edi; ret; 
0x00030ea6: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000f2a76: mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x00069cad: mov dword ptr gs:[eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0013d016: mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x0002f619: mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0002fc07: mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x00031a00: mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0013f7c0: mov dword ptr gs:[eax], 0x26; xor eax, eax; ret; 
0x0011d5fd: mov dword ptr gs:[eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000c01ee: mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000fdd9e: mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x0001b8be: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00071966: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x00029478: mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00034152: mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0001b003: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0012f096: mov dword ptr gs:[edx], eax; ret; 
0x0012f1ee: mov dword ptr gs:[esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00119b6d: mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00020506: mov dword ptr ss:[eax], eax; add byte ptr [ebx - 0x72bfdb84], cl; xchg dword ptr [esi + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x0009c0b3: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c80: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094fc0: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000c7d26: mov eax, 0; cmovne eax, ecx; ret; 
0x0015d692: mov eax, 0; jne 0x15de10; pop ebx; ret; 
0x0015d4cb: mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x0015ee1a: mov eax, 0; jne 0x15f060; pop ebx; ret; 
0x001604d4: mov eax, 0; jne 0x160700; pop ebx; ret; 
0x00160591: mov eax, 0; jne 0x160720; pop ebx; ret; 
0x000f47a3: mov eax, 0; pop edi; cmova eax, edx; pop ebp; ret; 
0x000f475f: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x000ff7f0: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000c7100: mov eax, 0x100; ret; 
0x000faf57: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0010e14d: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x000bf387: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000bf27f: mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000bf0cd: mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000510d0: mov eax, 0x10; pop ebx; pop esi; ret; 
0x00162b1a: mov eax, 0x10; pop edi; ret; 
0x000bef4a: mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000bee55: mov eax, 0x10a; xor ecx, ecx; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000bf553: mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000bf484: mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x000ec8c1: mov eax, 0x10c; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec8f1: mov eax, 0x10d; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00030e23: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000f90f1: mov eax, 0x10f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c5962: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00100090: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00100090: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0010006d: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x001000da: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x000ecc98: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecc4d: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecbfd: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ec752: mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000ee8e7: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000f92d1: mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000ec7c2: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000ef2ad: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef197: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x000ef1fd: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000ef262: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x000ecb7d: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000ed590: mov eax, 0x133; mov edx, edi; call dword ptr gs:[0x10]; 
0x000f795b: mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f45bf: mov eax, 0x135; call dword ptr gs:[0x10]; 
0x001002a6: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000ffa09: mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5459: mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff8a0: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff950: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000eb528: mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000ec081: mov eax, 0x13e; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ff50a: mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f4f1a: mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000f919d: mov eax, 0x140; mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x000f926f: mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x001002ea: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x000f47fd: mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00100322: mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0010034a: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5ea: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000fffb6: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x00030e00: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c6620: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x000edd4d: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000edd9a: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001000b6: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000f69eb: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f69a6: mov eax, 0x14d; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6b5b: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f6b16: mov eax, 0x14e; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00101105: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010037a: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ffe4c: mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000ff6f1: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f6299: mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f62f3: mov eax, 0x154; push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001003b7: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x000ffabb: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000fff0a: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000f7b56: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x001011b0: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00100147: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x001003ea: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00050fca: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0003528b: mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0010041a: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000c5e0b: mov eax, 0x166; lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00081cb8: mov eax, 0x16; add esp, 0xc; ret; 
0x0007b553: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00081d15: mov eax, 0x16; pop ebx; pop esi; ret; 
0x0007b480: mov eax, 0x16; ret; 
0x000ffb60: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000f4de9: mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f6cab: mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6e1f: mov eax, 0x17a; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f6f8b: mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f70ff: mov eax, 0x17b; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000ffbe7: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010044a: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00100476: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000bf118: mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bf22e: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000beece: mov eax, 0x196; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bf511: mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf42f: mov eax, 0x197; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000f45fa: mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000f4537: mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000f825e: mov eax, 0x1a; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000c59f6: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000c5abf: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ec0ba: mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x000c70ef: mov eax, 0x20; cmovne eax, edx; ret; 
0x000c7023: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000ed301: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f7ab0: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000f7ab0: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0003114a: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00040f46: mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00050f31: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ecbca: mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ef2d6: mov eax, 0x28; call dword ptr gs:[0x10]; 
0x0004b6d0: mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x000edcf6: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd76: mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000c57e1: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00054c73: mov eax, 0x2bfffffb; xchg ebp, eax; mov eax, 0x89fffffb; lea edx, [edx + edi*8 - 1]; call dword ptr [eax - 0x77]; 
0x000f671c: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00152e8a: mov eax, 0x30003d5; sbb al, 0x8b; jmp ebx; 
0x0015238a: mov eax, 0x30003e0; sbb al, 0x8b; jmp ebx; 
0x0014c54a: mov eax, 0x3000434; sbb al, 0x8b; jmp ebx; 
0x0014ad4a: mov eax, 0x300044c; sbb al, 0x8b; jmp ebx; 
0x001497ca: mov eax, 0x300045f; sbb al, 0x8b; jmp ebx; 
0x00135154: mov eax, 0x30838d50; xor eax, 0x8d500000; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x000f79f6: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ff43a: mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000f5c85: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f5d2f: mov eax, 0x36; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fb3: mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00135303: mov eax, 0x3908418b; ret 0x4575; 
0x000c68ca: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000eb430: mov eax, 0x39c101c0; sal dword ptr [edi - 0x10], cl; mov eax, ecx; pop ebx; ret; 
0x00057422: mov eax, 0x39fffffb; ret 0x1875; 
0x000ecac6: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ecac6: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f7a16: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000fd221: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000edd1a: mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000c6630: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000c6630: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000c7058: mov eax, 0x40; ret; 
0x000c68f0: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000c68f0: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000c6940: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000f76fa: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6221: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fd56b: mov eax, 0x4ccd808d; cli; call dword ptr [eax - 0x18]; 
0x000f635a: mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000b413d: mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000b42f1: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000ef1ca: mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000ef22d: mov eax, 0x55; call dword ptr gs:[0x10]; 
0x001002c6: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000f7e8a: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000f7b71: mov eax, 0x58; mov edx, dword ptr [esp + 8]; mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x000fadea: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000f9311: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f9341: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ecb1a: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000f6611: mov eax, 0x60; sub esp, 8; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000f665d: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ec86a: mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec89a: mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000ff25d: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100506: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010010d: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bfd: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000b6bca: mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000ec1f8: mov eax, 0x6a; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012b005: mov eax, 0x6afffaa2; add eax, 0x28838d50; jo 0x12b00b; call dword ptr [eax - 0x18]; 
0x000ec358: mov eax, 0x6b; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ec2a8: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ff286: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e66: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffde6: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000c58b0: mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000f7eb6: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0001a758: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x16fbaf70], ecx; jmp dword ptr [ebp + 0x33]; 
0x00100286: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00101434: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001014b5: mov eax, 0x75; lea edi, [esp + 0x14]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001013f1: mov eax, 0x75; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x0010151b: mov eax, 0x75; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001455ef: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001016ed: mov eax, 0x75; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x000f7a43: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00030ec9: mov eax, 0x77; int 0x80; 
0x000ff3db: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000f781a: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000c57c6: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ffdbd: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae1d: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0004382a: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000c6fc0: mov eax, 0x7e; pop ebx; ret; 
0x0002f9d4: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x000fff3d: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000c6fa8: mov eax, 0x7f; cmovne eax, edx; ret; 
0x000c6f5e: mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000c6f21: mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000c6f84: mov eax, 0x7f; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000c6f43: mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000c6ee9: mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00100037: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0011b931: mov eax, 0x81000215; ret 0x86cb; 
0x00107331: mov eax, 0x8100035b; ret 0xcccb; 
0x000fb131: mov eax, 0x8100041d; ret 0x8ecb; 
0x000c7a31: mov eax, 0x81000754; ret 0xc5cb; 
0x00084531: mov eax, 0x81000b89; ret 0xfacb; 
0x00083f31: mov eax, 0x81000b8f; ret 0xcb; 
0x00051831: mov eax, 0x81000eb6; ret 0x27cb; 
0x000fff6d: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00100006: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x00110344: mov eax, 0x83000001; clc; add dword ptr [ebp - 0x6bf0fdb8], ecx; ret 0x7c8b; 
0x0010bd3f: mov eax, 0x837d7440; in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x00100262: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000af26f: mov eax, 0x83ffffc9; in al, dx; or byte ptr [ebp - 0x39f48], cl; call dword ptr [edi + 0x53]; 
0x000c6c04: mov eax, 0x83ffffea; in al, dx; or byte ptr [ebp - 0x5b58950], cl; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000c6e3a: mov eax, 0x83ffffea; in al, dx; or byte ptr [esi - 0x73], dl; cmp byte ptr [ebx], 0x48; cli; call dword ptr [eax - 0x18]; 
0x000563be: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x00101d2e: mov eax, 0x83fffffc; ret 0x8902; 
0x000c68a6: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ede96: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001459f4: mov eax, 0x85fffcdd; ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000487de: mov eax, 0x85ffffc9; ror byte ptr [edi], 0x8f; shr ebx, 0xff; dec dword ptr [ebp - 0x58c077d]; call dword ptr [eax - 0x73]; 
0x000ffe7a: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ff7b6: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ff7b6: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00031ddd: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00054c79: mov eax, 0x89fffffb; lea edx, [edx + edi*8 - 1]; call dword ptr [eax - 0x77]; 
0x000563e0: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00053e10: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret; 
0x000ed2b4: mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000ed21b: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b152f: mov eax, 0x8dffffc9; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x000b02da: mov eax, 0x8dffffc9; xchg dword ptr [eax + edx*4], edi; cli; call dword ptr [eax - 0x73]; 
0x000f7865: mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ed9ba: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000fae5b: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f685b: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68fb: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011cc65: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00101c07: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00101bb7: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000c6926: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000f7ae3: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000ff334: mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000faf8a: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fd48e: mov eax, 0x9734808d; cli; call dword ptr [eax - 0x18]; 
0x000fafba: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000fafe6: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000fb000: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000e1c4a: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c7a: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1cad: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000e1cd6: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0007b370: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0007b370: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000e1d16: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000e1d36: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000e1d5a: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00100187: mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x000ff2aa: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x00100227: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000f444b: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001001bd: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000ef286: mov eax, 0xa; call dword ptr gs:[0x10]; 
0x00030ec0: mov eax, 0xad; int 0x80; 
0x00030f65: mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000eab3a: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000eaba4: mov eax, 0xaf; mov ebx, 2; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000310d1: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00031171: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00031d16: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00031cbd: mov eax, 0xb1; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x00031de5: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000311e4: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000311b3: mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000ea216: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2c6: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000edf33: mov eax, 0xb7; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00162a92: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000ffeaa: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffeda: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000c5d9d: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0003172a: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000f4d72: mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000c5d61: mov eax, 0xbe; int 0x80; 
0x000c5d61: mov eax, 0xbe; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000f61f1: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d4acf: mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000fad28: mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000b6c3a: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xb6c50; mov eax, edx; ret; 
0x000f9371: mov eax, 0xc1; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f93a1: mov eax, 0xc2; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec1bf: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000ec3a1: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f278e: mov eax, 0xc483fffa; adc byte ptr [ebp + 0x393374c0], al; ret; 
0x000ec31f: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ec401: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ec26f: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000ec3d1: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ee8ad: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000c6640: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000c6640: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000c6660: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000c6660: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000c6650: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000c6650: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ede76: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x00162ae6: mov eax, 0xc; pop edi; ret; 
0x000c6670: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000c6670: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000f724d: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f730d: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000c668a: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000c216d: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000ee87d: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c69f2: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000f73d3: mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000c696d: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6ab2: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000f74b3: mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000c699d: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee84d: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000c66d9: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c6789: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000ff4a6: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4a6: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ff4c6: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000ff4c6: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001001ea: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000b4021: mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000faf1d: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faeed: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000eb3a0: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c0937: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000c07d0: mov eax, 0xdc; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ed71f: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f56f8: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000ed6b4: mov eax, 0xdd; mov edx, esi; call dword ptr gs:[0x10]; 
0x00030e0e: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00100490: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x000fdd27: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb7: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb87: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000fdbc2: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc22: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaf2: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000fdbed: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00048565: mov eax, 0xe8ffffc9; ret 0xffbc; 
0x000fdc4d: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000ec6fd: mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000fdb1d: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000fdcea: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc7a: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb4a: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000f4da2: mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000b4fc2: mov eax, 0xf000020; xchg ebp, eax; ret 0xb38b; 
0x00139d78: mov eax, 0xf0; add ebx, 0x1c; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008002b: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000192de: mov eax, 0xf0; lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00040e97: mov eax, 0xf0; lea ebx, [ebp + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006b4c9: mov eax, 0xf0; lea ebx, [ebp + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d7fc: mov eax, 0xf0; lea ebx, [ebp + 0x193c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000791ab: mov eax, 0xf0; lea ebx, [ebp + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007e207: mov eax, 0xf0; lea ebx, [ebp + 0x1df0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007df83: mov eax, 0xf0; lea ebx, [ebp + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b5583: mov eax, 0xf0; lea ebx, [ebp + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013709f: mov eax, 0xf0; lea ebx, [ebp + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000336af: mov eax, 0xf0; lea ebx, [ebx + 0x1284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345df: mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043040: mov eax, 0xf0; lea ebx, [ebx + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004d3bf: mov eax, 0xf0; lea ebx, [ebx + 0x1900]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f133: mov eax, 0xf0; lea ebx, [ebx + 0x190c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f3ff: mov eax, 0xf0; lea ebx, [ebx + 0x1910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007afe3: mov eax, 0xf0; lea ebx, [ebx + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c163: mov eax, 0xf0; lea ebx, [ebx + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b53c7: mov eax, 0xf0; lea ebx, [ebx + 0x20c8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c18a4: mov eax, 0xf0; lea ebx, [ebx + 0x2180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c22cf: mov eax, 0xf0; lea ebx, [ebx + 0x219c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2473: mov eax, 0xf0; lea ebx, [ebx + 0x21b4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2633: mov eax, 0xf0; lea ebx, [ebx + 0x21cc]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29e7: mov eax, 0xf0; lea ebx, [ebx + 0x21d0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4104: mov eax, 0xf0; lea ebx, [ebx + 0x2218]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c449f: mov eax, 0xf0; lea ebx, [ebx + 0x223c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4653: mov eax, 0xf0; lea ebx, [ebx + 0x2260]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4803: mov eax, 0xf0; lea ebx, [ebx + 0x2284]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48e7: mov eax, 0xf0; lea ebx, [ebx + 0x2288]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001040ef: mov eax, 0xf0; lea ebx, [ebx + 0x27c4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a3: mov eax, 0xf0; lea ebx, [ebx + 0x2808]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104483: mov eax, 0xf0; lea ebx, [ebx + 0x284c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104684: mov eax, 0xf0; lea ebx, [ebx + 0x2888]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c77: mov eax, 0xf0; lea ebx, [ebx + 0x288c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a89: mov eax, 0xf0; lea ebx, [ebx + 0x28a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cef: mov eax, 0xf0; lea ebx, [ebx + 0x28c0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea3: mov eax, 0xf0; lea ebx, [ebx + 0x28d8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106063: mov eax, 0xf0; lea ebx, [ebx + 0x28f4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106294: mov eax, 0xf0; lea ebx, [ebx + 0x290c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106697: mov eax, 0xf0; lea ebx, [ebx + 0x2910]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00110837: mov eax, 0xf0; lea ebx, [ebx + 0x29e4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011091f: mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111497: mov eax, 0xf0; lea ebx, [ebx + 0x2a4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011157f: mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00111d83: mov eax, 0xf0; lea ebx, [ebx + 0x2a80]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011219f: mov eax, 0xf0; lea ebx, [ebx + 0x2aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011227f: mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112633: mov eax, 0xf0; lea ebx, [ebx + 0x2ac8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b33: mov eax, 0xf0; lea ebx, [ebx + 0x2aec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e3: mov eax, 0xf0; lea ebx, [ebx + 0x2b10]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135bf: mov eax, 0xf0; lea ebx, [ebx + 0x2b34]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011369f: mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116b53: mov eax, 0xf0; lea ebx, [ebx + 0x2c4c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117737: mov eax, 0xf0; lea ebx, [ebx + 0x2c54]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a2f: mov eax, 0xf0; lea ebx, [ebx + 0x2c78]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117be3: mov eax, 0xf0; lea ebx, [ebx + 0x2c90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200cb: mov eax, 0xf0; lea ebx, [ebx + 0x3180]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121743: mov eax, 0xf0; lea ebx, [ebx + 0x31e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f4f: mov eax, 0xf0; lea ebx, [ebx + 0x3358]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129103: mov eax, 0xf0; lea ebx, [ebx + 0x336c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b3: mov eax, 0xf0; lea ebx, [ebx + 0x3380]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012939f: mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b24b: mov eax, 0xf0; lea ebx, [ebx + 0x3400]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012e33f: mov eax, 0xf0; lea ebx, [ebx + 0x3410]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374cf: mov eax, 0xf0; lea ebx, [ebx + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cc63: mov eax, 0xf0; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cda8: mov eax, 0xf0; lea ebx, [ebx + 0xf90]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002b70d: mov eax, 0xf0; lea ebx, [edi + 0x11a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004107f: mov eax, 0xf0; lea ebx, [edi + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004359b: mov eax, 0xf0; lea ebx, [edi + 0x18ec]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006afec: mov eax, 0xf0; lea ebx, [edi + 0x1928]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776dd: mov eax, 0xf0; lea ebx, [edi + 0x195c]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b2ed: mov eax, 0xf0; lea ebx, [edi + 0x1aa0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008096d: mov eax, 0xf0; lea ebx, [edi + 0x1df8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa813: mov eax, 0xf0; lea ebx, [edi + 0x24f0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00118183: mov eax, 0xf0; lea ebx, [edi + 0x2ca0]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c4b7: mov eax, 0xf0; lea ebx, [edi + 0x2cac]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011f267: mov eax, 0xf0; lea ebx, [edi + 0x2f70]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123e43: mov eax, 0xf0; lea ebx, [edi + 0x3264]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001ceff: mov eax, 0xf0; lea ebx, [edi + 0xf90]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000338d8: mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0007acc8: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0002a787: mov eax, 0xf0; mov ecx, 0x81; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cdde: mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081584: mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001948c: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000339a1: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033adb: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x000817cd: mov eax, 0xf0; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a758: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000333f1: mov eax, 0xf0; mov edx, 1; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b7b: mov eax, 0xf0; mov edx, 1; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00143241: mov eax, 0xf1; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ecaea: mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000c6fb8: mov eax, 0xfc17; pop ebx; ret; 
0x000c5d79: mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000c5d79: mov eax, 0xfc; call dword ptr gs:[0x10]; mov eax, 1; int 0x80; 
0x000fff96: mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000fffe2: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000c6fd0: mov eax, 0xfffa; pop ebx; ret; 
0x00033950: mov eax, 0xffffe2a0; cmp esi, edi; jae 0x33969; lea esi, [esi]; call dword ptr [esi]; 
0x00069051: mov eax, 0xfffffff; xchg esp, eax; ret 0xd009; 
0x00070fa3: mov eax, 0xfffffff; xchg esp, eax; ret 0xd108; 
0x0001b8c5: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00078de0: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00024c0f: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f5c3d: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003107d: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00030d7d: mov eax, 0xffffffff; pop ebx; ret; 
0x00031871: mov eax, 0xffffffff; pop edi; ret; 
0x0006a3c9: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0001b006: mov eax, 0xffffffff; ret; 
0x000bee41: mov eax, 1; add esp, 0xc; ret; 
0x000d06cb: mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000f84bf: mov eax, 1; add esp, 8; pop ebx; ret; 
0x000ff404: mov eax, 1; call dword ptr gs:[0x10]; 
0x000c5d85: mov eax, 1; int 0x80; 
0x00156250: mov eax, 1; ja 0x156259; neg eax; ret; 
0x00157a90: mov eax, 1; ja 0x157a99; neg eax; pop ebp; ret; 
0x0015ce90: mov eax, 1; ja 0x15ce99; neg eax; ret; 
0x0015d180: mov eax, 1; ja 0x15d189; neg eax; pop ebp; ret; 
0x0015d340: mov eax, 1; ja 0x15d349; neg eax; ret; 
0x0015de27: mov eax, 1; ja 0x15de30; neg eax; ret; 
0x0015f0a8: mov eax, 1; ja 0x15f0b1; neg eax; ret; 
0x00160721: mov eax, 1; ja 0x16072a; neg eax; ret; 
0x0015ed36: mov eax, 1; jg 0x15ed40; neg eax; ret; 
0x0015f061: mov eax, 1; jg 0x15f070; neg eax; ret; 
0x00163161: mov eax, 1; jg 0x163170; neg eax; ret; 
0x000b25b0: mov eax, 1; jg 0xb25b9; neg eax; ret; 
0x0010794e: mov eax, 1; mov dword ptr [esi + 0x20], edx; pop esi; pop edi; ret; 
0x0009e2a7: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0006a3a2: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x000f14eb: mov eax, 1; pop ebx; pop esi; ret; 
0x000cc7d0: mov eax, 1; pop ebx; ret; 
0x00043a20: mov eax, 1; pop esi; pop edi; ret; 
0x00031b28: mov eax, 1; ret; 
0x0012ab12: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000c747f: mov eax, 1; test ecx, ecx; js 0xc7490; ret; 
0x00125dc2: mov eax, 2; pop ebx; pop esi; ret; 
0x000b27c0: mov eax, 2; ret; 
0x000ed0bb: mov eax, 3; call dword ptr gs:[0x10]; 
0x000bee7b: mov eax, 3; cmovne eax, edx; ret; 
0x000f5961: mov eax, 3; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b27d0: mov eax, 3; ret; 
0x0013cbd4: mov eax, 4; add esp, 0xc; ret; 
0x000ed15b: mov eax, 4; call dword ptr gs:[0x10]; 
0x000f59d1: mov eax, 4; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00162a3d: mov eax, 4; pop edi; ret; 
0x000b27e0: mov eax, 4; ret; 
0x000e6da0: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b27f0: mov eax, 5; ret; 
0x000edc83: mov eax, 6; call dword ptr gs:[0x10]; 
0x00119617: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00119b70: mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x000f5671: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b2800: mov eax, 6; ret; 
0x000b2810: mov eax, 7; ret; 
0x0013cbc0: mov eax, 8; add esp, 0xc; ret; 
0x000eddd7: mov eax, 8; call dword ptr gs:[0x10]; 
0x0007b748: mov eax, 8; cmovne eax, edx; mov dword ptr [ecx + 0x1e08], eax; ret; 
0x00162a96: mov eax, 8; pop edi; ret; 
0x000ef15a: mov eax, 9; call dword ptr gs:[0x10]; 
0x000ea741: mov eax, 9; pop esi; pop edi; ret; 
0x000c0992: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0008f0ac: mov eax, dword ptr [0x5bfffffd]; ret; 
0x00126743: mov eax, dword ptr [0x83ffef29]; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f634b: mov eax, dword ptr [0x90fff24c]; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00152dbe: mov eax, dword ptr [0xc381fffe]; jg 0x152d9b; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152d25: mov eax, dword ptr [0xc381fffe]; sbb bh, dl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001010fc: mov eax, dword ptr [0xc]; test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001011a7: mov eax, dword ptr [0xc]; test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00035282: mov eax, dword ptr [0xc]; test eax, eax; jne 0x352b0; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000c58a7: mov eax, dword ptr [0xc]; test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c5ab6: mov eax, dword ptr [0xc]; test eax, eax; jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea36c: mov eax, dword ptr [0xc]; test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea41c: mov eax, dword ptr [0xc]; test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ed0b2: mov eax, dword ptr [0xc]; test eax, eax; jne 0xed0e0; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed152: mov eax, dword ptr [0xc]; test eax, eax; jne 0xed180; mov eax, 4; call dword ptr gs:[0x10]; 
0x000edc7a: mov eax, dword ptr [0xc]; test eax, eax; jne 0xedca0; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eddce: mov eax, dword ptr [0xc]; test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f4442: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf4470; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000f4de0: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f5450: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55d0: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f6852: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf6880; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68f2: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf6920; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f6a5c: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6bcc: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f785c: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f7a3a: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf7a60; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7ada: mov eax, dword ptr [0xc]; test eax, eax; jne 0xf7b00; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000fa24c: mov eax, dword ptr [0xc]; test eax, eax; jne 0xfa260; sub dword ptr [edx + 0x24f0], 1; ret; 
0x000fae52: mov eax, dword ptr [0xc]; test eax, eax; jne 0xfae80; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000ff7e7: mov eax, dword ptr [0xc]; test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff897: mov eax, dword ptr [0xc]; test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff947: mov eax, dword ptr [0xc]; test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ffa00: mov eax, dword ptr [0xc]; test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ffab2: mov eax, dword ptr [0xc]; test eax, eax; jne 0xffae0; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x001202a6: mov eax, dword ptr [0xf0b8]; add byte ptr [ebp + 0x31809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00122234: mov eax, dword ptr [0xfeca26e8]; jmp dword ptr [esi - 0x70]; 
0x0007b311: mov eax, dword ptr [8]; ret; 
0x0012dd48: mov eax, dword ptr [bp + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0007060f: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x000f7571: mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0xf7579; ret; 
0x0007c869: mov eax, dword ptr [eax + 0x14]; mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000c0704: mov eax, dword ptr [eax + 0x14]; ret; 
0x0010c47c: mov eax, dword ptr [eax + 0x18]; ret; 
0x0007a784: mov eax, dword ptr [eax + 0x19e0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a7c4: mov eax, dword ptr [eax + 0x19e4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a804: mov eax, dword ptr [eax + 0x19e8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a844: mov eax, dword ptr [eax + 0x19ec]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a884: mov eax, dword ptr [eax + 0x19f0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8c4: mov eax, dword ptr [eax + 0x19f4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a904: mov eax, dword ptr [eax + 0x19f8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a944: mov eax, dword ptr [eax + 0x19fc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a984: mov eax, dword ptr [eax + 0x1a00]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a9c4: mov eax, dword ptr [eax + 0x1a04]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa04: mov eax, dword ptr [eax + 0x1a08]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa45: mov eax, dword ptr [eax + 0x1a0c]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f5f4: mov eax, dword ptr [eax + 0x1a10]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f634: mov eax, dword ptr [eax + 0x1a14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f674: mov eax, dword ptr [eax + 0x1a18]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6b4: mov eax, dword ptr [eax + 0x1a1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6f4: mov eax, dword ptr [eax + 0x1a20]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f735: mov eax, dword ptr [eax + 0x1a24]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa8a: mov eax, dword ptr [eax + 0x1a28]; push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007aac5: mov eax, dword ptr [eax + 0x1a2c]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab05: mov eax, dword ptr [eax + 0x1a30]; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab44: mov eax, dword ptr [eax + 0x1a34]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab84: mov eax, dword ptr [eax + 0x1a38]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007abc4: mov eax, dword ptr [eax + 0x1a3c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac04: mov eax, dword ptr [eax + 0x1a40]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac44: mov eax, dword ptr [eax + 0x1a44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac84: mov eax, dword ptr [eax + 0x1a48]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00030c2a: mov eax, dword ptr [eax + 0x1a4c]; pop ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0002a27e: mov eax, dword ptr [eax + 0x1a58]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a22f: mov eax, dword ptr [eax + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a486: mov eax, dword ptr [eax + 0x1a5c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00051e6a: mov eax, dword ptr [eax + 0x1a70]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000c5d23: mov eax, dword ptr [eax + 0x1a84]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00123873: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x123883; sub esp, 0xc; push esi; call eax; 
0x00124251: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x124261; sub esp, 0xc; push esi; call eax; 
0x00125204: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x125214; sub esp, 0xc; push esi; call eax; 
0x001254cc: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x12535a; sub esp, 0xc; push edi; call eax; 
0x001255ad: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1255bd; sub esp, 0xc; push edi; call eax; 
0x00125e6a: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x125e7a; sub esp, 0xc; push edi; call eax; 
0x0012a656: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x12a666; sub esp, 0xc; push esi; call eax; 
0x0012bba3: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x12bbb3; sub esp, 0xc; push esi; call eax; 
0x0012bd5b: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x12bd6b; sub esp, 0xc; push edi; call eax; 
0x0012cfe4: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x12cff4; sub esp, 0xc; push ebp; call eax; 
0x001323dc: mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00102d00: mov eax, dword ptr [eax + 0x20]; ret; 
0x000fdad5: mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x001260f3: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x001323ec: mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x000fddb8: mov eax, dword ptr [eax + 0x260]; pop ebx; ret; 
0x000291c9: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029158: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0012a810: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00130640: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00029199: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029128: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342f0: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00029368: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00029348: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00029328: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x000292a8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000292e8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00029248: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x000292c8: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00029288: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00029208: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00029268: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00029308: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00029228: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00079d34: mov eax, dword ptr [eax + 0x34]; ret; 
0x00078b37: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x78b30; ret; 
0x00139930: mov eax, dword ptr [eax + 0x3750]; jmp dword ptr [eax + 8]; 
0x0013978b: mov eax, dword ptr [eax + 0x3750]; push ecx; push edx; call dword ptr [eax + 4]; 
0x001396e3: mov eax, dword ptr [eax + 0x3750]; push ecx; push edx; call dword ptr [eax]; 
0x00029388: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00071957: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x71960; ret; 
0x00029398: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000fddb0: mov eax, dword ptr [eax + 0x40]; pop ebx; ret; 
0x0004389e: mov eax, dword ptr [eax + 0x40]; ret; 
0x00031c3a: mov eax, dword ptr [eax + 0x48]; ret; 
0x001026e9: mov eax, dword ptr [eax + 0x4c]; call 0x1025c0; add esp, 4; ret; 
0x00031c1a: mov eax, dword ptr [eax + 0x4c]; ret; 
0x0013ca84: mov eax, dword ptr [eax + 0x50]; ret; 
0x0013cb04: mov eax, dword ptr [eax + 0x54]; ret; 
0x000281c5: mov eax, dword ptr [eax + 0x58]; ret; 
0x0013ca94: mov eax, dword ptr [eax + 0x5c]; ret; 
0x0006e2f8: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00079d0a: mov eax, dword ptr [eax + 0xc60]; ret; 
0x0001be9a: mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001beba: mov eax, dword ptr [eax + 0xf98]; ret; 
0x00024d5a: mov eax, dword ptr [eax + 0xfbc]; ret; 
0x00083624: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0x83620; mov eax, ecx; ret; 
0x00131770: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x001265f4: mov eax, dword ptr [eax + 4]; jmp eax; 
0x000fdd8e: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00083578: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x83570; xor eax, eax; ret; 
0x000ec6f6: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xec718; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000ec74b: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xec770; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000f5af4: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007b438: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00079a18: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0002919c: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00028c27: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0013ca28: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0013ca48: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002912b: mov eax, dword ptr [eax + edx*4]; ret; 
0x0005f38e: mov eax, dword ptr [eax + edx*4]; sub esp, 4; push esi; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x0006421e: mov eax, dword ptr [eax + edx]; sub esp, 4; push dword ptr [ebp - 0x8e8]; push edi; push dword ptr [ebp - 0x89c]; call eax; 
0x0001b5ba: mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x000c71c0: mov eax, dword ptr [eax - 0x108]; cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000ffcb8: mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00031864: mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop edi; ret; 
0x000319d8: mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000319fa: mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0013f7ba: mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; xor eax, eax; ret; 
0x000c70e0: mov eax, dword ptr [eax - 0x108]; mov edx, 0xffffffff; cmp dword ptr gs:[eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x00139475: mov eax, dword ptr [eax - 0x10c]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x00102cfa: mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000fdacf: mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x001394ad: mov eax, dword ptr [eax - 0x10c]; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x0010f00a: mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x000293da: mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x000290de: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000290ae: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002907e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00028fce: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002902e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00028f4e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00028ffe: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00028f9e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002916e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00028f7e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002905e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00028f2e: mov eax, dword ptr [eax - 0x140]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00028c1e: mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000291be: mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002918e: mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000281ba: mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0004d2a5: mov eax, dword ptr [eax - 0x16c]; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x4abe0; add esp, 0x1c; ret; 
0x0010c4a2: mov eax, dword ptr [eax - 0x178]; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x10af20; add esp, 0x1c; ret; 
0x0012f20a: mov eax, dword ptr [eax - 0x184]; mov eax, dword ptr gs:[eax]; test eax, eax; je 0x12f220; ret; 
0x0011f49a: mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x00050228: mov eax, dword ptr [eax - 0x2c]; push dword ptr [eax]; call 0x51940; add esp, 0x1c; ret; 
0x0006d828: mov eax, dword ptr [eax - 0x2c]; push dword ptr [eax]; call 0x58160; add esp, 0x1c; ret; 
0x000de55e: mov eax, dword ptr [eax - 0x30]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00083334: mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0015c7fd: mov eax, dword ptr [eax - 0x7400075c]; test byte ptr [ebx - 0x75b80], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00159ff0: mov eax, dword ptr [eax - 0x7400075c]; test byte ptr [ebx - 0x75b80], al; sub eax, ecx; pop ebx; ret; 
0x0004a7c7: mov eax, dword ptr [eax - 0x74]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0006d7c7: mov eax, dword ptr [eax - 0x74]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x0002b1a4: mov eax, dword ptr [eax - 0x74ffffef]; sbb dword ptr [edx + ebx], 0; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002941a: mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293fa: mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x001533f3: mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000aa87c: mov eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xf839; 
0x000bf0c9: mov eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0x109; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000737b4: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00073784: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0007b69f: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x7b6b0; ret; 
0x0007b72f: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x7b740; ret; 
0x0007b56f: mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x7b580; ret; 
0x0007b6df: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x001265ec: mov eax, dword ptr [eax]; jmp eax; 
0x0006e12c: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000453f6: mov eax, dword ptr [eax]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x14; ret; 
0x000291c7: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029156: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029197: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029126: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000342ee: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x000281c3: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00028c25: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000291c5: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029154: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029195: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029124: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000281c1: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0012e03d: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012a0b8: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0012a173: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x00129f6d: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x000290e5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000290b5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00029085: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00028fd5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00029035: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00028f55: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00029005: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00028fa5: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00029175: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00028f85: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00029065: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00028f35: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000c0ae4: mov eax, dword ptr [eax]; ret; 
0x00074884: mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00074894: mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00027448: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0012f211: mov eax, dword ptr [eax]; test eax, eax; je 0x12f220; ret; 
0x0007b1eb: mov eax, dword ptr [eax]; test eax, eax; je 0x7b1f3; call eax; 
0x0007e416: mov eax, dword ptr [eax]; test eax, eax; je 0x7e41e; call eax; 
0x000fcf6f: mov eax, dword ptr [eax]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0b3: mov eax, dword ptr [eax]; test eax, eax; je 0xfd1a0; call eax; 
0x000799fe: mov eax, dword ptr [eax]; test eax, eax; jne 0x799f8; ret; 
0x000294af: mov eax, dword ptr [ebp + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00029624: mov eax, dword ptr [ebp + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012519f: mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0012d53f: mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x0012d5ab: mov eax, dword ptr [ebp + 0x3c]; push esi; call dword ptr [eax + 0x10]; 
0x0012a63a: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00130738: mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00102d17: mov eax, dword ptr [ebp + 4]; call 0x102240; pop edx; pop ecx; pop eax; ret; 
0x0009e771: mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x0007d9c4: mov eax, dword ptr [ebp - 0x170]; push 0; call dword ptr [eax]; 
0x0007d7a9: mov eax, dword ptr [ebp - 0x170]; push esi; call dword ptr [eax]; 
0x000c86ae: mov eax, dword ptr [ebp - 0x194]; call dword ptr [eax + 0x10]; 
0x000c854b: mov eax, dword ptr [ebp - 0x194]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000c867e: mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000c1300: mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c0ee4: mov eax, dword ptr [ebp - 0x34]; test eax, eax; je 0xc0f00; sub esp, 0xc; push esi; call eax; 
0x0013c2d4: mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x00119b6a: mov eax, dword ptr [ebp - 0x3c]; mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x000fc4bf: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0001c080: mov eax, dword ptr [ebp - 0x40]; call eax; 
0x0006fa09: mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x0005937f: mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058a97: mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x0005897e: mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000584f7: mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x000bc914: mov eax, dword ptr [ebp - 0x94]; add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x001240a8: mov eax, dword ptr [ebp]; mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00123fe9: mov eax, dword ptr [ebp]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x001240de: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000737fa: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x001240ce: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00123fd3: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0012401e: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0012423b: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0012570b: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0002a85a: mov eax, dword ptr [ebx + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000289bd: mov eax, dword ptr [ebx + 0x1a58]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028573: mov eax, dword ptr [ebx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00025f49: mov eax, dword ptr [ebx + 0x1a5c]; mov ecx, dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x000263e5: mov eax, dword ptr [ebx + 0x1a5c]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00026216: mov eax, dword ptr [ebx + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00084763: mov eax, dword ptr [ebx + 0x1a64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0008353d: mov eax, dword ptr [ebx + 0x20]; je 0x83550; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x001260a9: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0012caa1: mov eax, dword ptr [ebx + 0x50]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0012ca85: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00129f49: mov eax, dword ptr [ebx + 0xb0]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0010bc33: mov eax, dword ptr [ebx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0010bad5: mov eax, dword ptr [ebx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0012677b: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00124d7b: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001248dd: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00124d8e: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0012b470: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0012669b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0012664b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x001247be: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0012b4f3: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00124d58: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00107bc7: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0012faa3: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0012fcfb: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0012fbde: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000fc0aa: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0xfc0dc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0015c802: mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00159ff5: mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x00125dd0: mov eax, dword ptr [ebx + ecx*4 - 0x2a4]; pop ebx; pop esi; jmp eax; 
0x000e88c7: mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x000fbd88: mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0010e660: mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00030d70: mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0002f613: mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0002fc01: mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x000fdd98: mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x0008b41f: mov eax, dword ptr [ebx - 0x190]; push dword ptr gs:[eax]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x000fcf66: mov eax, dword ptr [ebx - 0x6c]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0xfcfd0; call eax; 
0x000fd0aa: mov eax, dword ptr [ebx - 0x6c]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0xfd1a0; call eax; 
0x0007e40d: mov eax, dword ptr [ebx - 0xd8]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x7e41e; call eax; 
0x0011f5c0: mov eax, dword ptr [ebx]; add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0012e995: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0012e166: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012e046: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0012e038: mov eax, dword ptr [ebx]; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x000bfe79: mov eax, dword ptr [ecx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00073764: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x00091134: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x00091264: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0009b4f7: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd54: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x0008ce84: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x00095b14: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x00095b74: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000944c4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00091115: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x00091255: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0008cd45: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x0008ce75: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x001324de: mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00131ade: mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x000959fa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x00095b5a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000943ba: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0009451a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000912c4: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cee4: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00095a1a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x00095b7a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0009b58b: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000943da: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0009453a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000959db: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x00095b3b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0009b54c: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0009439b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000944fb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000912e4: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008cf04: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000912a5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cec5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00079a39: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006390e: mov eax, dword ptr [ecx + eax*4 - 0x62a00]; lea eax, [ecx + eax - 0x180aae]; jmp eax; 
0x000e7ca5: mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x00030ea0: mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0013d010: mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x000c01e8: mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0002914d: mov eax, dword ptr [ecx - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002911d: mov eax, dword ptr [ecx - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00091000: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x00091230: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x00092e2d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x00091240: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x0008ce60: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x00091250: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0008ce70: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00091260: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x0008ce80: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000944c0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0009b4a3: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea3d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc40: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0008faf0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x0008ce50: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00079a08: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x000910d1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x00091211: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x00091221: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0008ce41: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0009b474: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd11: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0008ce31: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0009d89f: mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x0006e6c5: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0006e565: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0006af0f: mov eax, dword ptr [edi + 0x1a44]; push dword ptr [esp + 0x14]; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00029f7f: mov eax, dword ptr [edi + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028ab1: mov eax, dword ptr [edi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028a89: mov eax, dword ptr [edi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a666: mov eax, dword ptr [edi + 0x1a5c]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a254: mov eax, dword ptr [edi + 0x1a5c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012cfd1: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00125ac0: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00125a44: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00125aeb: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0012efbc: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x00126297: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00126254: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00033860: mov eax, dword ptr [edi - 4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0006f0f7: mov eax, dword ptr [edx + 0x10]; cmp dword ptr [edx + 4], eax; cmovae eax, dword ptr [edx + 4]; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0007383e: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007a3f4: mov eax, dword ptr [edx + 0x14]; cmp dword ptr [edx + 8], eax; cmovae eax, dword ptr [edx + 8]; sub eax, dword ptr [edx + 0xc]; ret; 
0x00073850: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0013f772: mov eax, dword ptr [edx + 0x19c0]; test eax, eax; jne 0x13f79b; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000bfe35: mov eax, dword ptr [edx + 0x1a5c]; lea edx, [edx + 0xfe0]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007372e: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0012e98e: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00073740: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0007127d: mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x00029470: mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x001398db: mov eax, dword ptr [edx + 0xc]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x001326b4: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001316c0: mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x001316d0: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x001249d6: mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x001323e8: mov eax, dword ptr [edx + 4]; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x001265f0: mov eax, dword ptr [edx + 4]; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x00124a76: mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x000f5b0c: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0005e96d: mov eax, dword ptr [edx + eax*4 - 0x62e00]; lea eax, [edx + eax - 0x185a90]; jmp eax; 
0x000c7490: mov eax, dword ptr [edx - 0x108]; cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000f2a70: mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x000c0230: mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0001b8b8: mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00071960: mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x000f756b: mov eax, dword ptr [edx - 0x10c]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0xf7579; ret; 
0x0006e595: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0006e715: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0006c8f7: mov eax, dword ptr [edx]; ret; 
0x000756ef: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x000273d4: mov eax, dword ptr [esi + 0x10]; test eax, eax; je 0x273e4; sub esp, 0xc; push esi; call eax; 
0x000bfc71: mov eax, dword ptr [esi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bfc43: mov eax, dword ptr [esi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001af0a: mov eax, dword ptr [esi + 0x1a7c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000d1830: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0012dd49: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000ed781: mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010bb43: mov eax, dword ptr [esi + 0xc]; push ebx; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x001315e0: mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131620: mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x00131e1f: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x001315c3: mov eax, dword ptr [esi + 4]; push ecx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131603: mov eax, dword ptr [esi + 4]; push ecx; push edx; push esi; call dword ptr [eax + 8]; 
0x000c7694: mov eax, dword ptr [esi + ebx*4 - 0x6096c]; add eax, esi; jmp eax; 
0x00031070: mov eax, dword ptr [esi - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0011d5f7: mov eax, dword ptr [esi - 0x108]; mov dword ptr gs:[eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000eae2c: mov eax, dword ptr [esi]; mov ecx, dword ptr [edx + eax*4 - 0x5f0c0]; add ecx, edx; jmp ecx; 
0x0010e098: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x00030660: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0006d190: mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x0013b0e8: mov eax, dword ptr [esp + 0x10]; call eax; 
0x0002f581: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0002f576: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00145ab0: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00081ca6: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], edx; xor eax, eax; add esp, 0xc; ret; 
0x001026e5: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x1025c0; add esp, 4; ret; 
0x0009e27f: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000fab5c: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000bf37b: mov eax, dword ptr [esp + 0x14]; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0006d8cc: mov eax, dword ptr [esp + 0x14]; pop ebx; pop esi; pop edi; ret; 
0x0010840a: mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0012bbd4: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0006294f: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0012385c: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0001b59d: mov eax, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x0005d93f: mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0002ca1a: mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x9d3a0; add esp, 0x1c; ret; 
0x00131677: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x000327a9: mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012c439: mov eax, dword ptr [esp + 0x20]; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x001221be: mov eax, dword ptr [esp + 0x24]; call eax; 
0x001004fe: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010080f: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000eab2c: mov eax, dword ptr [esp + 0x24c]; mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010816f: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x00125e3b: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00107d4b: mov eax, dword ptr [esp + 0x28]; call eax; 
0x0010060e: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011687b: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0007db35: mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x000b35ba: mov eax, dword ptr [esp + 0x34]; call eax; 
0x0007112e: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0010058f: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012a1cc: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00100899: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f770: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e0: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f850: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b3: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f913: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f980: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa00: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x0002077f: mov eax, dword ptr [esp + 0x40]; call eax; 
0x0010093a: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00100797: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ad854: mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x0001e4b9: mov eax, dword ptr [esp + 0x44]; call eax; 
0x00100b69: mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012bf02: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0012bdac: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0001dfb9: mov eax, dword ptr [esp + 0x48]; call eax; 
0x00065dfc: mov eax, dword ptr [esp + 0x48]; movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0001fc89: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0001f0de: mov eax, dword ptr [esp + 0x50]; call eax; 
0x000b3b1d: mov eax, dword ptr [esp + 0x54]; call eax; 
0x000ff32c: mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000f5d05: mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001251ec: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00120d99: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00031dda: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000de1e4: mov eax, dword ptr [esp + 0xc]; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x000c199b: mov eax, dword ptr [esp + 0xc]; call eax; 
0x0002f8e7: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000bee88: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], ebx; xor eax, eax; pop ebx; ret; 
0x00083330: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x00101940: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0002f370: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0009c092: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00162852: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0012feb6: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x00034d63: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db6: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x00132a40: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0011a560: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00074870: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000291e0: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0010ecd0: mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x0010ecc0: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00034180: mov eax, dword ptr [esp + 4]; cdq; xor eax, edx; sub eax, edx; ret; 
0x000eb376: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000eb35e: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000c0700: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013063c: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00079d30: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0013ca30: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0013ca60: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0013ca80: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0013cb00: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013caf0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0013ca90: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000f5af0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0013ca44: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000737b0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00073780: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0007b69b: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x7b6b0; ret; 
0x0007b72b: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x7b740; ret; 
0x0007b56b: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x80000; jbe 0x7b580; ret; 
0x0007b6db: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x000c0ae0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00074880: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x00074890: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00132a50: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0013ca70: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x000ea980: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00079a10: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca20: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027440: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000ea960: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00079d40: mov eax, dword ptr [esp + 4]; ret; 
0x00073790: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x000737a0: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0009dc21: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0007b330: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0002fb6f: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0007b4f6: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00119611: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0014c596: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00069b47: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00029380: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029390: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00030bf9: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000ea937: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0006e97c: mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x001461c5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0009dbf7: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00098c72: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013cee9: mov eax, dword ptr [esp]; ret; 
0x000fc0a9: mov eax, dword ptr es:[ebx + 8]; test eax, eax; jne 0xfc0dc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0001eb16: mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x00023564: mov eax, dword ptr fs:[esp + 0x50]; call eax; 
0x000c0991: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001010fb: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001011a6: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00035281: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0x352b0; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000c58a6: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c5ab5: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea36b: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea41b: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ed0b1: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xed0e0; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed151: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xed180; mov eax, 4; call dword ptr gs:[0x10]; 
0x000edc79: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xedca0; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eddcd: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f4441: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf4470; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000f4ddf: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f544f: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55cf: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f6851: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6880; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68f1: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6920; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f6a5b: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6bcb: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f785b: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f7a39: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf7a60; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7ad9: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xf7b00; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000fa24b: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xfa260; sub dword ptr [edx + 0x24f0], 1; ret; 
0x000fae51: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xfae80; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000ff7e6: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff896: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff946: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ff9ff: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ffab1: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xffae0; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0007b310: mov eax, dword ptr gs:[8]; ret; 
0x00028c24: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000291c4: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029153: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029194: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00029123: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000281c0: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x000290e4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000290b4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00029084: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00028fd4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00029034: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00028f54: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00029004: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00028fa4: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00029174: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00028f84: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00029064: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00028f34: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0011f4a0: mov eax, dword ptr gs:[eax]; ret; 
0x0012f210: mov eax, dword ptr gs:[eax]; test eax, eax; je 0x12f220; ret; 
0x0012423a: mov eax, dword ptr gs:[ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0011f5bf: mov eax, dword ptr gs:[ebx]; add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0003280d: mov eax, dword ptr ss:[esp + 0x20]; call eax; 
0x0007adcf: mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000a0aa6: mov eax, ebp; pop ebp; ret; 
0x00043c75: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x000303ac: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001f074: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009d4cc: mov eax, ebp; pop edi; pop ebp; ret; 
0x00029b46: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0013ea8d: mov eax, ebp; sar ebx, 0x1f; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x000c5908: mov eax, ebx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000352e8: mov eax, ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00031205: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000f65f6: mov eax, ebx; call 0xf6520; sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x0007736b: mov eax, ebx; call dword ptr [eax + 0xc]; 
0x00087bf5: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0006d72c: mov eax, ebx; mov byte ptr [edx], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000748bb: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x000ff101: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x00126006: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0001e52b: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011b519: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x00028c66: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000311d0: mov eax, ebx; pop ebx; pop esi; ret; 
0x000ac941: mov eax, ebx; pop ebx; pop esi; sub eax, edx; pop edi; ret; 
0x00045a4b: mov eax, ebx; pop ebx; ret 4; 
0x0009f298: mov eax, ebx; pop ebx; ret; 
0x0011b3db: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00050845: mov eax, ebx; test edx, edx; jne 0x50850; add esp, 8; pop ebx; ret; 
0x000341df: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0006d3fe: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0006c7af: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x0006d592: mov eax, ecx; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0001c6b3: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003164b: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0004d2f9: mov eax, ecx; pop ebx; pop esi; ret; 
0x000b293e: mov eax, ecx; pop ebx; ret; 
0x0009d379: mov eax, ecx; pop ebx; sub eax, esi; pop esi; ret; 
0x0006ec81: mov eax, ecx; pop edi; pop ebp; ret; 
0x0006c7c7: mov eax, ecx; pop edi; ret; 
0x0006ed79: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00107dee: mov eax, ecx; pop esi; pop edi; ret; 
0x0010ed2f: mov eax, ecx; ret 4; 
0x00028b2f: mov eax, ecx; ret; 
0x00073a08: mov eax, edi; call dword ptr gs:[0x10]; 
0x000c1b01: mov eax, edi; call eax; 
0x000a050b: mov eax, edi; dec dword ptr [ebx - 0x72e3db8c]; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000a052b: mov eax, edi; jmp dword ptr [esi - 0x70]; 
0x000d70c1: mov eax, edi; mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x0009b3f9: mov eax, edi; pop ebx; pop edi; ret; 
0x0001cb5e: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00083c9a: mov eax, edi; pop ebx; pop esi; pop edi; ret 4; 
0x00033aa4: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00145361: mov eax, edi; pop edi; cmova eax, edx; pop ebp; ret; 
0x0003466f: mov eax, edi; pop edi; pop ebp; ret; 
0x0008ea41: mov eax, edi; pop edi; pop ebx; ret; 
0x000955f0: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x0008cc44: mov eax, edi; pop edi; ret; 
0x000698b6: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0003535c: mov eax, edi; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000700fa: mov eax, edi; sub esp, 4; push eax; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x0002fd1a: mov eax, edx; add esp, 0x1c; ret 4; 
0x000299e1: mov eax, edx; add esp, 0xc; ret; 
0x0001af40: mov eax, edx; call dword ptr gs:[0x10]; 
0x000db17d: mov eax, edx; jmp edi; 
0x0008b003: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0014803e: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00031b17: mov eax, edx; mov edx, dword ptr [eax]; test edx, edx; je 0x31b10; xor eax, eax; ret; 
0x0001e01a: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010180e: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00041810: mov eax, edx; pop ebx; pop esi; ret; 
0x00049c87: mov eax, edx; pop ebx; ret 4; 
0x0002818e: mov eax, edx; pop ebx; ret; 
0x0007a061: mov eax, edx; pop edi; pop ebp; ret; 
0x001476b1: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00033c2c: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00043d09: mov eax, edx; pop esi; pop edi; ret; 
0x00028180: mov eax, edx; ret; 
0x0002f363: mov eax, edx; sar eax, 0x10; ret; 
0x0002f68e: mov eax, edx; shr eax, 0x1f; ret; 
0x0008f0f8: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0x8ee51; pop ebx; ret; 
0x0008f010: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0x8ee51; pop ebx; ret; 
0x0008f02e: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0x8ee51; pop ebx; ret; 
0x0008f04e: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0x8ee51; pop ebx; ret; 
0x0008f072: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0x8ee51; pop ebx; ret; 
0x0008f0a2: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0x8ee51; pop ebx; ret; 
0x0008f0d2: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0x8ee51; pop ebx; ret; 
0x0008eee4: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0x8ee51; pop ebx; ret; 
0x0008ef06: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0x8ee51; pop ebx; ret; 
0x0008ef2c: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0x8ee51; pop ebx; ret; 
0x0008ef44: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0x8ee51; pop ebx; ret; 
0x0008ef6a: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0x8ee51; pop ebx; ret; 
0x0008ef8c: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0x8ee51; pop ebx; ret; 
0x0008efaa: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0x8ee51; pop ebx; ret; 
0x0008efc8: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0x8ee51; pop ebx; ret; 
0x0008efee: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0x8ee51; pop ebx; ret; 
0x0006b576: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00034251: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00088af4: mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0002fe36: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000235e5: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004a82f: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00083d77: mov eax, esi; pop ebx; pop esi; ret 4; 
0x0006b556: mov eax, esi; pop ebx; pop esi; ret; 
0x0002573a: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0004a8e3: mov eax, esi; pop esi; pop edi; ret; 
0x0006fe22: mov eax, esi; push ebx; push ecx; push dword ptr [esp + 0x1c]; call dword ptr [eax + 0x40]; 
0x0013f7a1: mov eax, esi; ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x0009cef1: mov ebp, 0x10ea83c0; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x30]; ret; 
0x0009cee1: mov ebp, 0x20ea83c0; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x20]; ret; 
0x000a2866: mov ebp, 0x2444c704; adc al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7e377626], cl; ret 0; 
0x00098c59: mov ebp, 0x3000e96; or al, 0x91; jmp ecx; 
0x0009ced1: mov ebp, 0x30ea83c0; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x10]; ret; 
0x0009cfc2: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x0009cec1: mov ebp, 0x40ea83c0; add edx, eax; jl 0x9cf00; add eax, ecx; ret; 
0x0015ef9f: mov ebp, 0x5b000000; ret; 
0x0009c776: mov ebp, 0x5ff801c0; ret; 
0x0009cf85: mov ebp, 0x5ff801ff; ret; 
0x0011b824: mov ebp, 0x81000216; ret; 
0x00153e24: mov ebp, 0x81fffe90; ret; 
0x00152d24: mov ebp, 0x81fffea1; ret; 
0x00152224: mov ebp, 0x81fffeac; ret; 
0x0014b524: mov ebp, 0x81ffff19; ret; 
0x00149524: mov ebp, 0x81ffff39; ret; 
0x0011761f: mov ebp, 0x83fffff9; les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00056bde: mov ebp, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x000f82e1: mov ebp, 0x8953000e; ret; 
0x0012d3b2: mov ebp, 0xc483ffee; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c439a: mov ebp, 0xc483fff8; and byte ptr [ecx - 0x72651439], cl; je 0xc43cd; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000f27a9: mov ebp, 0xc483fffa; or al, 0x89; ret 0x408d; 
0x000f06bd: mov ebp, 0xc483ffff; adc byte ptr [ebx - 0x16f7dbac], cl; ret; 
0x000fb3fa: mov ebp, 0xddfffffe; fmul dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0004fa1b: mov ebp, 0xf000000; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0007adc8: mov ebp, 0xf0; xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0004f3fe: mov ebp, 0xf0b8; add byte ptr [ebp + 0x19109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374ce: mov ebp, 0xf0b8; add byte ptr [ebp + 0x35849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071828: mov ebp, 0xf0b8; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00051dac: mov ebp, 0xfffffa64; movzx eax, al; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x000527f2: mov ebp, 0xfffffa64; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x0005241d: mov ebp, 0xfffffa64; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x0005249f: mov ebp, 0xfffffa64; movzx eax, bl; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x000e3eb8: mov ebp, 0xfffffeb0; add dword ptr [edi], ecx; xchg esp, eax; ret 0xf631; 
0x000ff505: mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00030bf6: mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0010eb72: mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x000f5d3a: mov ebp, dword ptr [edi]; call dword ptr gs:[0x10]; 
0x0007c778: mov ebp, dword ptr [esi - 0x170]; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x00101780: mov ebp, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0013cefd: mov ebp, dword ptr [esp]; ret; 
0x000f5d39: mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000c599f: mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a9d: mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c0d: mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010113d: mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00101432: mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f789d: mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea24d: mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2fd: mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000fad26: mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000fad9f: mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000f4cfd: mov ebp, eax; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00031d10: mov ebp, eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00101515: mov ebp, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x75; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00124d62: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0013c23c: mov ebp, eax; push ds; sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x000fcbfd: mov ebp, ebp; pop ebx; cli; call dword ptr [ecx + 0x50]; 
0x000fc427: mov ebp, ebx; push esi; call edi; 
0x000a0aa3: mov ebp, ecx; pop edi; mov eax, ebp; pop ebp; ret; 
0x00130ef5: mov ebp, edi; call dword ptr [eax - 0x73]; 
0x0007be51: mov ebp, edi; pop es; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000abacc: mov ebp, edx; add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000ff3f2: mov ebp, esi; call ebx; 
0x00043825: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0010183e: mov ebx, 0x16; mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0014564a: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00036c58: mov ebx, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx + 0x31142444], cl; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000fb851: mov ebx, 0x39000000; ret; 
0x00083449: mov ebx, 0x83000000; in al, dx; or byte ptr [esi - 1], dl; jae 0x83478; call eax; 
0x00138b46: mov ebx, 0x83000ab4; in al, dx; adc al, 0xff; je 0x138b74; sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; 
0x000a0646: mov ebx, 0x83001439; in al, dx; sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x0001d26f: mov ebx, 0x838d0000; jl 0x1d2e2; cli; call dword ptr [eax - 0x73]; 
0x000f5831: mov ebx, 0x83fff257; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008b429: mov ebx, 0x83fff8dc; les ebx, ptr [eax]; pop ebx; ret; 
0x000ffb31: mov ebx, 0x89fff1b4; ret; 
0x000f6a31: mov ebx, 0x89fff245; ret; 
0x000f6031: mov ebx, 0x89fff24f; ret; 
0x000ed131: mov ebx, 0x89fff2de; ret; 
0x0007f501: mov ebx, 0x89fffff0; ret; 
0x00068124: mov ebx, 0x8d000001; inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xb0e9; 
0x001013f6: mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x001014c2: mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0001d28e: mov ebx, 0xcae80000; sbb dword ptr [edi], ecx; add byte ptr [ebp - 0x593837d], cl; call dword ptr [eax - 0x73]; 
0x00101590: mov ebx, 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00145631: mov ebx, 0xebffed59; shr al, 1; and al, 0x96; cld; jmp dword ptr [esi - 0x70]; 
0x000b53c6: mov ebx, 0xf0b8; add byte ptr [ebp + 0x20c89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011091e: mov ebx, 0xf0b8; add byte ptr [ebp + 0x29e89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011157e: mov ebx, 0xf0b8; add byte ptr [ebp + 0x2a509b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011227e: mov ebx, 0xf0b8; add byte ptr [ebp + 0x2aa49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011369e: mov ebx, 0xf0b8; add byte ptr [ebp + 0x2b389b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012939e: mov ebx, 0xf0b8; add byte ptr [ebp + 0x33849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f7b7a: mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x0016bf36: mov ebx, 0xffffe29c; call 0x79260; cmp esi, edi; jae 0x16bf51; lea esi, [esi]; call dword ptr [esi]; 
0x00026144: mov ebx, 0xfffffc1c; test edx, edx; je 0x2614f; call edx; 
0x000262cd: mov ebx, 0xfffffc20; test edx, edx; je 0x262de; mov dword ptr [esp], eax; call edx; 
0x000ecc52: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000f91a2: mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x0011cc74: mov ebx, 2; call dword ptr gs:[0x10]; 
0x0004385a: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000739fa: mov ebx, 2; mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0010166a: mov ebx, 2; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00030e3d: mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eaba9: mov ebx, 2; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x001455f4: mov ebx, 3; call dword ptr gs:[0x10]; 
0x001016f2: mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x001004f6: mov ebx, 5; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00043895: mov ebx, dword ptr [eax + 0x34]; mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x001479f6: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00028cbf: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00119615: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00119615: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00125dd2: mov ebx, dword ptr [ebp + edi*8 - 1]; call ptr [ebx + 0x5e]; jmp eax; 
0x00119b75: mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00101c0c: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00101d49: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00101bbc: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00101cc3: mov ebx, dword ptr [ebp - 0x4f8]; mov edx, 2; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010c67f: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0012371c: mov ebx, dword ptr [ebx + 0x5e]; ret; 
0x001196d8: mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000e834a: mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x0010eb6a: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00051db4: mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x0015ddf3: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x15de10; pop ebx; ret; 
0x00040f4b: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f661d: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000faf53: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58c2: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ee8e3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef193: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003b3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00100143: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00100033: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00100183: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00100223: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd23: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb83: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000857d0: mov ebx, dword ptr [esp + 0x10]; mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x000f6ed1: mov ebx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b1: mov ebx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f59a0: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f5922: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000e1da0: mov ebx, dword ptr [esp + 0x10]; test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x0008afb8: mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b078: mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x000ffe48: mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x0007c6ef: mov ebx, dword ptr [esp + 0x14]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ba8e9: mov ebx, dword ptr [esp + 0x14]; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x0014537d: mov ebx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00145347: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4785: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0010b579: mov ebx, dword ptr [esp + 0x18]; je 0x10b588; add esp, 8; pop ebx; ret; 
0x000fab58: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ff3d3: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00080dab: mov ebx, dword ptr [esp + 0x1c]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f56f0: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000ed934: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ece89: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed2ac: mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016801e: mov ebx, dword ptr [esp + 0x20]; mov edx, dword ptr [ebx + esi*4 - 0x53538]; add edx, ebx; jmp edx; 
0x00166314: mov ebx, dword ptr [esp + 0x24]; mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x000bf221: mov ebx, dword ptr [esp + 0x30]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xbf2a0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f5e6a: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ff6ed: mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f7953: mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f4ea9: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f4f12: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000310ca: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ec3aa: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ef25e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0010031e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe0e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010025e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000edf2f: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xb7; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000f4d6e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbbe: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc1e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaee: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d9e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000806c6: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fffde: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000ff5b0: mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00050f6f: mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000ddb5d: mov ebx, dword ptr [esp + 0xc]; movzx edx, byte ptr [esi + 0x18]; mov ecx, dword ptr [ebx + edx*4 - 0x5fed8]; add ecx, ebx; jmp ecx; 
0x001000d6: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002a2: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001002e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100346: mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000fffb2: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000edd96: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001000b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00100376: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff06: mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000f7b52: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x001003e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100416: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100446: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00100472: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000c59f2: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ec0b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031146: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc6: mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ef2d2: mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000edcf2: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd72: mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000f79f2: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ff436: mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000ecac2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ecac2: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f7a12: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000edd16: mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6356: mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001002c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000f7e86: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade6: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb16: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec866: mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec896: mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc6: mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000ff282: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e62: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffde2: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000f7eb2: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00100282: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000f7816: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000c57c2: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00100002: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000c68a2: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ede92: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ffe76: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ff7b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ff7b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ed9b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000c6922: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000faf86: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb6: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000fafe2: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000e1c46: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c76: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1cd2: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000e1d12: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000e1d32: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000e1d56: mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a6: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef282: mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ffea6: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed6: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031726: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ede72: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000c6686: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000ff4a2: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4c2: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000ff4c2: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001001e6: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce6: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc76: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb46: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae6: mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000c5d75: mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000fff92: mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000ef156: mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00050f3a: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000eb3a5: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x001004a9: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100069: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf9: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a9: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f9: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd49: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6819: mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef229: mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6659: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff259: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100109: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf9: mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb9: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae19: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff39: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff69: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca9: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b9: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d99: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a9: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee879: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6969: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6999: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee849: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf19: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee9: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe9: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc49: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb19: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007d23f: mov ebx, dword ptr [esp + 8]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00031176: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000b4135: mov ebx, dword ptr [esp + 8]; test ecx, ecx; jne 0xb4158; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000c092e: mov ebx, dword ptr [esp + 8]; test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0013cee5: mov ebx, dword ptr [esp]; ret; 
0x0013f78d: mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00030e0c: mov ebx, eax; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000ff402: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000338dd: mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00030df0: mov ebx, ecx; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x0010de30: mov ebx, edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0007cde8: mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008158e: mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f73d8: mov ebx, edx; call dword ptr gs:[0x10]; 
0x00031156: mov ebx, edx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000f6e1d: mov ebx, edx; mov eax, 0x17a; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70fd: mov ebx, edx; mov eax, 0x17b; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000eb0b5: mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000eb0e0: mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000f62f9: mov ebx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ecad2: mov ebx, edx; ret; 
0x001365cb: mov ebx, esi; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f56fd: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0013f88f: mov ecx, 0x1e00; pop ebx; pop esi; pop edi; ret; 
0x000f7b7f: mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x0001fe8c: mov ecx, 0x29000003; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0012c612: mov ecx, 0x50fffa57; push 0; call 0x68c50; add esp, 0x18; pop ebx; ret; 
0x000f5d34: mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fb8: mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5fe5: mov ecx, 0x5409; mov edx, 1; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec8ca: mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b6c3: mov ecx, 0x7fffffff; mov eax, ecx; pop ebx; pop esi; ret; 
0x0007add1: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0014324a: mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0007accd: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00118e28: mov ecx, 0x81000240; ret; 
0x00085528: mov ecx, 0x81000b79; ret; 
0x000192e9: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0002a78c: mov ecx, 0x81; lea ebx, [edx + 0x1154]; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007cde3: mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00081589: mov ecx, 0x81; mov ebx, edi; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019491: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080021: mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338ce: mov ecx, 0x81; mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000339a6: mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00033ae0: mov ecx, 0x81; mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0001cdb3: mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0002a75d: mov ecx, 0x81; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00153d28: mov ecx, 0x81fffe91; ret; 
0x001164c5: mov ecx, 0x89fffa57; test dword ptr [ebx + edi*8 - 1], esi; call dword ptr [esi + 0x52]; 
0x00021f1d: mov ecx, 0x89fffffb; ret 0xe283; 
0x000202b5: mov ecx, 0x8b000001; je 0x202e0; cmp byte ptr [ebp - 0x5f7bf00a], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x0005643c: mov ecx, 0x8b90ffff; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0003a883: mov ecx, 0x8bfffee5; jl 0x3a8ae; cmp byte ptr [ebp - 0x58c8379], cl; call dword ptr [eax - 0x73]; 
0x000e602e: mov ecx, 0x94f8838d; cli; call dword ptr [eax - 0x73]; 
0x00079901: mov ecx, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001d6d2: mov ecx, 0xc483ffff; adc byte ptr [ecx + 0x74c085c1], cl; ret 0xec83; 
0x0002f9f4: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0002f6a4: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0009e2ac: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0006c7c0: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x00132785: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00132755: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x001265d0: mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000b2602: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x0003117a: mov ecx, 8; call dword ptr gs:[0x10]; 
0x000311dd: mov ecx, 8; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0013f788: mov ecx, 9; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000fab1e: mov ecx, dword ptr [eax + 0x19c]; test edx, edx; je 0xfab2e; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x001240b2: mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0012413d: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0004389b: mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x0006994f: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00153a42: mov ecx, dword ptr [eax + 1]; mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00153ac2: mov ecx, dword ptr [eax + 2]; mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x00154b96: mov ecx, dword ptr [eax + 4]; mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0012438b: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x000f5b88: mov ecx, dword ptr [eax + 8]; and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x0006de0c: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x001085f5: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x108600; xor eax, eax; pop ebx; ret; 
0x0001a6e3: mov ecx, dword ptr [eax - 0x100]; cmp dword ptr [ecx + 0x94], edx; jne 0x1a6be; ret; 
0x0002946a: mov ecx, dword ptr [eax - 0x8c]; mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00149f52: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf52: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x001533a2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0014a5f2: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001539c2: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000ce729: mov ecx, dword ptr [ebp - 0x2c]; mov edi, dword ptr [ecx + eax*4 - 0x603cc]; add edi, ecx; jmp edi; 
0x000333ee: mov ecx, dword ptr [ebp - 0x34]; mov eax, 0xf0; mov edx, 1; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000ccd61: mov ecx, dword ptr [ebp - 0x34]; mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x000739ff: mov ecx, dword ptr [ebp - 0x38]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00101c12: mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00101d4f: mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00101bc2: mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00101cce: mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000bc9d5: mov ecx, dword ptr [ebp - 0x94]; add ecx, dword ptr [ecx + eax*4 - 0x60bac]; jmp ecx; 
0x0012c43d: mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x000ba8ed: mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x00081abd: mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x00067ec6: mov ecx, dword ptr [ebx + eax*4 - 0x6257c]; add ecx, ebx; jmp ecx; 
0x00067e2a: mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x0002df84: mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x0015c7fb: mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00159fee: mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x0015e174: mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x000ddb65: mov ecx, dword ptr [ebx + edx*4 - 0x5fed8]; add ecx, ebx; jmp ecx; 
0x0007bdbb: mov ecx, dword ptr [ecx + 0x1dfc]; test ecx, ecx; jne 0x7bdd0; ret; 
0x0007b676: mov ecx, dword ptr [ecx + 0x548b0016]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0012c879: mov ecx, dword ptr [ecx + 8]; cmp eax, 0xf; ja 0x12c890; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x00108656: mov ecx, dword ptr [ecx - 0x140]; mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x0006d3d0: mov ecx, dword ptr [ecx - 0x36c91639]; cli; jmp dword ptr [esi - 0x70]; 
0x0010865d: mov ecx, dword ptr [ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x0010c188: mov ecx, dword ptr [edi + 0xc]; push esi; mov dword ptr [ebp - 0x44], ecx; push dword ptr [ebp - 0xbc]; push edx; call eax; 
0x000cd1e1: mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x00065e05: mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x000666a0: mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00066649: mov ecx, dword ptr [edi + eax*4 - 0x62880]; add ecx, ebx; jmp ecx; 
0x00066a81: mov ecx, dword ptr [edi + eax*4 - 0x62980]; add ecx, ebx; jmp ecx; 
0x000527fa: mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x00052425: mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x001258d0: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x125928; mov dword ptr [eax], 0; pop ebx; ret; 
0x0012c7b0: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0012d1a0: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00101936: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x101940; ret; 
0x0012e237: mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x000eae2e: mov ecx, dword ptr [edx + eax*4 - 0x5f0c0]; add ecx, edx; jmp ecx; 
0x000c7b19: mov ecx, dword ptr [edx + eax*4 - 0x60590]; add ecx, edx; jmp ecx; 
0x00060b2f: mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f78: mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x00061641: mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a9: mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a71: mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00065cc5: mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x00143376: mov ecx, dword ptr [edx + ecx]; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0010c51b: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x10c530; ret; 
0x000f5b06: mov ecx, dword ptr [edx]; test ecx, ecx; js 0xf5b14; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000b24d0: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000ef437: mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000b2550: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000b2570: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000e08b1: mov ecx, dword ptr [esi + eax*4 - 0x5fa08]; add ecx, esi; jmp ecx; 
0x000db6a3: mov ecx, dword ptr [esi + eax*4 - 0x5feec]; add ecx, esi; jmp ecx; 
0x000ba848: mov ecx, dword ptr [esi + eax*4 - 0x6135c]; add ecx, esi; jmp ecx; 
0x000e8001: mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x000b242b: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x00098cb0: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098c91: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00148040: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x000f57fe: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0010158c: mov ecx, dword ptr [esp + 0x10]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ec3a6: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ef25a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0010031a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe0a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010025a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d6a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbba: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc1a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaea: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d9a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffda: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000ff5ac: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00050f67: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0014557f: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010166f: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000f585e: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000fd219: mov ecx, dword ptr [esp + 0x10]; test eax, eax; jne 0xfd240; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000f6619: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000faf4f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58be: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ee8df: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef18f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003af: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0010013f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0010002f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0010017f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0010021f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd1f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcaf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb7f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000f591e: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00101784: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00025f4f: mov ecx, dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x000ffb58: mov ecx, dword ptr [esp + 0x14]; test edx, edx; je 0xffb90; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000ffe44: mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x000f6d45: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f7025: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x0014533f: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00126676: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00126636: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000fab54: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010e8da: mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e94a: mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x0011578b: mov ecx, dword ptr [esp + 0x1c]; sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x000ecc49: mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecc8e: mov ecx, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecdae: mov ecx, dword ptr [esp + 0x20]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001015db: mov ecx, dword ptr [esp + 0x20]; mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x0013a0f3: mov ecx, dword ptr [esp + 0x24]; call ecx; 
0x000ece8d: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed96f: mov ecx, dword ptr [esp + 0x24]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ececd: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecfed: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012f700: mov ecx, dword ptr [esp + 0x3c]; sub ecx, dword ptr gs:[0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x000668f1: mov ecx, dword ptr [esp + 0x48]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x00066697: mov ecx, dword ptr [esp + 0x48]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x000bf489: mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x000f4533: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000ff6e9: mov ecx, dword ptr [esp + 0x54]; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f45b3: mov ecx, dword ptr [esp + 0x54]; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f4ea1: mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0x58]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f45ee: mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000bf549: mov ecx, dword ptr [esp + 0x54]; mov edx, dword ptr [esp + 4]; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000bf507: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf434: mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000ed829: mov ecx, dword ptr [esp + 0x54]; mov edx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed871: mov ecx, dword ptr [esp + 0x54]; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001013a8: mov ecx, dword ptr [esp + 0x6c]; sub ecx, dword ptr gs:[0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x000ed220: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000eb39c: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7ca1: mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x00050f36: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001004a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100065: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6815: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef225: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6655: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff255: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100105: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff35: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff65: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee875: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6965: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6995: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee845: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000e1df6: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f6329: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f62fb: mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ede01: mov ecx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000e8343: mov ecx, dword ptr [esp + 0xc]; movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x0012e3ae: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8c5: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x00034e03: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e56: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea3: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef6: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000b31c3: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000f81b4: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc1e: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x000ec086: mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f7995: mov ecx, dword ptr [esp + 4]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f7957: mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000c747b: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xc7490; ret; 
0x0001b713: mov ecx, dword ptr [esp + 4]; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x000fada1: mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x001000d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100342: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000edd92: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00100372: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001003e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100412: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100442: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x000ec0b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031142: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ff432: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000edd12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6352: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000f7e82: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec862: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec892: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f7812: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ffe72: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ed9b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000faf82: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000e1c42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c72: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1d52: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ffea2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031722: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c6682: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001001e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc72: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb42: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000ef152: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x000ffa3d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f548d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff542: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f554d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69df: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b4f: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e1d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000c5997: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a95: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c05: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00101135: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010142a: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f7895: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea245: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2f5: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ff81d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff8cd: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff97d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011dd: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58dd: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ffaed: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352bd: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000fae8d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f688d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f692d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f447d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0ed: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed18d: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x000b42f6: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0013cef9: mov ecx, dword ptr [esp]; ret; 
0x0010865c: mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x0006d5b0: mov ecx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x000b2860: mov ecx, eax; mov eax, ecx; ret; 
0x000eb0b3: mov ecx, eax; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000eb0de: mov ecx, eax; mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00030e1a: mov ecx, eax; mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000b6c3d: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xb6c50; mov eax, edx; ret; 
0x000bef4f: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00030e44: mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0001af97: mov ecx, ebx; cmovne ecx, ebp; sub esp, 0xc; push ecx; call edx; 
0x00088f5e: mov ecx, ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x000beed3: mov ecx, edi; call dword ptr gs:[0x10]; 
0x00031d0e: mov ecx, edi; mov ebp, eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00031cc2: mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000c5bbd: mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x000857d4: mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x00069947: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00101839: mov ecx, edx; mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009dcb9: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d5e0: mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000c07d5: mov ecx, esi; call dword ptr gs:[0x10]; 
0x000310c8: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00035358: mov ecx, esi; xor edx, edx; mov eax, edi; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0010eb17: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c5e16: mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00123a43: mov edi, 0x24087; add byte ptr [ecx], ch; ret 0x5489; 
0x00153083: mov edi, 0x30003d3; sbb al, 0x8b; jmp ebx; 
0x00152583: mov edi, 0x30003de; sbb al, 0x8b; jmp ebx; 
0x001495c3: mov edi, 0x3000461; sbb al, 0x8b; jmp ebx; 
0x00095f03: mov edi, 0x3000ec2; or al, 0x91; jmp ecx; 
0x000b24bd: mov edi, 0x5f000000; pop esi; ret; 
0x000965ad: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x000ac88e: mov edi, 0x68fffa45; ret 2; 
0x000ac8ad: mov edi, 0x68fffa45; ret; 
0x000ac86f: mov edi, 0x68fffa45; rol dword ptr [edx], 0; add byte ptr [eax - 0x73], dl; sub esp, -0x75; cli; call dword ptr [eax - 0x18]; 
0x0010ec22: mov edi, 0x810002e2; ret; 
0x0010e622: mov edi, 0x810002e8; ret; 
0x00050e22: mov edi, 0x81000ec0; ret; 
0x0010808b: mov edi, 0x8953000d; ret; 
0x0007e03d: mov edi, 0x89ffffdb; ret; 
0x000f61f2: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0001ee92: mov edi, 0x8bfffffc; jl 0x1eebd; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax + 0x68]; 
0x000f835e: mov edi, 0x8d08ec83; xchg esi, eax; je 0xf83b3; cli; call dword ptr [edx - 0x77]; 
0x00125873: mov edi, 0xc4830000; adc byte ptr [ebp - 0x7c5b8b40], al; ret; 
0x0013d1c0: mov edi, 0xc483ffed; adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000776dc: mov edi, 0xf0b8; add byte ptr [ebp + 0x195c9f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00137626: mov edi, 0xf0b8; add byte ptr [ebp + 0x35849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5d2a: mov edi, 0xfffffef8; mov eax, 0x36; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f453c: mov edi, 8; call dword ptr gs:[0x10]; 
0x000f45b7: mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x0013e98c: mov edi, cs; add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000c5958: mov edi, dword ptr [0xc]; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c5bb7: mov edi, dword ptr [8]; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x00030bf3: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00076bae: mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x0006b636: mov edi, dword ptr [ebp - 0x1c]; sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x000c12fd: mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00051dab: mov edi, dword ptr [ebp - 0x59c]; movzx eax, al; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x000527f1: mov edi, dword ptr [ebp - 0x59c]; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x0005241c: mov edi, dword ptr [ebp - 0x59c]; movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x0005249e: mov edi, dword ptr [ebp - 0x59c]; movzx eax, bl; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x0010eb6f: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x000ce72c: mov edi, dword ptr [ecx + eax*4 - 0x603cc]; add edi, ecx; jmp edi; 
0x000ccd64: mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x000b0791: mov edi, dword ptr [ecx]; stc; dec dword ptr [ebx - 0x362f7b]; dec dword ptr [ebp - 0x3b7c50b2]; adc byte ptr [ebx - 0x36376b], cl; call ebx; 
0x000f5d29: mov edi, dword ptr [edi - 0x108]; mov eax, 0x36; mov ecx, 0x5401; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x00101843: mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010178c: mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000cd1dd: mov edi, dword ptr [esp + 0x18]; mov ecx, dword ptr [edi + eax*4 - 0x604bc]; add ecx, edi; jmp ecx; 
0x000cebaa: mov edi, dword ptr [esp + 0x18]; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x0006ffaa: mov edi, dword ptr [esp + 0x1c]; push edi; call dword ptr [ebx + 0x40]; 
0x000f4746: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000f59a8: mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f478d: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001017e3: mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ff3d7: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001015d7: mov edi, dword ptr [esp + 0x28]; mov ecx, dword ptr [esp + 0x20]; mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x000ed2b0: mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000f4cff: mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ec676: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012c410: mov edi, dword ptr [esp + 0x45c]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000f6ca7: mov edi, dword ptr [esp + 4]; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6f87: mov edi, dword ptr [esp + 4]; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x0013cef5: mov edi, dword ptr [esp]; ret; 
0x000ceba9: mov edi, dword ptr es:[esp + 0x18]; movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x000c5957: mov edi, dword ptr gs:[0xc]; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000c5bb6: mov edi, dword ptr gs:[8]; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x000a0242: mov edi, eax; jmp dword ptr [esi - 0x70]; 
0x000ff825: mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000bf551: mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000ecc96: mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ff8d5: mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff985: mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011e5: mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58e5: mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ed82f: mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000eced1: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecff1: mov edi, eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009db9d: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000f69ab: mov edi, ebp; call dword ptr gs:[0x10]; 
0x0014893d: mov edi, edi; jecxz 0x148929; mov al, byte ptr [0x81ffff45]; ret; 
0x0014a93d: mov edi, edi; jecxz 0x14a929; mov al, byte ptr [0x81ffff25]; ret; 
0x0014ec87: mov edi, edi; jecxz 0x14ec18; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0014fc67: mov edi, edi; jecxz 0x14fbf8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00150c67: mov edi, edi; jecxz 0x150bf8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00153f37: mov edi, edi; jecxz 0x153ec8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00083dbb: mov edi, edx; call dword ptr [eax + 0x68]; 
0x000ac87c: mov edi, edx; call dword ptr [eax - 0x18]; 
0x00088a59: mov edi, edx; call dword ptr [edx - 0x73]; 
0x00120994: mov edi, es; push 0x8b000001; dec esp; ret 0x8904; 
0x0010158a: mov edi, esi; mov ecx, dword ptr [esp + 0x10]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ea20d: mov edi, esi; sar edi, 0x1f; test eax, eax; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2bd: mov edi, esi; sar edi, 0x1f; test eax, eax; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00101342: mov edx, 0; cmovb eax, edx; ret; 
0x000c5800: mov edx, 0; cmove eax, edx; pop ebx; ret; 
0x00087914: mov edx, 0; cmove eax, edx; ret; 
0x00081d3c: mov edx, 0; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x001392fd: mov edx, 0x100558b; ret 0xd139; 
0x000f6104: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00101bc8: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000c7028: mov edx, 0x40; cmove eax, edx; ret; 
0x000f901b: mov edx, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x000fdaca: mov edx, 0x64; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x000c6f63: mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000c6f26: mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0007ca27: mov edx, 0x81000c04; ret; 
0x0016b848: mov edx, 0x83000787; in al, dx; adc byte ptr [ebp - 0x787ff7d], cl; call dword ptr [eax - 1]; 
0x00083248: mov edx, 0x8300160d; in al, dx; or al, 0x6a; add eax, 0x447e838d; cli; call dword ptr [eax - 0x73]; 
0x00138b82: mov edx, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000ca3e2: mov edx, 0x8900021f; ret 0xc483; 
0x001301d2: mov edx, 0x89ffff55; ret; 
0x0012aad2: mov edx, 0x89ffffac; ret; 
0x000de45f: mov edx, 0x89fffff4; ret 0x8ce9; 
0x0005e80a: mov edx, 0x8b000000; test dword ptr [edi + esi*8 - 0x137c0001], ecx; or al, 0x8d; adc byte ptr [eax + 0x76], 0xfa; call dword ptr [eax - 0x18]; 
0x000ad9a2: mov edx, 0x8d000612; test dword ptr [eax], esi; nop; cli; call dword ptr [eax - 0x73]; 
0x0007c213: mov edx, 0xa89ffe9; mov edx, dword ptr [eax - 0xc0]; lea eax, [eax - 0x164940]; mov dword ptr [edx], eax; ret; 
0x0004d3be: mov edx, 0xf0b8; add byte ptr [ebp + 0x19009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fa9de: mov edx, 0xf0b8; add byte ptr [ebp + 0x24f09f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c6f89: mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000c6f48: mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x0011baf3: mov edx, 0xff3167e8; jmp dword ptr [esi - 0x70]; 
0x000c6eee: mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0002f35c: mov edx, 0xfffe; sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x0004a016: mov edx, 0xffff47e9; dec dword ptr [ebp + 0x29002674]; ret 0xfac1; 
0x000fd0c9: mov edx, 0xfffffa4c; je 0xfd0f4; cmp al, 0xf; inc esp; ret 0x5056; 
0x00085270: mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x0015ccc5: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0001dd79: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000c70e6: mov edx, 0xffffffff; cmp dword ptr gs:[eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x000f73ce: mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000f74ae: mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000852c3: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000852ab: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000c6f9e: mov edx, 0xffffffff; pop ebx; cmp dword ptr gs:[eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x00078de5: mov edx, 0xffffffff; ret; 
0x00073fe7: mov edx, 0xffffffff; test eax, eax; je 0x74020; mov eax, edx; pop ebx; ret; 
0x000f9935: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00019496: mov edx, 1; call dword ptr gs:[0x10]; 
0x000333f6: mov edx, 1; lea ebx, [ecx + 0x1284]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00121b80: mov edx, 1; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00080026: mov edx, 1; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000338d3: mov edx, 1; mov eax, 0xf0; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x00073778: mov edx, 1; mov eax, edx; ret; 
0x000339ab: mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000f5fea: mov edx, 1; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00033ae5: mov edx, 1; mov esi, edi; call dword ptr gs:[0x10]; 
0x0001af36: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00101cc9: mov edx, 2; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0007acd2: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0016b9d8: mov edx, dword ptr [eax + 0x10]; test edx, edx; je 0x16b9ec; sub esp, 0xc; push eax; call edx; 
0x000c2163: mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xc21a0; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000c66cf: mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xc6708; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c677f: mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xc67b8; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000f7243: mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xf7280; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f7303: mov edx, dword ptr [eax + 0x19c0]; test edx, edx; jne 0xf7340; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0012db88: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xd0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0012e03f: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012a0ba: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0012a175: mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x00123fef: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00077f59: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0012f75e: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00043898: mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x000737e2: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0007ae2b: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0012e048: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00124538: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0012c417: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0012f6f5: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0001a70a: mov edx, dword ptr [eax - 0x128]; test edx, edx; je 0x1a715; ret; 
0x0012f08a: mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x0007c218: mov edx, dword ptr [eax - 0xc0]; lea eax, [eax - 0x164940]; mov dword ptr [edx], eax; ret; 
0x000b2907: mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xb2900; ret; 
0x000de564: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000ec6f4: mov edx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xec718; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000eb374: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0007b4f4: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0006eb96: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00031b19: mov edx, dword ptr [eax]; test edx, edx; je 0x31b10; xor eax, eax; ret; 
0x0013bf13: mov edx, dword ptr [eax]; test edx, edx; jne 0x13bf20; add esp, 8; pop ebx; ret; 
0x000c5824: mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000350fd: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000c581e: mov edx, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0002817b: mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x000262cb: mov edx, dword ptr [ebx + edi*4 - 0x3e0]; test edx, edx; je 0x262de; mov dword ptr [esp], eax; call edx; 
0x00026142: mov edx, dword ptr [ebx + edi*4 - 0x3e4]; test edx, edx; je 0x2614f; call edx; 
0x00168022: mov edx, dword ptr [ebx + esi*4 - 0x53538]; add edx, ebx; jmp edx; 
0x001023bc: mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x0014a937: mov edx, dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006ea1e: mov edx, dword ptr [ecx + 8]; sub edx, eax; mov eax, edx; pop ebx; ret; 
0x001012fe: mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x0001b717: mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x0010bb9b: mov edx, dword ptr [edi + 0xc]; push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0010c035: mov edx, dword ptr [edi + 0xc]; push esi; mov dword ptr [ebp - 0x44], edx; push dword ptr [ebp - 0xbc]; push ebx; call eax; 
0x00125b35: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x000cebb1: mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x000524a7: mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x000833e0: mov edx, dword ptr [edi - 0x70]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00125900: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00125913: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0010c537: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x00125943: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0012c7b6: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0012d1a6: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0007383b: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007372b: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00129c2c: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x00069b88: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x00069a99: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0011b24d: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000e2f57: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0001affd: mov edx, dword ptr [edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0007b67e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b65e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b62e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5de: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5ae: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x0007b70e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b60e: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x00101944: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00103412: mov edx, dword ptr [edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0009f7cd: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x0010bf72: mov edx, dword ptr [esi + 0x30]; push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0010c326: mov edx, dword ptr [esi + 0x30]; push ebx; push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00098ce2: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002613b: mov edx, dword ptr [esi + edi*4 - 4]; mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3e4]; test edx, edx; je 0x2614f; call edx; 
0x0010b985: mov edx, dword ptr [esi - 0x18]; push ebx; push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0009c0e3: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ca0: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ff240: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00094fe0: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0009c0b4: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c81: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094fc1: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x001055bf: mov edx, dword ptr [esi]; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x000e1dfa: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001004a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100061: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6811: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef221: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6651: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff251: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100101: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae11: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff31: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff61: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee871: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6961: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6991: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee841: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf11: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb11: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000f632d: mov edx, dword ptr [esp + 0x10]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f92c9: mov edx, dword ptr [esp + 0x10]; test ecx, ecx; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x00030e1c: mov edx, dword ptr [esp + 0x130]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00101595: mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ffbde: mov edx, dword ptr [esp + 0x14]; cmp esi, -1; je 0xffc00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000299dd: mov edx, dword ptr [esp + 0x14]; mov eax, edx; add esp, 0xc; ret; 
0x001431ea: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00050f6b: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000ef256: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00100316: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe06: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00100256: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d66: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbb6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc16: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdae6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d96: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffd6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00145583: mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101673: mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00124db1: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0010d9ec: mov edx, dword ptr [esp + 0x18]; cmp edx, dword ptr [esp + 0x1c]; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x000df1b7: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000f599c: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e1d9c: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x000faf4b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000ee8db: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef18b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003ab: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0010013b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0010002b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0010017b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0010021b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd1b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcab: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb7b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000ec81f: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; jne 0xec848; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00145381: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00132df8: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x132e08; add esp, 0xc; ret; 
0x00132e38: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x132e48; add esp, 0xc; ret; 
0x0001b5a1: mov edx, dword ptr [esp + 0x1c]; add esp, 0x24; ret; 
0x000f6d49: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f7029: mov edx, dword ptr [esp + 0x1c]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x001249d2: mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00145343: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4781: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000ffe40: mov edx, dword ptr [esp + 0x1c]; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x00101788: mov edx, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00034371: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034491: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x000fab50: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001455e7: mov edx, dword ptr [esp + 0x24]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ecc92: mov edx, dword ptr [esp + 0x24]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f5748: mov edx, dword ptr [esp + 0x28]; cmp ecx, 9; je 0xf5780; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001017db: mov edx, dword ptr [esp + 0x28]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eced3: mov edx, dword ptr [esp + 0x28]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f8143: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x001016e9: mov edx, dword ptr [esp + 0x34]; mov eax, 0x75; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x00031d12: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00031cb9: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ec672: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c69ea: mov edx, dword ptr [esp + 0x38]; test esi, esi; jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aaa: mov edx, dword ptr [esp + 0x38]; test esi, esi; jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000f4ea5: mov edx, dword ptr [esp + 0x58]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x00060c4e: mov edx, dword ptr [esp + 0x68]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00065ed8: mov edx, dword ptr [esp + 0x78]; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x00132a54: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00069b4b: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0013ca4b: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000ffa41: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5491: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff546: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5551: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e3: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b53: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e21: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f45f2: mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000ecff3: mov edx, dword ptr [esp + 0xc]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f799d: mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x00101517: mov edx, dword ptr [esp + 0xc]; mov eax, 0x75; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000c599b: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a99: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c09: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00101139: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010142e: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f7899: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea249: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2f9: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000fad9b: mov edx, dword ptr [esp + 0xc]; mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000ec8c6: mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00143246: mov edx, dword ptr [esp + 0xc]; mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ed86d: mov edx, dword ptr [esp + 0xc]; mov ecx, dword ptr [esp + 0x54]; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ff821: mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ecdb2: mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ff8d1: mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff981: mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011e1: mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58e1: mov edx, dword ptr [esp + 0xc]; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ffaf1: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352c1: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000fae91: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f6891: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f6931: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f4481: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0f1: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed191: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x000ed969: mov edx, dword ptr [esp + 0xc]; mov esi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00060b26: mov edx, dword ptr [esp + 0xc]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f6f: mov edx, dword ptr [esp + 0xc]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x0010102e: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea0: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011ceec: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11cefd; add esp, 0x1c; ret; 
0x0013f8ee: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x00050e7d: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000bc707: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee07: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3e6: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec117: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec16e: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000f5f5d: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75ca: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xf75db; add esp, 0x1c; ret; 
0x000f6e24: mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f6ed5: mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b5: mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00029384: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029394: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00028c1a: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x001326b0: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x000bf54d: mov edx, dword ptr [esp + 4]; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0007b67a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b65a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b62a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5da: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5aa: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x0007b70a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b60a: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x0013ca74: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00132e9c: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x000ea984: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00079a14: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca24: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027444: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000f7b76: mov edx, dword ptr [esp + 8]; mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x000f2a64: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f42c4: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0013ceed: mov edx, dword ptr [esp]; ret; 
0x000f81e7: mov edx, dword ptr es:[edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x00103411: mov edx, dword ptr gs:[edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x001055be: mov edx, dword ptr gs:[esi]; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x000799fc: mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x799f8; ret; 
0x0004180e: mov edx, eax; mov eax, edx; pop ebx; pop esi; ret; 
0x001268bd: mov edx, eax; mov eax, edx; ret; 
0x0008aae8: mov edx, eax; xor eax, eax; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x001015df: mov edx, ebp; or dh, 1; call dword ptr gs:[0x10]; 
0x0007a5c1: mov edx, ebp; pop ebp; ret; 
0x0007a57b: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a19b2: mov edx, ebp; pop edi; pop ebp; ret; 
0x001002a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x000fffb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001000b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000f7b50: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00100470: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000c59f0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ef2d0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000edcf0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000f79f0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ecac0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ecac0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f7a10: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001002c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000ff280: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e60: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffde0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000f7eb0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00100280: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000c57c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00100000: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000c68a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ede90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ff7b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ff7b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000c6920: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000fafe0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000e1cd0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000e1d10: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000e1d30: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000ef280: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ede70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ff4a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000ff4c0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000fff90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x001000d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100340: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000edd90: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00100370: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001003e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100410: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100440: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x000ec0b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031140: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ff430: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000edd10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6350: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000f7e80: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec860: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec890: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f7810: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ffe70: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ed9b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000faf80: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000e1c40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c70: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1d50: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ffea0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031720: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c6680: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001001e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc70: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb40: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000ef150: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x000f4744: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0002fcba: mov edx, ecx; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x000cf2dc: mov edx, edi; add al, 0; add byte ptr [ecx], ch; ret 0x4be; 
0x0007c025: mov edx, edi; call dword ptr [edx - 0x73]; 
0x0001cdb8: mov edx, edi; call dword ptr gs:[0x10]; 
0x0007d351: mov edx, edi; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0007d32d: mov edx, edi; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x0007d440: mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007f1b7: mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x0007fa7b: mov edx, edi; dec dword ptr [ebp - 0x5bec86d]; call dword ptr [eax - 0x73]; 
0x000714c8: mov edx, edi; jmp dword ptr [esi - 0x70]; 
0x000bf50b: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf438: mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0006f28c: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0006f2cf: mov edx, edi; pop edi; pop ebp; ret; 
0x000ed6b9: mov edx, esi; call dword ptr gs:[0x10]; 
0x000ed82d: mov edx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0001b277: mov edx, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001b2ab: mov edx, esi; pop esi; pop edi; pop ebp; ret; 
0x000341b9: mov edx, esi; sub eax, ecx; pop esi; pop edi; sbb edx, ecx; ret; 
0x00146198: mov es, word ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000f7866: mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00161d3e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001611be: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x00079644: mov es, word ptr [ecx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200c6: mov es, word ptr [edx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ebp + 0x31809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011c191: mov es, word ptr [edx - 0x72000006]; lcall 0xf0b8, 0x2cac; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f91a7: mov esi, 0x100; call dword ptr gs:[0x10]; 
0x0011cdb9: mov esi, 0x244c8bf1; adc byte ptr [ebx - 0x13f77], cl; jmp dword ptr [ebp - 0x75]; 
0x000aaf83: mov esi, 0x39ae048b; ret; 
0x00081d85: mov esi, 0x4289feda; add al, 0x5b; ret; 
0x0008241c: mov esi, 0x4a89feda; add al, 0x89; ret 0x4089; 
0x00082181: mov esi, 0x4a89feda; add al, 0x89; ret 0xec83; 
0x0008ac4c: mov esi, 0x75c08401; adc ebx, ebp; adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x00126723: mov esi, 0x81000167; ret; 
0x00116c23: mov esi, 0x81000262; ret; 
0x000edb23: mov esi, 0x810004f3; ret; 
0x000b5323: mov esi, 0x8100087b; ret; 
0x00082523: mov esi, 0x81000ba9; ret; 
0x00033623: mov esi, 0x81001098; ret; 
0x0013628e: mov esi, 0x83000000; in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00024a72: mov esi, 0x83000000; ret; 
0x00072d9d: mov esi, 0x838d0009; test byte ptr [ebx - 6], bh; call dword ptr [eax - 0x73]; 
0x00049d58: mov esi, 0x83c32917; ret 0x3901; 
0x000ba581: mov esi, 0x83d6890a; ret 0x8901; 
0x000fccee: mov esi, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x000760e7: mov esi, 0x8b000000; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00166e9e: mov esi, 0x8b000002; je 0x166ec9; jo 0x166e32; jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x000785e2: mov esi, 0x9febffff; lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0002613d: mov esi, 0xc05589fc; mov edx, dword ptr [ebx + edi*4 - 0x3e4]; test edx, edx; je 0x2614f; call edx; 
0x0014585d: mov esi, 0xc085fffc; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000e1dcb: mov esi, 0xc483fffb; adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d45e8: mov esi, 0xc483ffff; adc byte ptr [ecx + 0x244c3bc1], cl; add al, 0x75; ret; 
0x0008ad1c: mov esi, 0xda390114; je 0x8ad18; pop ebx; ret; 
0x000345de: mov esi, 0xf0b8; add byte ptr [ebp + 0x17009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016bebe: mov esi, 0xf0b8; add byte ptr [ebp + 0x1aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105bfe: mov esi, 0xf0b8; add byte ptr [ebp + 0x28a89b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016320e: mov esi, 0xf6000000; ret 0xf0f; 
0x00124cb8: mov esi, 0xfe9fa2e8; jmp dword ptr [esi - 0x70]; 
0x00146391: mov esi, 0xff6b4ee8; inc dword ptr [ecx + 0x48ce9c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00145d61: mov esi, 0xff717ee8; inc dword ptr [ecx + 0x49099c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00030e46: mov esi, 8; call dword ptr gs:[0x10]; 
0x00030f60: mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000c69e4: mov esi, dword ptr [eax + 0x19c0]; mov edx, dword ptr [esp + 0x38]; test esi, esi; jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aa4: mov esi, dword ptr [eax + 0x19c0]; mov edx, dword ptr [esp + 0x38]; test esi, esi; jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0001dc88: mov esi, dword ptr [eax + 0x200000f]; add esp, 8; pop ebx; ret; 
0x00030bf0: mov esi, dword ptr [eax + 4]; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000ec749: mov esi, dword ptr [eax]; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xec770; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000714a6: mov esi, dword ptr [ebp - 0x20]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033415: mov esi, dword ptr [ebp - 0x38]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00119b67: mov esi, dword ptr [ebp - 0x40]; mov eax, dword ptr [ebp - 0x3c]; mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00166318: mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x0010eb6c: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0012efae: mov esi, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [esi + 8]; 
0x0011efa8: mov esi, dword ptr [edi + ebp]; add byte ptr [edx], al; add esp, 8; pop ebx; ret; 
0x000f7a61: mov esi, dword ptr [edx]; clc; dec dword ptr [ecx + 0x76b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f62ff: mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0008afb4: mov esi, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b074: mov esi, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0x14]; cmp ecx, 8; ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x000ff5b4: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000ba844: mov esi, dword ptr [esp + 0x14]; mov ecx, dword ptr [esi + eax*4 - 0x6135c]; add ecx, esi; jmp ecx; 
0x00050f73: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0007cdda: mov esi, dword ptr [esp + 0x18]; mov eax, 0xf0; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f4740: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000ec823: mov esi, dword ptr [esp + 0x1c]; jne 0xec848; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000f59a4: mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000700a4: mov esi, dword ptr [esp + 0x1c]; push esi; call dword ptr [ebx + 0x40]; 
0x0014534b: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00040f42: mov esi, dword ptr [esp + 0x20]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f4789: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000329bc: mov esi, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00050fc2: mov esi, dword ptr [esp + 0x2c]; test edi, edi; je 0x51008; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000db69f: mov esi, dword ptr [esp + 0x30]; mov ecx, dword ptr [esi + eax*4 - 0x5feec]; add ecx, esi; jmp ecx; 
0x00066454: mov esi, dword ptr [esp + 0x34]; push esi; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x000f4cf5: mov esi, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov ebp, eax; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000ec67a: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000f5e66: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f4ead: mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f4f16: mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0012d545: mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x000f5c7a: mov esi, dword ptr [esp + 0x88]; lea edx, [esp + 0x38]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec7bb: mov esi, dword ptr [esp + 0x90]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0001af06: mov esi, dword ptr [esp + 0xc]; mov eax, dword ptr [esi + 0x1a7c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e7ffd: mov esi, dword ptr [esp + 0xc]; mov ecx, dword ptr [esi + edx*4 - 0x5f3e0]; add ecx, esi; jmp ecx; 
0x0005d938: mov esi, dword ptr [esp + 0xc]; push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0013cef1: mov esi, dword ptr [esp]; ret; 
0x00137bd9: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0012c431: mov esi, eax; ja 0x12c575; mov eax, dword ptr [esp + 0x20]; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x000ffaf5: mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352c5: mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000c5ae5: mov esi, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000f5fef: mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f7a65: mov esi, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000fae95: mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f6895: mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f6935: mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f7b05: mov esi, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000f4485: mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000311e2: mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000ed875: mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed0f5: mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed195: mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x000edca5: mov esi, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ede05: mov esi, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00124ec5: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000ed96d: mov esi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00084684: mov esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x000bf43a: mov esi, ebp; call dword ptr gs:[0x10]; 
0x000bf505: mov esi, ebp; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000f6331: mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f62a2: mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f9274: mov esi, ecx; call dword ptr gs:[0x10]; 
0x00033aea: mov esi, edi; call dword ptr gs:[0x10]; 
0x000c5bc2: mov esi, edx; call dword ptr gs:[0x10]; 
0x0009d5ab: mov esi, edx; cld; pop edi; ret; 
0x0009db9f: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0009dc1f: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0009dbf5: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d585: mov esi, edx; pop edi; ret; 
0x0010183b: mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009dc5f: mov esi, edx; ret; 
0x00088554: mov esi, esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x000ed2aa: mov esi, esp; mov ebx, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0010c235: mov esp, 0; push 0x1000002; call edx; 
0x0009bec7: mov esp, 0x102be8d2; or al, byte ptr [eax]; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ff3ec: mov esp, 0x174fff1; ret; 
0x000472ac: mov esp, 0x1ffffc9; ret; 
0x000563e6: mov esp, 0x1fffffb; ret 0xd801; 
0x00053e16: mov esp, 0x1fffffb; ret; 
0x00098bc7: mov esp, 0x432be8d2; or al, byte ptr [eax]; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012c411: mov esp, 0x45c24; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0006f5cb: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x001680ec: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret 4; 
0x000502d0: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0001b971: mov esp, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x00094eb0: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x00094bb0: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x0008b6aa: mov esp, 0x5fd001d2; pop esi; ret; 
0x0009cbd1: mov esp, 0x5ff801c0; ret; 
0x000e12c1: mov esp, 0x6afffa92; add eax, 0x28828d50; jo 0xe12c7; call dword ptr [eax - 0x18]; 
0x00095eda: mov esp, 0x7018e8d2; or al, byte ptr [eax]; add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095eb5: mov esp, 0x703de8d2; or al, byte ptr [eax]; add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfc5: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096025: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949e5: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009cc01: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0009cc14: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x0009cc34: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009cc24: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x00134725: mov esp, 0x81000087; ret; 
0x00123025: mov esp, 0x8100019e; ret; 
0x00113a25: mov esp, 0x81000294; ret; 
0x00105c25: mov esp, 0x81000372; ret; 
0x00104025: mov esp, 0x8100038e; ret; 
0x000fb025: mov esp, 0x8100041e; ret; 
0x000f2525: mov esp, 0x810004a9; ret; 
0x0009f425: mov esp, 0x810009da; ret; 
0x00081e25: mov esp, 0x81000bb0; ret; 
0x00072b25: mov esp, 0x81000ca3; ret; 
0x00042e25: mov esp, 0x81000fa0; ret; 
0x0002d125: mov esp, 0x810010fd; ret; 
0x0016c125: mov esp, 0x81fffd0d; ret; 
0x0014b725: mov esp, 0x81ffff17; ret; 
0x00149725: mov esp, 0x81ffff37; ret; 
0x0009e764: mov esp, 0x83000000; dec byte ptr [eax]; ja 0x9e8da; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x000948c3: mov esp, 0x83ce01d2; ret 0x2910; 
0x0008b6b4: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x0008b6ce: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x0008b6c1: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000fcfd2: mov esp, 0x83ffffff; in al, dx; add al, 0xff; xor byte ptr [ebp - 0x5a4127d], cl; call dword ptr [eax + 0x6a]; 
0x000fd1a2: mov esp, 0x83ffffff; in al, dx; add al, 0xff; xor byte ptr [ebp - 0x5a9607d], cl; call dword ptr [eax + 0x6a]; 
0x000eaf7a: mov esp, 0x85fffffe; ror byte ptr [edi], 0x44; ret 0xec83; 
0x000cc9a0: mov esp, 0x89000000; ret; 
0x00168aa0: mov esp, 0x89000003; ret; 
0x000a23f0: mov esp, 0x89fffa21; ret 0x448b; 
0x000b3e77: mov esp, 0x8c24; add bl, ch; ret 0x8190; 
0x000267a9: mov esp, 0x8d0cec83; xchg dword ptr [esi], ebp; das; cli; call dword ptr [eax - 0x18]; 
0x0010ca7f: mov esp, 0x8db075ff; xor dh, 0x58; cli; call dword ptr [edx - 0x17]; 
0x001680ac: mov esp, 0x9424; add byte ptr [ecx], cl; ret 0xac89; 
0x0010caad: mov esp, 0x9a8c828d; cli; call dword ptr [eax - 0x73]; 
0x0011a38c: mov esp, 0x9c60868d; cli; call dword ptr [eax - 0x73]; 
0x00160cd0: mov esp, 0xa8000000; inc eax; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x00083026: mov esp, 0xb48d0008; add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x000bf480: mov esp, 0xb8000000; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x0001c5c7: mov esp, 0xcec2e857; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call edi; 
0x00119bb4: mov esp, 0xeff52ee8; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x00085276: mov esp, 0xf042444; inc esp; ret 0xc083; 
0x000c29e6: mov esp, 0xf0b8; add byte ptr [ebp + 0x21d09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48e6: mov esp, 0xf0b8; add byte ptr [ebp + 0x22889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c76: mov esp, 0xf0b8; add byte ptr [ebp + 0x288c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106696: mov esp, 0xf0b8; add byte ptr [ebp + 0x29109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011708e: mov esp, 0xf0b8; add byte ptr [ebp + 0x2c4c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117736: mov esp, 0xf0b8; add byte ptr [ebp + 0x2c549b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068c28: mov esp, 0xf0b8; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00076baf: mov esp, 0xf9df0085; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000ccd65: mov esp, 0xf9fac481; inc dword ptr [ecx]; iretd; jmp edi; 
0x000ce72d: mov esp, 0xf9fc3481; inc dword ptr [ecx]; iretd; jmp edi; 
0x0009bf01: mov esp, 0xff1e8d2; or al, byte ptr [eax]; add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011b537: mov esp, 0xff3723e8; dec dword ptr [ebp - 0x562c779]; call dword ptr [eax - 0x73]; 
0x0001d24d: mov esp, 0xfffde6e9; dec dword ptr [ebp - 0x593837d]; call dword ptr [eax - 0x73]; 
0x00119bbf: mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x00119b28: mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0009be0b: mov esp, dword ptr [ebp + 0xe]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6641: mov esp, eax; and byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00030bfd: mov esp, ecx; jmp edx; 
0x0010eb68: mov esp, edi; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0007bdbc: mov esp, edi; sbb eax, 0xc9850000; jne 0x7bdd0; ret; 
0x00120bed: mov fs, word ptr [0x8dffffff]; lcall 0xf0b8, 0x3180; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008f158: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001350dc: mov fs, word ptr [ebx - 6]; call dword ptr [eax - 0x18]; 
0x0001cda3: mov fs, word ptr [edx - 0x47000003]; lock add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0001cd66: mov fs, word ptr [esi - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ebp + 0xf909b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009bfe1: mov gs, eax; adc cl, byte ptr [edi]; or al, byte ptr [eax]; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096041: mov gs, eax; mov dl, 0x6e; or al, byte ptr [eax]; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a01: mov gs, eax; test byte ptr [edx], cl; add byte ptr [ecx + 0xed6d9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0006afe7: mov gs, word ptr [ecx - 0x47000002]; lock add byte ptr [eax], al; add byte ptr [ebp + 0x19289f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00046463: mov gs, word ptr [edx + 0xf]; add byte ptr [ecx + 0x19db99c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00080829: mov gs, word ptr [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x80]; 
0x000b083b: mov ss, ebp; or dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000622af: mov ss, word ptr [eax - 0x4700001c]; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00120ab2: mov ss, word ptr [edx - 0x72000004]; lcall 0xf0b8, 0x3180; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002a624: mov ss, word ptr [esi - 0x72000008]; lcall 0xf0b8, 0x1154; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00094ee0: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x0009c29f: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e1c: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f6109: mov word ptr [eax + 0x16], dx; ret; 
0x0009c3b9: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f26: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000351ca: mov word ptr [eax + 0xe], dx; xor eax, eax; pop ebx; pop esi; ret; 
0x00098cc8: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c19f: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d2c: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a80cb: mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; and byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0014639a: mov word ptr [eax + eax], es; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000a7f12: mov word ptr [eax + ecx*2], fs; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x001683ac: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x00098c93: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c0b6: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c83: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ea93b: mov word ptr [eax], dx; xor eax, eax; ret; 
0x00030df5: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129c2e: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000ed21c: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b3360: mov word ptr [eax], fs; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004d840: mov word ptr [eax], fs; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x00104c7e: mov word ptr [eax], gs; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000335e2: mov word ptr [ebp + 0x12849a], cs; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000cc904: mov word ptr [ebp + 0x538b0076], cs; or al, 0x83; ret; 
0x000c8614: mov word ptr [ebx - 0x1077d], cs; jmp dword ptr [ebp - 0x7d]; 
0x0012c43e: mov word ptr [ebx - 0x5d9a0], es; add ecx, ebx; jmp ecx; 
0x000ddb66: mov word ptr [ebx - 0x5fed8], ss; add ecx, ebx; jmp ecx; 
0x000ba8ee: mov word ptr [ebx - 0x61170], es; add ecx, ebx; jmp ecx; 
0x00081abe: mov word ptr [ebx - 0x620a4], es; add ecx, ebx; jmp ecx; 
0x00067ec7: mov word ptr [ebx - 0x6257c], es; add ecx, ebx; jmp ecx; 
0x00067e2b: mov word ptr [ebx - 0x62624], es; add ecx, ebx; jmp ecx; 
0x0002df85: mov word ptr [ebx - 0x68068], cs; add ecx, ebx; jmp ecx; 
0x0002279c: mov word ptr [ebx - 0x72b7db84], cs; xchg dword ptr [eax], ecx; outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x0001b786: mov word ptr [ebx - 0x72fbdb84], cs; xchg dword ptr [eax], esi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x0015c7fc: mov word ptr [ebx - 0x75b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00159fef: mov word ptr [ebx - 0x75b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x0015e175: mov word ptr [ebx - 0x75b80], cs; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x00133dca: mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0008ed22: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0008ed64: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x00123694: mov word ptr [ecx - 0x5ea60], es; shr ebx, 3; jmp ecx; 
0x000bc9dc: mov word ptr [ecx - 0x60bac], es; jmp ecx; 
0x000efef5: mov word ptr [ecx - 0xbb6b], cs; call dword ptr [edi + 0x52]; 
0x000301fa: mov word ptr [ecx], ds; add dword ptr [eax], eax; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x0008ecf0: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x0008ece0: mov word ptr [ecx], dx; pop ebx; ret; 
0x000ff3ea: mov word ptr [ecx], es; mov esp, 0x174fff1; ret; 
0x0009682c: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x0009514c: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x00096936: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x00095256: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x00095008: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0009673c: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x0009505c: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000cd1e2: mov word ptr [edi - 0x604bc], es; add ecx, edi; jmp ecx; 
0x00065e06: mov word ptr [edi - 0x62780], es; add ecx, ebx; jmp ecx; 
0x000666a1: mov word ptr [edi - 0x62800], es; add ecx, ebx; jmp ecx; 
0x0006664a: mov word ptr [edi - 0x62880], es; add ecx, ebx; jmp ecx; 
0x00066a82: mov word ptr [edi - 0x62980], es; add ecx, ebx; jmp ecx; 
0x000527fb: mov word ptr [edi - 0x63430], es; add ecx, edi; jmp ecx; 
0x00052426: mov word ptr [edi - 0x636d0], es; add ecx, edi; jmp ecx; 
0x0001917e: mov word ptr [edi], cs; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00094fd6: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x00096663: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x00094fc3: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00094ce0: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000f2a68: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f42c8: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00153b4c: mov word ptr [edx + 1], cx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x00091118: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x00091258: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x0009b4db: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd48: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x0008ce78: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0008b104: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x0008b034: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0009116c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000912ac: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0009b54f: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd8c: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008cecc: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000eae2f: mov word ptr [edx - 0x5f0c0], es; add ecx, edx; jmp ecx; 
0x000c7b1a: mov word ptr [edx - 0x60590], es; add ecx, edx; jmp ecx; 
0x00060b30: mov word ptr [edx - 0x62b80], es; add ecx, ebp; jmp ecx; 
0x00060f79: mov word ptr [edx - 0x62c00], es; add ecx, ebp; jmp ecx; 
0x00061642: mov word ptr [edx - 0x62c80], es; add ecx, ebp; jmp ecx; 
0x000615aa: mov word ptr [edx - 0x62d80], es; add ecx, ebp; jmp ecx; 
0x00146205: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bf5: mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014a08c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c07c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001534cc: mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00146225: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145c15: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014a120: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c110: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00153560: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00112e6c: mov word ptr [edx - 6], ds; call dword ptr [eax - 0x73]; 
0x000910d3: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x00091213: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000910e3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x00091223: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x0008cd23: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x0008ce43: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x0009b476: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cd13: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0008ce33: mov word ptr [edx], ax; mov eax, edx; ret; 
0x0014c6cb: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0014a70b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153acb: mov word ptr [edx], cx; pop ebx; ret; 
0x00101f50: mov word ptr [edx], fs; clc; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [ebp + 0x56], ecx; cli; call dword ptr [eax + 0x6a]; 
0x0008b0b8: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x0008b000: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0008aff0: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x0009bf0a: mov word ptr [esi + ecx], fs; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000e8002: mov word ptr [esi - 0x5f3e0], ss; add ecx, esi; jmp ecx; 
0x000e08b2: mov word ptr [esi - 0x5fa08], es; add ecx, esi; jmp ecx; 
0x000db6a4: mov word ptr [esi - 0x5feec], es; add ecx, esi; jmp ecx; 
0x000ba849: mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x0011deb7: mov word ptr [esi - 6], ds; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x00168539: mov word ptr [esp + ecx*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x00163f93: mov word ptr [esp + edx*8], fs; add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x001539b9: movd dword ptr [eax + 4], mm0; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x001533cf: movd dword ptr [eax - 0x10], mm0; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00153509: movd dword ptr [eax - 0xa], mm0; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00149f89: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf89: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001533d9: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00153479: movd dword ptr [eax - 9], mm0; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0014a629: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001539f9: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0014a1ba: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c1aa: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x001535ea: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x001535e0: movdqa xmm0, xmmword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00096bdd: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x13cef9; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bc1: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x13cef9; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954dd: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x13cef9; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954c1: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x13cef9; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014647e: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c1af: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00145e4e: movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x001464ae: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e7e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001536af: movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001464de: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145eae: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0015375f: movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00145ede: movdqa xmmword ptr [edx - 0x13], xmm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014653e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f0e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0015387f: movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0014656e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f3e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014659e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f6e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00145f9e: movdqa xmmword ptr [edx - 0x17], xmm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014660e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145fce: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001535cf: movdqa xmmword ptr [edx - 0x18], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0014663e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145ffe: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014667e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014602e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014609e: movdqa xmmword ptr [edx - 0x1c], xmm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001460ce: movdqa xmmword ptr [edx - 0x1d], xmm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001460fe: movdqa xmmword ptr [edx - 0x1e], xmm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014a1b5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c1a5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x001535e5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00146479: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e49: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00145f39: movdqa xmmword ptr [edx - 0x25], xmm0; movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00145f69: movdqa xmmword ptr [edx - 0x26], xmm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146474: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e44: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00145e3f: movdqa xmmword ptr [edx - 0x40], xmm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000910b0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091360: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0008ccf0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008cf80: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00098de0: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c4a0: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fdd: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c440: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f7d: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c460: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f9d: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c480: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fbd: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c27a: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098df4: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e77: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c2da: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e57: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c2ba: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e37: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c257: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098de4: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c29b: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e18: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c49c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fd9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c43c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f79: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c45c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f99: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c47c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fb9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098ef9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f3c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f5c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c35c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ed9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f1d: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c31c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e99: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c33c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098eb9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000969fd: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x00095330: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x0009530d: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00096c4c: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x0009554c: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x0009699d: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000952ad: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952cd: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000969dd: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000952ed: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00095430: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000967f4: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x00095127: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x00095187: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095167: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095148: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x00095309: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952a9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952c9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952e9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00095209: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000951c9: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000951e9: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x00095114: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000910b4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091364: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0008ccf4: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008cf84: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0009c383: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098efd: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c3e3: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f40: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c413: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f60: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c360: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098edd: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c3b4: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f21: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c320: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e9d: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c340: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ebd: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c200: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d8d: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c220: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dad: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c240: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dcd: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1ba: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d47: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1da: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d67: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c157: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf4: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c19b: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d28: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1fc: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d89: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c21c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098da9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c23c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dc9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008ed94: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008eda4: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edb4: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edc4: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008ed50: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0008ed70: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed80: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed60: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed90: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008eda0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edb0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edc0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008ed40: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000968ed: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x00095230: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x00095270: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095290: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095251: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0009520d: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000951cd: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000968cd: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000951ed: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x00095414: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0009679d: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000950bd: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095424: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950dd: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000950fd: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000953b0: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00096704: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00095037: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00095077: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x00095097: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x00095058: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x00095410: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950b9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095420: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950d9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000950f9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095024: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00095a3d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b9d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0009b5b0: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000943fd: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0009455d: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000911ad: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0009130d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdcd: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf2d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00095a5d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bbd: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0009b5d0: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0009441d: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0009457d: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000911cd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0009132d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cded: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf4d: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00095a7d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bdd: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0009b5f0: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0009443d: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0009459d: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000911ed: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0009134d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008ce0d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008f9d0: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x0008cf6d: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0009590c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bfd: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942ec: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945bd: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00092ed8: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b81c: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0009b44c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eae8: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x0009859c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x00093f79: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00091034: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x00091274: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x00092e5f: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00098677: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x00098697: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00091147: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x00091287: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cd67: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008cea7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0009b7c0: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00091187: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912c7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cda7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008cee7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00091077: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000912e7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x00092e97: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x0008eaa7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x0008ccb7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008fa20: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x0008cf07: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000986b7: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000986d7: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00163c54: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f5: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea6f: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc74: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008fa99: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x0008ce94: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00091168: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000912a8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cd88: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008cec8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000911a9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x00091309: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdc9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf29: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000911c9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x00091329: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cde9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf49: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000911e9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x00091349: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008ce09: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008f9cc: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x0008cf69: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00092ed4: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b448: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eae4: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00098598: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x00095a34: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b94: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000943f4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x00094554: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a54: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bb4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094414: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x00094574: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a74: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bd4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094434: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x00094594: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095903: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bf4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e3: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945b4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00095a38: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b98: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0009b5ab: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000943f8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x00094558: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a58: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bb8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094418: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x00094578: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a78: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bd8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094438: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x00094598: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095907: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bf8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e7: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945b8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00091280: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cea0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000912c0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cee0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000912e0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008cf00: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00091030: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x00091270: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x00092e5b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00163c50: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f1: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea6b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc70: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008fa95: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x0008ce90: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00095b90: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x00094550: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095bb0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094570: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095bd0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094590: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095bf0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000945b0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00091300: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cf20: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091320: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf40: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091340: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf60: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00098d00: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c153: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf0: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095020: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000911a4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x00091304: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdc4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf24: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091324: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf44: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091344: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf64: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00098d84: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c384: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098efe: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c3e4: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f41: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c414: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f61: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c361: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ede: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c3b5: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f22: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c321: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e9e: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c341: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ebe: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c201: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d8e: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c221: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dae: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c241: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dce: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1bb: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d48: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1db: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d68: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c158: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf5: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c19c: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d29: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c1fd: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d8a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c21d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098daa: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c23d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098dca: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008ed95: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008eda5: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edb5: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edc5: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008ed51: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0008ed71: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x0008ed81: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0008ed61: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x0008ed91: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0008eda1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edb1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edc1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008ed41: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000968ee: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x00095231: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x00095271: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095291: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095252: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x0009520e: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000951ce: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000968ce: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000951ee: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x00095415: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0009679e: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000950be: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095425: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950de: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000950fe: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000953b1: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00096705: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00095038: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00095078: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x00095098: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x00095059: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x00095411: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950ba: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095421: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950da: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000950fa: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095025: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00095a3e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b9e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0009b5b1: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000943fe: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x0009455e: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000911ae: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0009130e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdce: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf2e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00095a5e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bbe: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0009b5d1: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0009441e: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0009457e: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000911ce: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0009132e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cdee: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf4e: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00095a7e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bde: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0009b5f1: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0009443e: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0009459e: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000911ee: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0009134e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008ce0e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008f9d1: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x0008cf6e: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0009590d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bfe: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942ed: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945be: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00092ed9: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b81d: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0009b44d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eae9: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x0009859d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x00093f7a: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00091035: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x00091275: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x00092e60: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00098678: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x00098698: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x00091148: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x00091288: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cd68: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008cea8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x0009b7c1: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00091188: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912c8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cda8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008cee8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00091078: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000912e8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x00092e98: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x0008eaa8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x0008ccb8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008fa21: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x0008cf08: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000986b8: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000986d8: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x00163c55: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f6: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea70: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc75: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008fa9a: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x0008ce95: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00091169: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000912a9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cd89: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008cec9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000911aa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x0009130a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdca: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf2a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000911ca: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x0009132a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cdea: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf4a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000911ea: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x0009134a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008ce0a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008f9cd: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x0008cf6a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00092ed5: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0009b449: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x0008eae5: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x00098599: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x00095a35: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b95: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000943f5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x00094555: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a55: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bb5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094415: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x00094575: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a75: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bd5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094435: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x00094595: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095904: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bf5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e4: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945b5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00095a39: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x00095b99: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x0009b5ac: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000943f9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x00094559: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095a59: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bb9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094419: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x00094579: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095a79: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bd9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094439: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x00094599: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095908: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bf9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000942e8: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000945b9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00091281: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cea1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000912c1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cee1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000912e1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008cf01: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00091031: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x00091271: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x00092e5c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x00163c51: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0009b3f2: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0008ea6c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x0008cc71: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008fa96: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x0008ce91: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00095b91: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x00094551: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x00095bb1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x00094571: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x00095bd1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x00094591: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00095bf1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000945b1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00091301: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cf21: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091321: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf41: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091341: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf61: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00098d01: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c154: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf1: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095021: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000911a5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x00091305: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x0008cdc5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf25: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00091325: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cf45: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00091345: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008cf65: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00098d85: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014a1bb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c1ab: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x001535eb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x001535e1: movq mm0, qword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000910b1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091361: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x0008ccf1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008cf81: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00098de1: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c4a1: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fde: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c441: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f7e: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c461: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f9e: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c481: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fbe: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c27b: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098df5: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e78: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c2db: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e58: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c2bb: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e38: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c258: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098de5: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c29c: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e19: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c49d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fda: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c43d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f7a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c45d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f9a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c47d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fba: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098efa: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f3d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f5d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c35d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098eda: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f1e: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c31d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098e9a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c33d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098eba: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000969fe: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x00095331: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x0009530e: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x00096c4d: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x0009554d: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x0009699e: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000952ae: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000952ce: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000969de: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000952ee: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x00095431: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x00096bde: movq qword ptr [edi], mm0; add edi, 0x10; call 0x13cef9; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bc2: movq qword ptr [edi], mm0; add edi, 0x10; call 0x13cef9; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954de: movq qword ptr [edi], mm0; add edi, 0x10; call 0x13cef9; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954c2: movq qword ptr [edi], mm0; add edi, 0x10; call 0x13cef9; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000967f5: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x00095128: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x00095188: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095168: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x00095149: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x0009530a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952aa: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952ca: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952ea: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0009520a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000951ca: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000951ea: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x00095115: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x0014a5ed: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001539bd: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0014647f: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c1b0: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x00145e4f: movq qword ptr [edx - 0x10], mm0; pop ebx; ret; 
0x001533d3: movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001464af: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e7f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001536b0: movq qword ptr [edx - 0x11], mm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001464df: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145eaf: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00153760: movq qword ptr [edx - 0x12], mm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00145edf: movq qword ptr [edx - 0x13], mm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014653f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f0f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00153880: movq qword ptr [edx - 0x14], mm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0014656f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f3f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014659f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145f6f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00145f9f: movq qword ptr [edx - 0x17], mm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014660f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145fcf: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001535d0: movq qword ptr [edx - 0x18], mm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0014663f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145fff: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014667f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014602f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014609f: movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001460cf: movq qword ptr [edx - 0x1d], mm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001460ff: movq qword ptr [edx - 0x1e], mm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014a1b6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c1a6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x001535e6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0014647a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e4a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00145f3a: movq qword ptr [edx - 0x25], mm0; movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00145f6a: movq qword ptr [edx - 0x26], mm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146475: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e45: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00145e40: movq qword ptr [edx - 0x40], mm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00146683: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146033: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0014a0cd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c0bd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0015350d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001460a3: movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001460d3: movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146103: movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00146613: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf8d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00145fd3: movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00146643: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146003: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0014a03d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c02d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0015347d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000910b5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091365: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0008ccf5: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x0008cf85: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0014a62c: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001539fc: movq qword ptr [edx], xmm0; pop ebx; ret; 
0x001539b8: movq xmm0, qword ptr [eax + 4]; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x001533ce: movq xmm0, qword ptr [eax - 0x10]; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00153508: movq xmm0, qword ptr [eax - 0xa]; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00149f88: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf88: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001533d8: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00153478: movq xmm0, qword ptr [eax - 9]; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0014a628: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001539f8: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00033eae: movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0x850f; 
0x000337cc: movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0xab75; 
0x0007c01e: movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebp - 0x5768770], cl; call dword ptr [edx - 0x73]; 
0x000b3d90: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x0008257a: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x00071662: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000b24d8: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x001023b6: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr es:[eax], al; jae 0x1023c7; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x0001fa8c: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], ah; cli; call dword ptr [eax - 0x18]; 
0x0001e919: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp - 0x5d1ed79], cl; call dword ptr [eax - 0x73]; 
0x0001f55c: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp - 0x5d1ed7a], cl; call dword ptr [eax - 0x73]; 
0x00048cc2: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000ecb41: movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [0x74bb0500]; str word ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00023f50: movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ecx - 0x7cebdbb4], cl; rol byte ptr [ecx], 0x83; ret; 
0x000fbbcf: movsb byte ptr es:[edi], byte ptr [esi]; and eax, 0xe8500000; ja 0xfbbd8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013269a: movsb byte ptr es:[edi], byte ptr [esi]; call 0x10ec60; ret; 
0x0004efbd: movsb byte ptr es:[edi], byte ptr [esi]; cld; call dword ptr [ebp + 0x57]; 
0x000fb15d: movsb byte ptr es:[edi], byte ptr [esi]; dec esp; cli; call dword ptr [eax + 0x53]; 
0x000ba84b: movsb byte ptr es:[edi], byte ptr [esi]; in al, dx; stc; inc dword ptr [ecx]; int1; jmp ecx; 
0x000b1598: movsb byte ptr es:[edi], byte ptr [esi]; js 0xb1592; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x0007e53a: movsb byte ptr es:[edi], byte ptr [esi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009db9b: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0011b780: movsb byte ptr es:[edi], byte ptr [esi]; pop ebp; cli; call dword ptr [ecx - 0x77]; 
0x0001b041: movsb byte ptr es:[edi], byte ptr [esi]; push ds; adc al, byte ptr [eax]; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x0010cdb8: movsb byte ptr es:[edi], byte ptr [esi]; push ds; add byte ptr [eax], al; nop; nop; ret; 
0x000396b3: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001029e5: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x00134849: movsb byte ptr es:[edi], byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x0004d23f: movsb byte ptr es:[edi], byte ptr [esi]; stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x57]; 
0x00112286: movsb byte ptr es:[edi], byte ptr [esi]; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000e3583: movsb byte ptr es:[edi], byte ptr [esi]; xchg ebx, eax; cli; call dword ptr [eax - 0x18]; 
0x00098b72: movsb byte ptr es:[edi], byte ptr [esi]; xchg edi, eax; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000516a2: movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xfa; call dword ptr [ebx + 0x50]; 
0x00025581: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add bl, 0x2e; cli; call dword ptr [eax - 0x18]; 
0x00122d02: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [ecx + 0x60], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x0004efa5: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + esi*2], dh; cli; call dword ptr [eax - 0x18]; 
0x0005dda7: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x0014ab3c: movsd dword ptr es:[edi], dword ptr [esi]; and edi, edi; inc dword ptr [ecx + 0x44f80c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009bfca: movsd dword ptr es:[edi], dword ptr [esi]; call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009602a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ea: movsd dword ptr es:[edi], dword ptr [esi]; call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00133cb9: movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x00131496: movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x001435ec: movsd dword ptr es:[edi], dword ptr [esi]; cmc; call dword ptr [edi - 1]; 
0x00049897: movsd dword ptr es:[edi], dword ptr [esi]; cmc; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x000f6747: movsd dword ptr es:[edi], dword ptr [esi]; dec eax; bnd jmp dword ptr [esi - 0x70]; 
0x00100a92: movsd dword ptr es:[edi], dword ptr [esi]; int1; dec dword ptr [ecx - 0x1732143d]; ret 0xe1; 
0x000c7022: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x0009d5aa: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x0009dc1e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0009dbf4: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d584: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0005e978: movsd dword ptr es:[edi], dword ptr [esi]; out 0xff, eax; jmp eax; 
0x00151d9d: movsd dword ptr es:[edi], dword ptr [esi]; out 3, al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ea8fb: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0009bef1: movsd dword ptr es:[edi], dword ptr [esi]; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009dbf2: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d582: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0009dc5b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0004415e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x0011fa97: movsd dword ptr es:[edi], dword ptr [esi]; xchg ebx, eax; lock dec dword ptr [ebp - 0x560777a]; call dword ptr [eax - 0x73]; 
0x0009dc5d: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0009dbf1: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d581: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0009dc5a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00060c4b: movsx eax, bl; mov edx, dword ptr [esp + 0x68]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0008ad1b: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0x8ad18; pop ebx; ret; 
0x00132c94: movzx eax, al; add esp, 0x1c; ret; 
0x000ef142: movzx eax, al; add esp, 0x4c; ret; 
0x00127394: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x000f9a7a: movzx eax, al; add esp, 8; pop ebx; ret; 
0x0010ecef: movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000c71cd: movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00030a78: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000e8347: movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x00051db1: movzx eax, al; mov ebx, dword ptr [edi + eax*4 - 0x6378c]; add ebx, edi; jmp ebx; 
0x00067ec3: movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x6257c]; add ecx, ebx; jmp ecx; 
0x00067e27: movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x000527f7: movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x63430]; add ecx, edi; jmp ecx; 
0x00052422: movzx eax, al; mov ecx, dword ptr [edi + eax*4 - 0x636d0]; add ecx, edi; jmp ecx; 
0x00076bab: movzx eax, al; mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x000cebae: movzx eax, al; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x00050f0e: movzx eax, al; neg eax; add esp, 4; pop ebx; pop esi; ret; 
0x0001b8ab: movzx eax, al; neg eax; ret; 
0x000770cf: movzx eax, al; pop ebx; neg eax; ret; 
0x00074997: movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x0012731a: movzx eax, al; pop ebx; pop esi; ret; 
0x00126119: movzx eax, al; pop ebx; ret; 
0x000319ce: movzx eax, al; ret; 
0x000ef322: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0007b361: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x001012fb: movzx eax, ax; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x0011f4bb: movzx eax, ax; ret; 
0x000524a4: movzx eax, bl; mov edx, dword ptr [edi + eax*4 - 0x63580]; add edx, edi; jmp edx; 
0x0011b3aa: movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000668f5: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0006669b: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00060b2a: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f73: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x0006163c: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a4: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a6c: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00078e92: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0015d60d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x001606e7: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x0014a11c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c10c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0015355c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0007864d: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0014a7a0: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153b50: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x0015d362: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0007648a: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000c7d20: movzx eax, byte ptr [ecx]; pop ebx; test al, al; mov eax, 0; cmovne eax, ecx; ret; 
0x000c7d04: movzx eax, byte ptr [ecx]; test al, al; jne 0xc7cec; xor eax, eax; pop ebx; ret; 
0x000ca244: movzx eax, byte ptr [ecx]; test al, al; jne 0xca22c; xor eax, eax; pop ebx; ret; 
0x000df264: movzx eax, byte ptr [ecx]; test al, al; jne 0xdf24c; xor eax, eax; pop ebx; ret; 
0x000dfd74: movzx eax, byte ptr [ecx]; test al, al; jne 0xdfd5c; xor eax, eax; pop ebx; ret; 
0x000eb5c4: movzx eax, byte ptr [ecx]; test al, al; jne 0xeb5ac; xor eax, eax; pop ebx; ret; 
0x0015ce65: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0015a024: movzx eax, byte ptr [edx + 1]; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x0015797d: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x001561b4: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0015a044: movzx eax, byte ptr [edx + 2]; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x0015799d: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001561c4: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0015a064: movzx eax, byte ptr [edx + 3]; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x001579bd: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001561d4: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001579dd: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001561e4: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0015a0a4: movzx eax, byte ptr [edx + 5]; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x001579fd: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001561f4: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x00157a1d: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00156204: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00157941: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00156194: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00065e00: movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0015a003: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x00079e9e: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0013e611: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x000748f2: movzx eax, byte ptr [edx]; ret; 
0x0015795c: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x001561a3: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00066644: movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62880]; add ecx, ebx; jmp ecx; 
0x00066a7c: movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62980]; add ecx, ebx; jmp ecx; 
0x00065cc0: movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x00154b56: movzx eax, byte ptr [esi]; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0001dd76: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000293bc: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x000290e7: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x000290b7: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00029087: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00028fd7: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00029037: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00028f57: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00029007: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00028fa7: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00029177: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00028f87: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00029067: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00028f37: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0010c4ef: movzx eax, word ptr [eax + edx*2]; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x000b28b7: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ff128: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00157c30: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x157a90; pop ebp; xor eax, eax; ret; 
0x00157979: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x001561b0: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00157999: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001561c0: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001579b9: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001561d0: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001579d9: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001561e0: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001579f9: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001561f0: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x00157a19: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00156200: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0015793d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00156190: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0015d4c4: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x0016058a: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x00149ff8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfe8: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00153438: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0009d872: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0x9d87d; xor eax, eax; pop ebx; ret; 
0x0014a678: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153a48: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00157959: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x001561a0: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0015ce69: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0002df81: movzx ecx, cl; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x0014a088: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c078: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001534c8: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0014a708: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00153ac8: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x0008b5f9: movzx edi, bl; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x0010ecec: movzx edx, ax; movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000e2fb0: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000de1e0: movzx edx, byte ptr [ebx + 4]; mov eax, dword ptr [esp + 0xc]; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x00127eb9: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x127eb0; pop ebx; ret; 
0x0002e661: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x2e645; ret; 
0x0015d365: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000ddb61: movzx edx, byte ptr [esi + 0x18]; mov ecx, dword ptr [ebx + edx*4 - 0x5fed8]; add ecx, ebx; jmp ecx; 
0x001601d4: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00160234: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00160204: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001601f4: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001601c5: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000ea934: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00103d7e: movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x00103414: movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00103c7e: movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x00103a7e: movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x00103b7e: movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0010387e: movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x00103afe: movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x001038fe: movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0010397e: movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x00103bfe: movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x001037fe: movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x00069cac: mul byte ptr [ebp - 0x39]; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x001192ea: mul byte ptr [esi - 0x77]; inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x00146687: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0010ca85: neg byte ptr [eax - 6]; call dword ptr [edx - 0x17]; 
0x0001b2a9: neg byte ptr [ebx - 0x77]; pop esi; pop edi; pop ebp; ret; 
0x00110aab: neg dword ptr [ecx - 6]; call dword ptr [eax - 0x18]; 
0x0015c9d7: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x00050f11: neg eax; add esp, 4; pop ebx; pop esi; ret; 
0x0015a147: neg eax; add esp, 4; pop ebx; ret; 
0x0009efae: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0012e3ac: neg eax; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0001affb: neg eax; mov edx, dword ptr [edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0002f9b5: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00157a97: neg eax; pop ebp; ret; 
0x0001b456: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000f4d1e: neg eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000eb3b0: neg eax; pop ebx; ret; 
0x0015e707: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0015e1a7: neg eax; pop edi; pop ebx; ret; 
0x00163077: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000b2587: neg eax; pop edi; pop esi; ret; 
0x001453a1: neg eax; pop esi; pop edi; pop ebp; ret; 
0x00043c33: neg eax; pop esi; pop edi; ret; 
0x0001b8ae: neg eax; ret; 
0x0007c7ac: neg edi; sub esp, 0xc; push edi; call dword ptr [ebp]; 
0x000bee76: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x000f4758: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0001b53d: neg edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001b45c: neg edx; ret; 
0x00028103: nop; adc eax, 0x8d000011; and al, 0x10; add byte ptr [eax], al; ret; 
0x00145d0e: nop; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0011fbee: nop; add al, 0xa1; cli; call dword ptr [edx - 0x73]; 
0x000ec7be: nop; add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x000310fb: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0006fa05: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x137c3fbb], cl; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x000b43f2: nop; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0003c71d: nop; add byte ptr [eax], al; add cl, ch; retf 0xfff6; call dword ptr [ebx + 0x6a]; 
0x00085372: nop; add byte ptr [ebx + ebp*8 + 0x2e580ff], dl; lea eax, [eax - 0x8c3b0]; cmovne edx, eax; mov eax, edx; ret; 
0x0002919e: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0012ba96: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0012ba96: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000f77c9: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00137b5b: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0010d5ec: nop; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x000510df: nop; add dword ptr [edx + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x00162b2f: nop; add eax, 1; pop edi; ret; 
0x000b277f: nop; add eax, 1; ret; 
0x000b278f: nop; add eax, 3; ret; 
0x00043b8f: nop; add eax, dword ptr [esp]; ret; 
0x00161fbf: nop; add edx, 1; jl 0x162080; lea eax, [ecx + 1]; ret; 
0x00123f2f: nop; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00122e47: nop; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00078daf: nop; add esp, 4; pop ebx; pop esi; ret; 
0x000de53f: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000f9907: nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007b5eb: nop; and al, 1; add byte ptr [eax], al; ret; 
0x0007b63b: nop; and byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x0016142f: nop; and eax, 0x1fff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016140f: nop; and eax, 0x3ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016143f: nop; and eax, 0x3fff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016141f: nop; and eax, 0x7ff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0016144f: nop; and eax, 0x7fff; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0009d2af: nop; bsf eax, eax; add eax, edx; ret; 
0x0009cbdf: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0009d2cf: nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x0009d29f: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x0009ce7f: nop; bsr eax, eax; add eax, ecx; ret; 
0x0009ce9f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x0009ceaf: nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00079cff: nop; call 0x13cee9; add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00031c2f: nop; call 0x13cee9; add eax, 0x1b23cb; mov eax, dword ptr [eax + 0x48]; ret; 
0x0002940f: nop; call 0x13cee9; add eax, 0x1babeb; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293ef: nop; call 0x13cee9; add eax, 0x1bac0b; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x000293cf: nop; call 0x13cee9; add eax, 0x1bac2b; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x0001beaf: nop; call 0x13cee9; add eax, 0x1c814b; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001be8f: nop; call 0x13cee9; add eax, 0x1c816b; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001b5af: nop; call 0x13cee9; add eax, 0x1c8a4b; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0001b05f: nop; call 0x13cee9; add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x0001b03f: nop; call 0x13cee9; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x0011f48f: nop; call 0x13cee9; add eax, 0xc4b6b; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x0010efff: nop; call 0x13cee9; add eax, 0xd4ffb; mov eax, dword ptr [eax - 0x110]; add eax, dword ptr gs:[0]; ret; 
0x00102cef: nop; call 0x13cee9; add eax, 0xe130b; mov eax, dword ptr [eax - 0x10c]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000f588f: nop; call 0x1aff0; add esp, 4; pop ebx; pop esi; ret; 
0x000ffcff: nop; call 0x1aff0; pop ebx; pop esi; pop edi; ret; 
0x0012457f: nop; call 0xf75a0; mov dword ptr [ebx + 0x3274], eax; add esp, 8; pop ebx; ret; 
0x0007c7ff: nop; call eax; 
0x000b6b90: nop; cli; call dword ptr [eax - 0x18]; 
0x000ad3b4: nop; cli; call dword ptr [eax - 0x73]; 
0x000b5752: nop; cli; call dword ptr [edi + 0x50]; 
0x0007b5bb: nop; cmp byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x0001a76f: nop; cmp byte ptr [ecx], bl; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0001a6cf: nop; cmp byte ptr [ecx], bl; add byte ptr [eax], al; ret; 
0x00028e50: nop; dec eax; jo 0x28e4e; dec dword ptr [ebp - 0x58fd780]; call dword ptr [edx + 0x50]; 
0x0002f4ff: nop; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00028c29: nop; inc eax; ret; 
0x0001bf38: nop; insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x0015d35f: nop; jb 0x15d370; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00050d75: nop; je 0x50d72; call dword ptr [eax - 0x73]; 
0x0008aa31: nop; je 0x8a9c0; cli; call dword ptr [edx - 0x73]; 
0x0008aa50: nop; je 0x8a9df; cli; call dword ptr [edx - 0x73]; 
0x00112119: nop; jecxz 0x11210e; call dword ptr [eax - 0x18]; 
0x0007c023: nop; js 0x7bfaf; cli; call dword ptr [edx - 0x73]; 
0x00161ddf: nop; lea eax, [ecx + 0xa]; ret; 
0x00161def: nop; lea eax, [ecx + 0xb]; ret; 
0x00161dff: nop; lea eax, [ecx + 0xd]; ret; 
0x00161e0f: nop; lea eax, [ecx + 0xe]; ret; 
0x00161e1f: nop; lea eax, [ecx + 0xf]; ret; 
0x00161d6f: nop; lea eax, [ecx + 1]; ret; 
0x00161d7f: nop; lea eax, [ecx + 2]; ret; 
0x00161d8f: nop; lea eax, [ecx + 3]; ret; 
0x00161d9f: nop; lea eax, [ecx + 5]; ret; 
0x00161daf: nop; lea eax, [ecx + 6]; ret; 
0x00161dbf: nop; lea eax, [ecx + 7]; ret; 
0x00161dcf: nop; lea eax, [ecx + 9]; ret; 
0x00031c8f: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x48], eax; mov eax, ecx; ret; 
0x00160d4f: nop; lea eax, [edi + 1]; pop edi; ret; 
0x0016355f: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x00160d3f: nop; lea eax, [edi]; pop edi; ret; 
0x0016243f: nop; lea eax, [edx + 0xa]; ret; 
0x0016244f: nop; lea eax, [edx + 0xc]; ret; 
0x0016245f: nop; lea eax, [edx + 0xd]; ret; 
0x0016246f: nop; lea eax, [edx + 0xe]; ret; 
0x001623df: nop; lea eax, [edx + 2]; ret; 
0x001623ef: nop; lea eax, [edx + 4]; ret; 
0x001623ff: nop; lea eax, [edx + 5]; ret; 
0x0016240f: nop; lea eax, [edx + 6]; ret; 
0x0016241f: nop; lea eax, [edx + 8]; ret; 
0x0016242f: nop; lea eax, [edx + 9]; ret; 
0x0009f2df: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x00028187: nop; lea edx, [ecx - 0x5ceff]; mov eax, edx; pop ebx; ret; 
0x00037f66: nop; lodsb al, byte ptr [esi]; cli; dec dword ptr [ebx - 0x10779]; jmp dword ptr [ebp - 0x39]; 
0x0005dcbe: nop; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x000911ff: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00095a8f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000910cf: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x0009120f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x0008cd0f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x0008ce2f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0009c08f: nop; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0009534f: nop; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x0008aacf: nop; mov byte ptr [edx - 1], 0; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000eb0ac: nop; mov ch, 0xfd; inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000b276f: nop; mov ch, dh; and ch, 0xf; je 0xb2790; add eax, 2; ret; 
0x0009f3cf: nop; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x0012596f: nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0012597f: nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008ed0f: nop; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0008ed2f: nop; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0008ed1f: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0008ecff: nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009536f: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0009537f: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0006725f: nop; mov dword ptr [esp + 0x50], 1; jmp ebx; 
0x0012e22f: nop; mov dword ptr [esp + 8], eax; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x00098c7f: nop; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c70ff: nop; mov eax, 0x100; ret; 
0x000510cf: nop; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0010008f: nop; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0010008f: nop; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000c661f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c661f: nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0007b47f: nop; mov eax, 0x16; ret; 
0x000f7aaf: nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000f7aaf: nop; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000c662f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000c662f: nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000c68ef: nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000c68ef: nop; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000ec1f7: nop; mov eax, 0x6a; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ec357: nop; mov eax, 0x6b; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ec2a7: nop; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000c6fbf: nop; mov eax, 0x7e; pop ebx; ret; 
0x00101d87: nop; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0007b36f: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0007b36f: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00030ebf: nop; mov eax, 0xad; int 0x80; 
0x000c663f: nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000c663f: nop; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000c665f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000c665f: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000c664f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000c664f: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000c666f: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000c666f: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000c6fcf: nop; mov eax, 0xfffa; pop ebx; ret; 
0x0006efdf: nop; mov eax, 0xffffffff; ret; 
0x0015624f: nop; mov eax, 1; ja 0x156259; neg eax; ret; 
0x000c7e6f: nop; mov eax, 1; ret; 
0x00125f9f: nop; mov eax, 2; ret; 
0x0013992f: nop; mov eax, dword ptr [eax + 0x3750]; jmp dword ptr [eax + 8]; 
0x000ffcb7: nop; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00031b2f: nop; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0013ca2a: nop; mov eax, dword ptr [eax]; ret; 
0x00030d6f: nop; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x000fdd97: nop; mov eax, dword ptr [ebx - 0x108]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x00030e9f: nop; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0013d00f: nop; mov eax, dword ptr [ecx - 0x108]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x00090fff: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x0008cc3f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x0008ce4f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0007384f: nop; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007373f: nop; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x000f2a6f: nop; mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x0007195f: nop; mov eax, dword ptr [edx - 0x108]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x0003065f: nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0010193f: nop; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0002f36f: nop; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00132a3f: nop; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007486f: nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000291df: nop; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0010eccf: nop; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x0010ecbf: nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0003417f: nop; mov eax, dword ptr [esp + 4]; cdq; xor eax, edx; sub eax, edx; ret; 
0x000c06ff: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0013ca2f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x48]; ret; 
0x0013caff: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0013caef: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0013ca8f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x000f5aef: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x000737af: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000c0adf: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007487f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007488f: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00132a4f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0013ca6f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0002743f: nop; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00079d3f: nop; mov eax, dword ptr [esp + 4]; ret; 
0x0007378f: nop; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007379f: nop; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0007b32f: nop; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0002938f: nop; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0007b30f: nop; mov eax, dword ptr gs:[8]; ret; 
0x000960ef: nop; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x0008f95f: nop; mov eax, edx; pop ebx; ret; 
0x001623bf: nop; mov eax, edx; ret; 
0x001265cf: nop; mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000b285f: nop; mov ecx, eax; mov eax, ecx; ret; 
0x0008526f: nop; mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x001258ff: nop; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00098c9f: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013ca4a: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x001326af: nop; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001000af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000f7b4f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0010046f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000c59ef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ef2cf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000edcef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000f79ef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ecabf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ff27f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e5f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffddf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000f7eaf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0010027f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000c57bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000fffff: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000c689f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ff7af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000fafdf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000e1ccf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000e1d0f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000ef27f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ede6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ff49f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4bf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000fff8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0010033f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0010036f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000ffeff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001003df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0010040f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0010043f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x000ec0af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x0003113f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbbf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ff42f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000f634f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x000faddf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec85f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec88f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bbf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f780f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000ffe6f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ed9af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000faf7f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafaf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000e1c3f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c6f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000ffe9f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffecf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003171f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000c667f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001001df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdcdf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc6f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb3f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecadf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000ef14f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0008ecdf: nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x0008b0b7: nop; mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000910af: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x0008ccef: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00163c6f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x00098ddf: nop; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008ed9f: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x0008edaf: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x0008edbf: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0008ed3f: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x0009102f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x0009126f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x0008cc6f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00163c3f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000782af: nop; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001561bf: nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001561cf: nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001561df: nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001561ef: nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001561ff: nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0015619f: nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0010008d: nop; nop; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000c661e: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c661e: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x000f7aae: nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000c662e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000c662e: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000c68ed: nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000c68ed: nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x0007b36e: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0007b36e: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00030ebe: nop; nop; mov eax, 0xad; int 0x80; 
0x000c663e: nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000c663e: nop; nop; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000c665e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000c665e: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000c664e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000c664e: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000c666e: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000c666e: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00125fad: nop; nop; mov eax, 2; ret; 
0x0003065e: nop; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0007486e: nop; nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0010ecce: nop; nop; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x0010ecbe: nop; nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000c06fd: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x000f5aed: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007b31e: nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x001000ad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x000f7b4e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0010046d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000c59ee: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ef2cd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000edcee: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd6d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000f79ed: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ecabd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ff27d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e5e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffddd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000f7ead: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0010027d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000c57bd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ffffd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000c689d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ff7ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000fafdd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000e1ccd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000e1d0d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000ef27d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ede6e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ff49e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4be: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000fff8d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0010008b: nop; nop; nop; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000c661c: nop; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000c661c: nop; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x000f7aac: nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000c68eb: nop; nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000c68eb: nop; nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x0007b36c: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0007b36c: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x00030ebc: nop; nop; nop; mov eax, 0xad; int 0x80; 
0x00125fab: nop; nop; nop; mov eax, 2; ret; 
0x0003065c: nop; nop; nop; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0007486c: nop; nop; nop; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0010ecbc: nop; nop; nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0007b31c: nop; nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x00100089: nop; nop; nop; nop; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000c661a: nop; nop; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f7aaa: nop; nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000c68e9: nop; nop; nop; nop; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x00030eba: nop; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x00125fa9: nop; nop; nop; nop; mov eax, 2; ret; 
0x0007b31a: nop; nop; nop; nop; mov eax, dword ptr gs:[8]; ret; 
0x0012b278: nop; nop; nop; nop; nop; ret; 
0x00105849: nop; nop; nop; nop; ret; 
0x0010584b: nop; nop; nop; ret; 
0x00125d6c: nop; nop; nop; xor eax, eax; ret; 
0x000c5d5d: nop; nop; pop ecx; mov eax, 0xbe; int 0x80; 
0x000b401e: nop; nop; push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f566e: nop; nop; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010584d: nop; nop; ret; 
0x000ea8bd: nop; nop; xor eax, eax; ret; 
0x000eb363: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x000eb37b: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00078b2f: nop; or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x78b30; ret; 
0x0007b46f: nop; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x00030ec7: nop; pop eax; mov eax, 0x77; int 0x80; 
0x000ea73f: nop; pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0009c8df: nop; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00160f7f: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x001267a7: nop; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000c5d5f: nop; pop ecx; mov eax, 0xbe; int 0x80; 
0x00094aaf: nop; pop edi; pop esi; pop ebx; ret; 
0x0015d16f: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x00098fef: nop; pop esi; ret; 
0x0008543c: nop; popal; idiv edi; cmovne edx, eax; mov eax, edx; ret; 
0x0001a6bf: nop; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000f90ef: nop; push ebx; mov eax, 0x10f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ed2ff: nop; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00050f2f: nop; push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b42ef: nop; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000f930f: nop; push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f933f: nop; push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003116f: nop; push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f61ef: nop; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec39f: nop; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ec3ff: nop; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ec3cf: nop; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b401f: nop; push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f566f: nop; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c66d0: nop; rcr byte ptr [ecx], 0; add byte ptr [ebp - 0x47d08a2e], al; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00083c0f: nop; ret 0xc801; 
0x0001ad1f: nop; ret; 
0x00111415: nop; salc; bnd call dword ptr [eax - 0x18]; 
0x0012e405: nop; salc; hlt; call dword ptr [eax - 0x48]; 
0x0012e380: nop; sar byte ptr [esi], 1; hlt; call dword ptr [edx - 0x75]; 
0x000ab12d: nop; sbb al, 0x8f; cli; call dword ptr [edx - 0x73]; 
0x0001cc6a: nop; sldt word ptr [eax]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdaf: nop; sldt word ptr [eax]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x00117bea: nop; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b681: nop; sub al, 1; add byte ptr [eax], al; ret; 
0x0016293f: nop; sub edi, 3; jb 0x1629e0; lea eax, [eax + 2]; pop edi; ret; 
0x0016294f: nop; sub edi, 5; jb 0x1629e0; lea eax, [eax + 4]; pop edi; ret; 
0x0016295f: nop; sub edi, 6; jb 0x1629e0; lea eax, [eax + 5]; pop edi; ret; 
0x0016190f: nop; sub edx, 2; jb 0x1619c0; lea eax, [edi + 1]; pop edi; ret; 
0x0016191f: nop; sub edx, 3; jb 0x1619c0; lea eax, [edi + 2]; pop edi; ret; 
0x0016192f: nop; sub edx, 5; jb 0x1619c0; lea eax, [edi + 4]; pop edi; ret; 
0x0016193f: nop; sub edx, 6; jb 0x1619c0; lea eax, [edi + 5]; pop edi; ret; 
0x00079a3f: nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00031a0f: nop; sub esp, 0x18; push 0; call 0x312c0; add esp, 0x1c; ret; 
0x0006ca7f: nop; sub esp, 0x18; push ecx; call 0x6e4e0; add esp, 0x1c; ret; 
0x0011f4af: nop; sub esp, 0xc; call 0xc6620; add esp, 0xc; movzx eax, ax; ret; 
0x0012bbcf: nop; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0005de3f: nop; sub esp, 4; push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x0005f390: nop; sub esp, 4; push esi; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x00123fcf: nop; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0012b4ef: nop; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x000810ff: nop; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x001635ef: nop; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x000ee491: nop; xchg esi, eax; cli; call dword ptr [eax - 0x73]; 
0x0015d3f2: nop; xor al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007b661: nop; xor byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x0012378f: nop; xor eax, eax; add esp, 0xc; ret; 
0x00129d1f: nop; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0007aa5f: nop; xor eax, eax; pop ebx; ret; 
0x0015e18f: nop; xor eax, eax; pop edi; pop ebx; ret; 
0x0009c6ef: nop; xor eax, eax; pop edi; ret; 
0x0003371f: nop; xor eax, eax; ret; 
0x0008ae0f: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00037fbf: not byte ptr [ebx - 0x77]; ret; 
0x00101588: not byte ptr [ebx - 0x77]; test dword ptr [ebx - 0x44efdbb4], 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010a1ef: not byte ptr [edi - 6]; call dword ptr [eax - 0x75]; 
0x0014eacb: not dword ptr [esp + eax]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00031974: not eax; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0002f30c: not eax; and eax, ecx; ret; 
0x0002f65f: not eax; and eax, edx; ret; 
0x00132dd8: not eax; shr eax, 0x1f; ret; 
0x000bee5c: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x001618ef: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001479f8: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0009dc24: or ah, bh; pop edi; ret; 
0x001240c9: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0013e72c: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x000ed8e0: or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ede77: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011a58b: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012595a: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x00162ae7: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x001010fd: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001011a8: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x00035283: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0x352b0; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000c58a8: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c5ab7: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000ea36d: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea41d: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ed0b3: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xed0e0; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed153: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xed180; mov eax, 4; call dword ptr gs:[0x10]; 
0x000edc7b: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xedca0; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eddcf: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f4443: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf4470; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000f4de1: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f5451: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f55d1: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f6853: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf6880; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68f3: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf6920; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f6a5d: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6bcd: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f785d: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f7a3b: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf7a60; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7adb: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xf7b00; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000fa24d: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xfa260; sub dword ptr [edx + 0x24f0], 1; ret; 
0x000fae53: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xfae80; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000ff7e8: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff898: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff948: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ffa01: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ffab3: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xffae0; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000c595a: or al, 0; add byte ptr [eax], al; test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000a5384: or al, 0; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x000a26ac: or al, 0; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0xeeb; 
0x000fe1da: or al, 0; add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x000fe10e: or al, 0; add byte ptr [ebp - 0x5ac6e7d], cl; call dword ptr [ecx + 0x51]; 
0x00077829: or al, 0; add byte ptr [ebp - 0x74ee8b40], al; pop eax; xor al, 0x39; ret 0x850f; 
0x00060dbb: or al, 0; add byte ptr [ebx + 0x555304ec], al; push esi; call dword ptr [eax + 0x1c]; 
0x0015bd7e: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006460d: or al, 0; add byte ptr [ebx - 0x7276fb14], al; pushal; idiv edi; call dword ptr [edx - 1]; 
0x0006489d: or al, 0; add byte ptr [ebx - 0x7276fb14], al; pushal; idiv edi; call dword ptr [esi + 0x52]; 
0x00026186: or al, 0; add byte ptr [ecx], bh; ret 0x1f74; 
0x0007b703: or al, 0; add eax, 0x1688fb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b673: or al, 0; add eax, 0x16898b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b653: or al, 0; add eax, 0x1689ab; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b603: or al, 0; add eax, 0x1689fb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x00079d03: or al, 0; add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x0007bdb3: or al, 0; add ecx, 0x16824b; mov ecx, dword ptr [ecx + 0x1dfc]; test ecx, ecx; jne 0x7bdd0; ret; 
0x0011f619: or al, 0; je 0x11f627; add dword ptr [eax + 8], 1; je 0x11f646; add esp, 0xc; ret; 
0x0011f498: or al, 0; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x0011fa00: or al, 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0004f13a: or al, 0x19; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007aa47: or al, 0x1a; add byte ptr [eax], al; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000ffcaa: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0013cefa: or al, 0x24; ret; 
0x0010629b: or al, 0x29; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b4693: or al, 0x29; ret 0x428d; 
0x00164edb: or al, 0x29; ret 0x448b; 
0x000ac9c2: or al, 0x29; ret; 
0x00087184: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000ff12e: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x00114bee: or al, 0x31; call dword ptr [ebx - 0x18]; 
0x00069a22: or al, 0x31; call dword ptr [esi - 0x18]; 
0x0010eb14: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013fb06: or al, 0x31; jmp dword ptr [ebp - 0x5f]; 
0x000f926c: or al, 0x31; leave; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0001cede: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00073766: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0012fea7: or al, 0x31; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x0006e450: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0015ddf5: or al, 0x39; fnstcw word ptr [eax]; jne 0x15de10; pop ebx; ret; 
0x00153cfc: or al, 0x39; ret 0x1d72; 
0x00151b4c: or al, 0x39; ret 0x2d72; 
0x0007d557: or al, 0x39; ret 0x870f; 
0x000364b5: or al, 0x39; ret; 
0x000bf947: or al, 0x3b; push 0x83b77d1c; ret 0x8301; 
0x000f8383: or al, 0x4c; cli; call dword ptr [edx - 0x77]; 
0x001043d8: or al, 0x4d; int1; jmp dword ptr [ebp - 0x77]; 
0x001171a6: or al, 0x50; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0016b787: or al, 0x50; call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000835d6: or al, 0x50; call edx; 
0x000c198d: or al, 0x50; mov dword ptr [esp + 0x1c], eax; call 0x139490; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0011686d: or al, 0x50; mov dword ptr [esp + 0x2c], eax; call 0x139490; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0010a0cf: or al, 0x50; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00108404: or al, 0x50; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x001089d7: or al, 0x50; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x00108c25: or al, 0x50; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8fc: or al, 0x50; push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x0001af9e: or al, 0x51; call edx; 
0x00067dd5: or al, 0x51; or eax, 0x27c38100; ret 0x17; 
0x001321f9: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x00132246: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x00131906: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x001318b1: or al, 0x52; push ebx; call dword ptr [eax]; 
0x00131c61: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x001174b2: or al, 0x53; call 0x139490; mov dword ptr [esp], ebp; call ebx; 
0x00024d10: or al, 0x53; call 0x139490; mov dword ptr [esp], esi; call ebx; 
0x00124d5d: or al, 0x53; call dword ptr [eax + 0x10]; 
0x0013e451: or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x00076973: or al, 0x53; call dword ptr [edi + 0x44]; 
0x0006e117: or al, 0x53; call dword ptr [esi + 0x10]; 
0x0007498a: or al, 0x53; call dword ptr [esi + 0x30]; 
0x000767e1: or al, 0x53; call dword ptr [esi + 0x44]; 
0x0010bb45: or al, 0x53; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0010bb9d: or al, 0x53; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x00113ab6: or al, 0x53; push 0x400; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x0012cfd6: or al, 0x55; call dword ptr [eax + 0x10]; 
0x0012626c: or al, 0x55; call dword ptr [esi]; 
0x0012cfed: or al, 0x55; call eax; 
0x0012bf00: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000bef36: or al, 0x55; push ebx; call eax; 
0x0016b62e: or al, 0x56; call 0x139490; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0011730e: or al, 0x56; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0001bf02: or al, 0x56; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x00027418: or al, 0x56; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00124240: or al, 0x56; call dword ptr [eax + 0x10]; 
0x0006bc61: or al, 0x56; call dword ptr [eax + 0x2c]; 
0x00078931: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0013f25d: or al, 0x56; call dword ptr [ebp + 0x44]; 
0x0006be2b: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x0006950b: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0006bef7: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x00078588: or al, 0x56; call dword ptr [edi + 0x34]; 
0x0013f3a6: or al, 0x56; call dword ptr [edi + 0x44]; 
0x000273dd: or al, 0x56; call eax; 
0x0010bc35: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0010bad7: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0010c18a: or al, 0x56; mov dword ptr [ebp - 0x44], ecx; push dword ptr [ebp - 0xbc]; push edx; call eax; 
0x0010c037: or al, 0x56; mov dword ptr [ebp - 0x44], edx; push dword ptr [ebp - 0xbc]; push ebx; call eax; 
0x0012bbd2: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001251ea: or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0005d93b: or al, 0x56; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000c1af7: or al, 0x57; call 0x139490; add esp, 0x10; mov eax, edi; call eax; 
0x00125198: or al, 0x57; call 0xedc70; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0012629d: or al, 0x57; call dword ptr [eax + 0x10]; 
0x0012625a: or al, 0x57; call dword ptr [eax + 8]; 
0x0007c7b0: or al, 0x57; call dword ptr [ebp]; 
0x001254d9: or al, 0x57; call eax; 
0x00075041: or al, 0x57; push ebx; call dword ptr [ecx + 0x3c]; 
0x00114d5c: or al, 0x5b; cli; call dword ptr [eax + 0x6a]; 
0x0002d240: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00107004: or al, 0x5b; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0003466c: or al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0006e1af: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x00083d1b: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00033bec: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009c095: or al, 0x5b; pop esi; ret; 
0x000c5829: or al, 0x5b; ret; 
0x000f52e0: or al, 0x5d; bnd jmp dword ptr [esi - 0x70]; 
0x0014f450: or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152f1a: or al, 0x5f; call 0x13cee5; add ebx, 0x3d51f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dbca: or al, 0x5f; call 0x13cee5; add ebx, 0x420af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bafa: or al, 0x5f; call 0x13cee5; add ebx, 0x43eff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149afa: or al, 0x5f; call 0x13cee5; add ebx, 0x45c7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00092ea0: or al, 0x5f; pop ebx; ret; 
0x00096780: or al, 0x5f; pop esi; pop ebx; ret; 
0x000911b4: or al, 0x5f; ret; 
0x00072e50: or al, 0x64; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000ec3ad: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec3c0; pop ebx; ret; 
0x000ec3dd: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec3f0; pop ebx; ret; 
0x000ec40d: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xec420; pop ebx; ret; 
0x0012feb9: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x0002fd10: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e3: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00034d66: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034db9: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x0011ce47: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0012e93f: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x00131a92: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b22: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131bdd: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c46: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce2: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132492: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132522: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b2: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132642: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x000b429e: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000f56d7: or al, 0x65; sub ebx, dword ptr [0x14]; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x0012e3b1: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8c8: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0013170b: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317eb: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00132d33: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d93: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x0013740f: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00138bd4: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x00034e06: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e59: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea6: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef9: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000acb56: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b3146: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31c6: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000eb546: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000f81b7: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc21: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x001006a2: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100722: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x0010082d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c8d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d02: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00101031: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011ceef: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11cefd; add esp, 0x1c; ret; 
0x00132c8a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132cda: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x0013cada: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x0014543d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x00050e80: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000bc70a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee0a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3e9: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec11a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec171: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000f5f60: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75cd: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xf75db; add esp, 0x1c; ret; 
0x0010c5e1: or al, 0x68; add al, byte ptr [eax]; add byte ptr [eax + 0x2c16838d], al; cli; call dword ptr [eax - 0x18]; 
0x0008324e: or al, 0x6a; add eax, 0x447e838d; cli; call dword ptr [eax - 0x73]; 
0x00077057: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f16b: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0013f065: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000eca33: or al, 0x6a; call dword ptr [edi + 0x56]; 
0x000627cc: or al, 0x6a; call dword ptr [esi - 0x18]; 
0x0001b79d: or al, 0x6c; cli; call dword ptr [eax - 0x18]; 
0x000a1172: or al, 0x74; and ecx, dword ptr [ebx + 0x31142444]; ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000d1cd8: or al, 0x74; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d6ade: or al, 0x74; ret; 
0x0011f54a: or al, 0x7f; ret; 
0x001208ed: or al, 0x81; ret; 
0x00060a72: or al, 0x82; add ecx, ebp; jmp ecx; 
0x00065cc6: or al, 0x82; add ecx, ebx; jmp ecx; 
0x000d06c9: or al, 0x82; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00070ae5: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000762a4: or al, 0x83; in al, dx; add al, 0x51; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00032313: or al, 0x83; in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x0013f3a3: or al, 0x83; in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x0012821c: or al, 0x83; in al, dx; or byte ptr [ebp - 0x59f5e7d], cl; call dword ptr [eax - 1]; 
0x00131e1b: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x000418db: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001268cd: or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x00074b13: or al, 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0013950e: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0004a4e7: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00049c83: or al, 0x83; les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x0001f82b: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0002d854: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002550b: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000817ac: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00119100: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0006e1ac: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00085969: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0004a557: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0012377f: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000eccbe: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001398dd: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00034255: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x000871fa: or al, 0x83; mov dword ptr [esi + edx*2], 0x172dce8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ebp - 0x8fef98c], cl; rol byte ptr [ecx], 1; ret; 
0x0009c6e3: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0009cc93: or al, 0x83; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x0012ab02: or al, 0x83; ret 0x5208; 
0x0009ef5a: or al, 0x83; ret 0x8310; 
0x000d0ace: or al, 0x83; ret 0x8901; 
0x0002c2e1: or al, 0x83; ret 0x8908; 
0x000cdde6: or al, 0x83; ret 0xe910; 
0x0001c9a6: or al, 0x83; ret; 
0x0007eda4: or al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0011a69f: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00115e3c: or al, 0x83; stc; and byte ptr [edi], cl; xchg esp, eax; ret; 
0x00118a2b: or al, 0x85; ror byte ptr [edi], 0x88; scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000f835a: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x5b28b6a], cl; call dword ptr [edx - 0x77]; 
0x000f8379: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x5b3f36a], cl; call dword ptr [edx - 0x77]; 
0x000fc9fb: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0xfca08; ret; 
0x000341dc: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00072b87: or al, 0x89; call 0x5d6689e9; ret; 
0x00072bbe: or al, 0x89; call 0x5d668a20; ret; 
0x000e61ca: or al, 0x89; call 0x5d6dc02c; ret; 
0x000eb485: or al, 0x89; call 0x5d6e12e7; ret; 
0x000fc435: or al, 0x89; call 0x5d6f2297; ret; 
0x000fcb11: or al, 0x89; call 0x5d6f2973; ret; 
0x0010d0cd: or al, 0x89; call 0x5d702f2f; ret; 
0x0011a50f: or al, 0x89; call 0x5d710371; ret; 
0x001315ae: or al, 0x89; call 0x5d727410; ret; 
0x00077f8f: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x00077073: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0001d67c: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x0006ccca: or al, 0x89; inc ebp; in al, 0xe8; insd dword ptr es:[edi], dx; ret; 
0x0002af77: or al, 0x89; inc ebp; mov ah, 0x83; ret 0x5201; 
0x00079a80: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000ed783: or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0007da7c: or al, 0x89; inc esp; and al, 0x2c; push esi; call dword ptr [eax]; 
0x000ffa44: or al, 0x89; inc esp; and al, 4; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5494: or al, 0x89; inc esp; and al, 4; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff549: or al, 0x89; inc esp; and al, 4; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5554: or al, 0x89; inc esp; and al, 4; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e6: or al, 0x89; inc esp; and al, 4; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b56: or al, 0x89; inc esp; and al, 4; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e24: or al, 0x89; inc esp; and al, 4; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x0007b2a2: or al, 0x89; inc esp; and al, 8; call edx; 
0x000f45f5: or al, 0x89; inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000c599e: or al, 0x89; lds edi, ptr [eax + 0x11c]; call dword ptr gs:[0x10]; 
0x000f6a9c: or al, 0x89; lds edi, ptr [eax + 0x14d]; call dword ptr gs:[0x10]; 
0x000f6c0c: or al, 0x89; lds edi, ptr [eax + 0x14e]; call dword ptr gs:[0x10]; 
0x0010113c: or al, 0x89; lds edi, ptr [eax + 0x151]; call dword ptr gs:[0x10]; 
0x00101431: or al, 0x89; lds edi, ptr [eax + 0x75]; call dword ptr gs:[0x10]; 
0x000f789c: or al, 0x89; lds edi, ptr [eax + 0x8e]; call dword ptr gs:[0x10]; 
0x000ea24c: or al, 0x89; lds edi, ptr [eax + 0xb4]; call dword ptr gs:[0x10]; 
0x000ea2fc: or al, 0x89; lds edi, ptr [eax + 0xb5]; call dword ptr gs:[0x10]; 
0x000fad25: or al, 0x89; lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x00041488: or al, 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x000c7f25: or al, 0x89; lea ebp, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x75]; 
0x00053822: or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x001021c3: or al, 0x89; mov bl, 0xc0; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001266ef: or al, 0x89; pop edx; sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x0001c5c4: or al, 0x89; push ebp; mov esp, 0xcec2e857; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call edi; 
0x000c5826: or al, 0x89; push ebx; or al, 0x5b; ret; 
0x00107c19: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001323d6: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e6: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0006cc5c: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0010358b: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00164ba9: or al, 0x89; ret 0x3bb; 
0x000f27ae: or al, 0x89; ret 0x408d; 
0x000dbf44: or al, 0x89; ret 0x448b; 
0x000f7c50: or al, 0x89; ret 0x7c8d; 
0x000574da: or al, 0x89; ret 0x8489; 
0x000573bc: or al, 0x89; ret 0x8589; 
0x000799fb: or al, 0x89; ret 0x8b; 
0x00163fa2: or al, 0x89; ret 0xb70f; 
0x0007031b: or al, 0x89; ret 0xc801; 
0x000d6f82: or al, 0x89; ret 0xe989; 
0x0002f557: or al, 0x89; ret 0xff25; 
0x00028eca: or al, 0x89; ret; 
0x001034df: or al, 0x89; ror dword ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 0x75]; 
0x00027f0c: or al, 0x89; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [ebx - 0x75]; 
0x0005feb4: or al, 0x89; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x00101943: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x0011fe85: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x000c5d22: or al, 0x8b; add byte ptr [edx + ebx - 0x3eae0000], 0xc8; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00131876: or al, 0x8b; add eax, dword ptr [ebp + 0x317374c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0012438a: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0012e236: or al, 0x8b; dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x000ed870: or al, 0x8b; dec esp; and al, 0x54; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000d7c88: or al, 0x8b; inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x00136619: or al, 0x8b; inc ebp; adc byte ptr [ecx - 0xe343], cl; dec dword ptr [ecx - 0xdf63]; dec dword ptr [ecx - 0xcf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0012d5aa: or al, 0x8b; inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x00130737: or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000fa97f: or al, 0x8b; inc ebp; or al, ch; pop eax; idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x001247bd: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0012b595: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0012efbb: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00126253: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x126267; push edi; call dword ptr [eax + 8]; 
0x00124a75: or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x0002f575: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000eb35d: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00030bf8: or al, 0x8b; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x000c12fc: or al, 0x8b; jge 0xc12d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c14fc: or al, 0x8b; jge 0xc14d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x0001f194: or al, 0x8b; jl 0x1f1bc; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000e8000: or al, 0x8b; mov word ptr [esi - 0x5f3e0], ss; add ecx, esi; jmp ecx; 
0x00030c29: or al, 0x8b; or byte ptr [edx + ebx], 0; pop ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000edf2e: or al, 0x8b; pop esp; and al, 0xc; mov eax, 0xb7; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00050f39: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001004a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100068: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd48: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6818: or al, 0x8b; pop esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef228: or al, 0x8b; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6658: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff258: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100108: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae18: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff38: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff68: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d98: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee878: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6968: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6998: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee848: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf18: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc48: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb18: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000637b5: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x00065136: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00065163: or al, 0x8b; popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x00124537: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x000e1df9: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f632c: or al, 0x8b; push esp; and al, 0x10; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000f2a63: or al, 0x8b; push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f42c3: or al, 0x8b; push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000263e4: or al, 0x8b; sbb dword ptr [edx + ebx], 0; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e7ca4: or al, 0x8b; test byte ptr [ecx - 0x5f518], dh; add eax, ecx; jmp eax; 
0x0007d7a8: or al, 0x8b; test dword ptr [eax + 0x56fffffe], edx; call dword ptr [eax]; 
0x000c86c1: or al, 0x8b; test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [edi - 1]; 
0x0007fdb1: or al, 0x8b; xchg dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000c92b3: or al, 0x8b; xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000f757b: or al, 0x8d; adc al, 0x96; cli; call dword ptr [eax - 0x73]; 
0x0005e816: or al, 0x8d; adc byte ptr [eax + 0x76], 0xfa; call dword ptr [eax - 0x18]; 
0x0002590a: or al, 0x8d; adc byte ptr [edi], 0x2f; cli; call dword ptr [eax + 0x56]; 
0x001210d6: or al, 0x8d; adc dword ptr [edi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x00120c16: or al, 0x8d; add al, 0xa0; cli; call dword ptr [eax + 0x68]; 
0x00120a7e: or al, 0x8d; add al, 0xa0; cli; call dword ptr [eax - 0x73]; 
0x000e6272: or al, 0x8d; add dword ptr [ecx], 0x31; cli; call dword ptr [eax - 0x18]; 
0x001211d0: or al, 0x8d; add dword ptr [edi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x0011b437: or al, 0x8d; and dword ptr [eax - 4], 0xffffffff; call dword ptr [eax + 0x6a]; 
0x00121188: or al, 0x8d; and ebp, 0x5f; cli; call dword ptr [eax + 0x56]; 
0x00083062: or al, 0x8d; and esp, 0xffffff8a; cli; call dword ptr [eax - 0x18]; 
0x0013c673: or al, 0x8d; cmp byte ptr [esi + 0x64], 0xfa; call dword ptr [eax - 0x18]; 
0x00134cf2: or al, 0x8d; cmp dword ptr [ecx + 0x5e], -6; call dword ptr [eax - 0x18]; 
0x000b5736: or al, 0x8d; cmp dword ptr [edx + 0x46], -6; call dword ptr [eax - 0x18]; 
0x0012f42a: or al, 0x8d; dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x0008e882: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0010b79c: or al, 0x8d; inc esp; push ds; add dword ptr [ebx - 0xc363], ecx; dec dword ptr [ecx - 0xcb73]; call dword ptr [eax - 0x77]; 
0x0013f84a: or al, 0x8d; je 0x13f874; add byte ptr [eax + 0x3904c083], dl; ret 0x4976; 
0x0003534b: or al, 0x8d; je 0x35375; add byte ptr [esi + ebx*2 + 1], dh; ret; 
0x000ab602: or al, 0x8d; je 0xab62c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000ac0e2: or al, 0x8d; je 0xac10c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c7053: or al, 0x8d; je 0xc707d; add byte ptr [eax + 0x40], bh; ret; 
0x0011edb1: or al, 0x8d; mov bl, 0xd7; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011eddd: or al, 0x8d; mov bl, 0xe4; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011ee09: or al, 0x8d; mov bl, 0xf3; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011fbec: or al, 0x8d; nop; add al, 0xa1; cli; call dword ptr [edx - 0x73]; 
0x0005dcbc: or al, 0x8d; nop; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x000258b4: or al, 0x8d; or byte ptr [edi], 0x2f; cli; call dword ptr [eax + 0x56]; 
0x00121228: or al, 0x8d; or dword ptr [esi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x001246b5: or al, 0x8d; or edi, 0x60; cli; call dword ptr [eax - 0x18]; 
0x0004b56e: or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8373]; call dword ptr [ebx - 0x75]; 
0x000b7292: or al, 0x8d; pop edx; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x000f27a2: or al, 0x8d; push 0x34e85501; mov ebp, 0xc483fffa; or al, 0x89; ret 0x408d; 
0x0012c828: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x00084a77: or al, 0x8d; push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x00132242: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131902: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00084333: or al, 0x8d; sbb dword ptr [ebp - 0x7c0005bc], -0x14; add al, 0x6a; add eax, 0x28838d50; jo 0x8433f; call dword ptr [eax - 0x18]; 
0x0002835b: or al, 0x8d; sbb dword ptr [edi], 0x2f; cli; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0002e70f: or al, 0x8d; sub dword ptr [esi], 0x2f; cli; call dword ptr [eax - 0x18]; 
0x00054c70: or al, 0x8d; test dword ptr [eax + 0x2bfffffb], edi; xchg ebp, eax; mov eax, 0x89fffffb; lea edx, [edx + edi*8 - 1]; call dword ptr [eax - 0x77]; 
0x0011ee2d: or al, 0x8d; wait; or ebx, dword ptr [edi - 6]; call dword ptr [ebx - 0x18]; 
0x0007f1b3: or al, 0x8d; xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x000ecf68: or al, 0x8d; xchg ah, cl; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x0011eb51: or al, 0x8d; xchg al, ch; sahf; cli; call dword ptr [eax - 0x73]; 
0x0012dfb3: or al, 0x8d; xchg bh, cl; pushal; cli; call dword ptr [eax - 0x18]; 
0x00115d7e: or al, 0x8d; xchg byte ptr [0x83fffa5c], dh; iretd; call dword ptr [eax - 0x18]; 
0x00115c98: or al, 0x8d; xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x00115db1: or al, 0x8d; xchg byte ptr [ecx + 0x5c], dl; cli; call dword ptr [eax - 0x18]; 
0x000ed088: or al, 0x8d; xchg byte ptr [esi + edx*4], al; cli; call dword ptr [eax - 0x18]; 
0x0004ef96: or al, 0x8d; xchg byte ptr [esp + esi*2 - 6], bl; call dword ptr [eax - 0x73]; 
0x000e8d0e: or al, 0x8d; xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x0013457d: or al, 0x8d; xchg dword ptr [ecx + 0x5e], edi; cli; call dword ptr [eax - 0x18]; 
0x0002674a: or al, 0x8d; xchg dword ptr [edi], esp; das; cli; call dword ptr [eax - 0x18]; 
0x000c63a5: or al, 0x8d; xchg dword ptr [edx], esp; das; cli; call dword ptr [eax - 0x18]; 
0x000675d3: or al, 0x8d; xchg dword ptr [esi + esi*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x000267ac: or al, 0x8d; xchg dword ptr [esi], ebp; das; cli; call dword ptr [eax - 0x18]; 
0x0007ae0f: or al, 0x8d; xchg dword ptr [esp + edi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x000e8f67: or al, 0x8d; xchg eax, edi; xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x000509e8: or al, 0x8d; xchg esi, esi; xor edi, edx; call dword ptr [eax - 0x18]; 
0x000ccda2: or al, 0x8d; xor bh, 0x48; cli; call dword ptr [eax - 0x18]; 
0x000f7bb7: or al, 0x8d; xor bh, 0x4b; cli; jmp dword ptr [ebp - 0x75]; 
0x00121f8a: or al, 0x8d; xor byte ptr [eax], 0xa1; cli; call dword ptr [eax - 0x18]; 
0x000c9648: or al, 0x8d; xor dl, 0x48; cli; call dword ptr [eax - 0x18]; 
0x00094893: or al, 0x91; jmp ecx; 
0x00098c0a: or al, 0x97; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949ba: or al, 0x99; jmp ecx; 
0x0013e4b6: or al, 0x99; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0011b6e0: or al, 0x9d; cli; call dword ptr [eax - 0x73]; 
0x0011cae3: or al, 0x9e; cli; call dword ptr [ebp - 1]; 
0x00138902: or al, 0xa6; cli; call dword ptr [esi - 1]; 
0x00163313: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x00143317: or al, 0xa; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f60f9: or al, 0xb4; jg 0xf60fc; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0015f04f: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x15f060; pop ebx; ret; 
0x0012d229: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000e6d9f: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x000eb39f: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fdbc1: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fffe1: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f919c: or al, 0xb8; inc eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x0010151a: or al, 0xb8; jne 0x10151e; add byte ptr [eax], al; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000ec26e: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec31e: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000806c9: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000edf32: or al, 0xb8; mov bh, 0; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ed21a: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000fdc21: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fdaf1: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec1be: or al, 0xb8; ret; 
0x000f79a0: or al, 0xb8; xor al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef261: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007d433: or al, 0xb9; cmp eax, 0x8b000011; jl 0x7d460; adc byte ptr [ebp - 0x5761b79], cl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x0007d391: or al, 0xb9; push 0x8b000002; jl 0x7d3be; adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x000f9823: or al, 0xb9; push es; add byte ptr [eax], al; add byte ptr [ecx + 0xfa6f3de], cl; xchg edi, eax; ret 0xda80; 
0x001678fd: or al, 0xb; je 0x167925; sbb al, 0xf; xchg ebp, eax; ret; 
0x00167993: or al, 0xb; je 0x1679bb; sbb al, 0xf; xchg ebp, eax; ret; 
0x00107fc3: or al, 0xb; pop edx; or al, 0xf6; ret; 
0x000262c9: or al, 0xba; mov edx, dword ptr [ebx + edi*4 - 0x3e0]; test edx, edx; je 0x262de; mov dword ptr [esp], eax; call edx; 
0x0007b369: or al, 0xc3; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0010369d: or al, 0xd3; ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x0002f398: or al, 0xdb; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0002f8ea: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0007f4ff: or al, 0xe8; mov ebx, 0x89fffff0; ret; 
0x00132dcf: or al, 0xe8; pop ebx; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0011f4b2: or al, 0xe8; push 0x83fffa71; les ecx, ptr [edi + ecx]; mov bh, 0xc0; ret; 
0x00075fb7: or al, 0xe8; ret; 
0x0010e9bf: or al, 0xe9; cmp edi, dword ptr [esi + esi*8]; jmp dword ptr [esi - 0x70]; 
0x0010ea7f: or al, 0xe9; fild dword ptr [ecx - 0xa]; jmp dword ptr [esi - 0x70]; 
0x000fca1b: or al, 0xe9; outsd dx, dword ptr [esi]; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x0016bef3: or al, 0xe9; pop ss; add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x0013ebf2: or al, 0xe9; ret 0xfffb; 
0x00043643: or al, 0xe9; ret; 
0x0010d3bf: or al, 0xe9; sti; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x0015d15f: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0015ce6b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0012159d: or al, 0xeb; mov al, byte ptr [0x5b1cc483]; pop esi; pop edi; pop ebp; ret; 
0x000c8612: or al, 0xeb; mov word ptr [ebx - 0x1077d], cs; jmp dword ptr [ebp - 0x7d]; 
0x00124eb6: or al, 0xf4; call dword ptr [esi - 0x73]; 
0x0004f8bb: or al, 0xf6; ret 0x7401; 
0x0010937a: or al, 0xf6; ret 0x7504; 
0x0004da67: or al, 0xf6; ret 0xf01; 
0x0004af98: or al, 0xf6; ret 0xf40; 
0x00107fc6: or al, 0xf6; ret; 
0x0010cf36: or al, 0xf9; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x00023f4d: or al, 0xf; and byte ptr [ebx + eax + 0x4c890000], 0x24; adc al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x001628f4: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x001640d6: or al, 0xf; dec ecx; ror dword ptr [ecx + 0x5f8c1cd], 0xf6; rcr dword ptr [edi], 0xf; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x0011f4ba: or al, 0xf; mov bh, 0xc0; ret; 
0x00060b29: or al, 0xf; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f72: or al, 0xf; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x000e8346: or al, 0xf; mov dh, 0xc0; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x0001b8aa: or al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x000410e2: or al, 0xf; mov dh, 0xc0; ret; 
0x0008ac4a: or al, 0xf; mov esi, 0x75c08401; adc ebx, ebp; adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x0003f99e: or al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b97fd: or al, 0xf; scasd eax, dword ptr es:[edi]; fimul word ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x000b2475: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00094c33: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00096296: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008e885: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0016777b: or al, 0xf; xchg ebp, eax; ret 0xd009; 
0x0011baeb: or al, 0xf; xchg ebp, eax; rol byte ptr [ebx - 0x4514fb40], 0xe8; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x001618c4: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000e8005: or al, 0xfa; inc dword ptr [ecx]; int1; jmp ecx; 
0x000e834e: or al, 0xfa; inc dword ptr [ecx]; retf; jmp ebx; 
0x0012dfce: or al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x00116dfb: or al, 0xff; je 0x116e23; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x001188a3: or al, 0xff; je 0x1188cb; and al, ch; ret; 
0x0013a0ee: or al, 0xff; je 0x13a116; and al, 0x8b; dec esp; and al, 0x24; call ecx; 
0x0002dff3: or al, 0xff; je 0x2e01b; cmp al, 0xe8; ret; 
0x00033c84: or al, 0xff; je 0x33cac; sub al, ch; ret 0xfffe; 
0x0004d29c: or al, 0xff; je 0x4d2c4; sbb bh, bh; je 0x4d2c8; sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x000c1a0f: or al, 0xff; je 0xc1a37; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x000de95b: or al, 0xff; je 0xde983; sub al, ch; dec ebx; ret; 
0x000f33d4: or al, 0xff; je 0xf33fc; sbb al, 0xe8; ret 0xfcce; 
0x000eb2d6: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000ec8c2: or al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000eb364: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x00144ee1: or al, 1; call dword ptr [ebp - 0x18]; 
0x00132a57: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00070126: or al, 1; ret 0xc8d; 
0x00084be7: or al, 1; ret; 
0x000fb6e0: or al, 3; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00081d7f: or al, 3; inc edx; or byte ptr [0xfedabeeb], dh; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x000de1e7: or al, 3; test byte ptr [eax - 0x5fe94], dl; jmp eax; 
0x0015d716: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x00167d13: or al, 9; fisttp word ptr [ecx]; test dword ptr [ebx], 0x751c247c; ret 0x7c8b; 
0x000f4ae6: or al, 9; ret 0x850f; 
0x000668f8: or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x0006669e: or al, ah; mov ecx, dword ptr [edi + eax*4 - 0x62800]; add ecx, ebx; jmp ecx; 
0x00060b2d: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f76: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x0006163f: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62c80]; add ecx, ebp; jmp ecx; 
0x000615a7: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x62d80]; add ecx, ebp; jmp ecx; 
0x00060a6f: or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0009de6c: or al, al; je 0x9de74; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00166646: or al, byte ptr [eax]; add bh, dh; ret 0; 
0x000c5882: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ef287: or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000438f4: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00125972: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0015bfce: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000e42b8: or al, byte ptr [eax]; add byte ptr [ebx - 0x1677b], cl; jmp dword ptr [ebp - 0x75]; 
0x00048af7: or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x0009610d: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009c57f: or al, byte ptr [eax]; add ecx, 0xe5e93; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c074: or al, byte ptr [eax]; add ecx, 0xe639e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c04f: or al, byte ptr [eax]; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c02f: or al, byte ptr [eax]; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c012: or al, byte ptr [eax]; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf73: or al, byte ptr [eax]; add ecx, 0xe641f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfe5: or al, byte ptr [eax]; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf55: or al, byte ptr [eax]; add ecx, 0xe643d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bfce: or al, byte ptr [eax]; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfb3: or al, byte ptr [eax]; add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf30: or al, byte ptr [eax]; add ecx, 0xe6462; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bf91: or al, byte ptr [eax]; add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bf06: or al, byte ptr [eax]; add ecx, 0xe648c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009beed: or al, byte ptr [eax]; add ecx, 0xe64a5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009becc: or al, byte ptr [eax]; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009bea8: or al, byte ptr [eax]; add ecx, 0xe64ea; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009be8a: or al, byte ptr [eax]; add ecx, 0xe6508; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009be07: or al, byte ptr [eax]; add ecx, 0xe658b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c55: or al, byte ptr [eax]; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c30: or al, byte ptr [eax]; add ecx, 0xe96e2; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c06: or al, byte ptr [eax]; add ecx, 0xe970c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bed: or al, byte ptr [eax]; add ecx, 0xe9725; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bcc: or al, byte ptr [eax]; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098ba8: or al, byte ptr [eax]; add ecx, 0xe976a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b8a: or al, byte ptr [eax]; add ecx, 0xe9788; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098b6e: or al, byte ptr [eax]; add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096cdf: or al, byte ptr [eax]; add ecx, 0xeb55f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bfa: or al, byte ptr [eax]; add ecx, 0xeb6d4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096be7: or al, byte ptr [eax]; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bcb: or al, byte ptr [eax]; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960d4: or al, byte ptr [eax]; add ecx, 0xec16a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960af: or al, byte ptr [eax]; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009608f: or al, byte ptr [eax]; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096072: or al, byte ptr [eax]; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fd3: or al, byte ptr [eax]; add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00096045: or al, byte ptr [eax]; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009602e: or al, byte ptr [eax]; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096013: or al, byte ptr [eax]; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095ff1: or al, byte ptr [eax]; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095eff: or al, byte ptr [eax]; add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095edf: or al, byte ptr [eax]; add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095eba: or al, byte ptr [eax]; add ecx, 0xec304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000955df: or al, byte ptr [eax]; add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954fa: or al, byte ptr [eax]; add ecx, 0xecc74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954e7: or al, byte ptr [eax]; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954cb: or al, byte ptr [eax]; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a94: or al, byte ptr [eax]; add ecx, 0xed64a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a6f: or al, byte ptr [eax]; add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a4f: or al, byte ptr [eax]; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a32: or al, byte ptr [eax]; add ecx, 0xed6ac; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094993: or al, byte ptr [eax]; add ecx, 0xed6cb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00094a05: or al, byte ptr [eax]; add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949ee: or al, byte ptr [eax]; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949d3: or al, byte ptr [eax]; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949b1: or al, byte ptr [eax]; add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000948cf: or al, byte ptr [eax]; add ecx, 0xed78f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948af: or al, byte ptr [eax]; add ecx, 0xed7af; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009488a: or al, byte ptr [eax]; add ecx, 0xed7d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00137388: or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0013f7b8: or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; xor eax, eax; ret; 
0x000f5b07: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x0006d72f: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00031ce5: or al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000e1ad7: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x000d78b5: or al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0001b0d5: or al, byte ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x00098beb: or al, byte ptr [ebx + 0xa]; add byte ptr [ecx + 0xe9725c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0013d252: or al, byte ptr [ebx + edi*8]; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x000a3ba2: or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x00125605: or al, byte ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x00083d73: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x00030d25: or al, byte ptr [ecx + 0x120c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008aac1: or al, byte ptr [ecx + ecx*8 + 0x1689f275]; pop ebx; pop esi; ret; 
0x000bef4b: or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00161c72: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x161d70; mov eax, ecx; ret; 
0x000bee56: or al, byte ptr [ecx]; add byte ptr [eax], al; xor ecx, ecx; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00072e4e: or al, ch; or al, 0x64; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000fa982: or al, ch; pop eax; idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x000d9820: or al, ch; ret 0xf3f8; 
0x000f6927: or al, ch; ret; 
0x000b782a: or al, cl; sti; add ch, byte ptr [ecx]; ret; 
0x0014803c: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001479fc: or bh, ah; mov eax, edx; pop ebx; ret; 
0x00130031: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb3d8f7d], cl; call dword ptr [eax - 0x73]; 
0x0012a8f1: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb945f7d], cl; call dword ptr [eax - 0x73]; 
0x000510c0: or bh, al; inc edx; add al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0012f902: or bh, al; inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x00124004: or bh, bh; je 0x12402c; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00129f84: or bh, bh; je 0x129fac; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012cad9: or bh, bh; je 0x12cb01; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0012d591: or bh, bh; je 0x12d5b9; inc esp; push esi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012faa5: or bh, bh; je 0x12facd; adc al, 0x53; call dword ptr [eax]; 
0x0012fbd0: or bh, bh; je 0x12fbf8; sbb al, 0x53; call eax; 
0x0013b3e6: or bh, bh; je 0x13b40e; adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x0002b232: or bh, bh; je 0x2b25a; sbb byte ptr [ebp - 0x18], dl; ret; 
0x0008027a: or bh, bh; je 0x802a2; and al, 0x56; call eax; 
0x000807ea: or bh, bh; je 0x80812; and al, 0x53; call eax; 
0x00082134: or bh, bh; je 0x8215c; sbb al, 0x52; call eax; 
0x00082293: or bh, bh; je 0x822bb; sbb al, 0x53; call eax; 
0x000a0a42: or bh, bh; je 0xa0a6a; and byte ptr [ebx - 0x18], dl; ret; 
0x000d981c: or bh, bh; je 0xd985a; or al, ch; ret 0xf3f8; 
0x00165817: or bh, bh; jg 0x16581b; add byte ptr [ecx], cl; ret 0x448b; 
0x000bf227: or bh, bh; leave; lcall 0x194, 0xb872773b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005f7da: or bh, bh; mov ch, 0x38; idiv edi; dec dword ptr [ecx + 0x3c858bc2]; idiv edi; call dword ptr [ecx - 0x75]; 
0x0006480c: or bh, bh; mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89363]; call dword ptr [edx - 0x77]; 
0x0005ebd6: or bh, bh; mov ch, 0x94; idiv edi; call dword ptr [edx - 0x77]; 
0x000b2601: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x0013f443: or bh, dh; ret 0x202; 
0x0002fada: or bh, dh; ret 0xffff; 
0x000fad3a: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000748be: or bl, byte ptr [ebx + 0x5e]; ret; 
0x00096742: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0014f330: or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000d13c3: or bl, ch; and eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebp - 0x72f0ff8a], cl; ret 0; 
0x0013c23a: or bl, ch; mov ebp, eax; push ds; sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x0014a627: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001539f7: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00050096: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000f5af6: or byte ptr [0x100f], ah; ret; 
0x00081d82: or byte ptr [0xfedabeeb], dh; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x000bf386: or byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x000bee54: or byte ptr [eax + 0x10a], bh; xor ecx, ecx; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x001004ac: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0010006c: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x000ecbfc: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x000ef2ac: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x000ef1fc: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x000eb527: or byte ptr [eax + 0x13e], bh; call dword ptr gs:[0x10]; 
0x000edd4c: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x000bf510: or byte ptr [eax + 0x197], bh; call dword ptr gs:[0x10]; 
0x000f45f9: or byte ptr [eax + 0x19e], bh; call dword ptr gs:[0x10]; 
0x000f5e71: or byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x00098c95: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x000ef22c: or byte ptr [eax + 0x55], bh; call dword ptr gs:[0x10]; 
0x000f665c: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x000ff25c: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x00100615: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0010010c: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x000b6bfc: or byte ptr [eax + 0x68], bh; call dword ptr gs:[0x10]; 
0x001455ee: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ffdbc: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x000fae1c: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x000fff3c: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x000fff6c: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x0011cc64: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000e1cac: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001001bc: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x000c5d9c: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x000fada4: or byte ptr [eax + 0xc0], bh; call dword ptr gs:[0x10]; 
0x000ee8ac: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x000ee87c: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000c696c: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000c699c: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x000ee84c: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x000faf1c: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x000faeec: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x000fdbec: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x000fdc4c: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x000fdb1c: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x0011b1a7: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x57c3; 
0x0007d242: or byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00121b7a: or byte ptr [eax + 0xf0], bh; mov edx, 1; lea ebx, [ecx + 0x31e8]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009c179: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000f851d: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00031c1b: or byte ptr [eax + eax], 0; ret; 
0x00074e82: or byte ptr [eax + eax], 0x81; ret 0xf17b; 
0x000944dc: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x00072294: or byte ptr [eax - 0x3b7d0000], al; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00108afb: or byte ptr [eax - 0x49f0ffc2], al; adc byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x000fced2: or byte ptr [eax - 0x73], dl; or dword ptr [eax - 0x54], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000c2736: or byte ptr [eax - 0x73], dl; test dword ptr [edi + 0x47], eax; cli; call dword ptr [ecx + 0x50]; 
0x0009b820: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x0009b52d: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x0009437c: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000fe379: or byte ptr [eax - 0x7c72ebbb], cl; ret 0xfa4d; 
0x0010e66f: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000835aa: or byte ptr [eax - 1], dl; jae 0x835d3; call edx; 
0x0010c4a3: or byte ptr [eax - 2], 0x30; push dword ptr [esp + 0x1c]; call 0x10af20; add esp, 0x1c; ret; 
0x0007aa05: or byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x001532a0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153140: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d2f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152fe0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152e80: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d5b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152d20: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152bc0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d878; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152a60: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3d9d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152900: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3db38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001527a0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3dc98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152380: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3e0b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152220: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3e218; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001520c0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3e378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151f60: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x3e4d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014df50: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x41d28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ddf0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x41e88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dc90: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x41fe8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014db30: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d9d0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x422a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d710: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d5b0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x426c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d450: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d2f0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42988; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d190: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42ae8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d030: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42c48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ced0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x42da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cc10: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x43068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014be50: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x43ba8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd00: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x43cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bbb0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x43e48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ba60: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x43f98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b910: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x440e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b7c0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x44238; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b520: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x444d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b3d0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x44628; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b130: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x448c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014afe0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x44a18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149e50: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x45928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d00: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x45a78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149bb0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x45bc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149a60: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x45d18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149910: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x45e68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001497c0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x45fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149520: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x46258; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001493d0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x463a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148fe0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x46798; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148e90: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x468e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148d40: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x46a38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148bf0: or byte ptr [eax], ah; pop edi; call 0x13cee5; add ebx, 0x46b88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009cea5: or byte ptr [eax], ah; ret; 
0x00068177: or byte ptr [eax], al; add bl, ch; ret; 
0x00019008: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0013b578: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x20eb; 
0x00130711: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0016b1f0: or byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; push ebx; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0013cbc1: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00030e47: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007b749: or byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; mov dword ptr [ecx + 0x1e08], eax; ret; 
0x000f45b8: or byte ptr [eax], al; add byte ptr [eax], al; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000ff506: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00030f61: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000c5bb9: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, edx; add edi, 0x68; mov esi, edx; call dword ptr gs:[0x10]; 
0x000311de: or byte ptr [eax], al; add byte ptr [eax], al; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00125982: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00162a97: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0007b312: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005ed82: or byte ptr [eax], al; add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000cec5b: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e3c86: or byte ptr [eax], al; add byte ptr [ebx - 0x17b73], cl; call dword ptr [ebx + 0x29]; 
0x00048ae9: or byte ptr [eax], al; add byte ptr [ebx - 0x362f7b], cl; inc dword ptr [ebp - 0xf71f040]; or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x0006125e: or byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0005a73e: or byte ptr [eax], al; add byte ptr [ebx - 0x7bf00001], al; ret 0x13; 
0x00094b75: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007b574: or byte ptr [eax], al; jbe 0x7b580; ret; 
0x0001be83: or byte ptr [eax], al; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x00083027: or byte ptr [eax], al; lea esi, [esi]; ret; 
0x0004a06a: or byte ptr [eax], al; mov eax, edx; ret; 
0x001042aa: or byte ptr [eax], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fd679: or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ebp - 0x5b32780], cl; call dword ptr [eax - 0x18]; 
0x0009ceb5: or byte ptr [eax], dh; ret; 
0x0009ce95: or byte ptr [eax], dl; ret; 
0x00107519: or byte ptr [ebp + 0x39010544], cl; ret; 
0x000dda87: or byte ptr [ebp + 0x390474c0], al; ret; 
0x000d9314: or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x0004450f: or byte ptr [ebp + 0x468d0450], cl; add al, 0xf; xchg edx, eax; ret; 
0x00068de7: or byte ptr [ebp + 0x50142444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00075536: or byte ptr [ebp + 0x50242444], cl; push ebx; call dword ptr [edi + 0x48]; 
0x000751cd: or byte ptr [ebp + 0x50342444], cl; push ebx; call dword ptr [esi + 0x48]; 
0x0006fcc9: or byte ptr [ebp + 0x503c2444], cl; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0013e795: or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [edx + 0x48]; 
0x000c7eda: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x0012e657: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x00075879: or byte ptr [ebp + 0x52342454], cl; push esi; call dword ptr [eax + 0x48]; 
0x000786fe: or byte ptr [ebp + 0x52500179], cl; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000bef32: or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x00092e9d: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x00092edc: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x00071332: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0009671d: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x0009673f: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x0009677d: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00122509: or byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x00081885: or byte ptr [ebp + 0x74081], cl; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0009be8e: or byte ptr [ebp + 0xe], ah; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000e3870: or byte ptr [ebp - 0x12f63], cl; call dword ptr [ebx + 0x56]; 
0x000e3bd1: or byte ptr [ebp - 0x12f7b], cl; dec dword ptr [ecx - 0x14f73]; call dword ptr [eax + 0x56]; 
0x000fca17: or byte ptr [ebp - 0x16f38b40], al; outsd dx, dword ptr [esi]; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00074342: or byte ptr [ebp - 0x16ff9f7d], cl; call dword ptr [eax - 0x73]; 
0x000c86e6: or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax - 0x75]; 
0x0003101b: or byte ptr [ebp - 0x1b31376d], cl; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x000790aa: or byte ptr [ebp - 0x1d5f7b], cl; dec dword ptr [ecx + 0x29c129da]; ret 0xd139; 
0x0009f2bf: or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000c0931: or byte ptr [ebp - 0x2fb7f02e], al; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000aee10: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x36034b]; dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x77]; 
0x000aff33: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36376b]; dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000490d7: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000af275: or byte ptr [ebp - 0x39f48], cl; call dword ptr [edi + 0x53]; 
0x00085837: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00085c10: or byte ptr [ebp - 0x3f7cfeab], cl; add dword ptr [ecx], edi; ret 0xc72; 
0x000855a6: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x001388ff: or byte ptr [ebp - 0x559f34d], cl; call dword ptr [esi - 1]; 
0x0011755b: or byte ptr [ebp - 0x564337f], cl; call dword ptr [eax - 0x73]; 
0x000efcf6: or byte ptr [ebp - 0x569637a], cl; call dword ptr [eax - 0x73]; 
0x000ea1a7: or byte ptr [ebp - 0x56adf79], cl; call dword ptr [eax - 0x73]; 
0x000e9fb2: or byte ptr [ebp - 0x56afb79], cl; call dword ptr [eax - 0x73]; 
0x000747e0: or byte ptr [ebp - 0x5840f7f], cl; call dword ptr [eax - 0x73]; 
0x0002d17a: or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x000296c8: or byte ptr [ebp - 0x58f4f7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00025d7f: or byte ptr [ebp - 0x58fbf79], cl; call dword ptr [eax + 0x56]; 
0x0013cb5d: or byte ptr [ebp - 0x59b656d], cl; call dword ptr [edx + 0x50]; 
0x0012821f: or byte ptr [ebp - 0x59f5e7d], cl; call dword ptr [eax - 1]; 
0x00116dac: or byte ptr [ebp - 0x5a33b6d], cl; call dword ptr [edx + 0x50]; 
0x0011690a: or byte ptr [ebp - 0x5a36b6d], cl; call dword ptr [edx + 0x50]; 
0x0010c602: or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x001164c2: or byte ptr [ebp - 0x5a8466d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [esi + 0x52]; 
0x000f8361: or byte ptr [ebp - 0x5b28b6a], cl; call dword ptr [edx - 0x77]; 
0x000f8380: or byte ptr [ebp - 0x5b3f36a], cl; call dword ptr [edx - 0x77]; 
0x000f8342: or byte ptr [ebp - 0x5b3f66a], cl; call dword ptr [edx - 0x77]; 
0x000c6c0a: or byte ptr [ebp - 0x5b58950], cl; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000f842a: or byte ptr [ebp - 0x5b5897d], cl; call dword ptr [eax - 0x73]; 
0x001156ed: or byte ptr [ebp - 0x5b61f79], cl; call dword ptr [eax - 0x77]; 
0x000b5653: or byte ptr [ebp - 0x5b9587d], cl; call dword ptr [eax + 0x57]; 
0x001186bf: or byte ptr [ebp - 0x5bb4280], cl; call dword ptr [eax - 1]; 
0x00083094: or byte ptr [ebp - 0x5bb957d], cl; call dword ptr [eax + 0x56]; 
0x00081cf8: or byte ptr [ebp - 0x5bc017a], cl; call dword ptr [ebx + 0x50]; 
0x00122dcd: or byte ptr [ebp - 0x5bc377f], cl; call dword ptr [eax + 0x52]; 
0x00076c1c: or byte ptr [ebp - 0x5beeb7b], cl; call dword ptr [eax - 0x75]; 
0x000505c5: or byte ptr [ebp - 0x5cc127a], cl; call dword ptr [eax + 0x53]; 
0x0002e554: or byte ptr [ebp - 0x5ce047b], cl; call dword ptr [eax + 0x53]; 
0x000f9fe3: or byte ptr [ebp - 0x5ce497a], cl; call dword ptr [eax - 1]; 
0x000fce83: or byte ptr [ebp - 0x5ce497d], cl; call dword ptr [eax + 0x6a]; 
0x0011e049: or byte ptr [ebp - 0x5ce4b7b], cl; call dword ptr [eax + 0x56]; 
0x0002a0d2: or byte ptr [ebp - 0x5ce4b7e], cl; call dword ptr [eax + 0x57]; 
0x00025633: or byte ptr [ebp - 0x5d10f7d], cl; call dword ptr [eax - 1]; 
0x00025615: or byte ptr [ebp - 0x5d1156d], cl; call dword ptr [edx + 0x50]; 
0x00113fea: or byte ptr [ebp - 0x5d33a7b], cl; call dword ptr [eax + 0x53]; 
0x0011dbf4: or byte ptr [ebp - 0x5d33a7b], cl; call dword ptr [eax - 0x73]; 
0x000b56d7: or byte ptr [ebp - 0x5d33a7d], cl; call dword ptr [eax + 0x57]; 
0x000f98da: or byte ptr [ebp - 0x5d33a7d], cl; call dword ptr [eax - 0x73]; 
0x000b6efe: or byte ptr [ebp - 0x5d33a7f], cl; call dword ptr [eax + 0x53]; 
0x00051402: or byte ptr [ebp - 0x67c03b6], cl; sbb dword ptr [edi], ecx; xchg dword ptr [ecx - 0x75000000], esi; xchg esp, eax; lea eax, [eax]; ret; 
0x0010c734: or byte ptr [ebp - 0x72ad2fab], cl; xchg ebx, eax; push eax; test edx, esi; call dword ptr [edx - 1]; 
0x00107fbc: or byte ptr [ebp - 0x74a08b40], al; pop esi; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x00124138: or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x00026d64: or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x0007ae26: or byte ptr [ebp - 0x74f28b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0006853b: or byte ptr [ebp - 0x74ffd98c], cl; inc edx; add al, 0x83; ret 0xb904; 
0x0007b252: or byte ptr [ebp - 0x76218b2e], al; dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0016b740: or byte ptr [ebp - 0x78a1f6d], cl; call dword ptr [edx + 0x50]; 
0x00094baa: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000fc9d7: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 8], cl; ret; 
0x0008a6ae: or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x000f5ba4: or byte ptr [ebp - 0x7e288a2e], al; leave; add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; ret; 
0x000fa332: or byte ptr [ebp - 0x877b], cl; call dword ptr [eax - 0x73]; 
0x0010bd45: or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0012c192: or byte ptr [ebp - 0x8b63], cl; dec dword ptr [ecx - 0xab6b]; call dword ptr [eax + 0x53]; 
0x0012c2f9: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x000b715a: or byte ptr [ebp - 0xa763], cl; call dword ptr [ebx + 0x6a]; 
0x001239a3: or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x0012cff6: or byte ptr [ebp - 0xb72cf7d], cl; call dword ptr [eax - 0x73]; 
0x0012a668: or byte ptr [ebp - 0xb9d0f7d], cl; call dword ptr [eax - 0x73]; 
0x000f0131: or byte ptr [ebp - 0xf4d0f6d], cl; call dword ptr [edx - 0x73]; 
0x00143252: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x143268; pop ebx; ret; 
0x00050f3d: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x50f50; pop ebx; ret; 
0x000b4029: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xb4040; pop ebx; ret; 
0x000e1e01: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xe1e18; pop ebx; ret; 
0x000ec08f: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec0a0; pop ebx; ret; 
0x000ec8d2: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec8e8; pop ebx; ret; 
0x000ec902: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xec918; pop ebx; ret; 
0x000ed30d: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xed320; pop ebx; ret; 
0x000f5679: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf5690; pop ebx; ret; 
0x000f5971: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf5988; pop ebx; ret; 
0x000f59e1: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf59f8; pop ebx; ret; 
0x000f61fd: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf6210; pop ebx; ret; 
0x000f622d: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf6240; pop ebx; ret; 
0x000f90fd: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9110; pop ebx; ret; 
0x000f931d: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9330; pop ebx; ret; 
0x000f934d: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9360; pop ebx; ret; 
0x000f9381: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf9398; pop ebx; ret; 
0x000f93b1: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf93c8; pop ebx; ret; 
0x000eb3a8: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x00126256: or byte ptr [ebp - 1], dl; jbe 0x126267; push edi; call dword ptr [eax + 8]; 
0x00126299: or byte ptr [ebp - 1], dl; jbe 0x1262aa; push edi; call dword ptr [eax + 0x10]; 
0x00073544: or byte ptr [ebp - 6], ch; jmp dword ptr [esi - 0x70]; 
0x000748e9: or byte ptr [ebx + 0x14], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00129f6c: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x00125a43: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016c01e: or byte ptr [ebx + 0x22e083], cl; add byte ptr [ebp - 0x17fa8b40], al; ret 0xf65c; 
0x00120e01: or byte ptr [ebx + 0x24448900], cl; add al, 0xe9; adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0007b43a: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x0016a04f: or byte ptr [ebx + 0x29142474], cl; ret 0x448b; 
0x0016a874: or byte ptr [ebx + 0x292c245c], cl; ret 0x448b; 
0x0013978a: or byte ptr [ebx + 0x375080], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 4]; 
0x001396e2: or byte ptr [ebx + 0x375080], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x00124ca7: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0007b267: or byte ptr [ebx + 0x390c244c], cl; ret; 
0x00153cf8: or byte ptr [ebx + 0x390c2454], cl; ret 0x1d72; 
0x00151b48: or byte ptr [ebx + 0x390c2454], cl; ret 0x2d72; 
0x000737f9: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0012b592: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00030bf5: or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x0006ccc7: or byte ptr [ebx + 0x45890c75], cl; in al, 0xe8; insd dword ptr es:[edi], dx; ret; 
0x0008854a: or byte ptr [ebx + 0x4899004], cl; and al, 0x85; ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0012e233: or byte ptr [ebx + 0x4a8b0cec], al; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x00081ab7: or byte ptr [ebx + 0x4b7709f8], al; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x00123fee: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00124158: or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0012b4f2: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x000c5823: or byte ptr [ebx + 0x53890c53], cl; or al, 0x5b; ret; 
0x00131e1e: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0006e8a8: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0009c0fc: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098cb6: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0008af25: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x0012f4b7: or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0007babe: or byte ptr [ebx + 0x5e5b14c4], al; pop edi; pop ebp; ret; 
0x0007a3e1: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00068803: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0002e61a: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000d4d64: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000f1d28: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0012a6ba: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000207f8: or byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000aa5cd: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x000e2f59: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0008aee8: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005191d: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0006e594: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x0010102d: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x00050e7c: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000f5f5c: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x00119614: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00119614: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0012669a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0012664a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0012faa2: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00123fd2: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0012f3fc: or byte ptr [ebx + 0x74fff878], al; jne 0x12f387; ret 0x3901; 
0x0012efaa: or byte ptr [ebx + 0x778b04c1], al; add al, 0x51; push edi; call dword ptr [esi + 8]; 
0x0012b46f: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x00125aea: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0013ca27: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x000f4ae2: or byte ptr [ebx + 0x90c2454], cl; ret 0x850f; 
0x00129f48: or byte ptr [ebx + 0xb083], cl; add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x00074927: or byte ptr [ebx + 0xe], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00076487: or byte ptr [ebx + 0xe], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0003f99a: or byte ptr [ebx + 0xf0c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0012c87b: or byte ptr [ebx + 0xf770ff8], al; add edx, dword ptr [edx + eax*4 - 0x5d5bc]; jmp edx; 
0x001004f5: or byte ptr [ebx + 5], bh; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011a69e: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00107dea: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000efae5: or byte ptr [ebx - 0x10765], cl; jmp dword ptr [ebp - 0x75]; 
0x000f6e41: or byte ptr [ebx - 0x10765], cl; jmp dword ptr [ebp - 0x7d]; 
0x00074673: or byte ptr [ebx - 0x10768], cl; jmp dword ptr [ebp - 0x39]; 
0x00074654: or byte ptr [ebx - 0x10768], cl; jmp dword ptr [ebp - 0x7d]; 
0x000ec695: or byte ptr [ebx - 0x10772], cl; jmp dword ptr [ebp - 0x7d]; 
0x00045f8b: or byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x00041b5f: or byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000747c0: or byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011078a: or byte ptr [ebx - 0x10f7d], cl; jmp dword ptr [ebp + 3]; 
0x000f7b79: or byte ptr [ebx - 0x11e2153], bh; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x0012efb5: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0011f3fd: or byte ptr [ebx - 0x1768], cl; jmp dword ptr [ebp - 0x75]; 
0x00026e49: or byte ptr [ebx - 0x17], bl; jo 0x26e53; add byte ptr [eax], al; pop ebx; ret; 
0x0012f23e: or byte ptr [ebx - 0x1837d], cl; jmp dword ptr [ebp - 0x75]; 
0x00125abf: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00125b34: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0002f8e6: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000fd865: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x00079a42: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000af8e3: or byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x001085f4: or byte ptr [ebx - 0x367af7b8], cl; je 0x108600; xor eax, eax; pop ebx; ret; 
0x000d8cbb: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0012bba2: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x12bbb3; sub esp, 0xc; push esi; call eax; 
0x0012625e: or byte ptr [ebx - 0x3f7aef3c], al; je 0x12636b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001016e8: or byte ptr [ebx - 0x47cbdbac], cl; jne 0x1016f0; add byte ptr [eax], al; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x001017e2: or byte ptr [ebx - 0x47dbdb84], cl; jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f799c: or byte ptr [ebx - 0x47f3dbac], cl; xor al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec865: or byte ptr [ebx - 0x47fbdba4], cl; arpl word ptr [eax], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c68c5: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001001e5: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c6685: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00100445: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x10044e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7815: or byte ptr [ebx - 0x47fbdba4], cl; jns 0xf781d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ef155: or byte ptr [ebx - 0x47fbdba4], cl; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed9b5: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffe75: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff435: or byte ptr [ebx - 0x47fbdba4], cl; xor al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005a447: or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x0005a673: or byte ptr [ebx - 0x4f363], cl; call dword ptr [esi + 0x50]; 
0x0005a266: or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4ef6b]; call dword ptr [ecx + 0x50]; 
0x000593f1: or byte ptr [ebx - 0x4f77b], cl; call dword ptr [edi - 1]; 
0x000591dd: or byte ptr [ebx - 0x50b7b], cl; call dword ptr [edi - 1]; 
0x0005a4e1: or byte ptr [ebx - 0x5237b], cl; inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x0005c262: or byte ptr [ebx - 0x52f6b], cl; call dword ptr [ebx - 0x75]; 
0x00055e72: or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x00053acb: or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x00053d95: or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x59f6b]; call dword ptr [ecx + 0x50]; 
0x0012caa0: or byte ptr [ebx - 0x6b72afbd], cl; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x000c19ae: or byte ptr [ebx - 0x72cfdb94], cl; test dword ptr [esi], ecx; inc edi; cli; call dword ptr [eax + 0x53]; 
0x000a0b19: or byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000a1b61: or byte ptr [ebx - 0x72dfdbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000a1599: or byte ptr [ebx - 0x72e3dbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000a0f61: or byte ptr [ebx - 0x72e7dbbc], cl; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x00117213: or byte ptr [ebx - 0x72efdbbc], cl; add ah, 0x5c; cli; call dword ptr [eax - 1]; 
0x00114d56: or byte ptr [ebx - 0x72efdbbc], cl; or al, 0x5b; cli; call dword ptr [eax + 0x6a]; 
0x00121224: or byte ptr [ebx - 0x72f3dba4], cl; or dword ptr [esi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x0012fce2: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000f6618: or byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x00029393: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0013ca43: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0013063b: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000e13cc: or byte ptr [ebx - 0x75723383], cl; mov dh, 0x31; cli; call dword ptr [ecx + 0x50]; 
0x0010058e: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d7c8b: or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x000ffa40: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5490: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff545: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5550: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e2: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b52: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e20: or byte ptr [ebx - 0x76f3dbac], cl; inc esp; and al, 4; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000c599a: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0x11c]; call dword ptr gs:[0x10]; 
0x000f6a98: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0x14d]; call dword ptr gs:[0x10]; 
0x000f6c08: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0x14e]; call dword ptr gs:[0x10]; 
0x00101138: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0x151]; call dword ptr gs:[0x10]; 
0x0010142d: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0x75]; call dword ptr gs:[0x10]; 
0x000f7898: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0x8e]; call dword ptr gs:[0x10]; 
0x000ea248: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0xb4]; call dword ptr gs:[0x10]; 
0x000ea2f8: or byte ptr [ebx - 0x76f3dbac], cl; lds edi, ptr [eax + 0xb5]; call dword ptr gs:[0x10]; 
0x000f92c8: or byte ptr [ebx - 0x7aefdbac], cl; leave; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x0016a02c: or byte ptr [ebx - 0x7cfb7d84], cl; ret 0xd304; 
0x0016a851: or byte ptr [ebx - 0x7cfb7d8c], cl; ret 0xd304; 
0x00051056: or byte ptr [ebx - 0x7cfefbbe], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002a0cf: or byte ptr [ebx - 0x7d72f739], al; mov ah, 0x31; cli; call dword ptr [eax + 0x57]; 
0x0004d141: or byte ptr [ebx - 0x7f747bbb], cl; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0010aad6: or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x000f5b23: or byte ptr [ebx - 0x8fbdbb4], cl; ret 0xeff0; 
0x000f5b63: or byte ptr [ebx - 0x8fbdbbc], cl; ret 0xeff0; 
0x0010ac5e: or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x0007a383: or byte ptr [ebx - 0xe7dbbc], cl; je 0x7a3af; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0010b596: or byte ptr [ebx - 1], dl; jae 0x10b5cb; call eax; 
0x000e8f29: or byte ptr [ebx - 6], cl; call dword ptr [eax - 0x73]; 
0x00088af6: or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0006de42: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0002fa8d: or byte ptr [ecx + 0x18d92414], 0xd9; add al, 0x24; add esp, 4; ret; 
0x0002fd19: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x0002faae: or byte ptr [ecx + 0x241cd902], 0xd9; add al, 0x24; add esp, 4; ret; 
0x0002fa71: or byte ptr [ecx + 0x241cd902], cl; fld dword ptr [esp]; add esp, 4; ret; 
0x00037d61: or byte ptr [ecx + 0x244489d1], cl; and byte ptr [ebx - 0x76a9fe20], al; ret 0x74ff; 
0x00032783: or byte ptr [ecx + 0x24448b03], cl; add al, 0x83; ret; 
0x000627c6: or byte ptr [ecx + 0x245489fb], cl; or al, 0x6a; call dword ptr [esi - 0x18]; 
0x000fc737: or byte ptr [ecx + 0x418b0446], cl; add al, 0x89; ret 0xe083; 
0x000835fd: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x0009c139: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098ce6: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x001452f0: or byte ptr [ecx + 0x47e95bd8], cl; stosb byte ptr es:[edi], al; cli; jmp dword ptr [esi - 0x70]; 
0x00074f4d: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0012f6f7: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000b35b3: or byte ptr [ecx + 0x536c247c], cl; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c5820: or byte ptr [ecx + 0x538b0853], cl; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x000c1974: or byte ptr [ecx + 0x5858dc7], cl; inc edi; cli; call dword ptr [eax + 0x53]; 
0x0006de3c: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00028cc1: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0008ac1c: or byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x000aa5ba: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x0006de0e: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00124caa: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x001646fc: or byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0008efed: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0x8ee51; pop ebx; ret; 
0x00166387: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0008f00f: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0x8ee51; pop ebx; ret; 
0x001680e9: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00034250: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0008f04d: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0x8ee51; pop ebx; ret; 
0x0010ed90: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000b97f9: or byte ptr [ecx + 0xf0c245c], cl; scasd eax, dword ptr es:[edi]; fimul word ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x001382d1: or byte ptr [ecx + 0xfa6f3c6], cl; xchg edi, eax; ret 0xda80; 
0x0014967a: or byte ptr [ecx + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00031179: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0002f6a3: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000eacde: or byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013ebee: or byte ptr [ecx - 0x16f3dbac], cl; ret 0xfffb; 
0x000c7e5b: or byte ptr [ecx - 0x16fbdbbc], cl; pop ebx; sar bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x000df3bb: or byte ptr [ecx - 0x16fbdbbc], cl; sti; dec edx; cli; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000eb71b: or byte ptr [ecx - 0x16fbdbbc], cl; wait; xchg ecx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000286d4: or byte ptr [ecx - 0x17adafe9], cl; ret 0x75e; 
0x0002776f: or byte ptr [ecx - 0x1ab6b], cl; call dword ptr [esi + 0x51]; 
0x0002ce53: or byte ptr [ecx - 0x1d76b], cl; call dword ptr [eax - 1]; 
0x0009453c: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x0006f5c8: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00083429: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x5303; 
0x000ea987: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x00079a96: or byte ptr [ecx - 0x3fcefbba], cl; pop ebx; pop esi; pop edi; ret; 
0x000ea72d: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x0002eb96: or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x000e5930: or byte ptr [ecx - 0x51373], cl; call dword ptr [eax - 1]; 
0x00058898: or byte ptr [ecx - 0x51373], cl; jmp dword ptr [ebp - 0x39]; 
0x0012e3f7: or byte ptr [ecx - 0x72540c29], cl; and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x000bf276: or byte ptr [ecx - 0x72ebdbbc], cl; dec esp; and al, 0x14; mov eax, 0x108; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x0010eb67: or byte ptr [ecx - 0x74e67404], cl; jno 0x10eb73; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x001096ce: or byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0012a838: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0013b076: or byte ptr [ecx - 0x76f7dbbc], cl; ret; 
0x0009b58d: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000943dc: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0013beb1: or byte ptr [ecx - 0x7916a428], cl; out 0xff, al; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0007433f: or byte ptr [ecx - 0x7c72f7bb], cl; pushal; add cl, ch; call dword ptr [eax - 0x73]; 
0x0011b1a3: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x57c3; 
0x00060289: or byte ptr [ecx - 0x86b73], cl; call dword ptr [eax + 0x56]; 
0x00060319: or byte ptr [ecx - 0x88773], cl; call dword ptr [eax + 0x53]; 
0x0006544e: or byte ptr [ecx - 0x89f73], cl; call dword ptr [esi - 1]; 
0x000270a9: or byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0002711e: or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013be41: or byte ptr [ecx - 0x916a428], cl; out 0xff, al; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00109f8a: or byte ptr [ecx - 0x976b], cl; call dword ptr [edx + 0x53]; 
0x0001e335: or byte ptr [ecx - 0x9cfdbb4], cl; ret; 
0x00073184: or byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00041111: or byte ptr [ecx - 0xa37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0012c1f2: or byte ptr [ecx - 0xaf6b], cl; dec dword ptr [ebp - 0x8b6b]; call dword ptr [edx + 0x50]; 
0x000efdef: or byte ptr [ecx - 0xb77b], cl; call dword ptr [esi + 0x50]; 
0x000f0e6f: or byte ptr [ecx - 0xc77b], cl; call dword ptr [esi + 0x50]; 
0x0002869a: or byte ptr [ecx - 0xeb6b], cl; call dword ptr [ecx + 0x50]; 
0x00083544: or byte ptr [ecx - 1], dl; jae 0x8356d; call eax; 
0x00128354: or byte ptr [ecx - 2], ch; jmp dword ptr [esi - 0x70]; 
0x000747f3: or byte ptr [ecx - 6], al; call dword ptr [eax - 0x18]; 
0x00130a9d: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000bf388: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bf280: or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; call dword ptr gs:[0x10]; 
0x000eb2f6: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000eb37c: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0011f61f: or byte ptr [ecx], al; je 0x11f646; add esp, 0xc; ret; 
0x00132b17: or byte ptr [ecx], al; jle 0x132b2f; pop ebx; pop esi; pop edi; ret; 
0x0007c455: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000dd533: or byte ptr [ecx], al; rcl byte ptr [eax + 0x53], 0xe8; ret; 
0x000833ac: or byte ptr [ecx], al; ret 0x7389; 
0x0002efc0: or byte ptr [ecx], al; ret 0x8952; 
0x0008769e: or byte ptr [ecx], al; ret 0xf829; 
0x00136ca6: or byte ptr [ecx], al; ret; 
0x0005a2e2: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0007b472: or byte ptr [ecx], al; xor eax, eax; ret; 
0x0007b333: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x00150a2c: or byte ptr [ecx], bh; ret 0x1d72; 
0x00133f73: or byte ptr [ecx], bh; ret 0x2875; 
0x00133331: or byte ptr [ecx], bh; ret 0x2a75; 
0x00134e8f: or byte ptr [ecx], bh; ret 0x2c75; 
0x0014c7fc: or byte ptr [ecx], bh; ret 0x2d72; 
0x00135e1d: or byte ptr [ecx], bh; ret 0x3675; 
0x00135306: or byte ptr [ecx], bh; ret 0x4575; 
0x000dbbfc: or byte ptr [ecx], bh; ret 0x474; 
0x00133868: or byte ptr [ecx], bh; ret 0x4b75; 
0x000325be: or byte ptr [ecx], bh; ret 0x8e0f; 
0x000ddbfa: or byte ptr [ecx], bh; ret 0xd977; 
0x00084f60: or byte ptr [ecx], bh; ret 0xeb75; 
0x0007e068: or byte ptr [ecx], bh; ret 0xf375; 
0x0002079a: or byte ptr [ecx], bh; ret; 
0x00135e12: or byte ptr [ecx], bh; ror dword ptr [edi], 0x84; or eax, 0x8b000001; push edx; or byte ptr [ecx], bh; ret 0x3675; 
0x00075422: or byte ptr [ecx], ch; ret 0x352; 
0x0013ea2e: or byte ptr [ecx], ch; ret 0x448b; 
0x0006ea20: or byte ptr [ecx], ch; ret 0xd089; 
0x000760f0: or byte ptr [ecx], ch; ret 0xfa39; 
0x0011f33c: or byte ptr [ecx], ch; ret; 
0x000433af: or byte ptr [ecx], cl; ret 0x5489; 
0x0016b3ba: or byte ptr [ecx], cl; ret; 
0x0007f63b: or byte ptr [ecx], dh; fisttp dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000c0496: or byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x000c033d: or byte ptr [ecx], dh; jmp dword ptr [ebp - 0x77]; 
0x000754d7: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0012766d: or byte ptr [ecx], dh; ret 0xe281; 
0x0008ac44: or byte ptr [ecx], dh; ror byte ptr [ebx + 0xf0c245c], cl; mov esi, 0x75c08401; adc ebx, ebp; adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x0008b07e: or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0008afbe: or byte ptr [edi + 0x1c], dh; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x000bf064: or byte ptr [edi + 0x53], dl; call eax; 
0x00092e65: or byte ptr [edi + 0x5b], bl; ret; 
0x0009503d: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b2577: or byte ptr [edi + 0x5e], bl; ret; 
0x0001b710: or byte ptr [edi + 0x74], dh; mov ecx, dword ptr [esp + 4]; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x0014f210: or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x0014ab42: or byte ptr [edi + 4], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ab49e: or byte ptr [edi + ebp*8 - 0x75], dh; pop ebp; sar byte ptr [ecx], 1; ret; 
0x0006d7f9: or byte ptr [edi + edi*8 + 0x30ffffff], 0xe8; imul edi, dword ptr [edi - 1], -1; add esp, 0x1c; ret; 
0x0004a7c8: or byte ptr [edi + edi*8 + 0x30ffffff], 0xe8; in al, dx; pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0010d311: or byte ptr [edi + edi*8 - 0xae0001], 0x74; and al, 0x1c; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e301: or byte ptr [edi + edi*8 - 0xae0001], 0x74; and al, 0x1c; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x00153358: or byte ptr [edi - 0x18], bl; xchg byte ptr [ebx - 0x3c7e0002], bl; loope 0x153333; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00125e39: or byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x000839cb: or byte ptr [edi - 1], 0xff; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x000258b6: or byte ptr [edi], 0x2f; cli; call dword ptr [eax + 0x56]; 
0x0010ecfd: or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00021f10: or byte ptr [edi], 0x85; ret; 
0x000cde80: or byte ptr [edi], 0xa3; ret 0x830f; 
0x0004af94: or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0xf40; 
0x0014cd7a: or byte ptr [edi], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002ca8d: or byte ptr [edi], cl; mov bh, 0x93; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x000770ce: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00126118: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x000ff127: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0015795b: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x001561a2: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x0016188a: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0015d0d8: or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000da0be: or byte ptr [edi], cl; test dl, dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x70f0fa08], al; ret 0; 
0x00094bad: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000b245a: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0007e8a0: or byte ptr [edi], cl; test ecx, ebx; add al, 0; add dh, dh; ret; 
0x0009e76a: or byte ptr [edi], cl; xchg dword ptr [ecx + 1], ebp; add byte ptr [eax], al; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x000ff665: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000ff624: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000e1e34: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00102738: or byte ptr [edi], cl; xchg edi, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0001af2e: or byte ptr [edi], cl; xchg esp, eax; ret 0xd284; 
0x000d7917: or byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f6103: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0012a965: or byte ptr [edx + 0x6a], dl; add eax, 0x28838d50; jo 0x12a969; call dword ptr [eax - 0x18]; 
0x001300a5: or byte ptr [edx + 0x6a], dl; add eax, 0x28838d50; jo 0x1300a9; call dword ptr [eax - 0x18]; 
0x0009c0c8: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x0011f437: or byte ptr [edx + 1], ch; push eax; call 0x11e7f0; add esp, 0x18; pop ebx; ret; 
0x00102736: or byte ptr [edx + 8], dh; seta al; movzx eax, al; neg eax; ret; 
0x00030c2b: or byte ptr [edx + ebx], 0; pop ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0011fc2b: or byte ptr [edx + esi + 0x31], dh; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0012ab05: or byte ptr [edx - 0x18], dl; hlt; ret; 
0x0007f69c: or byte ptr [edx - 0x68720006], cl; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x00077366: or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, ebx; call dword ptr [eax + 0xc]; 
0x0006fa0e: or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x0012a831: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009d874: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0007aa06: or byte ptr [edx], bl; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00033e74: or byte ptr [edx], ch; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001260fb: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x00068fca: or byte ptr [edx], ch; push edi; call dword ptr [ebx + 8]; 
0x000728e8: or byte ptr [edx], ch; push esi; call dword ptr [ebp + 8]; 
0x00098662: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00098d66: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c17c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d06: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098d27: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009590b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x00095bfc: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000942eb: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000945bc: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x00091146: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x00091286: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x0008cd66: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x0008cea6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00091076: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000912e6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x0008ccb6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x0008fa1f: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x0008cf06: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00091167: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000912a7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x0008cd87: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x0008cec7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00098597: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x0009b75a: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x0014abfa: or byte ptr [esi + 4], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c6e40: or byte ptr [esi - 0x73], dl; cmp byte ptr [ebx], 0x48; cli; call dword ptr [eax - 0x18]; 
0x000f42c7: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x000f2a67: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x0014a70a: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0016392d: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x0008344f: or byte ptr [esi - 1], dl; jae 0x83478; call eax; 
0x00082afb: or byte ptr [esi - 1], dl; je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x00022765: or byte ptr [esi - 6], ch; call dword ptr [eax - 0x73]; 
0x0005e08a: or byte ptr [esi - 6], dh; call dword ptr [eax - 0x18]; 
0x0007b752: or byte ptr [esi], bl; add byte ptr [eax], al; ret; 
0x0014d87a: or byte ptr [esp + eax], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00094c36: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b88f0: or ch, 0x46; cli; call dword ptr [eax + 0x56]; 
0x000fd56d: or ch, 0x4c; cli; call dword ptr [eax - 0x18]; 
0x000ef9d2: or ch, bh; jmp dword ptr [ebp - 0x77]; 
0x0002f6d8: or ch, bl; inc esp; and al, 4; ret; 
0x0002f86e: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0002f811: or ch, bl; sbb byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00032124: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x35e60; add esp, 0x1c; ret; 
0x000c441a: or ch, dh; call dword ptr [eax - 0x18]; 
0x000aa151: or cl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0006ea1a: or cl, al; clc; add cl, byte ptr [ebx - 0x3dd6f7af]; mov eax, edx; pop ebx; ret; 
0x0002fb72: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00153355: or cl, byte ptr [ebp - 0x17a0f7fc]; xchg byte ptr [ebx - 0x3c7e0002], bl; loope 0x153333; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00128a50: or cl, byte ptr [ebx + 0x3920245c]; pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0014a5f5: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00073763: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x0014c595: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0011c8ff: or cl, byte ptr [ebx - 0x76ebdbbc]; ret 0xc085; 
0x00034d11: or cl, byte ptr [ecx + 0x10ebc10a]; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00028c65: or cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x000d8cb9: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x001012fa: or cl, byte ptr [edi]; mov bh, 0xc0; mov edx, dword ptr [ecx + eax*4 - 0x5edc0]; mov eax, edx; ret; 
0x00094bf5: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00096238: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ebf7: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0006125a: or cl, byte ptr [edi]; test edi, ecx; or byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0005f7bb: or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000f06c6: or cl, ch; ret; 
0x0009e41b: or cl, cl; jne 0x9e421; xor eax, eax; ret; 
0x0007b49a: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f5926: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f5862: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001015e1: or dh, 1; call dword ptr gs:[0x10]; 
0x0012ef88: or dh, ah; call dword ptr [ebp - 0x73]; 
0x001247ab: or dh, ah; call dword ptr [edx + 0x6a]; 
0x0007b463: or dh, bh; xor eax, eax; ret; 
0x0015f0a5: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x15f0b1; neg eax; ret; 
0x0009d876: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x00078cf8: or dh, byte ptr [ebx - 0x137cffea]; adc al, 0x8d; adc dword ptr [eax + 4], -0x17; jmp dword ptr [ebp + 0x33]; 
0x000d17e7: or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007ad2a: or dh, byte ptr [edi + ecx - 0x7d]; les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00162992: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00161972: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x0015ed33: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x15ed40; neg eax; ret; 
0x0004a151: or dh, byte ptr [esp + ebp*2 - 0x7d]; call dword ptr [eax]; 
0x000fc6ae: or dh, dh; ret 0x7401; 
0x000524aa: or dl, 0xf9; inc dword ptr [ecx]; cli; jmp edx; 
0x000f6048: or dl, byte ptr [eax + eax]; push dword ptr [esp + 0x1c]; call 0xf6810; add esp, 0x1c; ret; 
0x0009beeb: or dl, byte ptr [eax]; or al, byte ptr [eax]; add ecx, 0xe64a5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010edf2: or dl, byte ptr [ebx]; hlt; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0013e78e: or dword ptr [0x83000004], 0xffffffec; or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [edx + 0x48]; 
0x0010c646: or dword ptr [eax + 0x29], 0; add byte ptr [eax - 0x73], bl; sub eax, 0x58; cli; call dword ptr [eax - 1]; 
0x00078b30: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x78b30; ret; 
0x0012f29b: or dword ptr [eax + 0xf000032], 0x45; ret 0xc483; 
0x0007b470: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0002e58e: or dword ptr [eax + eax*8 - 0x6a74928c], eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00074b66: or dword ptr [eax + eax], 0xffffff81; ret; 
0x000f5fb9: or dword ptr [eax + eax], edx; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5fe6: or dword ptr [eax + eax], edx; mov edx, 1; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000fced5: or dword ptr [eax - 0x54], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000a01e7: or dword ptr [eax - 0x72], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x00074af5: or dword ptr [eax - 6], ebx; jmp dword ptr [esi - 0x70]; 
0x000ef15b: or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125948: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0001b8c1: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00071969: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0013f789: or dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, eax; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ea742: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000da346: or dword ptr [eax], eax; add byte ptr [ebp - 0x76dc8b40], al; ret 0xe283; 
0x000e42ca: or dword ptr [eax], eax; add byte ptr [ebx - 0x18773], cl; jmp dword ptr [ebp - 0x7d]; 
0x000b083d: or dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00058a94: or dword ptr [eax], eax; add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x630d4], bl; jmp eax; 
0x0002155d: or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x00061900: or dword ptr [eax], eax; add byte ptr [ebx - 0xaafb14], al; je 0x6192e; inc esp; push esi; call dword ptr [eax + 0x1c]; 
0x00094acb: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00051857: or dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00145a88: or dword ptr [eax], eax; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009f55f: or dword ptr [eax], eax; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x0013f7a5: or dword ptr [ebp + 0x33], esp; adc eax, 0x18; call edx; 
0x0012147a: or dword ptr [ebp + 0x33], esp; adc eax, 0x18; push edx; call eax; 
0x0001af12: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00030c33: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x0013d676: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x00077776: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0011b8a6: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b96e: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00062752: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c66: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adf6: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9bc: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b366: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d37: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x3c]; push edx; call eax; 
0x000607f1: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a7d: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00025f06: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [esp + 0x18], ecx; call eax; 
0x0003414a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0001b21d: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00025f55: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push ecx; call eax; 
0x00058447: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c77: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x00094bcd: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ebd2: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0x8ebdc; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0001e2a2: or dword ptr [ebx + 0x2e], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x0011efa7: or dword ptr [ebx + 0x2f74], 2; add esp, 8; pop ebx; ret; 
0x00051136: or dword ptr [ebx + 0x5e5b012b], eax; ret; 
0x0003427e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00084166: or dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x0012f676: or dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x000e2fb3: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000ffd3e: or dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x001015a6: or dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000ea95f: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000d1a4c: or dword ptr [ebx + 0xf015c7e], eax; lahf; ret 0xd789; 
0x0001dc87: or dword ptr [ebx + 0xfb0], 2; add esp, 8; pop ebx; ret; 
0x000f56ba: or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00040d88: or dword ptr [ebx - 0x1077b], ecx; jmp dword ptr [ebp - 0x77]; 
0x0010f11c: or dword ptr [ebx - 0x10f69], ecx; jmp dword ptr [ebp - 0x77]; 
0x00100d24: or dword ptr [ebx - 0x16a4e73c], eax; ret 0xf1a2; 
0x00045a47: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x00071956: or dword ptr [ebx - 0x3f7ac7c0], ecx; js 0x71960; ret; 
0x0001adf9: or dword ptr [ebx - 0x7a2dcec7], ecx; dec dword ptr [edi]; xchg esp, eax; ret 0x748b; 
0x0001dffc: or dword ptr [ebx - 0x7bf0f806], eax; ret; 
0x000f9d1e: or dword ptr [ebx - 0x7c76fb40], eax; push esp; and al, 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0012a65c: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xb9d0f7d], cl; call dword ptr [eax - 0x73]; 
0x0012cfea: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xb72cf7d], cl; call dword ptr [eax - 0x73]; 
0x00069ff0: or dword ptr [ecx + 0x11e9e445], 0xfffffff6; cli; jmp dword ptr [esi - 0x70]; 
0x0001a76d: or dword ptr [ecx + 0x193890], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009e29d: or dword ptr [ecx + 0x42], eax; test al, al; jne 0x9e298; xor eax, eax; ret; 
0x0011b3da: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x000314be: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0011df04: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [edi], 0x94; ret 0xa3c; 
0x0011e084: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x5ce4b7b], cl; call dword ptr [eax + 0x56]; 
0x000c2241: or dword ptr [ecx - 0x72b00000], 0xffffff83; add bl, ch; in eax, dx; call dword ptr [eax - 0x18]; 
0x000bf0ce: or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00084ba6: or dword ptr [ecx], eax; ret; 
0x0010c476: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x00083714: or dword ptr [ecx], edi; ret 0x3774; 
0x0013683f: or dword ptr [ecx], edi; ret 0x850f; 
0x00123956: or dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000b32e3: or dword ptr [ecx], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00081aba: or dword ptr [edi + 0x4b], esi; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x00096720: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0014f2a0: or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x000f574e: or dword ptr [edi + ebp - 0x48], esi; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f8433: or dword ptr [edi], 0x4c; cli; call dword ptr [eax - 0x18]; 
0x0001e287: or dword ptr [edi], ecx; add byte ptr [ebx - 0x72c3dba4], cl; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x00113940: or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x0002e58a: or dword ptr [edi], ecx; mov dh, 0x40; or dword ptr [eax + eax*8 - 0x6a74928c], eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000dd5e7: or dword ptr [edi], ecx; mov dh, 0xc; js 0xc090dbfd; add dword ptr [ecx], edi; ret 0xda75; 
0x00094bd0: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x0008ebd5: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000af266: or dword ptr [edi], ecx; xchg byte ptr [eax - 0x7400000b], al; test dword ptr [eax - 0x7c000037], edi; in al, dx; or byte ptr [ebp - 0x39f48], cl; call dword ptr [edi + 0x53]; 
0x00046a39: or dword ptr [edi], ecx; xchg byte ptr [eax], ah; add al, byte ptr [eax]; add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x000af5d9: or dword ptr [edi], ecx; xchg eax, ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000b9078: or dword ptr [edi], ecx; xchg ebp, edi; add al, byte ptr [eax]; add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x000394fd: or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x00103057: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0011ded9: or dword ptr [edi], ecx; xchg esp, eax; ret 0xd108; 
0x0012319c: or dword ptr [edx + 0x4a], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x00162982: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x00161962: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x0013515e: or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x00031914: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0011d9e1: or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x0009c57e: or dword ptr [edx], ecx; add byte ptr [ecx + 0xe5e93c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009cdd3: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x00161bf3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0009ce43: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00069ae8: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x000c2a64: or dword ptr [esi], 0x47; cli; call dword ptr [eax - 0x18]; 
0x0012122a: or dword ptr [esi], 0x60; cli; call dword ptr [eax + 0x57]; 
0x0009c072: or dword ptr [esi], 0xa; add byte ptr [ecx + 0xe639ec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0007a3df: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x001013ae: or eax, 0x14; jne 0x1013c0; add esp, 0x7c; ret; 
0x0010e8e0: or eax, 0x14; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e950: or eax, 0x14; jne 0x10e965; add esp, 0x2c; ret; 
0x00115791: or eax, 0x14; jne 0x11579c; add esp, 0x2c; ret; 
0x001245d7: or eax, 0x14; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0012e3b4: or eax, 0x14; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8cb: or eax, 0x14; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0012f706: or eax, 0x14; jne 0x12f711; add esp, 0x4c; ret; 
0x0013170e: or eax, 0x14; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317ee: or eax, 0x14; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00132d36: or eax, 0x14; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d96: or eax, 0x14; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x00137412: or eax, 0x14; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00138bd7: or eax, 0x14; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x0013962f: or eax, 0x14; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d4: or eax, 0x14; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139e9c: or eax, 0x14; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x000316cd: or eax, 0x14; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x00034e09: or eax, 0x14; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e5c: or eax, 0x14; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea9: or eax, 0x14; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034efc: or eax, 0x14; jne 0x34f07; add esp, 0x1c; ret; 
0x000acb59: or eax, 0x14; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b3149: or eax, 0x14; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31c9: or eax, 0x14; jne 0xb31d4; add esp, 0x1c; ret; 
0x000b3274: or eax, 0x14; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000bf000: or eax, 0x14; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x000bff66: or eax, 0x14; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfff9: or eax, 0x14; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x000eb549: or eax, 0x14; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000f81ba: or eax, 0x14; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc24: or eax, 0x14; jne 0xfbc2f; add esp, 0x1c; ret; 
0x0001b02e: or eax, 0x1cc48300; ret; 
0x0008ec49: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0016bf43: or eax, 0x26748d; call dword ptr [esi]; 
0x00067dd7: or eax, 0x27c38100; ret 0x17; 
0x000efe2f: or eax, 0x3901e883; ret 0x674; 
0x0001e456: or eax, 0x3904458d; ret; 
0x001629b2: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x00065df9: or eax, 0x448b0000; and al, 0x48; movzx eax, byte ptr [edx + eax - 0x20]; mov ecx, dword ptr [edi + eax*4 - 0x62780]; add ecx, ebx; jmp ecx; 
0x00161992: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x0016b9de: or eax, 0x500cec83; call edx; 
0x000b770a: or eax, 0x5b04c483; pop esi; ret; 
0x0010dbd2: or eax, 0x5b08c483; ret; 
0x00107aba: or eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x000fadb7: or eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000f65bd: or eax, 0x5b54c483; pop esi; ret; 
0x000969a1: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000db69c: or eax, 0x748b0000; and al, 0x30; mov ecx, dword ptr [esi + eax*4 - 0x5feec]; add ecx, esi; jmp ecx; 
0x000952a8: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0009c43b: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f78: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001237d4: or eax, 0x81000197; ret; 
0x000346d4: or eax, 0x81001088; ret; 
0x00094c57: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0014d9d4: or eax, 0x81fffef5; ret; 
0x0014ced4: or eax, 0x81ffff00; ret; 
0x0014b3d4: or eax, 0x81ffff1b; ret; 
0x001493d4: or eax, 0x81ffff3b; ret; 
0x00098f81: or eax, 0x824448b; pop esi; ret; 
0x0013e78f: or eax, 0x83000004; in al, dx; or byte ptr [ebp + 0x50442444], cl; push esi; call dword ptr [edx + 0x48]; 
0x000e350c: or eax, 0x8300768d; ret 0xd101; 
0x0010c922: or eax, 0x8301478d; ret; 
0x0008706e: or eax, 0x830a8890; ret 0x8301; 
0x000fe21e: or eax, 0x838d0000; test al, 0x55; cli; call dword ptr [ecx + 0x51]; 
0x00134577: or eax, 0x83ffffff; in al, dx; or al, 0x8d; xchg dword ptr [ecx + 0x5e], edi; cli; call dword ptr [eax - 0x18]; 
0x0005ef23: or eax, 0x85c60000; idiv edi; jmp dword ptr [eax]; 
0x0007ae2a: or eax, 0x8904508b; push esp; and al, 4; jmp dword ptr [eax]; 
0x000962ca: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b4022: or eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00101591: or eax, 0x8b000000; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00135e17: or eax, 0x8b000001; push edx; or byte ptr [ecx], bh; ret 0x3675; 
0x000ec8f2: or eax, 0x8b000001; push esp; and al, 0xc; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00124534: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0014f4e0: or eax, 0x8b1c035f; jmp ebx; 
0x00055d77: or eax, 0x8bffffd2; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x00069a98: or eax, 0x98928b; add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0005f206: or eax, 0x9efe083; ror byte ptr [eax - 0x7a72f2b9], 1; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x00136f12: or eax, 0xb8; add byte ptr [edi], cl; inc esp; ret; 
0x0009c444: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0010c51a: or eax, 0xc9850a8b; je 0x10c530; ret; 
0x0008f9bb: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00025494: or eax, 0xe8fffffc; ret; 
0x00065fac: or eax, 0xec830000; add al, 0x53; push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x00083249: or eax, 0xec830016; or al, 0x6a; add eax, 0x447e838d; cli; call dword ptr [eax - 0x73]; 
0x000b4730: or eax, 0xf000000; inc edi; ret 0x960f; 
0x0008ec46: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000962c7: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x00094c54: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0002f374: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0007b4c9: or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0005009c: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000c5d9e: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125962: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0005ca46: or eax, dword ptr [eax]; add byte ptr [ebp - 0x5cb0279], cl; call dword ptr [eax - 0x73]; 
0x000639db: or eax, dword ptr [eax]; add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x000e4401: or eax, dword ptr [eax]; add byte ptr [ebx - 0x1937b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00066c78: or eax, dword ptr [eax]; add byte ptr [ebx - 0xa9fb14], al; je 0x66ca6; push eax; push ebp; call dword ptr [ebx + 0x1c]; 
0x0013894b: or eax, dword ptr [eax]; add byte ptr [ecx], dh; jmp dword ptr [ebp - 0x5f]; 
0x00162ade: or eax, dword ptr [eax]; je 0x162b62; mov eax, 0xc; pop edi; ret; 
0x0012f208: or eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x184]; mov eax, dword ptr gs:[eax]; test eax, eax; je 0x12f220; ret; 
0x0012f088: or eax, dword ptr [eax]; mov edx, dword ptr [eax - 0x184]; lea eax, [eax + 0x3440]; mov dword ptr gs:[edx], eax; ret; 
0x0013aff7: or eax, dword ptr [ebp + 0x76840fc9]; imul ch; dec dword ptr [ebp - 0x72dbdb8c]; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x0001ce88: or eax, dword ptr [ebp - 0x744c8a37]; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x000fa254: or eax, dword ptr [ebx + 0x24f0aa]; add byte ptr [ecx], al; ret; 
0x0006e454: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00043a54: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0006daa1: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000312a3: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000502cd: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00051345: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000bf554: or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bf485: or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x000ff131: or eax, ecx; ret; 
0x0002f9b7: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0010ed29: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00069c69: or eax, edx; mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f5b46: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0002f393: or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0002fa23: or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x000453bf: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002f6d3: or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x00045376: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001013a6: or eax, edx; mov ecx, dword ptr [esp + 0x6c]; sub ecx, dword ptr gs:[0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x0002f35a: or eax, edx; mov edx, 0xfffe; sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x0013fcbb: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x000ea791: or eax, edx; pop ebx; ret; 
0x000ff10f: or eax, edx; ret; 
0x00148937: or ebp, dword ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ad551: or ebp, dword ptr [edx + edi*8 + 0x1cc483ff]; ret; 
0x0010c619: or ebx, 0x58; cli; call dword ptr [eax - 1]; 
0x00117e6d: or ebx, dword ptr [ebp - 6]; call dword ptr [eax - 0x73]; 
0x00101854: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00050f84: or ebx, dword ptr [ebx + 0x5e]; ret; 
0x00096760: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0014f3c0: or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0011ee30: or ebx, dword ptr [edi - 6]; call dword ptr [ebx - 0x18]; 
0x000f67f6: or ebx, eax; push cs; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000867cd: or ebx, ebp; js 0x86754; ret 0x3901; 
0x000efe2d: or ebx, ebp; or eax, 0x3901e883; ret 0x674; 
0x000fd521: or ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret; 
0x000754f9: or ebx, ebp; push ss; add byte ptr [ebx - 0x77], dl; ret; 
0x00059784: or ebx, ebx; cmp dword ptr [ecx], edi; ret 0x840f; 
0x000f5ba9: or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; ret; 
0x0008f032: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x0008aab3: or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000fd523: or ecx, dword ptr [ebp - 0x7cffd98c]; ret; 
0x0005c143: or ecx, dword ptr [ebx - 0x53f7b]; jmp dword ptr [ebp - 0x75]; 
0x00028c01: or ecx, dword ptr [ebx - 0x8b78]; jmp dword ptr [ebp - 0x77]; 
0x00132b3a: or ecx, dword ptr [ecx - 0x2714ef82]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0008f035: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x00096266: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ec25: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013628b: or ecx, dword ptr [edi]; test dword ptr [esi - 0x7d000000], edi; in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x001246b7: or edi, 0x60; cli; call dword ptr [eax - 0x18]; 
0x000c708f: or edi, dword ptr [eax + 0x20]; mov edx, 0x40; cmove eax, edx; ret; 
0x000c6f42: or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x00132784: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000dbf98: or edi, dword ptr [ecx]; ret 0xd375; 
0x0012e741: or edi, dword ptr [edi - 7]; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0010d003: or edi, ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00038253: or edi, edi; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0014c545: or edi, edi; inc dword ptr [ecx + 0x434b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00163076: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b2586: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x000f60fe: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000eb0b0: or edx, 0xffffffff; mov ecx, eax; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000eb0db: or edx, 0xffffffff; mov ecx, eax; mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00050231: or edx, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c5ae1: or edx, dword ptr [edx - 5]; dec dword ptr [ecx + 0x1db8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c708d: or edx, eax; or edi, dword ptr [eax + 0x20]; mov edx, 0x40; cmove eax, edx; ret; 
0x000c6f40: or edx, eax; or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000f5b91: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x000b6c56: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x000949d7: or edx, edi; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001016f7: or esi, 0x100; call dword ptr gs:[0x10]; 
0x001629a2: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x00161982: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x000807e1: or esi, dword ptr [esi + 0x768dffff]; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x24; push ebx; call eax; 
0x0010865e: or esi, esi; inc esp; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x0004d5d7: or esi, esi; ret 0xf01; 
0x00124982: or esi, esp; call dword ptr [ecx - 0x73]; 
0x0001be81: or esp, dword ptr [eax + ecx]; add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x000319f6: or esp, dword ptr [esi]; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000fdc23: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fdaf3: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015dd3b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x0001afd1: out 0x2b, al; cli; call dword ptr [eax - 0x75]; 
0x0013f19b: out 0x31, al; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00145e0a: out 0x42, eax; jo 0x145d8f; ret 0x80; 
0x0014643a: out 0x42, eax; jo 0x1463bf; ret 0x80; 
0x0009eb9d: out 0x44, al; cli; call dword ptr [eax - 0x73]; 
0x0011f3e0: out 0x5b, eax; pop esi; pop edi; ret; 
0x001300b9: out 0x62, eax; cli; call dword ptr [eax - 0x73]; 
0x0016bb71: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000bfae8: out 0x83, eax; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00163e10: out 0x89, al; ror dword ptr [ecx], 1; ret; 
0x0009e721: out 0x89, eax; ret; 
0x000ed2ab: out 0x8b, al; pop esp; and al, 0x20; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000e27a0: out 0x8b, eax; je 0xe27c8; add al, 0x8d; xchg byte ptr [eax], ah; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e2b48: out 0x8b, eax; je 0xe2b70; adc byte ptr [ebx - 0x72fbdba4], cl; add dword ptr [eax - 0x22], -0x11; call dword ptr [eax + 0x6a]; 
0x000e2c08: out 0x8b, eax; jl 0xe2c30; add al, 0x8d; xchg dword ptr [eax], esp; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000d4e48: out 0x8b, eax; push ebp; add dh, dh; inc esp; ret 0x804; 
0x000d027c: out 0x8d, eax; jbe 0xd0280; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000e95f6: out 0x97, al; hlt; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x00096beb: out 0xb6, eax; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00139449: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0007b136: out 0xb8, al; lock add byte ptr [eax], al; add byte ptr [ebp + 0x1aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012befb: out 0xee, eax; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0014888b: out 0xf, eax; je 0x1488a0; call 0x13cee5; add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014a88b: out 0xf, eax; je 0x14a8a0; call 0x13cee5; add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014c87d: out 0xf, eax; je 0x14c8a0; call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014eac0: out 0xf, eax; je 0x14eae0; call 0x13cee5; add ebx, 0x414f7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014faa0: out 0xf, eax; je 0x14fac0; call 0x13cee5; add ebx, 0x406d7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00150aa0: out 0xf, eax; je 0x150ac0; call 0x13cee5; add ebx, 0x3f897; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00151bcd: out 0xf, eax; je 0x151bf0; call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00153d70: out 0xf, eax; je 0x153d90; call 0x13cee5; add ebx, 0x3ca07; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0010a9d3: out 0xf0, eax; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0001fa76: out 0xf1, al; push cs; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x0010296d: out 0xf1, eax; call dword ptr [eax + 0x6a]; 
0x00102b83: out 0xf1, eax; dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x000ec91b: out 0xf2, al; jmp dword ptr [esi - 0x70]; 
0x000ec8eb: out 0xf2, eax; jmp dword ptr [esi - 0x70]; 
0x001305b5: out 0xfd, al; call dword ptr [eax - 0x73]; 
0x0003a758: out 0xfe, al; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0003a6ef: out 0xfe, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x0003a688: out 0xfe, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0003a6ce: out 0xfe, eax; dec dword ptr [ecx + 0x7c808dc7]; jae 0x3a6d2; call dword ptr [eax - 0x73]; 
0x000bc5c4: out 0xff, al; call dword ptr [eax + 0x51]; 
0x000715ff: out 0xff, al; call dword ptr [eax - 0x73]; 
0x00069315: out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0013be47: out 0xff, al; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0005cbd1: out 0xff, al; dec dword ptr [ebx - 0x4f343]; dec dword ptr [ebp - 0x58a0b79]; call dword ptr [eax + 0x68]; 
0x0005a6be: out 0xff, al; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00138dc2: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000d1a38: out 0xff, eax; add ah, bh; inc dword ptr [eax - 0x6bf0f907]; ret 0x7b89; 
0x00064fa7: out 0xff, eax; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x6a76fb14], al; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x0005369d: out 0xff, eax; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x59f4b]; jmp dword ptr [ebp - 0x77]; 
0x00053673: out 0xff, eax; dec dword ptr [ebx - 0x5bb63]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0003a665: out 0xff, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0005feaf: out 0xff, eax; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x00138e12: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0005e979: out 0xff, eax; jmp eax; 
0x00151d9e: out 3, al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a04eb: out 6, eax; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x0009e0ae: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x0009e0b1: out dx, al; add al, 0xf7; ret 0; 
0x0005e083: out dx, al; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x0006302b: out dx, al; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x00047867: out dx, al; add byte ptr [eax], al; add byte ptr [ebx - 0x363f4b], cl; call dword ptr [edi - 1]; 
0x0009cade: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00107ec7: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c93aa: out dx, al; call dword ptr [eax + 0x6a]; 
0x000c441b: out dx, al; call dword ptr [eax - 0x18]; 
0x000bf43b: out dx, al; call dword ptr gs:[0x10]; 
0x0006a8b6: out dx, al; cli; jmp dword ptr [esi - 0x70]; 
0x0013120d: out dx, al; dec dword ptr [ecx - 0x763e7606]; ret; 
0x00129cc9: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001365d0: out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00133014: out dx, al; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0012e9b0: out dx, al; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0012befc: out dx, al; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0002114e: out dx, al; jl 0x21151; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x000b154e: out dx, al; js 0xb1548; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000ffca8: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000bf506: out dx, al; mov ecx, dword ptr [esp + 0x54]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x001464e2: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145eb2: out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0015375e: out dx, al; movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0014a373: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c323: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00153763: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00113ef6: out dx, al; pop edx; cli; call dword ptr [esi + 0x6a]; 
0x00021a2b: out dx, al; ret 0; 
0x0009c6e5: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0016291c: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000c70ab: out dx, eax; add byte ptr [eax], al; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00085e64: out dx, eax; add dword ptr [ecx], eax; ret; 
0x00162951: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x0006e90d: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ec0a3: out dx, eax; bnd jmp dword ptr [esi - 0x70]; 
0x000e27a9: out dx, eax; call dword ptr [eax + 0x6a]; 
0x0012a7b9: out dx, eax; call dword ptr [eax - 0x73]; 
0x000e5312: out dx, eax; call dword ptr [edx + 0x6a]; 
0x000f69ac: out dx, eax; call dword ptr gs:[0x10]; 
0x0012b26d: out dx, eax; cmp esi, edi; jmp dword ptr [esi - 0x70]; 
0x001350e4: out dx, eax; dec dword ptr [ebx - 0x72d7dba4]; sbb eax, -0x5b; cli; call dword ptr [eax - 0x73]; 
0x0012673d: out dx, eax; dec dword ptr [ecx - 0x5e17dbcc]; sub edi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000bed53: out dx, eax; in eax, 0xff; call dword ptr [edx + 0x51]; 
0x00119bb8: out dx, eax; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0011b723: out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012454b: out dx, eax; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0012bf85: out dx, eax; inc dword ptr [ebx - 0x72afef3c]; sbb dword ptr [ebx], -6; call dword ptr [eax - 0x73]; 
0x0014b713: out dx, eax; inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013776d: out dx, eax; je 0x13776d; jmp dword ptr [esi - 0x70]; 
0x0011fa6c: out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x0013cfdf: out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00076bb6: out dx, eax; jmp edi; 
0x001464b2: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145e82: out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000b25f0: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x001536ae: out dx, eax; movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0014a2a3: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c273: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x001536b3: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00162991: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00162981: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001629b1: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x001629a1: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x000e57ee: out dx, eax; out dx, eax; call dword ptr [eax + 0x6a]; 
0x0006e8b8: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x0007be52: out dx, eax; pop es; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00162971: out dx, eax; pop es; jb 0x1629e0; lea eax, [eax + 6]; pop edi; ret; 
0x00148c93: out dx, eax; push 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001629c1: out dx, eax; push cs; jb 0x1629e0; lea eax, [eax + 0xd]; pop edi; ret; 
0x00162961: out dx, eax; push es; jb 0x1629e0; lea eax, [eax + 5]; pop edi; ret; 
0x0015d3d4: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0015dd95: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0015d3bf: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0015dd7b: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0015d3aa: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0015d395: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0015dd61: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0015d461: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0014d393: out dx, eax; sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ffc5f: out dx, eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000282ee: outsb dx, byte ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0001f58c: outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x0001f57a: outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000960d3: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec16a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960ae: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009608e: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096071: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec1cc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096044: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009602d: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096012: outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013f442: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x001221fb: outsb dx, byte ptr [esi]; out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x0002cb8e: outsb dx, byte ptr [esi]; ret; 
0x00146242: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000204a7: outsb dx, byte ptr fs:[esi]; cli; call dword ptr [eax - 0x73]; 
0x0015d391: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x00148832: outsd dx, dword ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c0605: outsd dx, dword ptr [esi]; add al, 1; pop ebx; pop esi; pop edi; ret; 
0x0015e952: outsd dx, dword ptr [esi]; add byte ptr [esi + 0xf], ah; cmp byte ptr [eax], al; ret 0xf66; 
0x0015c46d: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000910b2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x00091362: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0008ccf2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x0008cf82: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x00078aca: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0014d913: outsd dx, dword ptr [esi]; and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00027968: outsd dx, dword ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x00026de2: outsd dx, dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x0015dbe2: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x0015db42: outsd dx, dword ptr [esi]; dec eax; ret; 
0x0014ac93: outsd dx, dword ptr [esi]; dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015a666: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000fca1d: outsd dx, dword ptr [esi]; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00157cf2: outsd dx, dword ptr [esi]; mov bl, 0x20; lodsd eax, dword ptr [esi]; cli; jmp dword ptr [esi + 0xf]; 
0x00095fd2: outsd dx, dword ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec1eb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095ff0: outsd dx, dword ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095efe: outsd dx, dword ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000962fd: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003a6cd: outsd dx, dword ptr [esi]; out 0xfe, eax; dec dword ptr [ecx + 0x7c808dc7]; jae 0x3a6d2; call dword ptr [eax - 0x73]; 
0x0015d768: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015dbe7: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x0015db47: outsd dx, dword ptr [esi]; push edx; ret; 
0x00098de2: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00149713: outsd dx, dword ptr [esi]; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00094a73: outsd dx, dword ptr [esi]; salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00149473: packsswb mm0, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00033a1d: paddw mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x0009cc91: pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x0009ce6f: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0x9cee0; xor eax, eax; ret; 
0x00161bf1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x161e30; xor eax, eax; ret; 
0x0009ce41: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x9cec0; xor eax, eax; ret; 
0x001635ba: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x1635a0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0014a88c: pcmpeqb mm2, qword ptr [ecx]; call 0x13cee5; add ebx, 0x452ec; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014888c: pcmpeqb mm2, qword ptr [ecx]; call 0x13cee5; add ebx, 0x4706c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000b2774: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x00151bce: pcmpeqb mm3, qword ptr [edi]; call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014c87e: pcmpeqb mm3, qword ptr [edi]; call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000b275d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x0009ce6e: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0x9cee0; xor eax, eax; ret; 
0x00161bf0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x161e30; xor eax, eax; ret; 
0x0009ce40: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x9cec0; xor eax, eax; ret; 
0x001632e6: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x001632b5: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x163350; lea eax, [ecx + 4]; ret; 
0x00095007: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x001620a3: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x0009cb09: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009d294: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0009cde1: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x0016175d: pmovmskb eax, mm1; test eax, eax; jne 0x161830; xor eax, eax; pop edi; ret; 
0x00161bf5: pmovmskb eax, mm1; test eax, eax; jne 0x161e30; xor eax, eax; ret; 
0x00161c34: pmovmskb eax, mm1; test eax, eax; jne 0x161eb0; xor eax, eax; ret; 
0x0009cbaf: pmovmskb eax, mm1; test eax, eax; jne 0x9cc10; xor eax, eax; pop edi; ret; 
0x0009cb75: pmovmskb eax, mm1; test eax, eax; jne 0x9cc30; xor eax, eax; pop edi; ret; 
0x0009ce45: pmovmskb eax, mm1; test eax, eax; jne 0x9cec0; xor eax, eax; ret; 
0x0009ce74: pmovmskb eax, mm1; test eax, eax; jne 0x9cee0; xor eax, eax; ret; 
0x001620a2: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x0009cb08: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009d293: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0009cde0: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0016175c: pmovmskb eax, xmm1; test eax, eax; jne 0x161830; xor eax, eax; pop edi; ret; 
0x00161bf4: pmovmskb eax, xmm1; test eax, eax; jne 0x161e30; xor eax, eax; ret; 
0x00161c33: pmovmskb eax, xmm1; test eax, eax; jne 0x161eb0; xor eax, eax; ret; 
0x0009cbae: pmovmskb eax, xmm1; test eax, eax; jne 0x9cc10; xor eax, eax; pop edi; ret; 
0x0009cb74: pmovmskb eax, xmm1; test eax, eax; jne 0x9cc30; xor eax, eax; pop edi; ret; 
0x0009ce44: pmovmskb eax, xmm1; test eax, eax; jne 0x9cec0; xor eax, eax; ret; 
0x0009ce73: pmovmskb eax, xmm1; test eax, eax; jne 0x9cee0; xor eax, eax; ret; 
0x0009d0fa: pmovmskb ecx, mm0; test ecx, ecx; je 0x9d110; bsf ecx, ecx; add eax, ecx; ret; 
0x0009d0f9: pmovmskb ecx, xmm0; test ecx, ecx; je 0x9d110; bsf ecx, ecx; add eax, ecx; ret; 
0x00152f23: pop ds; aad 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014dc9b: pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001174b6: pop ds; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x000b3401: pop ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00161432: pop ds; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000fadcd: pop ds; add dh, dl; jmp dword ptr [esi - 0x70]; 
0x00075584: pop ds; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000b245d: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0015c6bd: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00100836: pop ds; add esp, 0x18; pop ebx; ret; 
0x001005b6: pop ds; add esp, 0x28; pop ebx; ret; 
0x000ea78d: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x000f65ff: pop ds; add esp, 8; pop ebx; ret; 
0x0007b460: pop ds; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00151bd0: pop ds; call 0x13cee5; add ebx, 0x3e9ea; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014c880: pop ds; call 0x13cee5; add ebx, 0x4357a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000f474c: pop ds; call dword ptr gs:[0x10]; 
0x00054026: pop ds; cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x0002835e: pop ds; das; cli; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0014ade3: pop ds; dec esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ccd5a: pop ds; ja 0xccfda; mov ecx, dword ptr [ebp - 0x34]; mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x001613d2: pop ds; jne 0x161150; xor eax, eax; pop edi; ret; 
0x00094f67: pop ds; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x0009660a: pop ds; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000ed216: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000f92d0: pop ds; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000ec828: pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000f47fc: pop ds; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x0013f77b: pop ds; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000fd220: pop ds; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0007c777: pop ds; mov ebp, dword ptr [esi - 0x170]; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x0006f2ce: pop ds; mov edx, edi; pop edi; pop ebp; ret; 
0x0002f9bb: pop ds; not eax; and eax, edx; ret; 
0x000453be: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00045375: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00044172: pop ds; pop ebx; pop esi; pop edi; ret; 
0x00149863: pop ds; pop edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007a5bf: pop ds; pop edi; mov edx, ebp; pop ebp; ret; 
0x0002f65d: pop ds; pop edi; not eax; and eax, edx; ret; 
0x000969e4: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0009bf77: pop ds; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0013ea91: pop ds; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x0006ce1d: pop ds; ret 0xfffa; 
0x0002f37c: pop ds; ret; 
0x000f47f9: pop ds; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f5513: pop ds; sar esi, 0x1f; test eax, eax; jne 0xf5540; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x0002f309: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000ea211: pop ds; test eax, eax; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2c1: pop ds; test eax, eax; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000f5516: pop ds; test eax, eax; jne 0xf5540; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69a1: pop ds; test eax, eax; jne 0xf69d0; mov eax, 0x14d; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6b11: pop ds; test eax, eax; jne 0xf6b40; mov eax, 0x14e; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00033b1b: pop ds; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000965dd: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x00145e26: pop dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000ed9bb: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001632bd: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x0014b473: pop dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b6c46: pop dword ptr [edx]; jbe 0xb6c50; mov eax, edx; ret; 
0x0013b94d: pop eax; aaa; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0013bb1e: pop eax; aaa; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0013a619: pop eax; aaa; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00152fea: pop eax; aam 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00128a56: pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0012704b: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x0006d3fc: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0006c7ad: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0006d590: pop eax; adc byte ptr [ecx - 0x7ccd7638], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00149ef4: pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010c794: pop eax; add al, 0x83; ret 0xc601; 
0x00058514: pop eax; add al, 0x85; fisttp dword ptr [edi]; test byte ptr [esp + ecx - 0x6a750000], ch; call 0x8405851f; ret 0x8904; 
0x0007ba96: pop eax; add al, 0x89; ret; 
0x000d7ac8: pop eax; add al, 0xf7; ret; 
0x000672d3: pop eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000a0850: pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00109926: pop eax; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x57], edi; cli; call dword ptr [eax - 0x18]; 
0x0001ec65: pop eax; add ecx, dword ptr [edi]; dec eax; ret; 
0x00085833: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0014952a: pop eax; bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00101694: pop eax; cdq; int1; jmp dword ptr [esi - 0x70]; 
0x00147d3b: pop eax; cld; jmp dword ptr [esi - 0x70]; 
0x00126dd0: pop eax; cli; call dword ptr [eax + 0x6a]; 
0x00132982: pop eax; cli; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x0010c0da: pop eax; cli; call dword ptr [eax - 0x75]; 
0x0010c61b: pop eax; cli; call dword ptr [eax - 1]; 
0x0010c1de: pop eax; cli; call dword ptr [ebx + 0x50]; 
0x0010c606: pop eax; cli; call dword ptr [edx + 0x50]; 
0x0010ca86: pop eax; cli; call dword ptr [edx - 0x17]; 
0x00074af6: pop eax; cli; jmp dword ptr [esi - 0x70]; 
0x001524ea: pop eax; fild word ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000fa984: pop eax; idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x0008aee4: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0009c343: pop eax; jnp 0x5b15e78e; pop esi; ret; 
0x00098ec0: pop eax; jnp 0x5e11b30b; ret; 
0x000b3d8c: pop eax; lea eax, [esp + 0xa4]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000b3b14: pop eax; lea eax, [esp + 0xdc]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0009d117: pop eax; lea esi, [esi]; nop; xor eax, eax; ret; 
0x00069951: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x00074fc4: pop eax; mov dword ptr [edx + 0x88], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000c7065: pop eax; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00030ec8: pop eax; mov eax, 0x77; int 0x80; 
0x000c6f20: pop eax; mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0012d579: pop eax; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00124d8d: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007383d: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007372d: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0001fc88: pop eax; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000f4ea8: pop eax; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x0009db9c: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000b6b8f: pop eax; nop; cli; call dword ptr [eax - 0x18]; 
0x0006de41: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0002e589: pop eax; or dword ptr [edi], ecx; mov dh, 0x40; or dword ptr [eax + eax*8 - 0x6a74928c], eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0004416a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x000b2527: pop eax; pop edi; pop esi; ret; 
0x0012bda7: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00124d64: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001254b5: pop eax; pop edx; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00125e34: pop eax; pop edx; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0012368e: pop eax; pop es; and eax, 7; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x0009c323: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ea0: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1a17: pop eax; push dword ptr [esp + 0x1c]; call edi; 
0x00024994: pop eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0001fc84: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c1a13: pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00116dff: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0001e4b4: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb4: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001bcc5: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00116e03: pop eax; push esi; call edi; 
0x000281c7: pop eax; ret; 
0x000dd7c4: pop eax; sbb byte ptr [ecx - 0x76d7dbbc], cl; ret 0x5c88; 
0x0001bd8f: pop eax; sub al, 0xfa; call dword ptr [eax - 0x18]; 
0x000bef2f: pop eax; sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x00077831: pop eax; xor al, 0x39; ret 0x850f; 
0x00043896: pop eax; xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00128f56: pop eax; xor eax, dword ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001499b4: pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000d6e3a: pop ebp; add al, 0x7c; ret 0x9066; 
0x000f9342: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0004a7a3: pop ebp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00131ceb: pop ebp; add esp, 0x18; pop ebx; ret; 
0x000f52e1: pop ebp; bnd jmp dword ptr [esi - 0x70]; 
0x0010c680: pop ebp; cld; leave; ret; 
0x001187bd: pop ebp; cli; call dword ptr [eax + 0x53]; 
0x0011aa87: pop ebp; cli; call dword ptr [eax - 0x18]; 
0x00117e6e: pop ebp; cli; call dword ptr [eax - 0x73]; 
0x0011b79c: pop ebp; cli; call dword ptr [ecx + 0x50]; 
0x0011b781: pop ebp; cli; call dword ptr [ecx - 0x77]; 
0x0011b77b: pop ebp; cli; dec dword ptr [ebp - 0x5a25b7a]; call dword ptr [ecx - 0x77]; 
0x00149284: pop ebp; cmp al, 0xff; inc dword ptr [ecx + 0x464f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000fab6a: pop ebp; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x000db21f: pop ebp; dec ecx; cli; call dword ptr [eax - 0x77]; 
0x0006a54c: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000c3474: pop ebp; inc edi; cli; call dword ptr [eax - 0x73]; 
0x0001b226: pop ebp; jmp eax; 
0x0010a587: pop ebp; mov ah, 0xf; xchg esp, eax; ret; 
0x00152e84: pop ebp; mov al, byte ptr [0xc381fffe]; mov eax, 0x30003d5; sbb al, 0x8b; jmp ebx; 
0x00076291: pop ebp; mov eax, edx; ret; 
0x00119bb3: pop ebp; mov esp, 0xeff52ee8; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x000d058d: pop ebp; neg eax; ret; 
0x0009e00d: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0015c80b: pop ebp; pop ebx; ret; 
0x0015c9e5: pop ebp; pop ebx; xor eax, eax; ret; 
0x00043c78: pop ebp; pop esi; pop edi; ret; 
0x00115c9b: pop ebp; pop esp; cli; call dword ptr [eax - 0x18]; 
0x0002fe3b: pop ebp; ret 4; 
0x0001a891: pop ebp; ret; 
0x00030c30: pop ebp; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000ab4a2: pop ebp; sar byte ptr [ecx], 1; ret; 
0x0014b284: pop ebp; sbb al, 0xff; inc dword ptr [ecx + 0x44778c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f1b8c: pop ebp; sub dh, dh; ret; 
0x0004cd43: pop ebp; test al, ch; sahf; ret; 
0x00157aa3: pop ebp; xor eax, eax; ret; 
0x00141701: pop ebx; aad 0xfc; dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x56e4b79]; call dword ptr [eax - 0x73]; 
0x0001b458: pop ebx; adc edx, 0; neg edx; ret; 
0x00149bbb: pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00084420: pop ebx; add al, 0x5b; cmovne eax, ecx; ret; 
0x0009c771: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0015eb0f: pop ebx; add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0006e980: pop ebx; add eax, ecx; ret; 
0x000ff3fb: pop ebx; add ebx, 0xe4c05; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0011a470: pop ebx; add esi, edx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x000c6a13: pop ebx; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x000ff103: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000740a6: pop ebx; call dword ptr [esi]; 
0x000fcf74: pop ebx; call eax; 
0x00147a1b: pop ebx; cld; jmp dword ptr [esi - 0x70]; 
0x0007bb82: pop ebx; cli; call dword ptr [eax + 0x6a]; 
0x00115242: pop ebx; cli; call dword ptr [eax - 0x42]; 
0x00115413: pop ebx; cli; call dword ptr [eax - 0x73]; 
0x000fcb63: pop ebx; cli; call dword ptr [eax - 1]; 
0x000514a6: pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x000fcbff: pop ebx; cli; call dword ptr [ecx + 0x50]; 
0x000498e1: pop ebx; cmc; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x000eb4b2: pop ebx; cmove eax, ecx; ret; 
0x000852c8: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000852b0: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000c6f2b: pop ebx; cmove eax, edx; ret; 
0x00083f52: pop ebx; cmovne eax, ecx; ret; 
0x000c6fa3: pop ebx; cmp dword ptr gs:[eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000b6c09: pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00043836: pop ebx; cmp eax, 0xfffff001; jae 0x1aff0; xor eax, eax; ret; 
0x000f9ae0: pop ebx; dec esp; cli; call dword ptr [eax - 0x39]; 
0x00132dd1: pop ebx; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00069aa3: pop ebx; jmp eax; 
0x00162984: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x00162024: pop ebx; lea eax, [ecx + 9]; ret; 
0x00161964: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x0009d090: pop ebx; lea eax, [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x0009d0a0: pop ebx; lea eax, [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x0009d0b0: pop ebx; lea eax, [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x0011a441: pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0006a3c8: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0015d33f: pop ebx; mov eax, 1; ja 0x15d349; neg eax; ret; 
0x0015de26: pop ebx; mov eax, 1; ja 0x15de30; neg eax; ret; 
0x00160720: pop ebx; mov eax, 1; ja 0x16072a; neg eax; ret; 
0x0015f060: pop ebx; mov eax, 1; jg 0x15f070; neg eax; ret; 
0x00163160: pop ebx; mov eax, 1; jg 0x163170; neg eax; ret; 
0x00043a1f: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000ea740: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x001323db: pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001323eb: pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x001265f3: pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x001265eb: pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0006e6c4: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0006e564: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0006e714: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x000756ee: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00029b45: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0006ed78: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00107ded: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x001265d5: pop ebx; mov eax, ecx; ret; 
0x000698b5: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00033c2b: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00043d08: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0002817f: pop ebx; mov eax, edx; ret; 
0x0002f68d: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x00025739: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0004a8e2: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0001b2aa: pop ebx; mov edx, esi; pop esi; pop edi; pop ebp; ret; 
0x00100a91: pop ebx; movsd dword ptr es:[edi], dword ptr [esi]; int1; dec dword ptr [ecx - 0x1732143d]; ret 0xe1; 
0x0013fcbd: pop ebx; movzx eax, al; neg eax; ret; 
0x0013e610: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x001453a0: pop ebx; neg eax; pop esi; pop edi; pop ebp; ret; 
0x000770d2: pop ebx; neg eax; ret; 
0x000bee75: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x0001e334: pop ebx; or byte ptr [ecx - 0x9cfdbb4], cl; ret; 
0x00094b11: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00043c77: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00157aa2: pop ebx; pop ebp; xor eax, eax; ret; 
0x00034aa0: pop ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003132a: pop ebx; pop edi; ret; 
0x0004d307: pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000ff177: pop ebx; pop esi; and ecx, 0xfff00; pop edi; or eax, ecx; ret; 
0x000e2fb4: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x00028b29: pop ebx; pop esi; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x0009efd0: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000ef26e: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00070615: pop ebx; pop esi; jmp eax; 
0x0009d4ca: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0006ec7f: pop ebx; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0006c7c5: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000b2607: pop ebx; pop esi; mov eax, ecx; ret; 
0x0003466d: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000d70e5: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x0007a05f: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000e2f5a: pop ebx; pop esi; mov eax, edx; ret; 
0x0002fc9c: pop ebx; pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x001268bb: pop ebx; pop esi; mov edx, eax; mov eax, edx; ret; 
0x000a19b0: pop ebx; pop esi; mov edx, ebp; pop edi; pop ebp; ret; 
0x0007499a: pop ebx; pop esi; neg eax; ret; 
0x0004500b: pop ebx; pop esi; pop ebp; ret; 
0x000ee8f3: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0002f494: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0013cb38: pop ebx; pop esi; pop edi; jmp eax; 
0x001055c1: pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x0001e179: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002fe38: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0001a88e: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00083c9c: pop ebx; pop esi; pop edi; ret 4; 
0x0001b642: pop ebx; pop esi; pop edi; ret; 
0x0009c8e0: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00034259: pop ebx; pop esi; ret 4; 
0x0001a774: pop ebx; pop esi; ret; 
0x000d0576: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x0006d026: pop ebx; pop esi; sar eax, 2; pop edi; pop ebp; ret; 
0x00043ca9: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0007af4b: pop ebx; pop esi; sbb eax, eax; pop edi; and eax, 0xc; ret; 
0x00128095: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x0009c889: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x00121e6b: pop ebx; pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x0008b5fc: pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x0015ecad: pop ebx; pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x000ac943: pop ebx; pop esi; sub eax, edx; pop edi; ret; 
0x00160f80: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x000a0751: pop ebx; push ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f5891: pop ebx; push edi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00045a4d: pop ebx; ret 4; 
0x0001dc72: pop ebx; ret; 
0x0007aa4b: pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000c7e61: pop ebx; sar bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x0013cf2b: pop ebx; setne al; movzx eax, al; ret; 
0x000fbd12: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000ffcac: pop ebx; shr eax, cl; and eax, 3; ret; 
0x00139080: pop ebx; std; jmp dword ptr [esi - 0x70]; 
0x00126dc1: pop ebx; sub al, 0xf0; call dword ptr [eax - 0x73]; 
0x0009d37b: pop ebx; sub eax, esi; pop esi; ret; 
0x000c7d23: pop ebx; test al, al; mov eax, 0; cmovne eax, ecx; ret; 
0x000ff3e6: pop ebx; test eax, eax; jl 0x1aff0; je 0xff3f2; ret; 
0x001453d0: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x000439ff: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0015a14e: pop ebx; xor eax, eax; ret; 
0x0011c78e: pop ecx; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00149da4: pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007f001: pop ecx; add al, 0xf6; ret; 
0x0003210b: pop ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000438f1: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000f5693: pop ecx; bnd jmp dword ptr [esi - 0x70]; 
0x0010edea: pop ecx; cli; call dword ptr [eax + 0x6a]; 
0x0010d5a0: pop ecx; cli; call dword ptr [eax - 0x18]; 
0x001108b4: pop ecx; cli; call dword ptr [eax - 0x18]; sbb dword ptr [ecx], 1; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x0010f68e: pop ecx; cli; call dword ptr [eax - 0x73]; 
0x0010c9cc: pop ecx; cli; call dword ptr [ecx + 0x52]; 
0x00139d4a: pop ecx; cmc; call dword ptr [eax - 0x73]; 
0x0004b570: pop ecx; dec byte ptr [ebx - 0x8373]; call dword ptr [ebx - 0x75]; 
0x00145675: pop ecx; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0009fef8: pop ecx; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x00082cdb: pop ecx; inc esp; cli; call dword ptr [ebp + 0x52]; 
0x00151b88: pop ecx; mov bl, 0xfe; inc dword ptr [ecx + 0x3e8b4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c5d60: pop ecx; mov eax, 0xbe; int 0x80; 
0x0005feae: pop ecx; out 0xff, eax; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x00102d20: pop ecx; pop eax; ret; 
0x00030acb: pop ecx; pop edx; ret; 
0x000511e3: pop ecx; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012403c: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000960b3: pop ecx; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009f562: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00149323: pop edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0001f8c6: pop edi; add al, 0x83; ret 0x3901; 
0x000bb968: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x00027a50: pop edi; add dword ptr [ebx - 0x1bf43], ecx; dec dword ptr [ebp - 0x1bcbbf79]; call dword ptr [eax - 0x73]; 
0x0009660d: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x0014ee21: pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000aa31d: pop edi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c218e: pop edi; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0007af4f: pop edi; and eax, 0xc; ret; 
0x00154033: pop edi; call 0x13cee5; add ebx, 0x3c687; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153f29: pop edi; call 0x13cee5; add ebx, 0x3c791; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153e22: pop edi; call 0x13cee5; add ebx, 0x3c898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153c06: pop edi; call 0x13cee5; add ebx, 0x3c9f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153359: pop edi; call 0x13cee5; add ebx, 0x3d0e1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015333b: pop edi; call 0x13cee5; add ebx, 0x3d0ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001532a2: pop edi; call 0x13cee5; add ebx, 0x3d198; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001531db: pop edi; call 0x13cee5; add ebx, 0x3d25f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153142: pop edi; call 0x13cee5; add ebx, 0x3d2f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015307b: pop edi; call 0x13cee5; add ebx, 0x3d3bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152fe2: pop edi; call 0x13cee5; add ebx, 0x3d458; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152f1b: pop edi; call 0x13cee5; add ebx, 0x3d51f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152e82: pop edi; call 0x13cee5; add ebx, 0x3d5b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152dbb: pop edi; call 0x13cee5; add ebx, 0x3d67f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152d22: pop edi; call 0x13cee5; add ebx, 0x3d718; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152c5b: pop edi; call 0x13cee5; add ebx, 0x3d7df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152bc2: pop edi; call 0x13cee5; add ebx, 0x3d878; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152afb: pop edi; call 0x13cee5; add ebx, 0x3d93f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152a62: pop edi; call 0x13cee5; add ebx, 0x3d9d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015299b: pop edi; call 0x13cee5; add ebx, 0x3da9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152902: pop edi; call 0x13cee5; add ebx, 0x3db38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015283b: pop edi; call 0x13cee5; add ebx, 0x3dbff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001527a2: pop edi; call 0x13cee5; add ebx, 0x3dc98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001526db: pop edi; call 0x13cee5; add ebx, 0x3dd5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152642: pop edi; call 0x13cee5; add ebx, 0x3ddf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015257b: pop edi; call 0x13cee5; add ebx, 0x3debf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015241b: pop edi; call 0x13cee5; add ebx, 0x3e01f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152382: pop edi; call 0x13cee5; add ebx, 0x3e0b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001522bb: pop edi; call 0x13cee5; add ebx, 0x3e17f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152222: pop edi; call 0x13cee5; add ebx, 0x3e218; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015215b: pop edi; call 0x13cee5; add ebx, 0x3e2df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001520c2: pop edi; call 0x13cee5; add ebx, 0x3e378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151ffb: pop edi; call 0x13cee5; add ebx, 0x3e43f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151f62: pop edi; call 0x13cee5; add ebx, 0x3e4d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151c8f: pop edi; call 0x13cee5; add ebx, 0x3e86b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150d63: pop edi; call 0x13cee5; add ebx, 0x3f517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150c59: pop edi; call 0x13cee5; add ebx, 0x3f621; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150b52: pop edi; call 0x13cee5; add ebx, 0x3f728; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fd63: pop edi; call 0x13cee5; add ebx, 0x40357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fc59: pop edi; call 0x13cee5; add ebx, 0x40461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fb52: pop edi; call 0x13cee5; add ebx, 0x40568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ed83: pop edi; call 0x13cee5; add ebx, 0x41177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ec79: pop edi; call 0x13cee5; add ebx, 0x41281; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eb72: pop edi; call 0x13cee5; add ebx, 0x41388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e956: pop edi; call 0x13cee5; add ebx, 0x414e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e009: pop edi; call 0x13cee5; add ebx, 0x41c71; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dfeb: pop edi; call 0x13cee5; add ebx, 0x41c8f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014df52: pop edi; call 0x13cee5; add ebx, 0x41d28; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014de8b: pop edi; call 0x13cee5; add ebx, 0x41def; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ddf2: pop edi; call 0x13cee5; add ebx, 0x41e88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dd2b: pop edi; call 0x13cee5; add ebx, 0x41f4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dc92: pop edi; call 0x13cee5; add ebx, 0x41fe8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dbcb: pop edi; call 0x13cee5; add ebx, 0x420af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014db32: pop edi; call 0x13cee5; add ebx, 0x42148; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014da6b: pop edi; call 0x13cee5; add ebx, 0x4220f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d9d2: pop edi; call 0x13cee5; add ebx, 0x422a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d90b: pop edi; call 0x13cee5; add ebx, 0x4236f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d872: pop edi; call 0x13cee5; add ebx, 0x42408; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d7ab: pop edi; call 0x13cee5; add ebx, 0x424cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d712: pop edi; call 0x13cee5; add ebx, 0x42568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d64b: pop edi; call 0x13cee5; add ebx, 0x4262f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d5b2: pop edi; call 0x13cee5; add ebx, 0x426c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d4eb: pop edi; call 0x13cee5; add ebx, 0x4278f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d452: pop edi; call 0x13cee5; add ebx, 0x42828; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d38b: pop edi; call 0x13cee5; add ebx, 0x428ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d2f2: pop edi; call 0x13cee5; add ebx, 0x42988; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d22b: pop edi; call 0x13cee5; add ebx, 0x42a4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d192: pop edi; call 0x13cee5; add ebx, 0x42ae8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d0cb: pop edi; call 0x13cee5; add ebx, 0x42baf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d032: pop edi; call 0x13cee5; add ebx, 0x42c48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cf6b: pop edi; call 0x13cee5; add ebx, 0x42d0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ced2: pop edi; call 0x13cee5; add ebx, 0x42da8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ce0b: pop edi; call 0x13cee5; add ebx, 0x42e6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cd72: pop edi; call 0x13cee5; add ebx, 0x42f08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ccab: pop edi; call 0x13cee5; add ebx, 0x42fcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cc12: pop edi; call 0x13cee5; add ebx, 0x43068; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c93f: pop edi; call 0x13cee5; add ebx, 0x433fb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bf09: pop edi; call 0x13cee5; add ebx, 0x43af1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014beeb: pop edi; call 0x13cee5; add ebx, 0x43b0f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014be52: pop edi; call 0x13cee5; add ebx, 0x43ba8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd9b: pop edi; call 0x13cee5; add ebx, 0x43c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd02: pop edi; call 0x13cee5; add ebx, 0x43cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bc4b: pop edi; call 0x13cee5; add ebx, 0x43daf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bbb2: pop edi; call 0x13cee5; add ebx, 0x43e48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bafb: pop edi; call 0x13cee5; add ebx, 0x43eff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ba62: pop edi; call 0x13cee5; add ebx, 0x43f98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b9ab: pop edi; call 0x13cee5; add ebx, 0x4404f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b912: pop edi; call 0x13cee5; add ebx, 0x440e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b85b: pop edi; call 0x13cee5; add ebx, 0x4419f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b7c2: pop edi; call 0x13cee5; add ebx, 0x44238; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b70b: pop edi; call 0x13cee5; add ebx, 0x442ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b672: pop edi; call 0x13cee5; add ebx, 0x44388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b5bb: pop edi; call 0x13cee5; add ebx, 0x4443f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b522: pop edi; call 0x13cee5; add ebx, 0x444d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b46b: pop edi; call 0x13cee5; add ebx, 0x4458f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b3d2: pop edi; call 0x13cee5; add ebx, 0x44628; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b31b: pop edi; call 0x13cee5; add ebx, 0x446df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b282: pop edi; call 0x13cee5; add ebx, 0x44778; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b1cb: pop edi; call 0x13cee5; add ebx, 0x4482f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b132: pop edi; call 0x13cee5; add ebx, 0x448c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b07b: pop edi; call 0x13cee5; add ebx, 0x4497f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014afe2: pop edi; call 0x13cee5; add ebx, 0x44a18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014af2b: pop edi; call 0x13cee5; add ebx, 0x44acf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ae92: pop edi; call 0x13cee5; add ebx, 0x44b68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014addb: pop edi; call 0x13cee5; add ebx, 0x44c1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ad42: pop edi; call 0x13cee5; add ebx, 0x44cb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ac8b: pop edi; call 0x13cee5; add ebx, 0x44d6f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014abf2: pop edi; call 0x13cee5; add ebx, 0x44e08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a92f: pop edi; call 0x13cee5; add ebx, 0x4518b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149f09: pop edi; call 0x13cee5; add ebx, 0x45871; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149eeb: pop edi; call 0x13cee5; add ebx, 0x4588f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149e52: pop edi; call 0x13cee5; add ebx, 0x45928; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d9b: pop edi; call 0x13cee5; add ebx, 0x459df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d02: pop edi; call 0x13cee5; add ebx, 0x45a78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149c4b: pop edi; call 0x13cee5; add ebx, 0x45b2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149bb2: pop edi; call 0x13cee5; add ebx, 0x45bc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149afb: pop edi; call 0x13cee5; add ebx, 0x45c7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149a62: pop edi; call 0x13cee5; add ebx, 0x45d18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001499ab: pop edi; call 0x13cee5; add ebx, 0x45dcf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149912: pop edi; call 0x13cee5; add ebx, 0x45e68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014985b: pop edi; call 0x13cee5; add ebx, 0x45f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001497c2: pop edi; call 0x13cee5; add ebx, 0x45fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014970b: pop edi; call 0x13cee5; add ebx, 0x4606f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149672: pop edi; call 0x13cee5; add ebx, 0x46108; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001495bb: pop edi; call 0x13cee5; add ebx, 0x461bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149522: pop edi; call 0x13cee5; add ebx, 0x46258; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014946b: pop edi; call 0x13cee5; add ebx, 0x4630f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001493d2: pop edi; call 0x13cee5; add ebx, 0x463a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014931b: pop edi; call 0x13cee5; add ebx, 0x4645f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149282: pop edi; call 0x13cee5; add ebx, 0x464f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001491cb: pop edi; call 0x13cee5; add ebx, 0x465af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149132: pop edi; call 0x13cee5; add ebx, 0x46648; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014907b: pop edi; call 0x13cee5; add ebx, 0x466ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148fe2: pop edi; call 0x13cee5; add ebx, 0x46798; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148f2b: pop edi; call 0x13cee5; add ebx, 0x4684f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148e92: pop edi; call 0x13cee5; add ebx, 0x468e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148ddb: pop edi; call 0x13cee5; add ebx, 0x4699f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148d42: pop edi; call 0x13cee5; add ebx, 0x46a38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148c8b: pop edi; call 0x13cee5; add ebx, 0x46aef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148bf2: pop edi; call 0x13cee5; add ebx, 0x46b88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014892f: pop edi; call 0x13cee5; add ebx, 0x46f0b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012118c: pop edi; cli; call dword ptr [eax + 0x56]; 
0x0011f2c3: pop edi; cli; call dword ptr [eax - 0x18]; 
0x00120100: pop edi; cli; call dword ptr [eax - 0x73]; 
0x0011ee31: pop edi; cli; call dword ptr [ebx - 0x18]; 
0x000f47a8: pop edi; cmova eax, edx; pop ebp; ret; 
0x000f4764: pop edi; cmova eax, edx; ret; 
0x000280fe: pop edi; cmove edx, ecx; mov byte ptr [eax + 0x1115], dl; lea eax, [eax + 0x10e0]; ret; 
0x0009efb2: pop edi; cmovg eax, edx; ret; 
0x0014bda3: pop edi; cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ee8f5: pop edi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x001526e3: pop edi; fld qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002f496: pop edi; fsubp st(1); ret; 
0x001377fd: pop edi; je 0x1377fd; jmp dword ptr [esi - 0x70]; 
0x000968d0: pop edi; jge 0x5e68801e; pop ebx; ret; 
0x0006e569: pop edi; jmp eax; 
0x000951f0: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000ad9dd: pop edi; mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00096ce3: pop edi; mov ch, 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0015088c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001469e0: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001034b8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00103378: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x001030f8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00103238: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00102e78: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00103198: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00102f18: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00102fb8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x001032d8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00102dd8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000a0aa5: pop edi; mov eax, ebp; pop ebp; ret; 
0x00028b2e: pop edi; mov eax, ecx; ret; 
0x001055c3: pop edi; mov eax, edx; ret; 
0x00103410: pop edi; mov edx, dword ptr gs:[edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0007a5c0: pop edi; mov edx, ebp; pop ebp; ret; 
0x000fbd17: pop edi; movzx eax, al; ret; 
0x00103d7d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x00103cfd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00103c7d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x00103a7d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x00103b7d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0010387d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x00103afd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x001038fd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0010397d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x00103bfd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x001037fd: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x0002f65e: pop edi; not eax; and eax, edx; ret; 
0x0015bd7d: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00107de9: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000ff17f: pop edi; or eax, ecx; ret; 
0x000fab69: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0001b225: pop edi; pop ebp; jmp eax; 
0x00076290: pop edi; pop ebp; mov eax, edx; ret; 
0x000d058c: pop edi; pop ebp; neg eax; ret; 
0x0015e6e2: pop edi; pop ebp; pop ebx; ret; 
0x0015c9e4: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0002fe3a: pop edi; pop ebp; ret 4; 
0x0001a890: pop edi; pop ebp; ret; 
0x00157aa1: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x0008e7f2: pop edi; pop ebx; ret; 
0x00094ab0: pop edi; pop esi; pop ebx; ret; 
0x0008b6ae: pop edi; pop esi; ret; 
0x0009bfb7: pop edi; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000951d0: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00083c9e: pop edi; ret 4; 
0x00019183: pop edi; ret; 
0x001531e3: pop edi; rol byte ptr [ebx], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005ed60: pop edi; sbb byte ptr [ecx], ch; ret; 
0x000341be: pop edi; sbb edx, ecx; ret; 
0x00138c71: pop edi; std; jmp dword ptr [esi - 0x70]; 
0x00069508: pop edi; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0015d171: pop edi; xor eax, eax; pop ebp; ret; 
0x0009c8e2: pop edi; xor eax, eax; ret; 
0x00149d0b: pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000cf8cc: pop edx; add al, 0x83; ret 0x8301; 
0x0004f2c5: pop edx; add al, 0x83; ret 0x8304; 
0x0008b106: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0006d3f9: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0011b052: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b7294: pop edx; add dword ptr [ecx - 0xef6b], ecx; call dword ptr [ebx - 0x18]; 
0x0013a9bd: pop edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012b30c: pop edx; and al, 0x83; ret 0x8b18; 
0x00113dc7: pop edx; cli; call dword ptr [eax + 0x53]; 
0x00111514: pop edx; cli; call dword ptr [eax - 0x18]; 
0x001110ce: pop edx; cli; call dword ptr [eax - 0x73]; 
0x00113b37: pop edx; cli; call dword ptr [esi + 0x6a]; 
0x0005b79c: pop edx; in eax, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x001455a5: pop edx; in eax, dx; jmp dword ptr [esi - 0x70]; 
0x0008736c: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x0015ddf4: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x15de10; pop ebx; ret; 
0x00107fc5: pop edx; or al, 0xf6; ret; 
0x00034a28: pop edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00080f0e: pop edx; pop ebx; pop esi; ret; 
0x000f5692: pop edx; pop ecx; bnd jmp dword ptr [esi - 0x70]; 
0x00102d1f: pop edx; pop ecx; pop eax; ret; 
0x0012403b: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0009f561: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x0012bda8: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x00124d65: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001254b6: pop edx; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00125e35: pop edx; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00124d91: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00130c87: pop edx; ret 0; 
0x00030acc: pop edx; ret; 
0x001266f1: pop edx; sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x00078585: pop edx; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0009cbb5: pop edx; xor eax, eax; pop edi; ret; 
0x0014fa62: pop es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014efcf: pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152419: pop es; add al, 0x5f; call 0x13cee5; add ebx, 0x3e01f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d0c9: pop es; add al, 0x5f; call 0x13cee5; add ebx, 0x42baf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b079: pop es; add al, 0x5f; call 0x13cee5; add ebx, 0x4497f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149079: pop es; add al, 0x5f; call 0x13cee5; add ebx, 0x466ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eeaf: pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0011de6a: pop es; add byte ptr [eax], al; add byte ptr [ebp - 0x5a87643], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0007dcd7: pop es; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00081b21: pop es; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x000f60a7: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00051192: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00161422: pop es; add byte ptr [eax], al; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0007dd27: pop es; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0015d69a: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x00094c8b: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c1996: pop es; add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x0007be53: pop es; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00025838: pop es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0002d4fa: pop es; add byte ptr [ebx + 0x7c8d10c4], al; pop es; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x000296c1: pop es; add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x58f4f7b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000c1afc: pop es; add byte ptr [ebx - 0x776ef3c], al; call eax; 
0x0016b84a: pop es; add byte ptr [ebx - 0x7c72ef14], al; add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x0002af6d: pop es; add byte ptr [ebx - 0x8b6b], cl; inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x000c6b49: pop es; add byte ptr [ecx + 0x11d4b5c3], al; add byte ptr [ecx + 0x154cec], al; add byte ptr [ecx - 0x154763], cl; jmp dword ptr [ebp - 0x75]; 
0x000c0115: pop es; add byte ptr [ecx + 0x123ee9c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000bfb0a: pop es; add byte ptr [ecx + 0x1244f4c3], al; add byte ptr [ebx - 0x7cebdb8c], cl; jmp dword ptr [ebx + 0xf]; 
0x00081d3a: pop es; add byte ptr [edx], bh; cmp eax, -1; cmove eax, edx; add esp, 0x1c; ret; 
0x0012cfcd: pop es; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0014ee1f: pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0006a375: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0014f05f: pop es; add eax, 0x8b1c035f; jmp ebx; 
0x000857d8: pop es; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x0014ef3f: pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00123692: pop es; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x00096be0: pop es; add edi, 0x10; call 0x13cef9; add ecx, 0xeb6e7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096bc4: pop es; add edi, 0x10; call 0x13cef9; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954e0: pop es; add edi, 0x10; call 0x13cef9; add ecx, 0xecc87; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000954c4: pop es; add edi, 0x10; call 0x13cef9; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002d501: pop es; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x000822a2: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000b6e25: pop es; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00115711: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0010da08: pop es; add esp, 8; pop ebx; ret; 
0x0012368f: pop es; and eax, 7; add ecx, dword ptr [ecx + eax*4 - 0x5ea60]; shr ebx, 3; jmp ecx; 
0x00093f7f: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0008fa15: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00161952: pop es; jb 0x1619c0; lea eax, [edi + 6]; pop edi; ret; 
0x00162972: pop es; jb 0x1629e0; lea eax, [eax + 6]; pop edi; ret; 
0x00074fe6: pop es; jg 0x74ff5; add byte ptr [ecx + 0x16f016c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00162012: pop es; jl 0x162080; lea eax, [ecx + 7]; ret; 
0x001613c2: pop es; jne 0x161150; xor eax, eax; pop edi; ret; 
0x0008ebb1: pop es; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008efb1: pop es; jne 0x8ee51; pop ebx; ret; 
0x00093432: pop es; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00094b8f: pop es; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000961d2: pop es; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000967f7: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0009675d: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000967e1: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00096707: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00163558: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x0009118d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912cd: pop es; lea eax, [edx + 0xa]; ret; 
0x00093ea4: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000911f1: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x00091351: pop es; lea eax, [edx + 0xe]; ret; 
0x0008ebae: pop es; lea ecx, [edx + 7]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008efae: pop es; lea ecx, [edx + 7]; jne 0x8ee51; pop ebx; ret; 
0x0014f5ff: pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x0009e6b7: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0x9e6b8; pop esi; ret; 
0x0009512a: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x0009503a: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x0009518a: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0009516a: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x0009507a: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0009509a: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000959fc: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x00095b5c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0009b56d: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000943bc: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0009451c: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0005009e: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0009c1c0: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d4d: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010dde8: pop es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0009b570: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cdad: pop es; mov eax, edi; pop edi; ret; 
0x0008f9d4: pop es; mov eax, edx; pop ebx; ret; 
0x0008ceed: pop es; mov eax, edx; ret; 
0x00159fed: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x0009514b: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x0009505b: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x0009530c: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952ac: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952cc: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000952ec: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x00098d46: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098dc8: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009520c: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000951cc: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000951ec: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x00095413: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950bc: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095423: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000950dc: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000950fc: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x00095a7c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x00095bdc: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x0009b5ef: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0009443c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x0009459c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x00091186: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000912c6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x0008cda6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x0008cee6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000911e8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x00091348: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x0008ce08: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x0008f9cb: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x0008cf68: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00132c93: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x000ef141: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x00157940: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00156193: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0014f44f: pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00152f19: pop es; or al, 0x5f; call 0x13cee5; add ebx, 0x3d51f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014dbc9: pop es; or al, 0x5f; call 0x13cee5; add ebx, 0x420af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014baf9: pop es; or al, 0x5f; call 0x13cee5; add ebx, 0x43eff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149af9: pop es; or al, 0x5f; call 0x13cee5; add ebx, 0x45c7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f32f: pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0014f20f: pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x0014f29f: pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x0014f4df: pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0014f3bf: pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00044169: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x000822d5: pop es; pop ebx; pop esi; pop edi; ret; 
0x0008b0af: pop es; pop ebx; pop esi; ret; 
0x0008ed76: pop es; pop ebx; ret; 
0x0014f180: pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015283a: pop es; pop edi; call 0x13cee5; add ebx, 0x3dbff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d4ea: pop es; pop edi; call 0x13cee5; add ebx, 0x4278f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b46a: pop es; pop edi; call 0x13cee5; add ebx, 0x4458f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014946a: pop es; pop edi; call 0x13cee5; add ebx, 0x4630f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001469df: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00146f2f: pop es; pop edi; pop ebx; ret; 
0x00095027: pop es; pop edi; pop esi; pop ebx; ret; 
0x0009103a: pop es; pop edi; ret; 
0x0014f17f: pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f8ba: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00154b5a: pop es; pop esi; pop edi; pop ebx; ret; 
0x0014f56f: pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00106b1d: pop es; push edi; cli; call dword ptr [eax - 0x73]; 
0x0014f0ef: pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001211d3: pop es; pushal; cli; call dword ptr [eax + 0x57]; 
0x00026790: pop es; pushal; xchg esp, eax; clc; call dword ptr [eax - 0x18]; 
0x0009127a: pop es; ret; 
0x00153d7b: pop es; retf 3; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0006cbf7: pop es; sar dl, 1; jmp dword ptr [esi - 0x70]; 
0x0010eb8d: pop es; sar eax, 5; add esp, 0xc; ret; 
0x00157944: pop es; sub eax, ecx; pop ebp; ret; 
0x00156197: pop es; sub eax, ecx; ret; 
0x0009345a: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0x932a1; pop ebx; ret; 
0x0011a7a0: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0011dbee: pop esi; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x7a72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x0014991b: pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0004d308: pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000d7097: pop esi; and al, 0x39; ret; 
0x000d7093: pop esi; and al, 0xf; dec esi; pop esi; and al, 0x39; ret; 
0x000d70c4: pop esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000d0588: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x000ff178: pop esi; and ecx, 0xfff00; pop edi; or eax, ecx; ret; 
0x000e2fb5: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x0009c8c2: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x00154d0c: pop esi; call 0x13cee5; add ebx, 0x3baae; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151a5c: pop esi; call 0x13cee5; add ebx, 0x3e91e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011ff15: pop esi; cli; call dword ptr [eax + 0x6a]; 
0x0011dbff: pop esi; cli; call dword ptr [eax - 0x18]; 
0x0011edb5: pop esi; cli; call dword ptr [esi - 0x18]; 
0x0011dde0: pop esi; cli; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x00028b2a: pop esi; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x0009efd1: pop esi; cmovg eax, edx; pop edi; ret; 
0x000ef26f: pop esi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00070616: pop esi; jmp eax; 
0x001634fe: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0009d4cb: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0006ec80: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0006c7c6: pop esi; mov eax, ecx; pop edi; ret; 
0x000b2608: pop esi; mov eax, ecx; ret; 
0x0003466e: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000d70e6: pop esi; mov eax, edi; pop edi; ret; 
0x0007a060: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000e2f5b: pop esi; mov eax, edx; ret; 
0x0002fc9d: pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x000a0aa2: pop esi; mov ebp, ecx; pop edi; mov eax, ebp; pop ebp; ret; 
0x001268bc: pop esi; mov edx, eax; mov eax, edx; ret; 
0x000a19b1: pop esi; mov edx, ebp; pop edi; pop ebp; ret; 
0x0009efad: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0007499b: pop esi; neg eax; ret; 
0x00107fc2: pop esi; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x0015cccd: pop esi; pop ebp; pop ebx; ret; 
0x0015ccae: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0004500c: pop esi; pop ebp; ret; 
0x00094ab1: pop esi; pop ebx; ret; 
0x000ff3e5: pop esi; pop ebx; test eax, eax; jl 0x1aff0; je 0xff3f2; ret; 
0x00154032: pop esi; pop edi; call 0x13cee5; add ebx, 0x3c687; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153f28: pop esi; pop edi; call 0x13cee5; add ebx, 0x3c791; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153e21: pop esi; pop edi; call 0x13cee5; add ebx, 0x3c898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150d62: pop esi; pop edi; call 0x13cee5; add ebx, 0x3f517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150c58: pop esi; pop edi; call 0x13cee5; add ebx, 0x3f621; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150b51: pop esi; pop edi; call 0x13cee5; add ebx, 0x3f728; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fd62: pop esi; pop edi; call 0x13cee5; add ebx, 0x40357; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fc58: pop esi; pop edi; call 0x13cee5; add ebx, 0x40461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fb51: pop esi; pop edi; call 0x13cee5; add ebx, 0x40568; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ed82: pop esi; pop edi; call 0x13cee5; add ebx, 0x41177; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ec78: pop esi; pop edi; call 0x13cee5; add ebx, 0x41281; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014eb71: pop esi; pop edi; call 0x13cee5; add ebx, 0x41388; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ee8f4: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0002f495: pop esi; pop edi; fsubp st(1); ret; 
0x0006e568: pop esi; pop edi; jmp eax; 
0x0014f8bb: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001034b7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00103377: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x001030f7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00103237: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00102e77: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00103197: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00102f17: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00102fb7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x001032d7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00102dd7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001055c2: pop esi; pop edi; mov eax, edx; ret; 
0x000fbd16: pop esi; pop edi; movzx eax, al; ret; 
0x00103d7c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x00103cfc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00103c7c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x00103a7c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x00103b7c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0010387c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x00103afc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x001038fc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0010397c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x00103bfc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x001037fc: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x000fab68: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x0001e17a: pop esi; pop edi; pop ebp; jmp eax; 
0x0015e6e1: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x0015c9e3: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0002fe39: pop esi; pop edi; pop ebp; ret 4; 
0x0001a88f: pop esi; pop edi; pop ebp; ret; 
0x00157aa0: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x00154b5b: pop esi; pop edi; pop ebx; ret; 
0x00083c9d: pop esi; pop edi; ret 4; 
0x00019182: pop esi; pop edi; ret; 
0x000341bd: pop esi; pop edi; sbb edx, ecx; ret; 
0x0015d170: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x0009c8e1: pop esi; pop edi; xor eax, eax; ret; 
0x0009c584: pop esi; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e7ee: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000dcdbe: pop esi; ret 0xfff3; 
0x0003425a: pop esi; ret 4; 
0x0001a775: pop esi; ret; 
0x0001b21a: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0002f65a: pop esi; sar eax, 0x1f; pop edi; not eax; and eax, edx; ret; 
0x000d0577: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x0006d027: pop esi; sar eax, 2; pop edi; pop ebp; ret; 
0x0007a5bc: pop esi; sar ebp, 0x1f; pop edi; mov edx, ebp; pop ebp; ret; 
0x0006f2cb: pop esi; sar edi, 0x1f; mov edx, edi; pop edi; pop ebp; ret; 
0x00043caa: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0007af4c: pop esi; sbb eax, eax; pop edi; and eax, 0xc; ret; 
0x00128096: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x0009c88a: pop esi; sub eax, 0x10; pop edi; ret; 
0x00121e6c: pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x0008b5fd: pop esi; sub eax, edi; pop edi; ret; 
0x0015ecae: pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x000ac944: pop esi; sub eax, edx; pop edi; ret; 
0x0007628d: pop esi; sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x00163519: pop esi; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x0009d912: pop esi; xor eax, eax; pop ebx; ret; 
0x0015e6f0: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x00160f81: pop esi; xor eax, eax; pop edi; ret; 
0x0012c413: pop esp; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00149b04: pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f9312: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000d4e28: pop esp; add dword ptr [eax], eax; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x000324bc: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00020aeb: pop esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x0004a7d1: pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000d1a4f: pop esp; add dword ptr [edi], ecx; lahf; ret 0xd789; 
0x0011b99b: pop esp; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f661e: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x000faf54: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000f58c3: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ee8e4: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef194: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003b4: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00100144: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00100034: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00100184: pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x00100224: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd24: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcb4: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb84: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000857d1: pop esp; and al, 0x10; mov ecx, edx; and ecx, 7; add eax, dword ptr [eax + ecx*4 - 0x62050]; jmp eax; 
0x000f6ed2: pop esp; and al, 0x10; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b2: pop esp; and al, 0x10; mov edx, dword ptr [esp + 4]; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f59a1: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f5923: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000e1da1: pop esp; and al, 0x10; test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x0008afb9: pop esp; and al, 0x14; cmp ecx, 8; ja 0x8afdd; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0008b079: pop esp; and al, 0x14; cmp ecx, 8; ja 0x8b093; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x000ffe49: pop esp; and al, 0x14; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x0007c6f0: pop esp; and al, 0x14; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ba8ea: pop esp; and al, 0x14; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x0014537e: pop esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00145348: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4786: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0010b57a: pop esp; and al, 0x18; je 0x10b588; add esp, 8; pop ebx; ret; 
0x000fab59: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001014bf: pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000ff3d4: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00080dac: pop esp; and al, 0x1c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f56f1: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000ed935: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ece8a: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed2ad: pop esp; and al, 0x20; mov edi, dword ptr [esp + 0x2c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0016801f: pop esp; and al, 0x20; mov edx, dword ptr [ebx + esi*4 - 0x53538]; add edx, ebx; jmp edx; 
0x00166315: pop esp; and al, 0x24; mov esi, dword ptr [ebx + edx*4 - 0x53578]; add esi, ebx; jmp esi; 
0x0013d67f: pop esp; and al, 0x28; push ebx; call eax; 
0x000bf222: pop esp; and al, 0x30; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xbf2a0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f5e6b: pop esp; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ff6ee: pop esp; and al, 0x50; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f7954: pop esp; and al, 0x50; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f4eaa: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f4f13: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000ec3ab: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x001323d4: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e4: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x000ef25f: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0010031f: pop esp; and al, 0xc; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe0f: pop esp; and al, 0xc; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0010025f: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000edf30: pop esp; and al, 0xc; mov eax, 0xb7; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000f4d6f: pop esp; and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbbf: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc1f: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdaef: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d9f: pop esp; and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000806c7: pop esp; and al, 0xc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fffdf: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000ff5b1: pop esp; and al, 0xc; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00050f70: pop esp; and al, 0xc; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000ddb5e: pop esp; and al, 0xc; movzx edx, byte ptr [esi + 0x18]; mov ecx, dword ptr [ebx + edx*4 - 0x5fed8]; add ecx, ebx; jmp ecx; 
0x001000d7: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001002a3: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001002e7: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00100347: pop esp; and al, 4; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000ff5e7: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x000fffb3: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000edd97: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001000b3: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00100377: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x000fff07: pop esp; and al, 4; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000f7b53: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x001003e7: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x00100417: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00100447: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00100473: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000c59f3: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000ec0b7: pop esp; and al, 4; mov eax, 0x1e; call dword ptr gs:[0x10]; 
0x00031147: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x000ecbc7: pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ef2d3: pop esp; and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x000edcf3: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000edd73: pop esp; and al, 4; mov eax, 0x2a; call dword ptr gs:[0x10]; 
0x000f79f3: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ff437: pop esp; and al, 4; mov eax, 0x34; call dword ptr gs:[0x10]; 
0x000c68c7: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000ecac3: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x000ecac3: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f7a13: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x000edd17: pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000f76f7: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x000f6357: pop esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000ef1c7: pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001002c3: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x000f7e87: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x000fade7: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x000ecb17: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x000ec867: pop esp; and al, 4; mov eax, 0x63; call dword ptr gs:[0x10]; 
0x000ec897: pop esp; and al, 4; mov eax, 0x64; call dword ptr gs:[0x10]; 
0x000b6bc7: pop esp; and al, 4; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000ff283: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x000f7e63: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x000ffde3: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000f7eb3: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00100283: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000f7817: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000c57c3: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00100003: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000c68a3: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x000ede93: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ffe77: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x000ff7b3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ff7b3: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ed9b7: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000c6923: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x000faf87: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x000fafb7: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000fafe3: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000e1c47: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000e1c77: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000e1cd3: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000e1d13: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000e1d33: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000e1d57: pop esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ff2a7: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x000ef283: pop esp; and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x000ffea7: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x000ffed7: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00031727: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ede73: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000c6687: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000ff4a3: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x000ff4c3: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000ff4c3: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001001e7: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x000fdce7: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x000fdc77: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x000fdb47: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ecae7: pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000c5d76: pop esp; and al, 4; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x000fff93: pop esp; and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000ef157: pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x00050f3b: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000eb3a6: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x001004aa: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010006a: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbfa: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2aa: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1fa: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000eb525: pop esp; and al, 8; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x000edd4a: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f681a: pop esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef22a: pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f665a: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff25a: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0010010a: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bfa: pop esp; and al, 8; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdba: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae1a: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff3a: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff6a: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1caa: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001ba: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d9a: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8aa: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee87a: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c696a: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c699a: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee84a: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf1a: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faeea: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbea: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc4a: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb1a: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007d240: pop esp; and al, 8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00031177: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000b4136: pop esp; and al, 8; test ecx, ecx; jne 0xb4158; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000c092f: pop esp; and al, 8; test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0009cf83: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000f4eb0: pop esp; call dword ptr gs:[0x10]; 
0x0008298f: pop esp; call eax; 
0x0001f796: pop esp; call edi; 
0x0013f900: pop esp; cld; jmp dword ptr [esi - 0x70]; 
0x0011685a: pop esp; cli; call dword ptr [eax + 0x55]; 
0x00114fbe: pop esp; cli; call dword ptr [eax + 0x6a]; 
0x00115c9c: pop esp; cli; call dword ptr [eax - 0x18]; 
0x00115288: pop esp; cli; call dword ptr [eax - 0x73]; 
0x001171c8: pop esp; cli; call dword ptr [eax - 1]; 
0x0011673a: pop esp; cli; call dword ptr [ecx - 0x77]; 
0x0011690e: pop esp; cli; call dword ptr [edx + 0x50]; 
0x000fcc24: pop esp; cli; jmp dword ptr [ebp - 0x77]; 
0x000632e3: pop esp; idiv edi; call dword ptr [edx + 0x50]; 
0x0001bd7f: pop esp; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x00127600: pop esp; jbe 0x127601; jmp dword ptr [esi - 0x70]; 
0x0004ef99: pop esp; je 0x4ef96; call dword ptr [eax - 0x73]; 
0x00057e7d: pop esp; jecxz 0x57e7f; call dword ptr [ecx + 0x51]; 
0x0014ed85: pop esp; loope 0x14ed86; inc dword ptr [ecx + 0x41177c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012f6f0: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00162b19: pop esp; mov eax, 0x10; pop edi; ret; 
0x000f4f19: pop esp; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x001479f7: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001479fb: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000b6c45: pop esp; pop dword ptr [edx]; jbe 0xb6c50; mov eax, edx; ret; 
0x0001e178: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0001f82e: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0001e4b0: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb0: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0008298b: pop esp; push dword ptr [esp + 0x5c]; call eax; 
0x0001eb12: pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0012d548: pop esp; push esi; call dword ptr [eax + 0x14]; 
0x00128300: pop esp; ret 0xffff; 
0x000ccd88: pop esp; ret; 
0x000795a7: pop esp; sbb dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000776e4: pop esp; sbb dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00079e04: pop esp; sbb dword ptr [eax], eax; add byte ptr [ecx], al; pop ebx; pop esi; ret; 
0x000b28bb: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ecd31: pop esp; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x0016bef5: pop ss; add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x00034599: pop ss; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00034727: pop ss; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x000501c3: pop ss; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000345e7: pop ss; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000dedc0: pop ss; add edi, edx; call dword ptr [ecx + 0x6a]; 
0x000ed2df: pop ss; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001396da: pop ss; add esp, 0x28; pop ebx; ret; 
0x000c7ece: pop ss; add esp, 0x78; pop ebx; ret; 
0x000f58d8: pop ss; add esp, 4; pop ebx; pop esi; ret; 
0x0009c928: pop ss; bsf ecx, ecx; sub edx, ecx; jbe 0x9c960; add eax, ecx; ret; 
0x000c6fb9: pop ss; cld; add byte ptr [eax], al; pop ebx; ret; 
0x00150d6b: pop ss; cmc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002590d: pop ss; das; cli; call dword ptr [eax + 0x56]; 
0x000c1f57: pop ss; inc edi; cli; call dword ptr [eax - 0x18]; 
0x00094de7: pop ss; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x00137445: pop ss; js 0x137445; jmp dword ptr [esi - 0x70]; 
0x00096967: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x00096653: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x00096665: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x00096693: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00163548: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x0001a6bd: pop ss; lea edx, [eax - 0x16fbb0]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x00095391: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000b2758: pop ss; mov cl, dl; and cl, 0xf; je 0xb2780; ret; 
0x000192dd: pop ss; mov eax, 0xf0; lea ebx, [ebp + 0x1264]; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00077c68: pop ss; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009c3ea: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098f47: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba8e8: pop ss; mov ebx, dword ptr [esp + 0x14]; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x000953a1: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000716f4: pop ss; pop ebx; pop esi; pop edi; ret; 
0x00094fb3: pop ss; pop edi; pop esi; pop ebx; ret; 
0x00034154: pop ss; push dword ptr [ebx + 4]; call eax; 
0x001210d9: pop ss; pushal; cli; call dword ptr [eax + 0x57]; 
0x0015d3d9: pop ss; ret 0x2c73; 
0x0015dd9a: pop ss; ret 0x3273; 
0x0015d3c4: pop ss; ret 0x3e73; 
0x0015dd80: pop ss; ret 0x4c73; 
0x0015d3af: pop ss; ret 0x5073; 
0x0015d39a: pop ss; ret 0x6273; 
0x0015dd66: pop ss; ret 0x6673; 
0x0015cd35: pop ss; ret 0x830f; 
0x00069ad0: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x001632e8: pop ss; test dh, 0xf; jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x001495c4: popal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fc61: popal; add al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009303b: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0011d600: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x000ecfc6: popal; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00125306: popal; cli; call dword ptr [eax - 0x18]; 
0x00129519: popal; cli; call dword ptr [eax - 0x73]; 
0x0012de3f: popal; cli; call dword ptr [ecx + 0x6a]; 
0x00127277: popal; cli; call dword ptr [edi + 0x6a]; 
0x001263a0: popal; cli; call dword ptr [edx + 0x6a]; 
0x00127147: popal; cli; call dword ptr [esi + 0x6a]; 
0x0013b045: popal; cmc; jmp dword ptr [esi - 9]; 
0x000853bd: popal; idiv edi; cmovne edx, eax; mov eax, edx; ret; 
0x000a49db: popal; inc esp; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x0008f663: popal; jmp dword ptr [esi + 0xf]; 
0x001435eb: popal; movsd dword ptr es:[edi], dword ptr [esi]; cmc; call dword ptr [edi - 1]; 
0x001122f5: popal; pop edx; cli; call dword ptr [eax - 0x18]; 
0x0014fa61: popal; pop es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00122d09: popal; pushal; cli; call dword ptr [eax - 0x18]; 
0x0011099b: popal; sbb al, byte ptr [ecx]; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x001373c3: popal; std; jmp dword ptr [esi - 0x70]; 
0x0010048b: popal; stosd dword ptr es:[edi], eax; int1; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000192e4: popfd; adc al, byte ptr fs:[eax]; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00124852: popfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00044c70: popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00040e9d: popfd; and byte ptr [edi], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014ad44: popfd; and edi, edi; inc dword ptr [ecx + 0x44cb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005c0fb: popfd; call 0x8405c0fb; ret; 
0x0007df89: popfd; clc; sbb eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0011b540: popfd; cli; call dword ptr [eax - 0x73]; 
0x0013d802: popfd; cmp al, 0x19; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000637b7: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [eax - 0x18]; 
0x00064814: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [edx - 0x77]; 
0x000646c4: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi + 0x6a]; 
0x00065138: popfd; insb byte ptr es:[edi], dx; idiv edi; call dword ptr [esi - 0x18]; 
0x00065165: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006467a: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00065070: popfd; insb byte ptr es:[edi], dx; idiv edi; dec dword ptr [ecx - 0x89f73]; call dword ptr [ecx + 0x6a]; 
0x00033faa: popfd; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000472ab: popfd; mov esp, 0x1ffffc9; ret; 
0x0014c544: popfd; or edi, edi; inc dword ptr [ecx + 0x434b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000791b1: popfd; pop esp; sbb dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000bd947: popfd; shr dword ptr [ebx], 0x45; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x0001d287: popfd; sub al, 0xfa; call dword ptr [eax - 0x18]; 
0x0006b4cf: popfd; sub byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00152644: popfd; test al, 0xfe; inc dword ptr [ecx + 0x3ddf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001370a5: popfd; test byte ptr [0x81b90000], dh; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0005e724: popfd; xchg esp, eax; idiv edi; dec dword ptr [edi]; test byte ptr [0x83000013], ch; ret; 
0x0005ee81: popfd; xchg esp, eax; idiv edi; inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x00098e36: psllq mm1, qword ptr [edi]; jg 0x98e3b; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098eb8: psllq mm1, qword ptr [edi]; jg 0x98ebd; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098fb8: psllq mm1, qword ptr [edi]; jg 0x98fbd; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000eae32: psubd mm7, mm7; add ecx, edx; jmp ecx; 
0x000d271a: psubd mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x000e59a6: psubq mm7, mm7; call dword ptr [eax - 0x73]; 
0x00049002: psubsb mm7, mm7; dec dword ptr [ebx - 0x365b63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x0010e017: psubw mm7, mm7; add esp, 0x18; pop ebx; ret; 
0x00163cac: punpckhwd mm0, mm0; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000960d8: push -0x3f; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001300b2: push -0x67; out dx, eax; call dword ptr [eax - 0x73]; 
0x00098bac: push -0x69; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012a4dc: push -0x7d; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00096f84: push -0xa; ret 0x7520; 
0x00096f89: push -0xa; ret 0x7540; 
0x000c5839: push -1; call 0xc5850; add esp, 0x1c; ret; 
0x000c587f: push -1; call 0xc5890; add esp, 0x1c; ret; 
0x00146450: push -1; inc dword ptr [ecx + 0x48c2dc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00077367: push -1; push dword ptr [eax]; mov eax, ebx; call dword ptr [eax + 0xc]; 
0x0006fa0f: push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x00050141: push -1; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x00131540: push -1; push ebp; push esi; call edi; 
0x000b3039: push -6; call dword ptr [eax + 0x56]; 
0x0010c1c5: push -6; call dword ptr [eax - 0x75]; 
0x000ec1f9: push 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000f8711: push 0; add byte ptr [ebx - 0x3f7aef3c], al; jne 0xf86d8; add esp, 0xc; ret; 
0x00029a69: push 0; call 0x29a20; add esp, 0x1c; ret; 
0x0002b0f1: push 0; call 0x2b090; add esp, 0x2c; ret; 
0x00031a13: push 0; call 0x312c0; add esp, 0x1c; ret; 
0x0012c617: push 0; call 0x68c50; add esp, 0x18; pop ebx; ret; 
0x0009f806: push 0; call 0x9f820; add esp, 0x1c; ret; 
0x000c6915: push 0; call 0xc68c0; add esp, 0x1c; ret; 
0x000ff377: push 0; call 0xfff00; add esp, 0x1c; ret; 
0x0007d9ca: push 0; call dword ptr [eax]; 
0x0007c781: push 0; call dword ptr [ebp]; 
0x0010bae2: push 0; call edx; 
0x0009facd: push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0010c231: push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0007db33: push 0; mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x0006fe20: push 0; mov eax, esi; push ebx; push ecx; push dword ptr [esp + 0x1c]; call dword ptr [eax + 0x40]; 
0x000c6913: push 0; push 0; call 0xc68c0; add esp, 0x1c; ret; 
0x0009facb: push 0; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0001bd26: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x000f7f05: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0007041b: push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x000701e4: push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x0001bd28: push 0; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00079470: push 0; push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x00069398: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007705c: push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f06a: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00076a5f: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00075c90: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0010c32a: push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0010b989: push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0010bf79: push 0; push 0x1000004; call eax; 
0x0010bb4a: push 0; push 0x1000005; call edx; 
0x0010bc3a: push 0; push 0x1000006; call edx; 
0x0010bba2: push 0; push 0x1000007; call eax; 
0x0010827f: push 0; push 0x2000004; call eax; 
0x00028d18: push 0; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00075b82: push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00040fc0: push 0; push dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00033e75: push 0; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000c5833: push 0; push dword ptr [esp + 0x18]; push -1; call 0xc5850; add esp, 0x1c; ret; 
0x0012ec41: push 0; push dword ptr [esp + 0x1c]; call 0x12eac0; add esp, 0x10; add esp, 0xc; ret; 
0x00034048: push 0; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x0013cfa3: push 0; push dword ptr [esp + 0x1c]; call 0x33d70; add esp, 0x1c; ret; 
0x00032125: push 0; push dword ptr [esp + 0x1c]; call 0x35e60; add esp, 0x1c; ret; 
0x00041753: push 0; push dword ptr [esp + 0x1c]; call 0x410f0; add esp, 0x1c; ret; 
0x000f7f07: push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x000725e7: push 0; push dword ptr [esp + 0x1c]; call 0x6bd40; add esp, 0x1c; ret; 
0x0010ec3d: push 0; push dword ptr [esp + 0x1c]; call 0x9dc80; add esp, 0x18; pop ebx; ret; 
0x000ff41f: push 0; push dword ptr [esp + 0x1c]; call 0xff430; add esp, 0x18; pop ebx; ret; 
0x0007041d: push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x000701e6: push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00031d63: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x31ca0; add esp, 0x1c; ret; 
0x00037a16: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x38270; add esp, 0x1c; ret; 
0x0003d837: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x00037ad6: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e100; add esp, 0x1c; ret; 
0x0006c4c3: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x000a4a17: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa25b0; add esp, 0x1c; ret; 
0x000a0806: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x0006af57: push 0; push dword ptr [esp + 0x28]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00029a2b: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x000a0475: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000eabf9: push 0; push dword ptr [esp + 0x30]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ad445: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000432df: push 0; push dword ptr [esp + 0x44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000f5082: push 0; push eax; call 0xf4e80; add esp, 0x1c; ret; 
0x0001bd2a: push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00079472: push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x0006939a: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007637c: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x001260fc: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0007705e: push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f06c: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00076a61: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000fbfad: push 0; push ebx; call esi; 
0x000ad2cb: push 0; push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00075a4e: push 0; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0012498c: push 0; push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0007131a: push 0; push ecx; push eax; push ebx; push edx; call esi; 
0x00130716: push 0; push edi; call dword ptr [eax + 0x14]; 
0x00068fcb: push 0; push edi; call dword ptr [ebx + 8]; 
0x0012bda9: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0012250b: push 0; push edi; push ebx; call edx; 
0x0006ba84: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00051e67: push 0; push edx; mov eax, dword ptr [eax + 0x1a70]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012e81b: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x000700a0: push 0; push edx; push eax; mov esi, dword ptr [esp + 0x1c]; push esi; call dword ptr [ebx + 0x40]; 
0x0013e920: push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0012403d: push 0; push esi; call dword ptr [eax + 0x14]; 
0x000728e9: push 0; push esi; call dword ptr [ebp + 8]; 
0x00075c92: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0013d726: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x0006274e: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c62: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006aea6: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9b8: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b362: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d33: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x3c]; push edx; call eax; 
0x00065a79: push 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xcc]; push edx; call eax; 
0x0010c32c: push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0010c23a: push 0x1000002; call edx; 
0x0010b98b: push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0010bf7b: push 0x1000004; call eax; 
0x0010bb4c: push 0x1000005; call edx; 
0x0010bc3c: push 0x1000006; call edx; 
0x0010bba4: push 0x1000007; call eax; 
0x000e4cee: push 0x100; push edx; push eax; call ebx; 
0x000f86af: push 0x1018; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x0006acfb: push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0006d11b: push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x000c9e57: push 0x1fffffb; ret; 
0x0010816a: push 0x2000001; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x00108c28: push 0x2000003; call dword ptr [ebp + 0x14]; 
0x00108281: push 0x2000004; call eax; 
0x0010a0d4: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x001089da: push 0x2000006; call dword ptr [esi + 0x14]; 
0x00125a47: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0009bf4a: push 0x20c68310; add eax, 0x20; call 0x13cef9; add ecx, 0xe643d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098c4a: push 0x20c68310; add eax, 0x20; call 0x13cef9; add ecx, 0xe96bd; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00130f43: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x130c80; add esp, 0x1c; ret; 
0x00130f48: push 0x2260; push dword ptr [esp + 0x1c]; call 0x130c80; add esp, 0x1c; ret; 
0x000ede57: push 0x241; push dword ptr [esp + 0x1c]; call 0xecd40; add esp, 0x1c; ret; 
0x000b3450: push 0x246c8d51; insb byte ptr es:[edi], dx; push ebp; call eax; 
0x00138fff: push 0x28; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0010d5d1: push 0x2cc5838d; cli; call dword ptr [eax - 0x73]; 
0x0014fb5a: push 0x3000405; sbb al, 0x8b; jmp ebx; 
0x0014d71a: push 0x3000425; sbb al, 0x8b; jmp ebx; 
0x0014cc1a: push 0x3000430; sbb al, 0x8b; jmp ebx; 
0x0014ae9a: push 0x300044b; sbb al, 0x8b; jmp ebx; 
0x0014991a: push 0x300045e; sbb al, 0x8b; jmp ebx; 
0x000f27a4: push 0x34e85501; mov ebp, 0xc483fffa; or al, 0x89; ret 0x408d; 
0x0007b517: push 0x3c890006; and al, 0x89; ret; 
0x0011759f: push 0x400; call 0x190d8; mov dword ptr [ebx + 0xf40], eax; add esp, 0x18; pop ebx; ret; 
0x00117260: push 0x400; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x00113ab8: push 0x400; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x00083097: push 0x44; cli; call dword ptr [eax + 0x56]; 
0x000e96cd: push 0x4b; cli; call dword ptr [eax - 0x18]; 
0x000f6047: push 0x540a; push dword ptr [esp + 0x1c]; call 0xf6810; add esp, 0x1c; ret; 
0x00157c92: push 0x57; hlt; call dword ptr [ebx - 0x18]; 
0x000ecd87: push 0x5b10c483; pop esi; pop edi; ret; 
0x0012ce64: push 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x00138bf2: push 0x60; std; jmp dword ptr [esi - 0x70]; 
0x0001f0d5: push 0x642474ff; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000221da: push 0x682474ff; call esi; 
0x000f7f25: push 0x8000; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x00093435: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x0013be81: push 0x81000010; ret 0x817b; 
0x0011fe79: push 0x810001d0; ret; 
0x0011cb81: push 0x81000203; ret 0x747b; 
0x00107d81: push 0x81000351; ret 0xc27b; 
0x000f6381: push 0x8100046b; ret 0xdc7b; 
0x000f1679: push 0x810004b8; ret; 
0x000cca79: push 0x81000704; ret; 
0x0009f081: push 0x810009de; ret 0x4f7b; 
0x0009608d: push 0x81000a6e; shr dword ptr [edi + 0x3000ec1], 0xc; cdq; jmp ecx; 
0x0008ae81: push 0x81000b20; ret 0x917b; 
0x00074e81: push 0x81000c80; ret 0xf17b; 
0x00042d79: push 0x81000fa1; ret; 
0x0001b881: push 0x81001216; ret 0x877b; 
0x00146279: push 0x81ffff6c; ret; 
0x00068fc4: push 0x83000001; in al, dx; or byte ptr [edx], ch; push edi; call dword ptr [ebx + 8]; 
0x000840e4: push 0x8300019a; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0007eb0b: push 0x8331c783; ret; 
0x000bf949: push 0x83b77d1c; ret 0x8301; 
0x0011f4b4: push 0x83fffa71; les ecx, ptr [edi + ecx]; mov bh, 0xc0; ret; 
0x0006314b: push 0x83fffff7; ret; 
0x000c9e83: push 0x83fffffb; ret 0x831b; 
0x0006ae54: push 0x89000001; ret 0x808b; 
0x000ba934: push 0x89000014; ret; 
0x00120996: push 0x8b000001; dec esp; ret 0x8904; 
0x0007d393: push 0x8b000002; jl 0x7d3be; adc byte ptr [ebp - 0x5762779], cl; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x0004170a: push 0x8dffffff; sub ah, 0x73; cli; call dword ptr [eax + 0x68]; 
0x00032123: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x35e60; add esp, 0x1c; ret; 
0x000e45e7: push 0xa; push dword ptr [ebp - 0x17c]; call esi; 
0x00071df1: push 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012b247: push 0xb8ffffff; lock add byte ptr [eax], al; add byte ptr [ebp + 0x34009b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f44a2: push 0xc483fff8; adc byte ptr [ecx + 0x14c483d8], cl; pop ebx; pop esi; ret; 
0x00030b00: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0010d597: push 0xd; add byte ptr [ebx - 0x7f72e714], al; xor ebx, dword ptr [ecx - 6]; call dword ptr [eax - 0x18]; 
0x0012e1a9: push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00144585: push 0xe8fffffb; ret 0xf881; 
0x00046464: push 0xf; add byte ptr [ecx + 0x19db99c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000f0ea2: push 0xffffff; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x972; 
0x0013eee1: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0007967f: push 1; call 0x78f20; add esp, 0x18; pop ebx; ret; 
0x0001b029: push 1; call 0xed140; add esp, 0x1c; ret; 
0x00067283: push 1; jmp ebx; 
0x00065e8b: push 1; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x00070419: push 1; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x0007705a: push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f16e: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00075db5: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000725e5: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x6bd40; add esp, 0x1c; ret; 
0x0011f5e3: push 1; push dword ptr [esp + 0x1c]; call 0x11f4c0; add esp, 0x1c; ret; 
0x00069a63: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x000ef974: push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00030ac0: push 1; push dword ptr [esp + 8]; call 0x30a40; pop ecx; pop edx; ret; 
0x0011f438: push 1; push eax; call 0x11e7f0; add esp, 0x18; pop ebx; ret; 
0x001247af: push 1; push ebx; call dword ptr [eax]; 
0x000fbfc1: push 1; push ebx; call esi; 
0x00070cd6: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0013f572: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00068239: push 1; push esi; call eax; 
0x00068752: push 1; push esi; call edx; 
0x00028d1a: push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00138b7f: push 2; call 0x138b40; add esp, 0x18; pop ebx; ret; 
0x000701e2: push 2; push 0; push 0; push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00069396: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0013f068: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00076a5d: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00075c8e: push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000e43da: push 2; push dword ptr [ebp - 0x17c]; call esi; 
0x001154b3: push 2; push dword ptr [esp + 0x1c]; call 0x1147b0; add esp, 0x1c; ret; 
0x000efcb5: push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x001248d8: push 2; push ebx; call dword ptr [eax]; 
0x000fbfd4: push 2; push ebx; call esi; 
0x00075ede: push 3; call 0xec3d0; add esp, 0x1c; ret; 
0x00077058: push 3; push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0013f16c: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0013f066: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000fbfe4: push 3; push ebx; call edx; 
0x0012ef92: push 3; push edi; call dword ptr [eax]; 
0x00148c94: push 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012e81e: push 4; push ebx; call dword ptr [eax]; 
0x0012e0d9: push 4; push edx; call dword ptr [eax + 0x14]; 
0x0012498f: push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00029a63: push 5; push dword ptr [esp + 0x18]; push 0; call 0x29a20; add esp, 0x1c; ret; 
0x00029a43: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x29a20; add esp, 0x1c; ret; 
0x000efc44: push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00124ec0: push 5; push ebx; call dword ptr [eax]; 
0x0012e0ec: push 6; push eax; call dword ptr [edx + 0x14]; 
0x0012b473: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00125aee: push 8; push edi; call dword ptr [eax + 0x18]; 
0x0005897b: push cs; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x00026ddd: push cs; add byte ptr [ebp - 0x590ff79], cl; call dword ptr [eax - 0x73]; 
0x000f67f8: push cs; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f7569: push cs; add byte ptr [ebx - 0x10b7e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0xf7579; ret; 
0x00027ec8: push cs; add byte ptr [ebx - 0x1bf73], cl; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x000f6719: push cs; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000232a1: push cs; add byte ptr [ebx - 0x72b7db84], cl; xchg esp, ebp; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x00023b45: push cs; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax + 0x68]; 
0x0001fa78: push cs; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x00021197: push cs; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x000f82e2: push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00094890: push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949b7: push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009d89b: push cs; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x000ff400: push cs; add byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e948: push cs; add esp, 0x18; pop ebx; ret; 
0x0012e851: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0010e8e6: push cs; add esp, 0x2c; ret; 
0x0013d041: push cs; add esp, 8; pop ebx; ret; 
0x00069ae9: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0010c4f6: push cs; and eax, 1; pop ebx; ret; 
0x0009d590: push cs; call ecx; 
0x00093ea7: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b242c: push cs; cmp dword ptr [edi], ecx; jne 0xb2580; pop edi; pop esi; ret; 
0x000fdd89: push cs; cmp ecx, edx; jne 0xfdd80; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000c19b5: push cs; inc edi; cli; call dword ptr [eax + 0x53]; 
0x000c2a65: push cs; inc edi; cli; call dword ptr [eax - 0x18]; 
0x001619a2: push cs; jb 0x1619c0; lea eax, [edi + 0xd]; pop edi; ret; 
0x001629c2: push cs; jb 0x1629e0; lea eax, [eax + 0xd]; pop edi; ret; 
0x00162062: push cs; jl 0x162080; lea eax, [ecx + 0xe]; ret; 
0x0002f5d1: push cs; jne 0x2f5e0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0008ec79: push cs; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0a9: push cs; jne 0x8ee51; pop ebx; ret; 
0x0009357a: push cs; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000962fa: push cs; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x000968b1: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000969c1: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x0008ec76: push cs; lea ecx, [edx + 0xe]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0a6: push cs; lea ecx, [edx + 0xe]; jne 0x8ee51; pop ebx; ret; 
0x00074929: push cs; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0006c8f1: push cs; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00098cb1: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012577e: push cs; mov byte ptr [eax], 0; add esp, 0x1c; ret; 
0x001306d6: push cs; mov ch, dh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00107991: push cs; mov eax, 1; ret; 
0x00125dc1: push cs; mov eax, 2; pop ebx; pop esi; ret; 
0x0009c324: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00162851: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00098ea1: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013f181: push cs; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00098c92: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098f98: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098e98: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011b3a9: push cs; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0015d361: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00076489: push cs; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0009c073: push cs; or al, byte ptr [eax]; add ecx, 0xe639e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c04e: push cs; or al, byte ptr [eax]; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c02e: push cs; or al, byte ptr [eax]; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c011: push cs; or al, byte ptr [eax]; add ecx, 0xe6400; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007a3e0: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000fbc91: push cs; pop ebx; pop esi; pop edi; ret; 
0x0014f570: push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001531da: push cs; pop edi; call 0x13cee5; add ebx, 0x3d25f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014de8a: push cs; pop edi; call 0x13cee5; add ebx, 0x41def; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014bd9a: push cs; pop edi; call 0x13cee5; add ebx, 0x43c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149d9a: push cs; pop edi; call 0x13cee5; add ebx, 0x459df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000951d1: push cs; pop edi; pop esi; pop ebx; ret; 
0x000911f4: push cs; pop edi; ret; 
0x0012122b: push cs; pushal; cli; call dword ptr [eax + 0x57]; 
0x0004d22d: push cs; ret 0xfffc; 
0x00091354: push cs; ret; 
0x0006b081: push cs; sub dword ptr [edx + 0x1928], 1; pop ebx; pop esi; ret; 
0x00074831: push cs; sub dword ptr [edx + 0x193c], 1; pop ebx; pop esi; ret; 
0x0015d160: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0015ce6c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000935a4: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0x932a1; pop ebx; ret; 
0x00083541: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000351cd: push cs; xor eax, eax; pop ebx; pop esi; ret; 
0x000264aa: push ds; aas; xchg esp, eax; clc; call dword ptr [ebp + 3]; 
0x0001b062: push ds; adc al, byte ptr [eax]; add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x0001b042: push ds; adc al, byte ptr [eax]; add eax, 0x1c8fbb; lea eax, [eax - 0x59434]; ret; 
0x0014ddfb: push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007bddb: push ds; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0011da3c: push ds; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f1ef8], al; ret 0x4589; 
0x000a0724: push ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000845ac: push ds; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000845a6: push ds; add byte ptr [eax], al; mov dword ptr [ebx + 0x1e64], eax; add esp, 8; pop ebx; ret; 
0x00084760: push ds; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00123859: push ds; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00082a4f: push ds; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010cdb9: push ds; add byte ptr [eax], al; nop; nop; ret; 
0x0013f891: push ds; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00081d93: push ds; add byte ptr [eax], al; pop ebx; ret; 
0x0008458c: push ds; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007b753: push ds; add byte ptr [eax], al; ret; 
0x000845f3: push ds; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0010b79f: push ds; add dword ptr [ebx - 0xc363], ecx; dec dword ptr [ecx - 0xcb73]; call dword ptr [eax - 0x77]; 
0x000b6c3b: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x0001e29c: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2e], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x0001f53f: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x2e], cl; cli; call dword ptr [eax - 0x18]; 
0x0001e94d: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x2e], ecx; cli; call dword ptr [eax - 0x18]; 
0x0005f4f5: push ds; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7276fb14], al; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x000f64f5: push ds; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f9290: push ds; add esp, 0x24; pop ebx; pop esi; ret; 
0x00037b4f: push ds; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000f9113: push ds; bnd jmp dword ptr [esi - 0x70]; 
0x000c6daf: push ds; dec eax; cli; call dword ptr [eax + 0x68]; 
0x000514f3: push ds; dec esp; cli; call dword ptr [eax + 0x56]; 
0x00094f37: push ds; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000965da: push ds; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0008412e: push ds; lcall 0x5b10, 0xc4830001; pop esi; pop edi; ret; 
0x0005a3f4: push ds; loope 0x5a3f6; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x000ec751: push ds; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x0006cfd8: push ds; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000969c4: push ds; pop edi; pop esi; pop ebx; ret; 
0x00055331: push ds; sbb al, 0; add byte ptr [ebx - 0x5f763], cl; dec dword ptr [ebx - 0x5df73]; inc dword ptr [ecx]; ret; 
0x001149fe: push ds; sbb al, 0xfb; jmp dword ptr [esi - 0x3f]; 
0x00076fc6: push ds; sti; dec dword ptr [ebp - 0x583ff7b]; call dword ptr [eax - 0x73]; 
0x0013c23e: push ds; sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x000fc421: push ds; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x00123778: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0012ba94: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0012ba94: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00075edb: push dword ptr [eax + 0x38]; push 3; call 0xec3d0; add esp, 0x1c; ret; 
0x0016c317: push dword ptr [eax + 0x98]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00132dcd: push dword ptr [eax + 0xc]; call 0x71e30; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00025798: push dword ptr [eax + 0xfc0]; call 0xfc9f0; add esp, 0x1c; ret; 
0x000b32dd: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000e429a: push dword ptr [eax + 4]; push dword ptr [eax]; push dword ptr [ebp - 0x164]; push dword ptr [ebp - 0x17c]; call esi; 
0x000e45dc: push dword ptr [eax + 4]; push dword ptr [eax]; push dword ptr [ebp - 0x18c]; push 0xa; push dword ptr [ebp - 0x17c]; call esi; 
0x0002d175: push dword ptr [eax + ebp*2 - 0x7d]; in al, dx; or byte ptr [ebp - 0x58f3b45], cl; call dword ptr [edi + 0x56]; 
0x00134e84: push dword ptr [eax + ebx - 0x75]; jnp 0x8b4f72e2; inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x0013a972: push dword ptr [eax + ebx*2 - 0x77]; ret 0xe283; 
0x000696b5: push dword ptr [eax + ebx*2 - 0x77]; ret; 
0x0009f4f5: push dword ptr [eax + edi*2 - 0x77]; fdiv st(7); ret; 
0x0013cf9d: push dword ptr [eax - 0x1580]; push 0; push dword ptr [esp + 0x1c]; call 0x33d70; add esp, 0x1c; ret; 
0x0008b426: push dword ptr [eax]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0005022e: push dword ptr [eax]; call 0x51940; add esp, 0x1c; ret; 
0x0006d82e: push dword ptr [eax]; call 0x58160; add esp, 0x1c; ret; 
0x0004a7cd: push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0006d7cd: push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x0002ca1e: push dword ptr [eax]; call 0x9d3a0; add esp, 0x1c; ret; 
0x000b32e0: push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000ad858: push dword ptr [eax]; call esi; 
0x000fc4bd: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0002ca18: push dword ptr [eax]; mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x9d3a0; add esp, 0x1c; ret; 
0x00077369: push dword ptr [eax]; mov eax, ebx; call dword ptr [eax + 0xc]; 
0x000e429d: push dword ptr [eax]; push dword ptr [ebp - 0x164]; push dword ptr [ebp - 0x17c]; call esi; 
0x000e45df: push dword ptr [eax]; push dword ptr [ebp - 0x18c]; push 0xa; push dword ptr [ebp - 0x17c]; call esi; 
0x0010c4a8: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x10af20; add esp, 0x1c; ret; 
0x0004d2ac: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x4abe0; add esp, 0x1c; ret; 
0x00083ed4: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x87c00; add esp, 0x1c; ret; 
0x000aa464: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaa5e0; add esp, 0x1c; ret; 
0x000c5f03: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5d90; add esp, 0x1c; ret; 
0x000c6123: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc65e0; add esp, 0x1c; ret; 
0x00041942: push dword ptr [eax]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0006be26: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x000ecb75: push dword ptr [ebp + 0x20]; test ah, 1; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000c595f: push dword ptr [ebp + 0x26]; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012d542: push dword ptr [ebp + 0x50]; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x000ef97a: push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0006bc5f: push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0006be29: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0009fad4: push dword ptr [ebp + 8]; call ebx; 
0x0006b63d: push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x00069dfb: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000ea95d: push dword ptr [ebp + 9]; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012f400: push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x000e429f: push dword ptr [ebp - 0x164]; push dword ptr [ebp - 0x17c]; call esi; 
0x000e42a5: push dword ptr [ebp - 0x17c]; call esi; 
0x000e45e1: push dword ptr [ebp - 0x18c]; push 0xa; push dword ptr [ebp - 0x17c]; call esi; 
0x000e43d4: push dword ptr [ebp - 0x18c]; push 2; push dword ptr [ebp - 0x17c]; call esi; 
0x000e4294: push dword ptr [ebp - 0x18c]; push dword ptr [eax + 4]; push dword ptr [eax]; push dword ptr [ebp - 0x164]; push dword ptr [ebp - 0x17c]; call esi; 
0x000c8551: push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000c86a8: push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x194]; call dword ptr [eax + 0x10]; 
0x00069df8: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006cd8f: push dword ptr [ebp - 0x20]; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0016bbce: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x000fc4c2: push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x00078ecf: push dword ptr [ebp - 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0010a8ff: push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x0010a0d1: push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0006e57e: push dword ptr [ebp - 0x76]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0005a261: push dword ptr [ebp - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4ef6b]; call dword ptr [ecx + 0x50]; 
0x00053d90: push dword ptr [ebp - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x59f6b]; call dword ptr [ecx + 0x50]; 
0x0005f174: push dword ptr [ebp - 0x87c]; call dword ptr [ebx + 0x1c]; 
0x0005ea39: push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0005f865: push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0005f396: push dword ptr [ebp - 0x87c]; call eax; 
0x0004b324: push dword ptr [ebp - 0x88]; call eax; 
0x0005f16e: push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [ebx + 0x1c]; 
0x0005f85f: push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0006403f: push dword ptr [ebp - 0x89c]; call dword ptr [ebx + 0x1c]; 
0x000639e3: push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x0006422b: push dword ptr [ebp - 0x89c]; call eax; 
0x00064620: push dword ptr [ebp - 0x89c]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x00064039: push dword ptr [ebp - 0x8cc]; push dword ptr [ebp - 0x89c]; call dword ptr [ebx + 0x1c]; 
0x0006461a: push dword ptr [ebp - 0x8cc]; push dword ptr [ebp - 0x89c]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x00064224: push dword ptr [ebp - 0x8e8]; push edi; push dword ptr [ebp - 0x89c]; call eax; 
0x0010badc: push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0010c03c: push dword ptr [ebp - 0xbc]; push ebx; call eax; 
0x0010c18f: push dword ptr [ebp - 0xbc]; push edx; call eax; 
0x00032809: push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0010222a: push dword ptr [ebx + 0x1d4]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x000845f0: push dword ptr [ebx + 0x1ee4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001240e4: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0016c10f: push dword ptr [ebx + 0x2384]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00083451: push dword ptr [ebx + 0x24]; call eax; 
0x000835ac: push dword ptr [ebx + 0x24]; call edx; 
0x0010b598: push dword ptr [ebx + 0x30]; call eax; 
0x0012ca88: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00129f2d: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00034155: push dword ptr [ebx + 4]; call eax; 
0x0001bccb: push dword ptr [ebx + 4]; call esi; 
0x00019000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x000e43cf: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [ebp - 0x18c]; push 2; push dword ptr [ebp - 0x17c]; call esi; 
0x0013b0e4: push dword ptr [ebx + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00124cad: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0006e908: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0006e8b3: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00101c01: push dword ptr [ebx + ebx - 0x73]; adc al, 0x3f; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x000609ea: push dword ptr [ebx - 0x64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00114eba: push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x0006fa11: push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x00126eb2: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00126782: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000fc0b4: push dword ptr [ebx]; call esi; 
0x000fc425: push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x000e43d2: push dword ptr [ebx]; push dword ptr [ebp - 0x18c]; push 2; push dword ptr [ebp - 0x17c]; call esi; 
0x000ff3ee: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x000ef43a: push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000ffbe4: push dword ptr [ecx + ebx - 0x48]; jl 0xffbeb; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00133f69: push dword ptr [ecx + ebx - 0x75]; jnp 0x419edfc8; or byte ptr [ecx], bh; ret 0x2875; 
0x0005a442: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x00028695: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xeb6b], cl; call dword ptr [ecx + 0x50]; 
0x00069b44: push dword ptr [ecx + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0001ce84: push dword ptr [ecx + esi - 0x75]; or eax, dword ptr [ebp - 0x744c8a37]; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x00058450: push dword ptr [ecx - 0x64]; push edx; call eax; 
0x000821fb: push dword ptr [ecx]; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0007ebd5: push dword ptr [ecx]; jmp dword ptr [ebp - 0x39]; 
0x00053a30: push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x0010e4a1: push dword ptr [ecx]; jmp dword ptr [ebp - 0x7d]; 
0x0013a3b4: push dword ptr [ecx]; mov dword ptr [esp + 0x24], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a2a4: push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a278: push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0005f795: push dword ptr [ecx]; rol byte ptr [eax - 0x89b43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x000b3c00: push dword ptr [ecx]; rol byte ptr [ebx - 0x1f7cef3c], cl; add eax, dword ptr [ebx - 0x6bf0fe08]; ret 0x2be9; 
0x00048cab: push dword ptr [ecx]; shr byte ptr [ecx], cl; ret 0xcb19; 
0x00027e98: push dword ptr [ecx]; shr cl, 0x2d; idiv bh; dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x0005b798: push dword ptr [ecx]; shr cl, 0x5a; in eax, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000b414d: push dword ptr [edi + 0x10]; pop ebx; ret; 
0x000f587a: push dword ptr [edi + 0x13]; add esp, 4; pop ebx; pop esi; ret; 
0x000f5939: push dword ptr [edi + 0x14]; add esp, 4; pop ebx; pop esi; ret; 
0x000f5817: push dword ptr [edi + 0x16]; add esp, 4; pop ebx; pop esi; ret; 
0x000ffbf7: push dword ptr [edi + 0x16]; pop ebx; pop esi; ret; 
0x000f58d6: push dword ptr [edi + 0x17]; add esp, 4; pop ebx; pop esi; ret; 
0x000ec70d: push dword ptr [edi + 0x18]; pop ebx; ret; 
0x000ec762: push dword ptr [edi + 0x1b]; pop ebx; pop esi; ret; 
0x000f92e1: push dword ptr [edi + 0x1c]; pop ebx; ret; 
0x000ecb8d: push dword ptr [edi + 0x28]; pop ebx; ret; 
0x000edc95: push dword ptr [edi + 0x38]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000c5ad1: push dword ptr [edi + 0x3c]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000311ca: push dword ptr [edi + 0x43]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000edde9: push dword ptr [edi + 0x44]; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000f5fcf: push dword ptr [edi + 0x4e]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003529d: push dword ptr [edi + 0x50]; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ecfc4: push dword ptr [edi + 0x61]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ecea1: push dword ptr [edi + 0x64]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ecd85: push dword ptr [edi + 0x68]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ecc62: push dword ptr [edi + 0x6b]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000fad38: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ff5c3: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x00101852: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x00050f82: push dword ptr [edi + 0xb]; pop ebx; pop esi; ret; 
0x000ec09b: push dword ptr [edi + 2]; pop ebx; ret; 
0x0003118a: push dword ptr [edi + 3]; pop ebx; ret; 
0x00050f49: push dword ptr [edi + 4]; pop ebx; ret; 
0x000f59b7: push dword ptr [edi + 6]; pop ebx; pop esi; pop edi; ret; 
0x000b4307: push dword ptr [edi + 6]; pop ebx; ret; 
0x0010da06: push dword ptr [edi + 7]; add esp, 8; pop ebx; ret; 
0x00101686: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x000f630e: push dword ptr [edi + 7]; pop ebx; pop esi; ret; 
0x000ec8de: push dword ptr [edi + 7]; pop ebx; ret; 
0x000b4035: push dword ptr [edi + 8]; pop ebx; ret; 
0x000ffd3c: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001015a4: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; ret; 
0x0005babc: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x00055e6d: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x00053ac6: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x0006279a: push dword ptr [edi - 0x64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067caa: push dword ptr [edi - 0x64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x24]; push edx; call eax; 
0x00065c3a: push dword ptr [edi - 0x64]; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xcc]; push edx; call eax; 
0x0009f603: push dword ptr [edi]; call ebx; 
0x0009f564: push dword ptr [edi]; call esi; 
0x0013b0e2: push dword ptr [edi]; push dword ptr [ebx + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003387e: push dword ptr [edi]; push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00033840: push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00069b37: push dword ptr [edx + 0x98]; call eax; 
0x0013d0c7: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x000c1108: push dword ptr [edx + eax*2 - 0x77]; ret 0xe283; 
0x00124d66: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x000bef42: push dword ptr [esi + 0x1a]; cmp eax, -0x26; jne 0xbefa0; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00069ad9: push dword ptr [esi + 0x98]; call eax; 
0x000ef43e: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0012629b: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00126258: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00025c7c: push dword ptr [esi + 4]; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009f74a: push dword ptr [esi + 8]; call ebx; 
0x0013f17f: push dword ptr [esi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000580ea: push dword ptr [esi - 0x2e]; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x00051c80: push dword ptr [esi - 0x64]; push edx; call eax; 
0x000692a4: push dword ptr [esi - 0x77]; ret 0xe283; 
0x001269c2: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0003280c: push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a3b2: push dword ptr [esi]; push dword ptr [ecx]; mov dword ptr [esp + 0x24], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a2a2: push dword ptr [esi]; push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a305: push dword ptr [esi]; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00081107: push dword ptr [esp + 0x10]; call eax; 
0x0006ffa6: push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x1c]; push edi; call dword ptr [ebx + 0x40]; 
0x00032805: push dword ptr [esp + 0x10]; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001270fb: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; call eax; 
0x0006ffa2: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; mov edi, dword ptr [esp + 0x1c]; push edi; call dword ptr [ebx + 0x40]; 
0x001270f7: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; call eax; 
0x0013e7e0: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00075b84: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x000327a3: push dword ptr [esp + 0x10]; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001240ea: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0013e7e4: push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00075b88: push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00083553: push dword ptr [esp + 0x14]; call eax; 
0x0013b3e7: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0006af15: push dword ptr [esp + 0x14]; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00124437: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0005de44: push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00080c4f: push dword ptr [esp + 0x14]; push ebp; call eax; 
0x0012faa6: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00123fd6: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x00040fc2: push dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001394b7: push dword ptr [esp + 0x18]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x00139471: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x10c]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x00050224: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x2c]; push dword ptr [eax]; call 0x51940; add esp, 0x1c; ret; 
0x0006d824: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x2c]; push dword ptr [eax]; call 0x58160; add esp, 0x1c; ret; 
0x0004a7c3: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x74]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0006d7c3: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x74]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x00108406: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x00033e77: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000c5835: push dword ptr [esp + 0x18]; push -1; call 0xc5850; add esp, 0x1c; ret; 
0x000c587b: push dword ptr [esp + 0x18]; push -1; call 0xc5890; add esp, 0x1c; ret; 
0x00029a65: push dword ptr [esp + 0x18]; push 0; call 0x29a20; add esp, 0x1c; ret; 
0x0009f802: push dword ptr [esp + 0x18]; push 0; call 0x9f820; add esp, 0x1c; ret; 
0x000ff373: push dword ptr [esp + 0x18]; push 0; call 0xfff00; add esp, 0x1c; ret; 
0x00034044: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x000f7f75: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x000ede53: push dword ptr [esp + 0x18]; push 0x241; push dword ptr [esp + 0x1c]; call 0xecd40; add esp, 0x1c; ret; 
0x001394b3: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x0013946d: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x10c]; call dword ptr [eax + 0x26c]; add esp, 0x1c; ret; 
0x00034fa7: push dword ptr [esp + 0x18]; push eax; push eax; call 0x34fc0; add esp, 0x1c; ret; 
0x00117265: push dword ptr [esp + 0x18]; push ebp; call edi; 
0x00060612: push dword ptr [esp + 0x18]; push esi; call dword ptr [ebx + 0x1c]; 
0x0010164d: push dword ptr [esp + 0x1c]; call 0x101770; add esp, 0x1c; ret; 
0x0010c4aa: push dword ptr [esp + 0x1c]; call 0x10af20; add esp, 0x1c; ret; 
0x0010b0ca: push dword ptr [esp + 0x1c]; call 0x10afc0; add esp, 0x18; pop ebx; ret; 
0x001138d4: push dword ptr [esp + 0x1c]; call 0x1138f0; add esp, 0x1c; ret; 
0x00113d74: push dword ptr [esp + 0x1c]; call 0x113d90; add esp, 0x1c; ret; 
0x001154b5: push dword ptr [esp + 0x1c]; call 0x1147b0; add esp, 0x1c; ret; 
0x0011f5e5: push dword ptr [esp + 0x1c]; call 0x11f4c0; add esp, 0x1c; ret; 
0x0012ec5e: push dword ptr [esp + 0x1c]; call 0x12e9c0; add esp, 0x10; add esp, 0xc; ret; 
0x0012ec43: push dword ptr [esp + 0x1c]; call 0x12eac0; add esp, 0x10; add esp, 0xc; ret; 
0x00130f4d: push dword ptr [esp + 0x1c]; call 0x130c80; add esp, 0x1c; ret; 
0x00125779: push dword ptr [esp + 0x1c]; call 0x131d90; add esp, 0x1c; ret; 
0x00131f71: push dword ptr [esp + 0x1c]; call 0x131db0; add esp, 0x1c; ret; 
0x0013dc3f: push dword ptr [esp + 0x1c]; call 0x13d3a0; add esp, 0x18; pop ebx; ret; 
0x0008364d: push dword ptr [esp + 0x1c]; call 0x19020; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000254bc: push dword ptr [esp + 0x1c]; call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000eb4ff: push dword ptr [esp + 0x1c]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00028126: push dword ptr [esp + 0x1c]; call 0x28140; add esp, 0x1c; ret; 
0x00029a49: push dword ptr [esp + 0x1c]; call 0x29a20; add esp, 0x1c; ret; 
0x00031d69: push dword ptr [esp + 0x1c]; call 0x31ca0; add esp, 0x1c; ret; 
0x00033d8c: push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x0013cfa5: push dword ptr [esp + 0x1c]; call 0x33d70; add esp, 0x1c; ret; 
0x00034f24: push dword ptr [esp + 0x1c]; call 0x35110; add esp, 0x1c; ret; 
0x00034f55: push dword ptr [esp + 0x1c]; call 0x35140; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00034f84: push dword ptr [esp + 0x1c]; call 0x35190; add esp, 0x1c; ret; 
0x00032127: push dword ptr [esp + 0x1c]; call 0x35e60; add esp, 0x1c; ret; 
0x0004376d: push dword ptr [esp + 0x1c]; call 0x35ef0; add esp, 0x1c; ret; 
0x00032167: push dword ptr [esp + 0x1c]; call 0x35f20; add esp, 0x1c; ret; 
0x0004378d: push dword ptr [esp + 0x1c]; call 0x35f50; add esp, 0x1c; ret; 
0x000379ee: push dword ptr [esp + 0x1c]; call 0x38270; add esp, 0x1c; ret; 
0x00037a4e: push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x00037aae: push dword ptr [esp + 0x1c]; call 0x3e100; add esp, 0x1c; ret; 
0x00041755: push dword ptr [esp + 0x1c]; call 0x410f0; add esp, 0x1c; ret; 
0x0004d2ae: push dword ptr [esp + 0x1c]; call 0x4abe0; add esp, 0x1c; ret; 
0x000501ff: push dword ptr [esp + 0x1c]; call 0x501b0; add esp, 0x1c; ret; 
0x0006d84f: push dword ptr [esp + 0x1c]; call 0x501d0; add esp, 0x1c; ret; 
0x000f7fcb: push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x10; add esp, 0xc; ret; 
0x000f7f09: push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x000501bd: push dword ptr [esp + 0x1c]; call 0x51940; add esp, 0x1c; ret; 
0x000501dd: push dword ptr [esp + 0x1c]; call 0x58160; add esp, 0x1c; ret; 
0x0004a79d: push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x0005019d: push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x00068c5e: push dword ptr [esp + 0x1c]; call 0x68b50; add esp, 0x1c; ret; 
0x0007236f: push dword ptr [esp + 0x1c]; call 0x68f00; add esp, 0x18; pop ebx; ret; 
0x00069a69: push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x000725cc: push dword ptr [esp + 0x1c]; call 0x6bbc0; add esp, 0x1c; ret; 
0x000725e9: push dword ptr [esp + 0x1c]; call 0x6bd40; add esp, 0x1c; ret; 
0x0005015e: push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x0005017e: push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x00072e0d: push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x0007a396: push dword ptr [esp + 0x1c]; call 0x7a2f0; add esp, 0x18; pop ebx; ret; 
0x00084fc8: push dword ptr [esp + 0x1c]; call 0x84fe0; add esp, 0x1c; ret; 
0x0008b243: push dword ptr [esp + 0x1c]; call 0x86cb0; add esp, 0x18; pop ebx; ret; 
0x00083eda: push dword ptr [esp + 0x1c]; call 0x87c00; add esp, 0x1c; ret; 
0x0008506e: push dword ptr [esp + 0x1c]; call 0x88b50; add esp, 0x1c; ret; 
0x0010cffd: push dword ptr [esp + 0x1c]; call 0x9db50; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009f34b: push dword ptr [esp + 0x1c]; call 0x9db50; add esp, 0x18; pop ebx; ret; 
0x0009f4ab: push dword ptr [esp + 0x1c]; call 0x9dc40; add esp, 0x18; pop ebx; ret; 
0x0010ec3f: push dword ptr [esp + 0x1c]; call 0x9dc80; add esp, 0x18; pop ebx; ret; 
0x0010e011: push dword ptr [esp + 0x1c]; call 0x9efe0; add esp, 0x18; pop ebx; ret; 
0x000b2972: push dword ptr [esp + 0x1c]; call 0x9f330; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010e221: push dword ptr [esp + 0x1c]; call 0x9f420; add esp, 0x18; pop ebx; ret; 
0x000437ad: push dword ptr [esp + 0x1c]; call 0xa0640; add esp, 0x1c; ret; 
0x000437cd: push dword ptr [esp + 0x1c]; call 0xa06a0; add esp, 0x1c; ret; 
0x000a071e: push dword ptr [esp + 0x1c]; call 0xa25b0; add esp, 0x1c; ret; 
0x000a76dd: push dword ptr [esp + 0x1c]; call 0xa5280; add esp, 0x1c; ret; 
0x000a07de: push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x000aa46a: push dword ptr [esp + 0x1c]; call 0xaa5e0; add esp, 0x1c; ret; 
0x000aa49e: push dword ptr [esp + 0x1c]; call 0xab1b0; add esp, 0x1c; ret; 
0x000b3ee5: push dword ptr [esp + 0x1c]; call 0xb3670; add esp, 0x18; pop ebx; ret; 
0x000c585d: push dword ptr [esp + 0x1c]; call 0xc5890; add esp, 0x1c; ret; 
0x000c5f09: push dword ptr [esp + 0x1c]; call 0xc5d90; add esp, 0x1c; ret; 
0x000c6129: push dword ptr [esp + 0x1c]; call 0xc65e0; add esp, 0x1c; ret; 
0x000ede5c: push dword ptr [esp + 0x1c]; call 0xecd40; add esp, 0x1c; ret; 
0x000ed8db: push dword ptr [esp + 0x1c]; call 0xed8f0; add esp, 0x1c; ret; 
0x000f5f8d: push dword ptr [esp + 0x1c]; call 0xf6810; add esp, 0x1c; ret; 
0x000f86e2: push dword ptr [esp + 0x1c]; call 0xf9030; add esp, 0x10; add esp, 0xc; ret; 
0x000fa8be: push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x000fbc54: push dword ptr [esp + 0x1c]; call 0xfbc70; add esp, 0x1c; ret; 
0x000fccb5: push dword ptr [esp + 0x1c]; call 0xfcb30; add esp, 0x18; pop ebx; ret; 
0x000fcc85: push dword ptr [esp + 0x1c]; call 0xfcbb0; add esp, 0x18; pop ebx; ret; 
0x000ff421: push dword ptr [esp + 0x1c]; call 0xff430; add esp, 0x18; pop ebx; ret; 
0x0006fe26: push dword ptr [esp + 0x1c]; call dword ptr [eax + 0x40]; 
0x0007041f: push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x40]; 
0x0006fccf: push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x000701e8: push dword ptr [esp + 0x1c]; call dword ptr [edi + 0x40]; 
0x00070101: push dword ptr [esp + 0x1c]; call ecx; 
0x000322fd: push dword ptr [esp + 0x1c]; call edi; 
0x00138ffb: push dword ptr [esp + 0x1c]; push 0x28; push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0010d317: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e307: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x00069ad5: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0010b0c6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10afc0; add esp, 0x18; pop ebx; ret; 
0x00029a45: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x29a20; add esp, 0x1c; ret; 
0x00031d65: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x31ca0; add esp, 0x1c; ret; 
0x00033d88: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x00043769: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x35ef0; add esp, 0x1c; ret; 
0x00043789: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x35f50; add esp, 0x1c; ret; 
0x00037a18: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x38270; add esp, 0x1c; ret; 
0x00037a4a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x00037ad8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e100; add esp, 0x1c; ret; 
0x000501fb: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x501b0; add esp, 0x1c; ret; 
0x0006d84b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x501d0; add esp, 0x1c; ret; 
0x000ad59a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x58160; add esp, 0x1c; ret; 
0x0004a799: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x00050199: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x00068c5a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x68b50; add esp, 0x1c; ret; 
0x00069a65: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x69970; add esp, 0x1c; ret; 
0x000725c8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6bbc0; add esp, 0x1c; ret; 
0x0005015a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x00072969: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x00072e09: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x0007a392: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7a2f0; add esp, 0x18; pop ebx; ret; 
0x00084fc4: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x84fe0; add esp, 0x1c; ret; 
0x0008b23f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x86cb0; add esp, 0x18; pop ebx; ret; 
0x00083ed6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x87c00; add esp, 0x1c; ret; 
0x0009f347: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9db50; add esp, 0x18; pop ebx; ret; 
0x0009f4a7: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9dc40; add esp, 0x18; pop ebx; ret; 
0x0010e00d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9efe0; add esp, 0x18; pop ebx; ret; 
0x0010e21d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9f420; add esp, 0x18; pop ebx; ret; 
0x000437c9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa06a0; add esp, 0x1c; ret; 
0x000a4a19: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa25b0; add esp, 0x1c; ret; 
0x000a76d9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa5280; add esp, 0x1c; ret; 
0x000a07da: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x000aa466: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaa5e0; add esp, 0x1c; ret; 
0x000aa49a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xab1b0; add esp, 0x1c; ret; 
0x000c5f05: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5d90; add esp, 0x1c; ret; 
0x000c6125: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc65e0; add esp, 0x1c; ret; 
0x000fa8ba: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x000fccb1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfcb30; add esp, 0x18; pop ebx; ret; 
0x000fcc81: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfcbb0; add esp, 0x18; pop ebx; ret; 
0x0010d382: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e372: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x00033d84: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x00043765: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x35ef0; add esp, 0x1c; ret; 
0x00043785: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x35f50; add esp, 0x1c; ret; 
0x00037a46: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x0004a795: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x00050195: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x000727b5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x00072965: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x00072e05: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x000437c5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa06a0; add esp, 0x1c; ret; 
0x000a07d6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x000aa496: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xab1b0; add esp, 0x1c; ret; 
0x000fa8d5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x0012fcc6: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0012669e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0012664e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00082294: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x001221b4: push dword ptr [esp + 0x1c]; push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00082135: push dword ptr [esp + 0x1c]; push edx; call eax; 
0x00124005: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0001b1b0: push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013cc47: push dword ptr [esp + 0x20]; call 0x13ca90; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cc93: push dword ptr [esp + 0x20]; call 0x13caf0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cc2a: push dword ptr [esp + 0x20]; call 0x13cb00; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000f868f: push dword ptr [esp + 0x20]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0010827b: push dword ptr [esp + 0x20]; push 0; push 0x2000004; call eax; 
0x0010d346: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e336: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x0010e986: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x0010e9e6: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x0010ea46: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x000fa906: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x0013d0c2: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001254b7: push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00107d45: push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00108165: push dword ptr [esp + 0x20]; push edx; push 0x2000001; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x0012e2b8: push dword ptr [esp + 0x20]; push esi; push eax; call dword ptr [edx]; 
0x001221ba: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00125564: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0013a0ef: push dword ptr [esp + 0x24]; mov ecx, dword ptr [esp + 0x24]; call ecx; 
0x0006588b: push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000807eb: push dword ptr [esp + 0x24]; push ebx; call eax; 
0x0008027b: push dword ptr [esp + 0x24]; push esi; call eax; 
0x00113ac5: push dword ptr [esp + 0x28]; call eax; 
0x0005013d: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x0002b0ed: push dword ptr [esp + 0x28]; push 0; call 0x2b090; add esp, 0x2c; ret; 
0x0012ed03: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x0012ecff: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x0012ecfb: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x0012ecf7: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; call eax; 
0x00074bc0: push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0006af59: push dword ptr [esp + 0x28]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00109bf5: push dword ptr [esp + 0x2c]; call 0x1099d0; add esp, 0x28; pop ebx; ret; 
0x0011549b: push dword ptr [esp + 0x2c]; call 0x114980; add esp, 0x2c; ret; 
0x001155c1: push dword ptr [esp + 0x2c]; call 0x1154d0; add esp, 0x2c; ret; 
0x00115de9: push dword ptr [esp + 0x2c]; call 0x1157b0; add esp, 0x2c; ret; 
0x0012f073: push dword ptr [esp + 0x2c]; call 0x12eec0; add esp, 0x2c; ret; 
0x00029a31: push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0d1: push dword ptr [esp + 0x2c]; call 0x2b090; add esp, 0x2c; ret; 
0x00032dd1: push dword ptr [esp + 0x2c]; call 0x32aa0; add esp, 0x2c; ret; 
0x00035e52: push dword ptr [esp + 0x2c]; call 0x35fb0; add esp, 0x2c; ret; 
0x00035eb2: push dword ptr [esp + 0x2c]; call 0x36540; add esp, 0x2c; ret; 
0x00035f12: push dword ptr [esp + 0x2c]; call 0x36ab0; add esp, 0x2c; ret; 
0x00035f72: push dword ptr [esp + 0x2c]; call 0x37230; add esp, 0x2c; ret; 
0x00041948: push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0006aa95: push dword ptr [esp + 0x2c]; call 0x6a8c0; add esp, 0x2c; ret; 
0x00050143: push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x0006d081: push dword ptr [esp + 0x2c]; call 0x6cea0; add esp, 0x28; pop ebx; ret; 
0x0006d795: push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x00050115: push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x00078cd9: push dword ptr [esp + 0x2c]; call 0x78c00; add esp, 0x28; pop ebx; ret; 
0x000a05a2: push dword ptr [esp + 0x2c]; call 0xa0820; add esp, 0x2c; ret; 
0x000a0602: push dword ptr [esp + 0x2c]; call 0xa0cc0; add esp, 0x2c; ret; 
0x000a0662: push dword ptr [esp + 0x2c]; call 0xa1130; add esp, 0x2c; ret; 
0x000a06c2: push dword ptr [esp + 0x2c]; call 0xa1760; add esp, 0x2c; ret; 
0x0009fc0f: push dword ptr [esp + 0x2c]; call 0xad1b0; add esp, 0x2c; ret; 
0x000b7750: push dword ptr [esp + 0x2c]; call 0xb7850; add esp, 0x2c; ret; 
0x000ba622: push dword ptr [esp + 0x2c]; call 0xbc6d0; add esp, 0x2c; ret; 
0x000ba652: push dword ptr [esp + 0x2c]; call 0xbedd0; add esp, 0x2c; ret; 
0x000e1ba7: push dword ptr [esp + 0x2c]; call 0xe1450; add esp, 0x28; pop ebx; ret; 
0x000e1aff: push dword ptr [esp + 0x2c]; call 0xe1a60; add esp, 0x28; pop ebx; ret; 
0x000ea9a9: push dword ptr [esp + 0x2c]; call 0xeb230; add esp, 0x2c; ret; 
0x000fd021: push dword ptr [esp + 0x2c]; call 0xfcf00; add esp, 0x28; pop ebx; ret; 
0x000fd1f9: push dword ptr [esp + 0x2c]; call 0xfd030; add esp, 0x28; pop ebx; ret; 
0x00113ac1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x00109bf1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1099d0; add esp, 0x28; pop ebx; ret; 
0x001155bd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1154d0; add esp, 0x2c; ret; 
0x00115de5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1157b0; add esp, 0x2c; ret; 
0x0012f06f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x12eec0; add esp, 0x2c; ret; 
0x00029a2d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0cd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2b090; add esp, 0x2c; ret; 
0x00032dcd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x32aa0; add esp, 0x2c; ret; 
0x00035e4e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35fb0; add esp, 0x2c; ret; 
0x00036a9d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x36540; add esp, 0x2c; ret; 
0x00035f0e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x36ab0; add esp, 0x2c; ret; 
0x000379bd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x37230; add esp, 0x2c; ret; 
0x00041944: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0006aa91: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6a8c0; add esp, 0x2c; ret; 
0x0006d07d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6cea0; add esp, 0x28; pop ebx; ret; 
0x0006d791: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x00050111: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x00078cd5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x78c00; add esp, 0x28; pop ebx; ret; 
0x000a05cc: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa0820; add esp, 0x2c; ret; 
0x000a111d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa0cc0; add esp, 0x2c; ret; 
0x000a068c: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa1130; add esp, 0x2c; ret; 
0x000a06be: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa1760; add esp, 0x2c; ret; 
0x0009fc0b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xad1b0; add esp, 0x2c; ret; 
0x000b774c: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7850; add esp, 0x2c; ret; 
0x000ba61e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xbc6d0; add esp, 0x2c; ret; 
0x000e1c23: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe1450; add esp, 0x28; pop ebx; ret; 
0x000e1afb: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe1a60; add esp, 0x28; pop ebx; ret; 
0x000ea9d5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xeb230; add esp, 0x2c; ret; 
0x000fd01d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xfcf00; add esp, 0x28; pop ebx; ret; 
0x000fd1f5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xfd030; add esp, 0x28; pop ebx; ret; 
0x00113abd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x001155b9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1154d0; add esp, 0x2c; ret; 
0x00115de1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1157b0; add esp, 0x2c; ret; 
0x0012f06b: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x12eec0; add esp, 0x2c; ret; 
0x0002b09d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2a7e0; add esp, 0x2c; ret; 
0x0002b0c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x2b090; add esp, 0x2c; ret; 
0x00032dc9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x32aa0; add esp, 0x2c; ret; 
0x00035e4a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35fb0; add esp, 0x2c; ret; 
0x00036a99: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x36540; add esp, 0x2c; ret; 
0x00035f0a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x36ab0; add esp, 0x2c; ret; 
0x000379b9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x37230; add esp, 0x2c; ret; 
0x00042b81: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0006aa8d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6a8c0; add esp, 0x2c; ret; 
0x0006d78d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0005010d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x000a05c8: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa0820; add esp, 0x2c; ret; 
0x000a1119: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa0cc0; add esp, 0x2c; ret; 
0x000a0688: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa1130; add esp, 0x2c; ret; 
0x000a06ba: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xa1760; add esp, 0x2c; ret; 
0x0009fc07: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xad1b0; add esp, 0x2c; ret; 
0x000b7748: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7850; add esp, 0x2c; ret; 
0x000ba61a: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xbc6d0; add esp, 0x2c; ret; 
0x000ea9d1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xeb230; add esp, 0x2c; ret; 
0x000a0477: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000a035c: push dword ptr [esp + 0x2c]; push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00074ebf: push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00129f33: push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x000c1cfd: push dword ptr [esp + 0x30]; lea eax, [esp + 0x4c]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x00069b2e: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000ef976: push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0001bcc7: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x000ad2ce: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0010d1e4: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x000eabfb: push dword ptr [esp + 0x30]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000322c9: push dword ptr [esp + 0x34]; call edi; 
0x00081103: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x000ad447: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000c1d06: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x0009fe6b: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push edi; call esi; 
0x0010e263: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0010d273: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x00032630: push dword ptr [esp + 0x34]; push esi; call edi; 
0x00078a52: push dword ptr [esp + 0x38]; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x000a047b: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000a013b: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x40]; push edi; call esi; 
0x0006ce6f: push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x000ad2d2: push dword ptr [esp + 0x38]; push edi; call esi; 
0x000a047f: push dword ptr [esp + 0x38]; push esi; call ebx; 
0x0012deb1: push dword ptr [esp + 0x3c]; call 0x12dbf0; add esp, 0x3c; ret; 
0x000823aa: push dword ptr [esp + 0x3c]; call eax; 
0x0012dead: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x12dbf0; add esp, 0x3c; ret; 
0x0012dea9: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x12dbf0; add esp, 0x3c; ret; 
0x0012e2b3: push dword ptr [esp + 0x3c]; push ebp; push dword ptr [esp + 0x20]; push esi; push eax; call dword ptr [edx]; 
0x000823a5: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00081fff: push dword ptr [esp + 0x3c]; push ecx; push ebx; call eax; 
0x0007607d: push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00129f85: push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000c1d0a: push dword ptr [esp + 0x40]; call ebx; 
0x00139c82: push dword ptr [esp + 0x40]; lea eax, [esp + 0x60]; push eax; call ecx; 
0x00080c4b: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x14]; push ebp; call eax; 
0x0009fe6f: push dword ptr [esp + 0x40]; push edi; call esi; 
0x00061907: push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000613b4: push dword ptr [esp + 0x44]; push esi; call dword ptr [ebx + 0x1c]; 
0x0012d592: push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012a1c7: push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000432e1: push dword ptr [esp + 0x44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0003383c: push dword ptr [esp + 0x48]; push dword ptr [edi]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00024999: push dword ptr [esp + 0x4c]; call esi; 
0x00024995: push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x00033880: push dword ptr [esp + 0x4c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002077b: push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00020777: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00066459: push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x0001f78f: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000b3d89: push dword ptr [esp + 0x58]; lea eax, [esp + 0xa4]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000b3b11: push dword ptr [esp + 0x58]; lea eax, [esp + 0xdc]; push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0001fc85: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c1a14: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00024991: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0001fc81: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c1a10: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00116dfc: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0001e4b1: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb1: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001bcc2: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00116e00: push dword ptr [esp + 0x58]; push esi; call edi; 
0x0008298c: push dword ptr [esp + 0x5c]; call eax; 
0x0001f793: push dword ptr [esp + 0x5c]; call edi; 
0x0001e4ad: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfad: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00082988: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call eax; 
0x0001eb0f: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001e4b5: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb5: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001eb0b: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001eb13: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00023561: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002355d: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0001f0d6: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000221db: push dword ptr [esp + 0x68]; call esi; 
0x0001f0d2: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000221d7: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x00082afd: push dword ptr [esp + 0x6c]; call eax; 
0x00021436: push dword ptr [esp + 0x6c]; call esi; 
0x0001f0da: push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00021432: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x00082c7d: push dword ptr [esp + 0x6c]; push ebp; call eax; 
0x0012443b: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00075aa5: push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x0012722d: push dword ptr [esp + 0xc]; call eax; 
0x0011725c: push dword ptr [esp + 0xc]; push 0x400; push dword ptr [esp + 0x18]; push ebp; call edi; 
0x00127229: push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; call eax; 
0x00127225: push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; call eax; 
0x0013e44e: push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007503e: push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x0013e7d9: push dword ptr [esp + 0xcc]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000d9c95: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x00030ac2: push dword ptr [esp + 8]; call 0x30a40; pop ecx; pop edx; ret; 
0x00075aac: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00082ebd: push dword ptr [esp + 8]; push ebp; call eax; 
0x0006acfd: push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0006ad6f: push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00125e36: push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00075ab0: push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00058a11: push dword ptr [esp + eax*2 - 0x7d]; in al, dx; or al, 0x83; ret; 
0x0009cf81: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x00088aa9: push dword ptr [esp + edx*2 - 9]; ret 0; 
0x00088ab1: push dword ptr [esp - 9]; ret 0; 
0x00023560: push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0001f0d9: push dword ptr fs:[esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0008b425: push dword ptr gs:[eax]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0004d2ab: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x4abe0; add esp, 0x1c; ret; 
0x00083ed3: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x87c00; add esp, 0x1c; ret; 
0x000aa463: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xaa5e0; add esp, 0x1c; ret; 
0x00041941: push dword ptr gs:[eax]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41960; add esp, 0x2c; ret; 
0x0013a3b3: push dword ptr ss:[ecx]; mov dword ptr [esp + 0x24], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a2a3: push dword ptr ss:[ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00139932: push eax; aaa; add byte ptr [eax], al; jmp dword ptr [eax + 8]; 
0x0013978d: push eax; aaa; add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 4]; 
0x001396e5: push eax; aaa; add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax]; 
0x001328db: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x00132a59: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0009c386: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098f00: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x00070b0b: push eax; adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x0016b9d9: push eax; adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x0012e993: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0009d111: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0009c363: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098ee0: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x0009c3e6: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098f43: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x0009c416: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x00098f63: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00124d60: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x124d79; push ebx; call dword ptr [esi + 0x14]; 
0x0009c3b7: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098f24: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00124539: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0012c418: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x00077f94: push eax; add al, 0x5b; ret; 
0x0006ca6c: push eax; add al, 0x73; adc byte ptr [ebp + 0x889044a], cl; mov eax, dword ptr [edx]; ret; 
0x0005e3f3: push eax; add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x0005813a: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0012e049: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0006de3e: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0007ae2c: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0007d893: push eax; add al, 0x89; ret 0xd889; 
0x0007ba71: push eax; add al, 0x8b; inc eax; or al, 0x83; ret; 
0x00098cca: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00132e9a: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00044511: push eax; add al, 0x8d; inc esi; add al, 0xf; xchg edx, eax; ret; 
0x0001a6c0: push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000d604d: push eax; add al, 0xf7; ret 0xff00; 
0x000293bf: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00067263: push eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00051918: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x00087bf3: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x001139f4: push eax; add eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x0006a36f: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x0008aab0: push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x0009c13b: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00098ce8: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x0003529f: push eax; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012db89: push eax; and byte ptr [ebp + 0xd0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0006de07: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0012a176: push eax; and byte ptr [edi + 0x50], dl; call dword ptr [edx + 8]; 
0x00123ff0: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x000290ea: push eax; and eax, 0x1000; ret; 
0x000290ba: push eax; and eax, 0x100; ret; 
0x0002908a: push eax; and eax, 0x2000; ret; 
0x00028fda: push eax; and eax, 0x200; ret; 
0x0002903a: push eax; and eax, 0x4000; ret; 
0x00028f5a: push eax; and eax, 0x400; ret; 
0x0002900a: push eax; and eax, 0x8000; ret; 
0x00028faa: push eax; and eax, 0x800; ret; 
0x0002917a: push eax; and eax, 1; ret; 
0x00028f8a: push eax; and eax, 2; ret; 
0x0002906a: push eax; and eax, 4; ret; 
0x00028f3a: push eax; and eax, 8; ret; 
0x0016c18a: push eax; call 0x11c410; add esp, 0x1c; ret; 
0x0011f43a: push eax; call 0x11e7f0; add esp, 0x18; pop ebx; ret; 
0x001171a7: push eax; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0001c077: push eax; call 0x139490; mov dword ptr [esp], ebx; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x000eb4dc: push eax; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x0016b788: push eax; call 0x190e8; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011cbad: push eax; call 0x29a20; add esp, 0x10; add esp, 0xc; ret; 
0x0012c3b5: push eax; call 0x29a20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e5f26: push eax; call 0x29a20; add esp, 0x18; pop ebx; ret; 
0x00034fac: push eax; call 0x34fc0; add esp, 0x1c; ret; 
0x00035053: push eax; call 0x35070; add esp, 0x10; add esp, 0xc; ret; 
0x000350c3: push eax; call 0x350e0; add esp, 0x10; add esp, 0xc; ret; 
0x0007493b: push eax; call 0x78300; add esp, 0x1c; ret; 
0x000e1e74: push eax; call 0x9d860; add esp, 0x1c; ret; 
0x0007bdd8: push eax; call 0x9dc80; add esp, 0x1c; ret; 
0x000b6c97: push eax; call 0xb3670; add esp, 0x1c; ret; 
0x000b3301: push eax; call 0xb53f0; add esp, 0x1c; ret; 
0x00051853: push eax; call 0xecc20; add esp, 0x1c; ret; 
0x000f5084: push eax; call 0xf4e80; add esp, 0x1c; ret; 
0x0016b7cc: push eax; call 0xfade0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000fbbd3: push eax; call 0xfbd50; add esp, 0x1c; ret; 
0x0016b748: push eax; call 0xfca10; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00108413: push eax; call dword ptr [ebx + 0x14]; 
0x0006b640: push eax; call dword ptr [ebx + 0x1c]; 
0x0012438e: push eax; call dword ptr [ecx + 0x10]; 
0x000c7ee0: push eax; call dword ptr [ecx + 0x20]; 
0x001240b5: push eax; call dword ptr [ecx + 0xc]; 
0x00124141: push eax; call dword ptr [ecx + 8]; 
0x0012443f: push eax; call dword ptr [ecx]; 
0x0012453b: push eax; call dword ptr [edx + 0x10]; 
0x0012e0ee: push eax; call dword ptr [edx + 0x14]; 
0x0012a0bd: push eax; call dword ptr [edx + 0xc]; 
0x00123ff3: push eax; call dword ptr [edx + 4]; 
0x0012a179: push eax; call dword ptr [edx + 8]; 
0x0012e2bd: push eax; call dword ptr [edx]; 
0x0001f0e1: push eax; call eax; 
0x00071132: push eax; call ebx; 
0x000832de: push eax; call ecx; 
0x0012e65d: push eax; call edi; 
0x000835d7: push eax; call edx; 
0x00074081: push eax; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x001179a9: push eax; cmp bl, dh; call dword ptr [eax - 0x18]; 
0x00043899: push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00133e03: push eax; dec edx; cli; call dword ptr [eax + 0x6a]; 
0x0013ca79: push eax; dec esp; ret; 
0x00043963: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00043821: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012a901: push eax; insd dword ptr es:[edi], dx; hlt; call dword ptr [eax - 0x73]; 
0x0005e819: push eax; jbe 0x5e816; call dword ptr [eax - 0x18]; 
0x00063819: push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x0007b733: push eax; jbe 0x7b740; ret; 
0x000f1b39: push eax; jmp dword ptr [esi - 0x7d]; 
0x0009c483: push eax; jnp 0x5b15e8ce; pop esi; ret; 
0x00098fc0: push eax; jnp 0x5e11b40b; ret; 
0x000c5b4c: push eax; lcall 0x8510, 0xc483ffff; sal byte ptr [ebp + 9], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0010cac0: push eax; lcall 0xc376, 0xe850fffa; int1; jmp dword ptr [esi - 0x70]; 
0x0005184c: push eax; lea eax, [edx - 0x5cc0f]; push eax; call 0xecc20; add esp, 0x1c; ret; 
0x0006874d: push eax; lea eax, [esi + 0x28]; push eax; push 1; push esi; call edx; 
0x0009fb38: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0009f744: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0012caa3: push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x000fb44d: push eax; lodsd eax, dword ptr [esi]; cli; dec dword ptr [edi]; xchg ebp, eax; ret 0xda21; 
0x00151c91: push eax; mov dl, 0xfe; inc dword ptr [ecx + 0x3e86bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f51e7: push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x000ff327: push eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000c198e: push eax; mov dword ptr [esp + 0x1c], eax; call 0x139490; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0011686e: push eax; mov dword ptr [esp + 0x2c], eax; call 0x139490; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000ff6f0: push eax; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000c867d: push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x0006294e: push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0002077e: push eax; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000b3b1c: push eax; mov eax, dword ptr [esp + 0x54]; call eax; 
0x000f7994: push eax; mov ecx, dword ptr [esp + 4]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0xc]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f7956: push eax; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000700a3: push eax; mov esi, dword ptr [esp + 0x1c]; push esi; call dword ptr [ebx + 0x40]; 
0x000f4eac: push eax; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f4f15: push eax; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0012d544: push eax; mov esi, dword ptr [esp + 0x5c]; push esi; call dword ptr [eax + 0x14]; 
0x0006460c: push eax; or al, 0; add byte ptr [ebx - 0x7276fb14], al; pushal; idiv edi; call dword ptr [edx - 1]; 
0x0006e44f: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000d7c87: push eax; or al, 0x8b; inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x00109379: push eax; or al, 0xf6; ret 0x7504; 
0x0004af97: push eax; or al, 0xf6; ret 0xf40; 
0x000d981b: push eax; or bh, bh; je 0xd985a; or al, ch; ret 0xf3f8; 
0x0009f2be: push eax; or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x00026d63: push eax; or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x000f0130: push eax; or byte ptr [ebp - 0xf4d0f6d], cl; call dword ptr [edx - 0x73]; 
0x000748e8: push eax; or byte ptr [ebx + 0x14], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0009c1a1: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098d2e: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x00074926: push eax; or byte ptr [ebx + 0xe], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00079a41: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x0012625d: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x12636b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0004d140: push eax; or byte ptr [ebx - 0x7f747bbb], cl; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0012f6f6: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0002ca8c: push eax; or byte ptr [edi], cl; mov bh, 0x93; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x000f6102: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0012463c: push eax; or dh, dh; ret 0x7401; 
0x000e2fb2: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00098f80: push eax; or eax, 0x824448b; pop esi; ret; 
0x0009c443: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00124981: push eax; or esi, esp; call dword ptr [ecx - 0x73]; 
0x00027ea8: push eax; outsd dx, dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000ec96a: push eax; pop ebx; pop esi; pop edi; ret; 
0x0009c1bf: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098d4c: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012c616: push eax; push 0; call 0x68c50; add esp, 0x18; pop ebx; ret; 
0x000f7f9c: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0001b028: push eax; push 1; call 0xed140; add esp, 0x1c; ret; 
0x000ef973: push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00068751: push eax; push 1; push esi; call edx; 
0x000efcb4: push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000efc43: push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0009c463: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098fa0: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000351cc: push eax; push cs; xor eax, eax; pop ebx; pop esi; ret; 
0x0009fad3: push eax; push dword ptr [ebp + 8]; call ebx; 
0x0010a0d0: push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0005ed89: push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639e2: push eax; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x000835ab: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0012ca87: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0001bd2c: push eax; push dword ptr [ebx + 4]; call esi; 
0x00126781: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0013a387: push eax; push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0013a277: push eax; push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0009f602: push eax; push dword ptr [edi]; call ebx; 
0x0009f749: push eax; push dword ptr [esi + 8]; call ebx; 
0x00108405: push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x18]; add eax, 0x2000001; push eax; call dword ptr [ebx + 0x14]; 
0x0013a307: push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001138d3: push eax; push dword ptr [esp + 0x1c]; call 0x1138f0; add esp, 0x1c; ret; 
0x00113d73: push eax; push dword ptr [esp + 0x1c]; call 0x113d90; add esp, 0x1c; ret; 
0x0012ec5d: push eax; push dword ptr [esp + 0x1c]; call 0x12e9c0; add esp, 0x10; add esp, 0xc; ret; 
0x00131f70: push eax; push dword ptr [esp + 0x1c]; call 0x131db0; add esp, 0x1c; ret; 
0x00034f23: push eax; push dword ptr [esp + 0x1c]; call 0x35110; add esp, 0x1c; ret; 
0x00034f83: push eax; push dword ptr [esp + 0x1c]; call 0x35190; add esp, 0x1c; ret; 
0x000f7fca: push eax; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x10; add esp, 0xc; ret; 
0x000b3ee4: push eax; push dword ptr [esp + 0x1c]; call 0xb3670; add esp, 0x18; pop ebx; ret; 
0x000f86e1: push eax; push dword ptr [esp + 0x1c]; call 0xf9030; add esp, 0x10; add esp, 0xc; ret; 
0x000fbc53: push eax; push dword ptr [esp + 0x1c]; call 0xfbc70; add esp, 0x1c; ret; 
0x000fcd18: push eax; push dword ptr [esp + 0x1c]; call 0xfcb30; add esp, 0x18; pop ebx; ret; 
0x000fcce8: push eax; push dword ptr [esp + 0x1c]; call 0xfcbb0; add esp, 0x18; pop ebx; ret; 
0x0006fcce: push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x000501fa: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x501b0; add esp, 0x1c; ret; 
0x0006d84a: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x501d0; add esp, 0x1c; ret; 
0x000ad599: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x58160; add esp, 0x1c; ret; 
0x000500b9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x0006d769: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x00068c59: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x68b50; add esp, 0x1c; ret; 
0x00050159: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x00072e29: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x00084fc3: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x84fe0; add esp, 0x1c; ret; 
0x000fa8b9: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x001221b9: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0011549a: push eax; push dword ptr [esp + 0x2c]; call 0x114980; add esp, 0x2c; ret; 
0x000c1d05: push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x00139c81: push eax; push dword ptr [esp + 0x40]; lea eax, [esp + 0x60]; push eax; call ecx; 
0x00024ac0: push eax; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0002077a: push eax; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00020776: push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0001f78e: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0001fc80: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002355c: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000221d6: push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x00021431: push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x00034fab: push eax; push eax; call 0x34fc0; add esp, 0x1c; ret; 
0x00035052: push eax; push eax; call 0x35070; add esp, 0x10; add esp, 0xc; ret; 
0x000350c2: push eax; push eax; call 0x350e0; add esp, 0x10; add esp, 0xc; ret; 
0x0006645c: push eax; push ebp; call dword ptr [ebx + 0x1c]; 
0x0005d93d: push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0013e4b9: push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x000750ac: push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x00070cd9: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0007553b: push eax; push ebx; call dword ptr [edi + 0x48]; 
0x000751d2: push eax; push ebx; call dword ptr [esi + 0x48]; 
0x0007131d: push eax; push ebx; push edx; call esi; 
0x00077246: push eax; push edi; call dword ptr [ebx + 0x38]; 
0x001259eb: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00125b3b: push eax; push edi; call dword ptr [edx + 0x18]; 
0x0009fd11: push eax; push edi; call esi; 
0x001088aa: push eax; push edi; cli; call dword ptr [eax - 1]; 
0x001089d8: push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012377b: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0012377b: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0012ba9a: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00078702: push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000700ff: push eax; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x0006f5ce: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00075be0: push eax; push edx; push esi; call ecx; 
0x00123855: push eax; push esi; call 0x125720; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0013e923: push eax; push esi; call dword ptr [ebx + 0x40]; 
0x00068dec: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0013e5bd: push eax; push esi; call dword ptr [edi + 0x38]; 
0x0013f575: push eax; push esi; call dword ptr [edi + 0x40]; 
0x0013e79a: push eax; push esi; call dword ptr [edx + 0x48]; 
0x000a0365: push eax; push esi; call ebx; 
0x0009f5fc: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00108c26: push eax; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0010a8fd: push eax; push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x00126eb0: push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000f51e9: push eax; push esp; xor eax, eax; ret; 
0x000f610b: push eax; push ss; ret; 
0x00030206: push eax; ret; 
0x0010c4f2: push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x00117632: push eax; sub al, 0; add byte ptr [ebp - 0x74f18b40], al; add dword ptr [eax + 0xf], 0; add bl, ch; ret; 
0x0012aaf8: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00111586: push eax; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5374: push eax; sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0012f75f: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0010c614: push eax; sub dword ptr [eax], eax; add byte ptr [ebp - 0x5a7347d], cl; call dword ptr [eax - 1]; 
0x0012cfd3: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0011da0c: push eax; test cl, dh; inc dword ptr [ebx + 0xfba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x0010c73b: push eax; test edx, esi; call dword ptr [edx - 1]; 
0x00082b57: push ebp; aad 0xfc; jmp dword ptr [ebp - 0x5f]; 
0x000fe372: push ebp; adc byte ptr [ebx + 0x458801e0], al; or byte ptr [eax - 0x7c72ebbb], cl; ret 0xfa4d; 
0x000fe45a: push ebp; adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000fe27e: push ebp; add al, 0x89; ret 0xe8c1; 
0x000fef0b: push ebp; add byte ptr [ebp - 0x8531f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000feaa7: push ebp; add byte ptr [ebp - 0x85c8f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fea46: push ebp; add byte ptr [ebp - 0x85cbf6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe823: push ebp; add byte ptr [ebp - 0x8618f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe5d1: push ebp; add byte ptr [ebp - 0x861bf6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe411: push ebp; add byte ptr [ebp - 0x86d4f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe272: push ebp; add byte ptr [ebp - 0x8708f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x000fe93f: push ebp; add byte ptr [ebp - 0x8731f6d], cl; dec dword ptr [ebx + 0x55895440]; add al, 0x89; ret 0xe8c1; 
0x00085695: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x001392ff: push ebp; add byte ptr [ecx], al; ret 0xd139; 
0x000d4e4a: push ebp; add dh, dh; inc esp; ret 0x804; 
0x000501a3: push ebp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00092f47: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00077062: push ebp; and al, 0x21; ret 0xc483; 
0x000de5c5: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000de5da: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x000f59fb: push ebp; bnd jmp dword ptr [esi - 0x70]; 
0x0012cfd7: push ebp; call dword ptr [eax + 0x10]; 
0x0005de48: push ebp; call dword ptr [eax + 0x1c]; 
0x0006645d: push ebp; call dword ptr [ebx + 0x1c]; 
0x00065fb4: push ebp; call dword ptr [edx + 0x1c]; 
0x0006588f: push ebp; call dword ptr [esi + 0x1c]; 
0x00079474: push ebp; call dword ptr [esi + 0x2c]; 
0x0006939c: push ebp; call dword ptr [esi + 0x40]; 
0x0012626d: push ebp; call dword ptr [esi]; 
0x00080c53: push ebp; call eax; 
0x00117269: push ebp; call edi; 
0x0014805b: push ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000fe248: push ebp; cli; call dword ptr [eax + 0x52]; 
0x000fe224: push ebp; cli; call dword ptr [ecx + 0x51]; 
0x000fe202: push ebp; cli; call dword ptr [esi + 0x56]; 
0x00073be1: push ebp; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0015ecd7: push ebp; div ebx; jmp dword ptr [esi - 0x70]; 
0x00077235: push ebp; fmul qword ptr [edi]; adc dword ptr [ebx + 1], 0; add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x000b0dde: push ebp; idiv bh; dec dword ptr [ebx - 0x364763]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1077d]; jmp dword ptr [ebp - 0x39]; 
0x0006a239: push ebp; in al, 0x89; ret; 
0x000a0360: push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0006f6d4: push ebp; les ecx, ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0010c8d6: push ebp; les edx, ptr [ecx - 0x18]; add bl, byte ptr [ecx + edi*8]; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0010a1e9: push ebp; mov ah, 0x6a; add eax, 0x57f6808d; cli; call dword ptr [eax - 0x75]; 
0x00026bbd: push ebp; mov ah, 0xf; xchg esp, eax; ret 0x3a3c; 
0x0002697d: push ebp; mov ah, 0xf; xchg esp, eax; ret 0x5f3c; 
0x0004bd93: push ebp; mov al, 0x83; ret; 
0x00133f6f: push ebp; mov al, byte ptr [0x3908418b]; ret 0x2875; 
0x000c5e0a: push ebp; mov eax, 0x166; lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0004b6cf: push ebp; mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x00135302: push ebp; mov eax, 0x3908418b; ret 0x4575; 
0x0013b0e7: push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0005d93e: push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00139001: push ebp; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000b35b9: push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0012bf01: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0010caac: push ebp; mov esp, 0x9a8c828d; cli; call dword ptr [eax - 0x73]; 
0x0001c5c6: push ebp; mov esp, 0xcec2e857; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call edi; 
0x0004f8ba: push ebp; or al, 0xf6; ret 0x7401; 
0x0004fa21: push ebp; or al, 0xf6; ret 0xf40; 
0x0011f63c: push ebp; pop edi; cli; call dword ptr [eax - 0x18]; 
0x00112213: push ebp; pop edx; cli; call dword ptr [eax - 0x18]; 
0x001123f8: push ebp; pop edx; cli; call dword ptr [eax - 0x73]; 
0x0012250a: push ebp; push 0; push edi; push ebx; call edx; 
0x00126fd1: push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0012629a: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00126257: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0012e2b7: push ebp; push dword ptr [esp + 0x20]; push esi; push eax; call dword ptr [edx]; 
0x0001bcc6: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x0003262f: push ebp; push dword ptr [esp + 0x34]; push esi; call edi; 
0x0007607c: push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00061906: push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000613b3: push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [ebx + 0x1c]; 
0x0001e4ac: push ebp; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000bef37: push ebp; push ebx; call eax; 
0x00032317: push ebp; push ebx; push esi; call edi; 
0x00125ac6: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00074d42: push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0007637e: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0006d18d: push ebp; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000322b2: push ebp; push edx; add esi, eax; push esi; call edi; 
0x00067c08: push ebp; push edx; push esi; call dword ptr [ebx + 0x1c]; 
0x00060d29: push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007616f: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00131542: push ebp; push esi; call edi; 
0x000327a7: push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012ef90: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x000322fb: push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x000322c7: push ebp; push esi; push dword ptr [esp + 0x34]; call edi; 
0x00135dae: push ebp; rcl byte ptr [eax - 0x73], 0x87; mov ah, byte ptr [eax - 6]; call dword ptr [eax + 0x6a]; 
0x0010c736: push ebp; rcl byte ptr [edx - 0x73]; xchg ebx, eax; push eax; test edx, esi; call dword ptr [edx - 1]; 
0x00030c98: push ebp; ret 0x10; 
0x0002698f: push ebp; ror byte ptr [ecx + 0x2fa80f2], 0xf; xchg esi, eax; ret 0x550a; 
0x00135107: push ebp; wait; std; jmp dword ptr [esi - 0x70]; 
0x00108415: push ebx; adc al, 0x89; ret 0xc483; 
0x000d3388: push ebx; adc al, 0xe9; ret; 
0x00072c10: push ebx; adc byte ptr [ecx + 0x53891856], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000835ff: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x0014a848: push ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013aaae: push ebx; add al, 0x29; ret 0x143b; 
0x0013acd6: push ebx; add al, 0x29; ret 0x543b; 
0x00073b73: push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x00074013: push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x00107b7b: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0009f059: push ebx; add al, 0x83; ret; 
0x000716c3: push ebx; add al, 0x89; ret 0xe283; 
0x000de1e2: push ebx; add al, 0x8b; inc esp; and al, 0xc; add eax, dword ptr [eax + edx*4 - 0x5fe94]; jmp eax; 
0x000350fe: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x00077239: push ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfa9], cl; add al, 0x29; ret 0x5052; 
0x00131c4f: push ebx; add esp, 0x18; pop ebx; ret; 
0x000c66fa: push ebx; add esp, 0x28; mov eax, edx; pop ebx; ret; 
0x0001bf31: push ebx; and byte ptr [ebp - 0x72118b2e], al; nop; insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x000f3d6e: push ebx; bnd jmp dword ptr [ebp - 0x77]; 
0x001174b3: push ebx; call 0x139490; mov dword ptr [esp], ebp; call ebx; 
0x00024d11: push ebx; call 0x139490; mov dword ptr [esp], esi; call ebx; 
0x0010edf0: push ebx; call 0x50100; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb162: push ebx; call 0x50130; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001247c1: push ebx; call dword ptr [eax + 0x10]; 
0x00124d93: push ebx; call dword ptr [eax + 0x14]; 
0x0012b475: push ebx; call dword ptr [eax + 0x18]; 
0x0006ad01: push ebx; call dword ptr [eax + 0x1c]; 
0x001321fb: push ebx; call dword ptr [eax + 0x20]; 
0x0012b4f7: push ebx; call dword ptr [eax + 0x24]; 
0x0006e41f: push ebx; call dword ptr [eax + 0xc]; 
0x0012667e: push ebx; call dword ptr [eax + 4]; 
0x001247b1: push ebx; call dword ptr [eax]; 
0x001248da: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0006ad73: push ebx; call dword ptr [ebp + 0x1c]; 
0x0006ba88: push ebx; call dword ptr [ebp + 0x24]; 
0x0013e452: push ebx; call dword ptr [ebp + 0x3c]; 
0x00074ec5: push ebx; call dword ptr [ebp + 0x40]; 
0x00075043: push ebx; call dword ptr [ecx + 0x3c]; 
0x000750ad: push ebx; call dword ptr [ecx + 0x40]; 
0x0013f06e: push ebx; call dword ptr [edi + 0x24]; 
0x00070cda: push ebx; call dword ptr [edi + 0x40]; 
0x00076974: push ebx; call dword ptr [edi + 0x44]; 
0x0007553c: push ebx; call dword ptr [edi + 0x48]; 
0x0006e118: push ebx; call dword ptr [esi + 0x10]; 
0x00124d69: push ebx; call dword ptr [esi + 0x14]; 
0x0006e93e: push ebx; call dword ptr [esi + 0x18]; 
0x0007498b: push ebx; call dword ptr [esi + 0x30]; 
0x00076380: push ebx; call dword ptr [esi + 0x40]; 
0x000767e2: push ebx; call dword ptr [esi + 0x44]; 
0x000751d3: push ebx; call dword ptr [esi + 0x48]; 
0x00077fe2: push ebx; call dword ptr [esi + 0xc]; 
0x00080545: push ebx; call eax; 
0x000fbfe6: push ebx; call edx; 
0x000fbfaf: push ebx; call esi; 
0x000fe138: push ebx; cli; call dword ptr [eax + 0x52]; 
0x000fe114: push ebx; cli; call dword ptr [ecx + 0x51]; 
0x000846cc: push ebx; cli; call dword ptr [edi + 0x50]; 
0x000459d9: push ebx; cmp bh, ch; jmp dword ptr [esi - 0x70]; 
0x0012c82a: push ebx; dec esp; push edx; call eax; 
0x000499e9: push ebx; hlt; std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x00082e4a: push ebx; inc esp; cli; call dword ptr [ebp + 0x50]; 
0x00082d85: push ebx; inc esp; cli; call dword ptr [ebp + 0x52]; 
0x00058a90: push ebx; ja 0x59470; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x00059378: push ebx; ja 0x597d6; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058977: push ebx; ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x0001f789: push ebx; lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000221d1: push ebx; lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x000229a9: push ebx; lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; call esi; 
0x00043961: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004381f: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012fce3: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x001469af: push ebx; mov dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0010c22d: push ebx; mov dword ptr [ebp - 0x38], eax; push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0010bb46: push ebx; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0010bf75: push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0010bb9e: push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x000ec8c0: push ebx; mov eax, 0x10c; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec8f0: push ebx; mov eax, 0x10d; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f90f0: push ebx; mov eax, 0x10f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec080: push ebx; mov eax, 0x13e; mov ecx, dword ptr [esp + 0xc]; xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ed300: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00050f30: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c57e0: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f671b: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f6220: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b42f0: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000f7b70: push ebx; mov eax, 0x58; mov edx, dword ptr [esp + 8]; mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x000f9310: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f9340: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f6610: push ebx; mov eax, 0x60; sub esp, 8; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00031170: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f61f0: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f9370: push ebx; mov eax, 0xc1; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f93a0: push ebx; mov eax, 0xc2; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec3a0: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ec400: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ec3d0: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b4020: push ebx; mov eax, 0xd; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00143240: push ebx; mov eax, 0xf1; mov edx, dword ptr [esp + 0xc]; mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f5960: push ebx; mov eax, 3; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f59d0: push ebx; mov eax, 4; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f5670: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0002a27d: push ebx; mov eax, dword ptr [eax + 0x1a58]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a253: push ebx; mov eax, dword ptr [edi + 0x1a5c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0006d18f: push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00107d4a: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00119610: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010183d: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00145649: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101669: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0014537c: push ebx; mov ebx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f62f8: push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ff5ab: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00050f66: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101589: push ebx; mov edi, esi; mov ecx, dword ptr [esp + 0x10]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001004a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100060: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6810: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef220: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6650: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff250: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100100: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae10: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff30: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff60: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee870: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6960: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6990: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee840: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf10: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb10: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0009554b: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000c5828: push ebx; or al, 0x5b; ret; 
0x00072c16: push ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00107c1b: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000cc909: push ebx; or al, 0x83; ret; 
0x000c5825: push ebx; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x000c5822: push ebx; or byte ptr [ebx + 0x53890c53], cl; or al, 0x5b; ret; 
0x000c581f: push ebx; or byte ptr [ecx + 0x538b0853], cl; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x0002eb95: push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0016b1f6: push ebx; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0010c329: push ebx; push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0010b988: push ebx; push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00113ab7: push ebx; push 0x400; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x28]; call eax; 
0x0006bc5e: push ebx; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0004b323: push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0010b597: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0009f563: push ebx; push dword ptr [edi]; call esi; 
0x0005de43: push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00069ad4: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006588a: push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000ad2cd: push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00024990: push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x4c]; push dword ptr [esp + 0x4c]; call esi; 
0x0001eb0a: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0001f0d1: push ebx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x6c]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00127224: push ebx; push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; push dword ptr [esp + 0xc]; call eax; 
0x0012db92: push ebx; push eax; call dword ptr [edx + 8]; 
0x0005ed88: push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639e1: push ebx; push eax; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x000b35b8: push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00060d28: push ebx; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0006fe24: push ebx; push ecx; push dword ptr [esp + 0x1c]; call dword ptr [eax + 0x40]; 
0x0013ea92: push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x00075a50: push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0007131e: push ebx; push edx; call esi; 
0x0005ea37: push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x001315e3: push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131623: push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x000626f0: push ebx; push edx; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00131e22: push ebx; push esi; call dword ptr [eax + 4]; 
0x0006e8a9: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00032318: push ebx; push esi; call edi; 
0x00065fb2: push ebx; push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x0005ccc9: push ebx; ret; 
0x0011667f: push ebx; sbb byte ptr [ebx + 0x43031443], cl; adc byte ptr [ecx], bh; ret 0x6273; 
0x000c7171: push ebx; setne al; ret; 
0x0012cd8d: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000834d3: push ebx; sub dh, dh; ret 0x7502; 
0x001431e6: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000d50a1: push ebx; xor al, 0x89; je 0xd50ca; cmp al, 0x29; ret 0x448b; 
0x000f6326: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00043854: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00074010: push ecx; adc al, 0x89; push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000e1e31: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0014a5ab: push ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012667b: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0012663b: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x0008ed13: push ecx; add al, 0x5b; ret; 
0x000e1e51: push ecx; add al, 0x77; push es; setne al; movzx eax, al; ret; 
0x0007c378: push ecx; add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x00108661: push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x000b6f1b: push ecx; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012661e: push ecx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0006ca83: push ecx; call 0x6e4e0; add esp, 0x1c; ret; 
0x001324b3: push ecx; call dword ptr [eax + 0x20]; 
0x001324e2: push ecx; call dword ptr [eax + 0x24]; 
0x00131ae2: push ecx; call dword ptr [eax + 4]; 
0x00131ab3: push ecx; call dword ptr [eax]; 
0x00025f5d: push ecx; call eax; 
0x0001af9f: push ecx; call edx; 
0x000f5b3f: push ecx; cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000c5d68: push ecx; cmp eax, 0xfffff001; jae 0x1aff0; ret; 
0x00035aa9: push ecx; cmp esi, edi; jmp dword ptr [esi - 0x70]; 
0x000f98e4: push ecx; dec esp; cli; call dword ptr [eax - 0x18]; 
0x000faffc: push ecx; inc ebx; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x00081c7d: push ecx; jmp dword ptr [ecx]; 
0x000b3451: push ecx; lea ebp, [esp + 0x6c]; push ebp; call eax; 
0x000ad84e: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x00045007: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001258d6: push ecx; mov dword ptr [eax], 0; pop ebx; ret; 
0x000ad853: push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x000ef436: push ecx; mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000329bb: push ecx; mov esi, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012377e: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00133330: push ecx; or byte ptr [ecx], bh; ret 0x2a75; 
0x0006ea1f: push ecx; or byte ptr [ecx], ch; ret 0xd089; 
0x000d7916: push ecx; or byte ptr [edi], cl; xchg esp, eax; ret; 
0x00102735: push ecx; or byte ptr [edx + 8], dh; seta al; movzx eax, al; neg eax; ret; 
0x00067dd6: push ecx; or eax, 0x27c38100; ret 0x17; 
0x00148831: push ecx; outsd dx, dword ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008ed75: push ecx; pop es; pop ebx; ret; 
0x00115db4: push ecx; pop esp; cli; call dword ptr [eax - 0x18]; 
0x00028d17: push ecx; push 0; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012e1a8: push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x000fbfe3: push ecx; push 3; push ebx; call edx; 
0x0012e0d8: push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x0012498e: push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00124ebf: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0012e0eb: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0005f16d: push ecx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [ebx + 0x1c]; 
0x0005f85e: push ecx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00083545: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x00069b36: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0006fe25: push ecx; push dword ptr [esp + 0x1c]; call dword ptr [eax + 0x40]; 
0x0010d316: push ecx; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e306: push ecx; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x65770; add esp, 0x1c; ret; 
0x000823a9: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0012a1c6: push ecx; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0013e44d: push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007bdd7: push ecx; push eax; call 0x9dc80; add esp, 0x1c; ret; 
0x0012f6f8: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012c41a: push ecx; push eax; call dword ptr [edx + 8]; 
0x0006294d: push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x001221b8: push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007131c: push ecx; push eax; push ebx; push edx; call esi; 
0x0007616e: push ecx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00082003: push ecx; push ebx; call eax; 
0x000846cb: push ecx; push ebx; cli; call dword ptr [edi + 0x50]; 
0x0004b322: push ecx; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0012a1c5: push ecx; push ecx; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012efb1: push ecx; push edi; call dword ptr [esi + 8]; 
0x00139791: push ecx; push edx; call dword ptr [eax + 4]; 
0x0013173a: push ecx; push edx; call dword ptr [eax]; 
0x001269bc: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000b6c95: push ecx; push edx; push eax; call 0xb3670; add esp, 0x1c; ret; 
0x00080543: push ecx; push edx; push ebx; call eax; 
0x001315c6: push ecx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00131606: push ecx; push edx; push esi; call dword ptr [eax + 8]; 
0x0013ea93: push ecx; push esi; call dword ptr [eax + 0x40]; 
0x00131e7e: push ecx; push esi; call dword ptr [eax]; 
0x00075a51: push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x000263eb: push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00077773: push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x00025f03: push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 0x18], ecx; call eax; 
0x000e584c: push ecx; sbb al, 0x39; ret; 
0x000951b2: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x00096913: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00095233: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x00095333: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000968f0: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x00096a00: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x00096983: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00095273: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x00095293: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x0007fa27: push edi; adc byte ptr [ecx], bh; ret 0x870f; 
0x00095210: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00096934: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x00095254: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005937b: push edi; add al, 0; add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x62f84], bl; jmp eax; 
0x00094ff8: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x00094fda: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000e2246: push edi; add byte ptr [eax - 0x73], dl; add dword ptr [edx], 0x4a; cli; call dword ptr [eax - 0x18]; 
0x0009667a: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x00086a49: push edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x000272df: push edi; add eax, 0x850f02a8; ret; 
0x0014fd6b: push edi; add eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00095018: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000966e8: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x0013f070: push edi; and al, 0x21; ret 0xc483; 
0x0007723e: push edi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x000c1af8: push edi; call 0x139490; add esp, 0x10; mov eax, edi; call eax; 
0x0001c5c8: push edi; call 0x139490; mov dword ptr [esp], ebx; call edi; 
0x00125199: push edi; call 0xedc70; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0012629e: push edi; call dword ptr [eax + 0x10]; 
0x00130718: push edi; call dword ptr [eax + 0x14]; 
0x000c86c8: push edi; call dword ptr [eax + 0x18]; 
0x0012625b: push edi; call dword ptr [eax + 8]; 
0x0012ef94: push edi; call dword ptr [eax]; 
0x00074bc4: push edi; call dword ptr [ebp + 0x1c]; 
0x0007c7b1: push edi; call dword ptr [ebp]; 
0x0006f5d0: push edi; call dword ptr [ebx + 0x38]; 
0x0006ffae: push edi; call dword ptr [ebx + 0x40]; 
0x000790c4: push edi; call dword ptr [ebx + 0xc]; 
0x00068fcd: push edi; call dword ptr [ebx + 8]; 
0x001259ec: push edi; call dword ptr [ecx + 0x18]; 
0x00125b3c: push edi; call dword ptr [edx + 0x18]; 
0x0006ce73: push edi; call dword ptr [edx + 0x1c]; 
0x00076081: push edi; call dword ptr [esi + 0x20]; 
0x0012efb2: push edi; call dword ptr [esi + 8]; 
0x000c8684: push edi; call eax; 
0x0009fd12: push edi; call esi; 
0x00095371: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x00128491: push edi; cld; jmp dword ptr [ebp - 0x77]; 
0x00109a40: push edi; cli; call dword ptr [eax + 0x57]; 
0x000fce09: push edi; cli; call dword ptr [eax + 0x6a]; 
0x0010992e: push edi; cli; call dword ptr [eax - 0x18]; 
0x00106b1e: push edi; cli; call dword ptr [eax - 0x73]; 
0x0010a1f0: push edi; cli; call dword ptr [eax - 0x75]; 
0x0010790b: push edi; cli; call dword ptr [eax - 1]; 
0x001151f2: push edi; cli; call dword ptr [ebp - 0x77]; 
0x00108053: push edi; cli; call dword ptr [ebp - 1]; 
0x001078c6: push edi; cli; call dword ptr [edx + 0x50]; 
0x00028d83: push edi; cli; call dword ptr [esi - 1]; 
0x0011de71: push edi; cli; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x001164c6: push edi; cli; dec dword ptr [ecx - 0x48b7b]; call dword ptr [esi + 0x52]; 
0x00157c93: push edi; hlt; call dword ptr [ebx - 0x18]; 
0x0010d27e: push edi; idiv bh; add esp, 0x2c; ret; 
0x000f5832: push edi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000969e0: push edi; jge 0x5e68892e; pop ebx; ret; 
0x00117c05: push edi; jo 0x117c07; jmp dword ptr [esi - 0x70]; 
0x001029e1: push edi; loope 0x1029f4; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x000952f0: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00125e3a: push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x001254bb: push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0012bdab: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0010bb9c: push edi; or al, 0x53; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0010c036: push edi; or al, 0x56; mov dword ptr [ebp - 0x44], edx; push dword ptr [ebp - 0xbc]; push ebx; call eax; 
0x0009671c: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x0009673e: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x0009677c: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0006f5c7: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000ddbf9: push edi; or byte ptr [ecx], bh; ret 0xd977; 
0x0009503c: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000969a0: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x0009507c: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x000fbfac: push edi; push 0; push ebx; call esi; 
0x001089d9: push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x000fbfc0: push edi; push 1; push ebx; call esi; 
0x000fbfd3: push edi; push 2; push ebx; call esi; 
0x000952d0: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0006b63c: push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0006a472: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0005f395: push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x0006422a: push edi; push dword ptr [ebp - 0x89c]; call eax; 
0x0005844f: push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c7f: push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x00060611: push edi; push dword ptr [esp + 0x18]; push esi; call dword ptr [ebx + 0x1c]; 
0x00125563: push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0001dfac: push edi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0006ad6e: push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00124140: push edi; push eax; call dword ptr [ecx + 8]; 
0x0012a178: push edi; push eax; call dword ptr [edx + 8]; 
0x00124d92: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0006d11d: push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x00075042: push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x0007637f: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x000bf065: push edi; push ebx; call eax; 
0x0012250d: push edi; push ebx; call edx; 
0x0006d18e: push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00107d49: push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00035ee5: push edi; push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0006ba86: push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00074ec3: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00066795: push edi; ret 0xffff; 
0x0003db98: push edi; ror byte ptr [ecx], cl; ret 0x840f; 
0x000697a3: push edi; std; cli; jmp dword ptr [esi - 0x70]; 
0x0012e044: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00161a18: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x0015d3a6: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0014a897: push edx; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008ebfa: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000322b3: push edx; add esi, eax; push esi; call edi; 
0x0015d3bb: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00124a79: push edx; call dword ptr [eax + 0x10]; 
0x0012e0db: push edx; call dword ptr [eax + 0x14]; 
0x0012fce8: push edx; call dword ptr [eax + 0xc]; 
0x00139792: push edx; call dword ptr [eax + 4]; 
0x0013173b: push edx; call dword ptr [eax]; 
0x0012e23a: push edx; call dword ptr [ecx + 0x10]; 
0x0012377c: push edx; call dword ptr [ecx + 0xc]; 
0x0012377c: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0012ba9b: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00040d43: push edx; call eax; 
0x0007131f: push edx; call esi; 
0x000c5d71: push edx; cmc; inc ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfc; call dword ptr gs:[0x10]; 
0x00063918: push edx; cmc; out 0xff, eax; jmp eax; 
0x0015d74b: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015d50b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015d7db: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015d5ab: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015d87b: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00087afa: push edx; idiv bh; call dword ptr [ebx + 0x56]; 
0x000fecdc: push edx; idiv bh; dec dword ptr [ebp - 0x5686b7d]; call dword ptr [eax - 0x73]; 
0x000c2fc4: push edx; inc edi; cli; call dword ptr [eax - 0x73]; 
0x0009fd08: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000e4ce7: push edx; lea edx, [ebp - 0x11c]; push 0x100; push edx; push eax; call ebx; 
0x000e5286: push edx; lea edx, [ebx + 0x2348]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001175e8: push edx; lea edx, [ebx + 0x2c50]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012f179: push edx; lea edx, [ebx + 0x3420]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0010c738: push edx; lea edx, [ebx - 0xd7ab0]; push edx; call eax; 
0x00071129: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00068234: push edx; lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x00071208: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001247a7: push edx; lea edx, [esi - 0xbf520]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001248d0: push edx; lea edx, [esi - 0xbf520]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x0015d769: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x001269bd: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00124991: push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00078703: push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000beecd: push edx; mov eax, 0x196; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c70cd: push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00051e69: push edx; mov eax, dword ptr [eax + 0x1a70]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007112d: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000f73cd: push edx; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000f74ad: push edx; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0012db87: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xd0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x000e2f58: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0007c454: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00135e1c: push edx; or byte ptr [ecx], bh; ret 0x3675; 
0x00147d3a: push edx; pop eax; cld; jmp dword ptr [esi - 0x70]; 
0x0007383c: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007372c: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0003210a: push edx; pop ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f5081: push edx; push 0; push eax; call 0xf4e80; add esp, 0x1c; ret; 
0x00108169: push edx; push 0x2000001; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x14]; 
0x001247ae: push edx; push 1; push ebx; call dword ptr [eax]; 
0x00068238: push edx; push 1; push esi; call eax; 
0x00040f6c: push edx; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001248d7: push edx; push 2; push ebx; call dword ptr [eax]; 
0x0012e81d: push edx; push 4; push ebx; call dword ptr [eax]; 
0x00025797: push edx; push dword ptr [eax + 0xfc0]; call 0xfc9f0; add esp, 0x1c; ret; 
0x0005ea38: push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000648aa: push edx; push dword ptr [ebp - 0x89c]; call dword ptr [ebx + 0x1c]; 
0x00064619: push edx; push dword ptr [ebp - 0x8cc]; push dword ptr [ebp - 0x89c]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x000ef43d: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000f80bf: push edx; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x10; add esp, 0xc; ret; 
0x00070100: push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x0010d345: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x604c0; add esp, 0x1c; ret; 
0x0010e335: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x65770; add esp, 0x1c; ret; 
0x0010e985: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72600; add esp, 0x1c; ret; 
0x0010e9e5: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x727d0; add esp, 0x1c; ret; 
0x0010ea45: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72c60; add esp, 0x1c; ret; 
0x000fa905: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0xfa2a0; add esp, 0x1c; ret; 
0x0010d1e8: push edx; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x0010e267: push edx; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0010d277: push edx; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x000b6c96: push edx; push eax; call 0xb3670; add esp, 0x1c; ret; 
0x000b3300: push edx; push eax; call 0xb53f0; add esp, 0x1c; ret; 
0x000c7edf: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000e4cf3: push edx; push eax; call ebx; 
0x0012e65c: push edx; push eax; call edi; 
0x000700a2: push edx; push eax; mov esi, dword ptr [esp + 0x1c]; push esi; call dword ptr [ebx + 0x40]; 
0x00139c80: push edx; push eax; push dword ptr [esp + 0x40]; lea eax, [esp + 0x60]; push eax; call ecx; 
0x0013e4b8: push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x000750ab: push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x00070cd8: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00077245: push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0013e922: push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0013e5bc: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0013f574: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00066f16: push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x00126fd0: push edx; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00124db5: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x001321fa: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0012b50c: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0012667d: push edx; push ebx; call dword ptr [eax + 4]; 
0x0012663d: push edx; push ebx; call dword ptr [eax]; 
0x00080544: push edx; push ebx; call eax; 
0x001324b2: push edx; push ecx; call dword ptr [eax + 0x20]; 
0x001324e1: push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00131ae1: push edx; push ecx; call dword ptr [eax + 4]; 
0x00131ab2: push edx; push ecx; call dword ptr [eax]; 
0x0007bdd6: push edx; push ecx; push eax; call 0x9dc80; add esp, 0x1c; ret; 
0x0006f5cf: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0011b8b2: push edx; push edi; call eax; 
0x0007587e: push edx; push esi; call dword ptr [eax + 0x48]; 
0x001315c7: push edx; push esi; call dword ptr [eax + 0xc]; 
0x00129f56: push edx; push esi; call dword ptr [eax + 4]; 
0x00131607: push edx; push esi; call dword ptr [eax + 8]; 
0x00067c09: push edx; push esi; call dword ptr [ebx + 0x1c]; 
0x0011b97a: push edx; push esi; call eax; 
0x00075be1: push edx; push esi; call ecx; 
0x000626f1: push edx; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0015dbe8: push edx; ret 0xc2bb; 
0x0015db48: push edx; ret; 
0x0001dc5f: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013d673: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x0006adf3: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013da41: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b411: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040dc9: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x3c]; push edx; call eax; 
0x00109baa: push edx; sahf; bnd jmp dword ptr [esi - 0x70]; 
0x00074d45: push edx; sbb al, 0x89; ret 0x1b8; 
0x000f939a: push edx; sbb al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000d9c9a: push edx; sbb al, 0xf6; ret 0xf08; 
0x0015dc0b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015dcbb: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015db6b: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c5ae2: push edx; sti; dec dword ptr [ecx + 0x1db8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010eb11: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000728e5: push edx; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x001305ca: push edx; xchg esp, eax; out dx, eax; call dword ptr [eax - 0x73]; 
0x000f7b9a: push edx; xor al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0015d3d0: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x000dab76: push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0014f881: push es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014faac: push es; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00120bca: push es; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb byte ptr [eax - 0x60], 0xfa; call dword ptr [eax - 0x18]; 
0x00088305: push es; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0011deb1: push es; add byte ptr [eax], al; add byte ptr [ebp - 0x5a17343], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0011ddd9: push es; add byte ptr [eax], al; add byte ptr [ebp - 0x5a17a43], cl; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x00119618: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x001372ed: push es; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x000f97ed: push es; add byte ptr [eax], al; add byte ptr [ecx + 0xfa6f3de], cl; xchg edi, eax; ret 0xda80; 
0x000f25f1: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00022a95: push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0001fd64: push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00035eb8: push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0016801b: push es; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov edx, dword ptr [ebx + esi*4 - 0x53538]; add edx, ebx; jmp edx; 
0x0015d7a2: push es; add byte ptr [eax], al; pop ebx; ret; 
0x0008e7ef: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00094d8a: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ad9a4: push es; add byte ptr [ebp - 0x56fcf7b], cl; call dword ptr [eax - 0x73]; 
0x0009f9e1: push es; add byte ptr [ebp - 0x572037e], cl; call dword ptr [eax - 0x73]; 
0x0011d891: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00032a4e: push es; add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000344da: push es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000a48e8: push es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x000ad4e3: push es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000a04ec: push es; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x0009fee0: push es; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x000a01e0: push es; add byte ptr [ebx - 0x72e3dba4], cl; or dword ptr [eax - 0x72], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x000d1733: push es; add byte ptr [ecx + 0x1128cbc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x0008b04a: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000846e3: push es; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0008b11a: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x00162a7b: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0006e2f1: push es; add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0008720c: push es; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x001454df: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f471d: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x00132c34: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x00100e24: push es; add esp, 0x74; pop ebx; pop esi; ret; 
0x00078511: push es; add esp, 4; pop ebx; pop esi; ret; 
0x000a4dbb: push es; cli; jmp dword ptr [esi - 0x70]; 
0x00042d36: push es; cmp byte ptr [eax - 1], 0x2f; jne 0x42d30; add esp, 8; pop ebx; ret; 
0x00026a73: push es; das; cli; call dword ptr [edx + 0x50]; 
0x00161942: push es; jb 0x1619c0; lea eax, [edi + 5]; pop edi; ret; 
0x00162962: push es; jb 0x1629e0; lea eax, [eax + 5]; pop edi; ret; 
0x00101d46: push es; jbe 0x101d10; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00162002: push es; jl 0x162080; lea eax, [ecx + 6]; ret; 
0x0008eb93: push es; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef93: push es; jne 0x8ee51; pop ebx; ret; 
0x00093404: push es; jne 0x932a1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00094b71: push es; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000961b4: push es; jne 0x96b70; pop edi; pop esi; pop ebx; ret; 
0x0009cef9: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000967c1: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x0009cc39: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000911d1: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x00091331: push es; lea eax, [edx + 0xd]; ret; 
0x0008eb90: push es; lea ecx, [edx + 6]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef90: push es; lea ecx, [edx + 6]; jne 0x8ee51; pop ebx; ret; 
0x00098d03: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00154b58: push es; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x000fab27: push es; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x0006e9ce: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000343b6: push es; mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0013e5f0: push es; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00119b6f: push es; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0009c224: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098db1: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00085027: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0009b5d4: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x0008cdf1: push es; mov eax, edi; pop edi; ret; 
0x0008cf51: push es; mov eax, edx; ret; 
0x0009f3c9: push es; mov eax, esi; pop ebx; pop esi; ret; 
0x0015a0c7: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x75b80]; mov eax, dword ptr [ebx + eax*4 - 0x75b80]; sub eax, ecx; pop ebx; ret; 
0x000eae2d: push es; mov ecx, dword ptr [edx + eax*4 - 0x5f0c0]; add ecx, edx; jmp ecx; 
0x00098df3: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009c256: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098de3: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095113: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x0009c156: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098cf3: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00098da8: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095023: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x00095a5c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x00095bbc: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x0009b5cf: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x0009441c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x0009457c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000911c8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x00091328: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x0008cde8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x0008cf48: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00157a1c: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x00156203: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00095fef: push es; outsd dx, dword ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ff1c0: push es; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000f59b9: push es; pop ebx; pop esi; pop edi; ret; 
0x0008b120: push es; pop ebx; pop esi; ret; 
0x00034f63: push es; pop ebx; ret; 
0x0014f0f0: push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001526da: push es; pop edi; call 0x13cee5; add ebx, 0x3dd5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d38a: push es; pop edi; call 0x13cee5; add ebx, 0x428ef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014b31a: push es; pop edi; call 0x13cee5; add ebx, 0x446df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014931a: push es; pop edi; call 0x13cee5; add ebx, 0x4645f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000950e1: push es; pop edi; pop esi; pop ebx; ret; 
0x0009113c: push es; pop edi; ret; 
0x0012e0ed: push es; push eax; call dword ptr [edx + 0x14]; 
0x000b7186: push es; ret 0xffff; 
0x0009126c: push es; ret; 
0x000e1e54: push es; setne al; movzx eax, al; ret; 
0x00157a20: push es; sub eax, ecx; pop ebp; ret; 
0x00156207: push es; sub eax, ecx; ret; 
0x0002568e: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x001268c9: push esi; adc byte ptr [ebx], ch; push esi; or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x0007f5ea: push esi; adc byte ptr [ecx], bh; ret 0x3973; 
0x00094fd4: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e685235; pop ebx; ret; 
0x0007120a: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00094ff3: push esi; add al, 0x89; js 0x5e685453; pop ebx; ret; 
0x00095004: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x00144f85: push esi; add al, 9; ret 0x850f; 
0x0003a899: push esi; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi - 6], edx; call dword ptr [eax - 0x18]; 
0x0009c136: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ce3: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00095013: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000dcdd1: push esi; and al, 0xe9; ret; 
0x00144faf: push esi; and al, 9; ret 0x850f; 
0x0010791a: push esi; and byte ptr [ebx + 0x46c710c4], al; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4689; 
0x0013e5b5: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00107954: push esi; and byte ptr [esi + 0x5f], bl; ret; 
0x000f598b: push esi; bnd jmp dword ptr [esi - 0x70]; 
0x00123856: push esi; call 0x125720; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0016b62f: push esi; call 0x139490; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0011730f: push esi; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0001bf03: push esi; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x00027419: push esi; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b986: push esi; call 0x681123df; add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00124021: push esi; call dword ptr [eax + 0x10]; 
0x0012403f: push esi; call dword ptr [eax + 0x14]; 
0x00060d2a: push esi; call dword ptr [eax + 0x1c]; 
0x000dfc54: push esi; call dword ptr [eax + 0x20]; 
0x0006bc62: push esi; call dword ptr [eax + 0x2c]; 
0x0006e2fe: push esi; call dword ptr [eax + 0x34]; 
0x0013ea94: push esi; call dword ptr [eax + 0x40]; 
0x0007587f: push esi; call dword ptr [eax + 0x48]; 
0x001240ee: push esi; call dword ptr [eax + 0xc]; 
0x00123fda: push esi; call dword ptr [eax + 4]; 
0x00131608: push esi; call dword ptr [eax + 8]; 
0x0007d7af: push esi; call dword ptr [eax]; 
0x00078932: push esi; call dword ptr [ebp + 0x30]; 
0x00075a52: push esi; call dword ptr [ebp + 0x40]; 
0x0013f25e: push esi; call dword ptr [ebp + 0x44]; 
0x000765dc: push esi; call dword ptr [ebp + 0xc]; 
0x000728eb: push esi; call dword ptr [ebp + 8]; 
0x00060616: push esi; call dword ptr [ebx + 0x1c]; 
0x0006be2c: push esi; call dword ptr [ebx + 0x2c]; 
0x0006950c: push esi; call dword ptr [ebx + 0x30]; 
0x0006bef8: push esi; call dword ptr [ebx + 0x34]; 
0x00076170: push esi; call dword ptr [ebx + 0x38]; 
0x000700a8: push esi; call dword ptr [ebx + 0x40]; 
0x00068ded: push esi; call dword ptr [ebx + 0x48]; 
0x00124cb0: push esi; call dword ptr [ebx + 0xc]; 
0x0006e8aa: push esi; call dword ptr [edi + 0x18]; 
0x00078589: push esi; call dword ptr [edi + 0x34]; 
0x0013e5be: push esi; call dword ptr [edi + 0x38]; 
0x00075ab4: push esi; call dword ptr [edi + 0x40]; 
0x0013f3a7: push esi; call dword ptr [edi + 0x44]; 
0x00075b8c: push esi; call dword ptr [edx + 0x40]; 
0x0013e79b: push esi; call dword ptr [edx + 0x48]; 
0x000273de: push esi; call eax; 
0x000a0366: push esi; call ebx; 
0x00075be2: push esi; call ecx; 
0x000322b6: push esi; call edi; 
0x00068754: push esi; call edx; 
0x00128593: push esi; cld; jmp dword ptr [ebp - 0x77]; 
0x00101efd: push esi; cli; call dword ptr [eax + 0x52]; 
0x00104866: push esi; cli; call dword ptr [eax + 0x53]; 
0x000fd1ae: push esi; cli; call dword ptr [eax + 0x6a]; 
0x00100fe9: push esi; cli; call dword ptr [eax - 0x18]; 
0x00100fe9: push esi; cli; call dword ptr [eax - 0x18]; dec esi; jle 0x100fe3; jmp dword ptr [esi - 0x70]; 
0x00104df4: push esi; cli; call dword ptr [eax - 0x73]; 
0x0010196f: push esi; cli; jmp dword ptr [ebp - 0x75]; 
0x00084a79: push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x00160236: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001601c7: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000f58f2: push esi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0010bd3c: push esi; inc ebp; mov eax, 0x837d7440; in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0008441d: push esi; inc ebx; pop ebx; add al, 0x5b; cmovne eax, ecx; ret; 
0x0009f5fd: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0010bc36: push esi; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0010bad8: push esi; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0010c18b: push esi; mov dword ptr [ebp - 0x44], ecx; push dword ptr [ebp - 0xbc]; push edx; call eax; 
0x0010c038: push esi; mov dword ptr [ebp - 0x44], edx; push dword ptr [ebp - 0xbc]; push ebx; call eax; 
0x000bef49: push esi; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0002a485: push esi; mov eax, dword ptr [eax + 0x1a5c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012bbd3: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000626f2: push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000327a8: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012d596: push esi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012a1cb: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00129f89: push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x001251eb: push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0010b578: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x10b588; add esp, 8; pop ebx; ret; 
0x000b4692: push esi; or al, 0x29; ret 0x428d; 
0x001268cc: push esi; or al, 0x83; les eax, ptr [ecx + eax]; ret 0x5e5b; 
0x00034254: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x001094d1: push esi; or al, 0xf6; ret 0x7504; 
0x0004da66: push esi; or al, 0xf6; ret 0xf01; 
0x00094c16: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9313: push esi; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x000d1ab5: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0012efb4: push esi; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0013ea2d: push esi; or byte ptr [ecx], ch; ret 0x448b; 
0x000760ef: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00096216: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00098f77: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00108c27: push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012ef91: push esi; push 3; push edi; call dword ptr [eax]; 
0x0010a8fe: push esi; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x00064038: push esi; push dword ptr [ebp - 0x8cc]; push dword ptr [ebp - 0x89c]; call dword ptr [ebx + 0x1c]; 
0x000847ac: push esi; push dword ptr [ebx + 0x1ee4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00083450: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00126eb1: push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000322fc: push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00074bbf: push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x000322c8: push esi; push dword ptr [esp + 0x34]; call edi; 
0x0006ce6e: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00066458: push esi; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00082987: push esi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call eax; 
0x00082afc: push esi; push dword ptr [esp + 0x6c]; call eax; 
0x00082c7c: push esi; push dword ptr [esp + 0x6c]; push ebp; call eax; 
0x00123ff2: push esi; push eax; call dword ptr [edx + 4]; 
0x0012e2bc: push esi; push eax; call dword ptr [edx]; 
0x00126780: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0005d93c: push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00065fb3: push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x00074d41: push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0012b4f6: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0006ba87: push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00074ec4: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00124ebe: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0006294c: push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0005f394: push esi; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x00125562: push esi; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000648a9: push esi; push edx; push dword ptr [ebp - 0x89c]; call dword ptr [ebx + 0x1c]; 
0x00066f15: push esi; push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x00125561: push esi; push esi; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000688fa: push esi; ret 0x7504; 
0x000d7afd: push esi; ret 0xf01; 
0x00162875: push esi; ret 0xf02; 
0x0004b079: push esi; ret 0xf40; 
0x0004df94: push esi; ret 0xf50; 
0x0013a7cf: push esi; ret 0xf60; 
0x00059c51: push esi; ret; 
0x0002a66c: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013e964: push esi; sbb al, 0x85; ror byte ptr [edi], 0x85; ret 1; 
0x00072c13: push esi; sbb byte ptr [ecx - 0x3b7cf3ad], cl; add al, 0x5b; pop esi; ret; 
0x0010a8f6: push esi; sbb eax, dword ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x001269a4: push esi; sub al, 0x89; ret; 
0x001269d4: push esi; sub al, 1; ret 0x5689; 
0x0007112b: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x001601f6: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001269d9: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x00085251: push esi; xor dword ptr [eax + 0x4000000], 0x1b70808d; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x0010cee1: push esi; xor dword ptr [eax + 0x4000000], 0x2160808d; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x00085171: push esi; xor dword ptr [eax + 0x4000000], 0x2170808d; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x00042e40: push esi; xor edi, edx; call dword ptr [eax - 0x18]; 
0x0001be91: push esp; adc byte ptr [edx], dl; add byte ptr [0x1c816b], al; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0002a62b: push esp; adc dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002a6e4: push esp; adc dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x505; 
0x0002a793: push esp; adc dword ptr [eax], eax; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x000f5d0f: push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f5d36: push esp; add byte ptr [eax], al; mov ebp, dword ptr gs:[edi]; call dword ptr gs:[0x10]; 
0x000f5fba: push esp; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5fe7: push esp; add byte ptr [eax], al; mov edx, 1; mov esi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f6049: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0xf6810; add esp, 0x1c; ret; 
0x000f9d24: push esp; and al, 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00123f1d: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001324db: push esp; and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x00131adb: push esp; and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x000e1dfb: push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001004a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00100062: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x000ecbf2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x000ef2a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x000ef1f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x000edd42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x000f6812: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ef222: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x000f6652: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x000ff252: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00100102: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000b6bf2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ffdb2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x000fae12: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x000fff32: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000fff62: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000e1ca2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001001b2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000c5d92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x000ee8a2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ee872: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000c6962: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000c6992: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x000ee842: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000faf12: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x000faee2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fdbe2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x000fdc42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x000fdb12: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000f632e: push esp; and al, 0x10; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0013220d: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0012b509: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131927: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318c4: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x001324af: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00131bbf: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00131aaf: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0011b8af: push esp; and al, 0x10; push edx; push edi; call eax; 
0x0011b977: push esp; and al, 0x10; push edx; push esi; call eax; 
0x000c21ba: push esp; and al, 0x10; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000b462e: push esp; and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x000f92ca: push esp; and al, 0x10; test ecx, ecx; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000bfa1f: push esp; and al, 0x10; xor al, 3; adc byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00101596: push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0007db58: push esp; and al, 0x14; call eax; 
0x000ffbdf: push esp; and al, 0x14; cmp esi, -1; je 0xffc00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000299de: push esp; and al, 0x14; mov eax, edx; add esp, 0xc; ret; 
0x001431eb: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00050f6c: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000ef257: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00100317: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe07: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00100257: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d67: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbb7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc17: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdae7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d97: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffd7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00145584: push esp; and al, 0x14; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00101674: push esp; and al, 0x14; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001269bf: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000c7edc: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00124db2: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x000ed714: push esp; and al, 0x14; test eax, eax; jne 0xed860; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000bf285: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0010d9ed: push esp; and al, 0x18; cmp edx, dword ptr [esp + 0x1c]; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x000df1b8: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000f599d: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000e1d9d: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x000faf4c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000ee8dc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef18c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003ac: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0010013c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0010002c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0010017c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0010021c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd1c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcac: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb7c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000ec820: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; jne 0xec848; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00145382: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; mov edi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f629f: push esp; and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00132df9: push esp; and al, 0x18; test edx, edx; jne 0x132e08; add esp, 0xc; ret; 
0x00132e39: push esp; and al, 0x18; test edx, edx; jne 0x132e48; add esp, 0xc; ret; 
0x0001b5a2: push esp; and al, 0x1c; add esp, 0x24; ret; 
0x0010d9f1: push esp; and al, 0x1c; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x000f6d4a: push esp; and al, 0x1c; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f702a: push esp; and al, 0x1c; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x001249d3: push esp; and al, 0x1c; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00145344: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4782: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000f4f0f: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x000ffe41: push esp; and al, 0x1c; mov ecx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x00101789: push esp; and al, 0x1c; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00034372: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034492: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x0013176d: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000fab51: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0006275b: push esp; and al, 0x20; push edx; call eax; 
0x0012e659: push esp; and al, 0x20; push edx; push eax; call edi; 
0x001455e8: push esp; and al, 0x24; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000ecc93: push esp; and al, 0x24; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00067c6f: push esp; and al, 0x24; push edx; call eax; 
0x000f5749: push esp; and al, 0x28; cmp ecx, 9; je 0xf5780; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001017dc: push esp; and al, 0x28; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x24]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000eced4: push esp; and al, 0x28; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012f762: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0006adff: push esp; and al, 0x28; push edx; call eax; 
0x00124993: push esp; and al, 0x2c; call dword ptr [eax]; 
0x000f8144: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x0013d9c5: push esp; and al, 0x30; push edx; call eax; 
0x001016ea: push esp; and al, 0x34; mov eax, 0x75; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x0012f6f2: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0009fd0e: push esp; and al, 0x34; push eax; push edi; call esi; 
0x0006b36f: push esp; and al, 0x34; push edx; call eax; 
0x0007587b: push esp; and al, 0x34; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000f5c82: push esp; and al, 0x38; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00031d13: push esp; and al, 0x38; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00031cba: push esp; and al, 0x38; mov eax, 0xb1; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ec673: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012fce5: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000c69eb: push esp; and al, 0x38; test esi, esi; jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aab: push esp; and al, 0x38; test esi, esi; jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00040d40: push esp; and al, 0x3c; push edx; call eax; 
0x00078705: push esp; and al, 0x40; call dword ptr [esi + 0xc]; 
0x000f4ea6: push esp; and al, 0x58; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x00060c4f: push esp; and al, 0x68; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00065ed9: push esp; and al, 0x78; movzx eax, byte ptr [esi + eax - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebx; jmp ecx; 
0x00132a55: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00069b4c: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x000f62a5: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00139b61: push esp; and al, 0xc; call esi; 
0x00132240: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131900: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0013ca4c: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000ffa42: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000f5492: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000ff547: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000f5552: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f69e4: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b54: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f4e22: push esp; and al, 0xc; mov dword ptr [esp + 4], eax; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f45f3: push esp; and al, 0xc; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000ecff4: push esp; and al, 0xc; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f799e: push esp; and al, 0xc; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f919a: push esp; and al, 0xc; mov eax, 0x140; mov ebx, 0xffffff9c; mov esi, 0x100; call dword ptr gs:[0x10]; 
0x00101518: push esp; and al, 0xc; mov eax, 0x75; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0002f573: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000c599c: push esp; and al, 0xc; mov ebp, eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000f6a9a: push esp; and al, 0xc; mov ebp, eax; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6c0a: push esp; and al, 0xc; mov ebp, eax; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010113a: push esp; and al, 0xc; mov ebp, eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0010142f: push esp; and al, 0xc; mov ebp, eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000f789a: push esp; and al, 0xc; mov ebp, eax; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000ea24a: push esp; and al, 0xc; mov ebp, eax; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2fa: push esp; and al, 0xc; mov ebp, eax; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000fad9c: push esp; and al, 0xc; mov ebp, eax; mov ecx, dword ptr [esp + 8]; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x000ec8c7: push esp; and al, 0xc; mov ecx, 0x54; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00143247: push esp; and al, 0xc; mov ecx, 0x80; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ed86e: push esp; and al, 0xc; mov ecx, dword ptr [esp + 0x54]; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ff822: push esp; and al, 0xc; mov edi, eax; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ecdb3: push esp; and al, 0xc; mov edi, eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ff8d2: push esp; and al, 0xc; mov edi, eax; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff982: push esp; and al, 0xc; mov edi, eax; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001011e2: push esp; and al, 0xc; mov edi, eax; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58e2: push esp; and al, 0xc; mov edi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ffaf2: push esp; and al, 0xc; mov esi, eax; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x000352c2: push esp; and al, 0xc; mov esi, eax; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x000fae92: push esp; and al, 0xc; mov esi, eax; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000f6892: push esp; and al, 0xc; mov esi, eax; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f6932: push esp; and al, 0xc; mov esi, eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f4482: push esp; and al, 0xc; mov esi, eax; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000ed0f2: push esp; and al, 0xc; mov esi, eax; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed192: push esp; and al, 0xc; mov esi, eax; mov eax, 4; call dword ptr gs:[0x10]; 
0x000ed96a: push esp; and al, 0xc; mov esi, eax; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00060b27: push esp; and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62b80]; add ecx, ebp; jmp ecx; 
0x00060f70: push esp; and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x62c00]; add ecx, ebp; jmp ecx; 
0x001321f7: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00132244: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00131904: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x001318af: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00131c5f: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0010102f: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea1: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011ceed: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11cefd; add esp, 0x1c; ret; 
0x0013f8ef: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x00050e7e: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000bc708: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee08: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3e7: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec118: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec16f: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000f5f5e: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75cb: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xf75db; add esp, 0x1c; ret; 
0x000f926a: push esp; and al, 0xc; xor ecx, ecx; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000f6e25: push esp; and al, 4; call dword ptr gs:[0x10]; 
0x0007ae2f: push esp; and al, 4; jmp dword ptr [eax]; 
0x00069b8f: push esp; and al, 4; jmp eax; 
0x000f6ed6: push esp; and al, 4; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b6: push esp; and al, 4; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000453f9: push esp; and al, 4; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x14; ret; 
0x000f56f5: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00029385: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00029395: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00028c1b: push esp; and al, 4; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x001326b1: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0002fb6c: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000bf54e: push esp; and al, 4; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0007b67b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b65b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b62b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x120], edx; ret; 
0x0007b5db: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x0007b5ab: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x138], edx; ret; 
0x0007b70b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x15c], edx; ret; 
0x0007b60b: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x0007a761: push esp; and al, 4; setae al; ret; 
0x001240ac: push esp; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0013ca75: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x00132e9d: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000ea985: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000f5e6f: push esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00079a15: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0013ca25: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00027445: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0002f8e4: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000f7b77: push esp; and al, 8; mov ebx, 0xfee1dead; mov ecx, 0x28121969; call dword ptr gs:[0x10]; 
0x000f2a65: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x000f42c5: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00069aa0: push esp; and al, 8; pop ebx; jmp eax; 
0x001323d8: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x001265e8: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0014ac8d: push esp; and bh, bh; inc dword ptr [ecx + 0x44d6fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f5bbf: push esp; bnd jmp dword ptr [esi - 0x70]; 
0x000bf48c: push esp; call dword ptr gs:[0x10]; 
0x000b3b20: push esp; call eax; 
0x000fe19e: push esp; cli; call dword ptr [eax + 0x52]; 
0x00139f65: push esp; cli; call dword ptr [eax + 0x6a]; 
0x00139f65: push esp; cli; call dword ptr [eax + 0x6a]; add ch, al; jmp dword ptr [ecx - 0xf]; 
0x000fe1e0: push esp; cli; call dword ptr [edi + 0x57]; 
0x00109973: push esp; cwde; cli; call dword ptr [eax - 0x18]; 
0x00109973: push esp; cwde; cli; call dword ptr [eax - 0x18]; ret; 
0x0011f491: push esp; fiadd dword ptr [ecx]; add byte ptr [0xc4b6b], al; mov eax, dword ptr [eax - 0x18]; mov eax, dword ptr gs:[eax]; ret; 
0x00128eca: push esp; hlt; call dword ptr [eax - 0x18]; 
0x000c716f: push esp; inc esi; push ebx; setne al; ret; 
0x000721dc: push esp; jle 0x721d9; call dword ptr [ebx - 0x7d]; 
0x000c7051: push esp; jne 0xc7060; lea esi, [esi]; mov eax, 0x40; ret; 
0x000ff32f: push esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x95; call dword ptr gs:[0x10]; 
0x000f4536: push esp; mov eax, 0x19e; mov edi, 8; call dword ptr gs:[0x10]; 
0x000fd868: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x000ff6ec: push esp; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000f45b6: push esp; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000f4ea4: push esp; mov edx, dword ptr [esp + 0x58]; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; call dword ptr gs:[0x10]; 
0x000f45f1: push esp; mov edx, dword ptr [esp + 0xc]; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000bf54c: push esp; mov edx, dword ptr [esp + 4]; mov edi, eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000bf50a: push esp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000bf437: push esp; mov edx, edi; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000ed82c: push esp; mov edx, esi; mov edi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0002613c: push esp; mov esi, 0xc05589fc; mov edx, dword ptr [ebx + edi*4 - 0x3e4]; test edx, edx; je 0x2614f; call edx; 
0x000ed874: push esp; mov esi, eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f65c0: push esp; pop ebx; pop esi; ret; 
0x0001f792: push esp; push dword ptr [esp + 0x5c]; call edi; 
0x000fe201: push esp; push ebp; cli; call dword ptr [esi + 0x56]; 
0x000ad852: push esp; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x0013cb06: push esp; ret; 
0x0011773e: push esp; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00044979: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000fd3dd: push esp; xchg edi, eax; cli; call dword ptr [eax - 0x73]; 
0x0003a8a0: push esp; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000f51ea: push esp; xor eax, eax; ret; 
0x0016ba97: push ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add ebx, 0x2f; cli; call dword ptr [eax - 0x18]; 
0x000f2a79: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00031079: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00030d79: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003186d: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop edi; ret; 
0x00030ea9: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000fbd91: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007b554: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00081d16: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00069cb0: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000ea955: push ss; add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff00; 
0x0007967a: push ss; add byte ptr [ebx + 0x16a14ec], al; call 0x78f20; add esp, 0x18; pop ebx; ret; 
0x0007c018: push ss; add byte ptr [ebx - 0x5b46e714], al; add al, byte ptr [eax]; add byte ptr [ebp - 0x5768770], cl; call dword ptr [edx - 0x73]; 
0x0007b699: push ss; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x7b6b0; ret; 
0x0007b569: push ss; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x0007b6d9: push ss; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x7b6f0; ret; 
0x0007b729: push ss; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x00074fee: push ss; add byte ptr [ebx - 0x77], dl; ret; 
0x00078cfa: push ss; add byte ptr [ebx - 0x7c72eb14], al; push eax; add al, 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000f504d: push ss; add esp, 0x34; pop ebx; pop esi; ret; 
0x000f5819: push ss; add esp, 4; pop ebx; pop esi; ret; 
0x0009d149: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000fecf2: push ss; dec ebp; cli; call dword ptr [eax - 0x18]; 
0x000cd0ba: push ss; dec ecx; cli; call dword ptr [eax - 0x18]; 
0x00076ba8: push ss; ja 0x76be0; movzx eax, al; mov edi, dword ptr [ebp + eax*4 - 0x62100]; add edi, ebp; jmp edi; 
0x00094db7: push ss; jne 0x95470; pop edi; pop esi; pop ebx; ret; 
0x000b1626: push ss; js 0xb1620; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x0009cee9: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x0009cc29: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x00094fb1: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x0009c0e4: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098ca1: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ff241: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00094fe1: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000eb39b: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009c0b5: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00098c82: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00094fc2: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x001055c0: push ss; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x0008aac7: push ss; pop ebx; pop esi; ret; 
0x000968b4: push ss; pop edi; pop esi; pop ebx; ret; 
0x0007b516: push ss; push 0x3c890006; and al, 0x89; ret; 
0x000f610c: push ss; ret; 
0x000f0dcb: push ss; rol dword ptr [eax + eax], 0x81; ret; 
0x0016b843: push ss; std; inc dword ptr [ecx + 0x787bac3]; add byte ptr [ebx - 0x7c72ef14], al; add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x0001910f: push ss; sub al, 0xfa; call dword ptr [eax - 0x18]; 
0x001365ce: push ss; sub ebp, esi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00149714: pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006660d: pushal; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000f6612: pushal; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8b08ec], al; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00074345: pushal; add cl, ch; call dword ptr [eax - 0x73]; 
0x00067343: pushal; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0004d842: pushal; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0003a7c5: pushal; add eax, 0x8d500000; xchg dword ptr [ebx + esi*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x000ee7d2: pushal; add esp, 0xd4; pop ebx; pop esi; ret; 
0x00126183: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000c465a: pushal; and al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001210da: pushal; cli; call dword ptr [eax + 0x57]; 
0x0013328a: pushal; cli; call dword ptr [eax + 0x6a]; 
0x001217a5: pushal; cli; call dword ptr [eax - 0x18]; 
0x00123bf3: pushal; cli; call dword ptr [eax - 0x39]; 
0x00123355: pushal; cli; call dword ptr [eax - 0x73]; 
0x00128223: pushal; cli; call dword ptr [eax - 1]; 
0x00121fe5: pushal; cli; call dword ptr [edi + 0x6a]; 
0x000e5310: pushal; fsubp st(7); call dword ptr [edx + 0x6a]; 
0x0009379c: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0005ee78: pushal; idiv edi; call dword ptr [eax]; 
0x00064fb5: pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x00065077: pushal; idiv edi; call dword ptr [ecx + 0x6a]; 
0x00064615: pushal; idiv edi; call dword ptr [edx - 1]; 
0x000648a5: pushal; idiv edi; call dword ptr [esi + 0x52]; 
0x00064034: pushal; idiv edi; call dword ptr [esi - 1]; 
0x0008f2ac: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0012e3fe: pushal; inc ecx; hlt; call dword ptr [edx - 0x73]; 
0x0006cdf7: pushal; into; cli; jmp dword ptr [esi - 0x70]; 
0x0013c67c: pushal; je 0x13c672; call dword ptr [ebp - 0x47]; 
0x00126efc: pushal; jge 0x126efd; call dword ptr [ebp + 0x57]; 
0x0013cc68: pushal; jne 0x1a694; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000b15dc: pushal; js 0xb15d6; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x0003aaa1: pushal; lodsd eax, dword ptr [esi]; cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0012f9f0: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012a172: pushal; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x0001e4b8: pushal; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0001dfb8: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00131495: pushal; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00077828: pushal; or al, 0; add byte ptr [ebp - 0x74ee8b40], al; pop eax; xor al, 0x39; ret 0x850f; 
0x0009610c: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007b462: pushal; or dh, bh; xor eax, eax; ret; 
0x0007280f: pushal; out 0xff, al; call dword ptr [eax - 0x73]; 
0x00069314: pushal; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x00151ea2: pushal; out 3, al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00133013: pushal; out dx, al; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000853bc: pushal; popal; idiv edi; cmovne edx, eax; mov eax, edx; ret; 
0x0001eb0e: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00139c89: pushal; push eax; call ecx; 
0x0011a38f: pushal; pushfd; cli; call dword ptr [eax - 0x73]; 
0x000807bc: pushal; ret 0xffff; 
0x00138bf3: pushal; std; jmp dword ptr [esi - 0x70]; 
0x00072dbc: pushal; sti; dec dword ptr [ebp - 0x5847b7d]; call dword ptr [eax - 0x73]; 
0x000e3560: pushal; xchg ebx, eax; cli; call dword ptr [eax - 0x18]; 
0x00026791: pushal; xchg esp, eax; clc; call dword ptr [eax - 0x18]; 
0x000e35ec: pushal; xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x001646ff: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000312a6: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0012fbca: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push ebx; call eax; 
0x00031240: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x10748], cl; jmp dword ptr [ebp - 0x75]; 
0x00040339: pushfd; add byte ptr [eax], al; add byte ptr [ecx - 0x76b7dbb4], cl; ret 0xe2d3; 
0x000aaf8d: pushfd; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000310cb: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0013a09e: pushfd; and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebx - 0x17f68], cl; jmp dword ptr [ebp - 0x75]; 
0x000daa6d: pushfd; and al, 0xcc; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0012db8c: pushfd; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000c22d6: pushfd; and dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011a3a3: pushfd; cli; call dword ptr [eax - 0x18]; 
0x0011b5a5: pushfd; cli; call dword ptr [eax - 0x18]; xchg edx, eax; fdiv st(0); jmp dword ptr [esi - 0x70]; 
0x0011a390: pushfd; cli; call dword ptr [eax - 0x73]; 
0x0005ed0c: pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x000daf70: pushfd; idiv edi; call dword ptr [eax - 1]; 
0x0006fad0: pushfd; jp 0x6facd; call dword ptr [eax - 0x73]; 
0x000cec5a: pushfd; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000e42c9: pushfd; or dword ptr [eax], eax; add byte ptr [ebx - 0x18773], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011340c: pushfd; pop edx; cli; call dword ptr [eax - 0x73]; 
0x001063d1: pushfd; push esi; cli; call dword ptr [eax + 0x53]; 
0x0012335b: pushfd; pushal; cli; call dword ptr [eax - 0x18]; 
0x0009efab: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x000da080: pushfd; ret 0x743b; 
0x000401c7: pushfd; ret 0xc589; 
0x0003d1ba: pushfd; ret 0xc789; 
0x000cd28a: pushfd; sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00051db5: pushfd; xchg dword ptr [eax + ecx*8 - 7], esi; inc dword ptr [ecx]; sti; jmp ebx; 
0x000efcf9: pushfd; xchg esi, eax; cli; call dword ptr [eax - 0x73]; 
0x000a44bf: pushfd; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbb4], cl; ret 0xe2d3; 
0x0002a2a3: pushfd; xor edx, edi; call dword ptr [eax - 0x18]; 
0x0006f5cd: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x000dd535: rcl byte ptr [eax + 0x53], 0xe8; ret; 
0x00126eaf: rcl byte ptr [eax + 0x56]; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00135daf: rcl byte ptr [eax - 0x73], 0x87; mov ah, byte ptr [eax - 6]; call dword ptr [eax + 0x6a]; 
0x0002795b: rcl byte ptr [eax], 0; add byte ptr [ecx + 0x10d086], cl; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x0016c188: rcl byte ptr [eax], 0x50; call 0x11c410; add esp, 0x1c; ret; 
0x0008b6b9: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x0010295b: rcl byte ptr [eax], 0x83; ret 0x3904; 
0x00154eff: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x00157d55: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x0014f78d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x00101ab4: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000b1939: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x0009bec4: rcl byte ptr [eax], 0xf; mov esp, 0x102be8d2; or al, byte ptr [eax]; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098bc4: rcl byte ptr [eax], 0xf; mov esp, 0x432be8d2; or al, byte ptr [eax]; add ecx, 0xe9746; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001023b2: rcl byte ptr [eax]; cmp eax, dword ptr [ecx + 0x26a4]; jae 0x1023c7; mov edx, dword ptr [ecx + 0x26a8]; add word ptr [edx + eax*2], 1; ret; 
0x001312dc: rcl byte ptr [edi - 0x18], cl; std; sal esi, 1; call ecx; 
0x0010c737: rcl byte ptr [edx - 0x73]; xchg ebx, eax; push eax; test edx, esi; call dword ptr [edx - 1]; 
0x000fb159: rcl dword ptr [eax - 0x73], 0x82; movsb byte ptr es:[edi], byte ptr [esi]; dec esp; cli; call dword ptr [eax + 0x53]; 
0x000fb71d: rcl dword ptr [eax - 0x73], 0x82; scasb al, byte ptr es:[edi]; dec esp; cli; call dword ptr [eax + 0x53]; 
0x0009cc95: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x0007c37b: rcl dword ptr [eax], 0x83; ret; 
0x00096031: rcl dword ptr [eax], 0xc2; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009c582: rcl dword ptr [ebx + 0x3000e5e], 0xc; cdq; jmp ecx; 
0x001269bb: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0014a831: rcl dword ptr [ecx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d01e3: rcl dword ptr [edi + 0xf], 0x94; rol byte ptr [ebp + 0xf5356d2], 0x94; ret; 
0x000e1d2b: rcl dword ptr [edx - 0x763c000d], 0xda; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x00102dbd: rcl ebx, 1; call 0x5b120e47; pop esi; pop edi; ret; 
0x00102e5d: rcl ebx, 1; call 0x5b120ee7; pop esi; pop edi; ret; 
0x00102efd: rcl ebx, 1; call 0x5b120f87; pop esi; pop edi; ret; 
0x00102f9d: rcl ebx, 1; call 0x5b121027; pop esi; pop edi; ret; 
0x001030dd: rcl ebx, 1; call 0x5b121167; pop esi; pop edi; ret; 
0x0010317d: rcl ebx, 1; call 0x5b121207; pop esi; pop edi; ret; 
0x0010321d: rcl ebx, 1; call 0x5b1212a7; pop esi; pop edi; ret; 
0x001032bd: rcl ebx, 1; call 0x5b121347; pop esi; pop edi; ret; 
0x0010335d: rcl ebx, 1; call 0x5b1213e7; pop esi; pop edi; ret; 
0x0010349d: rcl ebx, 1; call 0x5b121527; pop esi; pop edi; ret; 
0x00096bfd: rcl esp, 0xb6; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009488d: rcl esp, 0xd7; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000fe106: rcr byte ptr [eax + eax], 0x84; ror byte ptr [edi], 0x84; das; or al, 0; add byte ptr [ebp - 0x5ac6e7d], cl; call dword ptr [ecx + 0x51]; 
0x000fe0ce: rcr byte ptr [eax + eax], 0x84; ror byte ptr [edi], 0x84; ret; 
0x000c6ce1: rcr byte ptr [eax + eax], 0x84; sal byte ptr [ebp - 0x78], 0x83; in al, dx; add al, 0x8d; test dword ptr [ebx + ebp*8 - 1], eax; call dword ptr [eax - 1]; 
0x0001cee0: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00031b97: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0001e01b: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0010180f: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00041811: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0008ae71: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x0013fcbc: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x00033c2a: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0010b1ab: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000770d1: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x000c66d1: rcr byte ptr [ecx], 0; add byte ptr [ebp - 0x47d08a2e], al; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013f774: rcr byte ptr [ecx], 0; add byte ptr [ebp - 0x47e08a40], al; adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c69e6: rcr byte ptr [ecx], 0; add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aa6: rcr byte ptr [ecx], 0; add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ef324: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x0015e6f2: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x0007a062: rcr byte ptr [edi + 0x5d], 1; ret; 
0x001476b2: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0008b6ad: rcr byte ptr [edi + 0x5e], 1; ret; 
0x0012ba92: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00034a27: rcr byte ptr [edx + 0x5b], 0x5e; pop edi; pop ebp; ret; 
0x00080f0d: rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x001453d2: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000fbd15: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x00033c2d: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00043d0a: rcr byte ptr [esi + 0x5f], 1; ret; 
0x0009efac: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00043ca8: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0007bf84: rcr dword ptr [ebx - 0x77], 0xc8; pop esi; pop edi; pop ebp; ret; 
0x0011066d: rcr dword ptr [ecx - 6], 1; call dword ptr [eax - 0x73]; 
0x0011a6e7: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0009bfb6: rcr dword ptr [edi + 0x64], 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00096ce2: rcr dword ptr [edi - 0x4b], 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009bf76: rcr dword ptr [edi], 0x64; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001640e0: rcr dword ptr [edi], 0xf; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x0009c077: rcr dword ptr [esi + 0x3000e63], 0xc; cdq; jmp ecx; 
0x0007b726: rcr ebx, 0x88; push ss; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0xa7650f8], al; ret; 
0x00094a08: rcr ecx, 0xd6; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00095ee2: rcr edi, 0xc2; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ffca6: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000c0ce7: rdtsc; jmp dword ptr [esi - 0x77]; 
0x00126688: rdtsc; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0002e65e: rdtsc; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x2e645; ret; 
0x0009db9a: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0009d5a9: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x0009dc1d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0009dbf3: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d583: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000ea8fa: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0009dc5c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0009dcbb: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d5e2: rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x0009dcb7: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d5de: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00031860: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0001a8d1: ret 0; 
0x0002755f: ret 0x101; 
0x000686df: ret 0x107; 
0x0007ed49: ret 0x108; 
0x000ada13: ret 0x108b; 
0x00030c12: ret 0x10; 
0x00027cf9: ret 0x110; 
0x000330bc: ret 0x1174; 
0x00033f11: ret 0x1177; 
0x0001e845: ret 0x1189; 
0x00132e76: ret 0x118b; 
0x000c7d4c: ret 0x11; 
0x0001c5ca: ret 0x11ce; 
0x00122df6: ret 0x120b; 
0x001659b8: ret 0x1274; 
0x000bb28a: ret 0x128; 
0x0004be16: ret 0x12; 
0x0008678d: ret 0x1373; 
0x0007ad22: ret 0x1375; 
0x00033efe: ret 0x1376; 
0x000f6566: ret 0x1389; 
0x0005a746: ret 0x13; 
0x000f1ca2: ret 0x1403; 
0x0005a21a: ret 0x142; 
0x0001d156: ret 0x142b; 
0x0013aab1: ret 0x143b; 
0x000424b1: ret 0x1477; 
0x00039e76: ret 0x1489; 
0x0011e9fb: ret 0x1574; 
0x0008dd0a: ret 0x15; 
0x000f2a56: ret 0x15ab; 
0x000b6f61: ret 0x15eb; 
0x00083c27: ret 0x1674; 
0x0009cc27: ret 0x1676; 
0x0009cee7: ret 0x167c; 
0x0011db21: ret 0x168b; 
0x0005e834: ret 0x16; 
0x000b6c5e: ret 0x16d; 
0x000628e6: ret 0x171b; 
0x00067ddc: ret 0x17; 
0x000f5e11: ret 0x180; 
0x00057427: ret 0x1875; 
0x0001fe93: ret 0x18b; 
0x000b8f22: ret 0x190; 
0x000dc5dd: ret 0x1972; 
0x001078a4: ret 0x1977; 
0x00050b57: ret 0x197d; 
0x000ab294: ret 0x1a8b; 
0x0008d78a: ret 0x1a; 
0x000e18ec: ret 0x1ae9; 
0x0002f540: ret 0x1b4a; 
0x0011a74d: ret 0x1b72; 
0x0003c997: ret 0x1b8; 
0x0007dcb9: ret 0x1b9; 
0x0011d039: ret 0x1bb; 
0x000aaf80: ret 0x1c8b; 
0x000bcfc2: ret 0x1c8d; 
0x000a2d19: ret 0x1c; 
0x00150a2e: ret 0x1d72; 
0x0009c6ae: ret 0x1d75; 
0x000b738c: ret 0x1db9; 
0x00122246: ret 0x1dbb; 
0x000d10f5: ret 0x1e03; 
0x00043abe: ret 0x1e89; 
0x0002618a: ret 0x1f74; 
0x0016327e: ret 0x1f75; 
0x00119081: ret 0x1f77; 
0x000cdc64: ret 0x2000; 
0x0013f445: ret 0x202; 
0x0002fa5d: ret 0x2074; 
0x0013b57e: ret 0x20eb; 
0x00040901: ret 0x2174; 
0x00022d35: ret 0x21e9; 
0x00081da6: ret 0x225b; 
0x00031c56: ret 0x23ab; 
0x0009e4ea: ret 0x2474; 
0x00031b75: ret 0x2475; 
0x0001eb28: ret 0x2574; 
0x000e5fdf: ret 0x2674; 
0x0009cc17: ret 0x2676; 
0x0009ced7: ret 0x267c; 
0x00113d96: ret 0x26b; 
0x00071946: ret 0x26bb; 
0x00053cea: ret 0x26f; 
0x0009c6c9: ret 0x275; 
0x00052902: ret 0x27; 
0x00051836: ret 0x27cb; 
0x0008baba: ret 0x280f; 
0x000b1796: ret 0x286b; 
0x00133f75: ret 0x2875; 
0x00088e68: ret 0x28b; 
0x000b1716: ret 0x28eb; 
0x0004b6a2: ret 0x2901; 
0x000948c8: ret 0x2910; 
0x0011d778: ret 0x2937; 
0x0009cd68: ret 0x2940; 
0x000b90c0: ret 0x2964; 
0x00133333: ret 0x2a75; 
0x00074757: ret 0x2b01; 
0x000d931a: ret 0x2b75; 
0x0007b793: ret 0x2b8; 
0x000b3c0e: ret 0x2be9; 
0x0011e9f4: ret 0x2c3c; 
0x0015d3da: ret 0x2c73; 
0x00134e91: ret 0x2c75; 
0x0014c7fe: ret 0x2d72; 
0x0010a996: ret 0x2d74; 
0x000c992a: ret 0x2d; 
0x000410b6: ret 0x2f4b; 
0x0006d0e9: ret 0x3089; 
0x0003c3b4: ret 0x311c; 
0x0015dd9b: ret 0x3273; 
0x00108ce3: ret 0x3274; 
0x0007c762: ret 0x3276; 
0x000cdf96: ret 0x328b; 
0x0002d469: ret 0x3325; 
0x0016341a: ret 0x348d; 
0x00075424: ret 0x352; 
0x00049bb9: ret 0x3574; 
0x00135e1f: ret 0x3675; 
0x0009cec7: ret 0x367c; 
0x00083716: ret 0x3774; 
0x0008aab9: ret 0x3801; 
0x0009c693: ret 0x3875; 
0x000b4363: ret 0x38b; 
0x0001e089: ret 0x3901; 
0x0002ebda: ret 0x3903; 
0x00034950: ret 0x3904; 
0x00050b54: ret 0x3905; 
0x000b6914: ret 0x3909; 
0x0005e5a6: ret 0x3910; 
0x000dcd26: ret 0x3940; 
0x0008343a: ret 0x3964; 
0x0007f5ed: ret 0x3973; 
0x0009cc04: ret 0x3976; 
0x00025a6b: ret 0x3a3c; 
0x00163263: ret 0x3a75; 
0x0002ebfd: ret 0x3a80; 
0x000be9cb: ret 0x3a8; 
0x00033c56: ret 0x3ab; 
0x0008a85f: ret 0x3b01; 
0x000da8a3: ret 0x3b08; 
0x000f97bd: ret 0x3b80; 
0x000486e9: ret 0x3b8; 
0x00164bab: ret 0x3bb; 
0x00026978: ret 0x3c01; 
0x000b4719: ret 0x3c75; 
0x000bb430: ret 0x3c8d; 
0x000c217a: ret 0x3d; 
0x000c0206: ret 0x3dfb; 
0x0015d3c5: ret 0x3e73; 
0x000eeb85: ret 0x3e9; 
0x0009d1c7: ret 0x3f; 
0x00168432: ret 0x4000; 
0x00082423: ret 0x4089; 
0x00081d52: ret 0x408b; 
0x00026c53: ret 0x408d; 
0x0004a060: ret 0x40c7; 
0x00136928: ret 0x4174; 
0x000fc72b: ret 0x4189; 
0x0004d05b: ret 0x418d; 
0x000b43d0: ret 0x4240; 
0x0001e414: ret 0x428b; 
0x000b4695: ret 0x428d; 
0x0007e305: ret 0x430; 
0x0007392a: ret 0x4374; 
0x00127d72: ret 0x4388; 
0x001166b9: ret 0x4389; 
0x00053e1d: ret 0x438d; 
0x00084a22: ret 0x4401; 
0x0002c16d: ret 0x4403; 
0x0009fbe6: ret 0x441b; 
0x00049ee5: ret 0x4439; 
0x000f1bd4: ret 0x443b; 
0x000f1569: ret 0x4474; 
0x00107d5a: ret 0x4483; 
0x0002069f: ret 0x4489; 
0x0002febc: ret 0x448b; 
0x000baa7a: ret 0x448d; 
0x00022ab9: ret 0x44c7; 
0x0002fb37: ret 0x44ca; 
0x000b8b1d: ret 0x44f6; 
0x0011a6a8: ret 0x4572; 
0x00135308: ret 0x4575; 
0x0001bfa1: ret 0x4589; 
0x0001ba48: ret 0x458b; 
0x000a3547: ret 0x458d; 
0x00068758: ret 0x4689; 
0x00024d20: ret 0x468b; 
0x00056a2f: ret 0x468d; 
0x00113b96: ret 0x46b; 
0x0004c1e3: ret 0x46c7; 
0x000d5576: ret 0x470f; 
0x000dbbfe: ret 0x474; 
0x0002f8ad: ret 0x4754; 
0x00083571: ret 0x476; 
0x000b90ec: ret 0x4789; 
0x000c9a3e: ret 0x478b; 
0x000a8f30: ret 0x478d; 
0x0009f826: ret 0x47db; 
0x0009f7e6: ret 0x481b; 
0x00038728: ret 0x489; 
0x0013f766: ret 0x489b; 
0x0007baa9: ret 0x48b; 
0x00034b71: ret 0x48d; 
0x0013f854: ret 0x4976; 
0x0007c76c: ret 0x498b; 
0x00161623: ret 0x498d; 
0x0009f666: ret 0x499b; 
0x0002f53f: ret 0x4ac2; 
0x0013386a: ret 0x4b75; 
0x00128a5a: ret 0x4bd; 
0x000cf2e2: ret 0x4be; 
0x000b695b: ret 0x4c1b; 
0x000ee058: ret 0x4c39; 
0x0015dd81: ret 0x4c73; 
0x0004312d: ret 0x4c7; 
0x000b8c10: ret 0x4c80; 
0x00164981: ret 0x4c83; 
0x00036ca8: ret 0x4c88; 
0x00022953: ret 0x4c89; 
0x000a3832: ret 0x4c8b; 
0x00131938: ret 0x4ce9; 
0x00027a03: ret 0x4d0f; 
0x0006bc4e: ret 0x4d89; 
0x000333dd: ret 0x4d8b; 
0x0013ee20: ret 0x4e75; 
0x0010a733: ret 0x4e89; 
0x0010e119: ret 0x4e8b; 
0x0006c3aa: ret 0x4e; 
0x0009f086: ret 0x4f7b; 
0x000e8540: ret 0x4fe9; 
0x000b455b: ret 0x5005; 
0x00077244: ret 0x5052; 
0x000fd0d3: ret 0x5056; 
0x0012c0ed: ret 0x5057; 
0x0002a6ea: ret 0x505; 
0x0015d3b0: ret 0x5073; 
0x0002b212: ret 0x508b; 
0x00132278: ret 0x50e9; 
0x0009ee96: ret 0x516b; 
0x00027a06: ret 0x518b; 
0x0002af7c: ret 0x5201; 
0x0012ab04: ret 0x5208; 
0x0009edd6: ret 0x522b; 
0x00107804: ret 0x5250; 
0x0009eda6: ret 0x525b; 
0x0009ed76: ret 0x528b; 
0x0008ba3e: ret 0x528d; 
0x00083432: ret 0x5303; 
0x00154f02: ret 0x5310; 
0x0006f93d: ret 0x532b; 
0x0005f7a1: ret 0x5352; 
0x001336a7: ret 0x5356; 
0x000b359a: ret 0x5374; 
0x0009c678: ret 0x5375; 
0x000d4b9e: ret 0x5388; 
0x0013ec7c: ret 0x5389; 
0x0003ad4a: ret 0x5409; 
0x00025a86: ret 0x540a; 
0x00164da7: ret 0x540b; 
0x00021c1c: ret 0x542b; 
0x000b3c57: ret 0x5438; 
0x0009ebc6: ret 0x543b; 
0x0011fe89: ret 0x5473; 
0x0011d2d0: ret 0x5484; 
0x0009e96c: ret 0x5488; 
0x0003ee4d: ret 0x5489; 
0x000228c0: ret 0x548b; 
0x000ba9e2: ret 0x548d; 
0x00088d79: ret 0x5503; 
0x0001af72: ret 0x550; 
0x00026998: ret 0x550a; 
0x001194a4: ret 0x5522; 
0x000db7ab: ret 0x5523; 
0x0004b300: ret 0x5539; 
0x00163248: ret 0x5575; 
0x0004b2f9: ret 0x5589; 
0x000c83fd: ret 0x5601; 
0x000d0cc0: ret 0x5603; 
0x0015e094: ret 0x5608; 
0x0010a4aa: ret 0x562b; 
0x000d7015: ret 0x5650; 
0x000d173d: ret 0x5657; 
0x00068998: ret 0x5689; 
0x000d2965: ret 0x568b; 
0x00131072: ret 0x5701; 
0x0015cdf5: ret 0x5708; 
0x000d5220: ret 0x570b; 
0x00157d58: ret 0x5710; 
0x0010a9dd: ret 0x572b; 
0x0011b1ae: ret 0x57c3; 
0x00084ee9: ret 0x59e9; 
0x0013b8a8: ret 0x5ae9; 
0x001688bd: ret 0x5c0b; 
0x000baa0c: ret 0x5c29; 
0x000dd7cb: ret 0x5c88; 
0x0001ea7d: ret 0x5c89; 
0x0007011c: ret 0x5c8b; 
0x0008d23a: ret 0x5c8d; 
0x0010e356: ret 0x5cab; 
0x0010e2e6: ret 0x5d1b; 
0x0015cccc: ret 0x5d5e; 
0x000d191e: ret 0x5e5b; 
0x00054b15: ret 0x5e9; 
0x0006e0e6: ret 0x5f1b; 
0x00025b53: ret 0x5f3c; 
0x0003d4ba: ret 0x607; 
0x000a1c4a: ret 0x61b; 
0x00164185: ret 0x61e9; 
0x00116688: ret 0x6273; 
0x000392aa: ret 0x641; 
0x0007e6a8: ret 0x6508; 
0x0001916a: ret 0x6509; 
0x000cda57: ret 0x650c; 
0x000adae6: ret 0x651b; 
0x000adab6: ret 0x654b; 
0x00123ac6: ret 0x6601; 
0x0007ef57: ret 0x6608; 
0x000ad9f6: ret 0x660b; 
0x000941a3: ret 0x6640; 
0x0015dd67: ret 0x6673; 
0x000c709c: ret 0x66c3; 
0x0005d8e6: ret 0x671b; 
0x000efe34: ret 0x674; 
0x0009cc37: ret 0x676; 
0x0009cef7: ret 0x67c; 
0x0012fef3: ret 0x67e8; 
0x0011d7d6: ret 0x682b; 
0x00044372: ret 0x689; 
0x000327b5: ret 0x68b; 
0x000a36c3: ret 0x6a; 
0x0009d4e6: ret 0x6b1b; 
0x0010cd79: ret 0x6be; 
0x000d5a11: ret 0x6c74; 
0x0002c0fd: ret 0x6c89; 
0x0002eb9c: ret 0x6c8b; 
0x0010d366: ret 0x6c9b; 
0x0010d2f6: ret 0x6d0b; 
0x000b2f15: ret 0x6d74; 
0x0009c950: ret 0x6deb; 
0x0012d1f6: ret 0x6e0b; 
0x00079f1a: ret 0x6e2b; 
0x000bbee5: ret 0x6eb8; 
0x000a538d: ret 0x6eb; 
0x000b6c32: ret 0x6eba; 
0x000be9d5: ret 0x6ebe; 
0x00130b45: ret 0x6f8b; 
0x0009dbca: ret 0x6f9; 
0x0007b09b: ret 0x703b; 
0x001212e3: ret 0x708b; 
0x0007c3aa: ret 0x7189; 
0x000bcce2: ret 0x728d; 
0x0013cd46: ret 0x72bb; 
0x000833ae: ret 0x7389; 
0x0004f8bd: ret 0x7401; 
0x00070a1e: ret 0x7402; 
0x0006e324: ret 0x7408; 
0x0009cf4b: ret 0x7410; 
0x001643c4: ret 0x741b; 
0x00069881: ret 0x7420; 
0x00021a80: ret 0x7439; 
0x000da081: ret 0x743b; 
0x0011cb86: ret 0x747b; 
0x00037302: ret 0x7489; 
0x0001ae02: ret 0x748b; 
0x0001fdcb: ret 0x748d; 
0x0006a55a: ret 0x74e9; 
0x00037d6d: ret 0x74ff; 
0x0001fb3c: ret 0x7501; 
0x000834d6: ret 0x7502; 
0x00026fb9: ret 0x7503; 
0x000688fc: ret 0x7504; 
0x001601ae: ret 0x7508; 
0x00096f81: ret 0x7510; 
0x00096f86: ret 0x7520; 
0x00096f8b: ret 0x7540; 
0x0010bb65: ret 0x758b; 
0x0002b3a6: ret 0x758d; 
0x000286da: ret 0x75e; 
0x0011d124: ret 0x768d; 
0x0007c8c6: ret 0x773b; 
0x0011c766: ret 0x7772; 
0x00107692: ret 0x7789; 
0x0012c866: ret 0x779b; 
0x0003f8ec: ret 0x77e9; 
0x0007d6ea: ret 0x788d; 
0x0013546f: ret 0x789; 
0x00042d18: ret 0x7a80; 
0x000e49b6: ret 0x7b74; 
0x000d1a42: ret 0x7b89; 
0x00162001: ret 0x7c06; 
0x00162011: ret 0x7c07; 
0x00162021: ret 0x7c09; 
0x00162031: ret 0x7c0a; 
0x00162041: ret 0x7c0b; 
0x00162051: ret 0x7c0d; 
0x00162061: ret 0x7c0e; 
0x00162071: ret 0x7c0f; 
0x000a0854: ret 0x7c83; 
0x0006dbb7: ret 0x7c89; 
0x0010fdd0: ret 0x7c8b; 
0x000f7c52: ret 0x7c8d; 
0x000b695e: ret 0x7d04; 
0x000ee2be: ret 0x7d72; 
0x0016c246: ret 0x7dbb; 
0x0015ce35: ret 0x7e10; 
0x0012c156: ret 0x7eab; 
0x000ae80c: ret 0x7eb; 
0x0006769c: ret 0x7f3c; 
0x0002df52: ret 0x8001; 
0x000cf5b3: ret 0x800; 
0x000e37a1: ret 0x8014; 
0x000d4712: ret 0x804; 
0x0006ae59: ret 0x808b; 
0x00145d55: ret 0x80; 
0x000b45c0: ret 0x80b8; 
0x0011b1a2: ret 0x8108; 
0x000b7a28: ret 0x8166; 
0x0013be86: ret 0x817b; 
0x0007b74f: ret 0x8189; 
0x000b3e7e: ret 0x8190; 
0x0013be16: ret 0x81eb; 
0x000665a2: ret 0x820f; 
0x00020a31: ret 0x8301; 
0x000858ab: ret 0x8303; 
0x00043a0b: ret 0x8304; 
0x0008587b: ret 0x8305; 
0x00154ea7: ret 0x8308; 
0x00163930: ret 0x830c; 
0x0005a4eb: ret 0x830f; 
0x0009ef5c: ret 0x8310; 
0x00109149: ret 0x8318; 
0x000c8116: ret 0x831b; 
0x0009dae5: ret 0x8320; 
0x00034ae1: ret 0x833c; 
0x000941f4: ret 0x8340; 
0x0004f4c5: ret 0x8366; 
0x00081afa: ret 0x8389; 
0x00082934: ret 0x838b; 
0x001078c2: ret 0x838d; 
0x00161aee: ret 0x8390; 
0x0002586e: ret 0x8401; 
0x0004f1df: ret 0x8404; 
0x00037da1: ret 0x840f; 
0x000574dc: ret 0x8489; 
0x0003d313: ret 0x848b; 
0x000a7149: ret 0x848d; 
0x000db407: ret 0x84c7; 
0x00039a14: ret 0x84eb; 
0x0007c39c: ret 0x8501; 
0x0009f0e4: ret 0x8504; 
0x000244bc: ret 0x850f; 
0x0009d21a: ret 0x8540; 
0x000e4782: ret 0x8588; 
0x00027cca: ret 0x8589; 
0x0005330b: ret 0x858b; 
0x000b2f9d: ret 0x858d; 
0x000414a6: ret 0x860f; 
0x0001a80f: ret 0x8689; 
0x000bf083: ret 0x868b; 
0x0011b936: ret 0x86cb; 
0x0007d559: ret 0x870f; 
0x00165da1: ret 0x874; 
0x000676a3: ret 0x875; 
0x0001b886: ret 0x877b; 
0x0002ba6e: ret 0x878b; 
0x001090bb: ret 0x87eb; 
0x000215d3: ret 0x8801; 
0x0011b068: ret 0x8802; 
0x0006659a: ret 0x880f; 
0x000bb44b: ret 0x8830; 
0x0001d06e: ret 0x8901; 
0x0002e2a3: ret 0x8902; 
0x00036cb5: ret 0x8904; 
0x0002c2e3: ret 0x8908; 
0x0001a6cc: ret 0x8909; 
0x000fb6f6: ret 0x890b; 
0x00101ab7: ret 0x890c; 
0x0007d2ce: ret 0x890f; 
0x0007b0b8: ret 0x8910; 
0x000e3986: ret 0x8920; 
0x0007b6d6: ret 0x892b; 
0x000bdf23: ret 0x8930; 
0x0001c013: ret 0x893c; 
0x0002efc2: ret 0x8952; 
0x000b4714: ret 0x8964; 
0x000f2218: ret 0x8966; 
0x0007b696: ret 0x896b; 
0x000288df: ret 0x8974; 
0x000e778a: ret 0x898b; 
0x00075253: ret 0x89ff; 
0x0007b566: ret 0x8a9b; 
0x0003d191: ret 0x8b01; 
0x000858c0: ret 0x8b02; 
0x0002c2cc: ret 0x8b04; 
0x00085860: ret 0x8b06; 
0x0001df69: ret 0x8b07; 
0x0002c263: ret 0x8b08; 
0x0009dd21: ret 0x8b10; 
0x0010962a: ret 0x8b18; 
0x00085561: ret 0x8b20; 
0x000e5492: ret 0x8b2c; 
0x00079a06: ret 0x8b30; 
0x0010839a: ret 0x8b52; 
0x0004ac19: ret 0x8b65; 
0x000eb496: ret 0x8b6b; 
0x0008830e: ret 0x8b90; 
0x000799fd: ret 0x8b; 
0x000e8504: ret 0x8be9; 
0x0004c509: ret 0x8c0f; 
0x00031597: ret 0x8c89; 
0x000a6574: ret 0x8c8b; 
0x000de464: ret 0x8ce9; 
0x00024bbb: ret 0x8d01; 
0x00044537: ret 0x8d04; 
0x000bf7ec: ret 0x8d0f; 
0x0009d161: ret 0x8d10; 
0x00068a4d: ret 0x8d1b; 
0x000c27fa: ret 0x8d50; 
0x0005ef7c: ret 0x8d8b; 
0x00086559: ret 0x8d8d; 
0x0001dd80: ret 0x8dc3; 
0x000325c0: ret 0x8e0f; 
0x0001b1c6: ret 0x8e3b; 
0x000fb136: ret 0x8ecb; 
0x00020300: ret 0x8ee9; 
0x000d96f7: ret 0x8f0f; 
0x000ee822: ret 0x8f75; 
0x0006b056: ret 0x8fab; 
0x0001aff6: ret 0x900b; 
0x000417a6: ret 0x901; 
0x000460dd: ret 0x904; 
0x0009cc9d: ret 0x9066; 
0x000baa10: ret 0x908d; 
0x0008ae86: ret 0x917b; 
0x0011c802: ret 0x930f; 
0x00075391: ret 0x9389; 
0x00082551: ret 0x938b; 
0x0001e25c: ret 0x93e9; 
0x0013eab3: ret 0x940f; 
0x00068ae9: ret 0x9474; 
0x00166d2c: ret 0x9488; 
0x000a3522: ret 0x9489; 
0x000a1215: ret 0x948b; 
0x0002ee49: ret 0x94eb; 
0x0004bb03: ret 0x950f; 
0x00055774: ret 0x952b; 
0x0005c08d: ret 0x9539; 
0x00053ac0: ret 0x953b; 
0x000c8296: ret 0x9588; 
0x00047922: ret 0x9589; 
0x00102b8e: ret 0x958d; 
0x000b4736: ret 0x960f; 
0x00069a08: ret 0x9689; 
0x000efe2b: ret 0x972; 
0x000250e1: ret 0x973b; 
0x00034bc0: ret 0x97eb; 
0x00086b9d: ret 0x98eb; 
0x0010edc4: ret 0x998b; 
0x000aa526: ret 0x9adb; 
0x000d5123: ret 0x9aeb; 
0x000ea5c7: ret 0x9b8; 
0x0003999a: ret 0x9c8b; 
0x0006afc1: ret 0x9c; 
0x0002cace: ret 0x9d89; 
0x00048039: ret 0x9d8d; 
0x000fa246: ret 0x9dbb; 
0x0002eda0: ret 0x9deb; 
0x0013eef8: ret 0x9e3b; 
0x000a7f1a: ret 0x9eb; 
0x000b6899: ret 0x9ee9; 
0x00040a22: ret 0x9f74; 
0x0004a046: ret 0x9fbb; 
0x000aa292: ret 0xa074; 
0x000c1709: ret 0xa165; 
0x00054944: ret 0xa175; 
0x00079dd6: ret 0xa22b; 
0x00129cf6: ret 0xa30b; 
0x0011df0b: ret 0xa3c; 
0x000b34ce: ret 0xa474; 
0x00139946: ret 0xa6bb; 
0x00069926: ret 0xa6db; 
0x00144e6a: ret 0xa74; 
0x00128a4e: ret 0xa75; 
0x000f15c2: ret 0xa775; 
0x0007d721: ret 0xa7e; 
0x000ab596: ret 0xa8b; 
0x000fba1d: ret 0xa8db; 
0x000ee808: ret 0xa975; 
0x000574ca: ret 0xa; 
0x000f2def: ret 0xaa75; 
0x00139576: ret 0xaa8b; 
0x00139526: ret 0xaadb; 
0x000337d1: ret 0xab75; 
0x000f9406: ret 0xabfb; 
0x000f93d6: ret 0xac2b; 
0x001680b3: ret 0xac89; 
0x00037b6b: ret 0xadeb; 
0x0004f6c0: ret 0xb0e9; 
0x00078e76: ret 0xb18b; 
0x00078df6: ret 0xb20b; 
0x000b4fc8: ret 0xb38b; 
0x0011fe16: ret 0xb439; 
0x00032826: ret 0xb48d; 
0x0006123b: ret 0xb4ff; 
0x00028ad6: ret 0xb52b; 
0x0007c430: ret 0xb574; 
0x0005295d: ret 0xb58b; 
0x000c9896: ret 0xb58d; 
0x00078a16: ret 0xb5eb; 
0x00021565: ret 0xb60f; 
0x000288a1: ret 0xb68d; 
0x000b468f: ret 0xb70f; 
0x00169c22: ret 0xb74; 
0x0008a63a: ret 0xb801; 
0x000787b6: ret 0xb84b; 
0x000b7393: ret 0xb850; 
0x0009e960: ret 0xb883; 
0x000518a1: ret 0xb89; 
0x00063e8e: ret 0xb8; 
0x000c6f2e: ret 0xb8c3; 
0x00068544: ret 0xb904; 
0x000f86c6: ret 0xb93b; 
0x00078606: ret 0xb9fb; 
0x000b19ba: ret 0xb; 
0x0011cc72: ret 0xbb01; 
0x000b0f77: ret 0xbd39; 
0x00052d50: ret 0xbd83; 
0x00028495: ret 0xbd89; 
0x000d8713: ret 0xbd8b; 
0x000234e9: ret 0xbdeb; 
0x000f8206: ret 0xbdfb; 
0x0005809d: ret 0xbe08; 
0x00049ebf: ret 0xbe0f; 
0x000f81d6: ret 0xbe2b; 
0x000f8056: ret 0xbfab; 
0x000f8006: ret 0xbffb; 
0x000ee2db: ret 0xc001; 
0x0002c111: ret 0xc031; 
0x000f7fb6: ret 0xc04b; 
0x00077fa6: ret 0xc05b; 
0x0002f982: ret 0xc075; 
0x000256ad: ret 0xc083; 
0x00083baf: ret 0xc084; 
0x0001c041: ret 0xc085; 
0x0008b96f: ret 0xc0be; 
0x0002f3c1: ret 0xc0d9; 
0x0001bd43: ret 0xc101; 
0x000396b4: ret 0xc102; 
0x00164302: ret 0xc104; 
0x0004b7c2: ret 0xc108; 
0x001029e6: ret 0xc110; 
0x000431e7: ret 0xc121; 
0x0006a464: ret 0xc129; 
0x00044467: ret 0xc139; 
0x00127e96: ret 0xc16b; 
0x000d9dc4: ret 0xc183; 
0x0002c3c4: ret 0xc189; 
0x0005ea9a: ret 0xc1; 
0x000348e2: ret 0xc269; 
0x000b4712: ret 0xc26b; 
0x00107d86: ret 0xc27b; 
0x000b6c5c: ret 0xc281; 
0x0008a638: ret 0xc283; 
0x0008a6ee: ret 0xc289; 
0x0015dbe9: ret 0xc2bb; 
0x00036e90: ret 0xc301; 
0x000c5807: ret 0xc35b; 
0x000f47ab: ret 0xc35d; 
0x0009efd4: ret 0xc35f; 
0x00020290: ret 0xc383; 
0x00137ba6: ret 0xc45b; 
0x0001fc90: ret 0xc483; 
0x000401c8: ret 0xc589; 
0x000c7a36: ret 0xc5cb; 
0x000b5ea4: ret 0xc601; 
0x0002c3aa: ret 0xc629; 
0x0012095d: ret 0xc683; 
0x0002ead5: ret 0xc689; 
0x00127966: ret 0xc69b; 
0x00103396: ret 0xc6b; 
0x000f8d52: ret 0xc701; 
0x00022c3d: ret 0xc704; 
0x00085c18: ret 0xc72; 
0x000b544a: ret 0xc739; 
0x0003d1bb: ret 0xc789; 
0x00039a72: ret 0xc801; 
0x000b4a29: ret 0xc86b; 
0x0006de88: ret 0xc883; 
0x0001bb20: ret 0xc889; 
0x00061d84: ret 0xc89; 
0x00070128: ret 0xc8d; 
0x00084f42: ret 0xc985; 
0x00070c35: ret 0xc; 
0x0001ab3e: ret 0xca21; 
0x0013b12a: ret 0xca39; 
0x00031009: ret 0xca81; 
0x000f7566: ret 0xca9b; 
0x00050c17: ret 0xcac1; 
0x000fb5c6: ret 0xcad8; 
0x00166a87: ret 0xcb11; 
0x0003cdf9: ret 0xcb19; 
0x000d8d71: ret 0xcb39; 
0x00081c9c: ret 0xcb8; 
0x000c7476: ret 0xcb8b; 
0x00083f36: ret 0xcb; 
0x00107336: ret 0xcccb; 
0x0007603f: ret 0xce01; 
0x0001d8b5: ret 0xce80; 
0x000db278: ret 0xcf89; 
0x00069062: ret 0xd008; 
0x00069041: ret 0xd009; 
0x00076ff6: ret 0xd00b; 
0x000ddf46: ret 0xd020; 
0x000dca4d: ret 0xd075; 
0x0002d479: ret 0xd089; 
0x000e34b1: ret 0xd101; 
0x000d910a: ret 0xd104; 
0x0002582c: ret 0xd108; 
0x00039c97: ret 0xd120; 
0x000b926d: ret 0xd129; 
0x00027731: ret 0xd139; 
0x00122b7a: ret 0xd184; 
0x000431e3: ret 0xd189; 
0x000c6e76: ret 0xd18b; 
0x000d0ce3: ret 0xd27f; 
0x0001af31: ret 0xd284; 
0x0001c52f: ret 0xd285; 
0x00075690: ret 0xd2e9; 
0x0007ad39: ret 0xd2eb; 
0x0002d365: ret 0xd2f7; 
0x000493f5: ret 0xd301; 
0x00164eba: ret 0xd304; 
0x00039b14: ret 0xd31d; 
0x0004886b: ret 0xd320; 
0x000b7788: ret 0xd329; 
0x000d55b3: ret 0xd339; 
0x000dbf9a: ret 0xd375; 
0x000540ce: ret 0xd389; 
0x000b6c76: ret 0xd38b; 
0x000d0a89: ret 0xd473; 
0x0012142b: ret 0xd489; 
0x000528e8: ret 0xd629; 
0x000ce06c: ret 0xd67f; 
0x001360e2: ret 0xd729; 
0x00075a45: ret 0xd739; 
0x000b6648: ret 0xd789; 
0x000563eb: ret 0xd801; 
0x000c6855: ret 0xd874; 
0x000296e0: ret 0xd889; 
0x00076726: ret 0xd8db; 
0x000f6716: ret 0xd8eb; 
0x0002f34f: ret 0xd8f7; 
0x000ddbfc: ret 0xd977; 
0x00068dd8: ret 0xd989; 
0x00068109: ret 0xd9e9; 
0x0007524b: ret 0xd9f7; 
0x00107d88: ret 0xd; 
0x000dc34f: ret 0xda01; 
0x00080eeb: ret 0xda21; 
0x0004615e: ret 0xda29; 
0x0009f1fd: ret 0xda39; 
0x000dd5f3: ret 0xda75; 
0x000c6ca9: ret 0xda80; 
0x000b90e4: ret 0xdaf7; 
0x000940ba: ret 0xdb31; 
0x000a0d48: ret 0xdb85; 
0x000f6386: ret 0xdc7b; 
0x000f647e: ret 0xdce8; 
0x000cdf41: ret 0xdceb; 
0x00022371: ret 0xdd39; 
0x0010181e: ret 0xddeb; 
0x0013ef8b: ret 0xde75; 
0x0003994b: ret 0xdf21; 
0x0013ef03: ret 0xe075; 
0x00034a8c: ret 0xe083; 
0x0014617d: ret 0xe0c1; 
0x0009d131: ret 0xe183; 
0x00100a9a: ret 0xe1; 
0x00041f1c: ret 0xe1c1; 
0x000bbfbc: ret 0xe1e9; 
0x00161155: ret 0xe280; 
0x0002e64e: ret 0xe281; 
0x00021b58: ret 0xe283; 
0x000da051: ret 0xe2c1; 
0x0001aa61: ret 0xe2d3; 
0x000d2fbb: ret 0xe3eb; 
0x000fb1f0: ret 0xe575; 
0x00045a66: ret 0xe59b; 
0x000459e6: ret 0xe61b; 
0x0016839e: ret 0xe6c1; 
0x000e2842: ret 0xe74; 
0x00081e22: ret 0xe853; 
0x000b5a0f: ret 0xe856; 
0x00077732: ret 0xe857; 
0x000d544d: ret 0xe875; 
0x00051d3d: ret 0xe883; 
0x0007f236: ret 0xe889; 
0x000439ce: ret 0xe89; 
0x000dd499: ret 0xe8c0; 
0x00043bc7: ret 0xe8c1; 
0x00075726: ret 0xe8db; 
0x0002ac31: ret 0xe901; 
0x000c8390: ret 0xe902; 
0x000cf7c9: ret 0xe904; 
0x000cdde8: ret 0xe910; 
0x00119c85: ret 0xe981; 
0x00020884: ret 0xe983; 
0x000a44ec: ret 0xe989; 
0x000d4be4: ret 0xe9c0; 
0x00095ee4: ret 0xe; 
0x00072d07: ret 0xea39; 
0x0009c9a5: ret 0xea83; 
0x000b84bf: ret 0xeac0; 
0x00043213: ret 0xeac1; 
0x000839c1: ret 0xead1; 
0x000afbc1: ret 0xead3; 
0x0008a6b4: ret 0xeb01; 
0x000cc822: ret 0xeb02; 
0x000254f6: ret 0xeb0b; 
0x00084f62: ret 0xeb75; 
0x000a2709: ret 0xeb89; 
0x0004e199: ret 0xec75; 
0x0001d6dd: ret 0xec83; 
0x00051896: ret 0xed01; 
0x0012f643: ret 0xed85; 
0x0004b6d7: ret 0xee7f; 
0x00130fea: ret 0xee80; 
0x0002d594: ret 0xee85; 
0x000a26b5: ret 0xeeb; 
0x0013cfaa: ret 0xef6d; 
0x00033f22: ret 0xef76; 
0x000aafa1: ret 0xef83; 
0x000f5b29: ret 0xeff0; 
0x0003ca77: ret 0xf001; 
0x00161e5f: ret 0xf00; 
0x0001abd0: ret 0xf01; 
0x00117522: ret 0xf01b; 
0x000a0547: ret 0xf029; 
0x00070b18: ret 0xf02; 
0x00049251: ret 0xf039; 
0x00161fe1: ret 0xf03; 
0x0008b5b6: ret 0xf04; 
0x00161ff1: ret 0xf05; 
0x0002230d: ret 0xf06; 
0x000ac63f: ret 0xf075; 
0x000454b6: ret 0xf083; 
0x0003b2b4: ret 0xf089; 
0x000202c6: ret 0xf08; 
0x000b6516: ret 0xf0; 
0x00161fac: ret 0xf0c; 
0x00163213: ret 0xf0f; 
0x00160b83: ret 0xf10; 
0x000c4ee6: ret 0xf11b; 
0x000ac02b: ret 0xf175; 
0x00074e86: ret 0xf17b; 
0x00076a54: ret 0xf189; 
0x00100d2a: ret 0xf1a2; 
0x0004b448: ret 0xf1f; 
0x00087f8b: ret 0xf201; 
0x00026988: ret 0xf209; 
0x0006abe6: ret 0xf20; 
0x000203ed: ret 0xf229; 
0x001650cf: ret 0xf27e; 
0x0001f68f: ret 0xf289; 
0x000ec72a: ret 0xf2e8; 
0x000348e4: ret 0xf31d; 
0x000e2522: ret 0xf36b; 
0x000f77b2: ret 0xf372; 
0x0007e06a: ret 0xf375; 
0x00046144: ret 0xf37e; 
0x000dcd5a: ret 0xf3c2; 
0x00034c16: ret 0xf3eb; 
0x000d9b22: ret 0xf3f5; 
0x000d9822: ret 0xf3f8; 
0x0004af9a: ret 0xf40; 
0x0012824a: ret 0xf40f; 
0x00084f6e: ret 0xf474; 
0x0004b059: ret 0xf50; 
0x00169c2d: ret 0xf575; 
0x001391c1: ret 0xf604; 
0x00156214: ret 0xf608; 
0x0013a7d1: ret 0xf60; 
0x000e3ec0: ret 0xf631; 
0x000b5a12: ret 0xf636; 
0x0016c02a: ret 0xf65c; 
0x0008b8c3: ret 0xf66; 
0x00048067: ret 0xf672; 
0x00031b6e: ret 0xf685; 
0x00086af3: ret 0xf739; 
0x0013a77f: ret 0xf74; 
0x000bee74: ret 0xf75b; 
0x00085cde: ret 0xf775; 
0x00074806: ret 0xf7fb; 
0x00088aa5: ret 0xf800; 
0x00051911: ret 0xf801; 
0x000eadc9: ret 0xf80; 
0x000847e6: ret 0xf81b; 
0x000876a0: ret 0xf829; 
0x0013fcea: ret 0xf833; 
0x000aa883: ret 0xf839; 
0x001147b6: ret 0xf84b; 
0x0014458a: ret 0xf881; 
0x000269df: ret 0xf883; 
0x000738f5: ret 0xf889; 
0x00024726: ret 0xf8db; 
0x0008630e: ret 0xf901; 
0x0016b74a: ret 0xf912; 
0x000755c0: ret 0xf919; 
0x000b4929: ret 0xf980; 
0x0002b533: ret 0xf981; 
0x000d887b: ret 0xf983; 
0x000701d5: ret 0xf989; 
0x000a916a: ret 0xf9b0; 
0x0007a122: ret 0xf9ef; 
0x00145c25: ret 0xf; 
0x000fe1ca: ret 0xfa00; 
0x00088ef1: ret 0xfa01; 
0x00025a75: ret 0xfa09; 
0x000b2ec7: ret 0xfa19; 
0x0004d7d8: ret 0xfa29; 
0x0005050c: ret 0xfa33; 
0x000760f2: ret 0xfa39; 
0x000fd3ed: ret 0xfa4c; 
0x000fe37f: ret 0xfa4d; 
0x0011381f: ret 0xfa5a; 
0x001235b4: ret 0xfa61; 
0x001365e1: ret 0xfa63; 
0x0004cb85: ret 0xfa80; 
0x0007d544: ret 0xfa81; 
0x00069e61: ret 0xfa83; 
0x00028151: ret 0xfac1; 
0x00084536: ret 0xfacb; 
0x0003a089: ret 0xfb19; 
0x000b713a: ret 0xfb1d; 
0x000b2b85: ret 0xfb31; 
0x0004610a: ret 0xfbc1; 
0x00084406: ret 0xfbfb; 
0x0013681a: ret 0xfc45; 
0x00034a3b: ret 0xfc; 
0x000f33da: ret 0xfcce; 
0x000828ea: ret 0xfcd7; 
0x000f42b6: ret 0xfd4b; 
0x0013659a: ret 0xfd86; 
0x00049a7a: ret 0xfdf3; 
0x0012ed9a: ret 0xfdfe; 
0x00055a6a: ret 0xfe1f; 
0x00035429: ret 0xfe3f; 
0x0011997d: ret 0xfe83; 
0x001633ba: ret 0xfe89; 
0x000b8f1d: ret 0xfec1; 
0x0002bb22: ret 0xfed5; 
0x0003a77a: ret 0xfee6; 
0x000d6050: ret 0xff00; 
0x0011e99a: ret 0xff02; 
0x000d9871: ret 0xff04; 
0x0002f51d: ret 0xff25; 
0x0015dbe4: ret 0xff3; 
0x0013a6de: ret 0xff3c; 
0x000cff72: ret 0xff3d; 
0x0007948a: ret 0xff49; 
0x0007a390: ret 0xff50; 
0x000619dc: ret 0xff52; 
0x0009fc02: ret 0xff65; 
0x001311ca: ret 0xff6c; 
0x00145e1f: ret 0xff70; 
0x00102d62: ret 0xff80; 
0x0011fdc3: ret 0xff83; 
0x00078948: ret 0xff85; 
0x0001b603: ret 0xffb8; 
0x0001dd78: ret 0xffba; 
0x0004856a: ret 0xffbc; 
0x0003d962: ret 0xffbf; 
0x00055ff8: ret 0xffc1; 
0x000f15ca: ret 0xffc8; 
0x0007efaa: ret 0xffcb; 
0x0005ad02: ret 0xffd9; 
0x000b0e95: ret 0xffdc; 
0x0005f9ea: ret 0xffe2; 
0x000599d1: ret 0xffe9; 
0x00059e98: ret 0xffec; 
0x000e4d5d: ret 0xffee; 
0x00064c85: ret 0xffef; 
0x000b889a: ret 0xfff0; 
0x000bdf7a: ret 0xfff1; 
0x000dcd5b: ret 0xfff3; 
0x000650af: ret 0xfff4; 
0x0005f18a: ret 0xfff5; 
0x000acde6: ret 0xfff6; 
0x000a71a7: ret 0xfff7; 
0x0004a5a9: ret 0xfff9; 
0x0006ce1e: ret 0xfffa; 
0x000a9404: ret 0xfffb; 
0x0004d22e: ret 0xfffc; 
0x000f470a: ret 0xfffd; 
0x00022a9a: ret 0xfffe; 
0x0002fadc: ret 0xffff; 
0x0003b538: ret 1; 
0x00023e3a: ret 2; 
0x00041367: ret 3; 
0x0002fd1f: ret 4; 
0x000413b4: ret 5; 
0x0003b8a2: ret 6; 
0x000c0c12: ret 7; 
0x000b1cba: ret 8; 
0x000a0cc2: ret 9; 
0x00019144: ret; 
0x000c2722: retf 0; add byte ptr [ebp + 0x1958dc0], al; xor edx, edi; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000c6671: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x001267d0: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00079e9b: retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000948cb: retf 0x28e8; xchg byte ptr [edx], cl; add byte ptr [ecx + 0xed78fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009c92d: retf 0x3076; add eax, ecx; ret; 
0x00109041: retf 0x450f; ret; 
0x000a0577: retf 0x474; test edx, edx; jne 0xa0570; ret; 
0x000bafb7: retf 0x490f; ret 0xc801; 
0x00126fcf: retf 0x5552; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00078583: retf 0x5a76; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00069506: retf 0x5f76; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0013f7a4: retf 0x6509; xor edx, dword ptr [0x18]; call edx; 
0x00121479: retf 0x6509; xor edx, dword ptr [0x18]; push edx; call eax; 
0x0004e6a3: retf 0x748d; add dh, dh; ret; 
0x0015ce30: retf 0x761a; sub al, 0x83; ret 0x7e10; 
0x00076a5a: retf 0x7b76; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x000f4745: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000fc725: retf 0x8501; fisttp dword ptr [edi]; inc ebp; ret 0x4189; 
0x00068fc1: retf 0x860f; push 0x83000001; in al, dx; or byte ptr [edx], ch; push edi; call dword ptr [ebx + 8]; 
0x000f60ff: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x000d3ea6: retf 0x8953; ret; 
0x00047f83: retf 0x950f; ret; 
0x0007bbdd: retf 0x975; add esp, 8; pop ebx; ret; 
0x0009bee9: retf 0xae8; adc byte ptr [edx], cl; add byte ptr [ecx + 0xe64a5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098be9: retf 0xae8; inc ebx; or al, byte ptr [eax]; add ecx, 0xe9725; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000cc7f3: retf 0xc031; pop ebx; ret; 
0x0015edc8: retf 0xc801; call 0x13cee5; add ebx, 0x31bb4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015ed03: retf 0xc801; call 0x13cee5; add ebx, 0x31c79; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015d2d9: retf 0xc801; call 0x13cee5; add ebx, 0x3359f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d24: retf 0xc801; call 0x13cee5; add ebx, 0x3c994; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151e98: retf 0xc801; call 0x13cee5; add ebx, 0x3e660; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151d93: retf 0xc801; call 0x13cee5; add ebx, 0x3e6a5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151b84: retf 0xc801; call 0x13cee5; add ebx, 0x3e8b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a54: retf 0xc801; call 0x13cee5; add ebx, 0x3f824; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fa47: retf 0xc801; call 0x13cee5; add ebx, 0x40671; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ea67: retf 0xc801; call 0x13cee5; add ebx, 0x41491; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014cb48: retf 0xc801; call 0x13cee5; add ebx, 0x431f0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ca43: retf 0xc801; call 0x13cee5; add ebx, 0x43235; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c834: retf 0xc801; call 0x13cee5; add ebx, 0x43444; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014ab38: retf 0xc801; call 0x13cee5; add ebx, 0x44f80; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014aa33: retf 0xc801; call 0x13cee5; add ebx, 0x44fc5; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a827: retf 0xc801; call 0x13cee5; add ebx, 0x451d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148b38: retf 0xc801; call 0x13cee5; add ebx, 0x46d00; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148a33: retf 0xc801; call 0x13cee5; add ebx, 0x46d45; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148827: retf 0xc801; call 0x13cee5; add ebx, 0x46f51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009cf2e: retf 0xc801; ret; 
0x00154b13: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015396d: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151853: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150843: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f873: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e69d: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c53d: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a59d: retf 0xc801; sfence; call 0x13cee5; add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153c03: retf 0xc829; pop edi; call 0x13cee5; add ebx, 0x3c9f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e953: retf 0xc829; pop edi; call 0x13cee5; add ebx, 0x414e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154d09: retf 0xc829; pop esi; call 0x13cee5; add ebx, 0x3baae; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151a59: retf 0xc829; pop esi; call 0x13cee5; add ebx, 0x3e91e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009c6df: retf 0xc839; ja 0x9c6f0; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x00060dba: retf 0xc; add byte ptr [ebx + 0x555304ec], al; push esi; call dword ptr [eax + 0x1c]; 
0x0009d8a1: retf 0xce01; jmp ebx; 
0x00078e2f: retf 0xd039; jbe 0x78e60; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0009cf27: retf 0xd285; je 0x9cf00; bsr ecx, edx; add eax, ecx; ret; 
0x000949cb: retf 0xda39; jb 0x94990; call 0x13cef9; add ecx, 0xed70b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009600b: retf 0xda39; jb 0x95fd0; call 0x13cef9; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfab: retf 0xda39; jb 0x9bf70; call 0x13cef9; add ecx, 0xe645f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000955e4: retf 0xe; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000f7568: retf 0xe; mov eax, dword ptr [edx - 0x10c]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0xf7579; ret; 
0x00132152: retf 0xef78; call dword ptr [eax - 0x73]; 
0x00138996: retf 0xf0b8; add byte ptr [eax], al; add byte ptr [ebp + 0x35849b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00071f08: retf 0xf0b8; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001d292: retf 0xf19; add byte ptr [ebp - 0x593837d], cl; call dword ptr [eax - 0x73]; 
0x000ed322: retf 0xf2dc; jmp dword ptr [esi - 0x70]; 
0x000ec422: retf 0xf2eb; jmp dword ptr [esi - 0x70]; 
0x000b290a: retf 0xf375; ret; 
0x0016344d: retf 0xf66; xlatb; ret; 
0x000a4972: retf 0xf844; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x00095efb: retf 0xf8e8; outsd dx, dword ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0004b440: retf 0xf9c1; add eax, 0xf6944d89; ret 0xf1f; 
0x000e8d24: retf 0xfa4a; call dword ptr [eax - 0x18]; 
0x000e8d24: retf 0xfa4a; call dword ptr [eax - 0x18]; adc al, byte ptr [ecx]; hlt; jmp dword ptr [esi - 0x70]; 
0x000348dd: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000b780b: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x001373c2: retf 0xfd61; jmp dword ptr [esi - 0x70]; 
0x0003c722: retf 0xfff6; call dword ptr [ebx + 0x6a]; 
0x000524ab: retf 0xfff9; add edx, edi; jmp edx; 
0x00168026: retf 0xfffa; add edx, ebx; jmp edx; 
0x0016631c: retf 0xfffa; add esi, ebx; jmp esi; 
0x0007b30a: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x0015d72b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x0015397b: retf 3; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d7c: retf 3; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d589d: retf; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x0015e998: retf; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00088a71: retf; add edi, edx; dec dword ptr [ebp - 0x5741f70]; call dword ptr [edx - 0x73]; 
0x0009c049: retf; add esi, ecx; call 0x13cef9; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c029: retf; add esi, ecx; call 0x13cef9; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960a9: retf; add esi, ecx; call 0x13cef9; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096089: retf; add esi, ecx; call 0x13cef9; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a69: retf; add esi, ecx; call 0x13cef9; add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a49: retf; add esi, ecx; call 0x13cef9; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a07b1: retf; dec edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b7247: retf; jmp ebx; 
0x00030df1: retf; lea ecx, [esp + 0x8c]; call dword ptr gs:[0x10]; 
0x0009d378: retf; mov eax, ecx; pop ebx; sub eax, esi; pop esi; ret; 
0x00143336: retf; or al, 0xa; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0010c61a: retf; pop eax; cli; call dword ptr [eax - 1]; 
0x000f44a1: retf; push 0xc483fff8; adc byte ptr [ecx + 0x14c483d8], cl; pop ebx; pop esi; ret; 
0x000829e1: retf; salc; cld; jmp dword ptr [ebp - 0x5f]; 
0x00094997: retf; salc; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000527fe: retf; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00150a1b: retf; sti; jmp dword ptr [esi - 0x70]; 
0x000d1737: retf; sub byte ptr [ecx], dl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x001635d4: retf; test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x00051580: retf; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x001316bb: rol bl, 0x8d; jbe 0x1316c0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x0013179b: rol bl, 0x8d; jbe 0x1317a0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x00131d6b: rol bl, 0x8d; jbe 0x131d70; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x000319d0: rol bl, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00034279: rol byte ptr [eax + 0x975003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00094f9a: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000619d6: rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0010a57c: rol byte ptr [eax - 0x6bf0d206], 1; ret 0x5f3c; 
0x00046b8f: rol byte ptr [eax - 0x79f0f607], 1; call dword ptr [esi]; 
0x0005f797: rol byte ptr [eax - 0x89b43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x000b2901: rol byte ptr [eax*4 - 0x74f68b2e], 0x10; cmp edx, ecx; jne 0xb2900; ret; 
0x000b2938: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x000eab28: rol byte ptr [eax], 0; add byte ptr [ebx + 0x24c2484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0xc4], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000ba840: rol byte ptr [eax], 0; add byte ptr [ebx - 0x74ebdb8c], cl; mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x00146247: rol byte ptr [eax], 0xf7; ret 0xf; 
0x000c69f3: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f73d4: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000c7266: rol byte ptr [eax], 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0012db8e: rol byte ptr [eax], 1; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0001bd96: rol byte ptr [eax], 1; add byte ptr [ebp - 0x593a37f], cl; call dword ptr [eax - 0x73]; 
0x000c6ab3: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f74b4: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0001b45a: rol byte ptr [eax], cl; neg edx; ret; 
0x000fbc8d: rol byte ptr [ebp + 0x5b0e74d2], 0x5e; pop edi; ret; 
0x0009d270: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00037cb0: rol byte ptr [ebp + 0xf142454], cl; xchg ebp, eax; ret 0xb60f; 
0x0003aa14: rol byte ptr [ebp + 0xf182454], cl; xchg ebp, eax; ret 0xb60f; 
0x0003d982: rol byte ptr [ebp + 0xf2c2454], cl; xchg ebp, eax; ret 0xb60f; 
0x000d01e7: rol byte ptr [ebp + 0xf5356d2], 0x94; ret; 
0x00073768: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x00089263: rol byte ptr [ebp - 0x4e76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x748d; 
0x000dd7ae: rol byte ptr [ebp - 0x72f08b25], cl; je 0xdd7dc; add byte ptr [eax - 0x7c69eb77], dl; ret 0x3901; 
0x000282e8: rol byte ptr [ebp - 0x7bf0f7bb], 1; outsb dx, byte ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x0012661a: rol byte ptr [ebp - 0x7cae8b40], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000d17e4: rol byte ptr [ebx + 0x2f740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0007e0bb: rol byte ptr [ebx + 0x428901c8], 1; add al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x0008ef07: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0008ef8d: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0x8ee51; pop ebx; ret; 
0x0008efab: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0x8ee51; pop ebx; ret; 
0x0008f02f: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x0008f0a3: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0x8ee51; pop ebx; ret; 
0x00044367: rol byte ptr [ebx + 0x4e8d10c4], 1; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x00075bdc: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00034966: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x00042db7: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0004f22f: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x000fb572: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x000fbfe8: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x00085c26: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x0007c798: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00077de2: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0003619a: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x00036c74: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x0008b6b7: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x0008b6c4: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x0008b6d1: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000d8635: rol byte ptr [ebx + eax*4], 0xc1; add al, 0x39; ret; 
0x000d8cbd: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0002a8f4: rol byte ptr [ebx - 0x137cef3c], 1; add al, 0x8d; adc dword ptr [eax + 0x5c], -0x1c; call dword ptr [eax - 0x77]; 
0x0012cff0: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xb72cf7d], cl; call dword ptr [eax - 0x73]; 
0x0012a662: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xb9d0f7d], cl; call dword ptr [eax - 0x73]; 
0x000e3eb6: rol byte ptr [ebx - 0x14f43], 0xff; add dword ptr [edi], ecx; xchg esp, eax; ret 0xf631; 
0x00043cac: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x000e9e25: rol byte ptr [ebx - 0x17cfb14], cl; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x000b3c02: rol byte ptr [ebx - 0x1f7cef3c], cl; add eax, dword ptr [ebx - 0x6bf0fe08]; ret 0x2be9; 
0x0012668a: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x000af377: rol byte ptr [ebx - 0x363743], cl; call dword ptr [eax]; 
0x000807f1: rol byte ptr [ebx - 0x3b7cef3c], 1; adc al, 0x5b; pop esi; ret; 
0x0007b363: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009cec2: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x0009ced2: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x0009cee2: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x0009cef2: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000f81e1: rol byte ptr [ebx - 0x3f7c0f20], 0x26; mov edx, dword ptr [edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x000d1821: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0011baee: rol byte ptr [ebx - 0x4514fb40], 0xe8; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x000ff668: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000df207: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00050eb9: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00127ee4: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00074993: rol byte ptr [ebx - 0x49f0eb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0001b8a7: rol byte ptr [ebx - 0x49f0f33c], 0xc0; neg eax; ret; 
0x000410df: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000770cb: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00126115: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00127316: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0008354a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0013d051: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0001ab38: rol byte ptr [ebx - 0x6bf0fc05], cl; ret 0xca21; 
0x0013187e: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0011393a: rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x000bfb75: rol byte ptr [ebx - 0xf76ef3c], 1; pop ebx; pop esi; pop edi; ret; 
0x00162776: rol byte ptr [ebx], 0x5f; ret; 
0x001259d6: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x00153344: rol byte ptr [ebx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015314b: rol byte ptr [ebx], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c71a6: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x000c7152: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000e2fc1: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0010ecf1: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0010ecf7: rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x000f9d20: rol byte ptr [ecx + ecx*4], 0x83; push esp; and al, 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0009f14b: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a0574: rol byte ptr [ecx + edi], 0xca; je 0xa057e; test edx, edx; jne 0xa0570; ret; 
0x000c718b: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x001021c6: rol byte ptr [ecx], 0; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0004b6d2: rol byte ptr [ecx], 0x29; fidivr dword ptr [ecx]; ret 0xee7f; 
0x00085c15: rol byte ptr [ecx], 0x39; ret 0xc72; 
0x000dd5f0: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x000fb1ed: rol byte ptr [ecx], 0x39; ret 0xe575; 
0x000d544a: rol byte ptr [ecx], 0x39; ret 0xe875; 
0x000369a1: rol byte ptr [ecx], 0x39; ret; 
0x000d9dba: rol byte ptr [ecx], 0x39; ror byte ptr [ecx + 0xf60247c], 1; dec esp; ret 0xc183; 
0x0009f5fa: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00162b31: rol byte ptr [ecx], 0x5f; ret; 
0x00051f2d: rol byte ptr [ecx], 0x80; cli; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000865a1: rol byte ptr [ecx], 0x80; jo 0x865a5; sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x00087180: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000f281e: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x000f8d3e: rol byte ptr [ecx], 0x83; ret 0x8001; 
0x000215d0: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x0001de9a: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00076e6c: rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x0001f19a: rol byte ptr [ecx], 0x83; ret; 
0x00087910: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x00085aba: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x001166e8: rol byte ptr [ecx], 0x89; inc ebx; sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x000414b7: rol byte ptr [ecx], 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x73]; 
0x0013ee1d: rol byte ptr [ecx], 0x89; ret 0x4e75; 
0x0010b4c1: rol byte ptr [ecx], 0x89; ret 0xe2c1; 
0x000b48ec: rol byte ptr [ecx], 0x89; ret; 
0x0006abe1: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x000eb431: rol byte ptr [ecx], 0xc1; cmp ebx, edx; ja 0xeb428; mov eax, ecx; pop ebx; ret; 
0x0009cde6: rol byte ptr [ecx], 0xc8; ret; 
0x0009d14c: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x0009d2b2: rol byte ptr [ecx], 0xd0; ret; 
0x0009c777: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x0009c8c5: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x0008ad19: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0x8ad18; pop ebx; ret; 
0x00160c4c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0008ec7c: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00163cae: rol byte ptr [ecx], 1; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0002d504: rol byte ptr [ecx], 1; ret; 
0x0008b6ab: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x0008b6b5: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x0008b6c2: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x0008b6cf: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x00138dba: rol byte ptr [edi - 3], cl; jmp dword ptr [esi - 0x70]; 
0x0016279c: rol byte ptr [edi], 0x5f; ret; 
0x000846bc: rol byte ptr [edx + edi*8 - 1], 0x6a; add eax, 0x28838d50; jo 0x846c2; call dword ptr [eax - 0x18]; 
0x0008af27: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00162b36: rol byte ptr [edx], 0x5f; ret; 
0x00043bcd: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x43b90; jmp eax; 
0x00162b4a: rol byte ptr [esi], 0x5f; ret; 
0x0010ed96: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000f47f6: rol cl, 0xfd; pop ds; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x0008b004: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000b275a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0015618c: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000f0dcc: rol dword ptr [eax + eax], 0x81; ret; 
0x00138e65: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0013efd3: rol dword ptr [eax], 0; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x000f9372: rol dword ptr [eax], 0; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009d6ac: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0x9d6b4; inc eax; pop edi; ret; 
0x0009c015: rol dword ptr [eax], 0x64; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c696e: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c699e: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dd6d4: rol dword ptr [ebp + 0x24748bc0], 1; sbb byte ptr [edi], cl; xchg esp, eax; ret 0xc985; 
0x00161bf7: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0009cbb1: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0009ce76: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0009ce47: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00161c36: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016175f: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0009cb77: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00048cb9: rol dword ptr [ebp - 0x7ad58a40], 1; test byte ptr [edi], -0x7b; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000fc6a5: rol dword ptr [ebx + 0x4d89fee1], 1; aam 0x8b; dec eax; or dh, dh; ret 0x7401; 
0x000696b2: rol dword ptr [ebx + 0x5874fff9], 0x89; ret; 
0x000f0358: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x000ef326: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x0011fb2c: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x000b6716: rol dword ptr [ebx + 0x5e5b2cc4], 1; pop edi; pop ebp; ret; 
0x0012f3f9: rol dword ptr [ebx + 0x788308c0], 0xf8; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x00095ebd: rol dword ptr [ebx + eax*8], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012efac: rol dword ptr [ebx + ecx*4], 0x77; add al, 0x51; push edi; call dword ptr [esi + 8]; 
0x000c5bbe: rol dword ptr [ebx - 0x29769739], 1; call dword ptr gs:[0x10]; 
0x00107d52: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x00136288: rol dword ptr [ebx - 0x7af0f408], 1; mov esi, 0x83000000; in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00096bce: rol dword ptr [ebx], 0xb7; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001532ab: rol dword ptr [ebx], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00153084: rol dword ptr [ebx], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009bf94: rol dword ptr [ecx + 0x3000e64], 0xc; cdq; jmp ecx; 
0x000c6bcb: rol dword ptr [ecx - 0xfff1f], 1; call dword ptr [esi - 0x73]; 
0x000cfa04: rol dword ptr [ecx], 0x29; ret 0xd301; 
0x0004f1dc: rol dword ptr [ecx], 0x83; ret 0x8404; 
0x000acc84: rol dword ptr [ecx], 0x83; ret 0x8b01; 
0x0008b5e4: rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0001db54: rol dword ptr [ecx], 0x83; ret; 
0x000c7d00: rol dword ptr [ecx], 0x89; ret 0xb60f; 
0x00041b89: rol dword ptr [ecx], 0xc6; inc ecx; jmp dword ptr [eax]; 
0x00085559: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000bc11d: rol dword ptr [ecx], 1; ret 0x48b; 
0x000b4658: rol dword ptr [ecx], 1; ret; 
0x000d8878: rol dword ptr [ecx], 9; ret 0xf983; 
0x000cf8d5: rol dword ptr [ecx], cl; ret; 
0x000954ea: rol dword ptr [edi + 0x3000ecc], 0xc; cdq; jmp ecx; 
0x000c51cc: rol dword ptr [edi - 6], 1; call dword ptr [eax - 0x73]; 
0x0009639b: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bfb09: rol dword ptr [edi], cl; add byte ptr [ecx + 0x1244f4c3], al; add byte ptr [ebx - 0x7cebdb8c], cl; jmp dword ptr [ebx + 0xf]; 
0x000ac874: rol dword ptr [edx], 0; add byte ptr [eax - 0x73], dl; sub esp, -0x75; cli; call dword ptr [eax - 0x18]; 
0x0011af8e: rol dword ptr [edx], 0x74; ret; 
0x00131147: rol dword ptr [edx], 0x89; ret; 
0x00098bcf: rol dword ptr [esi - 0x69], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000417a3: rol dword ptr [esi], 0x83; ret 0x901; 
0x0009bfd1: rol dword ptr [esp + 0xe], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c052: rol ebx, 0x63; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b6c3e: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 6]; mov eax, edx; ret; 
0x00030af9: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0001a76b: rol edx, 9; mov dword ptr [eax + 0x1938], edx; pop ebx; pop esi; ret; 
0x0001a6cb: rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0009becf: rol esi, 0x64; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0010ecd9: ror ax, 8; ret; 
0x000527fd: ror bl, 1; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x000ff12d: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x0005ed06: ror byte ptr [eax - 0x7a72f2b9], 1; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x000de366: ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x0007e067: ror byte ptr [eax], 0x39; ret 0xf375; 
0x000e1e72: ror byte ptr [eax], 0x50; call 0x9d860; add esp, 0x1c; ret; 
0x00162b54: ror byte ptr [eax], 0x5f; ret; 
0x00081ab6: ror byte ptr [eax], 0x83; clc; or dword ptr [edi + 0x4b], esi; mov ecx, dword ptr [ebx + eax*4 - 0x620a4]; add ecx, ebx; jmp ecx; 
0x0012f3fb: ror byte ptr [eax], 0x83; js 0x12f3f8; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x0015e091: ror byte ptr [eax], 0x83; ret 0x5608; 
0x0015cdf2: ror byte ptr [eax], 0x83; ret 0x5708; 
0x00157a31: ror byte ptr [eax], 0x83; ret 0x8308; 
0x0012057e: ror byte ptr [eax], 0x83; ret 0x8908; 
0x00156211: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0016551d: ror byte ptr [eax], 0x83; salc; add byte ptr [ebx - 0x2d7cff29], al; add cl, ch; ret 0xfff0; 
0x0012a837: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0012a814: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00043856: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x0012f253: ror byte ptr [ebp + 0x32a093], 1; add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x000b4689: ror byte ptr [ebp + 0x480f0750], 1; ret 0xb70f; 
0x0001ea86: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x0004b43a: ror byte ptr [ebp + 0x490f1f4a], cl; retf 0xf9c1; add eax, 0xf6944d89; ret 0xf1f; 
0x0011ff0c: ror byte ptr [ebp + 0x56102474], 0x8d; sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x0013dda3: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x0006a36d: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x00087bf1: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x00135151: ror byte ptr [ebp - 0x72af47bb], 0x83; xor byte ptr [0x8d500000], dh; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x00096e87: ror byte ptr [ebp - 0x7af0efc0], cl; ret; 
0x00165071: ror byte ptr [ebp - 0x7cafdb94], cl; ret 0x901; 
0x0012e3f0: ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; and dword ptr [eax + 0x41], 0xfffffff4; call dword ptr [edx - 0x73]; 
0x0007d53e: ror byte ptr [ebx + 0x1202454], 1; ret 0xfa81; 
0x000b4fb9: ror byte ptr [ebx + 0x209483], cl; add byte ptr [ecx], bh; cmp dword ptr [eax + 0xf000020], -0x6b; ret 0xb38b; 
0x00101935: ror byte ptr [ebx + 0x3980044a], 0; je 0x101940; ret; 
0x001013a7: ror byte ptr [ebx + 0x656c244c], 1; sub ecx, dword ptr [0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x00031b18: ror byte ptr [ebx + 0x74d28510], 1; int1; xor eax, eax; ret; 
0x000f5b05: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000e8349: ror byte ptr [ebx + 0xc6c819c], 0xfa; inc dword ptr [ecx]; retf; jmp ebx; 
0x0008ac46: ror byte ptr [ebx + 0xf0c245c], cl; mov esi, 0x75c08401; adc ebx, ebp; adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x000dd6d6: ror byte ptr [ebx + 0xf182474], 0x94; ret 0xc985; 
0x0002f984: ror byte ptr [ebx - 0x1077d], 0xff; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0002fc00: ror byte ptr [ebx - 0x1077d], 0xff; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x00036c65: ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0012fea9: ror byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x7d]; 
0x0007db49: ror byte ptr [ebx - 0x16d7dbb4], 1; cmp ah, 0xff; dec dword ptr [ecx - 0x76dfdbb4]; push esp; and al, 0x14; call eax; 
0x00076bad: ror byte ptr [ebx - 0x20ff7a44], 0xf9; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000527f9: ror byte ptr [ebx - 0x342f7874], 0xf9; inc dword ptr [ecx]; stc; jmp ecx; 
0x000cebb0: ror byte ptr [ebx - 0x34b786c], 0xf9; inc dword ptr [ecx]; cli; jmp edx; 
0x00052424: ror byte ptr [ebx - 0x36cf7874], 0xf9; inc dword ptr [ecx]; stc; jmp ecx; 
0x00051db3: ror byte ptr [ebx - 0x378b7864], 0xf9; inc dword ptr [ecx]; sti; jmp ebx; 
0x0010d5cd: ror byte ptr [ebx - 0x7297db84], 0x83; lds ebp, ptr [edx + edi*8]; call dword ptr [eax - 0x73]; 
0x000f5e65: ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001026e4: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x1025c0; add esp, 4; ret; 
0x00119b69: ror byte ptr [ebx - 0x769a3bbb], 6; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0007d134: ror byte ptr [ebx - 0x76ebdbac], 1; ret; 
0x001627c3: ror byte ptr [ebx], 0x5f; ret; 
0x000c708e: ror byte ptr [ebx], 1; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000c6f41: ror byte ptr [ebx], 1; mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000c708c: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00069c6a: ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x0013f88d: ror byte ptr [ecx + 0x1e00b9], 0; pop ebx; pop esi; pop edi; ret; 
0x0003ad3f: ror byte ptr [ecx + 0x23d231d6], cl; je 0x3ad6b; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000a218f: ror byte ptr [ecx + 0x23d231d6], cl; je 0xa21bb; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x0003dc87: ror byte ptr [ecx + 0x23d231d7], cl; jl 0x3dcb3; sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x000a4e67: ror byte ptr [ecx + 0x23d231d7], cl; jl 0xa4e93; sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x00026990: ror byte ptr [ecx + 0x2fa80f2], 0xf; xchg esi, eax; ret 0x550a; 
0x0006e452: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x00073b76: ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x00074016: ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000580ec: ror byte ptr [ecx + 0x5f5e5b3b], cl; ret; 
0x00088d99: ror byte ptr [ecx + 0x75cb38f1], cl; adc eax, 0x83d4758b; ret 0xf01; 
0x0008a32d: ror byte ptr [ecx + 0x75d938f9], cl; adc eax, 0x83d47d8b; ret 0xf01; 
0x00030e43: ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00072205: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000d9dbd: ror byte ptr [ecx + 0xf60247c], 1; dec esp; ret 0xc183; 
0x000a7f63: ror byte ptr [ecx + 0xffd89e8], 0x94; ret 0xf883; 
0x0002f6d4: ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x000453c0: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x0002f394: ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x0002fa24: ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x00030a7a: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000f5b47: ror byte ptr [ecx - 0x3fcef7bf], 1; ret; 
0x00056c45: ror byte ptr [ecx - 0x4577b], 1; call dword ptr [eax - 0x7d]; 
0x00166a34: ror byte ptr [ecx - 0x7693dbbc], 1; ret 0x6c89; 
0x00162b59: ror byte ptr [ecx], 0x5f; ret; 
0x000ff130: ror byte ptr [ecx], 0xc8; ret; 
0x00037d9f: ror byte ptr [ecx], cl; ret 0x840f; 
0x0016761d: ror byte ptr [ecx], cl; test dword ptr [ecx], 0x247c0bef; and byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x000fdad9: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x001212e0: ror byte ptr [edi], 0x44; ret 0x708b; 
0x0010768f: ror byte ptr [edi], 0x44; ret 0x7789; 
0x00104773: ror byte ptr [edi], 0x44; ret 0x8d50; 
0x000eaf7f: ror byte ptr [edi], 0x44; ret 0xec83; 
0x0001ca8e: ror byte ptr [edi], 0x44; ret; 
0x000fb372: ror byte ptr [edi], 0x45; ret 0xc084; 
0x000342b8: ror byte ptr [edi], 0x48; ret 0xc483; 
0x0007a38d: ror byte ptr [edi], 0x48; ret 0xff50; 
0x000f6637: ror byte ptr [edi], 0x49; ret 0xc483; 
0x001627ec: ror byte ptr [edi], 0x5f; ret; 
0x00126263: ror byte ptr [edi], 0x84; add dword ptr [ecx], eax; add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x000f1b84: ror byte ptr [edi], 0x84; add eax, 0x8b000002; pop ebp; sub dh, dh; ret; 
0x0012d5a1: ror byte ptr [edi], 0x84; arpl word ptr [0xec830000], ax; or al, 0x8b; inc ebp; cmp al, 0x56; call dword ptr [eax + 0x10]; 
0x0012bef7: ror byte ptr [edi], 0x84; cmp eax, 0x83ffeee7; in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000fe1d6: ror byte ptr [edi], 0x84; das; or al, 0; add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x000fe10a: ror byte ptr [edi], 0x84; das; or al, 0; add byte ptr [ebp - 0x5ac6e7d], cl; call dword ptr [ecx + 0x51]; 
0x000b56eb: ror byte ptr [edi], 0x84; into; add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; inc ebp; ret 0xfffb; 
0x000fd0b6: ror byte ptr [edi], 0x84; jecxz 0xfd0bb; add byte ptr [eax], al; call eax; 
0x000fb84e: ror byte ptr [edi], 0x84; mov ebx, 0x39000000; ret; 
0x0010d5e9: ror byte ptr [edi], 0x84; nop; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743a], cl; ret 0xce80; 
0x00054023: ror byte ptr [edi], 0x84; pop ds; cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x0012cfca: ror byte ptr [edi], 0x84; pop es; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000b6f18: ror byte ptr [edi], 0x84; push ecx; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13f7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000802c7: ror byte ptr [edi], 0x84; ret 0; 
0x000a2d16: ror byte ptr [edi], 0x84; ret 0x1c; 
0x0005dec6: ror byte ptr [edi], 0x84; ret; 
0x0005a557: ror byte ptr [edi], 0x84; xchg edi, eax; and al, 0; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x000f2700: ror byte ptr [edi], 0x84; xchg edx, eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x75]; 
0x000e729d: ror byte ptr [edi], 0x84; xchg esp, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000fe21a: ror byte ptr [edi], 0x84; xlatb; or eax, 0x838d0000; test al, 0x55; cli; call dword ptr [ecx + 0x51]; 
0x00132f51: ror byte ptr [edi], 0x85; add byte ptr [eax], al; add byte ptr [ebp - 0x59cd97d], cl; call dword ptr [ebp + 0x6a]; 
0x00161b38: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x0008f2c4: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00093794: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f2a4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0009cdb4: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00054ff1: ror byte ptr [edi], 0x85; cmp byte ptr [eax + eax], bl; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00080f61: ror byte ptr [edi], 0x85; cwde; add dword ptr [eax], eax; add byte ptr [ebx - 0x1977b], cl; jmp dword ptr [ebp - 0x75]; 
0x0008f15e: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ca84a: ror byte ptr [edi], 0x85; hlt; add al, byte ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x000ed718: ror byte ptr [edi], 0x85; inc ecx; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000ed6ad: ror byte ptr [edi], 0x85; insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x00161c38: ror byte ptr [edi], 0x85; jno 0x161c3f; add byte ptr [eax], al; xor eax, eax; ret; 
0x0009cb79: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000f6e16: ror byte ptr [edi], 0x85; mov dword ptr [0x89000000], eax; sar dword ptr [eax + 0x17a], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70f6: ror byte ptr [edi], 0x85; mov dword ptr [0x89000000], eax; sar dword ptr [eax + 0x17b], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f6ca0: ror byte ptr [edi], 0x85; mov dword ptr [eax], eax; add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6f80: ror byte ptr [edi], 0x85; mov dword ptr [eax], eax; add byte ptr [eax], al; mov edi, dword ptr [esp + 4]; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000bf47d: ror byte ptr [edi], 0x85; mov esp, 0xb8000000; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x0009cadb: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0002adfd: ror byte ptr [edi], 0x85; ret 0; 
0x0013e967: ror byte ptr [edi], 0x85; ret 1; 
0x000432be: ror byte ptr [edi], 0x85; ret; 
0x000eae4f: ror byte ptr [edi], 0x85; test eax, 0x83000001; ret; 
0x00161bf9: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00114b77: ror byte ptr [edi], 0x88; ret 1; 
0x0011bb9c: ror byte ptr [edi], 0x88; ret; 
0x00118a2d: ror byte ptr [edi], 0x88; scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000322bd: ror byte ptr [edi], 0x88; scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x34]; call edi; 
0x001187cc: ror byte ptr [edi], 0x88; syscall; 
0x00028d79: ror byte ptr [edi], 0x88; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x5a8467d], cl; call dword ptr [esi - 1]; 
0x000cf2da: ror byte ptr [edi], 0x89; cli; add al, 0; add byte ptr [ecx], ch; ret 0x4be; 
0x00088302: ror byte ptr [edi], 0x89; push es; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00089d63: ror byte ptr [edi], 0x89; ret 0; 
0x000ef9b0: ror byte ptr [edi], 0x89; ret; 
0x00088552: ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x000ff3e8: ror byte ptr [edi], 0x8c; add dword ptr [ecx + esi*8 - 0x3cfe8b01], edi; mov ebp, esi; call ebx; 
0x00048af3: ror byte ptr [edi], 0x8e; lock or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000888b7: ror byte ptr [edi], 0x8e; ret 0; 
0x0004ddda: ror byte ptr [edi], 0x8e; ret; 
0x000487e3: ror byte ptr [edi], 0x8f; shr ebx, 0xff; dec dword ptr [ebp - 0x58c077d]; call dword ptr [eax - 0x73]; 
0x000eeb82: ror byte ptr [edi], 0x94; ret 0x3e9; 
0x00107d57: ror byte ptr [edi], 0x94; ret 0x4483; 
0x000b3c54: ror byte ptr [edi], 0x94; ret 0x5438; 
0x00067699: ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x0011df08: ror byte ptr [edi], 0x94; ret 0xa3c; 
0x000df204: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00050eb6: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000410dc: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00131935: ror byte ptr [edi], 0x95; ret 0x4ce9; 
0x00132275: ror byte ptr [edi], 0x95; ret 0x50e9; 
0x0012665b: ror byte ptr [edi], 0x95; ret 0xc483; 
0x0007376a: ror byte ptr [edi], 0x95; ret 0xd089; 
0x000c88d0: ror byte ptr [edi], 0x95; ret 0xf981; 
0x0002eded: ror byte ptr [edi], 0x95; ret; 
0x001457e1: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0013fc79: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00127ee1: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0001b8a4: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f33c], 0xc0; neg eax; ret; 
0x00126112: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00127313: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x000fb443: ror byte ptr [edi], 0x9e; ret; 
0x000441a0: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x001316b8: ror byte ptr [edi], 0xb6; rol bl, 0x8d; jbe 0x1316c0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x00131798: ror byte ptr [edi], 0xb6; rol bl, 0x8d; jbe 0x1317a0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x00131d68: ror byte ptr [edi], 0xb6; rol bl, 0x8d; jbe 0x131d70; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x000319cd: ror byte ptr [edi], 0xb6; rol bl, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x0007b360: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00030a77: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x00050f0d: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000e1e37: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0013aa4a: ror byte ptr [edi], 0xb7; inc edi; adc byte ptr [esi - 0x3f], ah; call 0x1012e659; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000d10f2: ror byte ptr [edi], 1; dec edi; ret 0x1e03; 
0x000d7012: ror byte ptr [edi], 1; dec esp; ret 0x5650; 
0x000ee2d8: ror byte ptr [edi], 1; inc edx; ret 0xc001; 
0x0002e660: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x2e645; ret; 
0x0010ecee: ror byte ptr [edi], 1; mov dh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0009c7f0: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000c0933: ror byte ptr [edi], cl; dec eax; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000ba77a: ror byte ptr [edi], cl; inc ebp; ret 0x4489; 
0x0001bf9e: ror byte ptr [edi], cl; inc ebp; ret 0x4589; 
0x000a054e: ror byte ptr [edi], cl; inc esp; ret; 
0x00089826: ror byte ptr [edi], cl; mov dh, 0x76; add dword ptr [ecx + 0x75d938f1], ecx; adc eax, 0x8394758b; ret 0xf01; 
0x0001dd75: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000b0cf7: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004147f: ror byte ptr [edi], cl; test byte ptr [0x83000001], bl; in al, dx; or al, 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x0001c00b: ror byte ptr [edi], cl; test byte ptr [ebp + 0x6b000000], dl; ret 0x893c; 
0x00160197: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x001643b6: ror byte ptr [edi], cl; test byte ptr [edx], ch; adc al, byte ptr [eax]; add byte ptr [ecx + 0x24548be9], cl; and al, 0x29; ret 0x741b; 
0x00024a6f: ror byte ptr [edi], cl; test byte ptr [esi - 0x7d000000], bh; ret; 
0x000b5447: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc739; 
0x00043204: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xca21; 
0x000ddf43: ror byte ptr [edi], cl; xchg esp, eax; ret 0xd020; 
0x00106d27: ror byte ptr [edi], cl; xchg esp, eax; ret 0xd108; 
0x000b9330: ror byte ptr [edi], cl; xchg esp, eax; ret; 
0x00162b5e: ror byte ptr [edx], 0x5f; ret; 
0x00162b72: ror byte ptr [esi], 0x5f; ret; 
0x0011a6a1: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00048fcc: ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x000486d5: ror cl, 0xff; call dword ptr [eax - 0x77]; 
0x000af0c2: ror cl, 0xff; call dword ptr [ebx + 0x56]; 
0x000aed10: ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x00048a8b: ror cl, 0xff; call dword ptr [ebx - 1]; 
0x00047d7c: ror cl, 0xff; call dword ptr [ebx]; 
0x000afae7: ror cl, 0xff; call dword ptr [ecx]; 
0x0004786d: ror cl, 0xff; call dword ptr [edi - 1]; 
0x000b08d9: ror cl, 0xff; call dword ptr [esi - 1]; 
0x000b0f6b: ror cl, 0xff; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x000aea80: ror cl, 0xff; dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000479f2: ror cl, 0xff; dec dword ptr [ecx - 0x35ff7b]; dec dword ptr [ecx - 0x35fb6b]; dec dword ptr [ecx - 0x36274b]; dec dword ptr [ebx - 0x36774b]; jmp dword ptr [esi - 0x70]; 
0x00047b32: ror cl, 0xff; inc dword ptr [eax - 0x7bf08f05]; ret; 
0x00046b2b: ror cl, 0xff; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000b0a88: ror cl, 0xff; jmp eax; 
0x00098b8d: ror dword ptr [eax + 0x3000e97], 0xc; xchg ecx, eax; jmp ecx; 
0x000c876b: ror dword ptr [eax - 6], 1; call dword ptr [eax - 0x18]; 
0x0009be8d: ror dword ptr [eax], 0x65; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00096299: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000641f7: ror dword ptr [ebp + 0x26b4], 0; add byte ptr [eax - 0x3f7cef77], dl; add al, 0x83; ret 0x3910; 
0x000bee5d: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005a2e4: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00073cf1: ror dword ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x39]; 
0x00161517: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x0016284a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x162860; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00095ff4: ror dword ptr [ebp - 0x3e], 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00026fb3: ror dword ptr [ebp - 0x9ffd98c], cl; ret 0x7503; 
0x00030e1b: ror dword ptr [ebx + 0x1302494], 0; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0009be0a: ror dword ptr [ebx + 0x3000e65], 0xc; xchg ecx, eax; jmp ecx; 
0x000a44bc: ror dword ptr [ebx + 0x949c84], 0; add byte ptr [ecx - 0x76dfdbb4], cl; ret 0xe2d3; 
0x001034e1: ror dword ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 0x75]; 
0x000afa0a: ror dword ptr [ebx - 0x35fb6b], cl; call ebx; 
0x000b0a71: ror dword ptr [ebx - 0x36276b], cl; dec dword ptr [ecx + 0x75d285c8]; sub al, byte ptr [ebp + 0x76850ff6]; add dword ptr [eax], eax; add byte ptr [ebx - 0x363f7b], al; jmp eax; 
0x00051c46: ror dword ptr [ebx - 0x5a36b], cl; jmp dword ptr [ebp - 0x77]; 
0x00107832: ror dword ptr [ebx - 0x76fbdb8c], cl; inc edi; adc al, 0x29; ret; 
0x000949d6: ror dword ptr [ebx], 0xd7; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001640d9: ror dword ptr [ecx + 0x5f8c1cd], 0xf6; rcr dword ptr [edi], 0xf; test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x00069948: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000ea51d: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0002f571: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002f8e2: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0002fb6a: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001647cf: ror dword ptr [ecx - 0x7683dbac], 1; jl 0x1647fb; js 0x164762; je 0x1647ff; je 0x1647d4; ret 0; 
0x00030afa: ror dword ptr [ecx], 0x89; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00163e12: ror dword ptr [ecx], 1; ret; 
0x001387b5: ror dword ptr [ecx], cl; ret 0xc189; 
0x000b3a11: ror dword ptr [ecx], cl; ret; 
0x000960b2: ror dword ptr [edi + 0x3000ec1], 0xc; cdq; jmp ecx; 
0x00094a52: ror dword ptr [edi + 0x3000ed6], 0xc; cdq; jmp ecx; 
0x000948d2: ror dword ptr [edi + 0x3000ed7], 0xc; xchg ecx, eax; jmp ecx; 
0x00098c09: ror dword ptr [edi + edx*4], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bac3a: ror dword ptr [edi], 0x49; fld dword ptr [ecx]; ret; 
0x000bc11a: ror dword ptr [edi], 0x49; rol dword ptr [ecx], 1; ret 0x48b; 
0x001635b9: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x00135e14: ror dword ptr [edi], 0x84; or eax, 0x8b000001; push edx; or byte ptr [ecx], bh; ret 0x3675; 
0x0005f187: ror dword ptr [edi], 0x85; ret 0xfff5; 
0x00064df1: ror dword ptr [edi], 0x86; test dword ptr [eax], 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x001194a1: ror dword ptr [edi], 0x96; ret 0x5522; 
0x000db275: ror dword ptr [edi], 0xa3; ret 0xcf89; 
0x0009cde3: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00047f8b: ror dword ptr [edi], cl; test byte ptr [edx + edi*8 - 1], cl; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00094a97: ror dword ptr [edx - 0x2a], 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000438f3: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0009604a: ror dword ptr [esi], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fd8: ror dword ptr [esi], 0; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000f7e47: ror dword ptr [esi], 0; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009bf09: ror dword ptr [esp + 0xc03000e], 0x91; jmp ecx; 
0x0010ecda: ror eax, 8; ret; 
0x0001af10: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00030c31: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013d674: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x00077774: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0011b8a4: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b96c: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00062750: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c64: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adf4: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9ba: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b364: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d35: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x3c]; push edx; call eax; 
0x000607ef: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a7b: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00025f04: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 0x18], ecx; call eax; 
0x00034148: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0001b21b: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00025f53: ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x00058445: ror eax, 9; xor eax, dword ptr gs:[0x18]; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c75: ror eax, 9; xor eax, dword ptr gs:[0x18]; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x00094996: ror ebx, 0xd6; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b6c3f: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xb6c50; mov eax, edx; ret; 
0x0013f7a3: ror edx, 9; xor edx, dword ptr gs:[0x18]; call edx; 
0x00121478: ror edx, 9; xor edx, dword ptr gs:[0x18]; push edx; call eax; 
0x00096075: ror esp, 0xc1; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0007b371: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000f4538: sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; call dword ptr gs:[0x10]; 
0x00092efe: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0009c078: sahf; arpl word ptr [esi], cx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00109bab: sahf; bnd jmp dword ptr [esi - 0x70]; 
0x0011cfb5: sahf; cli; call dword ptr [eax - 0x73]; 
0x0011cae4: sahf; cli; call dword ptr [ebp - 1]; 
0x00041a8d: sahf; mov al, 0x87; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x00070fa2: sahf; mov eax, 0xfffffff; xchg esp, eax; ret 0xd108; 
0x0011de41: sahf; pop esi; cli; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x000b7787: sahf; ret 0xd329; 
0x0004cd46: sahf; ret; 
0x0008354f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00050e3e: sahf; xchg edi, eax; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00050f10: sal bh, 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x0012e3ab: sal bh, 0xd8; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x00043c32: sal bh, 0xd8; pop esi; pop edi; ret; 
0x0001b8ad: sal bh, 0xd8; ret; 
0x0004d304: sal bh, cl; pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000504c4: sal byte ptr [eax + eax*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0x28838d50; jo 0x504cc; call dword ptr [eax - 0x18]; 
0x0001ce91: sal byte ptr [eax + ebp*8 - 0x73], 0x87; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x001094cd: sal byte ptr [eax + ebx - 0x75], cl; push esi; or al, 0xf6; ret 0x7504; 
0x00122dc8: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x5bc377f], cl; call dword ptr [eax + 0x52]; 
0x000bef2d: sal byte ptr [eax + ebx*2 - 0x7d], 0xec; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x000262d3: sal byte ptr [eax + ecx - 0x77], cl; add al, 0x24; call edx; 
0x000513d5: sal byte ptr [eax + ecx*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0x28858d50; jo 0x513dd; call dword ptr [eax - 0x18]; 
0x00022aad: sal byte ptr [eax + edi - 0x75], cl; je 0x22ad7; cmp byte ptr [ecx - 0x769fdbbc], cl; ret 0x44c7; 
0x000256a1: sal byte ptr [eax + edx - 0x7b], cl; sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x000ffb5d: sal byte ptr [eax + esi - 0x48], cl; js 0xffb64; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00073fed: sal byte ptr [eax + esi - 0x77], 0xd0; pop ebx; ret; 
0x000a626d: sal byte ptr [eax + esi*4 - 0x77], cl; ret 0xe889; 
0x000a8f35: sal byte ptr [eax + esi*4 - 0x77], cl; ret 0xf889; 
0x0007acc5: sal byte ptr [eax - 0x48], 0xf0; add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000cc8fd: sal byte ptr [eax - 0x73], 0x43; add al, 0xeb; mov word ptr [ebp + 0x538b0076], cs; or al, 0x83; ret; 
0x0008b6d3: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x0009be02: sal byte ptr [eax], 0xe8; lock adc byte ptr [edx], cl; add byte ptr [ecx + 0xe658bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098b69: sal byte ptr [eax], 0xe8; mov dword ptr [ebx + 0xa], eax; add byte ptr [ecx + 0xe97a4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00030a4d: sal byte ptr [ebp + 0x10], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0008ac4f: sal byte ptr [ebp + 0x11], 0xeb; adc ecx, dword ptr [ebp - 0x7cffd98c]; ret 0xf01; 
0x0001af33: sal byte ptr [ebp + 0x15], cl; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0011af52: sal byte ptr [ebp + 0x1b], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x001247b8: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000f7a40: sal byte ptr [ebp + 0x1d], 0xb8; jbe 0xf7a46; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ec74f: sal byte ptr [ebp + 0x1e], 0xb8; sub dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013f779: sal byte ptr [ebp + 0x1f], 0xb8; adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007b45e: sal byte ptr [ebp + 0x1f], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000fbfcd: sal byte ptr [ebp + 0x20], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0013cbd1: sal byte ptr [ebp + 0x20], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000ff7ed: sal byte ptr [ebp + 0x20], 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff94d: sal byte ptr [ebp + 0x20], 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ff89d: sal byte ptr [ebp + 0x20], 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c58ad: sal byte ptr [ebp + 0x20], 0xb8; jb 0xc58b3; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eddd4: sal byte ptr [ebp + 0x21], 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea213: sal byte ptr [ebp + 0x22], 0xb8; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea2c3: sal byte ptr [ebp + 0x22], 0xb8; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea372: sal byte ptr [ebp + 0x23], 0xb8; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea422: sal byte ptr [ebp + 0x23], 0xb8; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7862: sal byte ptr [ebp + 0x23], 0xb8; mov es, word ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed931: sal byte ptr [ebp + 0x24], 0x8b; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed158: sal byte ptr [ebp + 0x25], 0xb8; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed0b8: sal byte ptr [ebp + 0x25], 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00035288: sal byte ptr [ebp + 0x25], 0xb8; arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000311b0: sal byte ptr [ebp + 0x25], 0xb8; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000f4448: sal byte ptr [ebp + 0x25], 0xb8; test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f5456: sal byte ptr [ebp + 0x27], 0xb8; cmp al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ffa06: sal byte ptr [ebp + 0x27], 0xb8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001013ee: sal byte ptr [ebp + 0x27], 0xb8; jne 0x1013f4; add byte ptr [eax], al; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x000f4de6: sal byte ptr [ebp + 0x27], 0xb8; jns 0xf4ded; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00048cbb: sal byte ptr [ebp + 0x2a], 0x85; test byte ptr [edi], -0x7b; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000ff502: sal byte ptr [ebp + 0x2b], 0xbd; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x00124a70: sal byte ptr [ebp + 0x2c], 0x83; in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000f5fb0: sal byte ptr [ebp + 0x2d], 0xb8; add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c66d6: sal byte ptr [ebp + 0x2f], cl; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c6786: sal byte ptr [ebp + 0x2f], cl; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000f724a: sal byte ptr [ebp + 0x33], cl; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f730a: sal byte ptr [ebp + 0x33], cl; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000c216a: sal byte ptr [ebp + 0x33], cl; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000ecd69: sal byte ptr [ebp + 0x34], 0x8b; dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecfa9: sal byte ptr [ebp + 0x34], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f7950: sal byte ptr [ebp + 0x35], 0x8b; pop esp; and al, 0x50; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000ecc46: sal byte ptr [ebp + 0x37], 0x8b; dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ece86: sal byte ptr [ebp + 0x37], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0008f111: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x0007c7c5: sal byte ptr [ebp + 0x38], 0x89; dec esp; and al, 0xc; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x00034593: sal byte ptr [ebp + 0x3a], 0x83; stosd dword ptr es:[edi], eax; add byte ptr [edi], dl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00137482: sal byte ptr [ebp + 0x3b], 0x83; stosd dword ptr es:[edi], eax; test byte ptr [0x83010000], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009d290: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000716e6: sal byte ptr [ebp + 0x47], 0x83; sub eax, dword ptr [ecx]; pop ebx; pop esi; pop edi; ret; 
0x000f73cb: sal byte ptr [ebp + 0x52], cl; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000f74ab: sal byte ptr [ebp + 0x52], cl; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000537f1: sal byte ptr [ebp + 0x75], 0x8b; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00120cab: sal byte ptr [ebp + 0xa], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00125738: sal byte ptr [ebp + 0xd], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b7708: sal byte ptr [ebp + 0xd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0007482f: sal byte ptr [ebp + 0xe], 0x83; stosb byte ptr es:[edi], al; cmp al, 0x19; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0006b07f: sal byte ptr [ebp + 0xe], 0x83; stosb byte ptr es:[edi], al; sub byte ptr [ecx], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0016284f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00126686: sal byte ptr [ebp + 0xf], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0013024e: sal byte ptr [ebp + 0xf], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000fca01: sal byte ptr [ebp + 4], cl; ret; 
0x00050848: sal byte ptr [ebp + 5], cl; add esp, 8; pop ebx; ret; 
0x0013bf16: sal byte ptr [ebp + 7], cl; add esp, 8; pop ebx; ret; 
0x0013bab5: sal byte ptr [ebp + 8], 0x5b; pop esi; pop edi; ret; 
0x00132dfd: sal byte ptr [ebp + 8], cl; add esp, 0xc; ret; 
0x000fc9dd: sal byte ptr [ebp + 8], cl; ret; 
0x00123954: sal byte ptr [ebp + 9], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0011f39c: sal byte ptr [ebp + 9], 0x5b; pop esi; pop edi; ret; 
0x00128054: sal byte ptr [ebp + 9], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x000c5b54: sal byte ptr [ebp + 9], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00051134: sal byte ptr [ebp + 9], 0x83; sub eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x001323b8: sal byte ptr [ebp + ebp - 0x77], 0xc8; pop ebx; ret; 
0x00128120: sal byte ptr [ebp + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x00028af2: sal byte ptr [ebp + ebp - 0x7d], 0xf8; dec dword ptr [edi]; inc esp; ret; 
0x00050d70: sal byte ptr [ebp + ebp*2 - 0x73], 0x83; nop; je 0x50d72; call dword ptr [eax - 0x73]; 
0x0002e590: sal byte ptr [ebp + ebp*2 - 0x75], 0x95; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0013002c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb3d8f7d], cl; call dword ptr [eax - 0x73]; 
0x0012a8ec: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xb945f7d], cl; call dword ptr [eax - 0x73]; 
0x0013cb58: sal byte ptr [ebp + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x59b656d], cl; call dword ptr [edx + 0x50]; 
0x00069a96: sal byte ptr [ebp + ecx - 0x75], 0x92; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0007ae28: sal byte ptr [ebp + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00124532: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0016b9dc: sal byte ptr [ebp + ecx - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x0013c2c8: sal byte ptr [ebp + ecx*2 - 0x80], 0xfa; das; ja 0x1a68a; mov eax, dword ptr [ebp - 0x3c]; add eax, dword ptr [eax + edx*4 - 0x5d528]; jmp eax; 
0x000c6408: sal byte ptr [ebp + edi*2 - 0x75], 0x45; aam 0x83; ret; 
0x000c0ee8: sal byte ptr [ebp + edx - 0x7d], 0xec; or al, 0x56; call eax; 
0x000b25ee: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x0010b145: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0010dfd1: sal byte ptr [ebp - 0x14], cl; call 0x10d590; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x000808b3: sal byte ptr [ebp - 0x16], 0x83; ret; 
0x00116be5: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011f3de: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x0012ff28: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0002e665: sal byte ptr [ebp - 0x23], cl; ret; 
0x00029501: sal byte ptr [ebp - 0x24], 0x8b; jl 0x2952b; or al, 0x89; ret; 
0x000f85c6: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x000f5ba6: sal byte ptr [ebp - 0x29], cl; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; ret; 
0x000f8627: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x000bfa37: sal byte ptr [ebp - 0x2a], 0x83; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000f835c: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x5b28b6a], cl; call dword ptr [edx - 0x77]; 
0x000f84f1: sal byte ptr [ebp - 0x41], 0x8d; je 0xf851d; add byte ptr [ebx - 0x7c72f714], al; jbe 0xf8549; cli; call dword ptr [eax - 0x73]; 
0x000f837b: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x5b3f36a], cl; call dword ptr [edx - 0x77]; 
0x001265c8: sal byte ptr [ebp - 0x77], 0xc8; pop ebx; ret; 
0x0009f070: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x0009ee30: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x000c6ce5: sal byte ptr [ebp - 0x78], 0x83; in al, dx; add al, 0x8d; test dword ptr [ebx + ebp*8 - 1], eax; call dword ptr [eax - 1]; 
0x000865a8: sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x000b293b: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000a057b: sal byte ptr [ebp - 0xe], cl; ret; 
0x00109626: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x0011a6a4: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0010c474: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x0011e0d6: sal byte ptr [ebx + eax - 0x3a], 0; add byte ptr [eax - 0x7bf0ffc2], al; ret; 
0x000f946a: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000dda82: sal byte ptr [ebx + ebx*2 - 0x75], cl; inc edx; or byte ptr [ebp + 0x390474c0], al; ret; 
0x000de5e0: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00073917: sal byte ptr [ebx + ecx - 0x80], cl; cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x4374; 
0x0012f19a: sal byte ptr [ebx + edi - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x00130732: sal byte ptr [ebx + edi - 0x7d], 0xec; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0004a056: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x49fe9; ret 0x40c7; 
0x00124385: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016b73b: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x78a1f6d], cl; call dword ptr [edx + 0x50]; 
0x001388fa: sal byte ptr [ebx + edx*2 - 0x7d], 0xec; or byte ptr [ebp - 0x559f34d], cl; call dword ptr [esi - 1]; 
0x000abfbf: sal byte ptr [ebx - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x00128071: sal byte ptr [ebx - 0x7d], 0xec; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x000f7575: sal byte ptr [ecx + eax - 0x3d], 0x83; in al, dx; or al, 0x8d; adc al, 0x96; cli; call dword ptr [eax - 0x73]; 
0x00126645: sal byte ptr [ecx + eax*2 - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x001251e5: sal byte ptr [ecx + ebp*4 - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0010c67c: sal byte ptr [ecx + ecx - 0x75], 0x5d; cld; leave; ret; 
0x000b2904: sal byte ptr [ecx + ecx - 0x75], cl; adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x0012cfe8: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x000273d8: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x001255b1: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x0008aaac: sal byte ptr [ecx + edi - 0x73], cl; push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x0007c42c: sal byte ptr [ecx + edi*4 + 0x39], cl; ret 0xb574; 
0x0008adfc: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0x8adf0; mov eax, edx; pop ebx; ret; 
0x0007782d: sal byte ptr [ecx + edx - 0x75], 0x58; xor al, 0x39; ret 0x850f; 
0x001171a1: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x00025504: sal byte ptr [ecx + edx - 0x7d], 0xf8; add esi, dword ptr [esp + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00124d55: sal byte ptr [ecx + edx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0008466c: sal byte ptr [ecx + esi - 0x7d], 0xec; add al, 0x6a; add eax, 0x28838d50; jo 0x84674; call dword ptr [eax - 0x18]; 
0x000a354c: sal byte ptr [ecx + esi*4 - 0x77], cl; ret 0xe889; 
0x000c7cfc: sal byte ptr [ecx - 0x7d], cl; rol dword ptr [ecx], 0x89; ret 0xb60f; 
0x0007a75d: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0008228e: sal byte ptr [edi + ebp - 0x7d], 0xec; or bh, bh; je 0x822bb; sbb al, 0x53; call eax; 
0x0012f1eb: sal byte ptr [edi + ebp*4 + 0x65], 0x89; push es; add esp, 4; pop ebx; pop esi; ret; 
0x0008356c: sal byte ptr [edi + ebx - 0x70], 0x39; ret 0x476; 
0x000ee792: sal byte ptr [edi + ebx - 0x7d], 0xec; add al, 0x89; ret; 
0x00025d7a: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x58fbf79], cl; call dword ptr [eax + 0x56]; 
0x00107fbe: sal byte ptr [edi + ebx*2 - 0x75], 0x5e; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x000afb7e: sal byte ptr [edi + ebx*4 - 0x77], cl; ret 0xf889; 
0x000e49b2: sal byte ptr [edi + edi*2 + 0x39], cl; ret 0x7b74; 
0x0010c5fd: sal byte ptr [edi + edi*2 - 0x7d], 0xec; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x000b2756: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x00069ace: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000fbfa6: sal byte ptr [edi + esi - 0x7d], 0xec; add al, 0x57; push 0; push ebx; call esi; 
0x0012dd46: sal byte ptr [edi - 0x75], 0x46; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0012734c: sal byte ptr [edi - 0x7d], 0xec; add al, 0x83; ret; 
0x0006e979: sal byte ptr [edi - 0xc], 1; mov eax, dword ptr [esp + 8]; pop ebx; add eax, ecx; ret; 
0x0010798f: sal byte ptr [edx + 0xe], 1; mov eax, 1; ret; 
0x000f9471: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0012737a: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x0012aafd: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x00128003: sal byte ptr [edx + ecx - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001392fb: sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x0006ad68: sal byte ptr [esi + 0x2c], 1; sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00078e31: sal byte ptr [esi + 0x2c], 1; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000343b4: sal byte ptr [esi + eax - 0x39], cl; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008308f: sal byte ptr [esi + eax*8 - 0x7d], 0xec; or byte ptr [ebp - 0x5bb957d], cl; call dword ptr [eax + 0x56]; 
0x0001bf34: sal byte ptr [esi + ebp*8 - 0x73], cl; nop; insb byte ptr es:[edi], dx; cli; call dword ptr [edx - 0x73]; 
0x0007b254: sal byte ptr [esi + ebx*8 - 0x77], cl; dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000fdd87: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000fbc8f: sal byte ptr [esi + ecx + 0x5b], cl; pop esi; pop edi; ret; 
0x000de5cb: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0009d147: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x0007b29c: sal byte ptr [esi + edx*4 - 0x77], cl; dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x0012399e: sal byte ptr [esi + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xb291f79], cl; call dword ptr [eax - 0x73]; 
0x0002c2dc: sal byte ptr [esi - 0x75], 0x42; or al, 0x83; ret 0x8908; 
0x0008ac60: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0x8ac58; mov eax, edx; pop ebx; ret; 
0x000d9316: sal byte ptr [esp + eax + 0x39], cl; ret 0x2b75; 
0x0009de6d: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000fc9d9: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0xfc9e8; ret; 
0x000fc9fd: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0xfca08; ret; 
0x0013f5f1: sal byte ptr [esp + ebx - 0x75], cl; adc byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a981: sal byte ptr [esp + ebx - 0x75], cl; add byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac41: sal byte ptr [esp + ebx - 0x75], cl; add byte ptr [edx + ebx], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a7c1: sal byte ptr [esp + ebx - 0x75], cl; and ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a781: sal byte ptr [esp + ebx - 0x75], cl; and al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6f1: sal byte ptr [esp + ebx - 0x75], cl; and byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a941: sal byte ptr [esp + ebx - 0x75], cl; cmp ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a901: sal byte ptr [esp + ebx - 0x75], cl; cmp al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab81: sal byte ptr [esp + ebx - 0x75], cl; cmp byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa01: sal byte ptr [esp + ebx - 0x75], cl; or byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f671: sal byte ptr [esp + ebx - 0x75], cl; sbb byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a841: sal byte ptr [esp + ebx - 0x75], cl; sub ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a801: sal byte ptr [esp + ebx - 0x75], cl; sub al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8c1: sal byte ptr [esp + ebx - 0x75], cl; xor ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a881: sal byte ptr [esp + ebx - 0x75], cl; xor al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000abea3: sal byte ptr [esp + ebx*8 - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x0016bef1: sal byte ptr [esp + ecx - 0x17], 0x17; add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; ret; 
0x000fca19: sal byte ptr [esp + ecx - 0x17], 0x6f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x00163311: sal byte ptr [esp + ecx - 0x58], 1; jne 0x163330; lea eax, [ecx + 4]; ret; 
0x000418d9: sal byte ptr [esp + ecx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x0003bfc9: sal byte ptr [esp + edx + 0x39], cl; ret; 
0x00078bdc: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00120df9: sal byte ptr [esp + edx - 0x75], 1; adc cl, byte ptr [ecx - 0x74f7dbac]; add byte ptr [ecx - 0x16fbdbbc], cl; adc esp, -9; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00073b49: sal byte ptr [esp + esi - 0x77], 0xd0; pop ebx; pop esi; ret; 
0x0010b591: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x10b5cb; call eax; 
0x000fc0bf: sal cl, 1; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009373c: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00131200: sal dh, cl; call ecx; 
0x000b6d26: sal dl, 1; in al, dx; call dword ptr [eax - 0x73]; 
0x000b6c91: sal dl, 1; in al, dx; call dword ptr [ecx + 0x52]; 
0x00102961: sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0xe18df80]; call dword ptr [eax + 0x6a]; 
0x000fdd8b: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0011a768: sal dword ptr [ebx + 0xf], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00086e09: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x0002f6aa: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x00077da4: sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x000eb435: sal dword ptr [edi - 0x10], cl; mov eax, ecx; pop ebx; ret; 
0x0009d341: sal dword ptr [esi + 0x35], 0x89; ret; 
0x000799f9: sal dword ptr [esp + ecx - 0x77], 0xc2; mov eax, dword ptr [eax]; test eax, eax; jne 0x799f8; ret; 
0x000954fd: sal dword ptr [esp + ecx*8 + 0xe], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949f1: sal eax, 0xd6; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009db99: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0009dcba: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d5e1: sal ebx, 1; stosb byte ptr es:[edi], al; pop edi; ret; 
0x0002f9b4: sal edi, 0xd8; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x000ede8c: sal edx, 1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001312e0: sal esi, 1; call ecx; 
0x0004bde5: sal esi, 1; ret 0xf40; 
0x0001d676: salc; add al, 8; add byte ptr [ebx + 0x45890cc4], al; fmul qword ptr [ebp - 0x1c81cf7d]; call dword ptr [eax - 0x73]; 
0x00163206: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001202d3: salc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add esp, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x000c67c9: salc; add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00165520: salc; add byte ptr [ebx - 0x2d7cff29], al; add cl, ch; ret 0xfff0; 
0x0014a62e: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00076c16: salc; add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; adc al, 0x41; cli; call dword ptr [eax - 0x75]; 
0x00152dc4: salc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fbfd8: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000bfa39: salc; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00111416: salc; bnd call dword ptr [eax - 0x18]; 
0x000c5bc3: salc; call dword ptr gs:[0x10]; 
0x000829e2: salc; cld; jmp dword ptr [ebp - 0x5f]; 
0x0009d5ac: salc; cld; pop edi; ret; 
0x000e7bf2: salc; dec edx; cli; call dword ptr [eax - 0x18]; 
0x000ab166: salc; fdivr st(7), st(0); dec dword ptr [ebp - 0x570e370]; call dword ptr [edx - 0x73]; 
0x0012e406: salc; hlt; call dword ptr [eax - 0x48]; 
0x001239a7: salc; hlt; call dword ptr [eax - 0x73]; 
0x00146615: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bf8f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00145fd5: salc; inc edx; clc; pop ebx; ret; 
0x001460a5: salc; inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001460d5: salc; inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00146105: salc; inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001533d5: salc; inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00146685: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0014a03f: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b8a1e: salc; inc esi; cli; call dword ptr [eax + 0x56]; 
0x000e5cc6: salc; int 0xf4; jmp dword ptr [ebp - 0x5f]; 
0x0009f2c1: salc; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0007388b: salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x0011a472: salc; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0009dba0: salc; mov eax, dword ptr [esp + 4]; ret; 
0x0009dc20: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x0009dbf6: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0014602d: salc; movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0001e286: salc; or dword ptr [edi], ecx; add byte ptr [ebx - 0x72c3dba4], cl; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x0011a440: salc; pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x000f8629: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009d586: salc; pop edi; ret; 
0x00094998: salc; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949f3: salc; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0010183c: salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009dc60: salc; ret; 
0x00063912: salc; stc; dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x00126ead: salc; sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0014bf0b: salc; ud0; inc dword ptr [ecx + 0x43af1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00101e1e: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000edca2: sar al, 1; dec dword ptr [ecx + 0x6b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000edcc2: sar al, 1; inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0010c9c5: sar bh, 0x75; mov ah, 0x8d; add byte ptr [edx], 0x59; cli; call dword ptr [ecx + 0x52]; 
0x0016b718: sar bh, 0xff; call dword ptr [eax - 0x18]; 
0x0015dd5b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000190ea: sar bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00111bf0: sar bh, 1; jmp dword ptr [esi - 0x70]; 
0x00055d78: sar bh, cl; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x000c7e62: sar bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x000efdc5: sar byte ptr [0x1000], 0xf; inc edx; ret 0x489; 
0x000b6c54: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000f45be: sar byte ptr [eax + 0x135], 1; call dword ptr gs:[0x10]; 
0x000fc1ff: sar byte ptr [eax + 0x1e], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x000ec949: sar byte ptr [eax + 0x24], 0x6a; call dword ptr [esi + 0x57]; 
0x00075f1f: sar byte ptr [eax + 0x26], 0x29; ret; 
0x00081cf3: sar byte ptr [eax + 0x27], 0x83; in al, dx; or byte ptr [ebp - 0x5bc017a], cl; call dword ptr [ebx + 0x50]; 
0x000f7bdf: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x000506a3: sar byte ptr [eax + 0x3a], 0x83; in al, dx; or byte ptr [ebp - 0x5cc127a], cl; call dword ptr [eax + 0x53]; 
0x000505c0: sar byte ptr [eax + 0x3d], 0x83; in al, dx; or byte ptr [ebp - 0x5cc127a], cl; call dword ptr [eax + 0x53]; 
0x001191ab: sar byte ptr [eax + 0x52], 0x89; ret; 
0x00137358: sar byte ptr [eax + 0xd], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000c0936: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x001378ae: sar byte ptr [eax + 0xf0], 0x8d; wait; test byte ptr [0x81b90000], dh; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0007b747: sar byte ptr [eax + 8], 0xf; inc ebp; ret 0x8189; 
0x0013b0f2: sar byte ptr [eax - 0x35], 0x83; ret; 
0x0012d1c7: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000d1959: sar byte ptr [eax], 0xa; je 0xd18c2; pop ebx; pop esi; pop edi; ret; 
0x00107e86: sar byte ptr [eax], 0xf; dec ecx; inc ebx; adc al, 0x29; ret 0x728d; 
0x00020697: sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x000228b8: sar byte ptr [eax], 0xf; inc ebp; ret 0x548b; 
0x00059daf: sar byte ptr [eax], 0xf; inc esp; ret; 
0x00163154: sar byte ptr [ebx], 0x4a; cld; jne 0x163160; pop ebx; ret; 
0x0007a75f: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x0011b58f: sar byte ptr [ecx + 0x1e], 0x8d; and byte ptr [eax], 0x9d; cli; call dword ptr [eax - 0x73]; 
0x000f7ee8: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000bbc47: sar byte ptr [ecx + 9], 0x89; ret; 
0x00021724: sar byte ptr [ecx - 0x27], 0x2d; ret 0; 
0x00021326: sar byte ptr [ecx - 0x29], 0x2d; ret 0; 
0x0007d0b7: sar byte ptr [ecx], 1; ret; 
0x0009bf89: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x13cef9; add ecx, 0xe6481; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00095fe9: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x13cef9; add ecx, 0xec24d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949a9: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x13cef9; add ecx, 0xed72d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfc6: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x13cef9; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096026: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x13cef9; add ecx, 0xec210; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949e6: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x13cef9; add ecx, 0xed6f0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009bfdd: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x13cef9; add ecx, 0xe642d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009603d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x13cef9; add ecx, 0xec1f9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000949fd: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x13cef9; add ecx, 0xed6d9; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b663f: sar byte ptr [ecx], cl; mov esp, eax; and byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0002f35b: sar byte ptr [edx + 0xfffe], 1; sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x000852aa: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x000256a5: sar byte ptr [edx], 0xf; dec eax; ret 0xc083; 
0x00087913: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x00107658: sar byte ptr [esi + 0x19], 0x8d; inc ebp; add edi, esi; aad 0xc6; inc eax; jmp dword ptr [eax]; 
0x000bc30a: sar byte ptr [esi + 0x22], 1; ret 0x7c83; 
0x00030f5f: sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000eabaf: sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x00072d9c: sar byte ptr [esi - 0x7c72fff7], 0x84; jnp 0x72d9f; call dword ptr [eax - 0x73]; 
0x0012e381: sar byte ptr [esi], 1; hlt; call dword ptr [edx - 0x75]; 
0x00132c3d: sar ch, 0xff; xor eax, eax; ret; 
0x00131b7d: sar ch, 1; call dword ptr [ebx - 0x7d]; 
0x0005e971: sar cl, cl; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x000eae28: sar dh, 0xff; dec dword ptr [ebx - 0x7d7374fa]; inc eax; psubd mm7, mm7; add ecx, edx; jmp ecx; 
0x0010ee13: sar dh, 0xff; dec dword ptr [ebx - 0x8b80]; jmp dword ptr [ebp - 0x75]; 
0x000293dc: sar dh, 0xff; jmp dword ptr [ebp + 3]; 
0x0011e9c6: sar dh, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00028f30: sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00028bf2: sar dh, 0xff; jmp dword ptr [ebp - 0x77]; 
0x0002c0d2: sar dh, 1; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc483; 
0x0014fc5c: sar dh, cl; inc dword ptr [ecx + 0x40461c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000581fc: sar dl, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0006cbf8: sar dl, 1; jmp dword ptr [esi - 0x70]; 
0x0006c8d6: sar dl, cl; jmp dword ptr [esi - 0x70]; 
0x0009bf58: sar dword ptr [0x3000e64], 0xc; xchg ecx, eax; jmp ecx; 
0x00031157: sar dword ptr [0xfffff001], cl; jae 0x1aff0; ret; 
0x000f6e1e: sar dword ptr [eax + 0x17a], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70fe: sar dword ptr [eax + 0x17b], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000eb0b6: sar dword ptr [eax + 0xd0], cl; call dword ptr gs:[0x10]; 
0x000eb0e1: sar dword ptr [eax + 0xd2], cl; call dword ptr gs:[0x10]; 
0x00098c58: sar dword ptr [ebp + 0x3000e96], 0xc; xchg ecx, eax; jmp ecx; 
0x00070fa0: sar dword ptr [ebx], 0x9e; mov eax, 0xfffffff; xchg esp, eax; ret 0xd108; 
0x0005643b: sar dword ptr [ecx - 0x746f0001], 1; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x00068fbf: sar dword ptr [ecx], 0xca; jbe 0x69130; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x00069504: sar dword ptr [ecx], 0xca; jbe 0x69568; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006beec: sar dword ptr [ecx], 0xca; jbe 0x6bf78; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00071b61: sar dword ptr [ecx], 0xca; jbe 0x71db0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000731f1: sar dword ptr [ecx], 0xca; jbe 0x733c0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078581: sar dword ptr [ecx], 0xca; jbe 0x785e0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000eb433: sar dword ptr [ecx], 0xd3; ja 0xeb428; mov eax, ecx; pop ebx; ret; 
0x0004239d: sar dword ptr [ecx], cl; ret; 
0x00095f02: sar dword ptr [edi + 0x3000ec2], 0xc; xchg ecx, eax; jmp ecx; 
0x00101341: sar dword ptr [edx], 1; cmovb eax, edx; ret; 
0x000f8b82: sar dword ptr [esp + ebx*2], 0xf; xchg esp, eax; ret; 
0x0002f365: sar eax, 0x10; ret; 
0x000f65fd: sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x000ed214: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0002f9b9: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0002f65b: sar eax, 0x1f; pop edi; not eax; and eax, edx; ret; 
0x00143361: sar eax, 0x1f; ret; 
0x0002f307: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0007b49b: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d0578: sar eax, 1; pop edi; pop ebp; ret; 
0x0006ea1b: sar eax, 2; mov edx, dword ptr [ecx + 8]; sub edx, eax; mov eax, edx; pop ebx; ret; 
0x0006d028: sar eax, 2; pop edi; pop ebp; ret; 
0x0006f104: sar eax, 2; ret; 
0x0010eb8e: sar eax, 5; add esp, 0xc; ret; 
0x0007a5bd: sar ebp, 0x1f; pop edi; mov edx, ebp; pop ebp; ret; 
0x000f47f7: sar ebp, 0x1f; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00131aed: sar ebp, 1; call dword ptr [ebx - 0x7d]; 
0x00067c05: sar ebp, 2; push ebp; push edx; push esi; call dword ptr [ebx + 0x1c]; 
0x0013ea8f: sar ebx, 0x1f; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x0006e98a: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00096048: sar ecx, 0xc1; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0006f2cc: sar edi, 0x1f; mov edx, edi; pop edi; pop ebp; ret; 
0x000ea20f: sar edi, 0x1f; test eax, eax; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2bf: sar edi, 0x1f; test eax, eax; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000955e2: sar edi, 0xca; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0015dc9b: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x000f474a: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0006c768: sar edx, cl; jmp dword ptr [esi - 0x70]; 
0x000f47fa: sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f5514: sar esi, 0x1f; test eax, eax; jne 0xf5540; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00150d66: sar esi, 0xff; add ebx, 0x3f517; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014fd66: sar esi, 1; inc dword ptr [ecx + 0x40357c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00062949: sar esi, 2; push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0014fb55: sar esi, cl; inc dword ptr [ecx + 0x40568c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00113dc5: sbb ah, 0x5a; cli; call dword ptr [eax + 0x53]; 
0x0011576b: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x5b61f80], cl; call dword ptr [eax - 1]; 
0x0001fb2b: sbb al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbb4], cl; dec edi; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x0015ad4e: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00054ff5: sbb al, 0; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00055332: sbb al, 0; add byte ptr [ebx - 0x5f763], cl; dec dword ptr [ebx - 0x5df73]; inc dword ptr [ecx]; ret; 
0x0001b048: sbb al, 0; lea eax, [eax - 0x59434]; ret; 
0x0001b068: sbb al, 0; lea eax, [eax - 0x5943c]; ret; 
0x0001be98: sbb al, 0; mov eax, dword ptr [eax + 0xf94]; ret; 
0x0001beb8: sbb al, 0; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001b5b8: sbb al, 0; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0001a708: sbb al, 0; mov edx, dword ptr [eax - 0x128]; test edx, edx; je 0x1a715; ret; 
0x0001aff9: sbb al, 0; neg eax; mov edx, dword ptr [edx - 0x108]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0013f6b6: sbb al, 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000b33d0: sbb al, 0x20; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0001c5cf: sbb al, 0x24; call edi; 
0x0001bf0a: sbb al, 0x24; call esi; 
0x0002fa75: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x000b329e: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0002f870: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0001c07e: sbb al, 0x24; mov eax, dword ptr [ebp - 0x40]; call eax; 
0x0013cee6: sbb al, 0x24; ret; 
0x000c5a73: sbb al, 0x29; ret; 
0x0013dafa: sbb al, 0x31; fild dword ptr [eax - 0x6bf08dc2]; ret; 
0x000340ec: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000b24d2: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0007d12a: sbb al, 0x39; ret 0x830f; 
0x000bf7ea: sbb al, 0x39; ret 0x8d0f; 
0x000b2e37: sbb al, 0x39; ret 0xc889; 
0x0007d507: sbb al, 0x39; ret; 
0x0010798d: sbb al, 0x39; sal byte ptr [edx + 0xe], 1; mov eax, 1; ret; 
0x000fd680: sbb al, 0x4c; cli; call dword ptr [eax - 0x18]; 
0x000f806b: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x10; add esp, 0xc; ret; 
0x001221b7: sbb al, 0x51; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00082138: sbb al, 0x52; call eax; 
0x001247a6: sbb al, 0x52; lea edx, [esi - 0xbf520]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x001248cf: sbb al, 0x52; lea edx, [esi - 0xbf520]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x0012fcc9: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x001266a1: sbb al, 0x53; call dword ptr [eax + 4]; 
0x00126651: sbb al, 0x53; call dword ptr [eax]; 
0x00082297: sbb al, 0x53; call eax; 
0x000700a7: sbb al, 0x56; call dword ptr [ebx + 0x40]; 
0x00124008: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0006ffad: sbb al, 0x57; call dword ptr [ebx + 0x40]; 
0x000e6116: sbb al, 0x5b; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x00062acc: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0006b855: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x0001bcf1: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0008583c: sbb al, 0x5b; pop esi; ret; 
0x000f92e3: sbb al, 0x5b; ret; 
0x0009698a: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x0013167a: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x000744ba: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x0012e4d8: sbb al, 0x65; sub ebx, dword ptr [0x14]; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e578: sbb al, 0x65; sub ebx, dword ptr [0x14]; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x00139773: sbb al, 0x65; sub ebx, dword ptr [0x14]; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x0010e8dd: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e94d: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x0011578e: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x001245d4: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0013962c: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d1: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139e99: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x000316ca: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x000beffd: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x001005ad: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001007b5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x00100c15: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100d8d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00034374: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034494: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x00138ffe: sbb al, 0x6a; sub byte ptr [ebp - 0x75], dl; inc esp; and al, 0x24; call eax; 
0x000205a3: sbb al, 0x6d; cli; call dword ptr [eax - 0x18]; 
0x000ec826: sbb al, 0x75; pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00167d1b: sbb al, 0x75; ret 0x7c8b; 
0x000e8340: sbb al, 0x77; and eax, 0xc244c8b; movzx eax, al; mov ebx, dword ptr [ecx + eax*4 - 0x5f394]; add ebx, ecx; jmp ebx; 
0x0010d9f3: sbb al, 0x77; and edi, dword ptr [eax + 3]; call dword ptr gs:[0x10]; 
0x000bf94a: sbb al, 0x7d; mov bh, 0x83; ret 0x8301; 
0x000bf941: sbb al, 0x7e; fimul dword ptr [ebx + 0x3b0c246c]; push 0x83b77d1c; ret 0x8301; 
0x0004a0f8: sbb al, 0x81; les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011ce50: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x001079f6: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002015d: sbb al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00132a1c: sbb al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000b451c: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000e3d02: sbb al, 0x83; mov byte ptr [ecx], 0x83; ret; 
0x00083438: sbb al, 0x83; ret 0x3964; 
0x0011b066: sbb al, 0x83; ret 0x8802; 
0x000c1aa6: sbb al, 0x83; ret 0x8901; 
0x000d575b: sbb al, 0x83; ret 0xf01; 
0x00085599: sbb al, 0x83; ret; 
0x0001ebc8: sbb al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000e1e70: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0x9d860; add esp, 0x1c; ret; 
0x0007a38b: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0013e965: sbb al, 0x85; ror byte ptr [edi], 0x85; ret 1; 
0x0012cfe6: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00123875: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x001255af: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x00020695: sbb al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x000228b6: sbb al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0x548b; 
0x00029ac6: sbb al, 0x89; call 0x5d61f928; ret; 
0x00042c4f: sbb al, 0x89; call 0x5d638ab1; ret; 
0x00042ca5: sbb al, 0x89; call 0x5d638b07; ret; 
0x00076573: sbb al, 0x89; call 0x5d66c3d5; ret; 
0x000e609d: sbb al, 0x89; call 0x5d6dbeff; ret; 
0x000f832f: sbb al, 0x89; call 0x5d6ee191; ret; 
0x000fca97: sbb al, 0x89; call 0x5d6f28f9; ret; 
0x000bf7e7: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x00032e3c: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00135941: sbb al, 0x89; fisubr dword ptr [ecx]; ret 0xc89; 
0x000dd3cd: sbb al, 0x89; inc ebp; and byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00070123: sbb al, 0x89; inc ebx; or al, 1; ret 0xc8d; 
0x0008afd9: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000f6d4c: sbb al, 0x89; inc esp; and al, 0x14; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f702c: sbb al, 0x89; inc esp; and al, 0x14; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000d1788: sbb al, 0x89; jb 0xd17ac; pop esi; pop edi; pop ebp; ret; 
0x000d17a5: sbb al, 0x89; jb 0xd17c9; pop esi; pop edi; pop ebp; ret; 
0x0008b4e2: sbb al, 0x89; lds ecx, ptr [ecx - 0x1c17dbec]; aad 0xf9; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x0001b276: sbb al, 0x89; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00062a0c: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000e18ea: sbb al, 0x89; ret 0x1ae9; 
0x00074d46: sbb al, 0x89; ret 0x1b8; 
0x000e187a: sbb al, 0x89; ret 0x21e9; 
0x00107efb: sbb al, 0x89; ret 0x532b; 
0x0010a4a8: sbb al, 0x89; ret 0x562b; 
0x0010a9db: sbb al, 0x89; ret 0x572b; 
0x00086b9b: sbb al, 0x89; ret 0x98eb; 
0x00021563: sbb al, 0x89; ret 0xb60f; 
0x000ddbbd: sbb al, 0x89; ret 0xc085; 
0x0002c0d8: sbb al, 0x89; ret 0xc483; 
0x0006de86: sbb al, 0x89; ret 0xc883; 
0x000605ff: sbb al, 0x89; ret 0xd889; 
0x0003ab1d: sbb al, 0x89; ret 0xe283; 
0x000de69a: sbb al, 0x89; ret 0xeac0; 
0x00078946: sbb al, 0x89; ret 0xff85; 
0x000217ab: sbb al, 0x89; ret; 
0x000d7c8f: sbb al, 0x89; shr dword ptr [ecx], cl; ret; 
0x000c1681: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000c16c3: sbb al, 0x89; xor cl, byte ptr [ecx + 0x5e5b047a]; pop edi; ret; 
0x0013f5f3: sbb al, 0x8b; adc byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000e5fd5: sbb al, 0x8b; adc cl, byte ptr [ebx + 0x246c8b01]; xor byte ptr [ecx], bh; ret 0x2674; 
0x000dda7e: sbb al, 0x8b; adc eax, dword ptr [ebp - 0x74a48b2e]; inc edx; or byte ptr [ebp + 0x390474c0], al; ret; 
0x0007a983: sbb al, 0x8b; add byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac43: sbb al, 0x8b; add byte ptr [edx + ebx], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0009d89e: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00145b90: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0007a7c3: sbb al, 0x8b; and ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a783: sbb al, 0x8b; and al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6f3: sbb al, 0x8b; and byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a943: sbb al, 0x8b; cmp ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a903: sbb al, 0x8b; cmp al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab83: sbb al, 0x8b; cmp byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000ffe43: sbb al, 0x8b; dec esp; and al, 0x18; mov ebx, dword ptr [esp + 0x14]; mov eax, 0x153; call dword ptr gs:[0x10]; 
0x001249d5: sbb al, 0x8b; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0011b113: sbb al, 0x8b; je 0x11b13b; sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x001036c1: sbb al, 0x8b; jl 0x1036e9; xor byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00148836: sbb al, 0x8b; jmp ebx; 
0x0007aa03: sbb al, 0x8b; or byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00145346: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4784: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000fab57: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000f4f11: sbb al, 0x8b; pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x0002eb93: sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0013f673: sbb al, 0x8b; sbb byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a843: sbb al, 0x8b; sub ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a803: sbb al, 0x8b; sub al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8c3: sbb al, 0x8b; xor ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a883: sbb al, 0x8b; xor al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00076732: sbb al, 0x8d; adc byte ptr [eax + 4], 0xe9; jmp dword ptr [ebp + 0x33]; 
0x000c2fc1: sbb al, 0x8d; adc dword ptr [edx + 0x47], -6; call dword ptr [eax - 0x73]; 
0x000a159d: sbb al, 0x8d; and byte ptr [eax - 4], 0xff; call dword ptr [eax - 1]; 
0x000d56c7: sbb al, 0x8d; inc ebx; add al, 0x83; ret; 
0x000cca62: sbb al, 0x8d; inc ebx; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000cc93a: sbb al, 0x8d; inc ebx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a01e5: sbb al, 0x8d; or dword ptr [eax - 0x72], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x00126679: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00126639: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000a3adb: sbb al, 0x8d; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000fcc20: sbb al, 0x8d; sub dword ptr [edi], 0x5c; cli; jmp dword ptr [ebp - 0x77]; 
0x000a03bb: sbb al, 0x8d; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x001128ba: sbb al, 0x8d; xchg byte ptr [ebx + 0x5a], bh; cli; call dword ptr [eax - 0x73]; 
0x00117e6a: sbb al, 0x8d; xchg byte ptr [ebx], cl; pop ebp; cli; call dword ptr [eax - 0x73]; 
0x00106b1a: sbb al, 0x8d; xchg byte ptr [edi], al; push edi; cli; call dword ptr [eax - 0x73]; 
0x00111ffa: sbb al, 0x8d; xchg byte ptr [edx + 0x5a], al; cli; call dword ptr [eax - 0x73]; 
0x0009fd36: sbb al, 0x8d; xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x001050fa: sbb al, 0x8d; xchg cl, cl; push esi; cli; call dword ptr [eax - 0x73]; 
0x0012981a: sbb al, 0x8d; xchg dh, bh; popal; cli; call dword ptr [eax - 0x73]; 
0x000a47ae: sbb al, 0x8d; xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x0009eb8e: sbb al, 0x8d; xchg dword ptr [eax - 0x73], ecx; cli; call dword ptr [eax + 0x68]; 
0x000ad3b0: sbb al, 0x8d; xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000a49bf: sbb al, 0x8d; xor byte ptr [eax + 0x73], 0xfa; call dword ptr [eax - 0x73]; 
0x0011cfb1: sbb al, 0x8d; xor byte ptr [eax - 0x62], 0xfa; call dword ptr [eax - 0x73]; 
0x000d026b: sbb al, 0x8e; je 0xd0280; pop ebx; pop esi; ret; 
0x000ab12e: sbb al, 0x8f; cli; call dword ptr [edx - 0x73]; 
0x0011a3a2: sbb al, 0x9c; cli; call dword ptr [eax - 0x18]; 
0x0012bf8d: sbb al, 0xa3; cli; call dword ptr [eax - 0x73]; 
0x00139d00: sbb al, 0xa6; cli; call dword ptr [eax + 0x6a]; 
0x00080dae: sbb al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014889b: sbb al, 0xbb; jmp ebx; 
0x00143360: sbb al, 0xc1; clc; pop ds; ret; 
0x000f4749: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x000c691e: sbb al, 0xc3; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00107f6e: sbb al, 0xc6; add byte ptr [eax], ah; add esp, 4; pop ebx; pop esi; ret; 
0x00107f27: sbb al, 0xc6; add byte ptr [edx], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000bee5f: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00028129: sbb al, 0xe8; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fbc57: sbb al, 0xe8; adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00143358: sbb al, 0xe8; add ah, byte ptr [ebx - 0x3b7c0006]; sbb al, 0xc1; clc; pop ds; ret; 
0x0008b14a: sbb al, 0xe8; add byte ptr [edx], ch; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00034f87: sbb al, 0xe8; add eax, dword ptr [edx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c1992: sbb al, 0xe8; clc; jp 0xc199e; add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x00051200: sbb al, 0xe8; cmp al, byte ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00037a7f: sbb al, 0xe8; cmp esi, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00050181: sbb al, 0xe8; dec ecx; add al, byte ptr es:[eax]; add esp, 0x1c; ret; 
0x00037ab1: sbb al, 0xe8; dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013cfdb: sbb al, 0xe8; dec edi; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0010d000: sbb al, 0xe8; dec edx; or edi, ecx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00085071: sbb al, 0xe8; fnstcw word ptr [edx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00034f27: sbb al, 0xe8; jecxz 0x34f2c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000379f1: sbb al, 0xe8; jns 0x379fd; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000501c0: sbb al, 0xe8; jp 0x501db; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000501e0: sbb al, 0xe8; jp 0x50263; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f5f90: sbb al, 0xe8; jp 0xf5f9c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ad5c0: sbb al, 0xe8; lcall 0x1cc4, 0x83fffaab; ret; 
0x0003a8d0: sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x000a76e0: sbb al, 0xe8; lcall 0x1cc4, 0x83ffffdb; ret; 
0x0003401b: sbb al, 0xe8; maskmovq mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x0003216a: sbb al, 0xe8; mov al, 0x3d; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000437b0: sbb al, 0xe8; mov cl, dh; add eax, 0x1cc48300; ret; 
0x000a0721: sbb al, 0xe8; mov dword ptr [esi], ebx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fccec: sbb al, 0xe8; mov esi, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x000ed8de: sbb al, 0xe8; or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00033a1b: sbb al, 0xe8; paddw mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x000a074f: sbb al, 0xe8; pop ebx; push ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000511e1: sbb al, 0xe8; pop ecx; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f60a4: sbb al, 0xe8; pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0012577c: sbb al, 0xe8; push cs; mov byte ptr [eax], 0; add esp, 0x1c; ret; 
0x00032108: sbb al, 0xe8; push edx; pop ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013cfa8: sbb al, 0xe8; ret 0xef6d; 
0x000f33d8: sbb al, 0xe8; ret 0xfcce; 
0x000a07af: sbb al, 0xe8; retf; dec edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00101650: sbb al, 0xe8; sbb al, byte ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a0781: sbb al, 0xe8; stc; dec edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c5860: sbb al, 0xe8; sub al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000f606f: sbb al, 0xe8; wait; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008b548: sbb al, 0xe8; xor ah, byte ptr [edi]; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000f9303: sbb al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000d9c9b: sbb al, 0xf6; ret 0xf08; 
0x000f4d1d: sbb al, 0xf7; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0010c8db: sbb al, 0xf9; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x000df1c2: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000bb66e: sbb al, 0xf; inc ebp; ret; 
0x00050ebc: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x00127ee7: sbb al, 0xf; mov dh, 0xc0; ret; 
0x00039af2: sbb al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00032466: sbb al, 0xf; test byte ptr [edi - 0x77000000], ch; ret; 
0x00070a0c: sbb al, 0xf; test ch, al; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000b24d5: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00094edd: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00096580: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00060db7: sbb al, 0xf; xchg dl, cl; or al, 0; add byte ptr [ebx + 0x555304ec], al; push esi; call dword ptr [eax + 0x1c]; 
0x00167901: sbb al, 0xf; xchg ebp, eax; ret; 
0x00043abb: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x000439cb: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x001149ff: sbb al, 0xfb; jmp dword ptr [esi - 0x3f]; 
0x0002741c: sbb al, 0xff; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0014b285: sbb al, 0xff; inc dword ptr [ecx + 0x44778c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003a8cc: sbb al, 0xff; je 0x3a8f4; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffd9; ret; 
0x000437ac: sbb al, 0xff; je 0x437d4; sbb al, 0xe8; mov cl, dh; add eax, 0x1cc48300; ret; 
0x000a76dc: sbb al, 0xff; je 0xa7704; sbb al, 0xe8; lcall 0x1cc4, 0x83ffffdb; ret; 
0x000ad5bc: sbb al, 0xff; je 0xad5e4; sbb al, 0xe8; lcall 0x1cc4, 0x83fffaab; ret; 
0x0012ba93: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x000c5963: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001628c0: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0008eb30: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0015ed0e: sbb al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008afc0: sbb al, 3; test byte ptr [eax - 0x6200c], cl; jmp eax; 
0x0014dff4: sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00028cc0: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a7613: sbb al, bh; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x000f825f: sbb al, byte ptr [eax]; add byte ptr [eax], al; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0015af9e: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0007afeb: sbb al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013f79e: sbb al, byte ptr [eax]; add byte ptr [ecx + 0x9cac1f0], cl; xor edx, dword ptr gs:[0x18]; call edx; 
0x0016be79: sbb al, byte ptr [eax]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00040fbd: sbb al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0006af54: sbb al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x28]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000eabf6: sbb al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x30]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000432dc: sbb al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bef44: sbb al, byte ptr [ebx + 0x5675daf8]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00131287: sbb al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0011920e: sbb al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x0012e431: sbb al, byte ptr [ebx + 0x5f5b74c4]; ret; 
0x001008ce: sbb al, byte ptr [ebx - 0x2776db3c]; pop ebx; pop esi; ret; 
0x0012aaff: sbb al, byte ptr [ebx - 0x3d7cf314]; or byte ptr [edx - 0x18], dl; hlt; ret; 
0x0006c184: sbb al, byte ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00101652: sbb al, byte ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011099c: sbb al, byte ptr [ecx]; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x0003d0be: sbb al, byte ptr [ecx]; ret; 
0x0014a825: sbb al, byte ptr [ecx]; retf 0xc801; call 0x13cee5; add ebx, 0x451d1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148825: sbb al, byte ptr [ecx]; retf 0xc801; call 0x13cee5; add ebx, 0x46f51; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008e832: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001468f7: sbb al, ch; call 0x82146863; ret; 
0x00085526: sbb al, ch; mov ecx, 0x81000b79; ret; 
0x00146277: sbb al, ch; push 0x81ffff6c; ret; 
0x00117520: sbb al, ch; ret 0xf01b; 
0x000ee657: sbb al, ch; ret; 
0x000a7674: sbb bh, 0x32; cli; call dword ptr [eax - 0x18]; 
0x0014b675: sbb bh, bh; inc dword ptr [ecx + 0x44388c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b46e: sbb bh, bh; inc dword ptr [ecx + 0x4458fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0004d2a0: sbb bh, bh; je 0x4d2c8; sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x0007a387: sbb bh, bh; je 0x7a3af; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0009f801: sbb bh, bh; je 0x9f829; sbb byte ptr [edx], ch; call 0x9f820; add esp, 0x1c; ret; 
0x000c587a: sbb bh, bh; je 0xc58a2; sbb byte ptr [edx - 1], ch; call 0xc5890; add esp, 0x1c; ret; 
0x0011d255: sbb bh, bh; jmp dword ptr [esi - 0x70]; 
0x00075eda: sbb bh, bh; jo 0x75f16; push 3; call 0xec3d0; add esp, 0x1c; ret; 
0x000b32dc: sbb bh, bh; jo 0xb32e4; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b3329: sbb bh, bh; jo 0xb3331; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b337c: sbb bh, bh; jo 0xb3384; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x000b33c9: sbb bh, bh; jo 0xb33d1; push dword ptr [eax]; call 0xb53f0; add esp, 0x1c; ret; 
0x0015ed35: sbb bh, byte ptr [eax + 1]; jg 0x15ed40; neg eax; ret; 
0x000aca85: sbb bh, byte ptr [ecx]; ret; 
0x0012d18a: sbb bh, dh; jmp dword ptr [esi - 0x70]; 
0x00037cae: sbb bh, dh; rol byte ptr [ebp + 0xf142454], cl; xchg ebp, eax; ret 0xb60f; 
0x00152d2a: sbb bh, dl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009693c: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0008a75b: sbb bl, ch; ret; 
0x000f7595: sbb bl, dh; jmp dword ptr [esi - 0x70]; 
0x0010840d: sbb byte ptr [0x2000001], al; push eax; call dword ptr [ebx + 0x14]; 
0x0010ed23: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0002e659: sbb byte ptr [0xfffffff], ah; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x2e645; ret; 
0x00034faa: sbb byte ptr [eax + 0x50], dl; call 0x34fc0; add esp, 0x1c; ret; 
0x00035051: sbb byte ptr [eax + 0x50], dl; call 0x35070; add esp, 0x10; add esp, 0xc; ret; 
0x000350c1: sbb byte ptr [eax + 0x50], dl; call 0x350e0; add esp, 0x10; add esp, 0xc; ret; 
0x0010079e: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x000ff333: sbb byte ptr [eax + 0x95], bh; call dword ptr gs:[0x10]; 
0x00095edd: sbb byte ptr [eax + 0xa], dh; add byte ptr [ecx + 0xec2dfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0007cddd: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov ebx, edi; mov edx, 1; call dword ptr gs:[0x10]; 
0x0015f0a7: sbb byte ptr [eax + 1], bh; ja 0x15f0b1; neg eax; ret; 
0x00119616: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x00119616: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0007b672: sbb byte ptr [eax + eax], cl; add eax, 0x16898b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x12c], edx; ret; 
0x0007b652: sbb byte ptr [eax + eax], cl; add eax, 0x1689ab; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x130], edx; ret; 
0x0007b602: sbb byte ptr [eax + eax], cl; add eax, 0x1689fb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1dfc], edx; ret; 
0x00120bd0: sbb byte ptr [eax - 0x60], 0xfa; call dword ptr [eax - 0x18]; 
0x001260f4: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x000b54be: sbb byte ptr [eax - 1], dl; je 0xb54e7; adc al, 0xff; je 0xb54eb; adc al, 0xe8; ret; 
0x0013f675: sbb byte ptr [eax], 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00124d33: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0001af16: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x0013f7a9: sbb byte ptr [eax], al; add byte ptr [eax], al; call edx; 
0x00030c37: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0013d67a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x0007777a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0011b8aa: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b972: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00062756: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c6a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adfa: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9c0: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b36a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d3b: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x3c]; push edx; call eax; 
0x000607f5: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a81: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00025f0a: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 0x18], ecx; call eax; 
0x0003414e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0014564b: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov edi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0001b221: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00025f59: sbb byte ptr [eax], al; add byte ptr [eax], al; push ecx; call eax; 
0x0005844b: sbb byte ptr [eax], al; add byte ptr [eax], al; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c7b: sbb byte ptr [eax], al; add byte ptr [eax], al; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x0012147e: sbb byte ptr [eax], al; add byte ptr [eax], al; push edx; call eax; 
0x0001a6c7: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0006421b: sbb byte ptr [eax], al; add byte ptr [ebx - 0x137ceffc], cl; add al, 0xff; mov ch, 0x18; idiv edi; call dword ptr [edi - 1]; 
0x00043048: sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f86b0: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x000508d4: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x000fbbcc: sbb byte ptr [ebp + 0x25a480], cl; add byte ptr [eax - 0x18], dl; ja 0xfbbd8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c1e8d: sbb byte ptr [ebp + 0x31b887], cl; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; xor edx, edi; call dword ptr [eax - 0x73]; 
0x000c1efd: sbb byte ptr [ebp + 0x31c487], cl; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4a], ecx; cli; call dword ptr [eax - 0x73]; 
0x000c21b8: sbb byte ptr [ebp + 0x52102454], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0011f39a: sbb byte ptr [ebp + 0x5b0975c0], al; pop esi; pop edi; ret; 
0x0008733e: sbb byte ptr [ebp + 0x5b1475db], al; pop esi; pop edi; ret; 
0x00096917: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x00096939: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x00096987: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0006e312: sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00149a6a: sbb byte ptr [ebp + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002b236: sbb byte ptr [ebp - 0x18], dl; ret; 
0x00049bf7: sbb byte ptr [ebp - 0x39f80], cl; call dword ptr [eax + 0x6a]; 
0x000a0f65: sbb byte ptr [ebp - 0x39f80], cl; call dword ptr [eax - 1]; 
0x001328d3: sbb byte ptr [ebp - 0x51f77], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x000fd3da: sbb byte ptr [ebp - 0x568ab7f], cl; call dword ptr [eax - 0x73]; 
0x000c1f44: sbb byte ptr [ebp - 0x56eef79], cl; call dword ptr [eax - 0x73]; 
0x000ba358: sbb byte ptr [ebp - 0x56f2f79], cl; call dword ptr [eax - 0x73]; 
0x0006201d: sbb byte ptr [ebp - 0x5898b80], cl; call dword ptr [eax - 0x18]; 
0x00138b50: sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; 
0x00138b50: sbb byte ptr [ebp - 0x59bcc80], cl; call dword ptr [eax - 0x18]; ret; 
0x00127273: sbb byte ptr [ebp - 0x59e3355], cl; call dword ptr [edi + 0x6a]; 
0x00127143: sbb byte ptr [ebp - 0x59e4043], cl; call dword ptr [esi + 0x6a]; 
0x00118a16: sbb byte ptr [ebp - 0x5a2d480], cl; call dword ptr [eax + 0x53]; 
0x001187b9: sbb byte ptr [ebp - 0x5a2d980], cl; call dword ptr [eax + 0x53]; 
0x00113409: sbb byte ptr [ebp - 0x5a5637a], cl; call dword ptr [eax - 0x73]; 
0x0010ec6c: sbb byte ptr [ebp - 0x5a67a80], cl; call dword ptr [eax - 0x18]; 
0x0010d59c: sbb byte ptr [ebp - 0x5a6cc80], cl; call dword ptr [eax - 0x18]; 
0x000e8485: sbb byte ptr [ebp - 0x5b53a80], cl; call dword ptr [eax - 0x18]; 
0x000e7cbd: sbb byte ptr [ebp - 0x5b53e7d], cl; call dword ptr [eax - 0x18]; 
0x000e180a: sbb byte ptr [ebp - 0x5b70880], cl; call dword ptr [eax - 0x18]; 
0x000c51c9: sbb byte ptr [ebp - 0x5b82e7a], cl; call dword ptr [eax - 0x73]; 
0x000c4df9: sbb byte ptr [ebp - 0x5b8397a], cl; call dword ptr [eax - 0x73]; 
0x0001afce: sbb byte ptr [ebp - 0x5d4197a], cl; call dword ptr [eax - 0x75]; 
0x0001aef0: sbb byte ptr [ebp - 0x5d4336a], cl; call dword ptr [edx - 1]; 
0x00109624: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00025d78: sbb byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x58fbf79], cl; call dword ptr [eax + 0x56]; 
0x000770a9: sbb byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0013b041: sbb byte ptr [ebp - 0xa9e0f7e], cl; jmp dword ptr [esi - 9]; 
0x0009d088: sbb byte ptr [ebp - 0xb], dh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000350fc: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00134e86: sbb byte ptr [ebx + 0x24548b0f], cl; cmp al, 0x8b; inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x000b2e33: sbb byte ptr [ebx + 0x391c244c], cl; ret 0xc889; 
0x000ddfbc: sbb byte ptr [ebx + 0x3c8da904], cl; ret; 
0x00025567: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00031c6f: sbb byte ptr [ebx + 0x4247c], al; je 0x31c90; lea ecx, [eax + 1]; mov dword ptr [edx + 0x4c], ecx; ret; 
0x00116680: sbb byte ptr [ebx + 0x43031443], cl; adc byte ptr [ecx], bh; ret 0x6273; 
0x0012055d: sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x0003e5b3: sbb byte ptr [ebx + 0x440ffff8], al; ret 0x4489; 
0x00034dff: sbb byte ptr [ebx + 0x4c8b10c4], al; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e52: sbb byte ptr [ebx + 0x4c8b10c4], al; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034e9f: sbb byte ptr [ebx + 0x4c8b10c4], al; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034ef2: sbb byte ptr [ebx + 0x4c8b10c4], al; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000bf7e4: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00108409: sbb byte ptr [ebx + 0x5182444], cl; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebx + 0x14]; 
0x0009c38a: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098f04: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000878af: sbb byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000b783d: sbb byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x0002f813: sbb byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000f91c6: sbb byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00025d9f: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000c4cf4: sbb byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c2ea4: sbb byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0001e175: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x0007558a: sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00085c29: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000729f0: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001270f3: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x10; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; call eax; 
0x0013d0be: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000ec822: sbb byte ptr [ebx + 0x751c2474], cl; pop ds; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00030bef: sbb byte ptr [ebx + 0x788b0470], cl; or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x001014c1: sbb byte ptr [ebx + 0xc], bh; call dword ptr gs:[0x10]; 
0x000bb66a: sbb byte ptr [ebx + 0xf1c2444], cl; inc ebp; ret; 
0x00039aee: sbb byte ptr [ebx + 0xf1c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fbe7e: sbb byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x001457bc: sbb byte ptr [ebx - 0x10f80], cl; jmp dword ptr [ebp + 3]; 
0x0010a85f: sbb byte ptr [ebx - 0x137c53b3], cl; add al, 0x6a; add eax, 0x579f918d; cli; call dword ptr [edx + 0x50]; 
0x00122914: sbb byte ptr [ebx - 0x13f75], cl; jmp dword ptr [ebp - 0x75]; 
0x00035e3c: sbb byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x00100d27: sbb byte ptr [ebx - 0x17], bl; ret 0xf1a2; 
0x00074b53: sbb byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x001166ec: sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x00028ec4: sbb byte ptr [ebx - 0x3b7cfffb], dh; or al, 0x89; ret; 
0x00125e69: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x125e7a; sub esp, 0xc; push edi; call eax; 
0x00030a52: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000b917a: sbb byte ptr [ebx - 0x4774f314], al; sub dh, 0xff; call dword ptr [edi - 0x18]; 
0x000ff3d6: sbb byte ptr [ebx - 0x47d7db84], cl; js 0xff3de; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x000cd1e0: sbb byte ptr [ebx - 0x4bb7874], cl; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00145342: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f4780: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000ef255: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00100315: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000ffe05: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00100255: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x000f4d65: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000fdbb5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x000fdc15: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x000fdae5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x000f4d95: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x000fffd5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000faf4e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x000ee8de: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x000ef18e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001003ae: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0010013e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0010002e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0010017e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa3; call dword ptr gs:[0x10]; 
0x0010021e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x000fdd1e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x000fdcae: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x000fdb7e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000f6ed0: sbb byte ptr [ebx - 0x74efdba4], cl; push esp; and al, 4; mov dword ptr [esp + 0x14], eax; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f71b0: sbb byte ptr [ebx - 0x74efdba4], cl; push esp; and al, 4; mov dword ptr [esp + 0x14], eax; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f6d48: sbb byte ptr [ebx - 0x76e3dbac], cl; inc esp; and al, 0x14; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f7028: sbb byte ptr [ebx - 0x76e3dbac], cl; inc esp; and al, 0x14; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x00086308: sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x000e1d9f: sbb byte ptr [ebx - 0x7aefdba4], cl; test byte ptr [edi], 0x49; into; call dword ptr gs:[0x10]; 
0x00031b65: sbb byte ptr [ebx - 0x7aefdbb4], cl; fisttp dword ptr [edi]; xchg esp, eax; ret 0xf685; 
0x000d5757: sbb byte ptr [ebx - 0x7ce3dbbc], cl; ret 0xf01; 
0x000ddc3a: sbb byte ptr [ebx - 0x7cebdbb4], cl; ret; 
0x0005ef0d: sbb byte ptr [ebx - 0x8df6b], cl; dec dword ptr [ebx - 0x8db73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x00063d8a: sbb byte ptr [ebx - 0x8ff6b], cl; dec dword ptr [ebx - 0x8fb73]; dec dword ptr [ecx + 0x9ca89d0]; ret 0x840f; 
0x00076078: sbb byte ptr [ebx - 0xaafb14], al; je 0x760a4; cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x00130efb: sbb byte ptr [ebx - 6], ah; call dword ptr [eax - 0x73]; 
0x0010d9ef: sbb byte ptr [ebx], bh; push esp; and al, 0x1c; ja 0x10da19; mov eax, 3; call dword ptr gs:[0x10]; 
0x00127049: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00101514: sbb byte ptr [ecx + 0x24548bc5], cl; or al, 0xb8; jne 0x10151e; add byte ptr [eax], al; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000f4743: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0008b0db: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x000832d8: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x0008b013: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x001479f3: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00120dc6: sbb byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000955dd: sbb byte ptr [ecx + 0xa], bh; add byte ptr [ecx + 0xecaffc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000db1af: sbb byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008acd3: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x0010b57c: sbb byte ptr [ecx + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00072c14: sbb byte ptr [ecx - 0x3b7cf3ad], cl; add al, 0x5b; pop esi; ret; 
0x00078010: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000dd7c5: sbb byte ptr [ecx - 0x76d7dbbc], cl; ret 0x5c88; 
0x000bf7dd: sbb byte ptr [ecx - 0x76fbdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0003509f: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x00133dd0: sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0002c0fb: sbb byte ptr [ecx], al; ret 0x6c89; 
0x00038193: sbb byte ptr [ecx], al; ret; 
0x0015d2d7: sbb byte ptr [ecx], al; retf 0xc801; call 0x13cee5; add ebx, 0x3359f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b24b7: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000ce21c: sbb byte ptr [ecx], bh; ret 0x850f; 
0x0004e9b5: sbb byte ptr [ecx], bh; ret; 
0x000b28af: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x00107802: sbb byte ptr [ecx], ch; ret 0x5250; 
0x0005ed61: sbb byte ptr [ecx], ch; ret; 
0x0004239b: sbb byte ptr [ecx], ch; sar dword ptr [ecx], cl; ret; 
0x00084f40: sbb byte ptr [ecx], cl; ret 0xc985; 
0x001013a5: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c244c], 1; sub ecx, dword ptr [0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x00036723: sbb byte ptr [ecx], dh; fisttp dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00095237: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0010790a: sbb byte ptr [edi - 6], dl; call dword ptr [eax - 1]; 
0x001078c5: sbb byte ptr [edi - 6], dl; call dword ptr [edx + 0x50]; 
0x00033d3a: sbb byte ptr [edi], 0x32; cli; call dword ptr [eax - 0x18]; 
0x0002c3c1: sbb byte ptr [edi], cl; inc edi; ret 0xc189; 
0x000cebad: sbb byte ptr [edi], cl; mov dh, 0xc0; mov edx, dword ptr [edi + eax*4 - 0x6034c]; add edx, edi; jmp edx; 
0x0007c3a7: sbb byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x7189; 
0x000b24ba: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x0003ad47: sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x0003aa18: sbb byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x000dd6da: sbb byte ptr [edi], cl; xchg esp, eax; ret 0xc985; 
0x00134641: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x00096cdd: sbb byte ptr [edx + 0xa], ah; add byte ptr [ecx + 0xeb55fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0014afea: sbb byte ptr [edx + 4], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00116874: sbb byte ptr [edx + eax], ch; add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x000bfe36: sbb byte ptr [edx + ebx], 0; lea edx, [edx + 0xfe0]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a230: sbb byte ptr [edx + ebx], 0; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002a487: sbb byte ptr [edx + ebx], 0; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ba8e4: sbb byte ptr [edx + edi*2], bh; ja 0xba900; mov ebx, dword ptr [esp + 0x14]; mov ecx, dword ptr [ebx + eax*4 - 0x61170]; add ecx, ebx; jmp ecx; 
0x0010edd4: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x000c5838: sbb byte ptr [edx - 1], ch; call 0xc5850; add esp, 0x1c; ret; 
0x000c587e: sbb byte ptr [edx - 1], ch; call 0xc5890; add esp, 0x1c; ret; 
0x000c410b: sbb byte ptr [edx], ah; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013f676: sbb byte ptr [edx], bl; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00029a68: sbb byte ptr [edx], ch; call 0x29a20; add esp, 0x1c; ret; 
0x00031a12: sbb byte ptr [edx], ch; call 0x312c0; add esp, 0x1c; ret; 
0x0009f805: sbb byte ptr [edx], ch; call 0x9f820; add esp, 0x1c; ret; 
0x000ff376: sbb byte ptr [edx], ch; call 0xfff00; add esp, 0x1c; ret; 
0x00034047: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x33c50; add esp, 0x1c; ret; 
0x000f7f78: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x50b00; add esp, 0x1c; ret; 
0x0003d836: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3b1c0; add esp, 0x1c; ret; 
0x00040896: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e100; add esp, 0x1c; ret; 
0x000a4a16: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa25b0; add esp, 0x1c; ret; 
0x000aa1c6: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x00096154: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008b103: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0002f749: sbb ch, bl; add al, 0x24; add esp, 0x14; pop ebx; pop esi; ret; 
0x000b4631: sbb ch, byte ptr [ecx]; ret; 
0x00127372: sbb ch, byte ptr [edx - 0x3b7d0000]; adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x000ce219: sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x0002fa92: sbb cl, bl; add al, 0x24; add esp, 4; ret; 
0x00094e7c: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x0011dd0b: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x0012feb5: sbb cl, byte ptr [ebx + 0x650c2444]; sub eax, dword ptr [0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x000b28ad: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x001479f5: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x00094e7f: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x001078ad: sbb cl, dh; dec dword ptr [ecx + 0x30e82434]; sbb cl, dh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001078b5: sbb cl, dh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000b28b1: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x000f58a8: sbb dh, dh; ret 0x7540; 
0x001632b7: sbb dh, dh; ret 0xf0f; 
0x0015222a: sbb dl, ah; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011e9ee: sbb dl, byte ptr [eax - 0x6af0dcc4]; ret 0x2c3c; 
0x000ffbe6: sbb dword ptr [eax + 0x17c], edi; call dword ptr gs:[0x10]; 
0x000778d6: sbb dword ptr [eax + 0xf0], edi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000cc7cf: sbb dword ptr [eax + 1], edi; pop ebx; ret; 
0x0001be97: sbb dword ptr [eax + eax], 0xf94808b; add byte ptr [eax], al; ret; 
0x0001beb7: sbb dword ptr [eax + eax], 0xf98808b; add byte ptr [eax], al; ret; 
0x000b6b8e: sbb dword ptr [eax - 0x70], -6; call dword ptr [eax - 0x18]; 
0x00126dcf: sbb dword ptr [eax - 6], ebx; call dword ptr [eax + 0x6a]; 
0x00132981: sbb dword ptr [eax - 6], ebx; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00107909: sbb dword ptr [eax], 0x57; cli; call dword ptr [eax - 1]; 
0x001078c4: sbb dword ptr [eax], 0x57; cli; call dword ptr [edx + 0x50]; 
0x00130efa: sbb dword ptr [eax], 0x63; cli; call dword ptr [eax - 0x73]; 
0x0006b0a0: sbb dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c66d2: sbb dword ptr [eax], eax; add byte ptr [ebp - 0x47d08a2e], al; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013f775: sbb dword ptr [eax], eax; add byte ptr [ebp - 0x47e08a40], al; adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0001a771: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c69e7: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aa7: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7ac7dbac], cl; div byte ptr [ebp + 0x2e]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0005573d: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x7af00005], al; ret 0xfffe; 
0x0004d3c7: sbb dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006a05f: sbb dword ptr [eax], eax; add byte ptr [ecx], ah; ret 0xc483; 
0x00079d8e: sbb dword ptr [eax], eax; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00077698: sbb dword ptr [eax], eax; add byte ptr [ecx], al; pop ebx; pop esi; pop edi; ret; 
0x0006b085: sbb dword ptr [eax], eax; add byte ptr [ecx], al; pop ebx; pop esi; ret; 
0x00096353: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c3473: sbb dword ptr [ebp + 0x47], -6; call dword ptr [eax - 0x73]; 
0x000423b9: sbb dword ptr [ebp + 0xb6], ecx; add byte ptr [ebx + 0x46c601c6], al; jmp dword ptr [eax]; 
0x000c7050: sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x0001a75d: sbb dword ptr [ebp - 0x16fbaf70], ecx; jmp dword ptr [ebp + 0x33]; 
0x001033e2: sbb dword ptr [ebp - 0x76ea8b37], eax; ret 0xeac1; 
0x0010351c: sbb dword ptr [ebp - 0x76f08a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00103587: sbb dword ptr [ebp - 0x76f38a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00103772: sbb dword ptr [ebp - 0x76f68a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00084335: sbb dword ptr [ebp - 0x7c0005bc], -0x14; add al, 0x6a; add eax, 0x28838d50; jo 0x8433f; call dword ptr [eax - 0x18]; 
0x000f9adf: sbb dword ptr [ebx + 0x4c], -6; call dword ptr [eax - 0x39]; 
0x00087127: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0010096f: sbb dword ptr [ebx - 0x2776df3c], eax; pop ebx; pop esi; pop edi; ret; 
0x000af58c: sbb dword ptr [ebx - 0x36277b], ecx; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x00065000: sbb dword ptr [ebx - 8], -1; dec dword ptr [ebx - 0x8937b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0012bf8c: sbb dword ptr [ebx], -6; call dword ptr [eax - 0x73]; 
0x00126dce: sbb dword ptr [ecx], 0x58; cli; call dword ptr [eax + 0x6a]; 
0x00132980: sbb dword ptr [ecx], 0x58; cli; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x001108b9: sbb dword ptr [ecx], 1; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x000c6f5b: sbb dword ptr [ecx], eax; add byte ptr [eax + 0x7f], bh; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x001108ba: sbb dword ptr [ecx], eax; add byte ptr [ebx - 0x10745], cl; jmp dword ptr [ebp - 0x75]; 
0x0008b709: sbb dword ptr [ecx], ebp; ret; 
0x0009691a: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00081abf: sbb dword ptr [edi + ebx*8 - 7], -1; add ecx, ebx; jmp ecx; 
0x0002835d: sbb dword ptr [edi], 0x2f; cli; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0001d293: sbb dword ptr [edi], ecx; add byte ptr [ebp - 0x593837d], cl; call dword ptr [eax - 0x73]; 
0x000964ed: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00051408: sbb dword ptr [edi], ecx; xchg dword ptr [ecx - 0x75000000], esi; xchg esp, eax; lea eax, [eax]; ret; 
0x00025f4a: sbb dword ptr [edx + ebx], 0; mov ecx, dword ptr [esp + 0x14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x000263e6: sbb dword ptr [edx + ebx], 0; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00026217: sbb dword ptr [edx + ebx], 0; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00161e63: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0001b5b2: sbb dword ptr [edx], edx; add byte ptr [0x1c8a4b], al; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x000c6dae: sbb dword ptr [esi], 0x48; cli; call dword ptr [eax + 0x68]; 
0x0012a978: sbb dword ptr [esi], 0x62; cli; call dword ptr [eax - 0x73]; 
0x0005dd9b: sbb dword ptr [esi], 0xc4830004; adc byte ptr [ebx - 0x7bf00008], al; movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00096553: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001350c8: sbb eax, -0x5b; cli; call dword ptr [eax - 0x73]; 
0x000e6040: sbb eax, -0x6c; cli; call dword ptr [eax - 0x18]; 
0x0012ab17: sbb eax, -1; add esp, 0xc; ret; 
0x0009b8c0: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00093345: sbb eax, -1; pop ebx; ret; 
0x00092bd6: sbb eax, -1; pop edi; pop ebx; ret; 
0x0009db2d: sbb eax, -1; pop esi; pop ebx; ret; 
0x000f0359: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ef327: sbb eax, 0; pop ebx; pop esi; ret; 
0x0011ce4a: sbb eax, 0x14; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0012e4db: sbb eax, 0x14; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e57b: sbb eax, 0x14; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x0012e942: sbb eax, 0x14; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x00131a95: sbb eax, 0x14; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b25: sbb eax, 0x14; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131be0: sbb eax, 0x14; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c49: sbb eax, 0x14; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce5: sbb eax, 0x14; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132495: sbb eax, 0x14; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132525: sbb eax, 0x14; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b5: sbb eax, 0x14; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132645: sbb eax, 0x14; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x00139776: sbb eax, 0x14; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x000b42a1: sbb eax, 0x14; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000c7ec8: sbb eax, 0x14; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca408: sbb eax, 0x14; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df428: sbb eax, 0x14; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff38: sbb eax, 0x14; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb788: sbb eax, 0x14; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x000f56da: sbb eax, 0x14; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x00044970: sbb eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x0011ae81: sbb eax, 0x4c48302; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00136ebf: sbb eax, 0x514c481; add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x000fe158: sbb eax, 0x53; cli; call dword ptr [eax + 0x52]; 
0x00094f07: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008000c: sbb eax, 0x5b010000; pop esi; pop edi; pop ebp; ret; 
0x000965aa: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094b4f: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x000b738e: sbb eax, 0x81000000; ret 0xb850; 
0x0007c16b: sbb eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00152bc4: sbb eax, 0x81fffea3; ret; 
0x001520c4: sbb eax, 0x81fffeae; ret; 
0x0014b7c4: sbb eax, 0x81ffff17; ret; 
0x001497c4: sbb eax, 0x81ffff37; ret; 
0x00041482: sbb eax, 0x83000001; in al, dx; or al, 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x000ed90f: sbb eax, 0x8300007e; les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ccbe2: sbb eax, 0x8304428b; ret 0x8d04; 
0x00129cc7: sbb eax, 0x83ffeef4; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000fad22: sbb eax, 0x890ce8c1; lds edi, ptr [eax + 0xc0]; call dword ptr gs:[0x10]; 
0x001247ba: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000c12f9: sbb eax, 0x8b0cec83; jge 0xc12d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000c14f9: sbb eax, 0x8b0cec83; jge 0xc14d4; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00021025: sbb eax, 0x8bfffffe; jl 0x21050; sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x000773d9: sbb eax, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014b1ce: sbb eax, 0xc381ffff; das; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153d22: sbb eax, 0xc801ca01; call 0x13cee5; add ebx, 0x3c994; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151b82: sbb eax, 0xc801ca01; call 0x13cee5; add ebx, 0x3e8b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150a52: sbb eax, 0xc801ca01; call 0x13cee5; add ebx, 0x3f824; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c832: sbb eax, 0xc801ca01; call 0x13cee5; add ebx, 0x43444; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007bdbe: sbb eax, 0xc9850000; jne 0x7bdd0; ret; 
0x000965a7: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000c59f7: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a8f7: sbb eax, dword ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push dword ptr [ebp - 0x4c]; call dword ptr [ebx + 0x14]; 
0x00031c38: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x48]; ret; 
0x00031c18: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00024d58: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x000319f8: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000293d8: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x140]; add eax, dword ptr gs:[0]; ret; 
0x000281b8: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00029418: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x000293f8: sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0xbc]; add eax, dword ptr gs:[0]; ret; 
0x00028c18: sbb eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x16c]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00050566: sbb eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009ecbc: sbb eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000bf60b: sbb eax, dword ptr [ebx + 0x5e5b34c4]; ret; 
0x0011f544: sbb eax, dword ptr [ebx + 0x773901c6]; or al, 0x7f; ret; 
0x00160424: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x0013153c: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x0015edd3: sbb eax, dword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00161671: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x000319f7: sbb eax, dword ptr es:[eax]; mov eax, dword ptr [eax - 0x108]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00043cab: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00043c31: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0007af4d: sbb eax, eax; pop edi; and eax, 0xc; ret; 
0x0009d87d: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x0009db2b: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x000fe246: sbb ebp, 0x55; cli; call dword ptr [eax + 0x52]; 
0x0007e34c: sbb ebp, eax; lodsd eax, dword ptr cs:[esi]; stc; inc dword ptr [ebx - 0x4c00f33c]; cmp bh, 0xff; call dword ptr [esi + 0x6a]; 
0x000b6c10: sbb ebx, 0x43; idiv bh; ret; 
0x000ec764: sbb ebx, dword ptr [ebx + 0x5e]; ret; 
0x0009696a: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00101c03: sbb ecx, dword ptr [ebp - 0x6d47c0ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x00094eaa: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000d01fa: sbb ecx, dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00094ead: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x000838e1: sbb ecx, eax; cld; inc dword ptr [ebx - 0x17aceb3c]; add edi, edi; jmp dword ptr [esi - 0x70]; 
0x000ef325: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x000b413c: sbb edi, dword ptr [eax + 0x4e]; call dword ptr gs:[0x10]; 
0x000ec6fc: sbb edi, dword ptr [eax + 0xe]; call dword ptr gs:[0x10]; 
0x001196d9: sbb edi, dword ptr [eax + 6]; call dword ptr gs:[0x10]; 
0x0014b5be: sbb edi, edi; inc dword ptr [ecx + 0x4443fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b525: sbb edi, edi; inc dword ptr [ecx + 0x444d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b3d5: sbb edi, edi; inc dword ptr [ecx + 0x44628c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b31e: sbb edi, edi; inc dword ptr [ecx + 0x446dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000b28bc: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0002f68b: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0002fc9a: sbb edx, ebx; pop ebx; pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x000341bf: sbb edx, ecx; ret; 
0x0011a6e8: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00129332: sbb esi, 0x61; cli; call dword ptr [eax - 0x18]; 
0x00129517: sbb esi, 0x61; cli; call dword ptr [eax - 0x73]; 
0x000d43fd: sbb esi, esi; ret; 
0x00118a30: scasb al, byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0008212e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push edx; call eax; 
0x0002e54e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; sti; xor edx, edi; call dword ptr [eax + 0x53]; 
0x00128215: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x59f5e7d], cl; call dword ptr [eax - 1]; 
0x001628ae: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0001a831: scasb al, byte ptr es:[edi]; add dword ptr fs:[eax], eax; add byte ptr [ecx - 0xff1b], al; call ecx; 
0x000322c0: scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x34]; call edi; 
0x00154b17: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153971: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151857: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150847: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f877: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e6a1: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c541: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a5a1: scasb al, byte ptr es:[edi]; clc; call 0x13cee5; add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000fb721: scasb al, byte ptr es:[edi]; dec esp; cli; call dword ptr [eax + 0x53]; 
0x0011247e: scasb al, byte ptr es:[edi]; mov eax, 0xf0; lea ebx, [ebx + 0x2aa4]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011389e: scasb al, byte ptr es:[edi]; mov eax, 0xf0; lea ebx, [ebx + 0x2b38]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012959e: scasb al, byte ptr es:[edi]; mov eax, 0xf0; lea ebx, [ebx + 0x3384]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000e72be: scasb al, byte ptr es:[edi]; ret; 
0x0006a05e: scasb al, byte ptr es:[edi]; sbb dword ptr [eax], eax; add byte ptr [ecx], ah; ret 0xc483; 
0x00133d88: scasb al, byte ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x001491d3: scasd eax, dword ptr es:[edi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000eaba5: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000310d2: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0014dbd3: scasd eax, dword ptr es:[edi]; and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c0ad8: scasd eax, dword ptr es:[edi]; call 0x10ec60; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0016c22d: scasd eax, dword ptr es:[edi]; cmp ebx, edi; jmp dword ptr [esi - 0x70]; 
0x000b97ff: scasd eax, dword ptr es:[edi]; fimul word ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x00036e88: scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx + 0xf302444]; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x0012f1ed: scasd eax, dword ptr es:[edi]; mov dword ptr gs:[esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000f278d: scasd eax, dword ptr es:[edi]; mov eax, 0xc483fffa; adc byte ptr [ebp + 0x393374c0], al; ret; 
0x0006c088: scasd eax, dword ptr es:[edi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001d28d: scasd eax, dword ptr es:[edi]; mov ebx, 0xcae80000; sbb dword ptr [edi], ecx; add byte ptr [ebp - 0x593837d], cl; call dword ptr [eax - 0x73]; 
0x0007c377: scasd eax, dword ptr es:[edi]; push ecx; add al, 0x83; rcl dword ptr [eax], 0x83; ret; 
0x0002eb9b: scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x0007c3a9: scasd eax, dword ptr es:[edi]; ret 0x7189; 
0x00070cae: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00036e8f: scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x00096093: scasd eax, dword ptr es:[edi]; ror dword ptr [esi], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00043c30: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0014d0d3: scasd eax, dword ptr es:[edi]; sub eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010ddfd: scasd eax, dword ptr es:[edi]; test eax, 0xc483fff6; adc byte ptr [ecx], bh; ret; 
0x000948b3: scasd eax, dword ptr es:[edi]; xlatb; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00102739: seta al; movzx eax, al; neg eax; ret; 
0x0007a764: setae al; ret; 
0x000b6c5a: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00050eb7: sete al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x000df205: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x000410dd: sete al; add esp, 0xc; movzx eax, al; ret; 
0x00122de0: sete al; add esp, 0xc; ret; 
0x000c71ca: sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00073797: sete al; movzx eax, al; ret; 
0x0007b35e: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x000291fa: sete al; ret; 
0x0013d055: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x000ea788: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x000ff625: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00127ee2: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x000ff666: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x0001b8a5: setne al; add esp, 0xc; movzx eax, al; neg eax; ret; 
0x000d181f: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x00127314: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x000770c9: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00126113: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00127391: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x000f9a77: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x000e1e35: setne al; movzx eax, al; neg eax; ret; 
0x000319cb: setne al; movzx eax, al; ret; 
0x00128097: setne al; pop edi; movzx eax, al; ret; 
0x000fbd13: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000c7159: setne al; ret; 
0x0012665c: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007376b: setne dl; mov eax, edx; ret; 
0x00154b16: sfence; call 0x13cee5; add ebx, 0x3bba2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00153970: sfence; call 0x13cee5; add ebx, 0x3cac8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151856: sfence; call 0x13cee5; add ebx, 0x3ea22; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00150846: sfence; call 0x13cee5; add ebx, 0x3f872; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014f876: sfence; call 0x13cee5; add ebx, 0x40682; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e6a0: sfence; call 0x13cee5; add ebx, 0x415d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c540: sfence; call 0x13cee5; add ebx, 0x434b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014a5a0: sfence; call 0x13cee5; add ebx, 0x451d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f90f2: sgdt [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00163ca7: shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00133012: shl byte ptr [eax - 0x12], cl; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0008b6c6: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x0009bf50: shl byte ptr [eax], 0xe8; mov byte ptr [0x81000a0f], al; sar dword ptr [0x3000e64], 0xc; xchg ecx, eax; jmp ecx; 
0x00098c50: shl byte ptr [eax], 0xe8; mov byte ptr [0x81000a42], al; sar dword ptr [ebp + 0x3000e96], 0xc; xchg ecx, eax; jmp ecx; 
0x001365ed: shl byte ptr [ebx - 6], 1; call dword ptr [eax - 0x18]; 
0x0003ad43: shl byte ptr [ebx], cl; je 0x3ad6b; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000a2193: shl byte ptr [ebx], cl; je 0xa21bb; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x0003dc8b: shl byte ptr [ebx], cl; jl 0x3dcb3; sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x000a4e6b: shl byte ptr [ebx], cl; jl 0xa4e93; sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x0010c471: shl byte ptr [ecx + edi], 0xd0; jae 0x10c480; cmp dword ptr [eax + 4], ecx; jne 0x10c470; mov eax, dword ptr [eax + 0x18]; ret; 
0x00031975: shl byte ptr [ecx], 1; add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x000c29ee: shl byte ptr [ecx], 1; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001abc2: shl byte ptr [ecx], 1; ret; 
0x0001b024: shl byte ptr [edx + edi*8 - 1], 0x50; push 1; call 0xed140; add esp, 0x1c; ret; 
0x00146243: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0015cd31: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009cda6: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0015dc0c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000f588d: shl byte ptr [esi - 0x70], 1; call 0x1aff0; add esp, 4; pop ebx; pop esi; ret; 
0x00146811: shl byte ptr [esi - 1], 1; inc dword ptr [ecx + 0x48a6bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000715fe: shl dh, 0xff; call dword ptr [eax - 0x73]; 
0x000ec91a: shl dh, cl; bnd jmp dword ptr [esi - 0x70]; 
0x00098bf0: shl dword ptr [0x3000e97], 0xc; xchg ecx, eax; jmp ecx; 
0x0009bef0: shl dword ptr [ebp + 0x3000e64], 0xc; xchg ecx, eax; jmp ecx; 
0x000954ce: shl dword ptr [ebx + 0x3000ecc], 0xc; cdq; jmp ecx; 
0x001620a5: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x0009cf25: shl dword ptr [ecx], 1; retf 0xd285; je 0x9cf00; bsr ecx, edx; add eax, ecx; ret; 
0x000696b0: shl dword ptr [ecx], 1; rol dword ptr [ebx + 0x5874fff9], 0x89; ret; 
0x00075946: shl dword ptr [ecx], cl; ret; 
0x00098b71: shl dword ptr [edi + edx*4 + 0xc03000e], 0x91; jmp ecx; 
0x0009bf33: shl dword ptr [edx + 0x64], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012eb86: shl dword ptr [edx - 6], 1; call dword ptr [eax + 0x55]; 
0x0009cdae: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001620a1: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x0015d3d5: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0015dd96: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0015d3c0: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0015dd7c: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0015d3ab: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0015d396: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0015dd62: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0015d462: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015dcbc: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009c9e5: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0015db6c: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000f7aa8: shl dword ptr [esi - 0x70], cl; nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000eb4d9: shl eax, 2; push eax; call 0x190d8; add esp, 0x18; pop ebx; ret; 
0x0007b1e2: shl eax, 4; add eax, dword ptr [edi + 0x1ac8]; mov eax, dword ptr [eax]; test eax, eax; je 0x7b1f3; call eax; 
0x0011b3dd: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00050094: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00031972: shl eax, cl; not eax; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00031912: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0013cf53: shl eax, cl; shr ebx, 5; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000319c3: shl eax, cl; shr ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0009c032: shl ebx, 0x63; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0004416f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00096bea: shl edi, 0xb6; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0010ed45: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000453bc: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00045373: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00098c33: shl edx, 0x96; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0011b19e: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x0010ed6b: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000949cf: shr al, 0x24; test dword ptr [edx], ecx; add byte ptr [ecx + 0xed70bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001191a4: shr al, 0x86; jl 0x1191a7; inc dword ptr [ebp - 0x76ad8740]; ret; 
0x0009600f: shr al, 0xe4; outsb dx, byte ptr [esi]; or al, byte ptr [eax]; add ecx, 0xec22b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0012a22f: shr al, 0xeb; ret; 
0x00145636: shr al, 1; and al, 0x96; cld; jmp dword ptr [esi - 0x70]; 
0x00095eb6: shr al, cl; cmp eax, 0x81000a70; rol dword ptr [ebx + eax*8], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00095edb: shr al, cl; sbb byte ptr [eax + 0xa], dh; add byte ptr [ecx + 0xec2dfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098bc8: shr al, cl; sub eax, dword ptr [ebx + 0xa]; add byte ptr [ecx + 0xe9746c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0009bec8: shr al, cl; sub edx, dword ptr [eax]; or al, byte ptr [eax]; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010c4f3: shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x000ab600: shr bl, 1; or al, 0x8d; je 0xab62c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000ac0e0: shr bl, 1; or al, 0x8d; je 0xac10c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x00105cf6: shr byte ptr [eax], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00123776: shr byte ptr [eax], 0xff; jo 0x12378f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0009cc02: shr byte ptr [ecx], 0xc2; jbe 0x9cc40; add eax, edi; pop edi; ret; 
0x0009cc15: shr byte ptr [ecx], 0xc2; jbe 0x9cc40; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0009cc25: shr byte ptr [ecx], 0xc2; jbe 0x9cc40; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009cc35: shr byte ptr [ecx], 0xc2; jbe 0x9cc40; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0003cdf7: shr byte ptr [ecx], cl; ret 0xcb19; 
0x0003a087: shr byte ptr [ecx], cl; ret 0xfb19; 
0x0011e8c3: shr byte ptr [edx + 2], 0x8d; xor ecx, 0x2f; cli; call dword ptr [eax + 0x51]; 
0x0013dc72: shr byte ptr [edx], 0x8d; xchg eax, ebp; xor edi, edx; call dword ptr [eax + 0x6a]; 
0x00027e9a: shr cl, 0x2d; idiv bh; dec dword ptr [ebx - 0x1bf73]; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x0005b79a: shr cl, 0x5a; in eax, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00055d29: shr cl, 0xd4; aam 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x0009bfe8: shr dword ptr [0x3000e64], 0xc; cdq; jmp ecx; 
0x000949b4: shr dword ptr [0x3000ed7], 0xc; cdq; jmp ecx; 
0x000b462c: shr dword ptr [ebx + 0x54], cl; and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x000bd948: shr dword ptr [ebx], 0x45; test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x00096016: shr dword ptr [ebx], 0xc2; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0009d330: shr dword ptr [ecx], 0xf0; pop ebx; pop esi; ret; 
0x00109036: shr dword ptr [ecx], 1; ret; 
0x000afa08: shr dword ptr [ecx], 1; ror dword ptr [ebx - 0x35fb6b], cl; call ebx; 
0x000d7c91: shr dword ptr [ecx], cl; ret; 
0x00096092: shr dword ptr [edi + 0x3000ec1], 0xc; cdq; jmp ecx; 
0x000948b2: shr dword ptr [edi + 0x3000ed7], 0xc; xchg ecx, eax; jmp ecx; 
0x0002af6b: shr dword ptr [edi + eax], 1; add byte ptr [ebx - 0x8b6b], cl; inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x00094a72: shr dword ptr [edi - 0x2a], 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000960d7: shr dword ptr [edx - 0x3f], 0xe; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00098bab: shr dword ptr [edx - 0x69], 0xe; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094a35: shr dword ptr [esi + edx*8 + 0xc03000e], 0x99; jmp ecx; 
0x0010eda8: shr eax, 0x18; ret; 
0x000ea78b: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x0002f37a: shr eax, 0x1f; ret; 
0x000fad23: shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x0010c4f4: shr eax, 0xe; and eax, 1; pop ebx; ret; 
0x0011b3ae: shr eax, 1; ret; 
0x00145468: shr eax, 1; xchg edi, eax; cld; jmp dword ptr [esi - 0x70]; 
0x00043bc8: shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x43b90; jmp eax; 
0x0011adab: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0007b6bf: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x150], eax; ret; 
0x00163ca3: shr eax, 4; add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00074886: shr eax, 4; and eax, 1; ret; 
0x00074896: shr eax, 5; and eax, 1; ret; 
0x0010ed8e: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00102dbe: shr eax, cl; and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x000ffcad: shr eax, cl; and eax, 3; ret; 
0x00034d14: shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00095fd6: shr ebx, 0xc1; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000487e6: shr ebx, 0xff; dec dword ptr [ebp - 0x58c077d]; call dword ptr [eax - 0x73]; 
0x0012369a: shr ebx, 3; jmp ecx; 
0x0013cf25: shr ebx, 5; and eax, dword ptr [edx + ebx*4]; pop ebx; setne al; movzx eax, al; ret; 
0x0013cf75: shr ebx, 5; not eax; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0013cf55: shr ebx, 5; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0003190f: shr ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0016baa5: shr ebx, cl; jmp dword ptr [esi - 0x70]; 
0x000441cf: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0001ee90: shr ecx, 1; mov edi, 0x8bfffffc; jl 0x1eebd; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax + 0x68]; 
0x000ea8f7: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003185d: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000319c5: shr ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0010ed97: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0009beab: shr edx, 0x64; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0010369e: shr edx, cl; and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x0016bdab: shr edx, cl; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000ff12b: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0016b864: sldt word ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011da14: sldt word ptr [eax]; add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x001175ac: sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x000ff107: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x0002579b: sldt word ptr [eax]; call 0xfc9f0; add esp, 0x1c; ret; 
0x00161354: sldt word ptr [eax]; jne 0x161150; xor eax, eax; pop edi; ret; 
0x000fad1e: sldt word ptr [eax]; jne 0xfad40; shr eax, 0xc; mov ebp, eax; mov eax, 0xc0; call dword ptr gs:[0x10]; 
0x00019179: sldt word ptr [eax]; mov dword ptr [esi + 0xf8c], eax; pop esi; pop edi; ret; 
0x0002a857: sldt word ptr [eax]; mov eax, dword ptr [ebx + 0x1a54]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028570: sldt word ptr [eax]; mov eax, dword ptr [ebx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028745: sldt word ptr [eax]; mov eax, dword ptr [ebx + 0x1a5c]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00026213: sldt word ptr [eax]; mov eax, dword ptr [ebx + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bfe76: sldt word ptr [eax]; mov eax, dword ptr [ecx + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028aae: sldt word ptr [eax]; mov eax, dword ptr [edi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00028a86: sldt word ptr [eax]; mov eax, dword ptr [edi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bfc6e: sldt word ptr [eax]; mov eax, dword ptr [esi + 0x1a58]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000bfc40: sldt word ptr [eax]; mov eax, dword ptr [esi + 0x1a5c]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001cc6b: sldt word ptr [eax]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdb0: sldt word ptr [eax]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x0001917f: sldt word ptr [eax]; pop esi; pop edi; ret; 
0x0001dc5c: sldt word ptr [eax]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0001be9d: sldt word ptr [eax]; ret; 
0x000eb4fa: sldt word ptr [ebx + 0x74ff14ec]; and al, 0x1c; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x00046465: sldt word ptr [ecx + 0x19db99c7]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0003de45: sldt word ptr [ecx + 0x1a61b9c7]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0015e92d: stc; adc byte ptr [edi], cl; test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret; 
0x0009e591: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0015e51d: stc; add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0015cde9: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000e2f1d: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000b7b5b: stc; add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x0012689b: stc; add dword ptr [ecx + edx - 0x7d], esi; les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000d1a49: stc; add eax, 0x7e830975; pop esp; add dword ptr [edi], ecx; lahf; ret 0xd789; 
0x0004b442: stc; add eax, 0xf6944d89; ret 0xf1f; 
0x000ea8ae: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000ea51b: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00125dbe: stc; add esi, dword ptr [esi + 0xe]; mov eax, 2; pop ebx; pop esi; ret; 
0x000417ab: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00115e3e: stc; and byte ptr [edi], cl; xchg esp, eax; ret; 
0x000a6c7c: stc; call dword ptr [ebx - 1]; 
0x000beed4: stc; call dword ptr gs:[0x10]; 
0x000835eb: stc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000e88bf: stc; das; ja 0xe800c; mov eax, dword ptr [ebx + ecx*4 - 0x5f320]; add eax, ebx; jmp eax; 
0x000eb723: stc; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x0008b3e6: stc; dec dword ptr [ebp - 0x572d77b]; call dword ptr [eax - 0x73]; 
0x0008aa4d: stc; dec dword ptr [ebp - 0x5738b70]; call dword ptr [edx - 0x73]; 
0x0005e972: stc; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x0008b4eb: stc; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x00063913: stc; dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x0006390c: stc; dec dword ptr [ebx - 0x29ff7e7c]; stc; dec dword ptr [ebp - 0xaadfe7c]; out 0xff, eax; jmp eax; 
0x0005e96b: stc; dec dword ptr [ebx - 0x2dff7d7c]; stc; dec dword ptr [ebp - 0x5a8ffd7c]; out 0xff, eax; jmp eax; 
0x000b08fb: stc; dec dword ptr [ebx - 0x362f7b]; call dword ptr [ebx - 1]; 
0x000b0793: stc; dec dword ptr [ebx - 0x362f7b]; dec dword ptr [ebp - 0x3b7c50b2]; adc byte ptr [ebx - 0x36376b], cl; call ebx; 
0x0010c8dc: stc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x000a4f99: stc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x0008b4dd: stc; dec dword ptr [ebx - 0x76e3dbac]; lds ecx, ptr [ecx - 0x1c17dbec]; aad 0xf9; dec dword ptr [ebp - 0x5bb1e7d]; call dword ptr [edi + 0x55]; 
0x00109741: stc; dec dword ptr [ebx - 0x7cdfdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x0007e40b: stc; dec dword ptr [ebx - 0xd77d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x7e41e; call eax; 
0x000a0783: stc; dec edx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012e653: stc; inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0010d004: stc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015e94b: stc; inc dword ptr [ebx + 0xf66f0e0]; outsd dx, dword ptr [esi]; add byte ptr [esi + 0xf], ah; cmp byte ptr [eax], al; ret 0xf66; 
0x0007e350: stc; inc dword ptr [ebx - 0x4c00f33c]; cmp bh, 0xff; call dword ptr [esi + 0x6a]; 
0x0010cf37: stc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0001acdc: stc; inc dword ptr [ecx]; bnd jmp edx; 
0x000524ac: stc; inc dword ptr [ecx]; cli; jmp edx; 
0x000ba84d: stc; inc dword ptr [ecx]; int1; jmp ecx; 
0x000ccd69: stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00076bb3: stc; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x000b7244: stc; inc dword ptr [ecx]; retf; jmp ebx; 
0x0005242a: stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00051db9: stc; inc dword ptr [ecx]; sti; jmp ebx; 
0x000584ef: stc; ja 0x58ab0; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ecx*4 - 0x632e0]; jmp eax; 
0x0008b402: stc; jmp dword ptr [esi - 0x70]; 
0x0005242d: stc; jmp ecx; 
0x000df1c3: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00031d0f: stc; mov ebp, eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00031cc3: stc; mov esi, 8; call dword ptr gs:[0x10]; 
0x00146224: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145c14: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0008b07d: stc; or byte ptr [edi + 0x12], dh; add eax, dword ptr [eax + ecx*4 - 0x61fe8]; jmp eax; 
0x0008afbd: stc; or byte ptr [edi + 0x1c], dh; add eax, dword ptr [eax + ecx*4 - 0x6200c]; jmp eax; 
0x0007ad29: stc; or dh, byte ptr [edi + ecx - 0x7d]; les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000f56b9: stc; or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f574d: stc; or dword ptr [edi + ebp - 0x48], esi; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009efb1: stc; pop edi; cmovg eax, edx; ret; 
0x00161252: stc; pop edi; ret; 
0x0009e6be: stc; pop esi; ret; 
0x000696b4: stc; push dword ptr [eax + ebx*2 - 0x77]; ret; 
0x00096049: stc; ror dword ptr [esi], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00051407: stc; sbb dword ptr [edi], ecx; xchg dword ptr [ecx - 0x75000000], esi; xchg esp, eax; lea eax, [eax]; ret; 
0x00160421: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x00115e44: stc; sub al, 0x89; fisttp qword ptr [edi]; xchg esp, eax; ret; 
0x000b6c43: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xb6c50; mov eax, edx; ret; 
0x00031859: stc; sub ecx, -0x80; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0015b8d6: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001567d2: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0015e72a: std; add al, 0x76; ret; 
0x000b907b: std; add al, byte ptr [eax]; add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x000242d1: std; add al, byte ptr [eax]; add byte ptr [ebx - 0x72b7db84], cl; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x00162a39: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000c6f4a: std; add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x00067c06: std; add dl, byte ptr [ebp + 0x52]; push esi; call dword ptr [ebx + 0x1c]; 
0x00160b8f: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001572cd: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0003a7f3: std; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x32], esi; cli; call dword ptr [eax - 0x18]; 
0x000a491f: std; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xor byte ptr [edx + 0x32], 0xfa; call dword ptr [eax - 0x18]; 
0x00096bf8: std; bound ecx, qword ptr [edx]; add byte ptr [ecx + 0xeb6d4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001305b6: std; call dword ptr [eax - 0x73]; 
0x00139dee: std; call dword ptr [ebx + 0x31]; 
0x00131aee: std; call dword ptr [ebx - 0x7d]; 
0x000697a4: std; cli; jmp dword ptr [esi - 0x70]; 
0x0013a53b: std; dec dword ptr [ebp - 0x76aaff8a]; ret 0x5657; 
0x0013daf5: std; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax - 0x6bf08dc2]; ret; 
0x0013c66c: std; dec dword ptr [ebx - 0x137c3bbb]; or al, 0x8d; cmp byte ptr [esi + 0x64], 0xfa; call dword ptr [eax - 0x18]; 
0x00049899: std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x000499c6: std; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c8f79]; call dword ptr [eax - 0x73]; 
0x00049952: std; dec dword ptr [ebx - 0x365b4b]; dec dword ptr [ebp - 0x58c077a]; call dword ptr [eax - 0x73]; 
0x00136a43: std; dec dword ptr [ebx - 0xe373]; dec dword ptr [ebp - 0x55a037f]; call dword ptr [eax - 0x73]; 
0x0002f509: std; fstp st(1); ret; 
0x00145a26: std; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00115c91: std; inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x000eb0ae: std; inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000eb0d9: std; inc dword ptr [ebx - 0x3e760036]; mov ebx, edx; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000c6da7: std; inc dword ptr [ebx - 0x72afef3c]; sbb dword ptr [esi], 0x48; cli; call dword ptr [eax + 0x68]; 
0x000513e8: std; inc dword ptr [ebx - 0x72aff33c]; test ebp, ebp; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x00051578: std; inc dword ptr [ebx - 0x72aff33c]; test ebx, ecx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x0015edce: std; inc dword ptr [ecx + 0x31bb4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015ed09: std; inc dword ptr [ecx + 0x31c79c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015d3ee: std; inc dword ptr [ecx + 0x33490c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015d2df: std; inc dword ptr [ecx + 0x3359fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016b844: std; inc dword ptr [ecx + 0x787bac3]; add byte ptr [ebx - 0x7c72ef14], al; add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x0015e344: std; inc dword ptr [ecx + 0x85cbac3]; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0015de44: std; inc dword ptr [ecx + 0x861bac3]; add byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010973f: std; inc esp; stc; dec dword ptr [ebx - 0x7cdfdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x0007c309: std; jmp dword ptr [ebp - 0x5f]; 
0x000ef9d3: std; jmp dword ptr [ebp - 0x77]; 
0x000459db: std; jmp dword ptr [esi - 0x70]; 
0x000954f8: std; jns 0x95505; add byte ptr [ecx + 0xecc74c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00146228: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014c113: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00145c18: std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0007b4da: std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0015d565: std; mov eax, 0; jne 0x15de26; pop ebx; ret; 
0x0016064b: std; mov eax, 0; jne 0x160720; pop ebx; ret; 
0x0015355b: std; movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0009616f: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007a5be: std; pop ds; pop edi; mov edx, ebp; pop ebp; ret; 
0x000f47f8: std; pop ds; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x00161282: std; pop edi; ret; 
0x0009d0b3: std; pop esi; pop edi; pop ebp; ret; 
0x001178ba: std; pop esp; cli; call dword ptr [eax - 0x18]; 
0x001312df: std; sal esi, 1; call ecx; 
0x0005ca4b: std; xor al, 0xfa; call dword ptr [eax - 0x73]; 
0x0005098b: std; xor edi, edx; call dword ptr [eax - 1]; 
0x00119802: sti; adc al, 0xf; xchg esp, eax; ret; 
0x000b782c: sti; add ch, byte ptr [ecx]; ret; 
0x000b4655: sti; add ch, byte ptr [ecx]; rol dword ptr [ecx], 1; ret; 
0x000bb0e7: sti; add cl, byte ptr [edi]; dec ebp; ret; 
0x000bb9d2: sti; add ecx, dword ptr [edi]; dec ebp; ret; 
0x0001ab3a: sti; add ecx, dword ptr [edi]; xchg esp, eax; ret 0xca21; 
0x0006920e: sti; call dword ptr [ebp + 0x57]; 
0x000c7e63: sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00076fc7: sti; dec dword ptr [ebp - 0x583ff7b]; call dword ptr [eax - 0x73]; 
0x00072dbd: sti; dec dword ptr [ebp - 0x5847b7d]; call dword ptr [eax - 0x73]; 
0x0007108d: sti; dec dword ptr [ebp - 0x5854f7a]; call dword ptr [eax - 0x73]; 
0x000c5ae3: sti; dec dword ptr [ecx + 0x1db8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000df3c1: sti; dec edx; cli; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x000f0a51: sti; idiv esp; jmp dword ptr [ebp - 0x77]; 
0x00138dd1: sti; in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x00145696: sti; inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x000c5b03: sti; inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000e1dcc: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013d254: sti; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00069010: sti; jmp dword ptr [ebp - 0x5f]; 
0x00114a00: sti; jmp dword ptr [esi - 0x3f]; 
0x000747fb: sti; jmp dword ptr [esi - 0x70]; 
0x00051dbc: sti; jmp ebx; 
0x00148847: sti; jo 0x14884e; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0006d2b5: sti; leave; cli; jmp dword ptr [esi - 0x70]; 
0x00056611: sti; mov bh, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x001461e4: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00145bd4: sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00149fa8: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfa8: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001533f8: sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00153434: sti; mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001533f2: sti; mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0010de31: sti; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a0241: sti; mov edi, eax; jmp dword ptr [esi - 0x70]; 
0x0007cde9: sti; mov edx, 1; call dword ptr gs:[0x10]; 
0x00149ff7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0014bfe7: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00153437: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0005f7ba: sti; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000d17e6: sti; or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013ea90: sti; pop ds; push ebx; push ecx; push esi; call dword ptr [eax + 0x40]; 
0x0008b5fb: sti; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x00161272: sti; pop edi; ret; 
0x0009f4f4: sti; push dword ptr [eax + edi*2 - 0x77]; fdiv st(7); ret; 
0x00058a8f: sti; push ebx; ja 0x59470; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x630d4]; jmp eax; 
0x00059377: sti; push ebx; ja 0x597d6; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x00058976: sti; push ebx; ja 0x597e7; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x000f58f1: sti; push esi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00087c06: sti; ret; 
0x000cd1e5: sti; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x000bb965: sti; sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x00145561: sti; xchg esi, eax; cld; jmp dword ptr [esi - 0x70]; 
0x0010d3c1: sti; xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x0014c947: sti; xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002e557: sti; xor edx, edi; call dword ptr [eax + 0x53]; 
0x0008158f: sti; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000aaf1c: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x0014aa37: stosb byte ptr es:[edi], al; and al, 0xff; inc dword ptr [ecx + 0x44fc5c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00135877: stosb byte ptr es:[edi], al; arpl dx, di; call dword ptr [eax - 0x18]; 
0x000b4058: stosb byte ptr es:[edi], al; call dword ptr [edx]; 
0x000bd13b: stosb byte ptr es:[edi], al; cli; jmp dword ptr [esi - 0x70]; 
0x00074833: stosb byte ptr es:[edi], al; cmp al, 0x19; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00027ebb: stosb byte ptr es:[edi], al; das; cli; call dword ptr [eax - 0x18]; 
0x000f6242: stosb byte ptr es:[edi], al; dec ebp; bnd jmp dword ptr [esi - 0x70]; 
0x000e7e26: stosb byte ptr es:[edi], al; dec edx; cli; call dword ptr [eax - 0x73]; 
0x00146337: stosb byte ptr es:[edi], al; imul edi, edi, -1; add ebx, 0x48d45; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00110b2e: stosb byte ptr es:[edi], al; mov eax, 0xf0; lea ebx, [ebx + 0x29e8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011178e: stosb byte ptr es:[edi], al; mov eax, 0xf0; lea ebx, [ebx + 0x2a50]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000695a0: stosb byte ptr es:[edi], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009dcbc: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00115412: stosb byte ptr es:[edi], al; pop ebx; cli; call dword ptr [eax - 0x73]; 
0x0009d5e3: stosb byte ptr es:[edi], al; pop edi; ret; 
0x0012a912: stosb byte ptr es:[edi], al; ret; 
0x0006b083: stosb byte ptr es:[edi], al; sub byte ptr [ecx], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x00062c56: stosd dword ptr es:[edi], eax; adc ebx, dword ptr [eax]; add byte ptr [ebx - 0x6f72f314], al; mov ah, 0x76; cli; call dword ptr [edx - 0x73]; 
0x00034597: stosd dword ptr es:[edi], eax; add byte ptr [edi], dl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00034725: stosd dword ptr es:[edi], eax; add byte ptr [edi], dl; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0001b01e: stosd dword ptr es:[edi], eax; add dword ptr [eax], eax; add byte ptr [ebp - 0x59b3f80], cl; call dword ptr [eax + 0x6a]; 
0x00028e0e: stosd dword ptr es:[edi], eax; add edi, edi; call dword ptr [eax - 0x73]; 
0x000a3789: stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x53]; 
0x000a2fce: stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x56]; 
0x0004d240: stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x57]; 
0x00081b1f: stosd dword ptr es:[edi], eax; inc eax; pop es; add byte ptr [eax], al; add dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x000b6295: stosd dword ptr es:[edi], eax; inc esi; cli; call dword ptr [eax - 0x18]; 
0x0010048c: stosd dword ptr es:[edi], eax; int1; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0016be77: stosd dword ptr es:[edi], eax; mov al, byte ptr [0x100001a]; add esp, 4; pop ebx; pop esi; ret; 
0x000d4e91: stosd dword ptr es:[edi], eax; mov bl, 0xff; inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x0003483e: stosd dword ptr es:[edi], eax; mov eax, 0xf0; lea ebx, [ebx + 0x1700]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a37: stosd dword ptr es:[edi], eax; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009dcb8: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009d5df: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000bc5c3: stosd dword ptr es:[edi], eax; out 0xff, al; call dword ptr [eax + 0x51]; 
0x0013b94c: stosd dword ptr es:[edi], eax; pop eax; aaa; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00031861: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00051191: stosd dword ptr es:[edi], eax; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000dcd71: stosd dword ptr es:[edi], eax; ret 0xfff3; 
0x00024d56: stosd dword ptr es:[edi], eax; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x00029417: stosd dword ptr es:[edi], eax; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x8c]; add eax, dword ptr gs:[0]; ret; 
0x00137486: stosd dword ptr es:[edi], eax; test byte ptr [0x83010000], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0004a920: stosd dword ptr es:[edi], eax; xor edi, edx; call dword ptr [eax - 0x18]; 
0x00062b14: stosd dword ptr es:[edi], eax; xor edi, edx; call dword ptr [eax - 0x77]; 
0x0001d294: str word ptr [ebp - 0x593837d]; call dword ptr [eax - 0x73]; 
0x000ecb48: str word ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0001e288: str word ptr [ebx - 0x72c3dba4]; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x00040a1f: str word ptr [ecx]; ret 0x9f74; 
0x000aa28f: str word ptr [ecx]; ret 0xa074; 
0x0007a845: sub ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0004170f: sub ah, 0x73; cli; call dword ptr [eax + 0x68]; 
0x0011b5a3: sub ah, 0x9c; cli; call dword ptr [eax - 0x18]; 
0x0011c199: sub al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001179a3: sub al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x00117633: sub al, 0; add byte ptr [ebp - 0x74f18b40], al; add dword ptr [eax + 0xf], 0; add bl, ch; ret; 
0x00116b5b: sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116789: sub al, 0; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0011c45f: sub al, 0; add byte ptr [ecx], al; pop ebx; pop esi; pop edi; ret; 
0x00116783: sub al, 0; add dh, al; xchg byte ptr [esp + ebp], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0007a805: sub al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aac7: sub al, 0x1a; add byte ptr [eax], al; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0002f7bf: sub al, 0x24; add esp, 0x14; pop ebx; pop esi; ret; 
0x00045400: sub al, 0x24; add esp, 0x14; ret; 
0x001251a3: sub al, 0x24; call dword ptr [eax + 0x10]; 
0x001174ba: sub al, 0x24; call ebx; 
0x001171ae: sub al, 0x24; call esi; 
0x0013cefe: sub al, 0x24; ret; 
0x000b3950: sub al, 0x29; ret 0x448b; 
0x000e1e98: sub al, 0x31; jmp dword ptr [esi - 0x7d]; 
0x00073d07: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000f5e63: sub al, 0x31; ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000de5c9: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0011adf6: sub al, 0x3c; add dword ptr [ecx - 0x69f0dbfc], ecx; ret 0xfe83; 
0x000a4810: sub al, 0x46; clc; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x0009fb37: sub al, 0x50; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x00115499: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x114980; add esp, 0x2c; ret; 
0x000eac1c: sub al, 0x52; push 1; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000a035f: sub al, 0x55; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0012ef8f: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x00129f36: sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0007da80: sub al, 0x56; call dword ptr [eax]; 
0x00074ec2: sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0012bda6: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000a0e75: sub al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0001b73f: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00096bc9: sub al, 0x63; or al, byte ptr [eax]; add ecx, 0xeb703; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001011a5: sub al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000c58a5: sub al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000ff7e5: sub al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff895: sub al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff945: sub al, 0x65; mov eax, dword ptr [0xc]; test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000b3211: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000f8146: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x000ff34a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x000fbcc4: sub al, 0x69; ret; 
0x00160422: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000b2525: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x0005e8e3: sub al, 0x76; cli; call dword ptr [eax - 0x18]; 
0x000954c9: sub al, 0x7a; or al, byte ptr [eax]; add ecx, 0xecca3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000317f9: sub al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0006ad6a: sub al, 0x83; in al, dx; add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x000f7be1: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x00124a72: sub al, 0x83; in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x00078e33: sub al, 0x83; in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x000d6eaf: sub al, 0x83; ret 0x3904; 
0x0015ce33: sub al, 0x83; ret 0x7e10; 
0x000e5f0b: sub al, 0x83; ret 0x8301; 
0x000cf357: sub al, 0x83; ret 0x8801; 
0x0011b11b: sub al, 0x83; ret 0x8902; 
0x00169ead: sub al, 0x83; ret 0x901; 
0x00131533: sub al, 0x83; ret; 
0x0012a812: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00022aab: sub al, 0x85; sal byte ptr [eax + edi - 0x75], cl; je 0x22ad7; cmp byte ptr [ecx - 0x769fdbbc], cl; ret 0x44c7; 
0x0002d5aa: sub al, 0x89; call 0x5d62340c; ret; 
0x000a0d1a: sub al, 0x89; call 0x5d696b7c; ret; 
0x000a24d6: sub al, 0x89; call 0x5d698338; ret; 
0x000a2551: sub al, 0x89; call 0x5d6983b3; ret; 
0x000a51a6: sub al, 0x89; call 0x5d69b008; ret; 
0x000a5223: sub al, 0x89; call 0x5d69b085; ret; 
0x000a7d36: sub al, 0x89; call 0x5d69db98; ret; 
0x000a7db1: sub al, 0x89; call 0x5d69dc13; ret; 
0x000ae616: sub al, 0x89; call 0x5d6a4478; ret; 
0x000ae693: sub al, 0x89; call 0x5d6a44f5; ret; 
0x0013c056: sub al, 0x89; call 0x5d731eb8; ret; 
0x001266f2: sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x00038186: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00115e45: sub al, 0x89; fisttp qword ptr [edi]; xchg esp, eax; ret; 
0x000301d6: sub al, 0x89; ret 0x4489; 
0x00169563: sub al, 0x89; ret 0x448b; 
0x000c4b4a: sub al, 0x89; ret 0x808b; 
0x0003aa70: sub al, 0x89; ret 0xc483; 
0x00169de2: sub al, 0x89; ret 0xc985; 
0x000d506e: sub al, 0x89; ret; 
0x0012aaf9: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x000ac8d8: sub al, 0x8c; cli; call dword ptr [eax - 0x18]; 
0x0001fb33: sub al, 0x8d; dec edi; and byte ptr [ecx - 0x9cfdbb4], cl; ret 0x7501; 
0x00076e62: sub al, 0x8d; je 0x76e8c; add byte ptr [eax - 0x7ce541f1], dl; rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x000c3471: sub al, 0x8d; sbb dword ptr [ebp + 0x47], -6; call dword ptr [eax - 0x73]; 
0x0002102c: sub al, 0x8d; xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x000814ea: sub al, 0x8d; xchg dword ptr [eax], ebp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00020ff5: sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x00020af2: sub al, 0x8d; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x000a64be: sub al, 0x8d; xor ah, 0xab; cli; call dword ptr [eax + 0x53]; 
0x000e61e4: sub al, 0x95; cli; call dword ptr [eax - 0x73]; 
0x001153be: sub al, 0x9a; cli; call dword ptr [eax + 0x55]; 
0x001632b3: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x163350; lea eax, [ecx + 4]; ret; 
0x000ed2b3: sub al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f3aa: sub al, 0xe8; cmp dh, 0xff; dec dword ptr [ecx - 0x76097a09]; ret 0x468d; 
0x00050146: sub al, 0xe8; je 0x50109; add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x0010d27b: sub al, 0xe8; jg 0x10d2d6; idiv bh; add esp, 0x2c; ret; 
0x000ea9ac: sub al, 0xe8; jle 0xea9b8; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a05a5: sub al, 0xe8; jne 0xa05ab; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ba655: sub al, 0xe8; jne 0xba6a0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a0665: sub al, 0xe8; lds ecx, ptr [edx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e1baa: sub al, 0xe8; mov al, byte ptr [0x83fffff8]; les ebp, ptr [eax]; pop ebx; ret; 
0x0010804a: sub al, 0xe8; mov al, byte ptr [0x8dfffffe]; xchg dword ptr [eax], ebp; push edi; cli; call dword ptr [ebp - 1]; 
0x00035f75: sub al, 0xe8; mov ch, 0x12; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a0605: sub al, 0xe8; mov ch, 6; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0011761d: sub al, 0xe8; mov ebp, 0x83fffff9; les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00035ee3: sub al, 0xe8; push edi; push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00087af8: sub al, 0xe8; push edx; idiv bh; call dword ptr [ebx + 0x56]; 
0x0013fce8: sub al, 0xe8; ret 0xf833; 
0x00070487: sub al, 0xe8; ret; 
0x00116872: sub al, 0xe8; sbb byte ptr [edx + eax], ch; add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x0010ddfb: sub al, 0xe8; scasd eax, dword ptr es:[edi]; test eax, 0xc483fff6; adc byte ptr [ecx], bh; ret; 
0x00035eb5: sub al, 0xe8; test dword ptr [esi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00035fa3: sub al, 0xe8; xchg dword ptr [edx], edx; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000a0633: sub al, 0xe8; xchg dword ptr [esi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00025492: sub al, 0xe9; or eax, 0xe8fffffc; ret; 
0x00126dc2: sub al, 0xf0; call dword ptr [eax - 0x73]; 
0x000ff66b: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x000df20a: sub al, 0xf; mov dh, 0xc0; ret; 
0x000396b1: sub al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0003dc8f: sub al, 0xf; xchg ebp, eax; ret 0x5409; 
0x0003d986: sub al, 0xf; xchg ebp, eax; ret 0xb60f; 
0x000a43d7: sub al, 0xf; xchg edi, eax; ret; 
0x00025829: sub al, 0xf; xchg esp, eax; ret 0xd108; 
0x000b6f02: sub al, 0xfa; call dword ptr [eax + 0x53]; 
0x0002ca9e: sub al, 0xfa; call dword ptr [eax + 0x56]; 
0x0001914e: sub al, 0xfa; call dword ptr [eax + 0x57]; 
0x00019110: sub al, 0xfa; call dword ptr [eax - 0x18]; 
0x000f98de: sub al, 0xfa; call dword ptr [eax - 0x73]; 
0x00019134: sub al, 0xfa; call dword ptr [edx + 0x52]; 
0x0013fce0: sub al, 0xff; je 0x13fd08; sub al, 0xff; je 0x13fd0c; sub al, 0xe8; ret 0xf833; 
0x0013fce4: sub al, 0xff; je 0x13fd0c; sub al, 0xe8; ret 0xf833; 
0x00087af4: sub al, 0xff; je 0x87b1c; sub al, 0xe8; push edx; idiv bh; call dword ptr [ebx + 0x56]; 
0x000ec7c3: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007b682: sub al, 1; add byte ptr [eax], al; ret; 
0x001269d5: sub al, 1; ret 0x5689; 
0x000ec037: sub al, 2; add byte ptr [ebp - 0x56ac77d], cl; call dword ptr [eax + 0x68]; 
0x00116875: sub al, 2; add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x0014d03b: sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002af6c: sub al, 7; add byte ptr [ebx - 0x8b6b], cl; inc dword ptr [ebx + 0x45890cc4]; mov ah, 0x83; ret 0x5201; 
0x001659b6: sub al, 9; ret 0x1274; 
0x00164396: sub al, 9; ret 0x5489; 
0x0016574a: sub al, 9; ret 0x840f; 
0x00165f9f: sub al, 9; ret 0x850f; 
0x00165d9f: sub al, 9; ret 0x874; 
0x00164c42: sub al, 9; ret 0xc985; 
0x0014d19b: sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00110d06: sub al, byte ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x000c5862: sub al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000edd77: sub al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011149f: sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b0a7d: sub al, byte ptr [ebp + 0x76850ff6]; add dword ptr [eax], eax; add byte ptr [ebx - 0x363f7b], al; jmp eax; 
0x00048cbd: sub al, byte ptr [ebp - 0x5b7af00a]; add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x0006e8a5: sub al, byte ptr [ebx + 0x565308ec]; call dword ptr [edi + 0x18]; 
0x000e21be: sub al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000ee8e8: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de95f: sub al, ch; dec ebx; ret; 
0x0007a120: sub al, ch; ret 0xf9ef; 
0x0002bb20: sub al, ch; ret 0xfed5; 
0x00033c88: sub al, ch; ret 0xfffe; 
0x0002b0ec: sub bh, bh; je 0x2b114; sub byte ptr [edx], ch; call 0x2b090; add esp, 0x2c; ret; 
0x00123777: sub bh, bh; jo 0x12378f; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0011527e: sub bh, bh; xor byte ptr [ebx - 0x72efdbbc], cl; and byte ptr [edi], 0x5c; cli; call dword ptr [eax - 0x73]; 
0x00114f3f: sub bh, bh; xor byte ptr [ebx - 0x72efdbbc], cl; and byte ptr [edx], 0x4b; cli; call dword ptr [eax + 0x6a]; 
0x000f69a5: sub bh, byte ptr [eax + 0x14d]; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6b15: sub bh, byte ptr [eax + 0x14e]; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000865a6: sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0013c23f: sub bh, ch; jmp dword ptr [esi - 0x70]; 
0x00150b5a: sub bh, dh; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012e810: sub bh, dl; call dword ptr [edi + 0x52]; 
0x001315dd: sub bh, dl; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x000a7612: sub bl, byte ptr [eax]; clc; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x00134800: sub byte ptr [0x8d500000], dh; adc dword ptr [eax + 0x4a], -6; call dword ptr [eax + 0x6a]; 
0x000eced6: sub byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x000392cf: sub byte ptr [eax + 0x32], 0xfa; call dword ptr [eax + 0x57]; 
0x000de360: sub byte ptr [eax + 0x480f003b], al; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x001259ea: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x001128b3: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [ebx + 0x5a], bh; cli; call dword ptr [eax - 0x73]; 
0x00117e63: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [ebx], cl; pop ebp; cli; call dword ptr [eax - 0x73]; 
0x00106b13: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [edi], al; push edi; cli; call dword ptr [eax - 0x73]; 
0x00111ff3: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [edx + 0x5a], al; cli; call dword ptr [eax - 0x73]; 
0x001050f3: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3db8c], cl; xchg cl, cl; push esi; cli; call dword ptr [eax - 0x73]; 
0x00129813: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3db8c], cl; xchg dh, bh; popal; cli; call dword ptr [eax - 0x73]; 
0x000c2fba: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e3dba4], cl; adc dword ptr [edx + 0x47], -6; call dword ptr [eax - 0x73]; 
0x000c51c2: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e7db8c], cl; xchg cl, dl; inc edi; cli; call dword ptr [eax - 0x73]; 
0x000c4df2: sub byte ptr [eax + 0x6a], dl; add byte ptr [ebx - 0x72e7db8c], cl; xchg dh, al; inc edi; cli; call dword ptr [eax - 0x73]; 
0x000ff3da: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x000ed787: sub byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0014d394: sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012a90f: sub byte ptr [eax - 0x18], dl; stosb byte ptr es:[edi], al; ret; 
0x000a3add: sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x0009f743: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000441a6: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x00115443: sub byte ptr [eax - 6], dh; call dword ptr [eax + 0x55]; 
0x00028ed8: sub byte ptr [eax - 6], dh; call dword ptr [eax - 0x18]; 
0x00028e57: sub byte ptr [eax - 6], dh; call dword ptr [edx + 0x50]; 
0x0007aa8b: sub byte ptr [eax], 0x1a; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00081dcd: sub byte ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x00028e56: sub byte ptr [eax], 0x70; cli; call dword ptr [edx + 0x50]; 
0x0007b581: sub byte ptr [eax], 1; add byte ptr [eax], al; mov dword ptr [edx + 0x140], 1; ret; 
0x000f1d0b: sub byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x00079b2d: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00078077: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000ef2d7: sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000cd28b: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001042ab: sub byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007d9bd: sub byte ptr [eax], al; je 0x7d9db; sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push 0; call dword ptr [eax]; 
0x00068175: sub byte ptr [eax], al; or byte ptr [eax], al; add bl, ch; ret; 
0x0014d45a: sub byte ptr [eax], ch; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000618a0: sub byte ptr [ebp + 0x29001544], cl; ret; 
0x000e9f01: sub byte ptr [ebp + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x000b251a: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x001350c6: sub byte ptr [ebp - 0x55a277d], cl; call dword ptr [eax - 0x73]; 
0x0001ee6f: sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax + 0x68]; 
0x0001ed8b: sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax - 0x73]; 
0x0012ed4b: sub byte ptr [ebp - 0x59d254b], cl; call dword ptr [edi + 0x6a]; 
0x00112e69: sub byte ptr [ebp - 0x5a5737a], cl; call dword ptr [eax - 0x73]; 
0x00111b0a: sub byte ptr [ebp - 0x5a5cc7d], cl; call dword ptr [eax - 0x73]; 
0x001110ca: sub byte ptr [ebp - 0x5a5fb7d], cl; call dword ptr [eax - 0x73]; 
0x000c1957: sub byte ptr [ebp - 0x5b90579], cl; call dword ptr [eax + 0x53]; 
0x000f4f0d: sub byte ptr [ebp - 0x74e3dbac], cl; pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; call dword ptr gs:[0x10]; 
0x001017de: sub byte ptr [ebp - 0x74f7db8c], cl; jl 0x10180a; and al, 0xb8; jne 0x1017ea; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139000: sub byte ptr [ebp - 0x75], dl; inc esp; and al, 0x24; call eax; 
0x000f7b83: sub byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xf7b98; pop ebx; ret; 
0x000291cb: sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x000f574b: sub byte ptr [ebx + 0x2f7409f9], al; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000f56b7: sub byte ptr [ebx + 0x337409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000269d5: sub byte ptr [ebx + 0x3bab445], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf883; 
0x0011adf2: sub byte ptr [ebx + 0x3c2c244c], cl; add dword ptr [ecx - 0x69f0dbfc], ecx; ret 0xfe83; 
0x0012c40f: sub byte ptr [ebx + 0x45c24bc], cl; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000fbc1a: sub byte ptr [ebx + 0x4c8b20c4], al; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x0012f764: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0006e80d: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000fcfc5: sub byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00101736: sub byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00112d64: sub byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0001f9f4: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x000c3354: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000eca1e: sub byte ptr [ebx + 0x5e5b70c4], al; pop edi; ret; 
0x000f5375: sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000f8142: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x00129f69: sub byte ptr [ebx + 0x8b08ec], al; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0012a0b4: sub byte ptr [ebx + 0x8b0cec], al; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000a67e6: sub byte ptr [ebx + 0xf2c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0013153a: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0013153a: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0004193a: sub byte ptr [ebx - 0x16b80], cl; jmp dword ptr [ebp - 1]; 
0x00108464: sub byte ptr [ebx - 0x17a9f314], al; ret 0xffee; 
0x001396dd: sub byte ptr [ebx - 0x3d], bl; sub esp, 8; mov eax, dword ptr [eax + 0x3750]; push ecx; push edx; call dword ptr [eax]; 
0x000f1978: sub byte ptr [ebx - 0x6bf0fc02], al; ret; 
0x00076e5e: sub byte ptr [ebx - 0x72d3dbac], cl; je 0x76e8c; add byte ptr [eax - 0x7ce541f1], dl; rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x000a03b7: sub byte ptr [ebx - 0x72e3db8c], cl; xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000dc1fc: sub byte ptr [ebx - 0x76ebdb84], cl; ret 0xf889; 
0x0011b117: sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x00118a18: sub byte ptr [ebx], 0x5d; cli; call dword ptr [eax + 0x53]; 
0x00063dfa: sub byte ptr [ecx + 0x1c858bc2], cl; idiv edi; call dword ptr [ecx - 0x75]; 
0x000ed2a9: sub byte ptr [ecx + 0x245c8be6], cl; and byte ptr [ebx - 0x47d3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000329bf: sub byte ptr [ecx + 0x5624244c], cl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012e0d7: sub byte ptr [ecx + 0x6a], dl; add al, 0x52; call dword ptr [eax + 0x14]; 
0x00149e5a: sub byte ptr [ecx + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00070483: sub byte ptr [ecx - 0x17d3dbac], cl; ret; 
0x000814ed: sub byte ptr [ecx - 0x68720006], cl; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x0012f760: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000f7c4c: sub byte ptr [ecx - 0x76f3dbbc], cl; ret 0x7c8d; 
0x000bc762: sub byte ptr [ecx - 0x9763], cl; jmp dword ptr [ebp - 0x75]; 
0x000223af: sub byte ptr [ecx - 0x9efdbbc], cl; ret 0xf06; 
0x0009f9f4: sub byte ptr [ecx], 0x45; cli; call dword ptr [eax - 0x18]; 
0x000ecbfe: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00161694: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0007b582: sub byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [edx + 0x140], 1; ret; 
0x00083445: sub byte ptr [ecx], al; je 0x83508; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000835d0: sub byte ptr [ecx], al; jne 0x835a8; sub esp, 0xc; push eax; call edx; 
0x000b2517: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00083f7c: sub byte ptr [ecx], bh; ret 0x840f; 
0x0016794e: sub byte ptr [ecx], bh; ret; 
0x0006b084: sub byte ptr [ecx], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0006b09f: sub byte ptr [ecx], bl; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006aff3: sub byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013fcba: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x00101287: sub byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d1738: sub byte ptr [ecx], dl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000b2557: sub byte ptr [edi + 0x5e], bl; ret; 
0x000b6c44: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xb6c50; mov eax, edx; ret; 
0x0007b513: sub byte ptr [edi - 0x18], dl; push ss; push 0x3c890006; and al, 0x89; ret; 
0x00050616: sub byte ptr [edi - 0x18], dl; ret; 
0x00108052: sub byte ptr [edi - 6], dl; call dword ptr [ebp - 1]; 
0x0016188c: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x000dd214: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00021551: sub byte ptr [edi], cl; test byte ptr [ebp + edi*8 - 1], dh; inc dword ptr [ebp - 0x227af00a]; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000a9cb3: sub byte ptr [edi], cl; xchg edi, eax; ret 0x4439; 
0x000e96cc: sub byte ptr [edx + 0x4b], 0xfa; call dword ptr [eax - 0x18]; 
0x0007112c: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x00050140: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x6c0c0; add esp, 0x2c; ret; 
0x00111d8a: sub byte ptr [edx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007aa8c: sub byte ptr [edx], bl; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002b0f0: sub byte ptr [edx], ch; call 0x2b090; add esp, 0x2c; ret; 
0x0014b3da: sub byte ptr [esi + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000f59c4: sub byte ptr [esi - 0xe], dl; jmp dword ptr [esi - 0x70]; 
0x0013a2fd: sub byte ptr [esi - 1], 0xff; inc dword ptr [ebx + 0x36ff04ec]; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000c6c12: sub byte ptr [esi], 0x48; cli; call dword ptr [esi + 0x50]; 
0x0010196d: sub byte ptr [esi], 0x56; cli; jmp dword ptr [ebp - 0x75]; 
0x000ec3c2: sub ch, ah; bnd jmp dword ptr [esi - 0x70]; 
0x000b3947: sub cl, al; call 0x8c09626d; jl 0xb3974; sub al, 0x29; ret 0x448b; 
0x000f591d: sub cl, byte ptr [ebx - 0x74ebdbb4]; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000e8fcf: sub cl, byte ptr [ebx - 6]; call dword ptr [eax - 0x18]; 
0x00051f31: sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0007db4d: sub cl, ch; cmp ah, 0xff; dec dword ptr [ecx - 0x76dfdbb4]; push esp; and al, 0x14; call eax; 
0x000b9180: sub dh, 0xff; call dword ptr [edi - 0x18]; 
0x0012c363: sub dh, bh; jmp dword ptr [esi - 0x70]; 
0x000832d4: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00038245: sub dh, byte ptr [ebx]; cli; call dword ptr [eax - 0x73]; 
0x000cc7c9: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xcc7e9; mov eax, 1; pop ebx; ret; 
0x000834d4: sub dh, dh; ret 0x7502; 
0x000ece69: sub dh, dh; ret 0x7540; 
0x000f1b8d: sub dh, dh; ret; 
0x00072c4f: sub dl, 0x40; cli; call dword ptr [eax - 0x18]; 
0x001179a1: sub dword ptr [eax + 0x2c], 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x38], -0xd; call dword ptr [eax - 0x18]; 
0x0011ff13: sub dword ptr [eax + 0x5e], -6; call dword ptr [eax + 0x6a]; 
0x0007c6b7: sub dword ptr [eax + 0x7e], -6; call dword ptr [eax - 1]; 
0x0014d2fb: sub dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00126dc7: sub dword ptr [eax - 0x5e], -6; call dword ptr [eax - 0x73]; 
0x0007fa79: sub dword ptr [eax - 0x72000577], -0x6d; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x00033d37: sub dword ptr [eax - 0x73], edx; sbb byte ptr [edi], 0x32; cli; call dword ptr [eax - 0x18]; 
0x000c8757: sub dword ptr [eax], -0x6f; cli; call dword ptr [eax + 0x68]; 
0x000ac899: sub dword ptr [eax], -0x71; cli; call dword ptr [eax - 0x18]; 
0x0012c3b0: sub dword ptr [eax], 0x50fffa70; call 0x29a20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e5f21: sub dword ptr [eax], 0x50fffa70; call 0x29a20; add esp, 0x18; pop ebx; ret; 
0x000504ce: sub dword ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x0010f1ee: sub dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; mov ebx, ebp; call dword ptr gs:[0x10]; 
0x0010c648: sub dword ptr [eax], eax; add byte ptr [eax - 0x73], bl; sub eax, 0x58; cli; call dword ptr [eax - 1]; 
0x001107af: sub dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [eax], 0xffffffca; bnd call dword ptr [eax - 0x18]; 
0x000edcf7: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011a592: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0010c615: sub dword ptr [eax], eax; add byte ptr [ebp - 0x5a7347d], cl; call dword ptr [eax - 1]; 
0x0010c678: sub dword ptr [eax], eax; add byte ptr [ebp - 0x74f68b40], al; pop ebp; cld; leave; ret; 
0x0010c5f9: sub dword ptr [eax], eax; add byte ptr [ebp - 0x7c808b40], al; in al, dx; or byte ptr [ebp - 0x5a7466d], cl; call dword ptr [edx + 0x50]; 
0x0010629c: sub dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080009: sub dword ptr [ebp + 0x1df0], 1; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001123fe: sub dword ptr [ebp + 0x5a], -6; call dword ptr [eax - 0x18]; 
0x00119079: sub dword ptr [ebp + 0xb6], ecx; add byte ptr [ecx], bh; ret 0x1f77; 
0x00117f33: sub dword ptr [ebp - 1], ebp; jmp dword ptr [esi - 0x70]; 
0x0009f9f5: sub dword ptr [ebp - 6], eax; call dword ptr [eax - 0x18]; 
0x000ad9d7: sub dword ptr [ebp - 6], eax; call dword ptr [eax - 0x18]; pop edi; mov ah, 0xf7; jmp dword ptr [esi - 0x70]; 
0x00034596: sub dword ptr [ebx + 0x1700], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00034724: sub dword ptr [ebx + 0x1700], 1; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0016be76: sub dword ptr [ebx + 0x1aa0], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000b537b: sub dword ptr [ebx + 0x20c8], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00137485: sub dword ptr [ebx + 0x3584], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013b94b: sub dword ptr [ebx + 0x3758], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0006d189: sub dword ptr [ebx + 0x575504ec], eax; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000bfa71: sub dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x000f7e05: sub dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x00081b1e: sub dword ptr [ebx + 0x740], 1; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0011d5f6: sub dword ptr [ebx - 0x1077a], ecx; jmp dword ptr [ebp - 0x39]; 
0x00033aa1: sub dword ptr [ebx], 1; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000716e9: sub dword ptr [ebx], 1; pop ebx; pop esi; pop edi; ret; 
0x00051137: sub dword ptr [ebx], 1; pop ebx; pop esi; ret; 
0x00033e6f: sub dword ptr [ebx], 1; sub esp, 8; push 0; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000ec753: sub dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007d71f: sub dword ptr [ecx], edi; ret 0xa7e; 
0x000dca4b: sub dword ptr [ecx], edi; ret 0xd075; 
0x00067e24: sub dword ptr [edi + 0x29], esi; movzx eax, al; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x000c0604: sub dword ptr [edi + 4], 1; pop ebx; pop esi; pop edi; ret; 
0x0015e45c: sub dword ptr [edi - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x00136fb3: sub dword ptr [edi - 0xb], eax; jmp dword ptr [ebp - 0x5f]; 
0x000fcc22: sub dword ptr [edi], 0x5c; cli; jmp dword ptr [ebp - 0x77]; 
0x00067e26: sub dword ptr [edi], ecx; mov dh, 0xc0; mov ecx, dword ptr [ebx + eax*4 - 0x62624]; add ecx, ebx; jmp ecx; 
0x0009bfcc: sub dword ptr [edi], ecx; or al, byte ptr [eax]; add ecx, 0xe6444; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0006b082: sub dword ptr [edx + 0x1928], 1; pop ebx; pop esi; ret; 
0x00074832: sub dword ptr [edx + 0x193c], 1; pop ebx; pop esi; ret; 
0x000fa255: sub dword ptr [edx + 0x24f0], 1; ret; 
0x00083096: sub dword ptr [edx + 0x44], -6; call dword ptr [eax + 0x56]; 
0x0004383d: sub dword ptr [esi + 0x31fffd77], -0x40; ret; 
0x0002e711: sub dword ptr [esi], 0x2f; cli; call dword ptr [eax - 0x18]; 
0x000ac8d7: sub dword ptr [esp + ecx*4], -6; call dword ptr [eax - 0x18]; 
0x00068be1: sub dword ptr ds:[ebx], 1; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0009c88b: sub eax, 0x10; pop edi; ret; 
0x00146455: sub eax, 0x300048c; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0009bfe9: sub eax, 0x3000e64; or al, 0x99; jmp ecx; 
0x000949b5: sub eax, 0x3000ed7; or al, 0x99; jmp ecx; 
0x000f5fb2: sub eax, 0x36b8; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c9923: sub eax, 0x3c890000; and al, 0xe8; ret 0x2d; 
0x0010c64d: sub eax, 0x58; cli; call dword ptr [eax - 1]; 
0x0013773e: sub eax, 0x5b14c483; pop esi; ret; 
0x000f8291: sub eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000bb966: sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x00129414: sub eax, 0x61; cli; call dword ptr [eax - 0x18]; 
0x00138d12: sub eax, 0x642f03c7; jbe 0x138c9d; in al, dx; add al, 0x83; ret; 
0x000e7ff7: sub eax, 0x7712fa83; jnp 0x8b1aa476; mov word ptr [esi - 0x5f3e0], ss; add ecx, esi; jmp ecx; 
0x0007aeb4: sub eax, 0x81000c20; ret; 
0x000715b4: sub eax, 0x81000cb9; ret; 
0x00151bb4: sub eax, 0x81fffeb3; ret; 
0x0014d5b4: sub eax, 0x81fffef9; ret; 
0x0014bbb4: sub eax, 0x81ffff13; ret; 
0x00149bb4: sub eax, 0x81ffff33; ret; 
0x00076167: sub eax, 0x83000001; in al, dx; add al, 0x51; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0005e72b: sub eax, 0x83000013; ret; 
0x00108c1f: sub eax, 0x83000038; les ecx, ptr [eax + edx*2]; push esi; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x00128122: sub eax, 0x8304ec83; ret; 
0x000f671d: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001335b3: sub eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x00069b2a: sub eax, 0xff04ec83; je 0x69b55; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00028af4: sub eax, 0xffff883; inc esp; ret; 
0x001057fc: sub eax, 1; jle 0x1056f0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010724c: sub eax, 1; jle 0x107138; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013d611: sub eax, 1; jle 0x13d5ff; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013de90: sub eax, 1; jle 0x13de80; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e088: sub eax, 1; jle 0x13e078; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e207: sub eax, 1; jle 0x13e1f7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013e387: sub eax, 1; jle 0x13e377; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019487: sub eax, 1; jle 0x19475; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000194e1: sub eax, 1; jle 0x194d0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001953a: sub eax, 1; jle 0x1952a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019593: sub eax, 1; jle 0x19583; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000195ed: sub eax, 1; jle 0x195dc; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019647: sub eax, 1; jle 0x19636; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000196a1: sub eax, 1; jle 0x19690; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000196fa: sub eax, 1; jle 0x196ea; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019753: sub eax, 1; jle 0x19743; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000197ae: sub eax, 1; jle 0x1979c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019808: sub eax, 1; jle 0x197f7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019861: sub eax, 1; jle 0x19851; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000198bf: sub eax, 1; jle 0x198af; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019918: sub eax, 1; jle 0x19908; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019972: sub eax, 1; jle 0x19961; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000199cb: sub eax, 1; jle 0x199bb; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019a25: sub eax, 1; jle 0x19a14; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019a7e: sub eax, 1; jle 0x19a6e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019ad8: sub eax, 1; jle 0x19ac7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019b31: sub eax, 1; jle 0x19b21; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019b8b: sub eax, 1; jle 0x19b7a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019be5: sub eax, 1; jle 0x19bd4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019c3e: sub eax, 1; jle 0x19c2e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019c97: sub eax, 1; jle 0x19c87; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019cf1: sub eax, 1; jle 0x19ce0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019d4a: sub eax, 1; jle 0x19d3a; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019da3: sub eax, 1; jle 0x19d93; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019dfc: sub eax, 1; jle 0x19dec; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019e55: sub eax, 1; jle 0x19e45; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019eae: sub eax, 1; jle 0x19e9e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f07: sub eax, 1; jle 0x19ef7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019f63: sub eax, 1; jle 0x19f50; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00019fbd: sub eax, 1; jle 0x19fac; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a017: sub eax, 1; jle 0x1a006; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a071: sub eax, 1; jle 0x1a060; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a0ca: sub eax, 1; jle 0x1a0ba; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a124: sub eax, 1; jle 0x1a113; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a17e: sub eax, 1; jle 0x1a16d; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a1d7: sub eax, 1; jle 0x1a1c7; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a233: sub eax, 1; jle 0x1a220; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a28c: sub eax, 1; jle 0x1a27c; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a2e5: sub eax, 1; jle 0x1a2d5; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a33f: sub eax, 1; jle 0x1a32e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a398: sub eax, 1; jle 0x1a388; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a4e5: sub eax, 1; jle 0x1a4d4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a53e: sub eax, 1; jle 0x1a52e; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a597: sub eax, 1; jle 0x1a587; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001a5f0: sub eax, 1; jle 0x1a5e0; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033b2c: sub eax, 1; jle 0x33aa4; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00033d4c: sub eax, 1; jle 0x33cc8; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3ace: sub eax, 1; jle 0xc3997; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c3a9b: sub eax, 1; jle 0xc3a78; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c5764: sub eax, 1; jle 0xc5655; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011adae: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00025568: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0012e8c2: sub eax, 1; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x00121e6d: sub eax, 1; pop edi; pop ebp; ret; 
0x00043cb0: sub eax, 1; ret; 
0x0007b6bc: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x150], eax; ret; 
0x0007b364: sub eax, 2; add esp, 0xc; ret; 
0x0012f775: sub eax, dword ptr [0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e5: sub eax, dword ptr [0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f855: sub eax, dword ptr [0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b8: sub eax, dword ptr [0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f918: sub eax, dword ptr [0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f985: sub eax, dword ptr [0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa05: sub eax, dword ptr [0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012fde3: sub eax, dword ptr [0x14]; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x0012febb: sub eax, dword ptr [0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x0013167c: sub eax, dword ptr [0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x0002fd12: sub eax, dword ptr [0x14]; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e5: sub eax, dword ptr [0x14]; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00034d68: sub eax, dword ptr [0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034dbb: sub eax, dword ptr [0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x000744bc: sub eax, dword ptr [0x14]; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x000fce1f: sub eax, dword ptr [0x14]; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x0014d0d4: sub eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c57e2: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001130eb: sub eax, dword ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fc0b0: sub eax, dword ptr [ebx + 0x33ff0cec]; call esi; 
0x00098bca: sub eax, dword ptr [ebx + 0xa]; add byte ptr [ecx + 0xe9746c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00029cad: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x00033cc4: sub eax, dword ptr [ebx - 0x776fed5]; pop ebx; pop esi; pop edi; ret; 
0x0010798b: sub eax, dword ptr [ecx + 0x1c]; cmp eax, edx; jb 0x1079a0; mov eax, 1; ret; 
0x000f92d2: sub eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00033aa2: sub eax, dword ptr [ecx]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000716ea: sub eax, dword ptr [ecx]; pop ebx; pop esi; pop edi; ret; 
0x00051138: sub eax, dword ptr [ecx]; pop ebx; pop esi; ret; 
0x00033e70: sub eax, dword ptr [ecx]; sub esp, 8; push 0; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00073853: sub eax, dword ptr [edx + 0x10]; ret; 
0x00073731: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00073743: sub eax, dword ptr [edx + 0x1c]; ret; 
0x0007a3fe: sub eax, dword ptr [edx + 0xc]; ret; 
0x00073841: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00079a1b: sub eax, dword ptr [edx + 8]; ret; 
0x0006f101: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0002744a: sub eax, dword ptr [edx]; ret; 
0x0009e596: sub eax, dword ptr [esp + 4]; ret; 
0x0012f774: sub eax, dword ptr gs:[0x14]; jne 0x12f781; add esp, 0x4c; ret; 
0x0012f7e4: sub eax, dword ptr gs:[0x14]; jne 0x12f7f1; add esp, 0x4c; ret; 
0x0012f854: sub eax, dword ptr gs:[0x14]; jne 0x12f861; add esp, 0x4c; ret; 
0x0012f8b7: sub eax, dword ptr gs:[0x14]; jne 0x12f8c4; add esp, 0x4c; ret; 
0x0012f917: sub eax, dword ptr gs:[0x14]; jne 0x12f924; add esp, 0x4c; ret; 
0x0012f984: sub eax, dword ptr gs:[0x14]; jne 0x12f991; add esp, 0x4c; ret; 
0x0012fa04: sub eax, dword ptr gs:[0x14]; jne 0x12fa11; add esp, 0x4c; ret; 
0x0012fde2: sub eax, dword ptr gs:[0x14]; jne 0x12fdf3; add esp, 0x98; pop edi; ret; 
0x0012feba: sub eax, dword ptr gs:[0x14]; jne 0x12fef4; add esp, 0x1c; ret; 
0x0013167b: sub eax, dword ptr gs:[0x14]; jne 0x131688; add esp, 0x2c; ret; 
0x0002fd11: sub eax, dword ptr gs:[0x14]; jne 0x2fd22; mov eax, edx; add esp, 0x1c; ret 4; 
0x000309e4: sub eax, dword ptr gs:[0x14]; jne 0x309f2; add esp, 0x18; pop ebx; ret; 
0x00034d67: sub eax, dword ptr gs:[0x14]; jne 0x34d74; add esp, 0x1c; ret; 
0x00034dba: sub eax, dword ptr gs:[0x14]; jne 0x34dc7; add esp, 0x1c; ret; 
0x000744bb: sub eax, dword ptr gs:[0x14]; jne 0x744d8; add esp, 0x28; pop ebx; ret; 
0x000fce1e: sub eax, dword ptr gs:[0x14]; jne 0xfce2f; add esp, 0x418; pop ebx; ret; 
0x0015c809: sub eax, ecx; pop ebp; pop ebx; ret; 
0x00157945: sub eax, ecx; pop ebp; ret; 
0x001268b9: sub eax, ecx; pop ebx; pop esi; mov edx, eax; mov eax, edx; ret; 
0x00159ffc: sub eax, ecx; pop ebx; ret; 
0x00153c04: sub eax, ecx; pop edi; call 0x13cee5; add ebx, 0x3c9f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014e954: sub eax, ecx; pop edi; call 0x13cee5; add ebx, 0x414e4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154d0a: sub eax, ecx; pop esi; call 0x13cee5; add ebx, 0x3baae; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00151a5a: sub eax, ecx; pop esi; call 0x13cee5; add ebx, 0x3e91e; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015e6df: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x0015d161: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0015e17b: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0015ce6d: sub eax, ecx; pop esi; pop edi; ret; 
0x000341bb: sub eax, ecx; pop esi; pop edi; sbb edx, ecx; ret; 
0x00156198: sub eax, ecx; ret; 
0x0008b6a7: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0011b177: sub eax, edi; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0008b5fe: sub eax, edi; pop edi; ret; 
0x00072204: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000aca21: sub eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0015ecaf: sub eax, edx; pop edi; pop ebp; ret; 
0x001601c9: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000ac945: sub eax, edx; pop edi; ret; 
0x00096017: sub eax, edx; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0006f5cc: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00126eae: sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00034187: sub eax, edx; ret; 
0x0002f9df: sub eax, edx; shr eax, 0x1f; ret; 
0x00075bdb: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0009d331: sub eax, esi; pop ebx; pop esi; ret; 
0x0009d37c: sub eax, esi; pop esi; ret; 
0x000fcfdc: sub ebp, 0x5b; cli; call dword ptr [eax + 0x6a]; 
0x000fcb61: sub ebp, 0x5b; cli; call dword ptr [eax - 1]; 
0x001365cf: sub ebp, esi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00095ed6: sub ebx, 0x10; bsf edx, edx; call 0x13cef9; add ecx, 0xec2df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008e8ba: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0fa: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0x8ee51; pop ebx; ret; 
0x00059373: sub ebx, 0x25; cmp ebx, 0x53; ja 0x597d6; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x0008f012: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0x8ee51; pop ebx; ret; 
0x0008f030: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0x8ee51; pop ebx; ret; 
0x0008e880: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f050: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0x8ee51; pop ebx; ret; 
0x0008ec44: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f074: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0x8ee51; pop ebx; ret; 
0x0008ec74: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0a4: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0x8ee51; pop ebx; ret; 
0x0008eca4: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008f0d4: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0x8ee51; pop ebx; ret; 
0x000935a5: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0x932a1; pop ebx; ret; 
0x00123718: sub ebx, 1; jne 0x1236a8; pop ebx; pop esi; ret; 
0x0008eb06: sub ebx, 1; lea ecx, [edx + 1]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008eee6: sub ebx, 1; lea ecx, [edx + 1]; jne 0x8ee51; pop ebx; ret; 
0x0008ef08: sub ebx, 2; lea ecx, [edx + 2]; jne 0x8ee51; pop ebx; ret; 
0x0008eb4e: sub ebx, 3; lea ecx, [edx + 3]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef2e: sub ebx, 3; lea ecx, [edx + 3]; jne 0x8ee51; pop ebx; ret; 
0x0008ef46: sub ebx, 4; lea ecx, [edx + 4]; jne 0x8ee51; pop ebx; ret; 
0x0008eb6c: sub ebx, 5; lea ecx, [edx + 5]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef6c: sub ebx, 5; lea ecx, [edx + 5]; jne 0x8ee51; pop ebx; ret; 
0x0008eb8e: sub ebx, 6; lea ecx, [edx + 6]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008ef8e: sub ebx, 6; lea ecx, [edx + 6]; jne 0x8ee51; pop ebx; ret; 
0x0008ebac: sub ebx, 7; lea ecx, [edx + 7]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008efac: sub ebx, 7; lea ecx, [edx + 7]; jne 0x8ee51; pop ebx; ret; 
0x0008efca: sub ebx, 8; lea ecx, [edx + 8]; jne 0x8ee51; pop ebx; ret; 
0x0009345b: sub ebx, 8; lea ecx, [edx + 8]; jne 0x932a1; pop ebx; ret; 
0x0008ebd0: sub ebx, 9; lea ecx, [edx + 9]; jne 0x8ee50; pop edi; pop ebx; ret; 
0x0008eff0: sub ebx, 9; lea ecx, [edx + 9]; jne 0x8ee51; pop ebx; ret; 
0x0011ce49: sub ebx, dword ptr [0x14]; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0012e4da: sub ebx, dword ptr [0x14]; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e57a: sub ebx, dword ptr [0x14]; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x0012e941: sub ebx, dword ptr [0x14]; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x00131a94: sub ebx, dword ptr [0x14]; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b24: sub ebx, dword ptr [0x14]; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131bdf: sub ebx, dword ptr [0x14]; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c48: sub ebx, dword ptr [0x14]; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce4: sub ebx, dword ptr [0x14]; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132494: sub ebx, dword ptr [0x14]; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132524: sub ebx, dword ptr [0x14]; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b4: sub ebx, dword ptr [0x14]; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132644: sub ebx, dword ptr [0x14]; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x00139775: sub ebx, dword ptr [0x14]; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x000b42a0: sub ebx, dword ptr [0x14]; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000c7ec7: sub ebx, dword ptr [0x14]; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca407: sub ebx, dword ptr [0x14]; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df427: sub ebx, dword ptr [0x14]; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff37: sub ebx, dword ptr [0x14]; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb787: sub ebx, dword ptr [0x14]; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x000f56d9: sub ebx, dword ptr [0x14]; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x00118a19: sub ebx, dword ptr [ebp - 6]; call dword ptr [eax + 0x53]; 
0x0011ce48: sub ebx, dword ptr gs:[0x14]; jne 0x11ce6d; add esp, 0x18; pop ebx; ret; 
0x0012e4d9: sub ebx, dword ptr gs:[0x14]; jne 0x12e4f7; add esp, 0x28; pop ebx; ret; 
0x0012e579: sub ebx, dword ptr gs:[0x14]; jne 0x12e597; add esp, 0x28; pop ebx; ret; 
0x0012e940: sub ebx, dword ptr gs:[0x14]; jne 0x12e957; add esp, 0x18; pop ebx; ret; 
0x00131a93: sub ebx, dword ptr gs:[0x14]; jne 0x131aeb; add esp, 0x18; pop ebx; ret; 
0x00131b23: sub ebx, dword ptr gs:[0x14]; jne 0x131b7b; add esp, 0x18; pop ebx; ret; 
0x00131bde: sub ebx, dword ptr gs:[0x14]; jne 0x131c03; add esp, 0x18; pop ebx; ret; 
0x00131c47: sub ebx, dword ptr gs:[0x14]; jne 0x131ca3; add esp, 0x18; pop ebx; ret; 
0x00131ce3: sub ebx, dword ptr gs:[0x14]; jne 0x131d49; add esp, 0x18; pop ebx; ret; 
0x00132493: sub ebx, dword ptr gs:[0x14]; jne 0x1324eb; add esp, 0x18; pop ebx; ret; 
0x00132523: sub ebx, dword ptr gs:[0x14]; jne 0x13257b; add esp, 0x18; pop ebx; ret; 
0x001325b3: sub ebx, dword ptr gs:[0x14]; jne 0x13260b; add esp, 0x18; pop ebx; ret; 
0x00132643: sub ebx, dword ptr gs:[0x14]; jne 0x13269b; add esp, 0x18; pop ebx; ret; 
0x00139774: sub ebx, dword ptr gs:[0x14]; jne 0x1397a4; add esp, 0x28; pop ebx; ret; 
0x000b429f: sub ebx, dword ptr gs:[0x14]; jne 0xb42e2; add esp, 0x18; pop ebx; ret; 
0x000c7ec6: sub ebx, dword ptr gs:[0x14]; jne 0xc7ee6; add esp, 0x78; pop ebx; ret; 
0x000ca406: sub ebx, dword ptr gs:[0x14]; jne 0xca426; add esp, 0x78; pop ebx; ret; 
0x000df426: sub ebx, dword ptr gs:[0x14]; jne 0xdf446; add esp, 0x78; pop ebx; ret; 
0x000dff36: sub ebx, dword ptr gs:[0x14]; jne 0xdff56; add esp, 0x78; pop ebx; ret; 
0x000eb786: sub ebx, dword ptr gs:[0x14]; jne 0xeb7a6; add esp, 0x78; pop ebx; ret; 
0x000f56d8: sub ebx, dword ptr gs:[0x14]; jne 0xf5727; add esp, 0x18; pop ebx; ret; 
0x0009c048: sub ebx, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c028: sub ebx, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xe63e3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960a8: sub ebx, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xec18f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00096088: sub ebx, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xec1af; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a68: sub ebx, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xed66f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00094a48: sub ebx, ecx; add esi, ecx; call 0x13cef9; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ea8f4: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003185a: sub ecx, -0x80; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0004420d: sub ecx, 1; jae 0x44208; mov eax, edx; pop ebx; pop esi; ret; 
0x001013ad: sub ecx, dword ptr [0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x0010e8df: sub ecx, dword ptr [0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e94f: sub ecx, dword ptr [0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x00115790: sub ecx, dword ptr [0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x001245d6: sub ecx, dword ptr [0x14]; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0012e3b3: sub ecx, dword ptr [0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8ca: sub ecx, dword ptr [0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0012f705: sub ecx, dword ptr [0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x0013170d: sub ecx, dword ptr [0x14]; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317ed: sub ecx, dword ptr [0x14]; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00132d35: sub ecx, dword ptr [0x14]; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d95: sub ecx, dword ptr [0x14]; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x00137411: sub ecx, dword ptr [0x14]; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00138bd6: sub ecx, dword ptr [0x14]; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x0013962e: sub ecx, dword ptr [0x14]; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d3: sub ecx, dword ptr [0x14]; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139e9b: sub ecx, dword ptr [0x14]; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x000316cc: sub ecx, dword ptr [0x14]; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x00034e08: sub ecx, dword ptr [0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e5b: sub ecx, dword ptr [0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea8: sub ecx, dword ptr [0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034efb: sub ecx, dword ptr [0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000acb58: sub ecx, dword ptr [0x14]; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b3148: sub ecx, dword ptr [0x14]; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31c8: sub ecx, dword ptr [0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000b3273: sub ecx, dword ptr [0x14]; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000befff: sub ecx, dword ptr [0x14]; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x000bff65: sub ecx, dword ptr [0x14]; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfff8: sub ecx, dword ptr [0x14]; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x000eb548: sub ecx, dword ptr [0x14]; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000f81b9: sub ecx, dword ptr [0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc23: sub ecx, dword ptr [0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x0007b6d7: sub ecx, dword ptr [ecx + 0x448b0016]; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x7b6f0; ret; 
0x00083c34: sub ecx, dword ptr [ecx + 0x5f5e5bc8]; pop ebp; ret; 
0x0007b5d6: sub ecx, dword ptr [edx + 0x548b0016]; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x140], 1; mov dword ptr [eax + 0x124], edx; ret; 
0x001266ec: sub ecx, dword ptr [esp + 0xc]; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x001013ac: sub ecx, dword ptr gs:[0x14]; jne 0x1013c0; add esp, 0x7c; ret; 
0x0010e8de: sub ecx, dword ptr gs:[0x14]; jne 0x10e8f5; add esp, 0x2c; ret; 
0x0010e94e: sub ecx, dword ptr gs:[0x14]; jne 0x10e965; add esp, 0x2c; ret; 
0x0011578f: sub ecx, dword ptr gs:[0x14]; jne 0x11579c; add esp, 0x2c; ret; 
0x001245d5: sub ecx, dword ptr gs:[0x14]; jne 0x1245e3; add esp, 0x28; pop ebx; ret; 
0x0012e3b2: sub ecx, dword ptr gs:[0x14]; jne 0x12e3c7; add esp, 0x1c; ret; 
0x0012e8c9: sub ecx, dword ptr gs:[0x14]; jne 0x12e8d6; add esp, 0x1c; ret; 
0x0012f704: sub ecx, dword ptr gs:[0x14]; jne 0x12f711; add esp, 0x4c; ret; 
0x0013170c: sub ecx, dword ptr gs:[0x14]; jne 0x131779; add esp, 0x18; pop ebx; ret; 
0x001317ec: sub ecx, dword ptr gs:[0x14]; jne 0x131859; add esp, 0x18; pop ebx; ret; 
0x00132d34: sub ecx, dword ptr gs:[0x14]; jne 0x132d42; add esp, 0x18; pop ebx; ret; 
0x00132d94: sub ecx, dword ptr gs:[0x14]; jne 0x132da2; add esp, 0x18; pop ebx; ret; 
0x00137410: sub ecx, dword ptr gs:[0x14]; jne 0x137444; add esp, 0x18; pop ebx; ret; 
0x00138bd5: sub ecx, dword ptr gs:[0x14]; jne 0x138bf1; add esp, 0x18; pop ebx; ret; 
0x0013962d: sub ecx, dword ptr gs:[0x14]; jne 0x139660; add esp, 0x28; pop ebx; ret; 
0x001396d2: sub ecx, dword ptr gs:[0x14]; jne 0x1396f2; add esp, 0x28; pop ebx; ret; 
0x00139e9a: sub ecx, dword ptr gs:[0x14]; jne 0x139ea8; add esp, 0x28; pop ebx; ret; 
0x000316cb: sub ecx, dword ptr gs:[0x14]; jne 0x3170c; add esp, 0x28; pop ebx; ret; 
0x00034e07: sub ecx, dword ptr gs:[0x14]; jne 0x34e14; add esp, 0x1c; ret; 
0x00034e5a: sub ecx, dword ptr gs:[0x14]; jne 0x34e67; add esp, 0x1c; ret; 
0x00034ea7: sub ecx, dword ptr gs:[0x14]; jne 0x34eb4; add esp, 0x1c; ret; 
0x00034efa: sub ecx, dword ptr gs:[0x14]; jne 0x34f07; add esp, 0x1c; ret; 
0x000acb57: sub ecx, dword ptr gs:[0x14]; jne 0xacb84; add esp, 0x18; pop ebx; ret; 
0x000b3147: sub ecx, dword ptr gs:[0x14]; jne 0xb315f; add esp, 0x18; pop ebx; ret; 
0x000b31c7: sub ecx, dword ptr gs:[0x14]; jne 0xb31d4; add esp, 0x1c; ret; 
0x000b3272: sub ecx, dword ptr gs:[0x14]; jne 0xb3280; add esp, 0x48; pop ebx; ret; 
0x000beffe: sub ecx, dword ptr gs:[0x14]; jne 0xbf00c; add esp, 0x28; pop ebx; ret; 
0x000bff64: sub ecx, dword ptr gs:[0x14]; jne 0xbff75; add esp, 0x98; pop ebx; ret; 
0x000bfff7: sub ecx, dword ptr gs:[0x14]; jne 0xc0008; add esp, 0x98; pop ebx; ret; 
0x000eb547: sub ecx, dword ptr gs:[0x14]; jne 0xeb55f; add esp, 0x18; pop ebx; ret; 
0x000f81b8: sub ecx, dword ptr gs:[0x14]; jne 0xf81c5; add esp, 0x1c; ret; 
0x000fbc22: sub ecx, dword ptr gs:[0x14]; jne 0xfbc2f; add esp, 0x1c; ret; 
0x00069503: sub ecx, eax; cmp edx, ecx; jbe 0x69568; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006beeb: sub ecx, eax; cmp edx, ecx; jbe 0x6bf78; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00071b60: sub ecx, eax; cmp edx, ecx; jbe 0x71db0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000731f0: sub ecx, eax; cmp edx, ecx; jbe 0x733c0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00078580: sub ecx, eax; cmp edx, ecx; jbe 0x785e0; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x001269ba: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0002f6a9: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003535e: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000ea8ad: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000ea51a: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00031858: sub ecx, edi; sub ecx, -0x80; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0013f251: sub ecx, edx; cmp eax, ecx; jbe 0x13f330; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x0013f39e: sub ecx, edx; cmp eax, ecx; jbe 0x13f3b0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0006e10f: sub ecx, edx; cmp eax, ecx; jbe 0x6e150; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00074982: sub ecx, edx; cmp eax, ecx; jbe 0x749b0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000767d5: sub ecx, edx; cmp eax, ecx; jbe 0x76900; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007696b: sub ecx, edx; cmp eax, ecx; jbe 0x769b0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007862f: sub ecx, edx; cmp eax, ecx; jbe 0x78660; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00078925: sub ecx, edx; cmp eax, ecx; jbe 0x789f0; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0002f30a: sub ecx, edx; not eax; and eax, ecx; ret; 
0x0009c6e4: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0016291b: sub edi, 0x10; jb 0x1629e0; lea eax, [eax + 0xf]; pop edi; ret; 
0x00162990: sub edi, 0xa; jb 0x1629e0; lea eax, [eax + 9]; pop edi; ret; 
0x001629a0: sub edi, 0xb; jb 0x1629e0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001629b0: sub edi, 0xd; jb 0x1629e0; lea eax, [eax + 0xc]; pop edi; ret; 
0x001629c0: sub edi, 0xe; jb 0x1629e0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001629d0: sub edi, 0xf; jb 0x1629e0; lea eax, [eax + 0xe]; pop edi; ret; 
0x00162930: sub edi, 2; jb 0x1629e0; lea eax, [eax + 1]; pop edi; ret; 
0x00162940: sub edi, 3; jb 0x1629e0; lea eax, [eax + 2]; pop edi; ret; 
0x00162888: sub edi, 4; jb 0x1629e0; lea eax, [eax + 3]; pop edi; ret; 
0x00162950: sub edi, 5; jb 0x1629e0; lea eax, [eax + 4]; pop edi; ret; 
0x00162960: sub edi, 6; jb 0x1629e0; lea eax, [eax + 5]; pop edi; ret; 
0x00162970: sub edi, 7; jb 0x1629e0; lea eax, [eax + 6]; pop edi; ret; 
0x001628bb: sub edi, 8; jb 0x1629e0; lea eax, [eax + 7]; pop edi; ret; 
0x00162980: sub edi, 9; jb 0x1629e0; lea eax, [eax + 8]; pop edi; ret; 
0x000ecb7c: sub edi, dword ptr [eax + 0x132]; call dword ptr gs:[0x10]; 
0x000ff504: sub edi, dword ptr [ebp + 8]; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x0007ce52: sub edi, dword ptr [ecx]; ret 0x840f; 
0x0011aff7: sub edi, eax; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0012673c: sub edi, ebp; dec dword ptr [ecx - 0x5e17dbcc]; sub edi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00126744: sub edi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0014a5a5: sub edi, edi; inc dword ptr [ecx + 0x451d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0001afd2: sub edi, edx; call dword ptr [eax - 0x75]; 
0x0001aef4: sub edi, edx; call dword ptr [edx - 1]; 
0x0009cef3: sub edx, 0x10; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x30]; ret; 
0x001618eb: sub edx, 0x10; jb 0x1619c0; lea eax, [edi + 0xf]; pop edi; ret; 
0x0009cee3: sub edx, 0x20; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x20]; ret; 
0x0009ced3: sub edx, 0x30; add edx, eax; jl 0x9cf00; lea eax, [ecx + eax + 0x10]; ret; 
0x0009cec3: sub edx, 0x40; add edx, eax; jl 0x9cf00; add eax, ecx; ret; 
0x000fe1de: sub edx, 0x54; cli; call dword ptr [edi + 0x57]; 
0x0010662b: sub edx, 0x56; cli; call dword ptr [eax - 0x18]; 
0x00106812: sub edx, 0x56; cli; call dword ptr [eax - 0x73]; 
0x0002fcbc: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x00161970: sub edx, 0xa; jb 0x1619c0; lea eax, [edi + 9]; pop edi; ret; 
0x00161980: sub edx, 0xb; jb 0x1619c0; lea eax, [edi + 0xa]; pop edi; ret; 
0x001618c2: sub edx, 0xc; jb 0x1619c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00161990: sub edx, 0xd; jb 0x1619c0; lea eax, [edi + 0xc]; pop edi; ret; 
0x001619a0: sub edx, 0xe; jb 0x1619c0; lea eax, [edi + 0xd]; pop edi; ret; 
0x001619b0: sub edx, 0xf; jb 0x1619c0; lea eax, [edi + 0xe]; pop edi; ret; 
0x00161910: sub edx, 2; jb 0x1619c0; lea eax, [edi + 1]; pop edi; ret; 
0x00146f29: sub edx, 2; je 0x146f30; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x00161920: sub edx, 3; jb 0x1619c0; lea eax, [edi + 2]; pop edi; ret; 
0x00161857: sub edx, 4; jb 0x1619c0; lea eax, [edi + 3]; pop edi; ret; 
0x00161930: sub edx, 5; jb 0x1619c0; lea eax, [edi + 4]; pop edi; ret; 
0x00161940: sub edx, 6; jb 0x1619c0; lea eax, [edi + 5]; pop edi; ret; 
0x00161950: sub edx, 7; jb 0x1619c0; lea eax, [edi + 6]; pop edi; ret; 
0x00161888: sub edx, 8; jb 0x1619c0; lea eax, [edi + 7]; pop edi; ret; 
0x00085835: sub edx, 8; jne 0x85800; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00161960: sub edx, 9; jb 0x1619c0; lea eax, [edi + 8]; pop edi; ret; 
0x001005af: sub edx, dword ptr [0x14]; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001006a4: sub edx, dword ptr [0x14]; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100724: sub edx, dword ptr [0x14]; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x001007b7: sub edx, dword ptr [0x14]; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x0010082f: sub edx, dword ptr [0x14]; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c17: sub edx, dword ptr [0x14]; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100c8f: sub edx, dword ptr [0x14]; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d04: sub edx, dword ptr [0x14]; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00100d8f: sub edx, dword ptr [0x14]; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00101033: sub edx, dword ptr [0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea5: sub edx, dword ptr [0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011cef1: sub edx, dword ptr [0x14]; jne 0x11cefd; add esp, 0x1c; ret; 
0x00132c8c: sub edx, dword ptr [0x14]; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132cdc: sub edx, dword ptr [0x14]; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x0013cadc: sub edx, dword ptr [0x14]; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f3: sub edx, dword ptr [0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x0014543f: sub edx, dword ptr [0x14]; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x00031526: sub edx, dword ptr [0x14]; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x00031e7e: sub edx, dword ptr [0x14]; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031eee: sub edx, dword ptr [0x14]; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x00034376: sub edx, dword ptr [0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034496: sub edx, dword ptr [0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x000508ca: sub edx, dword ptr [0x14]; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x00050e82: sub edx, dword ptr [0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000b3213: sub edx, dword ptr [0x14]; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000bc70c: sub edx, dword ptr [0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee0c: sub edx, dword ptr [0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3eb: sub edx, dword ptr [0x14]; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec11c: sub edx, dword ptr [0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec173: sub edx, dword ptr [0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000ef13a: sub edx, dword ptr [0x14]; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000f5f62: sub edx, dword ptr [0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75cf: sub edx, dword ptr [0x14]; jne 0xf75db; add esp, 0x1c; ret; 
0x000f8148: sub edx, dword ptr [0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x000ff34c: sub edx, dword ptr [0x14]; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x00079a36: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00079a40: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0009beca: sub edx, dword ptr [eax]; or al, byte ptr [eax]; add ecx, 0xe64c6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001005ae: sub edx, dword ptr gs:[0x14]; jne 0x1005d6; add esp, 0x28; pop ebx; ret; 
0x001006a3: sub edx, dword ptr gs:[0x14]; jne 0x1006ce; add esp, 0x18; pop ebx; ret; 
0x00100723: sub edx, dword ptr gs:[0x14]; jne 0x10074e; add esp, 0x18; pop ebx; ret; 
0x001007b6: sub edx, dword ptr gs:[0x14]; jne 0x1007de; add esp, 0x28; pop ebx; ret; 
0x0010082e: sub edx, dword ptr gs:[0x14]; jne 0x100856; add esp, 0x18; pop ebx; ret; 
0x00100c16: sub edx, dword ptr gs:[0x14]; jne 0x100c3e; add esp, 0x28; pop ebx; ret; 
0x00100c8e: sub edx, dword ptr gs:[0x14]; jne 0x100cb6; add esp, 0x18; pop ebx; ret; 
0x00100d03: sub edx, dword ptr gs:[0x14]; jne 0x100d2e; add esp, 0x18; pop ebx; ret; 
0x00100d8e: sub edx, dword ptr gs:[0x14]; jne 0x100db6; add esp, 0x28; pop ebx; ret; 
0x00101032: sub edx, dword ptr gs:[0x14]; jne 0x10103f; add esp, 0x1c; ret; 
0x0011cea4: sub edx, dword ptr gs:[0x14]; jne 0x11ceb1; add esp, 0x1c; ret; 
0x0011cef0: sub edx, dword ptr gs:[0x14]; jne 0x11cefd; add esp, 0x1c; ret; 
0x00132c8b: sub edx, dword ptr gs:[0x14]; jne 0x132c9b; movzx eax, al; add esp, 0x1c; ret; 
0x00132cdb: sub edx, dword ptr gs:[0x14]; jne 0x132ceb; movzx eax, al; add esp, 0x1c; ret; 
0x0013cadb: sub edx, dword ptr gs:[0x14]; jne 0x13cae9; add esp, 0x18; pop ebx; ret; 
0x0013f8f2: sub edx, dword ptr gs:[0x14]; jne 0x13f8ff; add esp, 0x1c; ret; 
0x0014543e: sub edx, dword ptr gs:[0x14]; jne 0x145469; add esp, 0x18; pop ebx; ret; 
0x00031525: sub edx, dword ptr gs:[0x14]; jne 0x31547; add esp, 0x98; pop ebx; ret; 
0x00031e7d: sub edx, dword ptr gs:[0x14]; jne 0x31e97; add esp, 0x98; pop ebx; ret; 
0x00031eed: sub edx, dword ptr gs:[0x14]; jne 0x31f07; add esp, 0x98; pop ebx; ret; 
0x00034375: sub edx, dword ptr gs:[0x14]; jne 0x34382; add esp, 0x2c; ret; 
0x00034495: sub edx, dword ptr gs:[0x14]; jne 0x344a2; add esp, 0x2c; ret; 
0x000508c9: sub edx, dword ptr gs:[0x14]; jne 0x508da; add esp, 0x1018; pop ebx; ret; 
0x00050e81: sub edx, dword ptr gs:[0x14]; jne 0x50e97; add esp, 0x1c; ret; 
0x000b3212: sub edx, dword ptr gs:[0x14]; jne 0xb3220; add esp, 0x38; pop ebx; ret; 
0x000bc70b: sub edx, dword ptr gs:[0x14]; jne 0xbc718; add esp, 0x1c; ret; 
0x000bee0b: sub edx, dword ptr gs:[0x14]; jne 0xbee18; add esp, 0x1c; ret; 
0x000eb3ea: sub edx, dword ptr gs:[0x14]; jne 0xeb407; add esp, 0x1c; ret; 
0x000ec11b: sub edx, dword ptr gs:[0x14]; jne 0xec128; add esp, 0x1c; ret; 
0x000ec172: sub edx, dword ptr gs:[0x14]; jne 0xec17f; add esp, 0x1c; ret; 
0x000ef139: sub edx, dword ptr gs:[0x14]; jne 0xef149; movzx eax, al; add esp, 0x4c; ret; 
0x000f5f61: sub edx, dword ptr gs:[0x14]; jne 0xf5f75; add esp, 0x1c; ret; 
0x000f75ce: sub edx, dword ptr gs:[0x14]; jne 0xf75db; add esp, 0x1c; ret; 
0x000f8147: sub edx, dword ptr gs:[0x14]; jne 0xf815f; add esp, 0x3c; ret; 
0x000ff34b: sub edx, dword ptr gs:[0x14]; jne 0xff367; add esp, 0x38; pop ebx; ret; 
0x0009cc03: sub edx, eax; jbe 0x9cc40; add eax, edi; pop edi; ret; 
0x0009cc16: sub edx, eax; jbe 0x9cc40; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x0009cc26: sub edx, eax; jbe 0x9cc40; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009cc36: sub edx, eax; jbe 0x9cc40; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0006ea21: sub edx, eax; mov eax, edx; pop ebx; ret; 
0x0002f361: sub edx, eax; mov eax, edx; sar eax, 0x10; ret; 
0x00077243: sub edx, eax; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0013e5ba: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00043bc6: sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x43b90; jmp eax; 
0x000f6634: sub edx, eax; test eax, eax; cmovns eax, edx; add esp, 8; pop ebx; ret; 
0x0009bee8: sub edx, ecx; call 0x13cef9; add ecx, 0xe64a5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00098be8: sub edx, ecx; call 0x13cef9; add ecx, 0xe9725; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00095efa: sub edx, ecx; call 0x13cef9; add ecx, 0xec2bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000948ca: sub edx, ecx; call 0x13cef9; add ecx, 0xed78f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0009c92c: sub edx, ecx; jbe 0x9c960; add eax, ecx; ret; 
0x00126fce: sub edx, ecx; push edx; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0007628e: sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x00107ec6: sub esi, 1; jae 0x107ea0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012677e: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00043bc4: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x43b90; jmp eax; 
0x00163be4: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00135863: sub esp, -0x5b; cli; call dword ptr [eax - 0x73]; 
0x000ac87a: sub esp, -0x75; cli; call dword ptr [eax - 0x18]; 
0x00075588: sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x000c6910: sub esp, 0x14; push 0; push 0; call 0xc68c0; add esp, 0x1c; ret; 
0x00041750: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x410f0; add esp, 0x1c; ret; 
0x0007967c: sub esp, 0x14; push 1; call 0x78f20; add esp, 0x18; pop ebx; ret; 
0x0011f5e0: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x11f4c0; add esp, 0x1c; ret; 
0x001154b0: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x1147b0; add esp, 0x1c; ret; 
0x0016c10c: sub esp, 0x14; push dword ptr [ebx + 0x2384]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0013dc3c: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x13d3a0; add esp, 0x18; pop ebx; ret; 
0x000eb4fc: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0007236c: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x68f00; add esp, 0x18; pop ebx; ret; 
0x000f868c: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0016c184: sub esp, 0x18; add eax, 0x10; push eax; call 0x11c410; add esp, 0x1c; ret; 
0x00031a10: sub esp, 0x18; push 0; call 0x312c0; add esp, 0x1c; ret; 
0x00074938: sub esp, 0x18; push eax; call 0x78300; add esp, 0x1c; ret; 
0x0006ca80: sub esp, 0x18; push ecx; call 0x6e4e0; add esp, 0x1c; ret; 
0x00110994: sub esp, 0x59; cli; call dword ptr [eax - 0x18]; 
0x0011f4b0: sub esp, 0xc; call 0xc6620; add esp, 0xc; movzx eax, ax; ret; 
0x00116cef: sub esp, 0xc; lea edx, [ebx + 0x2c20]; push edx; call eax; 
0x0012d396: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0012c826: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x00129ca9: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0012a88a: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0007da7a: sub esp, 0xc; mov dword ptr [esp + 0x2c], eax; push esi; call dword ptr [eax]; 
0x000c5d20: sub esp, 0xc; mov eax, dword ptr [eax + 0x1a84]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0006e2f5: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0012e03a: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0012a0b5: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0012d5a8: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push esi; call dword ptr [eax + 0x10]; 
0x00130735: sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0007d9c1: sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push 0; call dword ptr [eax]; 
0x0007d7a6: sub esp, 0xc; mov eax, dword ptr [ebp - 0x170]; push esi; call dword ptr [eax]; 
0x000c8548: sub esp, 0xc; mov eax, dword ptr [ebp - 0x194]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x0012401b: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x000289ba: sub esp, 0xc; mov eax, dword ptr [ebx + 0x1a58]; push ecx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001260a6: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00124d78: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001247bb: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0012fcf8: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0012fbdb: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0012efb9: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0012e98b: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00124a73: sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x001240af: sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00124388: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0012e234: sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x000c12fa: sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00124535: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0007c77e: sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x0007db30: sub esp, 0xc; push 0; mov eax, dword ptr [esp + 0x30]; call dword ptr [eax]; 
0x0016c314: sub esp, 0xc; push dword ptr [eax + 0x98]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x000c86a5: sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x194]; call dword ptr [eax + 0x10]; 
0x00102227: sub esp, 0xc; push dword ptr [ebx + 0x1d4]; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x000fc0b1: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00083550: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0001b1ad: sub esp, 0xc; push dword ptr [esp + 0x1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001171a4: sub esp, 0xc; push eax; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x000835d4: sub esp, 0xc; push eax; call edx; 
0x0012cfd4: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0012626a: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0012cfeb: sub esp, 0xc; push ebp; call eax; 
0x0012befe: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001174b0: sub esp, 0xc; push ebx; call 0x139490; mov dword ptr [esp], ebp; call ebx; 
0x00024d0e: sub esp, 0xc; push ebx; call 0x139490; mov dword ptr [esp], esi; call ebx; 
0x00124d5b: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00076971: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0006e115: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00074988: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x000767df: sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0001af9c: sub esp, 0xc; push ecx; call edx; 
0x000c1af5: sub esp, 0xc; push edi; call 0x139490; add esp, 0x10; mov eax, edi; call eax; 
0x00125196: sub esp, 0xc; push edi; call 0xedc70; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0007c7ae: sub esp, 0xc; push edi; call dword ptr [ebp]; 
0x001254d7: sub esp, 0xc; push edi; call eax; 
0x0016b62c: sub esp, 0xc; push esi; call 0x139490; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x0011730c: sub esp, 0xc; push esi; call 0x139490; mov dword ptr [esp], ebp; call esi; 
0x0001bf00: sub esp, 0xc; push esi; call 0x139490; mov dword ptr [esp], ebx; call esi; 
0x0012423e: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007892f: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0013f25b: sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00069509: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0006bef5: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00078586: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0013f3a4: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000273db: sub esp, 0xc; push esi; call eax; 
0x0012bbd0: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001251e8: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00034145: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000bee20: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xbee30; add esp, 0xc; ret; 
0x0010eb12: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0002fafc: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x001431e7: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0013153d: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0007946d: sub esp, 4; push 0; push 0; push ebp; call dword ptr [esi + 0x2c]; 
0x0006acf8: sub esp, 4; push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0006d118: sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0006be23: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00069df5: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006cd8c: sub esp, 4; push dword ptr [ebp - 0x20]; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00064221: sub esp, 4; push dword ptr [ebp - 0x8e8]; push edi; push dword ptr [ebp - 0x89c]; call eax; 
0x0013a302: sub esp, 4; push dword ptr [esi]; push eax; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001270f4: sub esp, 4; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; call eax; 
0x000327a0: sub esp, 4; push dword ptr [esp + 0x10]; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00108278: sub esp, 4; push dword ptr [esp + 0x20]; push 0; push 0x2000004; call eax; 
0x0013d0bf: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00069b2b: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000823a2: sub esp, 4; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00081ffc: sub esp, 4; push dword ptr [esp + 0x3c]; push ecx; push ebx; call eax; 
0x0007503b: sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [ecx + 0x3c]; 
0x000700fc: sub esp, 4; push eax; push edx; push dword ptr [esp + 0x1c]; call ecx; 
0x00075bdd: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0003262c: sub esp, 4; push ebp; push dword ptr [esp + 0x34]; push esi; call edi; 
0x00076079: sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00061903: sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x000613b0: sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push esi; call dword ptr [ebx + 0x1c]; 
0x00032314: sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x0006d18a: sub esp, 4; push ebp; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000322f8: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x000322c4: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x34]; call edi; 
0x0006bc5b: sub esp, 4; push ebx; push dword ptr [ebp + 0xc]; push esi; call dword ptr [eax + 0x2c]; 
0x0005de40: sub esp, 4; push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00069ad1: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00065887: sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x0005ed85: sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000639de: sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x89c]; call dword ptr [esi + 0x1c]; 
0x00060d25: sub esp, 4; push ebx; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0005ea34: sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000626ed: sub esp, 4; push ebx; push edx; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00065faf: sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edx + 0x1c]; 
0x000fbfe0: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0013e44a: sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007616b: sub esp, 4; push ecx; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0004b31f: sub esp, 4; push ecx; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x00080540: sub esp, 4; push ecx; push edx; push ebx; call eax; 
0x000fbfa9: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000fbfbd: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x000fbfd0: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0006b639: sub esp, 4; push edi; push dword ptr [ebp + 8]; push eax; call dword ptr [ebx + 0x1c]; 
0x0006a46f: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006060e: sub esp, 4; push edi; push dword ptr [esp + 0x18]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006ad6b: sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00074bbc: sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0006ce6b: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00066c7b: sub esp, 4; push esi; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00082984: sub esp, 4; push esi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call eax; 
0x00082c79: sub esp, 4; push esi; push dword ptr [esp + 0x6c]; push ebp; call eax; 
0x00074d3e: sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0005f391: sub esp, 4; push esi; push edi; push dword ptr [ebp - 0x87c]; call eax; 
0x00066f12: sub esp, 4; push esi; push edx; push ebp; call dword ptr [ebx + 0x1c]; 
0x00067c02: sub esp, 4; sar ebp, 2; push ebp; push edx; push esi; call dword ptr [ebx + 0x1c]; 
0x00077240: sub esp, 4; sub edx, eax; push edx; push eax; push edi; call dword ptr [ebx + 0x38]; 
0x0013e5b7: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0012efa8: sub esp, 8; add ecx, 4; mov esi, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [esi + 8]; 
0x0012b590: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x000f9d9c: sub esp, 8; call 0xf9a90; mov dword ptr [ebx + 0x2454], eax; add esp, 8; pop ebx; ret; 
0x0002f86c: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x00068de5: sub esp, 8; lea eax, [esp + 0x14]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00075534: sub esp, 8; lea eax, [esp + 0x24]; push eax; push ebx; call dword ptr [edi + 0x48]; 
0x000751cb: sub esp, 8; lea eax, [esp + 0x34]; push eax; push ebx; call dword ptr [esi + 0x48]; 
0x0006fcc7: sub esp, 8; lea eax, [esp + 0x3c]; push eax; push dword ptr [esp + 0x1c]; call dword ptr [ebx + 0x48]; 
0x0013e793: sub esp, 8; lea eax, [esp + 0x44]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x000bef30: sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x000786fc: sub esp, 8; lea edi, [ecx + 1]; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00124136: sub esp, 8; lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0010c732: sub esp, 8; lea edx, [ebp - 0x30]; push edx; lea edx, [ebx - 0xd7ab0]; push edx; call eax; 
0x000c7ed8: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0012e655: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00075877: sub esp, 8; lea edx, [esp + 0x34]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00124ca8: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00082eb6: sub esp, 8; mov dword ptr [esp + 0x10], ecx; push dword ptr [esp + 8]; push ebp; call eax; 
0x000b35b1: sub esp, 8; mov dword ptr [esp + 0x6c], edi; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00139788: sub esp, 8; mov eax, dword ptr [eax + 0x3750]; push ecx; push edx; call dword ptr [eax + 4]; 
0x001396e0: sub esp, 8; mov eax, dword ptr [eax + 0x3750]; push ecx; push edx; call dword ptr [eax]; 
0x00129f6a: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00123fd0: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0012ca9e: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0012b46d: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00126698: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x00126648: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0012b4f0: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0012faa0: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00125abd: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00125a41: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00125ae8: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x00131e1c: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00124156: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000f6616: sub esp, 8; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00123fec: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00125b32: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00077364: sub esp, 8; push -1; push dword ptr [eax]; mov eax, ebx; call dword ptr [eax + 0xc]; 
0x0006fa0c: sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [eax + 0xc]; 
0x00033e72: sub esp, 8; push 0; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001260f9: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00068fc8: sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x000728e6: sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x000fc4ba: sub esp, 8; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x000fc422: sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x00082291: sub esp, 8; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x00082132: sub esp, 8; push dword ptr [esp + 0x1c]; push edx; call eax; 
0x00124002: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000807e8: sub esp, 8; push dword ptr [esp + 0x24]; push ebx; call eax; 
0x00080278: sub esp, 8; push dword ptr [esp + 0x24]; push esi; call eax; 
0x00081100: sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x10]; call eax; 
0x00129f82: sub esp, 8; push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000c867a: sub esp, 8; push eax; mov eax, dword ptr [ebp - 0x1a0]; push edi; call eax; 
0x000835a8: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0012fce0: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0010b594: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0006e8a6: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00083542: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000bf062: sub esp, 8; push edi; push ebx; call eax; 
0x0008344d: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00082af9: sub esp, 8; push esi; push dword ptr [esp + 0x6c]; call eax; 
0x000cd74a: syscall; 
0x0009645d: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0002d4f9: sysret; add byte ptr [ebx + 0x7c8d10c4], al; pop es; add edi, esi; rol byte ptr [ecx], 1; ret; 
0x001611e2: test ah, 0x20; jne 0x161280; lea eax, [edi - 4]; pop edi; ret; 
0x00161d62: test ah, 0x20; jne 0x161e00; lea eax, [ecx + 0xc]; ret; 
0x00161fa2: test ah, 0x20; jne 0x162050; add edx, 0xc; jl 0x162080; lea eax, [ecx + 0xc]; ret; 
0x001623a9: test ah, 0x20; jne 0x162460; test ah, 0x40; jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x00160d26: test ah, 0x40; jne 0x160e10; lea eax, [edi + 0xf]; pop edi; ret; 
0x001616e2: test ah, 0x40; jne 0x161820; lea eax, [edi + 0xf]; pop edi; ret; 
0x001623b2: test ah, 0x40; jne 0x162470; lea eax, [edx + 0xf]; ret; 
0x00163570: test ah, 0xf0; jne 0x163590; lea eax, [edi - 8]; pop edi; ret; 
0x001632e4: test ah, 0xf; jne 0x163300; test dh, 0xf; jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x00163320: test ah, 1; jne 0x163340; lea eax, [ecx + 0xc]; ret; 
0x000ecb78: test ah, 1; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x001611b9: test ah, 2; jne 0x161250; lea eax, [edi - 8]; pop edi; ret; 
0x00161d39: test ah, 2; jne 0x161dd0; lea eax, [ecx + 8]; ret; 
0x00161f78: test ah, 2; jne 0x162020; add edx, 8; jl 0x162080; lea eax, [ecx + 8]; ret; 
0x00162380: test ah, 2; jne 0x162430; test ah, 4; jne 0x162440; lea eax, [edx + 0xb]; ret; 
0x001616b9: test ah, 4; jne 0x1617f0; lea eax, [edi + 0xb]; pop edi; ret; 
0x00162389: test ah, 4; jne 0x162440; lea eax, [edx + 0xb]; ret; 
0x000eadba: test ah, bh; add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x000581e9: test ah, ch; cmp dword ptr [eax], eax; add byte ptr [ebx - 0x4f373], cl; dec dword ptr [ebx - 0x16b4f]; dec dword ptr [ecx - 0x53f4b]; jmp dword ptr [ebp - 0x75]; 
0x0015e520: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x00161f44: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x162080; lea eax, [ecx + 4]; ret; 
0x000f444c: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00162364: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x00129f2f: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0002b714: test al, 0x11; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00161190: test al, 0x20; jne 0x161220; lea eax, [edi - 0xc]; pop edi; ret; 
0x00161d10: test al, 0x20; jne 0x161da0; lea eax, [ecx + 4]; ret; 
0x00161f40: test al, 0x20; jne 0x161ff0; add edx, 4; jl 0x162080; lea eax, [ecx + 4]; ret; 
0x00162358: test al, 0x20; jne 0x162400; test al, 0x40; jne 0x162410; lea eax, [edx + 7]; ret; 
0x0014d9da: test al, 0x22; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001023be: test al, 0x26; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x00105a90: test al, 0x28; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014ceda: test al, 0x2d; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014be5a: test al, 0x3b; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00160cd4: test al, 0x40; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x00161690: test al, 0x40; jne 0x1617c0; lea eax, [edi + 7]; pop edi; ret; 
0x00161d08: test al, 0x40; jne 0x161db0; test al, 0x20; jne 0x161da0; lea eax, [ecx + 4]; ret; 
0x00162360: test al, 0x40; jne 0x162410; lea eax, [edx + 7]; ret; 
0x000fe223: test al, 0x55; cli; call dword ptr [ecx + 0x51]; 
0x00104865: test al, 0x56; cli; call dword ptr [eax + 0x53]; 
0x001493da: test al, 0x63; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003a6a4: test al, 0x71; cli; call dword ptr [eax - 0x18]; 
0x00167d3f: test al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00089bce: test al, 0x83; ret 0xf01; 
0x00094a4d: test al, 0x84; or al, byte ptr [eax]; add ecx, 0xed68f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000abea1: test al, 0x85; sal byte ptr [esp + ebx*8 - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x0006e314: test al, 0x88; add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0007fa7a: test al, 0x89; cli; dec dword ptr [ebp - 0x5bec86d]; call dword ptr [eax - 0x73]; 
0x000d5828: test al, 0x89; ret; 
0x00119b25: test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x10750]; jmp dword ptr [ebp - 0x75]; 
0x0006f6d2: test al, 0x8b; push ebp; les ecx, ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000c22ce: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x219c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c449e: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x223c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001040ee: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x27c49b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cee: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x28c09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011219e: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x2aa09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001135be: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x2b349b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a2e: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x2c789b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00128f4e: test al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ebp + 0x33589b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000fba1f: test al, 0xd0; lodsb al, byte ptr [esi]; cli; jmp dword ptr [ecx]; 
0x001305b4: test al, 0xe6; std; call dword ptr [eax - 0x73]; 
0x0009c04d: test al, 0xe; or al, byte ptr [eax]; add ecx, 0xe63c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001634a5: test al, 0xf0; jne 0x163560; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a987d: test al, 0xf9; call dword ptr [ebx - 1]; 
0x0016320a: test al, 0xf; jne 0x1632d0; test dl, 0xf; jne 0x163350; lea eax, [ecx + 4]; ret; 
0x001526de: test al, 0xfe; inc dword ptr [ecx + 0x3dd5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152645: test al, 0xfe; inc dword ptr [ecx + 0x3ddf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00163314: test al, 1; jne 0x163330; lea eax, [ecx + 4]; ret; 
0x0016116b: test al, 2; jne 0x1611f0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161b8b: test al, 2; jne 0x161d70; mov eax, ecx; ret; 
0x00161e99: test al, 2; jne 0x161fc0; add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x00162335: test al, 2; jne 0x1623d0; test al, 4; jne 0x1623e0; lea eax, [edx + 3]; ret; 
0x0016166d: test al, 4; jne 0x161790; lea eax, [edi + 3]; pop edi; ret; 
0x00161b83: test al, 4; jne 0x161d80; test al, 2; jne 0x161d70; mov eax, ecx; ret; 
0x0016233d: test al, 4; jne 0x1623e0; lea eax, [edx + 3]; ret; 
0x00163310: test al, al; je 0x163320; test al, 1; jne 0x163330; lea eax, [ecx + 4]; ret; 
0x0013cbd0: test al, al; jne 0x13cbf4; mov eax, 4; add esp, 0xc; ret; 
0x0009e2a0: test al, al; jne 0x9e298; xor eax, eax; ret; 
0x000c7d07: test al, al; jne 0xc7cec; xor eax, eax; pop ebx; ret; 
0x000ca247: test al, al; jne 0xca22c; xor eax, eax; pop ebx; ret; 
0x000cc7f0: test al, al; jne 0xcc7be; xor eax, eax; pop ebx; ret; 
0x000df267: test al, al; jne 0xdf24c; xor eax, eax; pop ebx; ret; 
0x000dfd77: test al, al; jne 0xdfd5c; xor eax, eax; pop ebx; ret; 
0x000eb5c7: test al, al; jne 0xeb5ac; xor eax, eax; pop ebx; ret; 
0x000c7d24: test al, al; mov eax, 0; cmovne eax, ecx; ret; 
0x0001e5ec: test al, ch; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cefdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0004cd44: test al, ch; sahf; ret; 
0x000423ad: test al, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x76fbdbb4], cl; ret; 
0x00116dc4: test bh, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp + 3]; 
0x0008f9b4: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000fe21c: test bh, dl; or eax, 0x838d0000; test al, 0x55; cli; call dword ptr [ecx + 0x51]; 
0x0004b710: test bl, bl; add dword ptr [eax], eax; add byte ptr [eax - 0xcf43], al; jmp dword ptr [esi + 0xf]; 
0x00037b37: test bl, bl; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x00076338: test bl, dl; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe06], al; ret 0; 
0x001370a6: test byte ptr [0x81b90000], dh; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00041481: test byte ptr [0x83000001], bl; in al, dx; or al, 0x89; lea ebp, [edi + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x0005e72a: test byte ptr [0x83000013], ch; ret; 
0x00137487: test byte ptr [0x83010000], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012bef9: test byte ptr [0x83ffeee7], bh; in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00137535: test byte ptr [0x89010000], dh; clc; pop ebx; pop esi; pop edi; ret; 
0x00135e16: test byte ptr [0x8b000001], cl; push edx; or byte ptr [ecx], bh; ret 0x3675; 
0x000f1b86: test byte ptr [0x8b000002], al; pop ebp; sub dh, dh; ret; 
0x0002919d: test byte ptr [eax + 0x200], dl; ret; 
0x0015d0d1: test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000e6578: test byte ptr [eax + eax - 0x6b750000], bl; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0009dd00: test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x00168369: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add bh, dh; ret 0; 
0x000229ab: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x229d9; push 0x682474ff; call esi; 
0x00023d73: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x23da1; push 0x682474ff; call esi; 
0x0007e038: test byte ptr [eax + eax], al; add al, ch; mov edi, 0x89ffffdb; ret; 
0x00162ae1: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00072803: test byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x199f7d], cl; call dword ptr [eax - 0x73]; 
0x0003f6fa: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add cl, ch; wait; idiv bh; call dword ptr [ebx + 0x6a]; 
0x00031ddb: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c71b: test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add cl, ch; retf 0xfff6; call dword ptr [ebx + 0x6a]; 
0x00162a91: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0013c2d8: test byte ptr [eax - 0x5d528], dl; jmp eax; 
0x000de1e9: test byte ptr [eax - 0x5fe94], dl; jmp eax; 
0x000bc91b: test byte ptr [eax - 0x60f84], bl; jmp eax; 
0x0008b082: test byte ptr [eax - 0x61fe8], cl; jmp eax; 
0x0008afc2: test byte ptr [eax - 0x6200c], cl; jmp eax; 
0x000857da: test byte ptr [eax - 0x62050], cl; jmp eax; 
0x00059386: test byte ptr [eax - 0x62f84], bl; jmp eax; 
0x00058a9e: test byte ptr [eax - 0x630d4], bl; jmp eax; 
0x00058985: test byte ptr [eax - 0x63224], bl; jmp eax; 
0x000584fe: test byte ptr [eax - 0x632e0], cl; jmp eax; 
0x000203e7: test byte ptr [eax - 0x77000000], bl; ret 0xf229; 
0x000c5f66: test byte ptr [eax - 0x7d000000], cl; ret 0x8904; 
0x00068a47: test byte ptr [eax - 0x7d000000], cl; ret 0x8d1b; 
0x00108b03: test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x000202c0: test byte ptr [eax - 0x9ffffff], ah; ret 0xf08; 
0x00084ba1: test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x00073794: test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x000737a4: test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0006daf3: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x1abf7d], cl; call dword ptr [eax - 0x73]; 
0x00076b3b: test byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x39]; 
0x000c68a7: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f5d08: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000ec7b7: test byte ptr [eax], al; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x90]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000b1272: test byte ptr [eax], bl; idiv bh; call dword ptr [edx + 0x6a]; 
0x000239a1: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax - 0x73]; 
0x000293be: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0001c00d: test byte ptr [ebp + 0x6b000000], dl; ret 0x893c; 
0x0004b49f: test byte ptr [ebp + 0xb504], 0; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x00021553: test byte ptr [ebp + edi*8 - 1], dh; inc dword ptr [ebp - 0x227af00a]; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0009e772: test byte ptr [ebp - 0x61ae0], dh; add eax, ebp; jmp eax; 
0x0013aa56: test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000cea5b: test byte ptr [ebp - 0x7c000005], al; ret; 
0x000f0e68: test byte ptr [ebp - 0x7cfffffc], bl; in al, dx; or byte ptr [ecx - 0xc77b], cl; call dword ptr [esi + 0x50]; 
0x000efde8: test byte ptr [ebp - 0x7cfffffc], cl; in al, dx; or byte ptr [ecx - 0xb77b], cl; call dword ptr [esi + 0x50]; 
0x0011b6f0: test byte ptr [ebp - 6], bl; call dword ptr [eax - 0x18]; 
0x000835ce: test byte ptr [ebx + 0x28], 1; jne 0x835a8; sub esp, 0xc; push eax; call edx; 
0x000563b7: test byte ptr [ebx + 0x2bffffee], dh; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000fb850: test byte ptr [ebx + 0x39000000], bh; ret; 
0x0009edee: test byte ptr [ebx + 0x55], 2; pop ebx; cmovne eax, ecx; ret; 
0x00083f4e: test byte ptr [ebx + 0x56], 0x10; pop ebx; cmovne eax, ecx; ret; 
0x000eb4ae: test byte ptr [ebx + 0x56], 0x80; pop ebx; cmove eax, ecx; ret; 
0x0008441e: test byte ptr [ebx + 0x5b], 4; pop ebx; cmovne eax, ecx; ret; 
0x00164da0: test byte ptr [ebx + 0xf5c2474], -0x6b; ret 0x540b; 
0x0009c770: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0012d5a3: test byte ptr [ebx + 5], ah; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push esi; call dword ptr [eax + 0x10]; 
0x0004d144: test byte ptr [ebx - 0x13f80], cl; jmp dword ptr [ebp - 0x75]; 
0x00125dd1: test byte ptr [ebx - 0x2a4], cl; pop ebx; pop esi; jmp eax; 
0x000e88c8: test byte ptr [ebx - 0x5f320], cl; add eax, ebx; jmp eax; 
0x00068123: test byte ptr [ebx - 0x72ffffff], bh; inc ebp; add al, byte ptr [eax - 0x76fdf3b2]; aad 0x89; ret 0xb0e9; 
0x0015c803: test byte ptr [ebx - 0x75b80], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x00159ff6: test byte ptr [ebx - 0x75b80], al; sub eax, ecx; pop ebx; ret; 
0x00074528: test byte ptr [ebx - 0x76ffffff], al; ret 0xda29; 
0x00116e10: test byte ptr [ebx - 0x7b000000], bl; ror byte ptr [edi], 0x85; ret; 
0x0005dec0: test byte ptr [ebx - 0x7b000000], cl; ror byte ptr [edi], 0x84; ret; 
0x001254d2: test byte ptr [ebx - 0x7c000002], al; in al, dx; or al, 0x57; call eax; 
0x00041ff3: test byte ptr [ebx - 0x7c000005], ah; ret; 
0x000e3869: test byte ptr [ebx - 0x7cfffffd], dl; in al, dx; or byte ptr [ebp - 0x12f63], cl; call dword ptr [ebx + 0x56]; 
0x00026640: test byte ptr [ebx - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0x58fbf79], cl; call dword ptr [eax + 0x56]; 
0x00083448: test byte ptr [ebx - 0x7d000000], bh; in al, dx; or byte ptr [esi - 1], dl; jae 0x83478; call eax; 
0x0015d0da: test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0004d233: test byte ptr [ebx - 0xa343], cl; call dword ptr [ebx + 0x6a]; 
0x00082761: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00072da2: test byte ptr [ebx - 6], bh; call dword ptr [eax - 0x73]; 
0x00150c62: test byte ptr [ebx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016c111: test byte ptr [ebx], ah; add byte ptr [eax], al; call 0x190e8; add esp, 0x18; pop ebx; ret; 
0x0012c5a3: test byte ptr [ebx], al; add byte ptr [edi], ah; cli; call dword ptr [eax + 0x52]; 
0x000debf0: test byte ptr [ebx], al; and byte ptr [edx], al; cli; call dword ptr [eax - 0x73]; 
0x0015e930: test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x76f3dbbc], cl; ret; 
0x001293a6: test byte ptr [ebx], dh; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b56d0: test byte ptr [ebx], dl; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; lds ebp, ptr [edx + edi*8]; call dword ptr [eax + 0x57]; 
0x0002e708: test byte ptr [ebx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; das; cli; call dword ptr [eax - 0x18]; 
0x0001fe8b: test byte ptr [ecx + 0x29000003], bh; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0008445b: test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x14b000]; cmovne edx, eax; mov eax, edx; ret; 
0x00083e2b: test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x14d300]; cmovne edx, eax; mov eax, edx; ret; 
0x0008533b: test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x152c90]; cmovne edx, eax; mov eax, edx; ret; 
0x000852fb: test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x154500]; cmovne edx, eax; mov eax, edx; ret; 
0x000844db: test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x157070]; cmovne edx, eax; mov eax, edx; ret; 
0x00083f1b: test byte ptr [ecx + 0x55], 2; lea eax, [eax - 0x1588c0]; cmovne edx, eax; mov eax, edx; ret; 
0x00085172: test byte ptr [ecx + 0xb0], 4; lea eax, [eax - 0x9de90]; cmove edx, eax; mov eax, edx; ret; 
0x0010cee2: test byte ptr [ecx + 0xb0], 4; lea eax, [eax - 0x9dea0]; cmove edx, eax; mov eax, edx; ret; 
0x00085252: test byte ptr [ecx + 0xb0], 4; lea eax, [eax - 0x9e490]; cmove edx, eax; mov eax, edx; ret; 
0x00020aea: test byte ptr [ecx + eax], bl; add byte ptr [ebx - 0x72d3db84], cl; xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x0010865f: test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x000bb95f: test byte ptr [ecx + esi*8 - 0x47c0001], bl; sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x000e7ca6: test byte ptr [ecx - 0x5f518], dh; add eax, ecx; jmp eax; 
0x0006390f: test byte ptr [ecx - 0x62a00], al; lea eax, [ecx + eax - 0x180aae]; jmp eax; 
0x000202b4: test byte ptr [ecx - 0x74ffffff], bh; je 0x202e0; cmp byte ptr [ebp - 0x5f7bf00a], al; add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x00146201: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000bd94b: test byte ptr [ecx - 0xbf6b], cl; dec dword ptr [ecx - 0xbb7b]; jmp dword ptr [ecx]; 
0x000f0f75: test byte ptr [ecx - 0xcb6b], cl; call dword ptr [edi + 0x52]; 
0x00033c34: test byte ptr [ecx - 6], dh; call dword ptr [eax - 0x73]; 
0x00088555: test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00160598: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00063916: test byte ptr [ecx], al; push edx; cmc; out 0xff, eax; jmp eax; 
0x000a5382: test byte ptr [ecx], bh; or al, 0; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x000a26aa: test byte ptr [ecx], dh; or al, 0; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0xeeb; 
0x001691ca: test byte ptr [ecx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x49f0fe0e], al; ret 0x4489; 
0x0008fa0a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000509e1: test byte ptr [edi + edi*8 - 1], bl; inc dword ptr [ebx - 0x7872f314]; div byte ptr [ebx]; cli; call dword ptr [eax - 0x18]; 
0x0001e21f: test byte ptr [edi + edi*8 - 1], ch; dec dword ptr [ebx - 0x72c3dba4]; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x00042f5c: test byte ptr [edi + edi*8 - 1], ch; dec dword ptr [ebx - 0x76fbdbb4]; ret 0xc889; 
0x0013f43c: test byte ptr [edi - 0x75000000], bl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x0013c6ec: test byte ptr [edi - 0x76fffffe], bl; ret; 
0x0013d25d: test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00032468: test byte ptr [edi - 0x77000000], ch; ret; 
0x0011fe3a: test byte ptr [edi - 0x7c000002], al; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000c83f4: test byte ptr [edi - 0x7c000003], bl; in al, dx; add al, 0x83; ret 0x5601; 
0x00135d0e: test byte ptr [edi - 0x7cfffffe], bl; ret; 
0x0015cdec: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00082af4: test byte ptr [edi - 0x7d000000], dl; in al, dx; or byte ptr [esi - 1], dl; je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x000dd7c1: test byte ptr [edi], -0x4a; pop eax; sbb byte ptr [ecx - 0x76d7dbbc], cl; ret 0x5c88; 
0x00160233: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000528e5: test byte ptr [edi], -0x61; ret 0xd629; 
0x0003ae95: test byte ptr [edi], -0x6b; ret 0x5409; 
0x00062d80: test byte ptr [edi], -0x78; cdq; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x0005dde3: test byte ptr [edi], -0x78; xchg esi, eax; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x00048cbf: test byte ptr [edi], -0x7b; movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x0005e831: test byte ptr [edi], -0x7b; ret 0x16; 
0x000fc715: test byte ptr [edi], -0x7b; xor eax, 0x89000002; ret 0xe083; 
0x000202be: test byte ptr [edi], -0x7c; mov al, byte ptr [0xf6000001]; ret 0xf08; 
0x000ed4c7: test byte ptr [edi], -0x7c; ret 0; 
0x00096376: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00081af7: test byte ptr [edi], 0x44; ret 0x8389; 
0x0003623a: test byte ptr [edi], 0x44; ret; 
0x000e1da5: test byte ptr [edi], 0x49; into; call dword ptr gs:[0x10]; 
0x0004c5a8: test byte ptr [edi], 0x49; ret; 
0x0012cfcc: test byte ptr [edi], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0008fa14: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0002678f: test byte ptr [edi], al; pushal; xchg esp, eax; clc; call dword ptr [eax - 0x18]; 
0x00054025: test byte ptr [edi], bl; cmp al, 0; add byte ptr [ebx - 0x5df63], cl; call ecx; 
0x000fe1d8: test byte ptr [edi], ch; or al, 0; add byte ptr [ebp - 0x5ab157d], cl; call dword ptr [edi + 0x57]; 
0x000fe10c: test byte ptr [edi], ch; or al, 0; add byte ptr [ebp - 0x5ac6e7d], cl; call dword ptr [ecx + 0x51]; 
0x0009bf71: test byte ptr [edi], cl; or al, byte ptr [eax]; add ecx, 0xe641f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00047f8d: test byte ptr [edx + edi*8 - 1], cl; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0005e96e: test byte ptr [edx - 0x62e00], al; lea eax, [edx + eax - 0x185a90]; jmp eax; 
0x000e9faa: test byte ptr [edx - 0x74000008], cl; jl 0xe9fd6; or byte ptr [ebp - 0x56afb79], cl; call dword ptr [eax - 0x73]; 
0x0005e809: test byte ptr [edx - 0x75000000], bh; test dword ptr [edi + esi*8 - 0x137c0001], ecx; or al, 0x8d; adc byte ptr [eax + 0x76], 0xfa; call dword ptr [eax - 0x18]; 
0x00063809: test byte ptr [edx - 0x75000000], dh; test dword ptr [edi + esi*8 - 1], ebp; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x000d4abf: test byte ptr [edx - 0x76ffffff], dh; mov dword ptr [ebp - 0x74f08140], 0x148d0845; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x0009dcdd: test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x00160199: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x0008eb56: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x000c480a: test byte ptr [edx], ah; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0005e975: test byte ptr [edx], al; jo 0x5e91e; out 0xff, eax; jmp eax; 
0x000c5d25: test byte ptr [edx], bl; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001643b8: test byte ptr [edx], ch; adc al, byte ptr [eax]; add byte ptr [ecx + 0x24548be9], cl; and al, 0x29; ret 0x741b; 
0x00094a93: test byte ptr [edx], cl; add byte ptr [ecx + 0xed64ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a6e: test byte ptr [edx], cl; add byte ptr [ecx + 0xed66fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a4e: test byte ptr [edx], cl; add byte ptr [ecx + 0xed68fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a31: test byte ptr [edx], cl; add byte ptr [ecx + 0xed6acc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00094a04: test byte ptr [edx], cl; add byte ptr [ecx + 0xed6d9c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0012f2ec: test byte ptr [edx], dh; add byte ptr [eax], al; cmovne eax, edx; add esp, 8; pop ebx; ret; 
0x000332d0: test byte ptr [edx], dl; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000333fd: test byte ptr [edx], dl; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000336b6: test byte ptr [edx], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000dce8f: test byte ptr [esi + 0xf000001], ah; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00059648: test byte ptr [esi - 0x3b7cfff6], bl; adc byte ptr [ebx - 0x7af09908], al; ret; 
0x000c7695: test byte ptr [esi - 0x6096c], bl; add eax, esi; jmp eax; 
0x0001f8c0: test byte ptr [esi - 0x72ffffff], al; pop edi; add al, 0x83; ret 0x3901; 
0x00166e9d: test byte ptr [esi - 0x74fffffe], bh; je 0x166ec9; jo 0x166e32; jl 0x166ecd; je 0x166e34; ret 0xb60f; 
0x000760e6: test byte ptr [esi - 0x75000000], bh; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000e7775: test byte ptr [esi - 0x76fffffc], ch; ret 0x44c7; 
0x00124e55: test byte ptr [esi - 0x77000000], bl; ret; 
0x0013a922: test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x00024a71: test byte ptr [esi - 0x7d000000], bh; ret; 
0x0008212d: test byte ptr [esi - 0x7d000000], ch; in al, dx; or bh, bh; je 0x8215c; sbb al, 0x52; call eax; 
0x0002e54d: test byte ptr [esi - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x5ce047b], cl; call dword ptr [eax + 0x53]; 
0x000bf05d: test byte ptr [esi - 0x7d000000], dh; in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0013affb: test byte ptr [esi - 0xa], dh; in eax, dx; dec dword ptr [ebp - 0x72dbdb8c]; je 0x13b02d; add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x0006e2f0: test byte ptr [esi], 2; jne 0x6e358; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000264a9: test byte ptr [esi], bl; aas; xchg esp, eax; clc; call dword ptr [ebp + 3]; 
0x0001b061: test byte ptr [esi], bl; adc al, byte ptr [eax]; add eax, 0x1c8f9b; lea eax, [eax - 0x5943c]; ret; 
0x00055330: test byte ptr [esi], bl; sbb al, 0; add byte ptr [ebx - 0x5f763], cl; dec dword ptr [ebx - 0x5df73]; inc dword ptr [ecx]; ret; 
0x000f5d06: test byte ptr [esp + eax*4], ah; add byte ptr [eax], al; add byte ptr [ebp + 0x540288], cl; add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000eab34: test byte ptr [esp + eax*8], ah; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000b3b16: test byte ptr [esp + ebx*8], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x00058519: test byte ptr [esp + ecx - 0x6a750000], ch; call 0x8405851f; ret 0x8904; 
0x000eab2d: test byte ptr [esp + ecx*2], ah; add al, byte ptr [eax]; add byte ptr [ecx + 0xc42484], cl; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00045def: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x00120d9a: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3d8e: test byte ptr [esp], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x54; call eax; 
0x00156234: test ch, 0x40; jne 0x156200; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00070a0e: test ch, al; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000e3c84: test ch, al; or byte ptr [eax], al; add byte ptr [ebx - 0x17b73], cl; call dword ptr [ebx + 0x29]; 
0x000242d0: test ch, bh; add al, byte ptr [eax]; add byte ptr [ebx - 0x72b7db84], cl; xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x00162a38: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x00051577: test ch, bh; inc dword ptr [ebx - 0x72aff33c]; test ebx, ecx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x0008f9be: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0015618b: test cl, 0x40; jne 0x156200; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0013efd2: test cl, al; add byte ptr [eax], al; add byte ptr [ebx - 0x1077a], cl; jmp dword ptr [ebp - 0x39]; 
0x00102093: test cl, bl; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x8389; 
0x0009c7f2: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00037b16: test cl, cl; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008aac2: test cl, cl; jne 0x8aab8; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0011da35: test cl, dh; inc dword ptr [ebx + 0x1eba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f1ef8], al; ret 0x4589; 
0x0011d9c5: test cl, dh; inc dword ptr [ebx + 0x5ba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f05f8], al; ret 0x4589; 
0x0011da0d: test cl, dh; inc dword ptr [ebx + 0xfba10c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x4f0f0ff8], al; ret 0x4589; 
0x001609f5: test dh, 0x20; jne 0x160a40; test dh, 0x40; jne 0x160a44; add eax, 0xf; ret; 
0x001609fa: test dh, 0x40; jne 0x160a44; add eax, 0xf; ret; 
0x00160c47: test dh, 0x40; jne 0x160e20; lea eax, [edi + 0xf]; pop edi; ret; 
0x001627e2: test dh, 0x40; jne 0x162b71; add eax, 0xf; pop edi; ret; 
0x001632e9: test dh, 0xf; jne 0x163350; lea eax, [ecx + 0xc]; ret; 
0x001609dc: test dh, 2; jne 0x160a30; test dh, 4; jne 0x160a34; add eax, 0xb; ret; 
0x001609e1: test dh, 4; jne 0x160a34; add eax, 0xb; ret; 
0x00160c8d: test dh, 4; jne 0x160e20; lea eax, [edi + 0xb]; pop edi; ret; 
0x001627b9: test dh, 4; jne 0x162b5d; add eax, 0xb; pop edi; ret; 
0x00162a7e: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0005ebcf: test dh, bl; adc al, byte ptr [eax]; add byte ptr [ebx - 0x4a00f714], al; xchg esp, eax; idiv edi; call dword ptr [edx - 0x77]; 
0x00059dcf: test dh, bl; adc byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000b56ed: test dh, cl; add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; inc ebp; ret 0xfffb; 
0x00163205: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00076c15: test dh, dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; adc al, 0x41; cli; call dword ptr [eax - 0x75]; 
0x001609b5: test dl, 0x20; jne 0x160a20; test dl, 0x40; jne 0x160a24; add eax, 7; ret; 
0x001609ba: test dl, 0x40; jne 0x160a24; add eax, 7; ret; 
0x00160ba4: test dl, 0x40; jne 0x160e20; lea eax, [edi + 7]; pop edi; ret; 
0x00162792: test dl, 0x40; jne 0x162b49; add eax, 7; pop edi; ret; 
0x00163212: test dl, 0xf; jne 0x163350; lea eax, [ecx + 4]; ret; 
0x00160996: test dl, 2; jne 0x160a10; test dl, 4; jne 0x160a14; add eax, 3; ret; 
0x0016099b: test dl, 4; jne 0x160a14; add eax, 3; ret; 
0x00160bea: test dl, 4; jne 0x160e20; lea eax, [edi + 3]; pop edi; ret; 
0x0016276c: test dl, 4; jne 0x162b35; add eax, 3; pop edi; ret; 
0x000f1971: test dl, ah; add byte ptr [eax], al; add byte ptr [ebx - 0x17cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x00021c12: test dl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x000da0c0: test dl, dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x70f0fa08], al; ret 0; 
0x000b2755: test dl, dl; je 0xb2770; mov cl, dl; and cl, 0xf; je 0xb2780; ret; 
0x0002e664: test dl, dl; jne 0x2e645; ret; 
0x00087912: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0001dd74: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0008f037: test dword ptr [0x5bfffffe], edx; ret; 
0x0008ef0f: test dword ptr [0x5bffffff], edi; ret; 
0x0009d90d: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x00094b4e: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x0013cc6a: test dword ptr [0x83ffedda], esp; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000fc717: test dword ptr [0x89000002], esi; ret 0xe083; 
0x00055822: test dword ptr [0x89fffffe], eax; test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00093796: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f2c6: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0008f2a6: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000294b0: test dword ptr [eax + 0x1a], ebx; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000701cf: test dword ptr [eax + 0x29ffffe2], esp; ret 0xf989; 
0x0005741b: test dword ptr [eax + 0x2bfffffb], ebp; test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x00054c72: test dword ptr [eax + 0x2bfffffb], edi; xchg ebp, eax; mov eax, 0x89fffffb; lea edx, [edx + edi*8 - 1]; call dword ptr [eax - 0x77]; 
0x00057421: test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x0007d7aa: test dword ptr [eax + 0x56fffffe], edx; call dword ptr [eax]; 
0x00139d48: test dword ptr [eax + 0x59], eax; cmc; call dword ptr [eax - 0x73]; 
0x0011dbfd: test dword ptr [eax + 0x5e], ebp; cli; call dword ptr [eax - 0x18]; 
0x0008ecab: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x0008ebb3: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x0009cddb: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x00132142: test dword ptr [eax + 0x6afffa61], esi; add eax, 0x28858d50; jo 0x132149; call dword ptr [eax - 0x18]; 
0x0009610b: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e4d53: test dword ptr [eax + 0xafffffe], esi; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x000e4bfc: test dword ptr [eax + 0xbfffffe], esi; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x7d]; 
0x000e4e75: test dword ptr [eax + 0xbfffffe], esi; add byte ptr [eax], al; add byte ptr [ebx - 0x16b7b], cl; dec dword ptr [ebx - 0x10f80]; jmp dword ptr [ebp - 0x7d]; 
0x0015dbd1: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00094b2b: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015d4d1: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00160ccf: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x160da0; lea eax, [edi + 7]; pop edi; ret; 
0x000b24d7: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000eda5f: test dword ptr [eax + eax - 0x3b7d0000], ebp; and al, 0x5b; pop esi; ret; 
0x00094baf: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x00094bf7: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005c13d: test dword ptr [eax - 0x14000006], ebp; or ecx, dword ptr [ebx - 0x53f7b]; jmp dword ptr [ebp - 0x75]; 
0x00057e72: test dword ptr [eax - 0x17000005], ebp; lcall 0xffe3, 0x5ce9ffff; call dword ptr [ecx + 0x51]; 
0x0003aaa0: test dword ptr [eax - 0x53], esp; cli; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x0016235b: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x162410; lea eax, [edx + 7]; ret; 
0x00162363: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x00161193: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x000e365b: test dword ptr [eax - 0x74000002], edx; inc ebp; adc byte ptr [ecx - 0x1537b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000563df: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00053e0f: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret; 
0x000e723d: test dword ptr [eax - 0x76000005], eax; ret 0xb58b; 
0x000e73bb: test dword ptr [eax - 0x76000005], esp; ret 0xb18b; 
0x001640e3: test dword ptr [eax - 0x76fffff6], ebx; ret 0x7c8d; 
0x00161b6b: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x000528df: test dword ptr [eax - 0x7a000005], ebp; test byte ptr [edi], -0x61; ret 0xd629; 
0x000cbf75: test dword ptr [eax - 0x7a000005], esp; ror byte ptr [edi], 0x84; ret; 
0x000487dd: test dword ptr [eax - 0x7a000037], edi; ror byte ptr [edi], 0x8f; shr ebx, 0xff; dec dword ptr [ebp - 0x58c077d]; call dword ptr [eax - 0x73]; 
0x000e72f1: test dword ptr [eax - 0x7c000005], ebx; in al, dx; or al, 0x8d; xor dl, 0x48; cli; call dword ptr [eax - 0x18]; 
0x000563bd: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000c9641: test dword ptr [eax - 0x7c000005], edx; in al, dx; or al, 0x8d; xor dl, 0x48; cli; call dword ptr [eax - 0x18]; 
0x000c6c03: test dword ptr [eax - 0x7c000016], edi; in al, dx; or byte ptr [ebp - 0x5b58950], cl; dec dword ptr [ebp - 0x5b7d180]; call dword ptr [esi + 0x50]; 
0x000c6e39: test dword ptr [eax - 0x7c000016], edi; in al, dx; or byte ptr [esi - 0x73], dl; cmp byte ptr [ebx], 0x48; cli; call dword ptr [eax - 0x18]; 
0x000af26e: test dword ptr [eax - 0x7c000037], edi; in al, dx; or byte ptr [ebp - 0x39f48], cl; call dword ptr [edi + 0x53]; 
0x000d85bd: test dword ptr [eax - 0x7cfffffb], ecx; ret; 
0x00041e43: test dword ptr [eax - 0x7cfffffc], ecx; ret; 
0x00110343: test dword ptr [eax - 0x7cffffff], edi; clc; add dword ptr [ebp - 0x6bf0fdb8], ecx; ret 0x7c8b; 
0x00161f43: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x0015cde3: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0012a63b: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00064df4: test dword ptr [eax], 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0008ec4b: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000ab28e: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000ab8f5: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000ab590: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000ede97: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00026faf: test dword ptr [eax], eax; add eax, 0x748dd375; add dh, dh; ret 0x7503; 
0x00076fab: test dword ptr [eax], eax; jl 0x76fa9; call dword ptr [eax - 0x73]; 
0x00076fca: test dword ptr [eax], eax; jl 0x76fc8; call dword ptr [eax - 0x73]; 
0x00162620: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00063098: test dword ptr [eax], ebp; idiv edi; jmp dword ptr [ebp - 0x75]; 
0x00113fa7: test dword ptr [eax], ebp; jo 0x113fa5; call dword ptr [eax - 0x18]; 
0x0011406d: test dword ptr [eax], ebp; jo 0x11406b; call dword ptr [eax - 0x18]; 
0x0011409d: test dword ptr [eax], ebp; jo 0x11409b; call dword ptr [eax - 0x18]; 
0x001249b6: test dword ptr [eax], ebp; jo 0x1249b4; call dword ptr [eax - 0x18]; 
0x00124aae: test dword ptr [eax], ebp; jo 0x124aac; call dword ptr [eax - 0x18]; 
0x0013214b: test dword ptr [eax], ebp; jo 0x132149; call dword ptr [eax - 0x18]; 
0x000513df: test dword ptr [eax], ebp; jo 0x513dd; call dword ptr [eax - 0x18]; 
0x0005143d: test dword ptr [eax], ebp; jo 0x5143b; call dword ptr [eax - 0x18]; 
0x0001f903: test dword ptr [eax], ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x00096153: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c96da: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000cbbd2: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x00063ba8: test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x00064aab: test dword ptr [eax], edi; idiv edi; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00054ff3: test dword ptr [eax], edi; sbb al, 0; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0013db6d: test dword ptr [eax], edi; xor edi, edx; call dword ptr [eax - 0x18]; 
0x00040c80: test dword ptr [eax], edi; xor edi, edx; call dword ptr [ebx + 0x6a]; 
0x000b6d1e: test dword ptr [eax], edx; and dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test eax, edx; in al, dx; call dword ptr [eax - 0x73]; 
0x000ad9a7: test dword ptr [eax], esi; nop; cli; call dword ptr [eax - 0x73]; 
0x0015ef9e: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0015dc7c: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0015da9c: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0015d56c: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0009d981: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000961b6: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x0004fa1a: test dword ptr [ebp + 0xf000000], edi; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0015d8c6: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00094edf: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00094eaf: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x000ad9b7: test dword ptr [ebp + ecx*4 - 6], ebx; call dword ptr [eax - 0x18]; 
0x00093736: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000eb0d7: test dword ptr [ebp - 0x357c0003], esi; dec dword ptr [ecx - 0x472c763f]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00160b86: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00161ce6: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00161f16: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001611e6: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x000c1703: test dword ptr [ebp - 0x76ffffff], eax; ret 0xa165; 
0x00161c96: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x000f761e: test dword ptr [ebp - 0x7d000000], ebx; in al, dx; or al, 0x89; ret; 
0x00124851: test dword ptr [ebp - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x00161f1e: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00161fa6: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x00132e57: test dword ptr [ebp - 0xd], esi; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00132158: test dword ptr [ebp - 6], ebp; call dword ptr [eax - 0x73]; 
0x0016116e: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00161cee: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0016b342: test dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x000963c8: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000b2430: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00160ba8: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0015d698: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000963f8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094b10: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008eb2f: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c6cec: test dword ptr [ebx + ebp*8 - 1], eax; call dword ptr [eax - 1]; 
0x000cbb39: test dword ptr [ebx + edi*8 - 0x137c0001], ecx; or al, 0x8d; xor dl, 0x48; cli; call dword ptr [eax - 0x18]; 
0x00101e23: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00101de1: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x001164ca: test dword ptr [ebx + edi*8 - 1], esi; call dword ptr [esi + 0x52]; 
0x000c9e50: test dword ptr [ebx + edi*8 - 1], esi; dec dword ptr [ecx - 0x4977b]; inc dword ptr [ecx]; ret; 
0x0010158b: test dword ptr [ebx - 0x44efdbb4], 0xd; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000bf0c8: test dword ptr [ebx - 0x48000000], ecx; or dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000f6e18: test dword ptr [ebx - 0x77000000], esp; sar dword ptr [eax + 0x17a], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f70f8: test dword ptr [ebx - 0x77000000], esp; sar dword ptr [eax + 0x17b], cl; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x001627bd: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x0013a498: test dword ptr [ebx - 0x7d000000], ebx; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00131896: test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00093008: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000eadc3: test dword ptr [ebx - 0x9fffffd], esi; ret 0xf80; 
0x0016275e: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x00167d17: test dword ptr [ebx], 0x751c247c; ret 0x7c8b; 
0x00150b5b: test dword ptr [ebx], 0x8b1c0300; jmp ebx; 
0x0015da9d: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00096268: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0002e569: test dword ptr [ebx], eax; xor bh, dl; call dword ptr [eax + 0x53]; 
0x0008f180: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008f1a0: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00096130: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015d7a0: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0008f0ab: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x0008efb3: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000b24f2: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00094bd2: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000ed71a: test dword ptr [ecx + 1], eax; add byte ptr [eax], al; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0015ef12: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00161c3a: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x00094d02: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000961f2: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00076c1e: test dword ptr [ecx + eax*2], edx; cli; call dword ptr [eax - 0x75]; 
0x000b2477: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000ed6af: test dword ptr [ecx + eax], ebp; add byte ptr [eax + 0xdd], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x000d4e27: test dword ptr [ecx + eax], ebx; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x000b2447: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b0946: test dword ptr [ecx + ecx*8 - 1], edi; inc dword ptr [ecx]; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001392f2: test dword ptr [ecx - 0x75000000], ebx; inc esi; add al, 0x85; sal byte ptr [edx + edi*4 - 0x75], 0x55; add byte ptr [ecx], al; ret 0xd139; 
0x000f6ca2: test dword ptr [ecx - 0x75000000], ecx; jl 0xf6cce; add al, 0xb8; jp 0xf6caf; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f6f82: test dword ptr [ecx - 0x75000000], ecx; jl 0xf6fae; add al, 0xb8; jnp 0xf6f8f; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015b8d0: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x000eae51: test dword ptr [ecx - 0x7cffffff], ebp; ret; 
0x000f63d1: test dword ptr [ecx - 0x7d000000], ebp; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0016287a: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0010ec6f: test dword ptr [ecx - 6], ebx; call dword ptr [eax - 0x18]; 
0x0016761f: test dword ptr [ecx], 0x247c0bef; and byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00124903: test dword ptr [ecx], eax; add byte ptr [ecx + 0xbf6fac5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x0009e8ee: test dword ptr [ecx], eax; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000ad9d6: test dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x00057453: test dword ptr [ecx], ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0006930a: test dword ptr [ecx], ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x00096352: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0013215f: test dword ptr [ecx], ebx; pop eax; cli; call dword ptr [eax + 0x6a]; 
0x00055bfa: test dword ptr [ecx], edx; ret 0xffff; 
0x0009623a: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c2739: test dword ptr [edi + 0x47], eax; cli; call dword ptr [ecx + 0x50]; 
0x0008ef95: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x0011aa85: test dword ptr [edi + 0x5d], eax; cli; call dword ptr [eax - 0x18]; 
0x000b24bc: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000965dc: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000965ac: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000962cc: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000961d4: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000e477b: test dword ptr [edi + 0xffffffe], ecx; inc ebp; ret 0x8588; 
0x0009660c: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000962fc: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094cdf: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0015d715: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000be47d: test dword ptr [edi + edi*8 - 1], eax; call dword ptr [edi - 0x77]; 
0x00102965: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0xe18df80]; call dword ptr [eax + 0x6a]; 
0x001028a7: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx + 0x758b0845]; adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011c299: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0x8363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000bd953: test dword ptr [edi + edi*8 - 1], eax; jmp dword ptr [ecx]; 
0x000f019f: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [eax - 0x75]; 
0x001362e5: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [edx + 0x6a]; 
0x0003ac35: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebx - 0x1077b]; jmp dword ptr [ebp - 0x39]; 
0x001195bc: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x000bd12d: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ecx - 0x8743]; dec dword ptr [ebp - 0x5557378]; jmp dword ptr [esi - 0x70]; 
0x000bc915: test dword ptr [edi + edi*8 - 1], ebp; inc dword ptr [ebx]; test byte ptr [eax - 0x60f84], bl; jmp eax; 
0x000c74d9: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x75]; 
0x001192f0: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x001366e1: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax]; 
0x0004cfd1: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [ecx - 1]; 
0x0011c04e: test dword ptr [edi + edi*8 - 1], ebx; dec dword ptr [edi]; inc ebp; ret; 
0x000efd81: test dword ptr [edi + edi*8 - 1], ebx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8589; 
0x00041113: test dword ptr [edi + edi*8 - 1], ebx; jmp dword ptr [ebp - 0x5f]; 
0x000fa45a: test dword ptr [edi + edi*8 - 1], ebx; jmp dword ptr [ebp - 0x77]; 
0x0004d073: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x50]; 
0x001343c6: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [ebx + 0x50]; 
0x00135469: test dword ptr [edi + edi*8 - 1], edi; inc dword ptr [ecx]; ret 0x789; 
0x0011c79c: test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [esi - 0x7f]; 
0x00133dc0: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx + 0x4d891445]; mov word ptr [ecx + 0x458b8845], cs; sbb byte ptr [ecx - 0x877b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004c59e: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x000f0e01: test dword ptr [edi + edi*8 - 1], edx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8589; 
0x000fa2cd: test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebp - 0x5f]; 
0x000fa33b: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax - 0x18]; 
0x000c74e2: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebp - 0x5b79a79]; call dword ptr [eax - 0x18]; 
0x00133f47: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x39]; 
0x0011c50a: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x000270ab: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x0012c2fb: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x000f122f: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax - 0x75]; 
0x00136987: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax - 1]; 
0x0005e80f: test dword ptr [edi + esi*8 - 0x137c0001], ecx; or al, 0x8d; adc byte ptr [eax + 0x76], 0xfa; call dword ptr [eax - 0x18]; 
0x0005e336: test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x000632ea: test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx - 0x7d]; 
0x000632ea: test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx - 0x7d]; ret; 
0x00065006: test dword ptr [edi + esi*8 - 1], ebp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00065757: test dword ptr [edi + esi*8 - 1], ebp; inc dword ptr [ebx - 0x7f72f314]; je 0x657d9; cli; call dword ptr [eax - 0x18]; 
0x0006380f: test dword ptr [edi + esi*8 - 1], ebp; inc dword ptr [ebx - 0x7f72f314]; push eax; jbe 0x63816; call dword ptr [eax - 0x18]; 
0x0005f7c0: test dword ptr [edi + esi*8 - 1], esi; jmp dword ptr [edx]; 
0x00060282: test dword ptr [edi + esi*8 - 1], esp; inc dword ptr [ebx - 0x7276f714]; xchg esp, eax; idiv edi; call dword ptr [eax + 0x56]; 
0x000e46c5: test dword ptr [edi - 0x76000002], ecx; ret 0x840f; 
0x000b988f: test dword ptr [edi - 0x76000003], edx; ret 0xe283; 
0x001321da: test dword ptr [edi - 0x7d000000], ebx; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00118d6a: test dword ptr [edi - 0x7d000000], ebx; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00161f7c: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x000930fc: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001628a4: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x001601c4: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b082b: test dword ptr [edi], 0x7b186; add byte ptr [ebx - 0x362763], cl; inc dword ptr [ebp - 0x2a71f025]; or dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00048ae5: test dword ptr [edi], 0x87b86; add byte ptr [ebx - 0x362f7b], cl; inc dword ptr [ebp - 0xf71f040]; or al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x0014a041: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0009663c: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00075583: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000b245c: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000c27fd: test dword ptr [edi], edi; inc edi; cli; call dword ptr [ecx + 0x50]; 
0x0009632c: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092f74: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00157c91: test dword ptr [edx + 0x57], ebp; hlt; call dword ptr [ebx - 0x18]; 
0x0009da8c: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0008e8c1: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x00094de9: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x00094db9: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x00094cb9: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x00094ac9: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00161e59: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x162080; mov eax, ecx; ret; 
0x0008ebf9: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00094f09: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008ebd7: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x0008ec27: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0005c0f5: test dword ptr [edx + edi*8 - 0x62760001], esi; call 0x8405c0fb; ret; 
0x00052347: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x00053653: test dword ptr [edx + edi*8 - 1], ebx; jmp dword ptr [ebp - 0x77]; 
0x00056c53: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [eax - 1]; 
0x00057002: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [ebx + 0x53]; 
0x0005764f: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [esi + 0x56]; 
0x00055b6c: test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x000577e9: test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x5af43]; jmp dword ptr [ebp - 0x75]; 
0x00055828: test dword ptr [edx + edi*8 - 1], edx; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00053a1d: test dword ptr [edx + edi*8 - 1], edx; inc dword ptr [ebx - 0x7af00008]; imul esi, edx, -1; dec dword ptr [ebx - 0x5a77b]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x00056865: test dword ptr [edx + edi*8 - 1], edx; inc dword ptr [ebx - 0x7af00008]; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00056073: test dword ptr [edx + edi*8 - 1], edx; inc dword ptr [ebx - 0x7bf00008]; ret; 
0x00054476: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10768]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x000526c0: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00051dd1: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x77]; 
0x00057926: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ecx - 0x5af43]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0001ed83: test dword ptr [edx - 0x75000000], edx; jl 0x1edaf; sub byte ptr [ebp - 0x5973f79], cl; call dword ptr [eax - 0x73]; 
0x000d6e31: test dword ptr [edx - 0x7c000006], esi; ret; 
0x0016278d: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x0004bdc1: test dword ptr [edx - 0x9ffffff], ebx; ret 0xf50; 
0x00094f69: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x0008e831: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00094992: test dword ptr [edx], ecx; add byte ptr [ecx + 0xed6cbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949ed: test dword ptr [edx], ecx; add byte ptr [ecx + 0xed6f0c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000949d2: test dword ptr [edx], ecx; add byte ptr [ecx + 0xed70bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000949b0: test dword ptr [edx], ecx; add byte ptr [ecx + 0xed72dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0015a1a1: test dword ptr [edx], edi; xor esi, esp; call dword ptr [ebx - 0x18]; 
0x00094c59: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094f39: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x0008eb95: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x00096070: test dword ptr [esi + 0xa], ebp; add byte ptr [ecx + 0xec1ccc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0008e7ed: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00094c15: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094aed: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00096215: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000964ef: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c86c3: test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [edi - 1]; 
0x000c86ef: test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [esi - 1]; 
0x000e4405: test dword ptr [esi + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x7d]; 
0x00080201: test dword ptr [esi + edi*8 - 1], ebp; jmp dword ptr [ebp - 0x80]; 
0x00027d70: test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [eax - 1]; 
0x000c82f8: test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax + 0x56]; 
0x000c86e8: test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax - 0x75]; 
0x00027f0e: test dword ptr [esi + edi*8 - 1], edx; call dword ptr [ebx - 0x75]; 
0x0007e0c3: test dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x00160b75: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001611bd: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x001627e6: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x00162796: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x0013628d: test dword ptr [esi - 0x7d000000], edi; in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00093406: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x00092efd: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00162784: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x001628ad: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x0016320d: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x0011dddf: test dword ptr [esi - 6], ebx; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x00035eb7: test dword ptr [esi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00139cff: test dword ptr [esi], ebx; cli; call dword ptr [eax + 0x6a]; 
0x000514f2: test dword ptr [esi], ebx; dec esp; cli; call dword ptr [eax + 0x56]; 
0x000c19b4: test dword ptr [esi], ecx; inc edi; cli; call dword ptr [eax + 0x53]; 
0x00160bdd: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0008eb0d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00055bc8: test dword ptr [esi], edi; and al, byte ptr [eax]; add byte ptr [ebx + 0x3fcbb], al; add byte ptr [ecx + 0xf], ch; test dword ptr [esi], esi; ret 0xffff; 
0x00094c35: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00055bd5: test dword ptr [esi], esi; ret 0xffff; 
0x00094991: test dword ptr fs:[edx], ecx; add byte ptr [ecx + 0xed6cbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ea959: test dx, 0xff00; jne 0xea969; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00089235: test eax, 0x4bb; add byte ptr [ecx], ch; ret; 
0x001251e7: test eax, 0x560cec83; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00107a38: test eax, 0x81000354; ret; 
0x000ea538: test eax, 0x81000529; ret; 
0x00078138: test eax, 0x81000c4d; ret; 
0x00072238: test eax, 0x81000cac; ret; 
0x00071538: test eax, 0x81000cb9; ret; 
0x0014c838: test eax, 0x81ffff06; ret; 
0x0013e538: test eax, 0x81ffffe9; ret; 
0x000f63d2: test eax, 0x83000000; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000eae52: test eax, 0x83000001; ret; 
0x0015b8d1: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0006afe8: test eax, 0xb8fffffe; lock add byte ptr [eax], al; add byte ptr [ebp + 0x19289f], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0015257e: test eax, 0xc381fffe; mov edi, 0x30003de; sbb al, 0x8b; jmp ebx; 
0x001524e5: test eax, 0xc381fffe; pop eax; fild word ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010ddfe: test eax, 0xc483fff6; adc byte ptr [ecx], bh; ret; 
0x00079679: test eax, 0xec830016; adc al, 0x6a; add eax, ebp; lcall 0x18c4, 0x83fffff8; pop ebx; ret; 
0x000c2bee: test eax, 0xf0b8; add byte ptr [ebp + 0x21d09b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4aee: test eax, 0xf0b8; add byte ptr [ebp + 0x22889b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104e7e: test eax, 0xf0b8; add byte ptr [ebp + 0x288c9b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010689e: test eax, 0xf0b8; add byte ptr [ebp + 0x29109b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011793e: test eax, 0xf0b8; add byte ptr [ebp + 0x2c549b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001201d6: test eax, 0xf0b8; add byte ptr [ebp + 0x31809b], cl; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ecb71: test eax, 0xfffffeff; jne 0xecb98; test ah, 1; jne 0xecba8; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x000fdad8: test eax, eax; cmove eax, edx; ret; 
0x000f6636: test eax, eax; cmovns eax, edx; add esp, 8; pop ebx; ret; 
0x000342b7: test eax, eax; cmovs eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0010b590: test eax, eax; je 0x10b5b8; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0010c67b: test eax, eax; je 0x10c688; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0010dbcf: test eax, eax; je 0x10dbe0; add esp, 8; pop ebx; ret; 
0x0011691b: test eax, eax; je 0x116928; sub esp, 0xc; push esi; call eax; 
0x00116c03: test eax, eax; je 0x116c10; sub esp, 0xc; push esi; call eax; 
0x00116ceb: test eax, eax; je 0x116cfe; sub esp, 0xc; lea edx, [ebx + 0x2c20]; push edx; call eax; 
0x0011fb6b: test eax, eax; je 0x11fb78; add esp, 8; pop ebx; ret; 
0x00123876: test eax, eax; je 0x123883; sub esp, 0xc; push esi; call eax; 
0x00124013: test eax, eax; je 0x1240fd; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00124254: test eax, eax; je 0x124261; sub esp, 0xc; push esi; call eax; 
0x00124237: test eax, eax; je 0x1242a0; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00124384: test eax, eax; je 0x12439b; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00124531: test eax, eax; je 0x124542; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00124575: test eax, eax; je 0x124580; add esp, 8; pop ebx; ret; 
0x00124d54: test eax, eax; je 0x124ce9; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001251e4: test eax, eax; je 0x125191; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00125207: test eax, eax; je 0x125214; sub esp, 0xc; push esi; call eax; 
0x001254cf: test eax, eax; je 0x12535a; sub esp, 0xc; push edi; call eax; 
0x001255b0: test eax, eax; je 0x1255bd; sub esp, 0xc; push edi; call eax; 
0x00125e6d: test eax, eax; je 0x125e7a; sub esp, 0xc; push edi; call eax; 
0x001260a2: test eax, eax; je 0x1260c8; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x00126262: test eax, eax; je 0x12636b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001265c7: test eax, eax; je 0x1265f0; mov eax, ecx; pop ebx; ret; 
0x0012661b: test eax, eax; je 0x126670; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00129ca5: test eax, eax; je 0x129cb8; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0012a659: test eax, eax; je 0x12a666; sub esp, 0xc; push esi; call eax; 
0x0012a632: test eax, eax; je 0x12a770; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0012a886: test eax, eax; je 0x12a896; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0012bba6: test eax, eax; je 0x12bbb3; sub esp, 0xc; push esi; call eax; 
0x0012bd5e: test eax, eax; je 0x12bd6b; sub esp, 0xc; push edi; call eax; 
0x0012cfe7: test eax, eax; je 0x12cff4; sub esp, 0xc; push ebp; call eax; 
0x0012cfc9: test eax, eax; je 0x12d0d8; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0012d392: test eax, eax; je 0x12d3a2; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0012d5a0: test eax, eax; je 0x12db0b; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push esi; call dword ptr [eax + 0x10]; 
0x0012dd45: test eax, eax; je 0x12ddb0; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0012f199: test eax, eax; je 0x12f1d8; add esp, 4; pop ebx; pop esi; ret; 
0x0012f213: test eax, eax; je 0x12f220; ret; 
0x0012ffc6: test eax, eax; je 0x12ffd6; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001306af: test eax, eax; je 0x1306bf; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00130731: test eax, eax; je 0x130770; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001323b7: test eax, eax; je 0x1323e8; mov eax, ecx; pop ebx; ret; 
0x00132417: test eax, eax; je 0x132448; mov eax, ecx; pop ebx; ret; 
0x0016b8db: test eax, eax; je 0x16b8e1; call eax; 
0x0012bef6: test eax, eax; je 0x1a63b; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000273d7: test eax, eax; je 0x273e4; sub esp, 0xc; push esi; call eax; 
0x000418d8: test eax, eax; je 0x418e8; add esp, 4; pop ebx; pop esi; ret; 
0x00069a95: test eax, eax; je 0x69aa6; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00069b84: test eax, eax; je 0x69b98; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x00073b48: test eax, eax; je 0x73b80; mov eax, edx; pop ebx; pop esi; ret; 
0x00073fec: test eax, eax; je 0x74020; mov eax, edx; pop ebx; ret; 
0x00074fa0: test eax, eax; je 0x74fb0; add esp, 4; pop ebx; pop esi; ret; 
0x00078bdb: test eax, eax; je 0x78bf3; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0007b1ed: test eax, eax; je 0x7b1f3; call eax; 
0x0007e418: test eax, eax; je 0x7e41e; call eax; 
0x0008228d: test eax, eax; je 0x822c0; sub esp, 8; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0009d146: test eax, eax; je 0x9d160; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000beeca: test eax, eax; je 0xbef20; mov eax, 0x196; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c0ee7: test eax, eax; je 0xc0f00; sub esp, 0xc; push esi; call eax; 
0x000f7574: test eax, eax; je 0xf7579; ret; 
0x000f9470: test eax, eax; je 0xf9476; mov dword ptr [eax], edx; ret; 
0x000fc9d8: test eax, eax; je 0xfc9e0; test edx, edx; jne 0xfc9e8; ret; 
0x000fc9fc: test eax, eax; je 0xfca04; test edx, edx; jne 0xfca08; ret; 
0x000fcf71: test eax, eax; je 0xfcfd0; call eax; 
0x000fd0b5: test eax, eax; je 0xfd1a0; call eax; 
0x000ff3e7: test eax, eax; jl 0x1aff0; je 0xff3f2; ret; 
0x00101101: test eax, eax; jne 0x101128; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x001011ac: test eax, eax; jne 0x1011d0; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001013ed: test eax, eax; jne 0x101418; mov eax, 0x75; mov ebx, 0xb; call dword ptr gs:[0x10]; 
0x0010b144: test eax, eax; jne 0x10b134; add esp, 4; pop ebx; pop esi; ret; 
0x0010c517: test eax, eax; jne 0x10c528; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x10c530; ret; 
0x00116be4: test eax, eax; jne 0x116bd0; add esp, 4; pop ebx; pop esi; ret; 
0x0011f39b: test eax, eax; jne 0x11f3a8; pop ebx; pop esi; pop edi; ret; 
0x0011f3dd: test eax, eax; jne 0x11f3c8; pop ebx; pop esi; pop edi; ret; 
0x00120caa: test eax, eax; jne 0x120cb8; add esp, 4; pop ebx; pop esi; ret; 
0x001247b7: test eax, eax; jne 0x1247d8; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00124a6f: test eax, eax; jne 0x124a9f; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00125737: test eax, eax; jne 0x125748; add esp, 4; pop ebx; pop esi; ret; 
0x0012ff27: test eax, eax; jne 0x12ff10; add esp, 8; pop ebx; ret; 
0x0013bab4: test eax, eax; jne 0x13bac0; pop ebx; pop esi; pop edi; ret; 
0x0013f778: test eax, eax; jne 0x13f79b; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x00161760: test eax, eax; jne 0x161830; xor eax, eax; pop edi; ret; 
0x001620a8: test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x00161bf8: test eax, eax; jne 0x161e30; xor eax, eax; ret; 
0x00161c37: test eax, eax; jne 0x161eb0; xor eax, eax; ret; 
0x000311af: test eax, eax; jne 0x311d8; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00035287: test eax, eax; jne 0x352b0; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00051133: test eax, eax; jne 0x51140; sub dword ptr [ebx], 1; pop ebx; pop esi; ret; 
0x0006b07e: test eax, eax; jne 0x6b090; sub dword ptr [edx + 0x1928], 1; pop ebx; pop esi; ret; 
0x0006ddda: test eax, eax; jne 0x6ddd0; mov eax, edx; ret; 
0x0007482e: test eax, eax; jne 0x74840; sub dword ptr [edx + 0x193c], 1; pop ebx; pop esi; ret; 
0x00077d52: test eax, eax; jne 0x77d48; mov eax, edx; ret; 
0x00078b3a: test eax, eax; jne 0x78b30; ret; 
0x00079a00: test eax, eax; jne 0x799f8; ret; 
0x0007c7c4: test eax, eax; jne 0x7c800; mov dword ptr [esp + 0xc], ecx; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x0008357b: test eax, eax; jne 0x83570; xor eax, eax; ret; 
0x00083629: test eax, eax; jne 0x83620; mov eax, ecx; ret; 
0x0009cbb2: test eax, eax; jne 0x9cc10; xor eax, eax; pop edi; ret; 
0x0009cb78: test eax, eax; jne 0x9cc30; xor eax, eax; pop edi; ret; 
0x0009ce48: test eax, eax; jne 0x9cec0; xor eax, eax; ret; 
0x0009ce77: test eax, eax; jne 0x9cee0; xor eax, eax; ret; 
0x0009d28f: test eax, eax; jne 0x9d2d0; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000bf47c: test eax, eax; jne 0xbf540; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x54]; call dword ptr gs:[0x10]; 
0x000bfa36: test eax, eax; jne 0xbfa10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000c58ac: test eax, eax; jne 0xc58d0; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c5abb: test eax, eax; jne 0xc5ae0; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000c5b53: test eax, eax; jne 0xc5b60; add esp, 8; pop ebx; ret; 
0x000ea212: test eax, eax; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2c2: test eax, eax; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ea371: test eax, eax; jne 0xea398; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea421: test eax, eax; jne 0xea448; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ec6f9: test eax, eax; jne 0xec718; mov eax, 0xe; call dword ptr gs:[0x10]; 
0x000ec74e: test eax, eax; jne 0xec770; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x000ecc45: test eax, eax; jne 0xecc80; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecd68: test eax, eax; jne 0xecda0; mov ecx, dword ptr [esp + 0x20]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ece85: test eax, eax; jne 0xecec0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ecfa8: test eax, eax; jne 0xecfe0; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000ed0b7: test eax, eax; jne 0xed0e0; mov eax, 3; call dword ptr gs:[0x10]; 
0x000ed157: test eax, eax; jne 0xed180; mov eax, 4; call dword ptr gs:[0x10]; 
0x000ed6ac: test eax, eax; jne 0xed820; mov eax, 0xdd; mov edx, esi; call dword ptr gs:[0x10]; 
0x000ed717: test eax, eax; jne 0xed860; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000ed930: test eax, eax; jne 0xed958; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000edc7f: test eax, eax; jne 0xedca0; mov eax, 6; call dword ptr gs:[0x10]; 
0x000eddd3: test eax, eax; jne 0xeddf8; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f4447: test eax, eax; jne 0xf4470; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x000f4de5: test eax, eax; jne 0xf4e10; mov eax, 0x179; call dword ptr gs:[0x10]; 
0x000f5455: test eax, eax; jne 0xf5480; mov eax, 0x13a; call dword ptr gs:[0x10]; 
0x000f5517: test eax, eax; jne 0xf5540; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f55d5: test eax, eax; jne 0xf5600; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x000f5faf: test eax, eax; jne 0xf5fe0; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f6857: test eax, eax; jne 0xf6880; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x000f68f7: test eax, eax; jne 0xf6920; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000f69a2: test eax, eax; jne 0xf69d0; mov eax, 0x14d; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6a61: test eax, eax; jne 0xf6a88; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x000f6b12: test eax, eax; jne 0xf6b40; mov eax, 0x14e; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000f6bd1: test eax, eax; jne 0xf6bf8; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000f6c9f: test eax, eax; jne 0xf6d30; mov edi, dword ptr [esp + 4]; mov eax, 0x17a; call dword ptr gs:[0x10]; 
0x000f6e15: test eax, eax; jne 0xf6ec0; mov ebx, edx; mov eax, 0x17a; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f6f7f: test eax, eax; jne 0xf7010; mov edi, dword ptr [esp + 4]; mov eax, 0x17b; call dword ptr gs:[0x10]; 
0x000f70f5: test eax, eax; jne 0xf71a0; mov ebx, edx; mov eax, 0x17b; mov edx, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000f7861: test eax, eax; jne 0xf7888; mov eax, 0x8e; call dword ptr gs:[0x10]; 
0x000f794f: test eax, eax; jne 0xf7988; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x000f7a3f: test eax, eax; jne 0xf7a60; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000f7adf: test eax, eax; jne 0xf7b00; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x000f8717: test eax, eax; jne 0xf86d8; add esp, 0xc; ret; 
0x000fa251: test eax, eax; jne 0xfa260; sub dword ptr [edx + 0x24f0], 1; ret; 
0x000fae57: test eax, eax; jne 0xfae80; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x000fc0ad: test eax, eax; jne 0xfc0dc; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000fd21d: test eax, eax; jne 0xfd240; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000ff501: test eax, eax; jne 0xff530; mov ebp, 8; mov eax, 0x13f; call dword ptr gs:[0x10]; 
0x000ff7ec: test eax, eax; jne 0xff810; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x000ff89c: test eax, eax; jne 0xff8c0; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x000ff94c: test eax, eax; jne 0xff970; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x000ffa05: test eax, eax; jne 0xffa30; mov eax, 0x139; call dword ptr gs:[0x10]; 
0x000ffab7: test eax, eax; jne 0xffae0; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x00137357: test eax, eax; js 0x137368; add esp, 4; pop ebx; pop esi; ret; 
0x0007195a: test eax, eax; js 0x71960; ret; 
0x0007b746: test eax, eax; mov eax, 8; cmovne eax, edx; mov dword ptr [ecx + 0x1e08], eax; ret; 
0x00050eb5: test eax, eax; sete al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x000df203: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x000410db: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00122dde: test eax, eax; sete al; add esp, 0xc; ret; 
0x0013fc78: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00127ee0: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x001457e0: test eax, eax; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x0001b8a3: test eax, eax; setne al; add esp, 0xc; movzx eax, al; neg eax; ret; 
0x00126111: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0012665a: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00073769: test eax, eax; setne dl; mov eax, edx; ret; 
0x000c7aaf: test eax, ebp; add dword ptr [eax], eax; add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008eb73: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0010fdc3: test eax, ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x488d01f8], al; add cl, byte ptr [edi]; xchg esp, eax; ret 0x7c8b; 
0x000835e8: test eax, ecx; insd dword ptr es:[edi], dx; stc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00094b73: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008ec7b: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000b6d25: test eax, edx; in al, dx; call dword ptr [eax - 0x73]; 
0x0011564f: test eax, esp; dec ecx; cli; call dword ptr [eax - 0x77]; 
0x0011aa75: test eax, esp; pushfd; cli; call dword ptr [eax - 0x73]; 
0x00113fec: test ebp, eax; sub al, 0xfa; call dword ptr [eax + 0x53]; 
0x0011dbf6: test ebp, eax; sub al, 0xfa; call dword ptr [eax - 0x73]; 
0x000c5ea7: test ebp, ebp; inc edi; cli; call dword ptr [eax + 0x6a]; 
0x00083513: test ebp, ebp; jne 0x83463; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x000f45b1: test ebp, ebp; mov ecx, dword ptr [esp + 0x54]; mov edi, 8; cmovne edx, eax; mov eax, 0x135; call dword ptr gs:[0x10]; 
0x000514a4: test ebp, ebp; pop ebx; cli; call dword ptr [ebx + 0x50]; 
0x000513ef: test ebp, ebp; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x0002155b: test ebp, ebx; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000517ac: test ebp, ebx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x00160b8e: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001572cc: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0009616e: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092fa6: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0009cdb6: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0013d03e: test ebx, ebx; jne 0x13d050; add esp, 8; pop ebx; ret; 
0x0013d07e: test ebx, ebx; jne 0x13d090; add esp, 8; pop ebx; ret; 
0x0013f1ba: test ebx, ebx; jne 0x13f1c8; add esp, 8; pop ebx; ret; 
0x00034175: test ebx, ebx; jne 0x34140; pop ebx; pop esi; pop edi; ret; 
0x000770aa: test ebx, ebx; jne 0x770b8; add esp, 8; pop ebx; ret; 
0x0008733f: test ebx, ebx; jne 0x87357; pop ebx; pop esi; pop edi; ret; 
0x000c5e07: test ebx, ebx; js 0xc5e60; mov eax, 0x166; lea ecx, [ebp - 0x5ceff]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0005157f: test ebx, ecx; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x0002e556: test ebx, edi; xor edx, edi; call dword ptr [eax + 0x53]; 
0x00096298: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00132f53: test ebx, esi; add byte ptr [eax], al; add byte ptr [ebp - 0x59cd97d], cl; call dword ptr [ebp + 0x6a]; 
0x000ea20e: test ecx, 0xc0851fff; jne 0xea238; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x000ea2be: test ecx, 0xc0851fff; jne 0xea2e8; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0009d6ab: test ecx, 0xff0000; je 0x9d6b4; inc eax; pop edi; ret; 
0x000b2492: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x00092cb2: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00096582: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0007e8a2: test ecx, ebx; add al, 0; add dh, dh; ret; 
0x00076fbe: test ecx, ecx; inc eax; cli; call dword ptr [eax - 0x18]; 
0x001085f8: test ecx, ecx; je 0x108600; xor eax, eax; pop ebx; ret; 
0x0010c51d: test ecx, ecx; je 0x10c530; ret; 
0x00083054: test ecx, ecx; je 0x83060; pop ebx; pop esi; pop edi; ret; 
0x0009d0fd: test ecx, ecx; je 0x9d110; bsf ecx, ecx; add eax, ecx; ret; 
0x000f92cd: test ecx, ecx; je 0xf92f0; mov eax, 0x12b; call dword ptr gs:[0x10]; 
0x000f9440: test ecx, ecx; je 0xf9447; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [eax + 4], edx; ret; 
0x0010351d: test ecx, ecx; jne 0x103530; mov eax, edx; pop ebx; pop esi; ret; 
0x00103588: test ecx, ecx; jne 0x103598; mov eax, edx; pop ebx; pop esi; ret; 
0x00103773: test ecx, ecx; jne 0x103780; mov eax, edx; pop ebx; pop esi; ret; 
0x00103dc8: test ecx, ecx; jne 0x103dd8; mov eax, edx; pop ebx; pop esi; ret; 
0x00103e28: test ecx, ecx; jne 0x103e38; mov eax, edx; pop ebx; pop esi; ret; 
0x00104003: test ecx, ecx; jne 0x104010; mov eax, edx; pop ebx; pop esi; ret; 
0x001258d3: test ecx, ecx; jne 0x125928; mov dword ptr [eax], 0; pop ebx; ret; 
0x00071279: test ecx, ecx; jne 0x71290; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0007bdc1: test ecx, ecx; jne 0x7bdd0; ret; 
0x000b4139: test ecx, ecx; jne 0xb4158; mov eax, 0x4e; call dword ptr gs:[0x10]; 
0x000c7484: test ecx, ecx; js 0xc7490; ret; 
0x000f5b08: test ecx, ecx; js 0xf5b14; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00092fd4: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0013148f: test edi, ebp; call dword ptr [eax - 0x73]; 
0x000930cc: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000b9a8c: test edi, ecx; fdivp st(7); call dword ptr [edi + 0x57]; 
0x0006125c: test edi, ecx; or byte ptr [eax], al; add byte ptr [ebx - 0x7aa3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000515ae: test edi, ecx; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x00162100: test edi, edi; je 0x162160; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00050fc6: test edi, edi; je 0x51008; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0009cf80: test edi, edi; je 0x9cfe0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0016bbcd: test edi, edi; jne 0x16bba0; pop ebx; pop esi; pop edi; ret; 
0x000c595e: test edi, edi; jne 0xc5988; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0016543f: test edi, esi; add byte ptr [eax], al; add byte ptr [ebx - 0x768fdbbc], cl; ret 0x44c7; 
0x000ea95a: test edx, 0x975ff00; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000af0ae: test edx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x364f63], cl; dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x00094e81: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0009d1c1: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00094b91: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00096191: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094f99: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c0932: test edx, edx; cmovs edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00128002: test edx, edx; je 0x128010; add esp, 4; pop ebx; pop esi; ret; 
0x001280c2: test edx, edx; je 0x1280d0; add esp, 4; pop ebx; pop esi; ret; 
0x00128182: test edx, edx; je 0x128190; add esp, 4; pop ebx; pop esi; ret; 
0x0012e987: test edx, edx; je 0x12e99a; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0013f5f0: test edx, edx; je 0x13f610; mov eax, dword ptr [eax + 0x1a10]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f630: test edx, edx; je 0x13f650; mov eax, dword ptr [eax + 0x1a14]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f670: test edx, edx; je 0x13f690; mov eax, dword ptr [eax + 0x1a18]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6b0: test edx, edx; je 0x13f6d0; mov eax, dword ptr [eax + 0x1a1c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013f6f0: test edx, edx; je 0x13f710; mov eax, dword ptr [eax + 0x1a20]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0016b9db: test edx, edx; je 0x16b9ec; sub esp, 0xc; push eax; call edx; 
0x0001a710: test edx, edx; je 0x1a715; ret; 
0x00026149: test edx, edx; je 0x2614f; call edx; 
0x000262d2: test edx, edx; je 0x262de; mov dword ptr [esp], eax; call edx; 
0x00031b1b: test edx, edx; je 0x31b10; xor eax, eax; ret; 
0x0007a780: test edx, edx; je 0x7a7a0; mov eax, dword ptr [eax + 0x19e0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a7c0: test edx, edx; je 0x7a7e0; mov eax, dword ptr [eax + 0x19e4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a800: test edx, edx; je 0x7a820; mov eax, dword ptr [eax + 0x19e8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a840: test edx, edx; je 0x7a860; mov eax, dword ptr [eax + 0x19ec]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a880: test edx, edx; je 0x7a8a0; mov eax, dword ptr [eax + 0x19f0]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a8c0: test edx, edx; je 0x7a8e0; mov eax, dword ptr [eax + 0x19f4]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a900: test edx, edx; je 0x7a920; mov eax, dword ptr [eax + 0x19f8]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a940: test edx, edx; je 0x7a960; mov eax, dword ptr [eax + 0x19fc]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a980: test edx, edx; je 0x7a9a0; mov eax, dword ptr [eax + 0x1a00]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007a9c0: test edx, edx; je 0x7a9e0; mov eax, dword ptr [eax + 0x1a04]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007aa00: test edx, edx; je 0x7aa20; mov eax, dword ptr [eax + 0x1a08]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab40: test edx, edx; je 0x7ab60; mov eax, dword ptr [eax + 0x1a34]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab80: test edx, edx; je 0x7aba0; mov eax, dword ptr [eax + 0x1a38]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007abc0: test edx, edx; je 0x7abe0; mov eax, dword ptr [eax + 0x1a3c]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac00: test edx, edx; je 0x7ac20; mov eax, dword ptr [eax + 0x1a40]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac40: test edx, edx; je 0x7ac60; mov eax, dword ptr [eax + 0x1a44]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ac80: test edx, edx; je 0x7aca0; mov eax, dword ptr [eax + 0x1a48]; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ae27: test edx, edx; je 0x7ae38; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0007b253: test edx, edx; je 0x7b235; mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0007b29b: test edx, edx; je 0x7b235; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x0007b4c5: test edx, edx; je 0x7b4d8; or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0009cf28: test edx, edx; je 0x9cf00; bsr ecx, edx; add eax, ecx; ret; 
0x000b2903: test edx, edx; je 0xb2910; mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xb2900; ret; 
0x000fab24: test edx, edx; je 0xfab2e; mov dword ptr [eax + 0x19c], edx; mov eax, ecx; ret; 
0x000fbc8e: test edx, edx; je 0xfbca0; pop ebx; pop esi; pop edi; ret; 
0x000ffb5c: test edx, edx; je 0xffb90; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00132dfc: test edx, edx; jne 0x132e08; add esp, 0xc; ret; 
0x00132e3c: test edx, edx; jne 0x132e48; add esp, 0xc; ret; 
0x0013bf15: test edx, edx; jne 0x13bf20; add esp, 8; pop ebx; ret; 
0x0016284e: test edx, edx; jne 0x162860; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00050847: test edx, edx; jne 0x50850; add esp, 8; pop ebx; ret; 
0x0007b45d: test edx, edx; jne 0x7b480; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00094a89: test edx, edx; jne 0x949fb; call 0x13cef9; add ecx, 0xed64a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000960c9: test edx, edx; jne 0x9603b; call 0x13cef9; add ecx, 0xec16a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009c069: test edx, edx; jne 0x9bfdb; call 0x13cef9; add ecx, 0xe639e; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a057a: test edx, edx; jne 0xa0570; ret; 
0x000b25ed: test edx, edx; jne 0xb25e0; mov eax, ecx; pop ebx; pop esi; ret; 
0x000b293a: test edx, edx; jne 0xb2930; mov eax, ecx; pop ebx; ret; 
0x000b7707: test edx, edx; jne 0xb7718; add esp, 4; pop ebx; pop esi; ret; 
0x000c2169: test edx, edx; jne 0xc21a0; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000c66d5: test edx, edx; jne 0xc6708; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000c6785: test edx, edx; jne 0xc67b8; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000f5ba5: test edx, edx; jne 0xf5b80; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; ret; 
0x000f7249: test edx, edx; jne 0xf7280; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x000f7309: test edx, edx; jne 0xf7340; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000f73ca: test edx, edx; jne 0xf7420; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000f74aa: test edx, edx; jne 0xf7500; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000fc9dc: test edx, edx; jne 0xfc9e8; ret; 
0x000fca00: test edx, edx; jne 0xfca08; ret; 
0x0009f7d1: test edx, edx; sete al; ret; 
0x0010c73c: test edx, esi; call dword ptr [edx - 1]; 
0x0005686e: test edx, esi; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00047866: test esi, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x363f4b], cl; call dword ptr [edi - 1]; 
0x0009cadd: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00160b7d: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0008eb55: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000e1da4: test esi, esi; cmovns ecx, esi; call dword ptr gs:[0x10]; 
0x0016b6dd: test esi, esi; jne 0x16b6c4; add esp, 4; pop ebx; pop esi; ret; 
0x0016bd3c: test esi, esi; jne 0x16bd24; add esp, 4; pop ebx; pop esi; ret; 
0x0016bdff: test esi, esi; jne 0x16bde8; add esp, 4; pop ebx; pop esi; ret; 
0x000c69ee: test esi, esi; jne 0xc6a20; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000c6aae: test esi, esi; jne 0xc6ae0; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000e5ecb: test esi, esi; jne 0xe5eb0; pop ebx; pop esi; pop edi; ret; 
0x000e72af: test esp, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x4a00f314], al; mov al, byte ptr [0xe8fffffb]; scasb al, byte ptr es:[edi]; ret; 
0x0008e887: test esp, eax; add eax, 0x5b5f0000; ret; 
0x00162767: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00070f7d: test esp, ebp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x000e45fe: test esp, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x000a6437: test esp, ebp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x74c7dbac], cl; inc edx; add al, 0x83; ret 0x8304; 
0x0015dfbf: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000c725f: test esp, edi; add dword ptr [eax], eax; add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001633b3: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00160b9f: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000b24a7: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000ca84c: test esp, esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x1b773], al; call dword ptr [eax]; 
0x0014bf0c: ud0; inc dword ptr [ecx + 0x43af1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014beee: ud0; inc dword ptr [ecx + 0x43b0fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012f431: ud1; ret; 
0x0001b87e: verw ax; push 0x81001216; ret 0x877b; 
0x000b3bfd: vmread esi, esi; push dword ptr [ecx]; rol byte ptr [ebx - 0x1f7cef3c], cl; add eax, dword ptr [ebx - 0x6bf0fe08]; ret 0x2be9; 
0x0012e345: wait; adc byte ptr [eax + eax], dh; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001130e9: wait; adc byte ptr [ebx], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f405: wait; adc byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010669d: wait; adc byte ptr [ecx], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000311da: wait; add al, 0; mov ecx, 8; mov esi, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0012b251: wait; add byte ptr [eax + eax], dh; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013a499: wait; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0004d3c5: wait; add byte ptr [ecx], bl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000345e5: wait; add byte ptr [edi], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f844c: wait; and byte ptr [ebx], 0; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000c18aa: wait; and byte ptr [ecx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c169: wait; clc; sbb eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x001151c7: wait; cli; call dword ptr [eax - 0x73]; 
0x0011543e: wait; cli; dec dword ptr [ebp - 0x58fd757]; call dword ptr [eax + 0x55]; 
0x000c44a5: wait; cmp al, 0x22; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001136a5: wait; cmp byte ptr [ebx], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00116b59: wait; dec esp; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011149d: wait; dec esp; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104489: wait; dec esp; sub byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105ea9: wait; fsubr dword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00106069: wait; hlt; sub byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003f701: wait; idiv bh; call dword ptr [ebx + 0x6a]; 
0x0011083d: wait; in al, 0x29; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00043046: wait; in al, dx; sbb byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112b39: wait; in al, dx; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00129109: wait; insb byte ptr es:[edi], dx; xor eax, dword ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00117a35: wait; js 0x117a64; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001040f5: wait; les esp, ptr [edi]; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c2479: wait; mov ah, 0x21; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010468a: wait; mov byte ptr [eax], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c48ed: wait; mov byte ptr [edx], ah; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b567: wait; mov dl, byte ptr [esi]; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x80000], bh; jbe 0x7b580; ret; 
0x00069fd8: wait; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00104c7d: wait; mov word ptr [eax], gs; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00112285: wait; movsb byte ptr es:[edi], byte ptr [esi]; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007c7fd: wait; nop; call eax; 
0x0001cc69: wait; nop; sldt word ptr [eax]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0001cdae: wait; nop; sldt word ptr [eax]; mov ecx, 0x81; mov edx, edi; call dword ptr gs:[0x10]; 
0x00117be9: wait; nop; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004f139: wait; or al, 0x19; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010629a: wait; or al, 0x29; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001042a9: wait; or byte ptr [eax], ch; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011ee2f: wait; or ebx, dword ptr [edi - 6]; call dword ptr [ebx - 0x18]; 
0x00128f55: wait; pop eax; xor eax, dword ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f6071: wait; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00111585: wait; push eax; sub al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000f5951: wait; push esi; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000fe1bf: wait; push esp; cli; call dword ptr [eax + 0x52]; 
0x0011773d: wait; push esp; sub al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4659: wait; pushal; and al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012351b: wait; pushal; cli; call dword ptr [eax - 0x18]; 
0x000c22d5: wait; pushfd; and dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c410a: wait; sbb byte ptr [edx], ah; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c29ed: wait; shl byte ptr [ecx], 1; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105cf5: wait; shr byte ptr [eax], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00135108: wait; std; jmp dword ptr [esi - 0x70]; 
0x000ca3a2: wait; sti; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00111d89: wait; sub byte ptr [edx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00105a8f: wait; test al, 0x28; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001374d5: wait; test byte ptr [0x81b90000], dh; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x001293a5: wait; test byte ptr [ebx], dh; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c4809: wait; test byte ptr [edx], ah; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000336b5: wait; test byte ptr [edx], dl; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000eb721: wait; xchg ecx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x001135c5: wait; xor al, 0x2b; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001292b9: wait; xor byte ptr [ebx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200d1: wait; xor byte ptr [ecx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001209bc: wbinvd; ret; 
0x000ffc5d: wrpkru; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0001acd9: xchg ah, al; in eax, 0xf9; inc dword ptr [ecx]; bnd jmp edx; 
0x0001f437: xchg ah, bh; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x0007f1b5: xchg ah, bh; mov edx, edi; dec dword ptr [ebp - 0x5bec86a]; call dword ptr [eax - 0x73]; 
0x001365d9: xchg ah, bh; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000efd0b: xchg ah, cl; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x000ecf6a: xchg ah, cl; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x000e5d8b: xchg ah, cl; xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x0012e604: xchg al, ah; aas; hlt; call dword ptr [eax - 0x48]; 
0x00054388: xchg al, ah; jne 0x54386; call dword ptr [eax - 0x73]; 
0x0004996e: xchg al, ah; jno 0x4996c; call dword ptr [eax - 0x18]; 
0x000e5cb1: xchg al, ah; out dx, eax; out dx, eax; call dword ptr [eax + 0x6a]; 
0x0002795a: xchg al, al; adc byte ptr [eax], al; add byte ptr [ecx + 0x10d086], cl; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x00021e6c: xchg al, al; cli; call dword ptr [eax + 0x68]; 
0x0002180c: xchg al, al; cli; call dword ptr [eax - 0x73]; 
0x000e08b3: xchg al, bh; add eax, 0xf101fffa; jmp ecx; 
0x0004987d: xchg al, bh; jae 0x4987b; call dword ptr [eax - 0x73]; 
0x0004995b: xchg al, bh; jae 0x49959; call dword ptr [eax - 0x73]; 
0x00049980: xchg al, bh; jae 0x4997e; call dword ptr [eax - 0x73]; 
0x000499aa: xchg al, bh; jae 0x499a8; call dword ptr [eax - 0x73]; 
0x00049a60: xchg al, bh; jae 0x49a5e; call dword ptr [eax - 0x73]; 
0x00049a85: xchg al, bh; jae 0x49a83; call dword ptr [eax - 0x73]; 
0x0007d32b: xchg al, bl; mov edx, edi; dec dword ptr [ebp - 0x5be776a]; call dword ptr [eax - 0x73]; 
0x0011eb53: xchg al, ch; sahf; cli; call dword ptr [eax - 0x73]; 
0x000e35c8: xchg al, ch; xchg ebx, eax; cli; call dword ptr [eax - 0x18]; 
0x00133ca7: xchg al, cl; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00027960: xchg al, dl; adc byte ptr [eax], al; add byte ptr [ebp - 0x5908f7a], cl; call dword ptr [eax - 0x18]; 
0x001365ec: xchg al, dl; arpl dx, di; call dword ptr [eax - 0x18]; 
0x0015b8dc: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00116641: xchg bh, bh; dec dword ptr [ebp - 0x59cce7d]; call dword ptr [esi + 0x6a]; 
0x00049890: xchg bh, bl; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0012dfb5: xchg bh, cl; pushal; cli; call dword ptr [eax - 0x18]; 
0x00076166: xchg byte ptr [0x83000001], ch; in al, dx; add al, 0x51; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000751c6: xchg byte ptr [0x83000002], dl; in al, dx; or byte ptr [ebp + 0x50342444], cl; push ebx; call dword ptr [esi + 0x48]; 
0x000618fe: xchg byte ptr [0x83000009], al; in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push esi; call dword ptr [eax + 0x1c]; 
0x00115d80: xchg byte ptr [0x83fffa5c], dh; iretd; call dword ptr [eax - 0x18]; 
0x000bfc72: xchg byte ptr [eax + 0x1a], bl; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0013f15c: xchg byte ptr [eax + 0x29ffffe2], ah; ret 0xc129; 
0x00068fb5: xchg byte ptr [eax + 0x29ffffe2], ah; ret 0xd989; 
0x00047c01: xchg byte ptr [eax + 0x32], ch; cli; call dword ptr [eax + 0x57]; 
0x000c41e0: xchg byte ptr [eax + 0x47], ch; cli; call dword ptr [eax + 0x53]; 
0x000f9dde: xchg byte ptr [eax + 0x4c], dh; cli; call dword ptr [eax - 0x73]; 
0x0001f90d: xchg byte ptr [eax + 0x68], al; cli; call dword ptr [eax - 0x73]; 
0x00028ece: xchg byte ptr [eax + 0x6afffa70], cl; add eax, 0x28868d50; jo 0x28ed5; call dword ptr [eax - 0x18]; 
0x00027966: xchg byte ptr [eax + 0x6f], dh; cli; call dword ptr [eax - 0x18]; 
0x00033b0a: xchg byte ptr [eax + 0x71], bh; cli; call dword ptr [eax - 0x73]; 
0x000a2578: xchg byte ptr [eax + 0x73], dh; cli; call dword ptr [eax + 0x68]; 
0x0004107e: xchg byte ptr [eax + 0xf0], bh; lea ebx, [edi + 0x1720]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00068fc3: xchg byte ptr [eax + 1], ch; add byte ptr [eax], al; sub esp, 8; push 0; push edi; call dword ptr [ebx + 8]; 
0x00072341: xchg byte ptr [eax + eax - 0xf770000], ah; pop ebx; pop esi; pop edi; ret; 
0x00146f00: xchg byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00131494: xchg byte ptr [eax - 0x5b], ah; cli; call dword ptr [eax - 0x73]; 
0x0011a38e: xchg byte ptr [eax - 0x64], ah; cli; call dword ptr [eax - 0x73]; 
0x000e35eb: xchg byte ptr [eax - 0x6c], ah; cli; call dword ptr [eax - 0x18]; 
0x000e355f: xchg byte ptr [eax - 0x6d], ah; cli; call dword ptr [eax - 0x18]; 
0x000a03bd: xchg byte ptr [eax - 0x72], bl; cli; call dword ptr [eax - 0x73]; 
0x000f9f09: xchg byte ptr [eax - 0x74000002], cl; add byte ptr [ecx], bh; ret; 
0x000af268: xchg byte ptr [eax - 0x7400000b], al; test dword ptr [eax - 0x7c000037], edi; in al, dx; or byte ptr [ebp - 0x39f48], cl; call dword ptr [edi + 0x53]; 
0x0005ec5d: xchg byte ptr [eax - 0x7cffffec], ah; in al, dx; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000c72ac: xchg byte ptr [eax - 0xa], al; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x000b3f7a: xchg byte ptr [eax - 0xd], dh; in al, dx; call dword ptr [eax - 0x73]; 
0x00046a3b: xchg byte ptr [eax], ah; add al, byte ptr [eax]; add byte ptr [ebx - 0x363743], al; call dword ptr [eax]; 
0x000e27a6: xchg byte ptr [eax], ah; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000e9499: xchg byte ptr [eax], ah; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000a2584: xchg byte ptr [eax], ah; xor edi, edx; call dword ptr [eax - 0x73]; 
0x000ffe7b: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102b81: xchg byte ptr [eax], al; out 0xf1, eax; dec dword ptr [ebp + 0x26e0b6]; add byte ptr [edi], cl; inc esp; ret 0x958d; 
0x000e360e: xchg byte ptr [eax], bh; xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x0011eb5a: xchg byte ptr [eax], ch; jo 0x11eb58; call dword ptr [eax - 0x18]; 
0x001247e5: xchg byte ptr [eax], ch; jo 0x1247e3; call dword ptr [eax - 0x18]; 
0x00131487: xchg byte ptr [eax], ch; jo 0x131485; call dword ptr [eax - 0x18]; 
0x00028ed7: xchg byte ptr [eax], ch; jo 0x28ed5; call dword ptr [eax - 0x18]; 
0x000e113b: xchg byte ptr [eax], ch; jo 0xe1139; call dword ptr [eax - 0x18]; 
0x000e118b: xchg byte ptr [eax], ch; jo 0xe1189; call dword ptr [eax - 0x18]; 
0x000e134b: xchg byte ptr [eax], ch; jo 0xe1349; call dword ptr [eax - 0x18]; 
0x000e8f2f: xchg byte ptr [eax], ch; jo 0xe8f2d; call dword ptr [eax - 0x18]; 
0x000b3f73: xchg byte ptr [eax], cl; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0xd], dh; in al, dx; call dword ptr [eax - 0x73]; 
0x000e8f28: xchg byte ptr [eax], cl; dec ebx; cli; call dword ptr [eax - 0x73]; 
0x0013d45b: xchg byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push edi; call dword ptr [ebx + 8]; 
0x000e35a5: xchg byte ptr [eax], dl; xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x00115c9a: xchg byte ptr [ebp + 0x5c], bl; cli; call dword ptr [eax - 0x18]; 
0x00021d55: xchg byte ptr [ebp + ebp*2 - 6], cl; call dword ptr [eax - 0x18]; 
0x00021d09: xchg byte ptr [ebp + ebp*2 - 6], dh; call dword ptr [eax - 0x18]; 
0x0009fd4b: xchg byte ptr [ebp + ecx*4 - 6], bl; call dword ptr [eax - 0x18]; 
0x0002c2da: xchg byte ptr [ebp - 0x74d98b40], al; inc edx; or al, 0x83; ret 0x8908; 
0x0001f545: xchg byte ptr [ebx + 0x2e], cl; cli; call dword ptr [eax - 0x18]; 
0x000a258b: xchg byte ptr [ebx + 0x32], al; cli; call dword ptr [eax - 0x18]; 
0x000ee783: xchg byte ptr [ebx + 0x4b], bh; cli; call dword ptr [eax - 0x18]; 
0x001128bc: xchg byte ptr [ebx + 0x5a], bh; cli; call dword ptr [eax - 0x73]; 
0x00133288: xchg byte ptr [ebx + 0x60], al; cli; call dword ptr [eax + 0x6a]; 
0x0015335b: xchg byte ptr [ebx - 0x3c7e0002], bl; loope 0x153333; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0004b6cd: xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0005d304: xchg byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0005ed80: xchg byte ptr [ebx - 0x7cfffff8], ah; in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006bef0: xchg byte ptr [ebx - 0x7d000000], al; in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x001627e7: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000414a8: xchg byte ptr [ebx], ch; add al, byte ptr [eax]; add byte ptr [ebx - 0xab43], cl; inc dword ptr [ebx - 0x3f7cfb14]; add dword ptr [ecx - 0x9373], ecx; call dword ptr [eax - 0x73]; 
0x00117e6c: xchg byte ptr [ebx], cl; pop ebp; cli; call dword ptr [eax - 0x73]; 
0x0001914c: xchg byte ptr [ebx], dh; sub al, 0xfa; call dword ptr [eax + 0x57]; 
0x0009fef7: xchg byte ptr [ecx + 0x45], bl; cli; call dword ptr [eax - 0x18]; 
0x000ee7a0: xchg byte ptr [ecx + 0x4b], bh; cli; call dword ptr [eax + 0x6a]; 
0x00115db3: xchg byte ptr [ecx + 0x5c], dl; cli; call dword ptr [eax - 0x18]; 
0x000db6a5: xchg byte ptr [ecx + eax], dl; cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x0013149b: xchg byte ptr [ecx], bl; pop eax; cli; call dword ptr [eax + 0x6a]; 
0x0009ff17: xchg byte ptr [ecx], ch; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x000c438a: xchg byte ptr [edi + 0x47], bh; cli; call dword ptr [edi - 1]; 
0x0001917d: xchg byte ptr [edi + ecx + 0x5f5e0000], cl; ret; 
0x0015e465: xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0015cfde: xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x00106b1c: xchg byte ptr [edi], al; push edi; cli; call dword ptr [eax - 0x73]; 
0x0015af9c: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0015c6bc: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00033b1a: xchg byte ptr [edi], bl; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0015a8ac: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000d5442: xchg byte ptr [edi], cl; and dword ptr [eax - 0x7cfffffe], 0xffffffc0; add dword ptr [ecx], edi; ret 0xe875; 
0x0015bfcc: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00111ffc: xchg byte ptr [edx + 0x5a], al; cli; call dword ptr [eax - 0x73]; 
0x000e1344: xchg byte ptr [edx + edx*4 - 6], ch; call dword ptr [eax - 0x73]; 
0x000e1184: xchg byte ptr [edx + edx*4 - 6], cl; call dword ptr [eax - 0x73]; 
0x00049a73: xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; 
0x00049a73: xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x000e5d25: xchg byte ptr [edx], al; dec edx; cli; call dword ptr [eax + 0x6a]; 
0x0001f4d9: xchg byte ptr [edx], bh; cli; call dword ptr [eax - 0x18]; 
0x000948ce: xchg byte ptr [edx], cl; add byte ptr [ecx + 0xed78fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000948ae: xchg byte ptr [edx], cl; add byte ptr [ecx + 0xed7afc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00094889: xchg byte ptr [edx], cl; add byte ptr [ecx + 0xed7d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0001f561: xchg byte ptr [edx], dl; cli; call dword ptr [eax - 0x73]; 
0x0001f58b: xchg byte ptr [esi + 0x2e], ch; cli; call dword ptr [eax - 0x18]; 
0x00071b65: xchg byte ptr [esi + 2], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00021d49: xchg byte ptr [esi + ebp - 0x36970006], al; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + ebp*2 - 6], cl; call dword ptr [eax - 0x18]; 
0x00021cb5: xchg byte ptr [esi + ebp*2], ah; cli; call dword ptr [eax - 0x73]; 
0x0011cae2: xchg byte ptr [esi + ebx*4], cl; cli; call dword ptr [ebp - 1]; 
0x0009fd38: xchg byte ptr [esi + ecx*4], bh; cli; call dword ptr [eax - 0x73]; 
0x0009ff37: xchg byte ptr [esi + ecx*4], dl; cli; call dword ptr [eax - 0x18]; 
0x00080093: xchg byte ptr [esi + edi*8 - 1], ah; jmp dword ptr [ebp - 0x75]; 
0x000d025f: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x000ed08a: xchg byte ptr [esi + edx*4], al; cli; call dword ptr [eax - 0x18]; 
0x00133281: xchg byte ptr [esi - 0x72b00000], cl; xchg byte ptr [ebx + 0x60], al; cli; call dword ptr [eax + 0x6a]; 
0x0001f568: xchg byte ptr [esi], ah; cli; call dword ptr [eax - 0x18]; 
0x0001910e: xchg byte ptr [esi], dl; sub al, 0xfa; call dword ptr [eax - 0x18]; 
0x000ba84a: xchg byte ptr [esp + ebp*8 - 0xefe0007], ah; jmp ecx; 
0x00019132: xchg byte ptr [esp + ebp], ah; cli; call dword ptr [edx + 0x52]; 
0x00116787: xchg byte ptr [esp + ebp], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0011a551: xchg byte ptr [esp + ebx*4 - 6], dh; call dword ptr [eax - 0x18]; 
0x0011a3a1: xchg byte ptr [esp + ebx*4], bl; cli; call dword ptr [eax - 0x18]; 
0x0004ef98: xchg byte ptr [esp + esi*2 - 6], bl; call dword ptr [eax - 0x73]; 
0x0004efab: xchg byte ptr [esp + esi*2], dh; cli; call dword ptr [eax - 0x18]; 
0x000513e7: xchg ch, bh; inc dword ptr [ebx - 0x72aff33c]; test ebp, ebp; xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x0013659b: xchg ch, bh; jmp dword ptr [esi - 0x70]; 
0x000505c7: xchg ch, ch; xor edi, edx; call dword ptr [eax + 0x53]; 
0x00071084: xchg cl, cl; inc eax; cli; call dword ptr [eax - 0x18]; 
0x001050fc: xchg cl, cl; push esi; cli; call dword ptr [eax - 0x73]; 
0x0006a46a: xchg cl, dh; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x6a47e; push esi; call dword ptr [ebx + 0x1c]; 
0x000c51cb: xchg cl, dl; inc edi; cli; call dword ptr [eax - 0x73]; 
0x0001afd0: xchg dh, ah; sub edi, edx; call dword ptr [eax - 0x75]; 
0x000c4dfb: xchg dh, al; inc edi; cli; call dword ptr [eax - 0x73]; 
0x00126597: xchg dh, bh; dec dword ptr [ebp - 0x59e5c7d]; call dword ptr [edx + 0x6a]; 
0x00040815: xchg dh, bh; dec dword ptr [ebx - 0x72b7db84]; xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x00081cfa: xchg dh, bh; inc ebx; cli; call dword ptr [ebx + 0x50]; 
0x0012981c: xchg dh, bh; popal; cli; call dword ptr [eax - 0x73]; 
0x00049993: xchg dl, bh; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e94ac: xchg dl, cl; dec edx; cli; call dword ptr [eax - 0x18]; 
0x00060db9: xchg dl, cl; or al, 0; add byte ptr [ebx + 0x555304ec], al; push esi; call dword ptr [eax + 0x1c]; 
0x001074d6: xchg dword ptr [0x89000002], eax; ret; 
0x00028ab2: xchg dword ptr [eax + 0x1a], ebx; add byte ptr [eax], al; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000524a9: xchg dword ptr [eax + 0x1fff9ca], eax; cli; jmp edx; 
0x0006bc48: xchg dword ptr [eax + 0x29ffffe2], esp; ret 0x4d89; 
0x00068dd2: xchg dword ptr [eax + 0x29ffffe2], esp; ret 0xd989; 
0x00076a4e: xchg dword ptr [eax + 0x29ffffe2], esp; ret 0xf189; 
0x0001cea8: xchg dword ptr [eax + 0x2c], edi; cli; call dword ptr [eax - 0x18]; 
0x00026df3: xchg dword ptr [eax + 0x2f], eax; cli; call dword ptr [eax - 0x18]; 
0x00133e02: xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x0010992c: xchg dword ptr [eax + 0x57], edi; cli; call dword ptr [eax - 0x18]; 
0x00023b24: xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax + 0x68]; 
0x000239ab: xchg dword ptr [eax + 0x67], eax; cli; call dword ptr [eax - 0x73]; 
0x0002102e: xchg dword ptr [eax + 0x6e], ecx; cli; call dword ptr [eax - 0x73]; 
0x00025d81: xchg dword ptr [eax + 0x70], eax; cli; call dword ptr [eax + 0x56]; 
0x00038238: xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax + 0x68]; 
0x0003a6f7: xchg dword ptr [eax + 0x73], esi; cli; call dword ptr [eax - 0x73]; 
0x0013709e: xchg dword ptr [eax + 0xf0], edi; lea ebx, [ebp + 0x3584]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00146d8c: xchg dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00109972: xchg dword ptr [eax + ebx*4 - 6], edx; call dword ptr [eax - 0x18]; 
0x00109972: xchg dword ptr [eax + ebx*4 - 6], edx; call dword ptr [eax - 0x18]; ret; 
0x00051db6: xchg dword ptr [eax + ecx*8 - 7], esi; inc dword ptr [ecx]; sti; jmp ebx; 
0x000b02df: xchg dword ptr [eax + edx*4], edi; cli; call dword ptr [eax - 0x73]; 
0x00102ccd: xchg dword ptr [eax - 0x68], ecx; cli; call dword ptr [eax - 0x73]; 
0x000a47b0: xchg dword ptr [eax - 0x72], ebp; cli; call dword ptr [eax - 0x73]; 
0x0009eb90: xchg dword ptr [eax - 0x73], ecx; cli; call dword ptr [eax + 0x68]; 
0x0013d8eb: xchg dword ptr [eax - 0x77000000], ebx; ret; 
0x00162955: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00161ff5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00161935: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00023ade: xchg dword ptr [eax], eax; cli; call dword ptr [eax - 0x73]; 
0x00026de0: xchg dword ptr [eax], eax; outsd dx, dword ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x00114f7d: xchg dword ptr [eax], ebp; jo 0x114f7b; call dword ptr [eax - 0x18]; 
0x001151cc: xchg dword ptr [eax], ebp; jo 0x1151ca; call dword ptr [eax - 0x18]; 
0x001152e5: xchg dword ptr [eax], ebp; jo 0x1152e3; call dword ptr [eax - 0x18]; 
0x00115418: xchg dword ptr [eax], ebp; jo 0x115416; call dword ptr [eax - 0x18]; 
0x0011eae5: xchg dword ptr [eax], ebp; jo 0x11eae3; call dword ptr [eax - 0x18]; 
0x001242ad: xchg dword ptr [eax], ebp; jo 0x1242ab; call dword ptr [eax - 0x18]; 
0x0012bb89: xchg dword ptr [eax], ebp; jo 0x12bb87; call dword ptr [eax - 0x18]; 
0x000e190c: xchg dword ptr [eax], ebp; jo 0xe190a; call dword ptr [eax - 0x18]; 
0x000e19ef: xchg dword ptr [eax], ebp; jo 0xe19ed; call dword ptr [eax - 0x18]; 
0x000e1a32: xchg dword ptr [eax], ebp; jo 0xe1a30; call dword ptr [eax - 0x18]; 
0x000814ec: xchg dword ptr [eax], ebp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00108051: xchg dword ptr [eax], ebp; push edi; cli; call dword ptr [ebp - 1]; 
0x0005e089: xchg dword ptr [eax], ecx; jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x00063031: xchg dword ptr [eax], ecx; jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x0007f69b: xchg dword ptr [eax], ecx; mov bh, dl; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00022764: xchg dword ptr [eax], ecx; outsb dx, byte ptr [esi]; cli; call dword ptr [eax - 0x73]; 
0x000e9fc7: xchg dword ptr [eax], edi; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x0011b53e: xchg dword ptr [eax], edi; popfd; cli; call dword ptr [eax - 0x73]; 
0x001151c5: xchg dword ptr [eax], edi; wait; cli; call dword ptr [eax - 0x73]; 
0x000c1f46: xchg dword ptr [eax], edx; xchg ecx, eax; cli; call dword ptr [eax - 0x73]; 
0x00101a36: xchg dword ptr [eax], esi; fyl2x; call dword ptr [eax - 0x18]; 
0x0001b78c: xchg dword ptr [eax], esi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x0013c20d: xchg dword ptr [eax], esi; jne 0x13c206; call dword ptr [eax - 0x18]; 
0x00052427: xchg dword ptr [eax], esi; leave; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x000e2c0e: xchg dword ptr [eax], esp; fsubp st(7); call dword ptr [eax + 0x6a]; 
0x000ad3b2: xchg dword ptr [eax], esp; nop; cli; call dword ptr [eax - 0x73]; 
0x000e8d10: xchg dword ptr [eax], esp; xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x0003e0d4: xchg dword ptr [eax], esp; xor edi, edx; call dword ptr [eax - 0x73]; 
0x000c74e8: xchg dword ptr [ebp + 0x48], esp; cli; call dword ptr [eax - 0x18]; 
0x00101f59: xchg dword ptr [ebp + 0x56], ecx; cli; call dword ptr [eax + 0x6a]; 
0x000204dc: xchg dword ptr [ebp + ebp*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x00020545: xchg dword ptr [ebp + ebp*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x0009fbb7: xchg dword ptr [ebp + ecx*4 - 6], ebx; call dword ptr [eax - 0x18]; 
0x00144cec: xchg dword ptr [ebp + edx*4 - 6], ecx; call dword ptr [eax - 0x73]; 
0x0011a53c: xchg dword ptr [ebp - 0x5635f7a], ecx; call dword ptr [eax - 0x73]; 
0x0001e953: xchg dword ptr [ebx + 0x2e], ecx; cli; call dword ptr [eax - 0x18]; 
0x0003824b: xchg dword ptr [ebx + 0x32], eax; cli; call dword ptr [eax - 0x18]; 
0x00082e49: xchg dword ptr [ebx + 0x44], edx; cli; call dword ptr [ebp + 0x50]; 
0x000bc9d0: xchg dword ptr [ebx + 1], ecx; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x94]; add ecx, dword ptr [ecx + eax*4 - 0x60bac]; jmp ecx; 
0x000e7c9c: xchg dword ptr [ebx + 1], esi; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov eax, dword ptr [ecx + esi*4 - 0x5f518]; add eax, ecx; jmp eax; 
0x0004497a: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000cd1e3: xchg dword ptr [ebx + edi*8 - 7], eax; inc dword ptr [ecx]; stc; jmp ecx; 
0x000e19e8: xchg dword ptr [ebx + edx*4], edx; cli; call dword ptr [eax - 0x73]; 
0x0004353b: xchg dword ptr [ebx + esi - 6], esi; call dword ptr [ebx + 0x51]; 
0x0003a7cb: xchg dword ptr [ebx + esi*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x00039a86: xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x0003a87c: xchg dword ptr [ebx + esi*2], eax; cli; call dword ptr [eax - 0x18]; 
0x0011c806: xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x0009eba3: xchg dword ptr [ebx], edx; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x0011b54e: xchg dword ptr [ecx + 0x5d], ebp; cli; call dword ptr [eax - 0x18]; 
0x0013457f: xchg dword ptr [ecx + 0x5e], edi; cli; call dword ptr [eax - 0x18]; 
0x00058979: xchg dword ptr [ecx + 0xe], ebp; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x63224]; jmp eax; 
0x0009e76c: xchg dword ptr [ecx + 1], ebp; add byte ptr [eax], al; mov eax, dword ptr [ebp + esi*4 - 0x61ae0]; add eax, ebp; jmp eax; 
0x000c7b14: xchg dword ptr [ecx + 1], ecx; add byte ptr [eax], al; mov ecx, dword ptr [edx + eax*4 - 0x60590]; add ecx, edx; jmp ecx; 
0x000ccd5c: xchg dword ptr [ecx + 2], edi; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x34]; mov edi, dword ptr [ecx + eax*4 - 0x6053c]; add edi, ecx; jmp edi; 
0x000a80d9: xchg dword ptr [ecx + eax*4], eax; ret 0; 
0x000bc90f: xchg dword ptr [ecx + eax], eax; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x94]; add eax, dword ptr [eax + ebx*4 - 0x60f84]; jmp eax; 
0x0012c434: xchg dword ptr [ecx + eax], edi; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x20]; mov ecx, dword ptr [ebx + eax*4 - 0x5d9a0]; add ecx, ebx; jmp ecx; 
0x000c72a5: xchg dword ptr [ecx + eax], edi; add byte ptr [ebx - 0x9bf796c], cl; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x000cc62c: xchg dword ptr [ecx + edx*4], edi; cli; call dword ptr [eax - 0x73]; 
0x0005140a: xchg dword ptr [ecx - 0x75000000], esi; xchg esp, eax; lea eax, [eax]; ret; 
0x001292d5: xchg dword ptr [ecx - 2], ebx; jmp dword ptr [esi - 0x70]; 
0x000b14b5: xchg dword ptr [ecx - 9], edi; dec dword ptr [ebx - 0x364743]; dec dword ptr [ebp - 0x56fc379]; call dword ptr [eax - 0x73]; 
0x000c1e96: xchg dword ptr [ecx], eax; xor edx, edi; call dword ptr [eax - 0x73]; 
0x000db4a4: xchg dword ptr [ecx], eax; xor edx, edi; dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x000ad520: xchg dword ptr [ecx], ebp; inc ebp; cli; call dword ptr [eax - 0x18]; 
0x00033c43: xchg dword ptr [ecx], edi; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000b4e2f: xchg dword ptr [edi + 0x46], eax; cli; call dword ptr [eax + 0x55]; 
0x0002df7c: xchg dword ptr [edi + 0xf000002], eax; mov dh, 0xc9; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x0005937a: xchg dword ptr [edi + 4], edx; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x4f4]; add eax, dword ptr [eax + ebx*4 - 0x62f84]; jmp eax; 
0x0011f2c1: xchg dword ptr [edi + ebx*2], esi; cli; call dword ptr [eax - 0x18]; 
0x0011f2ae: xchg dword ptr [edi + ebx*4 - 6], ebp; call dword ptr [eax - 0x73]; 
0x001099b8: xchg dword ptr [edi + edx*2 - 6], esp; call dword ptr [eax - 0x18]; 
0x0016b849: xchg dword ptr [edi], eax; add byte ptr [ebx - 0x7c72ef14], al; add byte ptr [eax - 8], bh; call dword ptr [eax - 1]; 
0x00027f48: xchg dword ptr [edi], ebp; cli; call dword ptr [eax - 0x18]; 
0x0010c1dc: xchg dword ptr [edi], ecx; pop eax; cli; call dword ptr [ebx + 0x50]; 
0x000c1f56: xchg dword ptr [edi], edx; inc edi; cli; call dword ptr [eax - 0x18]; 
0x0002674c: xchg dword ptr [edi], esp; das; cli; call dword ptr [eax - 0x18]; 
0x0003a7f9: xchg dword ptr [edx + 0x32], esi; cli; call dword ptr [eax - 0x18]; 
0x000c1f06: xchg dword ptr [edx + 0x4a], ecx; cli; call dword ptr [eax - 0x73]; 
0x0003ca9e: xchg dword ptr [edx + esi - 0x17af0006], esi; xchg edi, eax; ret; 
0x0003a89f: xchg dword ptr [edx + esi - 6], edx; call dword ptr [eax - 0x18]; 
0x0003c160: xchg dword ptr [edx + esi - 6], esp; dec dword ptr [ebp - 0x39f49]; call dword ptr [esi + 0x6a]; 
0x0003a773: xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x0003a773: xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x0002df7d: xchg dword ptr [edx], eax; add byte ptr [eax], al; movzx ecx, cl; mov ecx, dword ptr [ebx + ecx*4 - 0x68068]; add ecx, ebx; jmp ecx; 
0x000e8fce: xchg dword ptr [edx], ebp; dec ebx; cli; call dword ptr [eax - 0x18]; 
0x00038244: xchg dword ptr [edx], ebp; xor edi, edx; call dword ptr [eax - 0x73]; 
0x0001e8c2: xchg dword ptr [edx], edi; cli; call dword ptr [eax - 0x18]; 
0x00035fa5: xchg dword ptr [edx], edx; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0001e91e: xchg dword ptr [edx], edx; cli; call dword ptr [eax - 0x73]; 
0x0012e05b: xchg dword ptr [edx], esi; cli; call dword ptr [eax - 0x73]; 
0x000c63a7: xchg dword ptr [edx], esp; das; cli; call dword ptr [eax - 0x18]; 
0x000ea199: xchg dword ptr [esi + 0x4b], ecx; cli; call dword ptr [eax - 0x18]; 
0x000204d0: xchg dword ptr [esi + ebp - 0x36970006], eax; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ebp*2 - 6], ecx; call dword ptr [eax - 0x18]; 
0x000204a6: xchg dword ptr [esi + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x000ff23b: xchg dword ptr [esi + edi*8 + 0x168bffff], esp; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x0007fdb3: xchg dword ptr [esi + edi*8 - 1], esp; jmp dword ptr [ebp - 0x75]; 
0x000ee4a0: xchg dword ptr [esi + edx*4 - 6], esp; call dword ptr [eax - 0x18]; 
0x000675d5: xchg dword ptr [esi + esi*2 - 6], esi; call dword ptr [eax - 0x18]; 
0x0005e8e2: xchg dword ptr [esi + esi*2], ebp; cli; call dword ptr [eax - 0x18]; 
0x0015185a: xchg dword ptr [esi - 0x3c7e0002], esi; and ch, dl; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000cf8ec: xchg dword ptr [esi - 0x4500000b], ebx; add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x00133dfb: xchg dword ptr [esi - 0x72b00000], esp; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x0013c2cf: xchg dword ptr [esi - 0x7400121d], esi; inc ebp; les eax, ptr [ebx]; test byte ptr [eax - 0x5d528], dl; jmp eax; 
0x000a0635: xchg dword ptr [esi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000267ae: xchg dword ptr [esi], ebp; das; cli; call dword ptr [eax - 0x18]; 
0x000bf325: xchg dword ptr [esi], edi; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0001e925: xchg dword ptr [esi], esp; cli; call dword ptr [eax - 0x18]; 
0x0001ce95: xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x0001b79c: xchg dword ptr [esp + ebp*2], ecx; cli; call dword ptr [eax - 0x18]; 
0x0007ae11: xchg dword ptr [esp + edi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x000cebb3: xchg dword ptr [esp + edi*8 - 0x5fe0007], esi; jmp edx; 
0x000ba83f: xchg eax, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdb8c], cl; mov word ptr [esi - 0x6135c], es; add ecx, esi; jmp ecx; 
0x00024613: xchg eax, eax; cli; call dword ptr [eax + 0x68]; 
0x000242da: xchg eax, eax; cli; call dword ptr [eax - 0x73]; 
0x000204b9: xchg eax, eax; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x0010c1c3: xchg eax, eax; push -6; call dword ptr [eax - 0x75]; 
0x0013dc76: xchg eax, ebp; xor edi, edx; call dword ptr [eax + 0x6a]; 
0x000af5db: xchg eax, ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0007d34f: xchg eax, ebx; mov edx, edi; dec dword ptr [ebp - 0x5be7769]; call dword ptr [eax - 0x73]; 
0x000e8f79: xchg eax, ebx; xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x0014310c: xchg eax, ecx; xchg ecx, eax; cli; call dword ptr [eax - 0x73]; 
0x0010995f: xchg eax, edi; cdq; cli; call dword ptr [eax - 0x73]; 
0x000498a2: xchg eax, edi; jae 0x498a0; call dword ptr [eax - 0x73]; 
0x000498c7: xchg eax, edi; jae 0x498c5; call dword ptr [eax - 0x73]; 
0x000498ec: xchg eax, edi; jae 0x498ea; call dword ptr [eax - 0x73]; 
0x00049911: xchg eax, edi; jae 0x4990f; call dword ptr [eax - 0x73]; 
0x00049936: xchg eax, edi; jae 0x49934; call dword ptr [eax - 0x73]; 
0x000499f4: xchg eax, edi; jae 0x499f2; call dword ptr [eax - 0x73]; 
0x00049a19: xchg eax, edi; jae 0x49a17; call dword ptr [eax - 0x73]; 
0x00049ac9: xchg eax, edi; jae 0x49ac7; call dword ptr [eax - 0x73]; 
0x000e8f69: xchg eax, edi; xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x000ba35a: xchg eax, edx; nop; cli; call dword ptr [eax - 0x73]; 
0x000527fc: xchg eax, edx; retf; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00020ff7: xchg eax, esp; cli; call dword ptr [eax + 0x68]; 
0x00020af4: xchg eax, esp; cli; call dword ptr [eax - 0x73]; 
0x001156ef: xchg eax, esp; dec ecx; cli; call dword ptr [eax - 0x77]; 
0x0003a7a8: xchg eax, esp; jno 0x3a7a6; call dword ptr [eax - 0x18]; 
0x0003d62d: xchg eax, esp; jno 0x3d62b; call dword ptr [eax - 0x18]; 
0x000407c7: xchg eax, esp; jno 0x407c5; call dword ptr [eax - 0x18]; 
0x000b168e: xchg eax, esp; jno 0xb168c; call dword ptr [eax - 0x18]; 
0x001239a5: xchg eax, esp; salc; hlt; call dword ptr [eax - 0x73]; 
0x00102cdd: xchg eax, esp; xchg edi, eax; cli; call dword ptr [eax - 0x18]; 
0x000fa5a4: xchg eax, esp; xchg esi, eax; cli; call dword ptr [esi - 0x7f]; 
0x00160b87: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00046d4b: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x36437b], cl; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x000c27f3: xchg ebp, eax; add dword ptr [ecx], esi; cli; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000c2729: xchg ebp, eax; add dword ptr [ecx], esi; cli; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0014cb4c: xchg ebp, eax; add edi, edi; inc dword ptr [ecx + 0x431f0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0005851f: xchg ebp, eax; call 0x8405851f; ret 0x8904; 
0x0005ccc3: xchg ebp, eax; call 0xe905ccc3; push ebx; ret; 
0x000e7e1b: xchg ebp, eax; cli; call dword ptr [eax + 0x68]; 
0x000ecd32: xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x000e61e5: xchg ebp, eax; cli; call dword ptr [eax - 0x73]; 
0x000c92b5: xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00027ee5: xchg ebp, eax; das; cli; call dword ptr [eax - 0x18]; 
0x000aed09: xchg ebp, eax; mov al, byte ptr [0x8bffffc9]; xchg ebp, eax; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x00122dd7: xchg ebp, eax; mov ch, 0xf7; inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x001336c7: xchg ebp, eax; mov ch, 0xfd; jmp dword ptr [esi - 0x70]; 
0x00054c78: xchg ebp, eax; mov eax, 0x89fffffb; lea edx, [edx + edi*8 - 1]; call dword ptr [eax - 0x77]; 
0x000563e5: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00053e15: xchg ebp, eax; mov esp, 0x1fffffb; ret; 
0x0006489c: xchg ebp, eax; or al, 0; add byte ptr [ebx - 0x7276fb14], al; pushal; idiv edi; call dword ptr [esi + 0x52]; 
0x000c9e82: xchg ebp, eax; push 0x83fffffb; ret 0x831b; 
0x00041709: xchg ebp, eax; push 0x8dffffff; sub ah, 0x73; cli; call dword ptr [eax + 0x68]; 
0x00064fb4: xchg ebp, eax; pushal; idiv edi; call dword ptr [ebx - 0x75]; 
0x000fbd14: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0011e9f3: xchg ebp, eax; ret 0x2c3c; 
0x000ee057: xchg ebp, eax; ret 0x4c39; 
0x00131937: xchg ebp, eax; ret 0x4ce9; 
0x00132277: xchg ebp, eax; ret 0x50e9; 
0x0003ad49: xchg ebp, eax; ret 0x5409; 
0x00164da6: xchg ebp, eax; ret 0x540b; 
0x000e2fc9: xchg ebp, eax; ret 0x548d; 
0x00068997: xchg ebp, eax; ret 0x5689; 
0x000a538c: xchg ebp, eax; ret 0x6eb; 
0x0016a6a1: xchg ebp, eax; ret 0x7489; 
0x000ae80b: xchg ebp, eax; ret 0x7eb; 
0x0004f4c4: xchg ebp, eax; ret 0x8366; 
0x00108399: xchg ebp, eax; ret 0x8b52; 
0x000a7f19: xchg ebp, eax; ret 0x9eb; 
0x000fba1c: xchg ebp, eax; ret 0xa8db; 
0x000b4fc7: xchg ebp, eax; ret 0xb38b; 
0x00037cb6: xchg ebp, eax; ret 0xb60f; 
0x00052d4f: xchg ebp, eax; ret 0xbd83; 
0x0005ddeb: xchg ebp, eax; ret 0xc085; 
0x0007a058: xchg ebp, eax; ret 0xc483; 
0x000b5449: xchg ebp, eax; ret 0xc739; 
0x0010921d: xchg ebp, eax; ret 0xc985; 
0x00043206: xchg ebp, eax; ret 0xca21; 
0x001675de: xchg ebp, eax; ret 0xd008; 
0x0016777d: xchg ebp, eax; ret 0xd009; 
0x0007376c: xchg ebp, eax; ret 0xd089; 
0x00122b79: xchg ebp, eax; ret 0xd184; 
0x000431e2: xchg ebp, eax; ret 0xd189; 
0x000b6647: xchg ebp, eax; ret 0xd789; 
0x000fb452: xchg ebp, eax; ret 0xda21; 
0x000489e4: xchg ebp, eax; ret 0xe983; 
0x000a26b4: xchg ebp, eax; ret 0xeeb; 
0x000aa882: xchg ebp, eax; ret 0xf839; 
0x000f9c8b: xchg ebp, eax; ret 0xf980; 
0x000c88d2: xchg ebp, eax; ret 0xf981; 
0x00046109: xchg ebp, eax; ret 0xfbc1; 
0x0002edef: xchg ebp, eax; ret; 
0x000dee82: xchg ebp, eax; rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x000d1820: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0011baed: xchg ebp, eax; rol byte ptr [ebx - 0x4514fb40], 0xe8; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x000ff667: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000ff626: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00127ee3: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00074992: xchg ebp, eax; rol byte ptr [ebx - 0x49f0eb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0001b8a6: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; neg eax; ret; 
0x000770ca: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00126114: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x00127315: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x00045df6: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000e1e36: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x000aed0f: xchg ebp, eax; ror cl, 0xff; call dword ptr [ebx - 0x75]; 
0x000b0f6a: xchg ebp, eax; ror cl, 0xff; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x000aea7f: xchg ebp, eax; ror cl, 0xff; dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x363743]; call dword ptr [eax]; 
0x0002e594: xchg ebp, eax; sar dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0005feb6: xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x0005fd09: xchg ebp, eax; xor bh, 0xff; call dword ptr [esi + 0x6a]; 
0x000b907a: xchg ebp, edi; add al, byte ptr [eax]; add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x0005ca4a: xchg ebp, edi; xor al, 0xfa; call dword ptr [eax - 0x73]; 
0x0005098a: xchg ebp, edi; xor edi, edx; call dword ptr [eax - 1]; 
0x0001bf05: xchg ebp, edx; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call esi; 
0x000cc63f: xchg ebp, esp; dec eax; cli; call dword ptr [eax - 0x18]; 
0x0007fa7f: xchg ebx, eax; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x00093009: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00026641: xchg ebx, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; inc eax; jo 0x26647; call dword ptr [eax + 0x56]; 
0x000e3561: xchg ebx, eax; cli; call dword ptr [eax - 0x18]; 
0x000e19ea: xchg ebx, eax; cli; call dword ptr [eax - 0x73]; 
0x000c1065: xchg ebx, eax; cmc; jmp dword ptr [esi - 0x70]; 
0x0002ca86: xchg ebx, eax; fdiv dword ptr [eax - 6]; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x0002ca90: xchg ebx, eax; fdiv qword ptr [eax - 6]; jmp dword ptr [esi - 0x77]; 
0x0011c804: xchg ebx, eax; inc ebp; xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x000e1cec: xchg ebx, eax; inc ebx; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0011fa98: xchg ebx, eax; lock dec dword ptr [ebp - 0x560777a]; call dword ptr [eax - 0x73]; 
0x0012f255: xchg ebx, eax; mov al, byte ptr [0xf000032]; inc esp; ret 0xc483; 
0x001164c4: xchg ebx, eax; mov ecx, 0x89fffa57; test dword ptr [ebx + edi*8 - 1], esi; call dword ptr [esi + 0x52]; 
0x0012e404: xchg ebx, eax; nop; salc; hlt; call dword ptr [eax - 0x48]; 
0x00082cda: xchg ebx, eax; pop ecx; inc esp; cli; call dword ptr [ebp + 0x52]; 
0x0011fa91: xchg ebx, eax; pop edi; cli; call dword ptr [eax - 0x18]; 
0x0011de12: xchg ebx, eax; pop esi; cli; dec dword ptr [ecx + 0xfa6f3c6]; xchg edi, eax; ret 0xda80; 
0x0009c583: xchg ebx, eax; pop esi; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0010c73a: xchg ebx, eax; push eax; test edx, esi; call dword ptr [edx - 1]; 
0x00082d84: xchg ebx, eax; push ebx; inc esp; cli; call dword ptr [ebp + 0x52]; 
0x00077d6f: xchg ebx, eax; ret 0x16; 
0x000fe567: xchg ebx, eax; ret; 
0x0011690c: xchg ebx, eax; xchg esp, eax; pop esp; cli; call dword ptr [edx + 0x50]; 
0x0014ea71: xchg ecx, eax; adc al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00145b8c: xchg ecx, eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000f896f: xchg ecx, eax; add dword ptr [ecx], esi; cli; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000c8759: xchg ecx, eax; cli; call dword ptr [eax + 0x68]; 
0x000ccff3: xchg ecx, eax; cli; call dword ptr [eax - 0x18]; 
0x000c1f48: xchg ecx, eax; cli; call dword ptr [eax - 0x73]; 
0x000bfefa: xchg ecx, eax; cmc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000c4321: xchg ecx, eax; inc edi; cli; call dword ptr [ecx - 1]; 
0x00094894: xchg ecx, eax; jmp ecx; 
0x0010a869: xchg ecx, eax; lahf; push edi; cli; call dword ptr [edx + 0x50]; 
0x000b7241: xchg ecx, eax; mov ah, 0xe9; stc; inc dword ptr [ecx]; retf; jmp ebx; 
0x000e5f03: xchg ecx, eax; mov al, byte ptr [0x39fffa08]; fdiv dword ptr [esp + ebp - 0x7d]; ret 0x8301; 
0x00069953: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00153f31: xchg ecx, eax; mov dword ptr [ebx], 0x8b1c0300; jmp ebx; 
0x0006bd10: xchg ecx, eax; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00124d57: xchg ecx, eax; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0004a82e: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00033ead: xchg ecx, eax; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0x850f; 
0x000337cb: xchg ecx, eax; movsb byte ptr es:[edi], byte ptr [esi]; adc al, byte ptr [eax]; add byte ptr [ecx], cl; ret 0xab75; 
0x0012ffe4: xchg ecx, eax; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000fe113: xchg ecx, eax; push ebx; cli; call dword ptr [ecx + 0x51]; 
0x000573ab: xchg ecx, eax; ret; 
0x001023bd: xchg ecx, eax; test al, 0x26; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x0001a6ea: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000ba36d: xchg ecx, ebp; inc esi; cli; call dword ptr [eax - 0x18]; 
0x00058a92: xchg ecx, ebx; or dword ptr [eax], eax; add byte ptr [ebx - 0x4f37b], cl; inc dword ptr [ebx]; test byte ptr [eax - 0x630d4], bl; jmp eax; 
0x0012067f: xchg ecx, ebx; pop edi; cli; call dword ptr [eax - 0x18]; 
0x0003a859: xchg ecx, ecx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000eb722: xchg ecx, edi; dec dword ptr [ebp - 0x3fceff8a]; ret; 
0x00041a8f: xchg ecx, edi; inc dword ptr [ecx]; bnd jmp edx; 
0x0007d444: xchg edi, eax; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x001315db: xchg edi, eax; aam 0x2a; cli; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x0007d54c: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbbc], cl; inc eax; or al, 0x39; ret 0x870f; 
0x00082af5: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; je 0x82b24; insb byte ptr es:[edi], dx; call eax; 
0x000bf430: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x76abdbb4], cl; cli; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00050e3f: xchg edi, eax; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0005a55a: xchg edi, eax; and al, 0; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x000e2836: xchg edi, eax; and eax, dword ptr fs:[eax]; add byte ptr [ecx + 0x2364b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x00150aab: xchg edi, eax; clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014546b: xchg edi, eax; cld; jmp dword ptr [esi - 0x70]; 
0x000fd492: xchg edi, eax; cli; call dword ptr [eax - 0x18]; 
0x000fd3de: xchg edi, eax; cli; call dword ptr [eax - 0x73]; 
0x000e95f7: xchg edi, eax; hlt; dec dword ptr [ecx - 0x76e3dbbc]; ret; 
0x00101865: xchg edi, eax; int1; jmp dword ptr [esi - 0x70]; 
0x0011f643: xchg edi, eax; lock dec dword ptr [ebp - 0x560537f]; call dword ptr [eax - 0x73]; 
0x0007d355: xchg edi, eax; mov byte ptr [ecx - 6], al; call dword ptr [eax - 0x73]; 
0x00048a85: xchg edi, eax; mov dh, 0xff; dec dword ptr [ebx - 0x363f7b]; call dword ptr [ebx - 1]; 
0x0002b70c: xchg edi, eax; mov eax, 0xf0; lea ebx, [edi + 0x11a8]; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00069ea8: xchg edi, eax; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009dc5e: xchg edi, eax; mov esi, edx; ret; 
0x0005a73d: xchg edi, eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7bf00001], al; ret 0x13; 
0x000961d5: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00098b73: xchg edi, eax; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00026a72: xchg edi, eax; push es; das; cli; call dword ptr [edx + 0x50]; 
0x000fe0cd: xchg edi, eax; rcr byte ptr [eax + eax], 0x84; ror byte ptr [edi], 0x84; ret; 
0x000a9cb5: xchg edi, eax; ret 0x4439; 
0x00128a59: xchg edi, eax; ret 0x4bd; 
0x00128a4d: xchg edi, eax; ret 0xa75; 
0x000b0f76: xchg edi, eax; ret 0xbd39; 
0x0011bed8: xchg edi, eax; ret 0xc739; 
0x000394ff: xchg edi, eax; ret 0xd284; 
0x000c6ca8: xchg edi, eax; ret 0xda80; 
0x00049250: xchg edi, eax; ret 0xf039; 
0x00057c8d: xchg edi, eax; ret 0xffff; 
0x0003caa5: xchg edi, eax; ret; 
0x0010273a: xchg edi, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0011c79b: xchg edi, eax; test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [esi - 0x7f]; 
0x0003a680: xchg edi, ebx; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000f2703: xchg edx, eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x1077d], cl; jmp dword ptr [ebp - 0x75]; 
0x00028d7c: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x5a8467d], cl; call dword ptr [esi - 1]; 
0x00101c08: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0009dcde: xchg edx, eax; add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000e1186: xchg edx, eax; cli; call dword ptr [eax - 0x73]; 
0x00069a9a: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0011b5aa: xchg edx, eax; fdiv st(0); jmp dword ptr [esi - 0x70]; 
0x000e1d2c: xchg edx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000c1afa: xchg edx, eax; jns 0xc1b04; add byte ptr [ebx - 0x776ef3c], al; call eax; 
0x0008332b: xchg edx, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x70]; call dword ptr [eax]; 
0x0004a050: xchg edx, eax; mov byte ptr [0x85fffa33], al; sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x49fe9; ret 0x40c7; 
0x00129c2d: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0003a6aa: xchg edx, eax; out 0xfe, eax; dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [ebx + esi*2 - 6], edi; call dword ptr [eax - 0x73]; 
0x00043abd: xchg edx, eax; ret 0x1e89; 
0x00044371: xchg edx, eax; ret 0x689; 
0x0015e99e: xchg edx, eax; ret 0xb60f; 
0x000b6c5b: xchg edx, eax; ret 0xc281; 
0x0004886a: xchg edx, eax; ret 0xd320; 
0x000439cd: xchg edx, eax; ret 0xe89; 
0x00044517: xchg edx, eax; ret; 
0x000b6c90: xchg edx, eax; sal dl, 1; in al, dx; call dword ptr [ecx + 0x52]; 
0x00135972: xchg edx, eax; std; jmp dword ptr [esi - 0x70]; 
0x000e8d23: xchg edx, ecx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x000c1959: xchg edx, edi; inc esi; cli; call dword ptr [eax + 0x53]; 
0x0003d7bc: xchg edx, edi; xor bh, dl; call dword ptr [eax - 0x18]; 
0x0003a72d: xchg edx, esi; xor bh, dl; call dword ptr [eax - 0x18]; 
0x000e1905: xchg edx, esp; dec ecx; cli; call dword ptr [eax - 0x73]; 
0x0007f1bb: xchg esi, eax; aaa; inc ecx; cli; call dword ptr [eax - 0x73]; 
0x0014fa4b: xchg esi, eax; aam 0xfe; inc dword ptr [ecx + 0x40671c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ad3bf: xchg esi, eax; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + ecx*4 - 6], ebx; call dword ptr [eax - 0x18]; 
0x0005dde6: xchg esi, eax; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x0015403b: xchg esi, eax; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e8003: xchg esi, eax; and byte ptr [edx + edi*8], cl; inc dword ptr [ecx]; int1; jmp ecx; 
0x00145562: xchg esi, eax; cld; jmp dword ptr [esi - 0x70]; 
0x000ed08c: xchg esi, eax; cli; call dword ptr [eax - 0x18]; 
0x000ee492: xchg esi, eax; cli; call dword ptr [eax - 0x73]; 
0x000fa5a6: xchg esi, eax; cli; call dword ptr [esi - 0x7f]; 
0x00027ec6: xchg esi, eax; insd dword ptr es:[edi], dx; push cs; add byte ptr [ebx - 0x1bf73], cl; dec dword ptr [ebp - 0x590af7f]; call dword ptr [eax - 0x73]; 
0x000f8363: xchg esi, eax; je 0xf83b3; cli; call dword ptr [edx - 0x77]; 
0x001272c6: xchg esi, eax; jns 0x1272c7; jmp dword ptr [esi - 0x70]; 
0x0012479d: xchg esi, eax; mov al, 0xdc; hlt; call dword ptr [edx - 0x73]; 
0x0007d331: xchg esi, eax; mov byte ptr [ecx - 6], al; call dword ptr [eax - 0x73]; 
0x0007b29e: xchg esi, eax; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x00071661: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000f8382: xchg esi, eax; or al, 0x4c; cli; call dword ptr [edx - 0x77]; 
0x0011fa6b: xchg esi, eax; out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x001634fd: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00098c35: xchg esi, eax; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000e530f: xchg esi, eax; pushal; fsubp st(7); call dword ptr [edx + 0x6a]; 
0x00025a85: xchg esi, eax; ret 0x540a; 
0x00026997: xchg esi, eax; ret 0x550a; 
0x001194a3: xchg esi, eax; ret 0x5522; 
0x000b4738: xchg esi, eax; ret 0xb60f; 
0x000ad36b: xchg esi, eax; ret 0xc085; 
0x000ad3a7: xchg esi, eax; ret 0xd284; 
0x00022370: xchg esi, eax; ret 0xdd39; 
0x0011942e: xchg esi, eax; ret 0xf983; 
0x0011adfd: xchg esi, eax; ret 0xfe83; 
0x000b7b61: xchg esi, eax; ret; 
0x000e7bf1: xchg esi, edx; dec edx; cli; call dword ptr [eax - 0x18]; 
0x000509ea: xchg esi, esi; xor edi, edx; call dword ptr [eax - 0x18]; 
0x0009eb9c: xchg esi, esp; inc esp; cli; call dword ptr [eax - 0x73]; 
0x0014bc4d: xchg esp, eax; adc bh, bh; inc dword ptr [ecx + 0x43dafc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00024d51: xchg esp, eax; adc dword ptr [ecx], 0xf2ab0500; sbb eax, dword ptr [eax]; mov eax, dword ptr [eax + 0xfbc]; ret; 
0x0001f585: xchg esp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x2e], ch; cli; call dword ptr [eax - 0x18]; 
0x0001a6eb: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x0003141e: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x0006994b: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0001e18c: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x72c3dba4], cl; and dword ptr [eax], 0x69; cli; call dword ptr [eax - 0x73]; 
0x000a44c0: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbb4], cl; ret 0xe2d3; 
0x001680ae: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xac89; 
0x0009dd01: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0012c882: xchg esp, eax; add byte ptr [edx + ebp - 6], 0xff; jmp edx; 
0x001012ff: xchg esp, eax; add dword ptr [eax + 0x12], 0xd089fffa; ret; 
0x000e72a0: xchg esp, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00030e1d: xchg esp, eax; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0012d559: xchg esp, eax; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x000a586b: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00045c14: xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00166b7d: xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add dh, dh; ret; 
0x001688b2: xchg esp, eax; and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dba4], cl; ret 0x5c0b; 
0x00129f50: xchg esp, eax; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0006c211: xchg esp, eax; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x000e657e: xchg esp, eax; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000b4fbc: xchg esp, eax; and byte ptr [eax], al; add byte ptr [ecx], bh; cmp dword ptr [eax + 0xf000020], -0x6b; ret 0xb38b; 
0x001260ef: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x001452c8: xchg esp, eax; cdq; cld; jmp dword ptr [esi - 0x70]; 
0x00026792: xchg esp, eax; clc; call dword ptr [eax - 0x18]; 
0x000264ac: xchg esp, eax; clc; call dword ptr [ebp + 3]; 
0x0009f9fc: xchg esp, eax; clc; dec dword ptr [ebp - 0x572037e]; call dword ptr [eax - 0x73]; 
0x0002678b: xchg esp, eax; clc; dec dword ptr [ebp - 0x6b9ff87c]; clc; call dword ptr [eax - 0x18]; 
0x0009fa18: xchg esp, eax; clc; jmp dword ptr [esi - 0x70]; 
0x00021cc9: xchg esp, eax; cli; call dword ptr [eax - 0x18]; 
0x000e354e: xchg esp, eax; cli; call dword ptr [eax - 0x73]; 
0x0006028c: xchg esp, eax; idiv edi; call dword ptr [eax + 0x56]; 
0x0005f8ed: xchg esp, eax; idiv edi; call dword ptr [ebx + 0x6a]; 
0x0005f169: xchg esp, eax; idiv edi; call dword ptr [ecx - 1]; 
0x0005feb7: xchg esp, eax; idiv edi; call dword ptr [edx - 0x18]; 
0x0005ebd9: xchg esp, eax; idiv edi; call dword ptr [edx - 0x77]; 
0x0005f4fe: xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x0005e725: xchg esp, eax; idiv edi; dec dword ptr [edi]; test byte ptr [0x83000013], ch; ret; 
0x0005ee82: xchg esp, eax; idiv edi; inc dword ptr [ebx - 0x7a39fe1e]; idiv edi; jmp dword ptr [eax]; 
0x0003ca8c: xchg esp, eax; jae 0x3ca89; call dword ptr [eax - 0x73]; 
0x0003d5ce: xchg esp, eax; jae 0x3d5cb; call dword ptr [eax - 0x73]; 
0x0003d5f1: xchg esp, eax; jae 0x3d5ee; call dword ptr [eax - 0x73]; 
0x0003d61b: xchg esp, eax; jae 0x3d618; call dword ptr [eax - 0x73]; 
0x0003d63e: xchg esp, eax; jae 0x3d63b; call dword ptr [eax - 0x73]; 
0x0003d692: xchg esp, eax; jae 0x3d68f; call dword ptr [eax - 0x73]; 
0x0003d6b5: xchg esp, eax; jae 0x3d6b2; call dword ptr [eax - 0x73]; 
0x0003d6d8: xchg esp, eax; jae 0x3d6d5; call dword ptr [eax - 0x73]; 
0x0003d6fb: xchg esp, eax; jae 0x3d6f8; call dword ptr [eax - 0x73]; 
0x0003d71e: xchg esp, eax; jae 0x3d71b; call dword ptr [eax - 0x73]; 
0x0003d741: xchg esp, eax; jae 0x3d73e; call dword ptr [eax - 0x73]; 
0x0003d787: xchg esp, eax; jae 0x3d784; call dword ptr [eax - 0x73]; 
0x0003d7aa: xchg esp, eax; jae 0x3d7a7; call dword ptr [eax - 0x73]; 
0x0003d7cd: xchg esp, eax; jae 0x3d7ca; call dword ptr [eax - 0x73]; 
0x0003d7f0: xchg esp, eax; jae 0x3d7ed; call dword ptr [eax - 0x73]; 
0x0003d813: xchg esp, eax; jae 0x3d810; call dword ptr [eax - 0x73]; 
0x00033d2b: xchg esp, eax; jno 0x33d28; call dword ptr [eax - 0x73]; 
0x00051410: xchg esp, eax; lea eax, [eax]; ret; 
0x00153d2e: xchg esp, eax; leave; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00168023: xchg esp, eax; mov bl, 0xc8; retf 0xfffa; add edx, ebx; jmp edx; 
0x00056bbd: xchg esp, eax; mov ch, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x0006c748: xchg esp, eax; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00026143: xchg esp, eax; mov ebx, 0xfffffc1c; test edx, edx; je 0x2614f; call edx; 
0x000262cc: xchg esp, eax; mov ebx, 0xfffffc20; test edx, edx; je 0x262de; mov dword ptr [esp], eax; call edx; 
0x00133cb8: xchg esp, eax; movsd dword ptr es:[edi], dword ptr [esi]; cli; call dword ptr [eax - 0x18]; 
0x001305cb: xchg esp, eax; out dx, eax; call dword ptr [eax - 0x73]; 
0x00116859: xchg esp, eax; pop esp; cli; call dword ptr [eax + 0x55]; 
0x0011690d: xchg esp, eax; pop esp; cli; call dword ptr [edx + 0x50]; 
0x0013d056: xchg esp, eax; ret 0x1389; 
0x000b3c0d: xchg esp, eax; ret 0x2be9; 
0x00025a6a: xchg esp, eax; ret 0x3a3c; 
0x000eeb84: xchg esp, eax; ret 0x3e9; 
0x00107d59: xchg esp, eax; ret 0x4483; 
0x00164980: xchg esp, eax; ret 0x4c83; 
0x0005f7a0: xchg esp, eax; ret 0x5352; 
0x000b3c56: xchg esp, eax; ret 0x5438; 
0x0011d2cf: xchg esp, eax; ret 0x5484; 
0x00025b52: xchg esp, eax; ret 0x5f3c; 
0x00079f19: xchg esp, eax; ret 0x6e2b; 
0x0001ae01: xchg esp, eax; ret 0x748b; 
0x000d1a41: xchg esp, eax; ret 0x7b89; 
0x000a0853: xchg esp, eax; ret 0x7c83; 
0x0010fdcf: xchg esp, eax; ret 0x7c8b; 
0x0006769b: xchg esp, eax; ret 0x7f3c; 
0x0013eef7: xchg esp, eax; ret 0x9e3b; 
0x0011df0a: xchg esp, eax; ret 0xa3c; 
0x0009e95f: xchg esp, eax; ret 0xb883; 
0x000b3ac8: xchg esp, eax; ret 0xc031; 
0x0002e099: xchg esp, eax; ret 0xc085; 
0x0013fcb6: xchg esp, eax; ret 0xc483; 
0x000dd6dc: xchg esp, eax; ret 0xc985; 
0x0001ab3d: xchg esp, eax; ret 0xca21; 
0x00069061: xchg esp, eax; ret 0xd008; 
0x00069040: xchg esp, eax; ret 0xd009; 
0x000ddf45: xchg esp, eax; ret 0xd020; 
0x0002582b: xchg esp, eax; ret 0xd108; 
0x00039c96: xchg esp, eax; ret 0xd120; 
0x0001af30: xchg esp, eax; ret 0xd284; 
0x000da050: xchg esp, eax; ret 0xe2c1; 
0x000a2708: xchg esp, eax; ret 0xeb89; 
0x00026987: xchg esp, eax; ret 0xf209; 
0x000e3ebf: xchg esp, eax; ret 0xf631; 
0x00031b6d: xchg esp, eax; ret 0xf685; 
0x000a7f69: xchg esp, eax; ret 0xf883; 
0x00025a74: xchg esp, eax; ret 0xfa09; 
0x000619db: xchg esp, eax; ret 0xff52; 
0x0011fdc2: xchg esp, eax; ret 0xff83; 
0x00051f33: xchg esp, eax; ret; 
0x000d01e6: xchg esp, eax; rol byte ptr [ebp + 0xf5356d2], 0x94; ret; 
0x00108b8a: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x000e3eb5: xchg esp, eax; rol byte ptr [ebx - 0x14f43], 0xff; add dword ptr [edi], ecx; xchg esp, eax; ret 0xf631; 
0x000df206: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00050eb8: xchg esp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000410de: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001316b7: xchg esp, eax; ror byte ptr [edi], 0xb6; rol bl, 0x8d; jbe 0x1316c0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x00131797: xchg esp, eax; ror byte ptr [edi], 0xb6; rol bl, 0x8d; jbe 0x1317a0; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x00131d67: xchg esp, eax; ror byte ptr [edi], 0xb6; rol bl, 0x8d; jbe 0x131d70; mov eax, dword ptr [edx + 4]; jmp dword ptr [eax + 4]; 
0x0007b35f: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00030a76: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000db274: xchg esp, eax; ror dword ptr [edi], 0xa3; ret 0xcf89; 
0x00041a8c: xchg esp, eax; sahf; mov al, 0x87; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x00070f9f: xchg esp, eax; sar dword ptr [ebx], 0x9e; mov eax, 0xfffffff; xchg esp, eax; ret 0xd108; 
0x000f8b81: xchg esp, eax; sar dword ptr [esp + ebx*2], 0xf; xchg esp, eax; ret; 
0x0001be9c: xchg esp, eax; sldt word ptr [eax]; ret; 
0x000a375b: xchg esp, eax; stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x56]; 
0x0001acd8: xchg esp, eax; xchg ah, al; in eax, 0xf9; inc dword ptr [ecx]; bnd jmp edx; 
0x000c72ab: xchg esp, eax; xchg byte ptr [eax - 0xa], al; stc; inc dword ptr [ecx]; bnd jmp edx; 
0x000524a8: xchg esp, eax; xchg dword ptr [eax + 0x1fff9ca], eax; cli; jmp edx; 
0x000cebb2: xchg esp, eax; xchg dword ptr [esp + edi*8 - 0x5fe0007], esi; jmp edx; 
0x000ece51: xchg esp, eax; xchg ebp, eax; cli; call dword ptr [eax - 0x18]; 
0x000fece2: xchg esp, eax; xchg edi, eax; cli; call dword ptr [eax - 0x73]; 
0x00149c4d: xchg esp, eax; xor bh, bh; inc dword ptr [ecx + 0x45b2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c1eff: xchg esp, eax; xor dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4a], ecx; cli; call dword ptr [eax - 0x73]; 
0x00109919: xchg esp, ebp; cdq; cli; call dword ptr [eax - 0x73]; 
0x000e7e2c: xchg esp, ebp; dec edx; cli; call dword ptr [eax - 0x18]; 
0x000232a8: xchg esp, ebp; insd dword ptr es:[edi], dx; cli; call dword ptr [eax - 0x73]; 
0x0012065c: xchg esp, ebp; lahf; cli; call dword ptr [eax - 0x18]; 
0x000954eb: xchg esp, ecx; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0001e80e: xchg esp, edi; insb byte ptr es:[edi], dx; cli; call dword ptr [eax - 0x18]; 
0x0005ca3e: xchg esp, esi; jne 0x5ca3c; call dword ptr [eax + 0x68]; 
0x0005cbdb: xchg esp, esi; jne 0x5cbd9; call dword ptr [eax + 0x68]; 
0x000afea8: xchg esp, esi; stosd dword ptr es:[edi], eax; cli; call dword ptr [eax + 0x53]; 
0x0007d43e: xchg esp, esp; mov edx, edi; dec dword ptr [ebp - 0x5bec869]; call dword ptr [eax - 0x73]; 
0x00043b85: xlatb; adc al, 0; add byte ptr [ebx - 0x4c14ef3c], al; nop; add eax, dword ptr [esp]; ret; 
0x000ff4a7: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x00152c64: xlatb; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013e28f: xlatb; bnd jmp dword ptr [ecx]; 
0x0013e28f: xlatb; bnd jmp dword ptr [ecx]; ret 0xc483; 
0x0008f9b5: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0007c775: xlatb; je 0x7c797; mov ebp, dword ptr [esi - 0x170]; sub esp, 0xc; push 0; call dword ptr [ebp]; 
0x0009d1bc: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00161b35: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0009cdb1: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b6c57: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00145ffd: xlatb; movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000fe21d: xlatb; or eax, 0x838d0000; test al, 0x55; cli; call dword ptr [ecx + 0x51]; 
0x000f5ba8: xlatb; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; ret; 
0x001174b5: xlatb; pop ds; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x000f85c8: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0011edb4: xlatb; pop esi; cli; call dword ptr [esi - 0x18]; 
0x0009488f: xlatb; push cs; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000949b6: xlatb; push cs; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0014faab: xlatb; push es; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00161622: xlatb; ret 0x498d; 
0x0009c9e8: xlatb; ret 0xc085; 
0x0008b9a2: xlatb; ret; 
0x0016344c: xlatb; retf 0xf66; xlatb; ret; 
0x0009d26f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00161bf6: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0009cbb0: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0009ce75: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0009ce46: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00161c35: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016175e: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0009cb76: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00162849: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x162860; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0009cde2: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x001620a4: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x161cd0; xor eax, eax; ret; 
0x0007a8c5: xor ah, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000838d0: xor ah, 0x8a; cli; call dword ptr [eax + 0x68]; 
0x000a3787: xor ah, 0xab; cli; call dword ptr [eax + 0x53]; 
0x000ecbba: xor ah, ah; bnd jmp dword ptr [esi - 0x70]; 
0x0008b54a: xor ah, byte ptr [edi]; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000ff43b: xor al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012b253: xor al, 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012f24f: xor al, 0; add byte ptr [ecx], bh; ror byte ptr [ebp + 0x32a093], 1; add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x0001beb1: xor al, 0x10; adc al, byte ptr [eax]; add eax, 0x1c814b; mov eax, dword ptr [eax + 0xf98]; ret; 
0x0001b5b1: xor al, 0x19; adc al, byte ptr [eax]; add eax, 0x1c8a4b; mov eax, dword ptr [eax - 0x108]; add eax, dword ptr gs:[0]; ret; 
0x0007a885: xor al, 0x19; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0007ab46: xor al, 0x1a; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000d19e7: xor al, 0x24; call 0x190e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00123861: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x00024d18: xor al, 0x24; call ebx; 
0x00116879: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0013cef2: xor al, 0x24; ret; 
0x00044d87: xor al, 0x29; ret 0x5489; 
0x001135c6: xor al, 0x2b; add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000b2552: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00077832: xor al, 0x39; ret 0x850f; 
0x000e47c2: xor al, 0x4a; cli; call dword ptr [eax - 0x73]; 
0x00071131: xor al, 0x50; call ebx; 
0x0009fad2: xor al, 0x50; push dword ptr [ebp + 8]; call ebx; 
0x0009f748: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000751d1: xor al, 0x50; push ebx; call dword ptr [esi + 0x48]; 
0x0009fd10: xor al, 0x50; push edi; call esi; 
0x0006b371: xor al, 0x52; call eax; 
0x0009fd07: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x0010e266: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x6d8e0; add esp, 0x2c; ret; 
0x0010d276: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x72a00; add esp, 0x2c; ret; 
0x0007587d: xor al, 0x52; push esi; call dword ptr [eax + 0x48]; 
0x00032633: xor al, 0x56; call edi; 
0x00066457: xor al, 0x56; push dword ptr [esp + 0x50]; push ebp; call dword ptr [ebx + 0x1c]; 
0x00124ebd: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001398e0: xor al, 0x5b; pop esi; jmp eax; 
0x000f5ae3: xor al, 0x5b; pop esi; pop edi; ret; 
0x00034258: xor al, 0x5b; pop esi; ret 4; 
0x000bf60e: xor al, 0x5b; pop esi; ret; 
0x001266f5: xor al, 0x5b; ret; 
0x0011f2c2: xor al, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x0013b043: xor al, 0x61; cmc; jmp dword ptr [esi - 9]; 
0x0012e05c: xor al, 0x62; cli; call dword ptr [eax - 0x73]; 
0x0004efac: xor al, 0x74; cli; call dword ptr [eax - 0x18]; 
0x000b2555: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0002dff0: xor al, 0x83; in al, dx; or al, 0xff; je 0x2e01b; cmp al, 0xe8; ret; 
0x000342f2: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00022591: xor al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0006a997: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00022ec8: xor al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0013ee1b: xor al, 0x83; rol byte ptr [ecx], 0x89; ret 0x4e75; 
0x000212b1: xor al, 0x85; sar byte ptr [eax], 0xf; inc ebp; ret 0x4489; 
0x00085138: xor al, 0x87; idiv bh; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000f51e4: xor al, 0x89; dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x000d50a2: xor al, 0x89; je 0xd50ca; cmp al, 0x29; ret 0x448b; 
0x00073b4b: xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000c0ce5: xor al, 0x89; rdtsc; jmp dword ptr [esi - 0x77]; 
0x0004f6be: xor al, 0x89; ret 0xb0e9; 
0x00070978: xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x000ecd6b: xor al, 0x8b; dec esp; and al, 0x20; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000ecfab: xor al, 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00043897: xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0012f6f4: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000325bb: xor al, 0x8d; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0011ed47: xor al, 0x8d; sub dword ptr [eax], 0x70; cli; call dword ptr [eax - 0x18]; 
0x000ca124: xor al, 0x91; cli; call dword ptr [eax - 0x73]; 
0x000fd491: xor al, 0x97; cli; call dword ptr [eax - 0x18]; 
0x001016ec: xor al, 0xb8; jne 0x1016f0; add byte ptr [eax], al; mov ebx, 3; or esi, 0x100; call dword ptr gs:[0x10]; 
0x00083eab: xor al, 0xd; idiv edi; cmovne edx, eax; mov eax, edx; ret; 
0x00027a5b: xor al, 0xe4; call dword ptr [eax - 0x73]; 
0x000f7b9b: xor al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0002936a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002934a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002932a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x000292aa: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000292ea: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002924a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x000292ca: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002928a: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002920a: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0002926a: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002930a: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002922a: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x000513f1: xor al, 0xfa; call dword ptr [eax + 0x56]; 
0x0005ca4c: xor al, 0xfa; call dword ptr [eax - 0x73]; 
0x00051640: xor al, 0xfa; call dword ptr [ebx + 0x50]; 
0x000515b0: xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x000517f3: xor al, 0xfa; call dword ptr [esi - 0x77]; 
0x000ce72f: xor al, 0xfc; stc; inc dword ptr [ecx]; iretd; jmp edi; 
0x00025c81: xor al, 0xff; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00149a65: xor al, 0xff; inc dword ptr [ecx + 0x45d18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009fe6e: xor al, 0xff; je 0x9fe96; inc eax; push edi; call esi; 
0x000c1d09: xor al, 0xff; je 0xc1d31; inc eax; call ebx; 
0x001063cc: xor al, 0xff; xor byte ptr [ebp - 0x5a96379], cl; call dword ptr [eax + 0x53]; 
0x000f795c: xor al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b2448: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000ef43b: xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000bfa22: xor al, 3; adc byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0015d3f3: xor al, 3; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0004a0fb: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0014c54b: xor al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ff12f: xor al, al; or eax, ecx; ret; 
0x00094f3a: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x0014ca4e: xor al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00124572: xor al, byte ptr [eax]; add byte ptr [ebp - 0x7cf88b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00123e4b: xor al, byte ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012f29d: xor al, byte ptr [eax]; add byte ptr [edi], cl; inc ebp; ret 0xc483; 
0x0012f257: xor al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc483; 
0x00123912: xor al, byte ptr [eax]; add byte ptr [edx], al; add esp, 8; lea eax, [ebx + 0x3220]; pop ebx; ret; 
0x0006d595: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00024fdf: xor al, byte ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000ed251: xor al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0001b70d: xor al, byte ptr [ebx + 0x747708f8]; mov ecx, dword ptr [esp + 4]; mov edx, dword ptr [ecx + eax*4 - 0x77000]; add edx, ecx; jmp edx; 
0x000bee3a: xor al, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000c08e7: xor al, byte ptr [ecx + 0x15cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ecb7e: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123e4a: xor al, byte ptr fs:[eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0006d7ff: xor al, ch; imul edi, dword ptr [edi - 1], -1; add esp, 0x1c; ret; 
0x0004a7ce: xor al, ch; in al, dx; pop esp; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000511be: xor al, ch; jl 0x511c9; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000daf66: xor al, ch; jl 0xdaf4b; inc dword ptr [ebx - 0x6316ef3c]; idiv edi; call dword ptr [eax - 1]; 
0x00115cea: xor al, ch; jo 0x115cef; bnd jmp dword ptr [esi - 0x77]; 
0x0009be03: xor al, ch; lock adc byte ptr [edx], cl; add byte ptr [ecx + 0xe658bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00098b6a: xor al, ch; mov dword ptr [ebx + 0xa], eax; add byte ptr [ecx + 0xe97a4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0008b427: xor al, ch; mov ebx, 0x83fff8dc; les ebx, ptr [eax]; pop ebx; ret; 
0x000b32e1: xor al, ch; or dword ptr [ecx], esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ad54f: xor al, ch; or ebp, dword ptr [edx + edi*8 + 0x1cc483ff]; ret; 
0x0005022f: xor al, ch; or edx, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00128248: xor al, ch; ret 0xf40f; 
0x000fe1c8: xor al, ch; ret 0xfa00; 
0x000b33ce: xor al, ch; sbb al, 0x20; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005118f: xor al, ch; stosd dword ptr es:[edi], eax; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ccda4: xor bh, 0x48; cli; call dword ptr [eax - 0x18]; 
0x000f7bb9: xor bh, 0x4b; cli; jmp dword ptr [ebp - 0x75]; 
0x0005fdc0: xor bh, 0xff; call dword ptr [ebx + 0x6a]; 
0x0005fd0a: xor bh, 0xff; call dword ptr [esi + 0x6a]; 
0x0008f28c: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000f7a62: xor bh, al; dec dword ptr [ecx + 0x76b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f7a82: xor bh, al; inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00149e55: xor bh, bh; inc dword ptr [ecx + 0x45928c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149c4e: xor bh, bh; inc dword ptr [ecx + 0x45b2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0001bcca: xor bh, bh; jae 0x1bcd2; call esi; 
0x0012c57b: xor bh, bh; je 0x12c5a3; xor byte ptr [eax - 0x73], dl; cmp dword ptr [ecx + 0x62], -6; call dword ptr [edi - 0x17]; 
0x0011b9fa: xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x000ef979: xor bh, bh; jne 0xef989; call dword ptr [ebp + 0x24]; 
0x000efc49: xor bh, bh; jne 0xefc59; call dword ptr [ebp + 0x24]; 
0x000efcba: xor bh, bh; jne 0xefcca; call dword ptr [ebp + 0x24]; 
0x000f09f9: xor bh, bh; jne 0xf0a09; call dword ptr [ebp + 0x24]; 
0x000f0cc9: xor bh, bh; jne 0xf0cd9; call dword ptr [ebp + 0x24]; 
0x000f0d3a: xor bh, bh; jne 0xf0d4a; call dword ptr [ebp + 0x24]; 
0x0009c4f1: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0002e56b: xor bh, dl; call dword ptr [eax + 0x53]; 
0x000392d1: xor bh, dl; call dword ptr [eax + 0x57]; 
0x0002e73b: xor bh, dl; call dword ptr [eax - 0x18]; 
0x0003caa0: xor bh, dl; call dword ptr [eax - 0x18]; xchg edi, eax; ret; 
0x000392a1: xor bh, dl; call dword ptr [esi + 0x6a]; 
0x0003c162: xor bh, dl; dec dword ptr [ebp - 0x39f49]; call dword ptr [esi + 0x6a]; 
0x0004fa7d: xor bh, dl; dec dword ptr [ecx - 0x9ebdb84]; ret 0xf50; 
0x0002f4c0: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0011922a: xor bl, byte ptr [edx - 1]; jmp dword ptr [esi - 0x70]; 
0x00029472: xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00135158: xor byte ptr [0x8d500000], dh; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x000f6298: xor byte ptr [eax + 0x154], bh; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ffb5f: xor byte ptr [eax + 0x178], bh; call dword ptr gs:[0x10]; 
0x000850ec: xor byte ptr [eax + 0x450ffff7], 0xd0; mov eax, edx; ret; 
0x00027d4f: xor byte ptr [eax + 0x6f], 0xfa; call dword ptr [eax - 0x18]; 
0x000a49c1: xor byte ptr [eax + 0x73], 0xfa; call dword ptr [eax - 0x73]; 
0x0014cc1b: xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bed5a: xor byte ptr [eax - 0x17], dl; dec esp; loope 0xbed5f; call dword ptr [edx + 0x50]; 
0x000bed50: xor byte ptr [eax - 0x17], dl; out dx, eax; in eax, 0xff; call dword ptr [edx + 0x51]; 
0x00136fb0: xor byte ptr [eax - 0x18], dl; sub dword ptr [edi - 0xb], eax; jmp dword ptr [ebp - 0x5f]; 
0x0011cfb3: xor byte ptr [eax - 0x62], 0xfa; call dword ptr [eax - 0x73]; 
0x001348ad: xor byte ptr [eax - 0x73], dl; and dword ptr [esi - 0x72b00000], 0xffffff83; push eax; dec edx; cli; call dword ptr [eax + 0x6a]; 
0x0012c57f: xor byte ptr [eax - 0x73], dl; cmp dword ptr [ecx + 0x62], -6; call dword ptr [edi - 0x17]; 
0x00028be1: xor byte ptr [eax - 0x76000001], 0x31; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000865a3: xor byte ptr [eax - 1], 0x2a; cmp eax, edx; jne 0x865a0; mov eax, ecx; ret; 
0x001217a4: xor byte ptr [eax - 6], ah; call dword ptr [eax - 0x18]; 
0x0007ab06: xor byte ptr [eax], 0x1a; add byte ptr [eax], al; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00121f8c: xor byte ptr [eax], 0xa1; cli; call dword ptr [eax - 0x18]; 
0x000ddf3a: xor byte ptr [eax], al; add byte ptr [eax], al; add al, al; call 0xfe06447; xchg esp, eax; ret 0xd020; 
0x0012edff: xor byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x001078b4: xor byte ptr [eax], bl; int1; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009c4f0: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x000b2540: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000a36ec: xor byte ptr [ebp + 0x428b0076], cl; add al, 0x83; ret 0x8304; 
0x000c1d00: xor byte ptr [ebp + 0x504c2444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call ebx; 
0x00069b31: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00096c50: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000fcfda: xor byte ptr [ebp - 0x5a4127d], cl; call dword ptr [eax + 0x6a]; 
0x000fcb5f: xor byte ptr [ebp - 0x5a4127d], cl; call dword ptr [eax - 1]; 
0x000fd1aa: xor byte ptr [ebp - 0x5a9607d], cl; call dword ptr [eax + 0x6a]; 
0x001063ce: xor byte ptr [ebp - 0x5a96379], cl; call dword ptr [eax + 0x53]; 
0x000c41de: xor byte ptr [ebp - 0x5b8977a], cl; call dword ptr [eax + 0x53]; 
0x000c19b2: xor byte ptr [ebp - 0x5b8f17b], cl; call dword ptr [eax + 0x53]; 
0x000b8a1b: xor byte ptr [ebp - 0x5b92980], cl; call dword ptr [eax + 0x56]; 
0x000b88ee: xor byte ptr [ebp - 0x5b93280], cl; call dword ptr [eax + 0x56]; 
0x00028d77: xor byte ptr [ebp - 0x6d77f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x5a8467d], cl; call dword ptr [esi - 1]; 
0x0012010c: xor byte ptr [ebp - 0x7c720010], cl; adc al, 0xa1; cli; call dword ptr [eax + 0x68]; 
0x0013c20e: xor byte ptr [ebp - 0xb], dh; call dword ptr [eax - 0x18]; 
0x000db6a2: xor byte ptr [ebx + 0x114868c], cl; cli; inc dword ptr [ecx]; int1; jmp ecx; 
0x000c66ce: xor byte ptr [ebx + 0x19c090], cl; add byte ptr [ebp - 0x47d08a2e], al; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002919b: xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00130642: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000f1d05: xor byte ptr [ebx + 0x4d8110c4], al; sub byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x39]; 
0x001269da: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0009c0a6: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00098c71: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x0006e9d1: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0001dd67: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0001b63e: xor byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0002f426: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0010967e: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x00070f84: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000955d7: xor byte ptr [ebx + esi*8 + 0x18e8ffff], 0x79; or al, byte ptr [eax]; add ecx, 0xecaff; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0011acff: xor byte ptr [ebx - 0x10775], cl; jmp dword ptr [ebp - 0x39]; 
0x0006b11f: xor byte ptr [ebx - 0x1077b], cl; jmp dword ptr [ebp - 0x39]; 
0x00050385: xor byte ptr [ebx - 0x1077d], cl; dec dword ptr [ebx - 0x1774d]; dec dword ptr [ebx - 0x12755]; jmp dword ptr [ebp - 0x75]; 
0x0012db1f: xor byte ptr [ebx - 0x10780], cl; jmp dword ptr [ebp - 0x75]; 
0x000ad7eb: xor byte ptr [ebx - 0x16b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001036c5: xor byte ptr [ebx - 0x16b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000cdf66: xor byte ptr [ebx - 0x18], dl; ret; 
0x000ec74a: xor byte ptr [ebx - 0x3f7afbc0], cl; jne 0xec770; mov eax, 0x129; call dword ptr gs:[0x10]; 
0x00057449: xor byte ptr [ebx - 0x4577b], cl; inc dword ptr [ebp + 0x19850fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x10780]; jmp dword ptr [ebp - 0x39]; 
0x00031cb8: xor byte ptr [ebx - 0x47c7dbac], cl; mov cl, 0; add byte ptr [eax], al; mov ecx, edi; mov esi, 8; call dword ptr gs:[0x10]; 
0x000394fa: xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x0001afca: xor byte ptr [ebx - 0x72e7db8c], cl; xchg dh, ah; sub edi, edx; call dword ptr [eax - 0x75]; 
0x00115280: xor byte ptr [ebx - 0x72efdbbc], cl; and byte ptr [edi], 0x5c; cli; call dword ptr [eax - 0x73]; 
0x00114f41: xor byte ptr [ebx - 0x72efdbbc], cl; and byte ptr [edx], 0x4b; cli; call dword ptr [eax + 0x6a]; 
0x00070974: xor byte ptr [ebx - 0x74cbdb8c], cl; adc esi, esi; ret 0xf08; 
0x00098b67: xor byte ptr [ebx - 0x7617cf40], al; inc ebx; or al, byte ptr [eax]; add ecx, 0xe97a4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011e046: xor byte ptr [ebx - 0x7a72f714], al; mov ah, 0x31; cli; call dword ptr [eax + 0x56]; 
0x000e43e8: xor byte ptr [ebx - 0x7af00108], al; dec ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x18f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e45f9: xor byte ptr [ebx - 0x7af00108], al; in al, dx; add byte ptr [eax], al; add byte ptr [ebx - 0x16773], cl; jmp dword ptr [ebp - 0x75]; 
0x0009be00: xor byte ptr [ebx - 0xf17cf40], al; adc byte ptr [edx], cl; add byte ptr [ecx + 0xe658bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001292ba: xor byte ptr [ebx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0010d59e: xor byte ptr [ebx], 0x59; cli; call dword ptr [eax - 0x18]; 
0x00138b52: xor byte ptr [ebx], 0x64; cli; call dword ptr [eax - 0x18]; 
0x00138b52: xor byte ptr [ebx], 0x64; cli; call dword ptr [eax - 0x18]; ret; 
0x0006e9cc: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000e635b: xor byte ptr [ecx + 0x36cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ee2d2: xor byte ptr [ecx + 0x39242454], cl; ror byte ptr [edi], 1; inc edx; ret 0xc001; 
0x000b3ff0: xor byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x000f6100: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x000ca123: xor byte ptr [ecx + edx*4], 0xfa; call dword ptr [eax - 0x73]; 
0x000bf224: xor byte ptr [ecx - 0x3600f787], al; lcall 0x194, 0xb872773b; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00031d0d: xor byte ptr [ecx - 0x743a7607], cl; push esp; and al, 0x38; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00120ab9: xor byte ptr [ecx], 0; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001200d2: xor byte ptr [ecx], 0; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012017b: xor byte ptr [ecx], 0; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x001088e9: xor byte ptr [ecx], 0x57; cli; call dword ptr [eax - 1]; 
0x000ef1fe: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00030e1f: xor byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0007b662: xor byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000b4226: xor byte ptr [ecx], al; in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x0009ced5: xor byte ptr [ecx], al; ret 0x267c; 
0x000b253d: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000e5fdd: xor byte ptr [ecx], bh; ret 0x2674; 
0x000de5de: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x001336a5: xor byte ptr [ecx], ch; ret 0x5356; 
0x00044eca: xor byte ptr [ecx], ch; ret 0x5489; 
0x00103052: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x001039fa: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x000c7189: xor byte ptr [ecx], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x00095550: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008b6d4: xor byte ptr [edi + 0x5e], bl; ret; 
0x0002941b: xor byte ptr [edi + edi*8 - 1], 0xff; add eax, dword ptr gs:[0]; ret; 
0x000fd490: xor byte ptr [edi + edx*4], 0xfa; call dword ptr [eax - 0x18]; 
0x0011b8fb: xor byte ptr [edi - 0xd], dh; call dword ptr [eax - 0x73]; 
0x0009cc32: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0008f156: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00036e8d: xor byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x000bb95d: xor byte ptr [edi], cl; test byte ptr [ecx + esi*8 - 0x47c0001], bl; sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x000a5380: xor byte ptr [edi], cl; test byte ptr [ecx], bh; or al, 0; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x000a26a8: xor byte ptr [edi], cl; test byte ptr [ecx], dh; or al, 0; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0xeeb; 
0x000a70c0: xor byte ptr [edi], cl; xchg edi, eax; ret; 
0x0002e097: xor byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x00084009: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000a4925: xor byte ptr [edx + 0x32], 0xfa; call dword ptr [eax - 0x18]; 
0x00147a19: xor byte ptr [edx + 0x5b], 0xfc; jmp dword ptr [esi - 0x70]; 
0x000c7a2c: xor byte ptr [edx + 4], dh; add al, ch; mov eax, 0x81000754; ret 0xc5cb; 
0x000fa00a: xor byte ptr [edx + esi*8], al; jmp dword ptr [esi - 0x70]; 
0x00150a19: xor byte ptr [edx - 0x35], 0xfb; jmp dword ptr [esi - 0x70]; 
0x0012f33c: xor byte ptr [edx], 0; add byte ptr [edi], cl; inc ebp; ret 0xc483; 
0x00148059: xor byte ptr [edx], 0x55; cld; jmp dword ptr [esi - 0x70]; 
0x00161bfc: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007ab07: xor byte ptr [edx], bl; add byte ptr [eax], al; pop ebx; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00037a15: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x38270; add esp, 0x1c; ret; 
0x00037ad5: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3e100; add esp, 0x1c; ret; 
0x000a0805: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xa7e10; add esp, 0x1c; ret; 
0x000a0474: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x00120a87: xor byte ptr [esi + 0x68fffa5f], 0x67; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc byte ptr [eax], 0xa0; cli; call dword ptr [eax - 0x18]; 
0x00120bc4: xor byte ptr [esi + 0x68fffa5f], 6; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb byte ptr [eax - 0x60], 0xfa; call dword ptr [eax - 0x18]; 
0x0015d3d1: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0016161f: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x0009cafb: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0013e28b: xor byte ptr [esi - 0x18], dl; jle 0x13e267; bnd jmp dword ptr [ecx]; 
0x0013e28b: xor byte ptr [esi - 0x18], dl; jle 0x13e267; bnd jmp dword ptr [ecx]; ret 0xc483; 
0x0009e71f: xor byte ptr [esi - 0x19], 0x89; ret; 
0x0001d42e: xor byte ptr [esi - 0x1d], bh; call dword ptr [eax - 0x73]; 
0x0014585c: xor byte ptr [esi - 0x3f7a0004], bh; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00124eb5: xor byte ptr [esp + esi*8], cl; call dword ptr [esi - 0x73]; 
0x001618c6: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000498bc: xor ch, 0xfd; dec dword ptr [ebx - 0x365b43]; dec dword ptr [ebp - 0x58c0779]; call dword ptr [eax - 0x73]; 
0x0009cfc6: xor ch, ch; add eax, ecx; pop edi; ret; 
0x0010d3c2: xor ch, dh; jmp dword ptr [esi - 0x70]; 
0x0005184e: xor cl, 0x33; cli; call dword ptr [eax - 0x18]; 
0x00101a37: xor cl, bl; int1; call dword ptr [eax - 0x18]; 
0x000fba11: xor cl, bl; ror byte ptr [edi], 0x9e; ret; 
0x0008b0ba: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x00085551: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x0008078d: xor cl, byte ptr [ebx - 0x19772]; jmp dword ptr [ebp - 0x75]; 
0x0001a954: xor cl, byte ptr [ebx - 0x9ebdba4]; ret; 
0x0008b002: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c16c5: xor cl, byte ptr [ecx + 0x5e5b047a]; pop edi; ret; 
0x000bc5c1: xor cl, ch; stosd dword ptr es:[edi], eax; out 0xff, al; call dword ptr [eax + 0x51]; 
0x0009b6c3: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00052428: xor cl, cl; stc; inc dword ptr [ecx]; stc; jmp ecx; 
0x00105ff2: xor cl, dh; jmp dword ptr [ebp - 0x77]; 
0x0010a1ee: xor dh, 0x57; cli; call dword ptr [eax - 0x75]; 
0x0010ca84: xor dh, 0x58; cli; call dword ptr [edx - 0x17]; 
0x0009377c: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0001ce5c: xor dh, al; adc dword ptr [eax], eax; mov dword ptr [esp], ebx; call esi; 
0x0011fc2d: xor dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x000851f4: xor dh, dh; dec dword ptr [ebx + 0xb099]; add dh, dh; ret; 
0x0001fb3a: xor dh, dh; ret 0x7501; 
0x0001e339: xor dh, dh; ret; 
0x000a49f7: xor dl, 0x32; cli; call dword ptr [eax - 0x18]; 
0x000c964a: xor dl, 0x48; cli; call dword ptr [eax - 0x18]; 
0x0014805a: xor dl, byte ptr [ebp - 4]; jmp dword ptr [esi - 0x70]; 
0x001107b5: xor dl, cl; bnd call dword ptr [eax - 0x18]; 
0x0005e07e: xor dword ptr [0xee68fffa], esi; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x00063026: xor dword ptr [0xee68fffa], esi; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x00085253: xor dword ptr [eax + 0x4000000], 0x1b70808d; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x0010cee3: xor dword ptr [eax + 0x4000000], 0x2160808d; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x00085173: xor dword ptr [eax + 0x4000000], 0x2170808d; idiv bh; cmove edx, eax; mov eax, edx; ret; 
0x0012a671: xor dword ptr [eax + 0x63], 0xfffffff4; call dword ptr [eax + 0x55]; 
0x000a7533: xor dword ptr [eax + eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [edx + esi*2], 0xfa; call dword ptr [eax - 0x18]; 
0x00049a6d: xor dword ptr [eax + eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; 
0x00049a6d: xor dword ptr [eax + eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + esi*2], dl; cli; call dword ptr [eax - 0x18]; ret 0xfdf3; 
0x0003a76d: xor dword ptr [eax + eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; 
0x0003a76d: xor dword ptr [eax + eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + esi*2], edx; cli; call dword ptr [eax - 0x18]; ret 0xfee6; 
0x0014cb53: xor dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a26ab: xor dword ptr [eax + eax], ecx; add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0xeeb; 
0x00079d02: xor dword ptr [eax + eax], ecx; add eax, 0x16a2fb; mov eax, dword ptr [eax + 0xc60]; ret; 
0x00130039: xor dword ptr [eax - 0x3e], 0xfffffff4; call dword ptr [eax - 0x73]; 
0x00129f4a: xor dword ptr [eax - 0x73000000], 0xffffff94; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0011b5a0: xor dword ptr [eax - 0x73], edx; sub ah, 0x9c; cli; call dword ptr [eax - 0x18]; 
0x000b3edf: xor dword ptr [eax - 0xd], 0xffffffec; call dword ptr [eax - 1]; 
0x0008b420: xor dword ptr [eax - 2], 0xffffffff; jmp dword ptr [ebp - 1]; 
0x001217a3: xor dword ptr [eax], 0x60; cli; call dword ptr [eax - 0x18]; 
0x0012cff8: xor dword ptr [eax], 0xffffff8d; hlt; call dword ptr [eax - 0x73]; 
0x001107b4: xor dword ptr [eax], 0xffffffca; bnd call dword ptr [eax - 0x18]; 
0x000b4225: xor dword ptr [eax], 1; in eax, dx; dec dword ptr [edi]; inc ebp; ret 0xc483; 
0x00120aba: xor dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000c1e91: xor dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; xor edx, edi; call dword ptr [eax - 0x73]; 
0x000c1f01: xor dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x4a], ecx; cli; call dword ptr [eax - 0x73]; 
0x00121fd9: xor dword ptr [eax], eax; add byte ptr [ebp - 0x5b5b545], cl; dec dword ptr [ebp - 0x59fbc7d]; call dword ptr [edi + 0x6a]; 
0x0011fb68: xor dword ptr [eax], eax; add byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00121b88: xor dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x001200d3: xor dword ptr [eax], eax; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012017c: xor dword ptr [eax], eax; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00121475: xor dword ptr [eax], eax; add cl, al; retf 0x6509; xor edx, dword ptr [0x18]; push edx; call eax; 
0x001039d1: xor dword ptr [ebp - 0x76ea8b37], eax; ret; 
0x000b00d7: xor dword ptr [ebx + 0x48d04ec], eax; lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x0013a8ab: xor dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0001ce86: xor dword ptr [ebx + 0x75c9850b], ecx; mov bl, 0x8b; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg dword ptr [esp + ebp*2 - 6], esp; call dword ptr [eax - 0x73]; 
0x0010557b: xor dword ptr [ebx - 0x1074a], ecx; jmp dword ptr [ebp - 0x75]; 
0x00118d4e: xor dword ptr [ebx - 0x1077a], ecx; jmp dword ptr [ebp - 0x39]; 
0x00116646: xor dword ptr [ebx - 6], esp; call dword ptr [esi + 0x6a]; 
0x000d018a: xor dword ptr [ebx], 0x49; cli; call dword ptr [eax - 0x73]; 
0x00111b0c: xor dword ptr [ebx], 0x5a; cli; call dword ptr [eax - 0x73]; 
0x0006efa6: xor dword ptr [ecx + 0x40], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x00028be7: xor dword ptr [ecx + 0x5f5e5b10], ecx; ret; 
0x00116645: xor dword ptr [ecx], 0x63; cli; call dword ptr [esi + 0x6a]; 
0x000ef263: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005f4e8: xor dword ptr [ecx], ebp; ret; 
0x0009623b: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008321d: xor dword ptr [edi + 0x44], 0xfffffffa; call dword ptr [esi + 0x6a]; 
0x001350fb: xor dword ptr [edi + 0x63], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000515a5: xor dword ptr [edi - 1], 0xffffffff; inc dword ptr [ebx - 0x7a72fb14]; iretd; xor al, 0xfa; call dword ptr [ecx + 0x50]; 
0x001088ea: xor dword ptr [edi - 6], edx; call dword ptr [eax - 1]; 
0x0012307c: xor dword ptr [edx + ecx*2], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x00124586: xor dword ptr [edx + esi], 0; add esp, 8; pop ebx; ret; 
0x0003a6e8: xor dword ptr [edx], 0xfffffffa; call dword ptr [eax - 0x18]; 
0x000f842c: xor dword ptr [esi + 0x4a], 0xfffffffa; call dword ptr [eax - 0x73]; 
0x001202cd: xor dword ptr [esi + 0x68fffa5f], 0xffffffd6; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; add esp, 0x5f; cli; call dword ptr [eax - 0x18]; 
0x00151a5e: xor dword ptr [esi + edi*8 + 0x1ec381ff], 0xffffffe9; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015cfd5: xor dword ptr [esi - 0x7cffffff], 0xffffffed; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000fe19c: xor dword ptr [esi], 0x54; cli; call dword ptr [eax + 0x52]; 
0x000ce72e: xor dword ptr [esp + edi*8], 0xcf01fff9; jmp edi; 
0x00042d07: xor eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [eax + 0x39ff428d], dl; ret; 
0x00025635: xor eax, 0x2e; cli; call dword ptr [eax - 1]; 
0x0014ca4d: xor eax, 0x3000432; sbb al, 0x8b; jmp ebx; 
0x0013161d: xor eax, 0x468b0000; add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x000f7952: xor eax, 0x50245c8b; mov ecx, dword ptr [esp + 4]; mov eax, 0x134; call dword ptr gs:[0x10]; 
0x00135daa: xor eax, 0x55890000; rcl byte ptr [eax - 0x73], 0x87; mov ah, byte ptr [eax - 6]; call dword ptr [eax + 0x6a]; 
0x00124c83: xor eax, 0x5b14c483; pop esi; ret; 
0x0012a66a: xor eax, 0x62; hlt; call dword ptr [eax - 0x73]; 
0x00137bc7: xor eax, 0x718d0000; jmp dword ptr [esi - 0x7d]; 
0x001370a7: xor eax, 0x81b90000; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00137488: xor eax, 0x83010000; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00115d81: xor eax, 0x83fffa5c; iretd; call dword ptr [eax - 0x18]; 
0x000fc718: xor eax, 0x89000002; ret 0xe083; 
0x00137536: xor eax, 0x89010000; clc; pop ebx; pop esi; pop edi; ret; 
0x00076baa: xor eax, 0x8bc0b60f; mov esp, 0xf9df0085; inc dword ptr [ecx]; out dx, eax; jmp edi; 
0x00134801: xor eax, 0x8d500000; adc dword ptr [eax + 0x4a], -6; call dword ptr [eax + 0x6a]; 
0x00135159: xor eax, 0x8d500000; or dword ptr [edx + 0x60], 0xfffffffa; call dword ptr [eax + 0x6a]; 
0x00133283: xor eax, 0x8d500000; xchg byte ptr [ebx + 0x60], al; cli; call dword ptr [eax + 0x6a]; 
0x00133dfd: xor eax, 0x8d500000; xchg dword ptr [eax + 0x4a], edx; cli; call dword ptr [eax + 0x6a]; 
0x00122cf0: xor eax, 0x8dfffffd; add dword ptr [eax], 0x6b; cli; call dword ptr [eax - 0x73]; 
0x00081292: xor eax, 0xb8fffffd; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001499ae: xor eax, 0xc381ffff; iretd; pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00149915: xor eax, 0xc381ffff; push 0x300045e; sbb al, 0x8b; jmp ebx; 
0x0012de31: xor eax, 0xe8ffffff; adc al, 0; add byte ptr [ecx - 0x4f7c723b], cl; popal; cli; call dword ptr [ecx + 0x6a]; 
0x0005e07f: xor eax, 0xee68fffa; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x5e087; call dword ptr [eax - 0x18]; 
0x00063027: xor eax, 0xee68fffa; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jbe 0x6302f; call dword ptr [eax - 0x18]; 
0x00081d83: xor eax, 0xfedabeeb; mov dword ptr [edx + 4], eax; pop ebx; ret; 
0x001202c6: xor eax, 0xffffffa0; cli; call dword ptr [eax - 0x73]; 
0x0001af14: xor eax, dword ptr [0x18]; call eax; 
0x00030c35: xor eax, dword ptr [0x18]; jmp eax; 
0x0013d678: xor eax, dword ptr [0x18]; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x00077778: xor eax, dword ptr [0x18]; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0011b8a8: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b970: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00062754: xor eax, dword ptr [0x18]; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c68: xor eax, dword ptr [0x18]; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adf8: xor eax, dword ptr [0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9be: xor eax, dword ptr [0x18]; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b368: xor eax, dword ptr [0x18]; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d39: xor eax, dword ptr [0x18]; lea edx, [esp + 0x3c]; push edx; call eax; 
0x000607f3: xor eax, dword ptr [0x18]; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a7f: xor eax, dword ptr [0x18]; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00025f08: xor eax, dword ptr [0x18]; mov dword ptr [esp + 0x18], ecx; call eax; 
0x0003414c: xor eax, dword ptr [0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0001b21f: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x00025f57: xor eax, dword ptr [0x18]; push ecx; call eax; 
0x00058449: xor eax, dword ptr [0x18]; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c79: xor eax, dword ptr [0x18]; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x0014c948: xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f79f7: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00128f57: xor eax, dword ptr [eax]; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0002d46c: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000a4909: xor eax, dword ptr [ebp - 8]; dec dword ptr [ebx - 0x72e3dbac]; sub byte ptr [eax - 0x72], 0xfa; call dword ptr [eax - 0x73]; 
0x000d4f79: xor eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x00163c98: xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x000ed591: xor eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x00163c9e: xor eax, dword ptr [ecx]; ret 0xd089; 
0x0001af13: xor eax, dword ptr gs:[0x18]; call eax; 
0x00030c34: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013d677: xor eax, dword ptr gs:[0x18]; lea ebx, [esp + 0x28]; push ebx; call eax; 
0x00077777: xor eax, dword ptr gs:[0x18]; lea ecx, [esp + 0x28]; push ecx; call eax; 
0x0011b8a7: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0011b96f: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00062753: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x20]; push edx; call eax; 
0x00067c67: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x24]; push edx; call eax; 
0x0006adf7: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x28]; push edx; call eax; 
0x0013d9bd: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x30]; push edx; call eax; 
0x0006b367: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x34]; push edx; call eax; 
0x00040d38: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x3c]; push edx; call eax; 
0x000607f2: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xc4]; push edx; call eax; 
0x00065a7e: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0xcc]; push edx; call eax; 
0x00025f07: xor eax, dword ptr gs:[0x18]; mov dword ptr [esp + 0x18], ecx; call eax; 
0x0003414b: xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0001b21e: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00025f56: xor eax, dword ptr gs:[0x18]; push ecx; call eax; 
0x00058448: xor eax, dword ptr gs:[0x18]; push edi; push dword ptr [ecx - 0x64]; push edx; call eax; 
0x00051c78: xor eax, dword ptr gs:[0x18]; push edi; push dword ptr [esi - 0x64]; push edx; call eax; 
0x000fb571: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00035023: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00081cac: xor eax, eax; add esp, 0xc; ret; 
0x0002e94e: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000350a2: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000d0268: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xd0280; pop ebx; pop esi; ret; 
0x000bee23: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xbee30; add esp, 0xc; ret; 
0x00163153: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x163160; pop ebx; ret; 
0x000c718a: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000c71a5: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000c7151: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x0007a75e: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000eb522: xor eax, eax; lea ebx, [esp + 8]; mov eax, 0x13e; call dword ptr gs:[0x10]; 
0x0006e451: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0013f88c: xor eax, eax; mov dword ptr [ecx + 0x1e00], edi; pop ebx; pop esi; pop edi; ret; 
0x0008aaea: xor eax, eax; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000c099e: xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00101934: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x101940; ret; 
0x00040f40: xor eax, eax; mov esi, dword ptr [esp + 0x20]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f5e64: xor eax, eax; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0015d172: xor eax, eax; pop ebp; ret; 
0x0007b3f5: xor eax, eax; pop ebx; pop edi; ret; 
0x0001cedf: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00031b96: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00033678: xor eax, eax; pop ebx; pop esi; ret; 
0x00030a56: xor eax, eax; pop ebx; ret; 
0x0015e6f1: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x0015e190: xor eax, eax; pop edi; pop ebx; ret; 
0x000b2414: xor eax, eax; pop edi; pop esi; ret; 
0x0009c6f0: xor eax, eax; pop edi; ret; 
0x00080f0c: xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x001453d1: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00043a00: xor eax, eax; pop esi; pop edi; ret; 
0x0002e670: xor eax, eax; ret; 
0x000f47f5: xor eax, eax; sar ebp, 0x1f; sar esi, 0x1f; mov eax, 0x144; call dword ptr gs:[0x10]; 
0x0009f7cf: xor eax, eax; test edx, edx; sete al; ret; 
0x00034d1d: xor eax, ebx; pop ebx; ret; 
0x0002f6ab: xor eax, ecx; shr eax, 0x1f; ret; 
0x000f7b02: xor eax, edi; dec dword ptr [ecx + 0x94b8c6]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002e65f: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x2e645; ret; 
0x00034185: xor eax, edx; sub eax, edx; ret; 
0x0001914d: xor ebp, dword ptr [edx + edi*8]; call dword ptr [eax + 0x57]; 
0x00072df2: xor ebx, 0x40; cli; call dword ptr [eax - 0x18]; 
0x00106714: xor ebx, 0x56; cli; call dword ptr [eax - 0x18]; 
0x00030c9f: xor ebx, dword ptr [ebx]; add byte ptr [ebx - 0x77], dl; ret; 
0x0010d59f: xor ebx, dword ptr [ecx - 6]; call dword ptr [eax - 0x18]; 
0x00111b0d: xor ebx, dword ptr [edx - 6]; call dword ptr [eax - 0x73]; 
0x00030c9e: xor ebx, dword ptr fs:[ebx]; add byte ptr [ebx - 0x77], dl; ret; 
0x000b42fa: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000b42fa: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xb4310; pop ebx; ret; 
0x0001af3b: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000821fc: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000f6327: xor ebx, ebx; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0010eb15: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0011e8c7: xor ecx, 0x2f; cli; call dword ptr [eax + 0x51]; 
0x001177b4: xor ecx, 0x5c; cli; call dword ptr [eax - 0x18]; 
0x000faffa: xor ecx, 0xffffffff; int1; inc ebx; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000f56bc: xor ecx, dword ptr [ebx - 0x47dfdba4]; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00053ab4: xor ecx, dword ptr [ebx - 0x5df7b]; dec dword ptr [ecx + 0x29008bfa]; ret 0x953b; 
0x00028bf8: xor ecx, dword ptr [ebx - 0xbb68]; jmp dword ptr [ebp - 0x77]; 
0x0008abf4: xor ecx, dword ptr [ecx - 0x7c2a7607]; ret 0x3801; 
0x000d018b: xor ecx, dword ptr [ecx - 6]; call dword ptr [eax - 0x73]; 
0x0001b87d: xor ecx, dword ptr [edi]; add al, ch; push 0x81001216; ret 0x877b; 
0x000299d6: xor ecx, ecx; call 0x29480; mov edx, dword ptr [esp + 0x14]; mov eax, edx; add esp, 0xc; ret; 
0x000c07c5: xor ecx, ecx; cmp edx, 0x10d; cmovae esi, eax; mov eax, 0xdc; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000f926d: xor ecx, ecx; mov eax, 0x140; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0011b6b3: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0011fc38: xor ecx, ecx; mov eax, ecx; ret; 
0x00043823: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000bee5a: xor ecx, ecx; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x001265c5: xor ecx, ecx; test eax, eax; je 0x1265f0; mov eax, ecx; pop ebx; ret; 
0x001323b5: xor ecx, ecx; test eax, eax; je 0x1323e8; mov eax, ecx; pop ebx; ret; 
0x00132415: xor ecx, ecx; test eax, eax; je 0x132448; mov eax, ecx; pop ebx; ret; 
0x00110aaa: xor edi, 0x59; cli; call dword ptr [eax - 0x18]; 
0x000f724c: xor edi, dword ptr [eax + 0xcb]; call dword ptr gs:[0x10]; 
0x000f730c: xor edi, dword ptr [eax + 0xcc]; call dword ptr gs:[0x10]; 
0x000c216c: xor edi, dword ptr [eax + 0xce]; call dword ptr gs:[0x10]; 
0x0012d3b1: xor edi, dword ptr [ebp - 0x3b7c0012]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f2797: xor edi, dword ptr [ecx]; ret; 
0x00149d9e: xor edi, edi; inc dword ptr [ecx + 0x459dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149d05: xor edi, edi; inc dword ptr [ecx + 0x45a78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149bb5: xor edi, edi; inc dword ptr [ecx + 0x45bc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00149afe: xor edi, edi; inc dword ptr [ecx + 0x45c7fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001285b1: xor edi, edi; je 0x1285d9; adc al, 0xe8; mov ch, 0x56; cld; jmp dword ptr [ebp - 0x77]; 
0x0011baf6: xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x0016c4b6: xor edi, edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000505c9: xor edi, edx; call dword ptr [eax + 0x53]; 
0x0013dc78: xor edi, edx; call dword ptr [eax + 0x6a]; 
0x0003d5e2: xor edi, edx; call dword ptr [eax - 0x18]; 
0x00038246: xor edi, edx; call dword ptr [eax - 0x73]; 
0x00062b15: xor edi, edx; call dword ptr [eax - 0x77]; 
0x0005098c: xor edi, edx; call dword ptr [eax - 1]; 
0x0004353d: xor edi, edx; call dword ptr [ebx + 0x51]; 
0x00040c82: xor edi, edx; call dword ptr [ebx + 0x6a]; 
0x00050a7e: xor edi, edx; call dword ptr [ecx + 0x53]; 
0x0004a052: xor edi, edx; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x49fe9; ret 0x40c7; 
0x001160ae: xor edx, 0x48; cli; call dword ptr [eax - 0x18]; 
0x00114ccf: xor edx, 0x5b; cli; call dword ptr [eax - 1]; 
0x0012951e: xor edx, 0x61; cli; call dword ptr [eax - 0x18]; 
0x0013f7a7: xor edx, dword ptr [0x18]; call edx; 
0x0012147c: xor edx, dword ptr [0x18]; push edx; call eax; 
0x0001a6c5: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0013f7a6: xor edx, dword ptr gs:[0x18]; call edx; 
0x0012147b: xor edx, dword ptr gs:[0x18]; push edx; call eax; 
0x0001a6c4: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1938], edx; ret; 
0x0002e558: xor edx, edi; call dword ptr [eax + 0x53]; 
0x00114fec: xor edx, edi; call dword ptr [eax + 0x56]; 
0x0002a0d6: xor edx, edi; call dword ptr [eax + 0x57]; 
0x000fce87: xor edx, edi; call dword ptr [eax + 0x6a]; 
0x0002a2a4: xor edx, edi; call dword ptr [eax - 0x18]; 
0x0002a9da: xor edx, edi; call dword ptr [eax - 0x73]; 
0x000f9fe7: xor edx, edi; call dword ptr [eax - 1]; 
0x000e13d3: xor edx, edi; call dword ptr [ecx + 0x50]; 
0x000db4a6: xor edx, edi; dec dword ptr [ebp - 0x5b69671]; call dword ptr [eax - 0x17]; 
0x000c27f5: xor edx, edi; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000c272b: xor edx, edi; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000f8971: xor edx, edi; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00027f76: xor edx, edi; jmp dword ptr [ebp - 0x75]; 
0x00126689: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000b6c53: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00043855: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00073b75: xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00074015: xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x001026e3: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x1025c0; add esp, 4; ret; 
0x0003535a: xor edx, edx; mov eax, edi; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000ec08a: xor edx, edx; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00030e42: xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000eabae: xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010b1aa: xor edx, edx; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0008ae10: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00073767: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x00163c96: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x00163c9c: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x0012ba5e: xor esi, edi; jmp dword ptr [esi - 0x70]; 
0x00082760: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0007acd7: xor esi, esi; call dword ptr gs:[0x10]; 
0x000750a8: xor esi, esi; cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0007adcd: xor esi, esi; mov eax, ebp; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0002a762: xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00084740: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0016286c: xor esi, esi; ret 0xf01; 
0x0015a1a3: xor esi, esp; call dword ptr [ebx - 0x18]; 
0x00163bcc: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 

43626 gadgets found
